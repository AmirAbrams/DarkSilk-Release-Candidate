<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="txmempool_8cpp" kind="file" language="C++">
    <compoundname>txmempool.cpp</compoundname>
    <includes refid="txmempool_8h" local="yes">txmempool.h</includes>
    <incdepgraph>
      <node id="57108">
        <label>list</label>
      </node>
      <node id="57077">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="57142">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57140" relation="include">
        </childnode>
      </node>
      <node id="57155">
        <label>netinet/in.h</label>
      </node>
      <node id="57060">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57075" relation="include">
        </childnode>
        <childnode refid="57062" relation="include">
        </childnode>
      </node>
      <node id="57148">
        <label>arpa/inet.h</label>
      </node>
      <node id="57126">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="57067">
        <label>limits</label>
      </node>
      <node id="57095">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57075" relation="include">
        </childnode>
      </node>
      <node id="57096">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="57097" relation="include">
        </childnode>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57079" relation="include">
        </childnode>
      </node>
      <node id="57059">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="57060" relation="include">
        </childnode>
        <childnode refid="57083" relation="include">
        </childnode>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57086" relation="include">
        </childnode>
        <childnode refid="57087" relation="include">
        </childnode>
        <childnode refid="57123" relation="include">
        </childnode>
        <childnode refid="57121" relation="include">
        </childnode>
      </node>
      <node id="57087">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57088" relation="include">
        </childnode>
        <childnode refid="57089" relation="include">
        </childnode>
        <childnode refid="57090" relation="include">
        </childnode>
        <childnode refid="57099" relation="include">
        </childnode>
        <childnode refid="57101" relation="include">
        </childnode>
        <childnode refid="57120" relation="include">
        </childnode>
      </node>
      <node id="57119">
        <label>openssl/rand.h</label>
      </node>
      <node id="57084">
        <label>assert.h</label>
      </node>
      <node id="57072">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="57154">
        <label>net/if.h</label>
      </node>
      <node id="57058">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="57059" relation="include">
        </childnode>
        <childnode refid="57124" relation="include">
        </childnode>
        <childnode refid="57129" relation="include">
        </childnode>
        <childnode refid="57060" relation="include">
        </childnode>
        <childnode refid="57166" relation="include">
        </childnode>
      </node>
      <node id="57141">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="57097" relation="include">
        </childnode>
      </node>
      <node id="57128">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="57081">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="57082" relation="include">
        </childnode>
        <childnode refid="57062" relation="include">
        </childnode>
      </node>
      <node id="57129">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="57130" relation="include">
        </childnode>
        <childnode refid="57058" relation="include">
        </childnode>
        <childnode refid="57084" relation="include">
        </childnode>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57088" relation="include">
        </childnode>
        <childnode refid="57165" relation="include">
        </childnode>
      </node>
      <node id="57078">
        <label>sys/mman.h</label>
      </node>
      <node id="57075">
        <label>stdlib.h</label>
      </node>
      <node id="57162">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="57163" relation="include">
        </childnode>
        <childnode refid="57101" relation="include">
        </childnode>
        <childnode refid="57160" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
        <childnode refid="57088" relation="include">
        </childnode>
      </node>
      <node id="57088">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="57118">
        <label>openssl/crypto.h</label>
      </node>
      <node id="57057">
        <label>/home/dev/ds-160209/src/txmempool.cpp</label>
        <link refid="txmempool.cpp"/>
        <childnode refid="57058" relation="include">
        </childnode>
      </node>
      <node id="57151">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="57152" relation="include">
        </childnode>
        <childnode refid="57078" relation="include">
        </childnode>
        <childnode refid="57153" relation="include">
        </childnode>
        <childnode refid="57102" relation="include">
        </childnode>
        <childnode refid="57154" relation="include">
        </childnode>
        <childnode refid="57155" relation="include">
        </childnode>
        <childnode refid="57148" relation="include">
        </childnode>
        <childnode refid="57156" relation="include">
        </childnode>
        <childnode refid="57079" relation="include">
        </childnode>
        <childnode refid="57157" relation="include">
        </childnode>
        <childnode refid="57080" relation="include">
        </childnode>
        <childnode refid="57158" relation="include">
        </childnode>
      </node>
      <node id="57114">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="57092">
        <label>openssl/sha.h</label>
      </node>
      <node id="57158">
        <label>errno.h</label>
      </node>
      <node id="57066">
        <label>cassert</label>
      </node>
      <node id="57085">
        <label>stdexcept</label>
      </node>
      <node id="57101">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="57102" relation="include">
        </childnode>
        <childnode refid="57103" relation="include">
        </childnode>
        <childnode refid="57104" relation="include">
        </childnode>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57105" relation="include">
        </childnode>
        <childnode refid="57060" relation="include">
        </childnode>
        <childnode refid="57064" relation="include">
        </childnode>
        <childnode refid="57108" relation="include">
        </childnode>
        <childnode refid="57109" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57110" relation="include">
        </childnode>
        <childnode refid="57111" relation="include">
        </childnode>
        <childnode refid="57112" relation="include">
        </childnode>
        <childnode refid="57113" relation="include">
        </childnode>
        <childnode refid="57114" relation="include">
        </childnode>
        <childnode refid="57115" relation="include">
        </childnode>
        <childnode refid="57116" relation="include">
        </childnode>
        <childnode refid="57117" relation="include">
        </childnode>
        <childnode refid="57118" relation="include">
        </childnode>
        <childnode refid="57119" relation="include">
        </childnode>
        <childnode refid="57100" relation="include">
        </childnode>
        <childnode refid="57068" relation="include">
        </childnode>
      </node>
      <node id="57159">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="57160" relation="include">
        </childnode>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57150" relation="include">
        </childnode>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57062" relation="include">
        </childnode>
      </node>
      <node id="57113">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="57137">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57121" relation="include">
        </childnode>
        <childnode refid="57138" relation="include">
        </childnode>
        <childnode refid="57141" relation="include">
        </childnode>
      </node>
      <node id="57062">
        <label>string</label>
      </node>
      <node id="57164">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57075" relation="include">
        </childnode>
        <childnode refid="57101" relation="include">
        </childnode>
        <childnode refid="57144" relation="include">
        </childnode>
      </node>
      <node id="57064">
        <label>map</label>
      </node>
      <node id="57110">
        <label>boost/thread.hpp</label>
      </node>
      <node id="57161">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="57150" relation="include">
        </childnode>
        <childnode refid="57159" relation="include">
        </childnode>
        <childnode refid="57124" relation="include">
        </childnode>
        <childnode refid="57123" relation="include">
        </childnode>
        <childnode refid="57101" relation="include">
        </childnode>
        <childnode refid="57064" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
      </node>
      <node id="57133">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57134" relation="include">
        </childnode>
        <childnode refid="57101" relation="include">
        </childnode>
        <childnode refid="57112" relation="include">
        </childnode>
        <childnode refid="57137" relation="include">
        </childnode>
        <childnode refid="57142" relation="include">
        </childnode>
      </node>
      <node id="57097">
        <label>stddef.h</label>
      </node>
      <node id="57089">
        <label>boost/variant.hpp</label>
      </node>
      <node id="57157">
        <label>netdb.h</label>
      </node>
      <node id="57152">
        <label>sys/fcntl.h</label>
      </node>
      <node id="57130">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="57131" relation="include">
        </childnode>
      </node>
      <node id="57140">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57139" relation="include">
        </childnode>
      </node>
      <node id="57166">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="57061">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
        <childnode refid="57064" relation="include">
        </childnode>
        <childnode refid="57065" relation="include">
        </childnode>
        <childnode refid="57066" relation="include">
        </childnode>
        <childnode refid="57067" relation="include">
        </childnode>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57069" relation="include">
        </childnode>
        <childnode refid="57070" relation="include">
        </childnode>
        <childnode refid="57071" relation="include">
        </childnode>
        <childnode refid="57072" relation="include">
        </childnode>
        <childnode refid="57073" relation="include">
        </childnode>
        <childnode refid="57081" relation="include">
        </childnode>
      </node>
      <node id="57079">
        <label>limits.h</label>
      </node>
      <node id="57125">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="57149">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="57065" relation="include">
        </childnode>
        <childnode refid="57145" relation="include">
        </childnode>
      </node>
      <node id="57104">
        <label>sys/resource.h</label>
      </node>
      <node id="57115">
        <label>openssl/bio.h</label>
      </node>
      <node id="57147">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="57150">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57151" relation="include">
        </childnode>
      </node>
      <node id="57091">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="57083" relation="include">
        </childnode>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57092" relation="include">
        </childnode>
        <childnode refid="57093" relation="include">
        </childnode>
        <childnode refid="57094" relation="include">
        </childnode>
        <childnode refid="57095" relation="include">
        </childnode>
        <childnode refid="57096" relation="include">
        </childnode>
        <childnode refid="57098" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
      </node>
      <node id="57156">
        <label>ifaddrs.h</label>
      </node>
      <node id="57120">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="57101" relation="include">
        </childnode>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57075" relation="include">
        </childnode>
        <childnode refid="57121" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
        <childnode refid="57122" relation="include">
        </childnode>
      </node>
      <node id="57102">
        <label>sys/types.h</label>
      </node>
      <node id="57136">
        <label>ios</label>
      </node>
      <node id="57076">
        <label>string.h</label>
      </node>
      <node id="57082">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="57070">
        <label>cstdio</label>
      </node>
      <node id="57127">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="57117">
        <label>openssl/buffer.h</label>
      </node>
      <node id="57071">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="57143">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="57058" relation="include">
        </childnode>
        <childnode refid="57144" relation="include">
        </childnode>
        <childnode refid="57087" relation="include">
        </childnode>
        <childnode refid="57134" relation="include">
        </childnode>
        <childnode refid="57132" relation="include">
        </childnode>
        <childnode refid="57162" relation="include">
        </childnode>
        <childnode refid="57108" relation="include">
        </childnode>
        <childnode refid="57165" relation="include">
        </childnode>
      </node>
      <node id="57112">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="57165">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="57090">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="57091" relation="include">
        </childnode>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57083" relation="include">
        </childnode>
        <childnode refid="57085" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
      </node>
      <node id="57080">
        <label>unistd.h</label>
      </node>
      <node id="57063">
        <label>vector</label>
      </node>
      <node id="57099">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57083" relation="include">
        </childnode>
        <childnode refid="57100" relation="include">
        </childnode>
        <childnode refid="57085" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
        <childnode refid="57068" relation="include">
        </childnode>
      </node>
      <node id="57144">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="57145" relation="include">
        </childnode>
        <childnode refid="57146" relation="include">
        </childnode>
        <childnode refid="57088" relation="include">
        </childnode>
        <childnode refid="57147" relation="include">
        </childnode>
        <childnode refid="57119" relation="include">
        </childnode>
        <childnode refid="57148" relation="include">
        </childnode>
        <childnode refid="57149" relation="include">
        </childnode>
        <childnode refid="57150" relation="include">
        </childnode>
        <childnode refid="57159" relation="include">
        </childnode>
        <childnode refid="57161" relation="include">
        </childnode>
        <childnode refid="57091" relation="include">
        </childnode>
        <childnode refid="57134" relation="include">
        </childnode>
      </node>
      <node id="57093">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="57111">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="57109">
        <label>utility</label>
      </node>
      <node id="57131">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="57059" relation="include">
        </childnode>
        <childnode refid="57132" relation="include">
        </childnode>
      </node>
      <node id="57107">
        <label>sstream</label>
      </node>
      <node id="57116">
        <label>openssl/evp.h</label>
      </node>
      <node id="57105">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="57066" relation="include">
        </childnode>
        <childnode refid="57106" relation="include">
        </childnode>
        <childnode refid="57107" relation="include">
        </childnode>
        <childnode refid="57085" relation="include">
        </childnode>
      </node>
      <node id="57068">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="57134">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="57073" relation="include">
        </childnode>
        <childnode refid="57061" relation="include">
        </childnode>
        <childnode refid="57135" relation="include">
        </childnode>
        <childnode refid="57084" relation="include">
        </childnode>
        <childnode refid="57136" relation="include">
        </childnode>
        <childnode refid="57067" relation="include">
        </childnode>
        <childnode refid="57064" relation="include">
        </childnode>
        <childnode refid="57065" relation="include">
        </childnode>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57076" relation="include">
        </childnode>
        <childnode refid="57109" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
      </node>
      <node id="57098">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57097" relation="include">
        </childnode>
        <childnode refid="57079" relation="include">
        </childnode>
      </node>
      <node id="57103">
        <label>sys/time.h</label>
      </node>
      <node id="57106">
        <label>iostream</label>
      </node>
      <node id="57145">
        <label>deque</label>
      </node>
      <node id="57083">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="57084" relation="include">
        </childnode>
        <childnode refid="57069" relation="include">
        </childnode>
        <childnode refid="57085" relation="include">
        </childnode>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
      </node>
      <node id="57153">
        <label>sys/socket.h</label>
      </node>
      <node id="57139">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="57084" relation="include">
        </childnode>
        <childnode refid="57097" relation="include">
        </childnode>
        <childnode refid="57076" relation="include">
        </childnode>
        <childnode refid="57062" relation="include">
        </childnode>
      </node>
      <node id="57146">
        <label>boost/array.hpp</label>
      </node>
      <node id="57100">
        <label>openssl/bn.h</label>
      </node>
      <node id="57132">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="57133" relation="include">
        </childnode>
        <childnode refid="57143" relation="include">
        </childnode>
        <childnode refid="57064" relation="include">
        </childnode>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57109" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
      </node>
      <node id="57123">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="57068" relation="include">
        </childnode>
      </node>
      <node id="57073">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="57074" relation="include">
        </childnode>
        <childnode refid="57076" relation="include">
        </childnode>
        <childnode refid="57062" relation="include">
        </childnode>
        <childnode refid="57077" relation="include">
        </childnode>
        <childnode refid="57064" relation="include">
        </childnode>
        <childnode refid="57078" relation="include">
        </childnode>
        <childnode refid="57079" relation="include">
        </childnode>
        <childnode refid="57080" relation="include">
        </childnode>
      </node>
      <node id="57160">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="57099" relation="include">
        </childnode>
        <childnode refid="57083" relation="include">
        </childnode>
        <childnode refid="57063" relation="include">
        </childnode>
      </node>
      <node id="57065">
        <label>set</label>
      </node>
      <node id="57135">
        <label>algorithm</label>
      </node>
      <node id="57094">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="57068" relation="include">
        </childnode>
        <childnode refid="57075" relation="include">
        </childnode>
      </node>
      <node id="57086">
        <label>util.h</label>
      </node>
      <node id="57121">
        <label>stdio.h</label>
      </node>
      <node id="57074">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="57075" relation="include">
        </childnode>
      </node>
      <node id="57069">
        <label>cstring</label>
      </node>
      <node id="57124">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="57125" relation="include">
        </childnode>
        <childnode refid="57126" relation="include">
        </childnode>
        <childnode refid="57127" relation="include">
        </childnode>
        <childnode refid="57077" relation="include">
        </childnode>
        <childnode refid="57128" relation="include">
        </childnode>
      </node>
      <node id="57122">
        <label>inttypes.h</label>
      </node>
      <node id="57138">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="57139" relation="include">
        </childnode>
        <childnode refid="57140" relation="include">
        </childnode>
      </node>
      <node id="57163">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="57059" relation="include">
        </childnode>
        <childnode refid="57098" relation="include">
        </childnode>
        <childnode refid="57164" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txmempool_8h" kindref="compound">txmempool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_c_tx_mem_pool_1a82147548cfa962975690d1926b717c1c" refkind="member"><highlight class="normal"><ref refid="class_c_tx_mem_pool_1a82147548cfa962975690d1926b717c1c" kindref="member">CTxMemPool::CTxMemPool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref>&amp;<sp/>_minRelayFee)<sp/>:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>nTransactionsUpdated(0),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>minRelayFee(_minRelayFee)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>checks<sp/>off<sp/>by<sp/>default<sp/>for<sp/>performance,<sp/>because<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accepting<sp/>transactions<sp/>becomes<sp/>O(N^2)<sp/>where<sp/>N<sp/>is<sp/>the<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>transactions<sp/>in<sp/>the<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1a1752e79ce537972fe87e252b9d07d2e0" kindref="member">fSanityCheck</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>25<sp/>blocks<sp/>is<sp/>a<sp/>compromise<sp/>between<sp/>using<sp/>a<sp/>lot<sp/>of<sp/>disk/memory<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>to<sp/>give<sp/>accurate<sp/>estimates<sp/>to<sp/>people<sp/>who<sp/>might<sp/>be<sp/>willing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>wait<sp/>a<sp/>day<sp/>or<sp/>two<sp/>to<sp/>save<sp/>a<sp/>fraction<sp/>of<sp/>a<sp/>penny<sp/>in<sp/>fees.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Confirmation<sp/>times<sp/>for<sp/>very-low-fee<sp/>transactions<sp/>that<sp/>take<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>an<sp/>hour<sp/>or<sp/>three<sp/>to<sp/>confirm<sp/>are<sp/>highly<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1a435be1fdb4567cd7dd981a49cf633c99" kindref="member">minerPolicyEstimator</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_miner_policy_estimator" kindref="compound">CMinerPolicyEstimator</ref>(25);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_c_tx_mem_pool_1a038108efea0c4312e5bed2ce064702b2" refkind="member"><highlight class="normal"><ref refid="class_c_tx_mem_pool_1a038108efea0c4312e5bed2ce064702b2" kindref="member">CTxMemPool::~CTxMemPool</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a435be1fdb4567cd7dd981a49cf633c99" kindref="member">minerPolicyEstimator</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" kindref="member">CTxMemPool::GetTransactionsUpdated</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="34"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTransactionsUpdated;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_c_tx_mem_pool_1a3039b67e5eebaa3ff830261c192816f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a3039b67e5eebaa3ff830261c192816f2" kindref="member">CTxMemPool::AddTransactionsUpdated</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>nTransactionsUpdated<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_c_tx_mem_pool_1a1203ac5cf3bdb88af4922705afad555d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a1203ac5cf3bdb88af4922705afad555d" kindref="member">CTxMemPool::addUnchecked</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>memory<sp/>pool<sp/>without<sp/>checking<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>by<sp/>main.cpp<sp/>AcceptToMemoryPool(),<sp/>which<sp/>DOES<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>appropriate<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>]<sp/>=<sp/>tx;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" kindref="member">mapNextTx</ref>[tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[i].prevout]<sp/>=<sp/><ref refid="class_c_in_point" kindref="compound">CInPoint</ref>(&amp;<ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>[hash],<sp/>i);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTransactionsUpdated++;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_c_tx_mem_pool_1a258e23e3a434045d522a8cebc5a039ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a258e23e3a434045d522a8cebc5a039ce" kindref="member">CTxMemPool::remove</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fRecursive)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>transaction<sp/>from<sp/>memory<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>.count(hash))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fRecursive)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;COutPoint,<sp/>CInPoint&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" kindref="member">mapNextTx</ref>.find(<ref refid="class_c_out_point" kindref="compound">COutPoint</ref>(hash,<sp/>i));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" kindref="member">mapNextTx</ref>.end())</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(*it-&gt;second.ptx,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" kindref="member">mapNextTx</ref>.erase(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>.erase(hash);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTransactionsUpdated++;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_c_tx_mem_pool_1ab6f7c0b3ddb8383767d97d22103ffd9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1ab6f7c0b3ddb8383767d97d22103ffd9b" kindref="member">CTxMemPool::removeConflicts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>transactions<sp/>which<sp/>depend<sp/>on<sp/>inputs<sp/>of<sp/>tx,<sp/>recursively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>&amp;txin,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;COutPoint,<sp/>CInPoint&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" kindref="member">mapNextTx</ref>.find(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" kindref="member">mapNextTx</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;txConflict<sp/>=<sp/>*it-&gt;second.ptx;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txConflict<sp/>!=<sp/>tx)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(txConflict,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_c_tx_mem_pool_1a6dba6bce4139392751321438a29b6b09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a6dba6bce4139392751321438a29b6b09" kindref="member">CTxMemPool::clear</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>.clear();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" kindref="member">mapNextTx</ref>.clear();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>++nTransactionsUpdated;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_c_tx_mem_pool_1a42fa7d41a45562d02e356f2e7708bb02" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a42fa7d41a45562d02e356f2e7708bb02" kindref="member">CTxMemPool::queryHashes</ref>(std::vector&lt;uint256&gt;&amp;<sp/>vtxid)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>vtxid.clear();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>vtxid.reserve(<ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>.size());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CTransaction&gt;::iterator<sp/>mi<sp/>=<sp/><ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>.begin();<sp/>mi<sp/>!=<sp/><ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>.end();<sp/>++mi)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtxid.push_back((*mi).first);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_c_tx_mem_pool_1a8c19232d17e668c6690721b0f5088960" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a8c19232d17e668c6690721b0f5088960" kindref="member">CTxMemPool::lookup</ref>(<ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CTransaction&gt;::const_iterator<sp/>i<sp/>=<sp/><ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>.find(hash);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/><ref refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" kindref="member">mapTx</ref>.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_c_tx_mem_pool_1a0a05d7b50b9c2a387182402e60475da6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a0a05d7b50b9c2a387182402e60475da6" kindref="member">CTxMemPool::WriteFeeEstimates</ref>(<ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref>&amp;<sp/>fileout)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="127"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileout<sp/>&lt;&lt;<sp/>120000;<sp/></highlight><highlight class="comment">//<sp/>version<sp/>required<sp/>to<sp/>read:<sp/>0.12.00<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileout<sp/>&lt;&lt;<sp/>CLIENT_VERSION;<sp/></highlight><highlight class="comment">//<sp/>version<sp/>that<sp/>wrote<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1a435be1fdb4567cd7dd981a49cf633c99" kindref="member">minerPolicyEstimator</ref>-&gt;<ref refid="class_c_miner_policy_estimator_1aeb98d716f91294503bd5738589ffe6c3" kindref="member">Write</ref>(fileout);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CTxMemPool::WriteFeeEstimates()<sp/>:<sp/>unable<sp/>to<sp/>write<sp/>policy<sp/>estimator<sp/>data<sp/>(non-fatal)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_c_tx_mem_pool_1a0dbbcb6a3b7e1a6c564410668c12cd4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool_1a0dbbcb6a3b7e1a6c564410668c12cd4f" kindref="member">CTxMemPool::ReadFeeEstimates</ref>(<ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref>&amp;<sp/>filein)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersionRequired,<sp/>nVersionThatWrote;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filein<sp/>&gt;&gt;<sp/>nVersionRequired<sp/>&gt;&gt;<sp/>nVersionThatWrote;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nVersionRequired<sp/>&gt;<sp/>CLIENT_VERSION)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CTxMemPool::ReadFeeEstimates()<sp/>:<sp/>up-version<sp/>(%d)<sp/>fee<sp/>estimate<sp/>file&quot;</highlight><highlight class="normal">,<sp/>nVersionRequired);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_mem_pool_1a435be1fdb4567cd7dd981a49cf633c99" kindref="member">minerPolicyEstimator</ref>-&gt;<ref refid="class_c_miner_policy_estimator_1a86e709bc44e9f6f597519173f15595ff" kindref="member">Read</ref>(filein,<sp/>minRelayFee);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CTxMemPool::ReadFeeEstimates()<sp/>:<sp/>unable<sp/>to<sp/>read<sp/>policy<sp/>estimator<sp/>data<sp/>(non-fatal)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/txmempool.cpp"/>
  </compounddef>
</doxygen>
