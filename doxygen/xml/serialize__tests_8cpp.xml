<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="serialize__tests_8cpp" kind="file" language="C++">
    <compoundname>serialize_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="serialize_8h" local="yes">serialize.h</includes>
    <incdepgraph>
      <node id="26359">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="26349">
        <label>limits</label>
      </node>
      <node id="26354">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="26363">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="26364" relation="include">
        </childnode>
        <childnode refid="26343" relation="include">
        </childnode>
      </node>
      <node id="26342">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="26360">
        <label>sys/mman.h</label>
      </node>
      <node id="26357">
        <label>stdlib.h</label>
      </node>
      <node id="26348">
        <label>cassert</label>
      </node>
      <node id="26343">
        <label>string</label>
      </node>
      <node id="26346">
        <label>map</label>
      </node>
      <node id="26345">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="26343" relation="include">
        </childnode>
        <childnode refid="26344" relation="include">
        </childnode>
        <childnode refid="26346" relation="include">
        </childnode>
        <childnode refid="26347" relation="include">
        </childnode>
        <childnode refid="26348" relation="include">
        </childnode>
        <childnode refid="26349" relation="include">
        </childnode>
        <childnode refid="26350" relation="include">
        </childnode>
        <childnode refid="26351" relation="include">
        </childnode>
        <childnode refid="26352" relation="include">
        </childnode>
        <childnode refid="26353" relation="include">
        </childnode>
        <childnode refid="26354" relation="include">
        </childnode>
        <childnode refid="26355" relation="include">
        </childnode>
        <childnode refid="26363" relation="include">
        </childnode>
      </node>
      <node id="26361">
        <label>limits.h</label>
      </node>
      <node id="26358">
        <label>string.h</label>
      </node>
      <node id="26364">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="26352">
        <label>cstdio</label>
      </node>
      <node id="26353">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="26362">
        <label>unistd.h</label>
      </node>
      <node id="26344">
        <label>vector</label>
      </node>
      <node id="26341">
        <label>/home/dev/ds-160209/src/test/serialize_tests.cpp</label>
        <link refid="serialize_tests.cpp"/>
        <childnode refid="26342" relation="include">
        </childnode>
        <childnode refid="26343" relation="include">
        </childnode>
        <childnode refid="26344" relation="include">
        </childnode>
        <childnode refid="26345" relation="include">
        </childnode>
      </node>
      <node id="26350">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="26355">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="26356" relation="include">
        </childnode>
        <childnode refid="26358" relation="include">
        </childnode>
        <childnode refid="26343" relation="include">
        </childnode>
        <childnode refid="26359" relation="include">
        </childnode>
        <childnode refid="26346" relation="include">
        </childnode>
        <childnode refid="26360" relation="include">
        </childnode>
        <childnode refid="26361" relation="include">
        </childnode>
        <childnode refid="26362" relation="include">
        </childnode>
      </node>
      <node id="26347">
        <label>set</label>
      </node>
      <node id="26356">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="26357" relation="include">
        </childnode>
      </node>
      <node id="26351">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="serialize__tests_8cpp_1a0528829bf2541df9b7c85e3a309ee435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(varints)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>varints</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/serialize_tests.cpp" line="12" column="1" bodyfile="/home/dev/ds-160209/src/test/serialize_tests.cpp" bodystart="12" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serialize_8h" kindref="compound">serialize.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">BOOST_AUTO_TEST_SUITE(serialize_tests)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="serialize__tests_8cpp_1a0528829bf2541df9b7c85e3a309ee435" refkind="member"><highlight class="normal"><ref refid="serialize__tests_8cpp_1a0528829bf2541df9b7c85e3a309ee435" kindref="member">BOOST_AUTO_TEST_CASE</ref>(varints)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>encode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream_1a79e10daad6db0f94aea1e811eb167378" kindref="member">CDataStream::size_type</ref><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(i);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">::GetSerializeSize</ref>(<ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(i),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(size<sp/>==<sp/>ss.<ref refid="class_c_data_stream_1ac6567f6d600d644d9855b52bb59049cd" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint64<sp/>i<sp/>=<sp/>0;<sp/><sp/>i<sp/>&lt;<sp/>100000000000ULL;<sp/>i<sp/>+=<sp/>999999937)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(i);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">::GetSerializeSize</ref>(<ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(i),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(size<sp/>==<sp/>ss.<ref refid="class_c_data_stream_1ac6567f6d600d644d9855b52bb59049cd" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/><ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(j);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_MESSAGE(i<sp/>==<sp/>j,<sp/></highlight><highlight class="stringliteral">&quot;decoded:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>expected:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint64<sp/>i<sp/>=<sp/>0;<sp/><sp/>i<sp/>&lt;<sp/>100000000000ULL;<sp/>i<sp/>+=<sp/>999999937)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/>j;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/><ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(j);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_MESSAGE(i<sp/>==<sp/>j,<sp/></highlight><highlight class="stringliteral">&quot;decoded:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>expected:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/test/serialize_tests.cpp"/>
  </compounddef>
</doxygen>
