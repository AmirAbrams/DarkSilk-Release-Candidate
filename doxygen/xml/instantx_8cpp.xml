<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="instantx_8cpp" kind="file" language="C++">
    <compoundname>instantx.cpp</compoundname>
    <includes refid="sync_8h" local="yes">sync.h</includes>
    <includes refid="net_8h" local="yes">net.h</includes>
    <includes refid="key_8h" local="yes">key.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="base58_8h" local="yes">base58.h</includes>
    <includes refid="protocol_8h" local="yes">protocol.h</includes>
    <includes refid="instantx_8h" local="yes">instantx.h</includes>
    <includes refid="activestormnode_8h" local="yes">activestormnode.h</includes>
    <includes refid="stormnode-sync_8h" local="yes">stormnode-sync.h</includes>
    <includes refid="stormnodeman_8h" local="yes">stormnodeman.h</includes>
    <includes refid="sandstorm_8h" local="yes">sandstorm.h</includes>
    <includes refid="spork_8h" local="yes">spork.h</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <incdepgraph>
      <node id="5507">
        <label>list</label>
      </node>
      <node id="5450">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="5561">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
      </node>
      <node id="5487">
        <label>netinet/in.h</label>
      </node>
      <node id="5506">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
      </node>
      <node id="5458">
        <label>arpa/inet.h</label>
      </node>
      <node id="5448">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="5467">
        <label>limits</label>
      </node>
      <node id="5574">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="5522">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
      </node>
      <node id="5538">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="5506" relation="include">
        </childnode>
        <childnode refid="5494" relation="include">
        </childnode>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5539" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5499" relation="include">
        </childnode>
        <childnode refid="5535" relation="include">
        </childnode>
      </node>
      <node id="5523">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="5524" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5478" relation="include">
        </childnode>
      </node>
      <node id="5532">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5455" relation="include">
        </childnode>
        <childnode refid="5533" relation="include">
        </childnode>
        <childnode refid="5530" relation="include">
        </childnode>
        <childnode refid="5493" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5534" relation="include">
        </childnode>
      </node>
      <node id="5457">
        <label>openssl/rand.h</label>
      </node>
      <node id="5542">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="5543" relation="include">
        </childnode>
        <childnode refid="5545" relation="include">
        </childnode>
        <childnode refid="5534" relation="include">
        </childnode>
        <childnode refid="5506" relation="include">
        </childnode>
        <childnode refid="5507" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5508" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5495">
        <label>assert.h</label>
      </node>
      <node id="5472">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="5486">
        <label>net/if.h</label>
      </node>
      <node id="5572">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5540" relation="include">
        </childnode>
        <childnode refid="5571" relation="include">
        </childnode>
      </node>
      <node id="5567">
        <label>stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="5568" relation="include">
        </childnode>
        <childnode refid="5549" relation="include">
        </childnode>
      </node>
      <node id="5550">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5551" relation="include">
        </childnode>
        <childnode refid="5506" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
      </node>
      <node id="5570">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="5560">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="5524" relation="include">
        </childnode>
      </node>
      <node id="5451">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="5531">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="5492" relation="include">
        </childnode>
        <childnode refid="5530" relation="include">
        </childnode>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5473" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5480">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="5481" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
      </node>
      <node id="5551">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="5552" relation="include">
        </childnode>
        <childnode refid="5550" relation="include">
        </childnode>
        <childnode refid="5495" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5455" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
      </node>
      <node id="5477">
        <label>sys/mman.h</label>
      </node>
      <node id="5475">
        <label>stdlib.h</label>
      </node>
      <node id="5564">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="5546" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5492" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5455" relation="include">
        </childnode>
      </node>
      <node id="5455">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="5517">
        <label>openssl/crypto.h</label>
      </node>
      <node id="5568">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5549" relation="include">
        </childnode>
        <childnode refid="5569" relation="include">
        </childnode>
        <childnode refid="5570" relation="include">
        </childnode>
      </node>
      <node id="5482">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="5483" relation="include">
        </childnode>
        <childnode refid="5477" relation="include">
        </childnode>
        <childnode refid="5484" relation="include">
        </childnode>
        <childnode refid="5485" relation="include">
        </childnode>
        <childnode refid="5486" relation="include">
        </childnode>
        <childnode refid="5487" relation="include">
        </childnode>
        <childnode refid="5458" relation="include">
        </childnode>
        <childnode refid="5488" relation="include">
        </childnode>
        <childnode refid="5478" relation="include">
        </childnode>
        <childnode refid="5489" relation="include">
        </childnode>
        <childnode refid="5479" relation="include">
        </childnode>
        <childnode refid="5490" relation="include">
        </childnode>
      </node>
      <node id="5513">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="5519">
        <label>openssl/sha.h</label>
      </node>
      <node id="5490">
        <label>errno.h</label>
      </node>
      <node id="5466">
        <label>cassert</label>
      </node>
      <node id="5496">
        <label>stdexcept</label>
      </node>
      <node id="5500">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="5485" relation="include">
        </childnode>
        <childnode refid="5501" relation="include">
        </childnode>
        <childnode refid="5502" relation="include">
        </childnode>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5503" relation="include">
        </childnode>
        <childnode refid="5506" relation="include">
        </childnode>
        <childnode refid="5465" relation="include">
        </childnode>
        <childnode refid="5507" relation="include">
        </childnode>
        <childnode refid="5508" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5509" relation="include">
        </childnode>
        <childnode refid="5510" relation="include">
        </childnode>
        <childnode refid="5511" relation="include">
        </childnode>
        <childnode refid="5512" relation="include">
        </childnode>
        <childnode refid="5513" relation="include">
        </childnode>
        <childnode refid="5514" relation="include">
        </childnode>
        <childnode refid="5515" relation="include">
        </childnode>
        <childnode refid="5516" relation="include">
        </childnode>
        <childnode refid="5517" relation="include">
        </childnode>
        <childnode refid="5457" relation="include">
        </childnode>
        <childnode refid="5497" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
      </node>
      <node id="5491">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="5492" relation="include">
        </childnode>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5461" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
      </node>
      <node id="5512">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="5556">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5535" relation="include">
        </childnode>
        <childnode refid="5557" relation="include">
        </childnode>
        <childnode refid="5560" relation="include">
        </childnode>
      </node>
      <node id="5462">
        <label>string</label>
      </node>
      <node id="5541">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="5542" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
        <childnode refid="5546" relation="include">
        </childnode>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5548" relation="include">
        </childnode>
        <childnode refid="5549" relation="include">
        </childnode>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5545" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5534" relation="include">
        </childnode>
      </node>
      <node id="5547">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5452" relation="include">
        </childnode>
      </node>
      <node id="5465">
        <label>map</label>
      </node>
      <node id="5509">
        <label>boost/thread.hpp</label>
      </node>
      <node id="5498">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="5461" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5499" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5465" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5569">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5452" relation="include">
        </childnode>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
        <childnode refid="5549" relation="include">
        </childnode>
        <childnode refid="5499" relation="include">
        </childnode>
      </node>
      <node id="5565">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="5506" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5456" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
      </node>
      <node id="5555">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5526" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5511" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
      </node>
      <node id="5524">
        <label>stddef.h</label>
      </node>
      <node id="5533">
        <label>boost/variant.hpp</label>
      </node>
      <node id="5537">
        <label>instantx.h</label>
        <link refid="instantx_8h"/>
        <childnode refid="5538" relation="include">
        </childnode>
      </node>
      <node id="5489">
        <label>netdb.h</label>
      </node>
      <node id="5483">
        <label>sys/fcntl.h</label>
      </node>
      <node id="5552">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5559">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5558" relation="include">
        </childnode>
      </node>
      <node id="5563">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="5464">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5465" relation="include">
        </childnode>
        <childnode refid="5460" relation="include">
        </childnode>
        <childnode refid="5466" relation="include">
        </childnode>
        <childnode refid="5467" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5469" relation="include">
        </childnode>
        <childnode refid="5470" relation="include">
        </childnode>
        <childnode refid="5471" relation="include">
        </childnode>
        <childnode refid="5472" relation="include">
        </childnode>
        <childnode refid="5473" relation="include">
        </childnode>
        <childnode refid="5480" relation="include">
        </childnode>
      </node>
      <node id="5478">
        <label>limits.h</label>
      </node>
      <node id="5447">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="5502">
        <label>sys/resource.h</label>
      </node>
      <node id="5459">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="5460" relation="include">
        </childnode>
        <childnode refid="5453" relation="include">
        </childnode>
      </node>
      <node id="5514">
        <label>openssl/bio.h</label>
      </node>
      <node id="5548">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="5473" relation="include">
        </childnode>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5545" relation="include">
        </childnode>
      </node>
      <node id="5456">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="5461">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5482" relation="include">
        </childnode>
      </node>
      <node id="5545">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5530" relation="include">
        </childnode>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5456" relation="include">
        </childnode>
        <childnode refid="5533" relation="include">
        </childnode>
      </node>
      <node id="5518">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="5494" relation="include">
        </childnode>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5519" relation="include">
        </childnode>
        <childnode refid="5520" relation="include">
        </childnode>
        <childnode refid="5521" relation="include">
        </childnode>
        <childnode refid="5522" relation="include">
        </childnode>
        <childnode refid="5523" relation="include">
        </childnode>
        <childnode refid="5525" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5488">
        <label>ifaddrs.h</label>
      </node>
      <node id="5534">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
        <childnode refid="5535" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5536" relation="include">
        </childnode>
      </node>
      <node id="5485">
        <label>sys/types.h</label>
      </node>
      <node id="5528">
        <label>ios</label>
      </node>
      <node id="5476">
        <label>string.h</label>
      </node>
      <node id="5481">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="5470">
        <label>cstdio</label>
      </node>
      <node id="5449">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="5516">
        <label>openssl/buffer.h</label>
      </node>
      <node id="5471">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="5549">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="5550" relation="include">
        </childnode>
        <childnode refid="5452" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5526" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5507" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
      </node>
      <node id="5511">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="5571">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5452" relation="include">
        </childnode>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
        <childnode refid="5549" relation="include">
        </childnode>
        <childnode refid="5569" relation="include">
        </childnode>
      </node>
      <node id="5562">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="5530">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="5518" relation="include">
        </childnode>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5494" relation="include">
        </childnode>
        <childnode refid="5496" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5479">
        <label>unistd.h</label>
      </node>
      <node id="5544">
        <label>db_cxx.h</label>
      </node>
      <node id="5463">
        <label>vector</label>
      </node>
      <node id="5493">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5494" relation="include">
        </childnode>
        <childnode refid="5497" relation="include">
        </childnode>
        <childnode refid="5496" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
      </node>
      <node id="5452">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="5453" relation="include">
        </childnode>
        <childnode refid="5454" relation="include">
        </childnode>
        <childnode refid="5455" relation="include">
        </childnode>
        <childnode refid="5456" relation="include">
        </childnode>
        <childnode refid="5457" relation="include">
        </childnode>
        <childnode refid="5458" relation="include">
        </childnode>
        <childnode refid="5459" relation="include">
        </childnode>
        <childnode refid="5461" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
        <childnode refid="5498" relation="include">
        </childnode>
        <childnode refid="5518" relation="include">
        </childnode>
        <childnode refid="5526" relation="include">
        </childnode>
      </node>
      <node id="5520">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="5510">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="5508">
        <label>utility</label>
      </node>
      <node id="5553">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
      </node>
      <node id="5505">
        <label>sstream</label>
      </node>
      <node id="5566">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="5529">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="5473" relation="include">
        </childnode>
        <childnode refid="5530" relation="include">
        </childnode>
        <childnode refid="5496" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5515">
        <label>openssl/evp.h</label>
      </node>
      <node id="5445">
        <label>/home/dev/ds-160209/src/instantx.cpp</label>
        <link refid="instantx.cpp"/>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5452" relation="include">
        </childnode>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
        <childnode refid="5537" relation="include">
        </childnode>
        <childnode refid="5540" relation="include">
        </childnode>
        <childnode refid="5567" relation="include">
        </childnode>
        <childnode refid="5571" relation="include">
        </childnode>
        <childnode refid="5572" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5574" relation="include">
        </childnode>
        <childnode refid="5570" relation="include">
        </childnode>
      </node>
      <node id="5503">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="5466" relation="include">
        </childnode>
        <childnode refid="5504" relation="include">
        </childnode>
        <childnode refid="5505" relation="include">
        </childnode>
        <childnode refid="5496" relation="include">
        </childnode>
      </node>
      <node id="5468">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="5543">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5526" relation="include">
        </childnode>
        <childnode refid="5465" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
        <childnode refid="5511" relation="include">
        </childnode>
        <childnode refid="5544" relation="include">
        </childnode>
      </node>
      <node id="5526">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="5473" relation="include">
        </childnode>
        <childnode refid="5464" relation="include">
        </childnode>
        <childnode refid="5527" relation="include">
        </childnode>
        <childnode refid="5495" relation="include">
        </childnode>
        <childnode refid="5528" relation="include">
        </childnode>
        <childnode refid="5467" relation="include">
        </childnode>
        <childnode refid="5465" relation="include">
        </childnode>
        <childnode refid="5460" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5476" relation="include">
        </childnode>
        <childnode refid="5508" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5525">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5524" relation="include">
        </childnode>
        <childnode refid="5478" relation="include">
        </childnode>
      </node>
      <node id="5573">
        <label>spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="5493" relation="include">
        </childnode>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5452" relation="include">
        </childnode>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5532" relation="include">
        </childnode>
        <childnode refid="5531" relation="include">
        </childnode>
        <childnode refid="5549" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
        <childnode refid="5572" relation="include">
        </childnode>
        <childnode refid="5570" relation="include">
        </childnode>
      </node>
      <node id="5501">
        <label>sys/time.h</label>
      </node>
      <node id="5504">
        <label>iostream</label>
      </node>
      <node id="5453">
        <label>deque</label>
      </node>
      <node id="5494">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="5495" relation="include">
        </childnode>
        <childnode refid="5469" relation="include">
        </childnode>
        <childnode refid="5496" relation="include">
        </childnode>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5484">
        <label>sys/socket.h</label>
      </node>
      <node id="5558">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="5495" relation="include">
        </childnode>
        <childnode refid="5524" relation="include">
        </childnode>
        <childnode refid="5476" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
      </node>
      <node id="5454">
        <label>boost/array.hpp</label>
      </node>
      <node id="5497">
        <label>openssl/bn.h</label>
      </node>
      <node id="5554">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="5555" relation="include">
        </childnode>
        <childnode refid="5549" relation="include">
        </childnode>
        <childnode refid="5465" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5508" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5499">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="5468" relation="include">
        </childnode>
      </node>
      <node id="5473">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="5474" relation="include">
        </childnode>
        <childnode refid="5476" relation="include">
        </childnode>
        <childnode refid="5462" relation="include">
        </childnode>
        <childnode refid="5450" relation="include">
        </childnode>
        <childnode refid="5465" relation="include">
        </childnode>
        <childnode refid="5477" relation="include">
        </childnode>
        <childnode refid="5478" relation="include">
        </childnode>
        <childnode refid="5479" relation="include">
        </childnode>
      </node>
      <node id="5492">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="5493" relation="include">
        </childnode>
        <childnode refid="5494" relation="include">
        </childnode>
        <childnode refid="5463" relation="include">
        </childnode>
      </node>
      <node id="5460">
        <label>set</label>
      </node>
      <node id="5527">
        <label>algorithm</label>
      </node>
      <node id="5540">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5529" relation="include">
        </childnode>
        <childnode refid="5541" relation="include">
        </childnode>
      </node>
      <node id="5521">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="5468" relation="include">
        </childnode>
        <childnode refid="5475" relation="include">
        </childnode>
      </node>
      <node id="5539">
        <label>util.h</label>
      </node>
      <node id="5535">
        <label>stdio.h</label>
      </node>
      <node id="5474">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="5475" relation="include">
        </childnode>
      </node>
      <node id="5469">
        <label>cstring</label>
      </node>
      <node id="5446">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="5447" relation="include">
        </childnode>
        <childnode refid="5448" relation="include">
        </childnode>
        <childnode refid="5449" relation="include">
        </childnode>
        <childnode refid="5450" relation="include">
        </childnode>
        <childnode refid="5451" relation="include">
        </childnode>
      </node>
      <node id="5536">
        <label>inttypes.h</label>
      </node>
      <node id="5557">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="5558" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
      </node>
      <node id="5546">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="5538" relation="include">
        </childnode>
        <childnode refid="5525" relation="include">
        </childnode>
        <childnode refid="5547" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &gt;</type>
        <definition>std::map&lt;uint256, CTransaction&gt; mapTxLockReq</definition>
        <argsstring></argsstring>
        <name>mapTxLockReq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="23" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="instantx_8cpp_1a264a77cc84daf11ad7745da7e4b63266" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &gt;</type>
        <definition>std::map&lt;uint256, CTransaction&gt; mapTxLockReqRejected</definition>
        <argsstring></argsstring>
        <name>mapTxLockReqRejected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="24" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="instantx_8cpp_1ae3472b834d4943b93811c2051c2d6d19" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="class_c_consensus_vote" kindref="compound">CConsensusVote</ref> &gt;</type>
        <definition>std::map&lt;uint256, CConsensusVote&gt; mapTxLockVote</definition>
        <argsstring></argsstring>
        <name>mapTxLockVote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="25" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="class_c_transaction_lock" kindref="compound">CTransactionLock</ref> &gt;</type>
        <definition>std::map&lt;uint256, CTransactionLock&gt; mapTxLocks</definition>
        <argsstring></argsstring>
        <name>mapTxLocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="26" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_c_out_point" kindref="compound">COutPoint</ref>, <ref refid="classuint256" kindref="compound">uint256</ref> &gt;</type>
        <definition>std::map&lt;COutPoint, uint256&gt; mapLockedInputs</definition>
        <argsstring></argsstring>
        <name>mapLockedInputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="27" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &gt;</type>
        <definition>std::map&lt;uint256, int64_t&gt; mapUnknownVotes</definition>
        <argsstring></argsstring>
        <name>mapUnknownVotes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="28" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="instantx_8cpp_1a03408fcf1ecf5379a429491d3cd0e36b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nCompleteTXLocks</definition>
        <argsstring></argsstring>
        <name>nCompleteTXLocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="29" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="instantx_8cpp_1aa516cb499ead2691d8ab216a499db5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ProcessMessageInstantX</definition>
        <argsstring>(CNode *pfrom, std::string &amp;strCommand, CDataStream &amp;vRecv)</argsstring>
        <name>ProcessMessageInstantX</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pfrom</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strCommand</declname>
        </param>
        <param>
          <type><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref> &amp;</type>
          <declname>vRecv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="38" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="38" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="instantx_8cpp_1a091b5dc50769595bb701d5f85ca475e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsIXTXValid</definition>
        <argsstring>(const CTransaction &amp;txCollateral)</argsstring>
        <name>IsIXTXValid</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txCollateral</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="175" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="175" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="instantx_8cpp_1a3774b6dae3dfa0a6c85e3604e742150c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CreateNewLock</definition>
        <argsstring>(CTransaction tx)</argsstring>
        <name>CreateNewLock</name>
        <param>
          <type><ref refid="class_c_transaction" kindref="compound">CTransaction</ref></type>
          <declname>tx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="221" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="221" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="instantx_8cpp_1a0753801d6e6eb2cb230a85a6ba6fd371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoConsensusVote</definition>
        <argsstring>(CTransaction &amp;tx, int64_t nBlockHeight)</argsstring>
        <name>DoConsensusVote</name>
        <param>
          <type><ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nBlockHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="259" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="259" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="instantx_8cpp_1a5d4434bfb70f64f95aa4de9286cbae94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ProcessConsensusVote</definition>
        <argsstring>(CNode *pnode, CConsensusVote &amp;ctx)</argsstring>
        <name>ProcessConsensusVote</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pnode</declname>
        </param>
        <param>
          <type><ref refid="class_c_consensus_vote" kindref="compound">CConsensusVote</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="302" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="302" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="instantx_8cpp_1aef32a1712071881d322fdb3740c07227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckForConflictingLocks</definition>
        <argsstring>(CTransaction &amp;tx)</argsstring>
        <name>CheckForConflictingLocks</name>
        <param>
          <type><ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="396" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="396" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="instantx_8cpp_1a304e9387476f386ea574efe9c4d7935e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetAverageVoteTime</definition>
        <argsstring>()</argsstring>
        <name>GetAverageVoteTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="419" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="419" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="instantx_8cpp_1afede7ddd9c324103f27d52a2a3b75b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CleanTransactionLocksList</definition>
        <argsstring>()</argsstring>
        <name>CleanTransactionLocksList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/instantx.cpp" line="434" column="1" bodyfile="/home/dev/ds-160209/src/instantx.cpp" bodystart="434" bodyend="463"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016<sp/>The<sp/>Dash<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sync_8h" kindref="compound">sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="net_8h" kindref="compound">net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key_8h" kindref="compound">key.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base58_8h" kindref="compound">base58.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protocol_8h" kindref="compound">protocol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="instantx_8h" kindref="compound">instantx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="activestormnode_8h" kindref="compound">activestormnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-sync_8h" kindref="compound">stormnode-sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeman_8h" kindref="compound">stormnodeman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sandstorm_8h" kindref="compound">sandstorm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spork_8h" kindref="compound">spork.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost" kindref="compound">boost</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="instantx_8h_1a619fe2314165d3c494dee175ab550704" refkind="member"><highlight class="normal">std::map&lt;uint256,<sp/>CTransaction&gt;<sp/><ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>;</highlight></codeline>
<codeline lineno="24" refid="instantx_8h_1a61a4e2b145fbc7f7a5d831d418fc5877" refkind="member"><highlight class="normal">std::map&lt;uint256,<sp/>CTransaction&gt;<sp/><ref refid="instantx_8cpp_1a264a77cc84daf11ad7745da7e4b63266" kindref="member">mapTxLockReqRejected</ref>;</highlight></codeline>
<codeline lineno="25" refid="instantx_8h_1a2318fca035d762daf5a9823922d59bd6" refkind="member"><highlight class="normal">std::map&lt;uint256,<sp/>CConsensusVote&gt;<sp/><ref refid="instantx_8cpp_1ae3472b834d4943b93811c2051c2d6d19" kindref="member">mapTxLockVote</ref>;</highlight></codeline>
<codeline lineno="26" refid="instantx_8h_1a046cca1fbefa988ad2170a7a3f53392e" refkind="member"><highlight class="normal">std::map&lt;uint256,<sp/>CTransactionLock&gt;<sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>;</highlight></codeline>
<codeline lineno="27" refid="instantx_8h_1add05f27cf823b63d3c4ac615cae0f85c" refkind="member"><highlight class="normal">std::map&lt;COutPoint,<sp/>uint256&gt;<sp/><ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>;</highlight></codeline>
<codeline lineno="28" refid="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" refkind="member"><highlight class="normal">std::map&lt;uint256,<sp/>int64_t&gt;<sp/><ref refid="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" kindref="member">mapUnknownVotes</ref>;<sp/></highlight><highlight class="comment">//track<sp/>votes<sp/>with<sp/>no<sp/>tx<sp/>for<sp/>DOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="instantx_8h_1a03408fcf1ecf5379a429491d3cd0e36b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="instantx_8cpp_1a03408fcf1ecf5379a429491d3cd0e36b" kindref="member">nCompleteTXLocks</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//txlock<sp/>-<sp/>Locks<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//step<sp/>1.)<sp/>Broadcast<sp/>intention<sp/>to<sp/>lock<sp/>transaction<sp/>inputs,<sp/>&quot;txlreg&quot;,<sp/>CTransaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//step<sp/>2.)<sp/>Top<sp/>INSTANTX_SIGNATURES_TOTAL<sp/>stormnodes,<sp/>open<sp/>connect<sp/>to<sp/>top<sp/>1<sp/>stormnode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Send<sp/>&quot;txvote&quot;,<sp/>CTransaction,<sp/>Signature,<sp/>Approve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//step<sp/>3.)<sp/>Top<sp/>1<sp/>stormnode,<sp/>waits<sp/>for<sp/>INSTANTX_SIGNATURES_REQUIRED<sp/>messages.<sp/>Upon<sp/>success,<sp/>sends<sp/>&quot;txlock&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="instantx_8h_1aa516cb499ead2691d8ab216a499db5d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="instantx_8cpp_1aa516cb499ead2691d8ab216a499db5d0" kindref="member">ProcessMessageInstantX</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/>std::string&amp;<sp/>strCommand,<sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>&amp;<sp/>vRecv)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//disable<sp/>all<sp/>sandstorm/stormnode<sp/>related<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" kindref="member">IsSporkActive</ref>(SPORK_2_INSTANTX))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" kindref="member">IsBlockchainSynced</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ix&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;ProcessMessageInstantX::ix\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>vMsg(vRecv);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>tx;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref><sp/>inv(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a802e4d970385efb01469f48db2cf1e06" kindref="member">MSG_TXLOCK_REQUEST</ref>,<sp/>tx.GetHash());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1ac3054eb6ade84e8968f032ce3e700f6a" kindref="member">AddInventoryKnown</ref>(inv);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>.count(tx.GetHash())<sp/>||<sp/><ref refid="instantx_8cpp_1a264a77cc84daf11ad7745da7e4b63266" kindref="member">mapTxLockReqRejected</ref>.count(tx.GetHash())){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="instantx_8cpp_1a091b5dc50769595bb701d5f85ca475e5" kindref="member">IsIXTXValid</ref>(tx)){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>o,<sp/>tx.vout){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IX<sp/>supports<sp/>normal<sp/>scripts<sp/>and<sp/>unspendable<sp/>scripts<sp/>(used<sp/>in<sp/>SS<sp/>collateral<sp/>and<sp/>Budget<sp/>collateral).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Look<sp/>into<sp/>other<sp/>script<sp/>types<sp/>that<sp/>are<sp/>normal<sp/>and<sp/>can<sp/>be<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!o.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a2b3ee98f7a63916b67b91dfd2c4ee312" kindref="member">IsNormalPaymentScript</ref>()<sp/>&amp;&amp;<sp/>!o.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a5d8efd005dde9242d88212c8b7fdb696" kindref="member">IsUnspendable</ref>()){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ProcessMessageInstantX::ix<sp/>-<sp/>Invalid<sp/>Script<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>tx.ToString().c_str());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight<sp/>=<sp/><ref refid="instantx_8cpp_1a3774b6dae3dfa0a6c85e3604e742150c" kindref="member">CreateNewLock</ref>(tx);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fMissingInputs<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAccepted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Pass<sp/>state<sp/>to<sp/>AcceptToMemoryPool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fAccepted<sp/>=<sp/><ref refid="main_8cpp_1ad73f7fbd48c12a894b914e6a51940c64" kindref="member">AcceptToMemoryPool</ref>(<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>,<sp/>state,<sp/>tx,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>&amp;fMissingInputs);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fAccepted)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a4f89efc38cf3b6bbb552ba9624bddfaf" kindref="member">RelayInv</ref>(inv);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a0753801d6e6eb2cb230a85a6ba6fd371" kindref="member">DoConsensusVote</ref>(tx,<sp/>nBlockHeight);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>.insert(make_pair(tx.GetHash(),<sp/>tx));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ProcessMessageInstantX::ix<sp/>-<sp/>Transaction<sp/>Lock<sp/>Request:<sp/>%s<sp/>%s<sp/>:<sp/>accepted<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>().c_str(),<sp/>pfrom-&gt;<ref refid="class_c_node_1a05f0401427c5ffebd1ca404848e83ff7" kindref="member">cleanSubVer</ref>.c_str(),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx.GetHash().ToString().c_str()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a264a77cc84daf11ad7745da7e4b63266" kindref="member">mapTxLockReqRejected</ref>.insert(make_pair(tx.GetHash(),<sp/>tx));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>we<sp/>get<sp/>the<sp/>conflicting<sp/>transaction<sp/>as<sp/>proof?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ProcessMessageInstantX::ix<sp/>-<sp/>Transaction<sp/>Lock<sp/>Request:<sp/>%s<sp/>%s<sp/>:<sp/>rejected<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>().c_str(),<sp/>pfrom-&gt;<ref refid="class_c_node_1a05f0401427c5ffebd1ca404848e83ff7" kindref="member">cleanSubVer</ref>.c_str(),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx.GetHash().ToString().c_str()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>in,<sp/>tx.vin){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>.count(in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>)){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>.insert(make_pair(in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>,<sp/>tx.<ref refid="class_c_out_point_1ab63a99ac182d5174f568addf5db35162" kindref="member">GetHash</ref>()));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resolve<sp/>conflicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CTransactionLock&gt;::iterator<sp/>i<sp/>=<sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.find(tx.GetHash());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.end()){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>only<sp/>care<sp/>if<sp/>we<sp/>have<sp/>a<sp/>complete<sp/>tx<sp/>lock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*i).second.CountSignatures()<sp/>&gt;=<sp/><ref refid="instantx_8h_1a9e15d55227c00c556fcb73d04f82283c" kindref="member">INSTANTX_SIGNATURES_REQUIRED</ref>){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="instantx_8cpp_1aef32a1712071881d322fdb3740c07227" kindref="member">CheckForConflictingLocks</ref>(tx)){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ProcessMessageInstantX::ix<sp/>-<sp/>Found<sp/>Existing<sp/>Complete<sp/>IX<sp/>Lock\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reprocess<sp/>the<sp/>last<sp/>15<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spork_8cpp_1a6b20cdba297d137a4d7a91691cc4457b" kindref="member">ReprocessBlocks</ref>(15);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>.insert(make_pair(tx.GetHash(),<sp/>tx));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;txlvote&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//InstantX<sp/>Lock<sp/>Consensus<sp/>Votes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_consensus_vote" kindref="compound">CConsensusVote</ref><sp/>ctx;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>ctx;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref><sp/>inv(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a9d087eae96b6c836c7eb63693b8b7483" kindref="member">MSG_TXLOCK_VOTE</ref>,<sp/>ctx.GetHash());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1ac3054eb6ade84e8968f032ce3e700f6a" kindref="member">AddInventoryKnown</ref>(inv);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1ae3472b834d4943b93811c2051c2d6d19" kindref="member">mapTxLockVote</ref>.count(ctx.GetHash())){</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1ae3472b834d4943b93811c2051c2d6d19" kindref="member">mapTxLockVote</ref>.insert(make_pair(ctx.GetHash(),<sp/>ctx));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1a5d4434bfb70f64f95aa4de9286cbae94" kindref="member">ProcessConsensusVote</ref>(pfrom,<sp/>ctx)){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Spam/Dos<sp/>protection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stormnodes<sp/>will<sp/>sometimes<sp/>propagate<sp/>votes<sp/>before<sp/>the<sp/>transaction<sp/>is<sp/>known<sp/>to<sp/>the<sp/>client.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>tracks<sp/>those<sp/>messages<sp/>and<sp/>allows<sp/>it<sp/>at<sp/>the<sp/>same<sp/>rate<sp/>of<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>network,<sp/>if</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>peer<sp/>violates<sp/>it,<sp/>it<sp/>will<sp/>simply<sp/>be<sp/>ignored</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>.count(ctx.txHash)<sp/>&amp;&amp;<sp/>!<ref refid="instantx_8cpp_1a264a77cc84daf11ad7745da7e4b63266" kindref="member">mapTxLockReqRejected</ref>.count(ctx.txHash)){</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" kindref="member">mapUnknownVotes</ref>.count(ctx.vinStormnode.prevout.hash)){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" kindref="member">mapUnknownVotes</ref>[ctx.vinStormnode.prevout.hash]<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()+(60*10);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" kindref="member">mapUnknownVotes</ref>[ctx.vinStormnode.prevout.hash]<sp/>&gt;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" kindref="member">mapUnknownVotes</ref>[ctx.vinStormnode.prevout.hash]<sp/>-<sp/><ref refid="instantx_8cpp_1a304e9387476f386ea574efe9c4d7935e" kindref="member">GetAverageVoteTime</ref>()<sp/>&gt;<sp/>60*10){</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ProcessMessageInstantX::ix<sp/>-<sp/>stormnode<sp/>is<sp/>spamming<sp/>transaction<sp/>votes:<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.vinStormnode.ToString().c_str(),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.txHash.ToString().c_str()</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" kindref="member">mapUnknownVotes</ref>[ctx.vinStormnode.prevout.hash]<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()+(60*10);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a4f89efc38cf3b6bbb552ba9624bddfaf" kindref="member">RelayInv</ref>(inv);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="instantx_8h_1a091b5dc50769595bb701d5f85ca475e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="instantx_8cpp_1a091b5dc50769595bb701d5f85ca475e5" kindref="member">IsIXTXValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txCollateral){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(txCollateral.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(txCollateral.<ref refid="class_c_transaction_1ab01e4e451d2f3f84b01380979c8fdacc" kindref="member">nLockTime</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueOut<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>missingTx<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>o,<sp/>txCollateral.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueOut<sp/>+=<sp/>o.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>i,<sp/>txCollateral.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>){</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx2;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" kindref="member">GetTransaction</ref>(i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>,<sp/>tx2,<sp/>hash)){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tx2.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>&gt;<sp/>i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueIn<sp/>+=<sp/>tx2.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].nValue;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missingTx<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueOut<sp/>&gt;<sp/><ref refid="spork_8cpp_1a8ae4e3d41526bf334ac3bb100db62146" kindref="member">GetSporkValue</ref>(SPORK_5_MAX_VALUE)*COIN){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IsIXTXValid<sp/>-<sp/>Transaction<sp/>value<sp/>too<sp/>high<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>txCollateral.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(missingTx){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IsIXTXValid<sp/>-<sp/>Unknown<sp/>inputs<sp/>in<sp/>IX<sp/>transaction<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>txCollateral.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>happens<sp/>sometimes<sp/>for<sp/>an<sp/>unknown<sp/>reason,<sp/>so<sp/>we&apos;ll<sp/>return<sp/>that<sp/>it&apos;s<sp/>a<sp/>valid<sp/>transaction.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>someone<sp/>submits<sp/>an<sp/>invalid<sp/>transaction<sp/>it<sp/>will<sp/>be<sp/>rejected<sp/>by<sp/>the<sp/>network<sp/>anyway<sp/>and<sp/>this<sp/>isn&apos;t</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>very<sp/>common,<sp/>but<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>block<sp/>IX<sp/>just<sp/>because<sp/>the<sp/>client<sp/>can&apos;t<sp/>figure<sp/>out<sp/>the<sp/>fee.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueIn-nValueOut<sp/>&lt;<sp/>CENT)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IsIXTXValid<sp/>-<sp/>did<sp/>not<sp/>include<sp/>enough<sp/>fees<sp/>in<sp/>transaction<sp/>%d\n%s\n&quot;</highlight><highlight class="normal">,<sp/>nValueOut-nValueIn,<sp/>txCollateral.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="instantx_8h_1a3774b6dae3dfa0a6c85e3604e742150c" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="instantx_8cpp_1a3774b6dae3dfa0a6c85e3604e742150c" kindref="member">CreateNewLock</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTxAge<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_REVERSE_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>i,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTxAge<sp/>=<sp/><ref refid="main_8cpp_1ae137d76bbcaf8d65fab905889b504e26" kindref="member">GetInputAge</ref>(i);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nTxAge<sp/>&lt;<sp/>9)<sp/></highlight><highlight class="comment">//9<sp/>confirmations,<sp/>1<sp/>less<sp/>than<sp/>the<sp/>&quot;send<sp/>IX&quot;<sp/>gui<sp/>requires,<sp/>incase<sp/>of<sp/>a<sp/>block<sp/>propagating<sp/>the<sp/>network<sp/>at<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateNewLock<sp/>-<sp/>Transaction<sp/>not<sp/>found<sp/>/<sp/>too<sp/>new:<sp/>%d<sp/>/<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>nTxAge,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>a<sp/>blockheight<sp/>newer<sp/>than<sp/>the<sp/>input.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>prevents<sp/>attackers<sp/>from<sp/>using<sp/>transaction<sp/>mallibility<sp/>to<sp/>predict<sp/>which<sp/>stormnodes</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>they&apos;ll<sp/>use.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight<sp/>=<sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>-<sp/>nTxAge)+4;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.count(tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>())){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateNewLock<sp/>-<sp/>New<sp/>Transaction<sp/>Lock<sp/>%s<sp/>!\n&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_lock" kindref="compound">CTransactionLock</ref><sp/>newLock;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newLock.<ref refid="class_c_transaction_lock_1a358a18da2b8b378cc7cd1dae145f611f" kindref="member">nBlockHeight</ref><sp/>=<sp/>nBlockHeight;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newLock.nExpiration<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()+(60*60);<sp/></highlight><highlight class="comment">//locks<sp/>expire<sp/>after<sp/>60<sp/>minutes<sp/>(56-60<sp/>confirmations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newLock.nTimeout<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()+(60*5);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newLock.txHash<sp/>=<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.insert(make_pair(tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),<sp/>newLock));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>[tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>()].nBlockHeight<sp/>=<sp/>nBlockHeight;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CreateNewLock<sp/>-<sp/>Transaction<sp/>Lock<sp/>Exists<sp/>%s<sp/>!\n&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nBlockHeight;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>vote<sp/>on<sp/>this<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="instantx_8h_1a0753801d6e6eb2cb230a85a6ba6fd371" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="instantx_8cpp_1a0753801d6e6eb2cb230a85a6ba6fd371" kindref="member">DoConsensusVote</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nBlockHeight)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" kindref="member">GetStormnodeRank</ref>(<ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>,<sp/>nBlockHeight,<sp/>MIN_INSTANTX_PROTO_VERSION);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InstantX::DoConsensusVote<sp/>-<sp/>Unknown<sp/>Stormnode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/><ref refid="instantx_8h_1ae0987d3c018640d462e6fa67fc3bfcb6" kindref="member">INSTANTX_SIGNATURES_TOTAL</ref>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InstantX::DoConsensusVote<sp/>-<sp/>Stormnode<sp/>not<sp/>in<sp/>the<sp/>top<sp/>%d<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="instantx_8h_1ae0987d3c018640d462e6fa67fc3bfcb6" kindref="member">INSTANTX_SIGNATURES_TOTAL</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlockHeight<sp/>calculated<sp/>from<sp/>the<sp/>transaction<sp/>is<sp/>the<sp/>authoritive<sp/>source</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InstantX::DoConsensusVote<sp/>-<sp/>In<sp/>the<sp/>top<sp/>%d<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="instantx_8h_1ae0987d3c018640d462e6fa67fc3bfcb6" kindref="member">INSTANTX_SIGNATURES_TOTAL</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_consensus_vote" kindref="compound">CConsensusVote</ref><sp/>ctx;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="class_c_consensus_vote_1ab3a273669aecfba15f77c34d33c0ca93" kindref="member">vinStormnode</ref><sp/>=<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref><sp/>=<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="class_c_consensus_vote_1a19f39b69e4adf3f9b5557d465cabc7ed" kindref="member">nBlockHeight</ref><sp/>=<sp/>nBlockHeight;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ctx.<ref refid="class_c_consensus_vote_1a687495887aa75f5d5bb70f93ecb820d0" kindref="member">Sign</ref>()){</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;InstantX::DoConsensusVote<sp/>-<sp/>Failed<sp/>to<sp/>sign<sp/>consensus<sp/>vote\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ctx.<ref refid="class_c_consensus_vote_1ac6550a89acee255e0035e189a42a6310" kindref="member">SignatureValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;InstantX::DoConsensusVote<sp/>-<sp/>Signature<sp/>invalid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1ae3472b834d4943b93811c2051c2d6d19" kindref="member">mapTxLockVote</ref>[ctx.<ref refid="class_c_consensus_vote_1a694d24883638b550aa2f823fe48ac04b" kindref="member">GetHash</ref>()]<sp/>=<sp/>ctx;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref><sp/>inv(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a9d087eae96b6c836c7eb63693b8b7483" kindref="member">MSG_TXLOCK_VOTE</ref>,<sp/>ctx.<ref refid="class_c_consensus_vote_1a694d24883638b550aa2f823fe48ac04b" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a4f89efc38cf3b6bbb552ba9624bddfaf" kindref="member">RelayInv</ref>(inv);</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//received<sp/>a<sp/>consensus<sp/>vote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="instantx_8h_1a5d4434bfb70f64f95aa4de9286cbae94" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="instantx_8cpp_1a5d4434bfb70f64f95aa4de9286cbae94" kindref="member">ProcessConsensusVote</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="class_c_consensus_vote" kindref="compound">CConsensusVote</ref>&amp;<sp/>ctx)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" kindref="member">GetStormnodeRank</ref>(ctx.<ref refid="class_c_consensus_vote_1ab3a273669aecfba15f77c34d33c0ca93" kindref="member">vinStormnode</ref>,<sp/>ctx.<ref refid="class_c_consensus_vote_1a19f39b69e4adf3f9b5557d465cabc7ed" kindref="member">nBlockHeight</ref>,<sp/>MIN_INSTANTX_PROTO_VERSION);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(ctx.<ref refid="class_c_consensus_vote_1ab3a273669aecfba15f77c34d33c0ca93" kindref="member">vinStormnode</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InstantX::ProcessConsensusVote<sp/>-<sp/>Stormnode<sp/>ADDR<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>psn-&gt;<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>().c_str(),<sp/>n);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//can<sp/>be<sp/>caused<sp/>by<sp/>past<sp/>versions<sp/>trying<sp/>to<sp/>vote<sp/>with<sp/>an<sp/>invalid<sp/>protocol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InstantX::ProcessConsensusVote<sp/>-<sp/>Unknown<sp/>Stormnode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a918a4ccb668808449809a77adc036301" kindref="member">AskForSN</ref>(pnode,<sp/>ctx.<ref refid="class_c_consensus_vote_1ab3a273669aecfba15f77c34d33c0ca93" kindref="member">vinStormnode</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/><ref refid="instantx_8h_1ae0987d3c018640d462e6fa67fc3bfcb6" kindref="member">INSTANTX_SIGNATURES_TOTAL</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InstantX::ProcessConsensusVote<sp/>-<sp/>Stormnode<sp/>not<sp/>in<sp/>the<sp/>top<sp/>%d<sp/>(%d)<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="instantx_8h_1ae0987d3c018640d462e6fa67fc3bfcb6" kindref="member">INSTANTX_SIGNATURES_TOTAL</ref>,<sp/>n,<sp/>ctx.<ref refid="class_c_consensus_vote_1a694d24883638b550aa2f823fe48ac04b" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ctx.<ref refid="class_c_consensus_vote_1ac6550a89acee255e0035e189a42a6310" kindref="member">SignatureValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;InstantX::ProcessConsensusVote<sp/>-<sp/>Signature<sp/>invalid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>ban,<sp/>it<sp/>could<sp/>just<sp/>be<sp/>a<sp/>non-synced<sp/>stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a918a4ccb668808449809a77adc036301" kindref="member">AskForSN</ref>(pnode,<sp/>ctx.<ref refid="class_c_consensus_vote_1ab3a273669aecfba15f77c34d33c0ca93" kindref="member">vinStormnode</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.count(ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>)){</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;InstantX::ProcessConsensusVote<sp/>-<sp/>New<sp/>Transaction<sp/>Lock<sp/>%s<sp/>!\n&quot;</highlight><highlight class="normal">,<sp/>ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_lock" kindref="compound">CTransactionLock</ref><sp/>newLock;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newLock.<ref refid="class_c_transaction_lock_1a358a18da2b8b378cc7cd1dae145f611f" kindref="member">nBlockHeight</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newLock.nExpiration<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()+(60*60);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newLock.nTimeout<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()+(60*5);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newLock.txHash<sp/>=<sp/>ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.insert(make_pair(ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>,<sp/>newLock));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InstantX::ProcessConsensusVote<sp/>-<sp/>Transaction<sp/>Lock<sp/>Exists<sp/>%s<sp/>!\n&quot;</highlight><highlight class="normal">,<sp/>ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//compile<sp/>consessus<sp/>vote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CTransactionLock&gt;::iterator<sp/>i<sp/>=<sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.find(ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.end()){</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*i).second.AddSignature(ctx);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>){</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//when<sp/>we<sp/>get<sp/>back<sp/>signatures,<sp/>we&apos;ll<sp/>count<sp/>them<sp/>as<sp/>requests.<sp/>Otherwise<sp/>the<sp/>client<sp/>will<sp/>think<sp/>it<sp/>didn&apos;t<sp/>propagate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1ade5f0fc0e722433b421c32f97bd873a8" kindref="member">mapRequestCount</ref>.count(ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>))</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1ade5f0fc0e722433b421c32f97bd873a8" kindref="member">mapRequestCount</ref>[ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>]++;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InstantX::ProcessConsensusVote<sp/>-<sp/>Transaction<sp/>Lock<sp/>Votes<sp/>%d<sp/>-<sp/>%s<sp/>!\n&quot;</highlight><highlight class="normal">,<sp/>(*i).second.CountSignatures(),<sp/>ctx.<ref refid="class_c_consensus_vote_1a694d24883638b550aa2f823fe48ac04b" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*i).second.CountSignatures()<sp/>&gt;=<sp/><ref refid="instantx_8h_1a9e15d55227c00c556fcb73d04f82283c" kindref="member">INSTANTX_SIGNATURES_REQUIRED</ref>){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;instantx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;InstantX::ProcessConsensusVote<sp/>-<sp/>Transaction<sp/>Lock<sp/>Is<sp/>Complete<sp/>%s<sp/>!\n&quot;</highlight><highlight class="normal">,<sp/>(*i).second.GetHash().ToString().c_str());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx<sp/>=<sp/><ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>[ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="instantx_8cpp_1aef32a1712071881d322fdb3740c07227" kindref="member">CheckForConflictingLocks</ref>(tx)){</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>){</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a96a5b2321f27270c5959bc697cca9c9a" kindref="member">UpdatedTransaction</ref>((*i).second.txHash)){</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a03408fcf1ecf5379a429491d3cd0e36b" kindref="member">nCompleteTXLocks</ref>++;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>.count(ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>)){</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>in,<sp/>tx.vin){</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>.count(in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>)){</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>.insert(make_pair(in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>,<sp/>ctx.<ref refid="class_c_consensus_vote_1a3eca3f8fac54643f7f2ac863635491d6" kindref="member">txHash</ref>));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resolve<sp/>conflicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>this<sp/>tx<sp/>lock<sp/>was<sp/>rejected,<sp/>we<sp/>need<sp/>to<sp/>remove<sp/>the<sp/>conflicting<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1a264a77cc84daf11ad7745da7e4b63266" kindref="member">mapTxLockReqRejected</ref>.count((*i).second.txHash)){</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reprocess<sp/>the<sp/>last<sp/>15<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spork_8cpp_1a6b20cdba297d137a4d7a91691cc4457b" kindref="member">ReprocessBlocks</ref>(15);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="instantx_8h_1aef32a1712071881d322fdb3740c07227" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="instantx_8cpp_1aef32a1712071881d322fdb3740c07227" kindref="member">CheckForConflictingLocks</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It&apos;s<sp/>possible<sp/>(very<sp/>unlikely<sp/>though)<sp/>to<sp/>get<sp/>2<sp/>conflicting<sp/>transaction<sp/>locks<sp/>approved<sp/>by<sp/>the<sp/>network.</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>that<sp/>case,<sp/>they<sp/>will<sp/>cancel<sp/>each<sp/>other<sp/>out.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"></highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blocks<sp/>could<sp/>have<sp/>been<sp/>rejected<sp/>during<sp/>this<sp/>time,<sp/>which<sp/>is<sp/>OK.<sp/>After<sp/>they<sp/>cancel<sp/>out,<sp/>the<sp/>client<sp/>will</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rescan<sp/>the<sp/>blocks<sp/>and<sp/>find<sp/>they&apos;re<sp/>acceptable<sp/>and<sp/>then<sp/>take<sp/>the<sp/>chain<sp/>with<sp/>the<sp/>most<sp/>work.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>in,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>){</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>.count(in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>)){</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>[in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>]<sp/>!=<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>()){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;InstantX::CheckForConflictingLocks<sp/>-<sp/>found<sp/>two<sp/>complete<sp/>conflicting<sp/>locks<sp/>-<sp/>removing<sp/>both.<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str(),<sp/><ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>[in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>].ToString().c_str());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.count(tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>()))<sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>[tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>()].nExpiration<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.count(<ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>[in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>]))<sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>[<ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>[in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>]].nExpiration<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="instantx_8h_1a304e9387476f386ea574efe9c4d7935e" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="instantx_8cpp_1a304e9387476f386ea574efe9c4d7935e" kindref="member">GetAverageVoteTime</ref>()</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>int64_t&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" kindref="member">mapUnknownVotes</ref>.begin();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="db__bench_8cc_1ac7af894858cf396a219d632f40afdc8d" kindref="member">total</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/><ref refid="instantx_8cpp_1a8fee246db559496c8c3640f7cffff4e1" kindref="member">mapUnknownVotes</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total+=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total<sp/>/<sp/>count;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="instantx_8h_1afede7ddd9c324103f27d52a2a3b75b1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="instantx_8cpp_1afede7ddd9c324103f27d52a2a3b75b1c" kindref="member">CleanTransactionLocksList</ref>()</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CTransactionLock&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.begin();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>&gt;<sp/>it-&gt;second.nExpiration){<sp/></highlight><highlight class="comment">//keep<sp/>them<sp/>for<sp/>an<sp/>hour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>old<sp/>transaction<sp/>lock<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>it-&gt;second.txHash.ToString().c_str());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>.count(it-&gt;second.txHash)){</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx<sp/>=<sp/><ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>[it-&gt;second.txHash];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>in,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" kindref="member">mapLockedInputs</ref>.erase(in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>.erase(it-&gt;second.txHash);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a264a77cc84daf11ad7745da7e4b63266" kindref="member">mapTxLockReqRejected</ref>.erase(it-&gt;second.txHash);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_consensus_vote" kindref="compound">CConsensusVote</ref>&amp;<sp/>v,<sp/>it-&gt;second.vecConsensusVotes)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1ae3472b834d4943b93811c2051c2d6d19" kindref="member">mapTxLockVote</ref>.erase(v.<ref refid="class_c_consensus_vote_1a694d24883638b550aa2f823fe48ac04b" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" kindref="member">mapTxLocks</ref>.erase(it++);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_c_consensus_vote_1a694d24883638b550aa2f823fe48ac04b" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="class_c_consensus_vote_1a694d24883638b550aa2f823fe48ac04b" kindref="member">CConsensusVote::GetHash</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="466"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vinStormnode.prevout.hash<sp/>+<sp/>vinStormnode.prevout.n<sp/>+<sp/>txHash;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="class_c_consensus_vote_1ac6550a89acee255e0035e189a42a6310" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_consensus_vote_1ac6550a89acee255e0035e189a42a6310" kindref="member">CConsensusVote::SignatureValid</ref>()</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/>txHash.ToString().c_str()<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(nBlockHeight);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;verify<sp/>strMessage<sp/>%s<sp/>\n&quot;,<sp/>strMessage.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(vinStormnode);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;InstantX::CConsensusVote::SignatureValid()<sp/>-<sp/>Unknown<sp/>Stormnode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(psn-&gt;pubkey2,<sp/>vchStormNodeSignature,<sp/>strMessage,<sp/>errorMessage))<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;InstantX::CConsensusVote::SignatureValid()<sp/>-<sp/>Verify<sp/>message<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="class_c_consensus_vote_1a687495887aa75f5d5bb70f93ecb820d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_consensus_vote_1a687495887aa75f5d5bb70f93ecb820d0" kindref="member">CConsensusVote::Sign</ref>()</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key2;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey2;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/>txHash.ToString().c_str()<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(nBlockHeight);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;signing<sp/>strMessage<sp/>%s<sp/>\n&quot;,<sp/>strMessage.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;signing<sp/>privkey<sp/>%s<sp/>\n&quot;,<sp/>strStormNodePrivKey.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">SetKey</ref>(<ref refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" kindref="member">strStormNodePrivKey</ref>,<sp/>errorMessage,<sp/>key2,<sp/>pubkey2))</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CConsensusVote::Sign()<sp/>-<sp/>ERROR:<sp/>Invalid<sp/>stormnode<sp/>privkey:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage.c_str());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" kindref="member">SignMessage</ref>(strMessage,<sp/>errorMessage,<sp/>vchStormNodeSignature,<sp/>key2))<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CConsensusVote::Sign()<sp/>-<sp/>Sign<sp/>message<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(pubkey2,<sp/>vchStormNodeSignature,<sp/>strMessage,<sp/>errorMessage))<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CConsensusVote::Sign()<sp/>-<sp/>Verify<sp/>message<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="class_c_transaction_lock_1a71cb6705a8f0bfb4a8453d3b284e3cf7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_lock_1a71cb6705a8f0bfb4a8453d3b284e3cf7" kindref="member">CTransactionLock::SignaturesValid</ref>()</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_consensus_vote" kindref="compound">CConsensusVote</ref><sp/>vote,<sp/>vecConsensusVotes)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" kindref="member">GetStormnodeRank</ref>(vote.<ref refid="class_c_consensus_vote_1ab3a273669aecfba15f77c34d33c0ca93" kindref="member">vinStormnode</ref>,<sp/>vote.<ref refid="class_c_consensus_vote_1a19f39b69e4adf3f9b5557d465cabc7ed" kindref="member">nBlockHeight</ref>,<sp/>MIN_INSTANTX_PROTO_VERSION);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CTransactionLock::SignaturesValid()<sp/>-<sp/>Unknown<sp/>Stormnode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/><ref refid="instantx_8h_1ae0987d3c018640d462e6fa67fc3bfcb6" kindref="member">INSTANTX_SIGNATURES_TOTAL</ref>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CTransactionLock::SignaturesValid()<sp/>-<sp/>Stormnode<sp/>not<sp/>in<sp/>the<sp/>top<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="instantx_8h_1ae0987d3c018640d462e6fa67fc3bfcb6" kindref="member">INSTANTX_SIGNATURES_TOTAL</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vote.<ref refid="class_c_consensus_vote_1ac6550a89acee255e0035e189a42a6310" kindref="member">SignatureValid</ref>()){</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CTransactionLock::SignaturesValid()<sp/>-<sp/>Signature<sp/>not<sp/>valid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="class_c_transaction_lock_1a8f09c2c0453950fb6deadcccf5f518d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_lock_1a8f09c2c0453950fb6deadcccf5f518d7" kindref="member">CTransactionLock::AddSignature</ref>(<ref refid="class_c_consensus_vote" kindref="compound">CConsensusVote</ref>&amp;<sp/><ref refid="db__bench_8cc_1aa35826d3f6dc34ef1f1b35dee6db9d91" kindref="member">cv</ref>)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>vecConsensusVotes.push_back(cv);</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="class_c_transaction_lock_1aa74b16eec6daee397785a91193fc3306" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_lock_1aa74b16eec6daee397785a91193fc3306" kindref="member">CTransactionLock::CountSignatures</ref>()</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Only<sp/>count<sp/>signatures<sp/>where<sp/>the<sp/>BlockHeight<sp/>matches<sp/>the<sp/>transaction&apos;s<sp/>blockheight.</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>votes<sp/>have<sp/>no<sp/>proof<sp/>it&apos;s<sp/>the<sp/>correct<sp/>blockheight</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBlockHeight<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_consensus_vote" kindref="compound">CConsensusVote</ref><sp/>v,<sp/>vecConsensusVotes){</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v.<ref refid="class_c_consensus_vote_1a19f39b69e4adf3f9b5557d465cabc7ed" kindref="member">nBlockHeight</ref><sp/>==<sp/>nBlockHeight){</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/instantx.cpp"/>
  </compounddef>
</doxygen>
