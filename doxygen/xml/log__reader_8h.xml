<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="log__reader_8h" kind="file" language="C++">
    <compoundname>log_reader.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes refid="log__format_8h" local="yes">db/log_format.h</includes>
    <includes refid="slice_8h" local="yes">leveldb/slice.h</includes>
    <includes refid="status_8h" local="yes">leveldb/status.h</includes>
    <includedby refid="db__impl_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_impl.cc</includedby>
    <includedby refid="dumpfile_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/dumpfile.cc</includedby>
    <includedby refid="log__reader_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/log_reader.cc</includedby>
    <includedby refid="log__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/log_test.cc</includedby>
    <includedby refid="repair_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/repair.cc</includedby>
    <includedby refid="version__set_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/version_set.cc</includedby>
    <incdepgraph>
      <node id="36732">
        <label>assert.h</label>
      </node>
      <node id="36735">
        <label>string</label>
      </node>
      <node id="36733">
        <label>stddef.h</label>
      </node>
      <node id="36728">
        <label>/home/dev/ds-160209/src/leveldb/db/log_reader.h</label>
        <link refid="log_reader.h"/>
        <childnode refid="36729" relation="include">
        </childnode>
        <childnode refid="36730" relation="include">
        </childnode>
        <childnode refid="36731" relation="include">
        </childnode>
        <childnode refid="36736" relation="include">
        </childnode>
      </node>
      <node id="36736">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="36735" relation="include">
        </childnode>
        <childnode refid="36731" relation="include">
        </childnode>
      </node>
      <node id="36734">
        <label>string.h</label>
      </node>
      <node id="36730">
        <label>db/log_format.h</label>
        <link refid="log__format_8h"/>
      </node>
      <node id="36729">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="36731">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="36732" relation="include">
        </childnode>
        <childnode refid="36733" relation="include">
        </childnode>
        <childnode refid="36734" relation="include">
        </childnode>
        <childnode refid="36735" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="36738">
        <label>/home/dev/ds-160209/src/leveldb/db/db_impl.cc</label>
        <link refid="db__impl_8cc"/>
      </node>
      <node id="36741">
        <label>/home/dev/ds-160209/src/leveldb/db/log_test.cc</label>
        <link refid="log__test_8cc"/>
      </node>
      <node id="36737">
        <label>/home/dev/ds-160209/src/leveldb/db/log_reader.h</label>
        <link refid="log_reader.h"/>
        <childnode refid="36738" relation="include">
        </childnode>
        <childnode refid="36739" relation="include">
        </childnode>
        <childnode refid="36740" relation="include">
        </childnode>
        <childnode refid="36741" relation="include">
        </childnode>
        <childnode refid="36742" relation="include">
        </childnode>
        <childnode refid="36743" relation="include">
        </childnode>
      </node>
      <node id="36743">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set.cc</label>
        <link refid="version__set_8cc"/>
      </node>
      <node id="36742">
        <label>/home/dev/ds-160209/src/leveldb/db/repair.cc</label>
        <link refid="repair_8cc"/>
      </node>
      <node id="36740">
        <label>/home/dev/ds-160209/src/leveldb/db/log_reader.cc</label>
        <link refid="log__reader_8cc"/>
      </node>
      <node id="36739">
        <label>/home/dev/ds-160209/src/leveldb/db/dumpfile.cc</label>
        <link refid="dumpfile_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classleveldb_1_1log_1_1_reader" prot="public">leveldb::log::Reader</innerclass>
    <innerclass refid="classleveldb_1_1log_1_1_reader_1_1_reporter" prot="public">leveldb::log::Reader::Reporter</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <innernamespace refid="namespaceleveldb_1_1log">leveldb::log</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STORAGE_LEVELDB_DB_LOG_READER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STORAGE_LEVELDB_DB_LOG_READER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="log__format_8h" kindref="compound">db/log_format.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="slice_8h" kindref="compound">leveldb/slice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">leveldb/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SequentialFile;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">log<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classleveldb_1_1log_1_1_reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1log_1_1_reader" kindref="compound">Reader</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Interface<sp/>for<sp/>reporting<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classleveldb_1_1log_1_1_reader_1_1_reporter" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1log_1_1_reader_1_1_reporter" kindref="compound">Reporter</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1log_1_1_reader_1_1_reporter_1a7dddb01b6aec1f9c4b4a5ae65af10a92" kindref="member">~Reporter</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>corruption<sp/>was<sp/>detected.<sp/><sp/>&quot;size&quot;<sp/>is<sp/>the<sp/>approximate<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>bytes<sp/>dropped<sp/>due<sp/>to<sp/>the<sp/>corruption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1log_1_1_reader_1_1_reporter_1a2d28d30f9559d5fc9f94af41d239932e" kindref="member">Corruption</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref>&amp;<sp/>status)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>reader<sp/>that<sp/>will<sp/>return<sp/>log<sp/>records<sp/>from<sp/>&quot;*file&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;*file&quot;<sp/>must<sp/>remain<sp/>live<sp/>while<sp/>this<sp/>Reader<sp/>is<sp/>in<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>&quot;reporter&quot;<sp/>is<sp/>non-NULL,<sp/>it<sp/>is<sp/>notified<sp/>whenever<sp/>some<sp/>data<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dropped<sp/>due<sp/>to<sp/>a<sp/>detected<sp/>corruption.<sp/><sp/>&quot;*reporter&quot;<sp/>must<sp/>remain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>live<sp/>while<sp/>this<sp/>Reader<sp/>is<sp/>in<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>&quot;checksum&quot;<sp/>is<sp/>true,<sp/>verify<sp/>checksums<sp/>if<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Reader<sp/>will<sp/>start<sp/>reading<sp/>at<sp/>the<sp/>first<sp/>record<sp/>located<sp/>at<sp/>physical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>&gt;=<sp/>initial_offset<sp/>within<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1log_1_1_reader_1a38c1a9988741af5429dad60cf79f0556" kindref="member">Reader</ref>(<ref refid="classleveldb_1_1_sequential_file" kindref="compound">SequentialFile</ref>*<sp/>file,<sp/><ref refid="classleveldb_1_1log_1_1_reader_1_1_reporter" kindref="compound">Reporter</ref>*<sp/>reporter,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checksum,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>initial_offset);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1log_1_1_reader_1a52bc3896f8a0baee92f8c699553e7841" kindref="member">~Reader</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>next<sp/>record<sp/>into<sp/>*record.<sp/><sp/>Returns<sp/>true<sp/>if<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>successfully,<sp/>false<sp/>if<sp/>we<sp/>hit<sp/>end<sp/>of<sp/>the<sp/>input.<sp/><sp/>May<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;*scratch&quot;<sp/>as<sp/>temporary<sp/>storage.<sp/><sp/>The<sp/>contents<sp/>filled<sp/>in<sp/>*record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>only<sp/>be<sp/>valid<sp/>until<sp/>the<sp/>next<sp/>mutating<sp/>operation<sp/>on<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reader<sp/>or<sp/>the<sp/>next<sp/>mutation<sp/>to<sp/>*scratch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1log_1_1_reader_1a84059598c9367cb677a9d70d77993282" kindref="member">ReadRecord</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>record,<sp/>std::string*<sp/>scratch);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>physical<sp/>offset<sp/>of<sp/>the<sp/>last<sp/>record<sp/>returned<sp/>by<sp/>ReadRecord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Undefined<sp/>before<sp/>the<sp/>first<sp/>call<sp/>to<sp/>ReadRecord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1log_1_1_reader_1a358c5545069d86a61948ac0a021aa7f6" kindref="member">LastRecordOffset</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_sequential_file" kindref="compound">SequentialFile</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>file_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1log_1_1_reader_1_1_reporter" kindref="compound">Reporter</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reporter_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>checksum_;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>backing_store_;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>buffer_;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>eof_;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>Read()<sp/>indicated<sp/>EOF<sp/>by<sp/>returning<sp/>&lt;<sp/>kBlockSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>of<sp/>the<sp/>last<sp/>record<sp/>returned<sp/>by<sp/>ReadRecord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>last_record_offset_;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>of<sp/>the<sp/>first<sp/>location<sp/>past<sp/>the<sp/>end<sp/>of<sp/>buffer_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>end_of_buffer_offset_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>at<sp/>which<sp/>to<sp/>start<sp/>looking<sp/>for<sp/>the<sp/>first<sp/>record<sp/>to<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>initial_offset_;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Extend<sp/>record<sp/>types<sp/>with<sp/>the<sp/>following<sp/>special<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>kEof<sp/>=<sp/>kMaxRecordType<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returned<sp/>whenever<sp/>we<sp/>find<sp/>an<sp/>invalid<sp/>physical<sp/>record.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>there<sp/>are<sp/>three<sp/>situations<sp/>in<sp/>which<sp/>this<sp/>happens:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/>record<sp/>has<sp/>an<sp/>invalid<sp/>CRC<sp/>(ReadPhysicalRecord<sp/>reports<sp/>a<sp/>drop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/>record<sp/>is<sp/>a<sp/>0-length<sp/>record<sp/>(No<sp/>drop<sp/>is<sp/>reported)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/>record<sp/>is<sp/>below<sp/>constructor&apos;s<sp/>initial_offset<sp/>(No<sp/>drop<sp/>is<sp/>reported)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>kBadRecord<sp/>=<sp/>kMaxRecordType<sp/>+<sp/>2</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Skips<sp/>all<sp/>blocks<sp/>that<sp/>are<sp/>completely<sp/>before<sp/>&quot;initial_offset_&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>on<sp/>success.<sp/>Handles<sp/>reporting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SkipToInitialBlock();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>type,<sp/>or<sp/>one<sp/>of<sp/>the<sp/>preceding<sp/>special<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ReadPhysicalRecord(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>result);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reports<sp/>dropped<sp/>bytes<sp/>to<sp/>the<sp/>reporter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer_<sp/>must<sp/>be<sp/>updated<sp/>to<sp/>remove<sp/>the<sp/>dropped<sp/>bytes<sp/>prior<sp/>to<sp/>invocation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReportCorruption(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>bytes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reason);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReportDrop(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>bytes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref>&amp;<sp/>reason);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1log_1_1_reader_1a38c1a9988741af5429dad60cf79f0556" kindref="member">Reader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1log_1_1_reader" kindref="compound">Reader</ref>&amp;);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1log_1_1_reader" kindref="compound">Reader</ref>&amp;);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>STORAGE_LEVELDB_DB_LOG_READER_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/db/log_reader.h"/>
  </compounddef>
</doxygen>
