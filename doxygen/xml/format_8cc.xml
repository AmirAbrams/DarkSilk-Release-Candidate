<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="format_8cc" kind="file" language="C++">
    <compoundname>format.cc</compoundname>
    <includes refid="format_8h" local="yes">table/format.h</includes>
    <includes refid="env_8h" local="yes">leveldb/env.h</includes>
    <includes refid="port_8h" local="yes">port/port.h</includes>
    <includes refid="leveldb_2table_2block_8h" local="yes">table/block.h</includes>
    <includes refid="coding_8h" local="yes">util/coding.h</includes>
    <includes refid="crc32c_8h" local="yes">util/crc32c.h</includes>
    <incdepgraph>
      <node id="39323">
        <label>stdarg.h</label>
      </node>
      <node id="39315">
        <label>assert.h</label>
      </node>
      <node id="39320">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="39316" relation="include">
        </childnode>
      </node>
      <node id="39312">
        <label>string</label>
      </node>
      <node id="39310">
        <label>/home/dev/ds-160209/src/leveldb/table/format.cc</label>
        <link refid="format.cc"/>
        <childnode refid="39311" relation="include">
        </childnode>
        <childnode refid="39321" relation="include">
        </childnode>
        <childnode refid="39324" relation="include">
        </childnode>
        <childnode refid="39325" relation="include">
        </childnode>
        <childnode refid="39327" relation="include">
        </childnode>
        <childnode refid="39328" relation="include">
        </childnode>
      </node>
      <node id="39328">
        <label>util/crc32c.h</label>
        <link refid="crc32c_8h"/>
        <childnode refid="39316" relation="include">
        </childnode>
        <childnode refid="39313" relation="include">
        </childnode>
      </node>
      <node id="39316">
        <label>stddef.h</label>
      </node>
      <node id="39318">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="39312" relation="include">
        </childnode>
        <childnode refid="39314" relation="include">
        </childnode>
      </node>
      <node id="39327">
        <label>util/coding.h</label>
        <link refid="coding_8h"/>
        <childnode refid="39313" relation="include">
        </childnode>
        <childnode refid="39317" relation="include">
        </childnode>
        <childnode refid="39312" relation="include">
        </childnode>
        <childnode refid="39314" relation="include">
        </childnode>
        <childnode refid="39324" relation="include">
        </childnode>
      </node>
      <node id="39317">
        <label>string.h</label>
      </node>
      <node id="39322">
        <label>vector</label>
      </node>
      <node id="39325">
        <label>table/block.h</label>
        <link refid="leveldb_2table_2block_8h"/>
        <childnode refid="39316" relation="include">
        </childnode>
        <childnode refid="39313" relation="include">
        </childnode>
        <childnode refid="39326" relation="include">
        </childnode>
      </node>
      <node id="39324">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="39317" relation="include">
        </childnode>
      </node>
      <node id="39313">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="39319">
        <label>leveldb/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="39313" relation="include">
        </childnode>
        <childnode refid="39320" relation="include">
        </childnode>
        <childnode refid="39318" relation="include">
        </childnode>
      </node>
      <node id="39314">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="39315" relation="include">
        </childnode>
        <childnode refid="39316" relation="include">
        </childnode>
        <childnode refid="39317" relation="include">
        </childnode>
        <childnode refid="39312" relation="include">
        </childnode>
      </node>
      <node id="39311">
        <label>table/format.h</label>
        <link refid="format_8h"/>
        <childnode refid="39312" relation="include">
        </childnode>
        <childnode refid="39313" relation="include">
        </childnode>
        <childnode refid="39314" relation="include">
        </childnode>
        <childnode refid="39318" relation="include">
        </childnode>
        <childnode refid="39319" relation="include">
        </childnode>
      </node>
      <node id="39321">
        <label>leveldb/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="39312" relation="include">
        </childnode>
        <childnode refid="39322" relation="include">
        </childnode>
        <childnode refid="39323" relation="include">
        </childnode>
        <childnode refid="39313" relation="include">
        </childnode>
        <childnode refid="39318" relation="include">
        </childnode>
      </node>
      <node id="39326">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="39314" relation="include">
        </childnode>
        <childnode refid="39318" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="format_8h" kindref="compound">table/format.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="env_8h" kindref="compound">leveldb/env.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="port_8h" kindref="compound">port/port.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="leveldb_2table_2block_8h" kindref="compound">table/block.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coding_8h" kindref="compound">util/coding.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="crc32c_8h" kindref="compound">util/crc32c.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classleveldb_1_1_block_handle_1a71aa041d686d43e66ab570fce1ac388e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_block_handle_1a71aa041d686d43e66ab570fce1ac388e" kindref="member">BlockHandle::EncodeTo</ref>(std::string*<sp/>dst)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check<sp/>that<sp/>all<sp/>fields<sp/>have<sp/>been<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>assert(offset_<sp/>!=<sp/>~static_cast&lt;uint64_t&gt;(0));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>assert(size_<sp/>!=<sp/>~static_cast&lt;uint64_t&gt;(0));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a17889b1733282d6e80cf03fc0dd207d4" kindref="member">PutVarint64</ref>(dst,<sp/>offset_);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a17889b1733282d6e80cf03fc0dd207d4" kindref="member">PutVarint64</ref>(dst,<sp/>size_);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classleveldb_1_1_block_handle_1a1660fd202984d8d5bfa4bed6c5613621" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_block_handle_1a1660fd202984d8d5bfa4bed6c5613621" kindref="member">BlockHandle::DecodeFrom</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>input)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceleveldb_1aeb35486038249293e9b823f97dd9df0c" kindref="member">GetVarint64</ref>(input,<sp/>&amp;offset_)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeb35486038249293e9b823f97dd9df0c" kindref="member">GetVarint64</ref>(input,<sp/>&amp;size_))<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>block<sp/>handle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classleveldb_1_1_footer_1ac0148e441c2f25d7d24ec14ba2099f58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_footer_1ac0148e441c2f25d7d24ec14ba2099f58" kindref="member">Footer::EncodeTo</ref>(std::string*<sp/>dst)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>original_size<sp/>=<sp/>dst-&gt;size();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>metaindex_handle_.<ref refid="classleveldb_1_1_block_handle_1a71aa041d686d43e66ab570fce1ac388e" kindref="member">EncodeTo</ref>(dst);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>index_handle_.<ref refid="classleveldb_1_1_block_handle_1a71aa041d686d43e66ab570fce1ac388e" kindref="member">EncodeTo</ref>(dst);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>dst-&gt;resize(2<sp/>*<sp/><ref refid="classleveldb_1_1_block_handle_1a4153eecd289cbd4c8beb9a8bdd90aa82aa75d972eb34f4e3618f95d045539dd09" kindref="member">BlockHandle::kMaxEncodedLength</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>Padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1ac95f82421989b07d9d4993bdc2e2c555" kindref="member">PutFixed32</ref>(dst,<sp/>static_cast&lt;uint32_t&gt;(kTableMagicNumber<sp/>&amp;<sp/>0xffffffffu));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1ac95f82421989b07d9d4993bdc2e2c555" kindref="member">PutFixed32</ref>(dst,<sp/>static_cast&lt;uint32_t&gt;(kTableMagicNumber<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>assert(dst-&gt;size()<sp/>==<sp/>original_size<sp/>+<sp/><ref refid="classleveldb_1_1_footer_1a83b9789b124c3963f4d9cedd47b58ff6a52c5b622f817edcfaf2bb274851a3791" kindref="member">kEncodedLength</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classleveldb_1_1_footer_1a3cbcb311694e4cf410358f97d53d94e3" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_footer_1a3cbcb311694e4cf410358f97d53d94e3" kindref="member">Footer::DecodeFrom</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>input)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>magic_ptr<sp/>=<sp/>input-&gt;<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>()<sp/>+<sp/><ref refid="classleveldb_1_1_footer_1a83b9789b124c3963f4d9cedd47b58ff6a52c5b622f817edcfaf2bb274851a3791" kindref="member">kEncodedLength</ref><sp/>-<sp/>8;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>magic_lo<sp/>=<sp/><ref refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" kindref="member">DecodeFixed32</ref>(magic_ptr);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>magic_hi<sp/>=<sp/><ref refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" kindref="member">DecodeFixed32</ref>(magic_ptr<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>magic<sp/>=<sp/>((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(magic_hi)<sp/>&lt;&lt;<sp/>32)<sp/>|</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(magic_lo)));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magic<sp/>!=<sp/>kTableMagicNumber)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;not<sp/>an<sp/>sstable<sp/>(bad<sp/>magic<sp/>number)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>result<sp/>=<sp/>metaindex_handle_.<ref refid="classleveldb_1_1_block_handle_1a1660fd202984d8d5bfa4bed6c5613621" kindref="member">DecodeFrom</ref>(input);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>index_handle_.<ref refid="classleveldb_1_1_block_handle_1a1660fd202984d8d5bfa4bed6c5613621" kindref="member">DecodeFrom</ref>(input);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>skip<sp/>over<sp/>any<sp/>leftover<sp/>data<sp/>(just<sp/>padding<sp/>for<sp/>now)<sp/>in<sp/>&quot;input&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end<sp/>=<sp/>magic_ptr<sp/>+<sp/>8;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>*input<sp/>=<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(end,<sp/>input-&gt;<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>()<sp/>+<sp/>input-&gt;<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>()<sp/>-<sp/>end);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespaceleveldb_1a63198fc7656081fd62695dade629790b" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespaceleveldb_1a63198fc7656081fd62695dade629790b" kindref="member">ReadBlock</ref>(<ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref>*<sp/>file,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_block_handle" kindref="compound">BlockHandle</ref>&amp;<sp/>handle,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_block_contents" kindref="compound">BlockContents</ref>*<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1aa30fe6388fe0f89d5565f6bae788c28e" kindref="member">data</ref><sp/>=<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1ad9cbcf81fb1378ce5f9a0db2e8d4b539" kindref="member">cachable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1a0d4390fa3d4041ac5a3da51cbb16e315" kindref="member">heap_allocated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>block<sp/>contents<sp/>as<sp/>well<sp/>as<sp/>the<sp/>type/crc<sp/>footer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>table_builder.cc<sp/>for<sp/>the<sp/>code<sp/>that<sp/>built<sp/>this<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle.<ref refid="classleveldb_1_1_block_handle_1a44931c9086cb3c30f767c751c3a7daec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[n<sp/>+<sp/>kBlockTrailerSize];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>contents;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/>file-&gt;<ref refid="classleveldb_1_1_random_access_file_1a1a09fadcec904d9791a968acabca98d0" kindref="member">Read</ref>(handle.<ref refid="classleveldb_1_1_block_handle_1a31071c24f77e52a3bfc3a228f9f6c133" kindref="member">offset</ref>(),<sp/>n<sp/>+<sp/>kBlockTrailerSize,<sp/>&amp;contents,<sp/>buf);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contents.size()<sp/>!=<sp/>n<sp/>+<sp/>kBlockTrailerSize)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;truncated<sp/>block<sp/>read&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>crc<sp/>of<sp/>the<sp/>type<sp/>and<sp/>the<sp/>block<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>contents.data();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>to<sp/>where<sp/>Read<sp/>put<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="structleveldb_1_1_read_options_1a43731d67b707995e20571ad33c1f53f2" kindref="member">verify_checksums</ref>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>crc<sp/>=<sp/><ref refid="namespaceleveldb_1_1crc32c_1aef7889069ea26dd145509fff4c4e6b66" kindref="member">crc32c::Unmask</ref>(<ref refid="namespaceleveldb_1adae574304f9d1ed3e95742167cd449a9" kindref="member">DecodeFixed32</ref>(data<sp/>+<sp/>n<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>actual<sp/>=<sp/><ref refid="namespaceleveldb_1_1crc32c_1ac004d1e3d8c75b033c162e5ae0a5cc2c" kindref="member">crc32c::Value</ref>(data,<sp/>n<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>!=<sp/>crc)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;block<sp/>checksum<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data[n])<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" kindref="member">kNoCompression</ref>:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>!=<sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>File<sp/>implementation<sp/>gave<sp/>us<sp/>pointer<sp/>to<sp/>some<sp/>other<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>it<sp/>directly<sp/>under<sp/>the<sp/>assumption<sp/>that<sp/>it<sp/>will<sp/>be<sp/>live</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>while<sp/>the<sp/>file<sp/>is<sp/>open.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1aa30fe6388fe0f89d5565f6bae788c28e" kindref="member">data</ref><sp/>=<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(data,<sp/>n);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1a0d4390fa3d4041ac5a3da51cbb16e315" kindref="member">heap_allocated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1ad9cbcf81fb1378ce5f9a0db2e8d4b539" kindref="member">cachable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>double-cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1aa30fe6388fe0f89d5565f6bae788c28e" kindref="member">data</ref><sp/>=<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(buf,<sp/>n);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1a0d4390fa3d4041ac5a3da51cbb16e315" kindref="member">heap_allocated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1ad9cbcf81fb1378ce5f9a0db2e8d4b539" kindref="member">cachable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9bad0d4e00e3596bcc3b9bdfd970900a06e" kindref="member">kSnappyCompression</ref>:<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ulength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceleveldb_1_1port_1aad536a786dfc1df63d14c6b74178a73b" kindref="member">port::Snappy_GetUncompressedLength</ref>(data,<sp/>n,<sp/>&amp;ulength))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;corrupted<sp/>compressed<sp/>block<sp/>contents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ubuf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[ulength];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceleveldb_1_1port_1ab6f0c4381b00450e06d3000a8cb48a55" kindref="member">port::Snappy_Uncompress</ref>(data,<sp/>n,<sp/>ubuf))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>ubuf;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;corrupted<sp/>compressed<sp/>block<sp/>contents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1aa30fe6388fe0f89d5565f6bae788c28e" kindref="member">data</ref><sp/>=<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(ubuf,<sp/>ulength);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1a0d4390fa3d4041ac5a3da51cbb16e315" kindref="member">heap_allocated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structleveldb_1_1_block_contents_1ad9cbcf81fb1378ce5f9a0db2e8d4b539" kindref="member">cachable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buf;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>block<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/table/format.cc"/>
  </compounddef>
</doxygen>
