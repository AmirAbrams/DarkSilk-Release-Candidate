<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="coins_8cpp" kind="file" language="C++">
    <compoundname>coins.cpp</compoundname>
    <includes refid="coins_8h" local="yes">coins.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="txdb_8h" local="yes">txdb.h</includes>
    <includes local="no">assert.h</includes>
    <incdepgraph>
      <node id="32138">
        <label>list</label>
      </node>
      <node id="32107">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="32164">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32162" relation="include">
        </childnode>
      </node>
      <node id="32184">
        <label>netinet/in.h</label>
      </node>
      <node id="32090">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32105" relation="include">
        </childnode>
        <childnode refid="32092" relation="include">
        </childnode>
      </node>
      <node id="32177">
        <label>arpa/inet.h</label>
      </node>
      <node id="32169">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="32097">
        <label>limits</label>
      </node>
      <node id="32125">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32105" relation="include">
        </childnode>
      </node>
      <node id="32126">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="32127" relation="include">
        </childnode>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32109" relation="include">
        </childnode>
      </node>
      <node id="32089">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="32090" relation="include">
        </childnode>
        <childnode refid="32113" relation="include">
        </childnode>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32116" relation="include">
        </childnode>
        <childnode refid="32117" relation="include">
        </childnode>
        <childnode refid="32153" relation="include">
        </childnode>
        <childnode refid="32151" relation="include">
        </childnode>
      </node>
      <node id="32117">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32118" relation="include">
        </childnode>
        <childnode refid="32119" relation="include">
        </childnode>
        <childnode refid="32120" relation="include">
        </childnode>
        <childnode refid="32129" relation="include">
        </childnode>
        <childnode refid="32131" relation="include">
        </childnode>
        <childnode refid="32150" relation="include">
        </childnode>
      </node>
      <node id="32149">
        <label>openssl/rand.h</label>
      </node>
      <node id="32114">
        <label>assert.h</label>
      </node>
      <node id="32102">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="32183">
        <label>net/if.h</label>
      </node>
      <node id="32166">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="32089" relation="include">
        </childnode>
        <childnode refid="32167" relation="include">
        </childnode>
        <childnode refid="32086" relation="include">
        </childnode>
        <childnode refid="32090" relation="include">
        </childnode>
        <childnode refid="32172" relation="include">
        </childnode>
      </node>
      <node id="32163">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="32127" relation="include">
        </childnode>
      </node>
      <node id="32171">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="32111">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="32112" relation="include">
        </childnode>
        <childnode refid="32092" relation="include">
        </childnode>
      </node>
      <node id="32085">
        <label>/home/dev/ds-160209/src/coins.cpp</label>
        <link refid="coins.cpp"/>
        <childnode refid="32086" relation="include">
        </childnode>
        <childnode refid="32131" relation="include">
        </childnode>
        <childnode refid="32154" relation="include">
        </childnode>
        <childnode refid="32114" relation="include">
        </childnode>
      </node>
      <node id="32086">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="32087" relation="include">
        </childnode>
        <childnode refid="32166" relation="include">
        </childnode>
        <childnode refid="32114" relation="include">
        </childnode>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32118" relation="include">
        </childnode>
        <childnode refid="32194" relation="include">
        </childnode>
      </node>
      <node id="32108">
        <label>sys/mman.h</label>
      </node>
      <node id="32105">
        <label>stdlib.h</label>
      </node>
      <node id="32191">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="32192" relation="include">
        </childnode>
        <childnode refid="32131" relation="include">
        </childnode>
        <childnode refid="32189" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
        <childnode refid="32118" relation="include">
        </childnode>
      </node>
      <node id="32118">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="32148">
        <label>openssl/crypto.h</label>
      </node>
      <node id="32180">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="32181" relation="include">
        </childnode>
        <childnode refid="32108" relation="include">
        </childnode>
        <childnode refid="32182" relation="include">
        </childnode>
        <childnode refid="32132" relation="include">
        </childnode>
        <childnode refid="32183" relation="include">
        </childnode>
        <childnode refid="32184" relation="include">
        </childnode>
        <childnode refid="32177" relation="include">
        </childnode>
        <childnode refid="32185" relation="include">
        </childnode>
        <childnode refid="32109" relation="include">
        </childnode>
        <childnode refid="32186" relation="include">
        </childnode>
        <childnode refid="32110" relation="include">
        </childnode>
        <childnode refid="32187" relation="include">
        </childnode>
      </node>
      <node id="32144">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="32122">
        <label>openssl/sha.h</label>
      </node>
      <node id="32187">
        <label>errno.h</label>
      </node>
      <node id="32096">
        <label>cassert</label>
      </node>
      <node id="32115">
        <label>stdexcept</label>
      </node>
      <node id="32131">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="32132" relation="include">
        </childnode>
        <childnode refid="32133" relation="include">
        </childnode>
        <childnode refid="32134" relation="include">
        </childnode>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32135" relation="include">
        </childnode>
        <childnode refid="32090" relation="include">
        </childnode>
        <childnode refid="32094" relation="include">
        </childnode>
        <childnode refid="32138" relation="include">
        </childnode>
        <childnode refid="32139" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32140" relation="include">
        </childnode>
        <childnode refid="32141" relation="include">
        </childnode>
        <childnode refid="32142" relation="include">
        </childnode>
        <childnode refid="32143" relation="include">
        </childnode>
        <childnode refid="32144" relation="include">
        </childnode>
        <childnode refid="32145" relation="include">
        </childnode>
        <childnode refid="32146" relation="include">
        </childnode>
        <childnode refid="32147" relation="include">
        </childnode>
        <childnode refid="32148" relation="include">
        </childnode>
        <childnode refid="32149" relation="include">
        </childnode>
        <childnode refid="32130" relation="include">
        </childnode>
        <childnode refid="32098" relation="include">
        </childnode>
      </node>
      <node id="32188">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="32189" relation="include">
        </childnode>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32179" relation="include">
        </childnode>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32092" relation="include">
        </childnode>
      </node>
      <node id="32143">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="32159">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32151" relation="include">
        </childnode>
        <childnode refid="32160" relation="include">
        </childnode>
        <childnode refid="32163" relation="include">
        </childnode>
      </node>
      <node id="32092">
        <label>string</label>
      </node>
      <node id="32193">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32105" relation="include">
        </childnode>
        <childnode refid="32131" relation="include">
        </childnode>
        <childnode refid="32173" relation="include">
        </childnode>
      </node>
      <node id="32094">
        <label>map</label>
      </node>
      <node id="32140">
        <label>boost/thread.hpp</label>
      </node>
      <node id="32190">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="32179" relation="include">
        </childnode>
        <childnode refid="32188" relation="include">
        </childnode>
        <childnode refid="32167" relation="include">
        </childnode>
        <childnode refid="32153" relation="include">
        </childnode>
        <childnode refid="32131" relation="include">
        </childnode>
        <childnode refid="32094" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
      </node>
      <node id="32155">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32156" relation="include">
        </childnode>
        <childnode refid="32131" relation="include">
        </childnode>
        <childnode refid="32142" relation="include">
        </childnode>
        <childnode refid="32159" relation="include">
        </childnode>
        <childnode refid="32164" relation="include">
        </childnode>
      </node>
      <node id="32127">
        <label>stddef.h</label>
      </node>
      <node id="32119">
        <label>boost/variant.hpp</label>
      </node>
      <node id="32186">
        <label>netdb.h</label>
      </node>
      <node id="32181">
        <label>sys/fcntl.h</label>
      </node>
      <node id="32087">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="32088" relation="include">
        </childnode>
      </node>
      <node id="32162">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32161" relation="include">
        </childnode>
      </node>
      <node id="32172">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="32091">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
        <childnode refid="32094" relation="include">
        </childnode>
        <childnode refid="32095" relation="include">
        </childnode>
        <childnode refid="32096" relation="include">
        </childnode>
        <childnode refid="32097" relation="include">
        </childnode>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32099" relation="include">
        </childnode>
        <childnode refid="32100" relation="include">
        </childnode>
        <childnode refid="32101" relation="include">
        </childnode>
        <childnode refid="32102" relation="include">
        </childnode>
        <childnode refid="32103" relation="include">
        </childnode>
        <childnode refid="32111" relation="include">
        </childnode>
      </node>
      <node id="32109">
        <label>limits.h</label>
      </node>
      <node id="32168">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="32178">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="32095" relation="include">
        </childnode>
        <childnode refid="32174" relation="include">
        </childnode>
      </node>
      <node id="32134">
        <label>sys/resource.h</label>
      </node>
      <node id="32145">
        <label>openssl/bio.h</label>
      </node>
      <node id="32176">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="32179">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32180" relation="include">
        </childnode>
      </node>
      <node id="32121">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="32113" relation="include">
        </childnode>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32122" relation="include">
        </childnode>
        <childnode refid="32123" relation="include">
        </childnode>
        <childnode refid="32124" relation="include">
        </childnode>
        <childnode refid="32125" relation="include">
        </childnode>
        <childnode refid="32126" relation="include">
        </childnode>
        <childnode refid="32128" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
      </node>
      <node id="32185">
        <label>ifaddrs.h</label>
      </node>
      <node id="32150">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="32131" relation="include">
        </childnode>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32105" relation="include">
        </childnode>
        <childnode refid="32151" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
        <childnode refid="32152" relation="include">
        </childnode>
      </node>
      <node id="32132">
        <label>sys/types.h</label>
      </node>
      <node id="32158">
        <label>ios</label>
      </node>
      <node id="32106">
        <label>string.h</label>
      </node>
      <node id="32112">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="32100">
        <label>cstdio</label>
      </node>
      <node id="32170">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="32147">
        <label>openssl/buffer.h</label>
      </node>
      <node id="32101">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="32165">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="32166" relation="include">
        </childnode>
        <childnode refid="32173" relation="include">
        </childnode>
        <childnode refid="32117" relation="include">
        </childnode>
        <childnode refid="32156" relation="include">
        </childnode>
        <childnode refid="32154" relation="include">
        </childnode>
        <childnode refid="32191" relation="include">
        </childnode>
        <childnode refid="32138" relation="include">
        </childnode>
        <childnode refid="32194" relation="include">
        </childnode>
      </node>
      <node id="32142">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="32194">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="32120">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="32121" relation="include">
        </childnode>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32113" relation="include">
        </childnode>
        <childnode refid="32115" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
      </node>
      <node id="32110">
        <label>unistd.h</label>
      </node>
      <node id="32093">
        <label>vector</label>
      </node>
      <node id="32129">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32113" relation="include">
        </childnode>
        <childnode refid="32130" relation="include">
        </childnode>
        <childnode refid="32115" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
        <childnode refid="32098" relation="include">
        </childnode>
      </node>
      <node id="32173">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="32174" relation="include">
        </childnode>
        <childnode refid="32175" relation="include">
        </childnode>
        <childnode refid="32118" relation="include">
        </childnode>
        <childnode refid="32176" relation="include">
        </childnode>
        <childnode refid="32149" relation="include">
        </childnode>
        <childnode refid="32177" relation="include">
        </childnode>
        <childnode refid="32178" relation="include">
        </childnode>
        <childnode refid="32179" relation="include">
        </childnode>
        <childnode refid="32188" relation="include">
        </childnode>
        <childnode refid="32190" relation="include">
        </childnode>
        <childnode refid="32121" relation="include">
        </childnode>
        <childnode refid="32156" relation="include">
        </childnode>
      </node>
      <node id="32123">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="32141">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="32139">
        <label>utility</label>
      </node>
      <node id="32088">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="32089" relation="include">
        </childnode>
        <childnode refid="32154" relation="include">
        </childnode>
      </node>
      <node id="32137">
        <label>sstream</label>
      </node>
      <node id="32146">
        <label>openssl/evp.h</label>
      </node>
      <node id="32135">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="32096" relation="include">
        </childnode>
        <childnode refid="32136" relation="include">
        </childnode>
        <childnode refid="32137" relation="include">
        </childnode>
        <childnode refid="32115" relation="include">
        </childnode>
      </node>
      <node id="32098">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="32156">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="32103" relation="include">
        </childnode>
        <childnode refid="32091" relation="include">
        </childnode>
        <childnode refid="32157" relation="include">
        </childnode>
        <childnode refid="32114" relation="include">
        </childnode>
        <childnode refid="32158" relation="include">
        </childnode>
        <childnode refid="32097" relation="include">
        </childnode>
        <childnode refid="32094" relation="include">
        </childnode>
        <childnode refid="32095" relation="include">
        </childnode>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32106" relation="include">
        </childnode>
        <childnode refid="32139" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
      </node>
      <node id="32128">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32127" relation="include">
        </childnode>
        <childnode refid="32109" relation="include">
        </childnode>
      </node>
      <node id="32133">
        <label>sys/time.h</label>
      </node>
      <node id="32136">
        <label>iostream</label>
      </node>
      <node id="32174">
        <label>deque</label>
      </node>
      <node id="32113">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="32114" relation="include">
        </childnode>
        <childnode refid="32099" relation="include">
        </childnode>
        <childnode refid="32115" relation="include">
        </childnode>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
      </node>
      <node id="32182">
        <label>sys/socket.h</label>
      </node>
      <node id="32161">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="32114" relation="include">
        </childnode>
        <childnode refid="32127" relation="include">
        </childnode>
        <childnode refid="32106" relation="include">
        </childnode>
        <childnode refid="32092" relation="include">
        </childnode>
      </node>
      <node id="32175">
        <label>boost/array.hpp</label>
      </node>
      <node id="32130">
        <label>openssl/bn.h</label>
      </node>
      <node id="32154">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="32155" relation="include">
        </childnode>
        <childnode refid="32165" relation="include">
        </childnode>
        <childnode refid="32094" relation="include">
        </childnode>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32139" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
      </node>
      <node id="32153">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="32098" relation="include">
        </childnode>
      </node>
      <node id="32103">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="32104" relation="include">
        </childnode>
        <childnode refid="32106" relation="include">
        </childnode>
        <childnode refid="32092" relation="include">
        </childnode>
        <childnode refid="32107" relation="include">
        </childnode>
        <childnode refid="32094" relation="include">
        </childnode>
        <childnode refid="32108" relation="include">
        </childnode>
        <childnode refid="32109" relation="include">
        </childnode>
        <childnode refid="32110" relation="include">
        </childnode>
      </node>
      <node id="32189">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="32129" relation="include">
        </childnode>
        <childnode refid="32113" relation="include">
        </childnode>
        <childnode refid="32093" relation="include">
        </childnode>
      </node>
      <node id="32095">
        <label>set</label>
      </node>
      <node id="32157">
        <label>algorithm</label>
      </node>
      <node id="32124">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="32098" relation="include">
        </childnode>
        <childnode refid="32105" relation="include">
        </childnode>
      </node>
      <node id="32116">
        <label>util.h</label>
      </node>
      <node id="32151">
        <label>stdio.h</label>
      </node>
      <node id="32104">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="32105" relation="include">
        </childnode>
      </node>
      <node id="32099">
        <label>cstring</label>
      </node>
      <node id="32167">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="32168" relation="include">
        </childnode>
        <childnode refid="32169" relation="include">
        </childnode>
        <childnode refid="32170" relation="include">
        </childnode>
        <childnode refid="32107" relation="include">
        </childnode>
        <childnode refid="32171" relation="include">
        </childnode>
      </node>
      <node id="32152">
        <label>inttypes.h</label>
      </node>
      <node id="32160">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="32161" relation="include">
        </childnode>
        <childnode refid="32162" relation="include">
        </childnode>
      </node>
      <node id="32192">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="32089" relation="include">
        </childnode>
        <childnode refid="32128" relation="include">
        </childnode>
        <childnode refid="32193" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012-2016<sp/>The<sp/>Bitcoin<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coins_8h" kindref="compound">coins.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb_8h" kindref="compound">txdb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_c_coins_1a3dab547bdbce1152a2375c5c6c017ad5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_1a3dab547bdbce1152a2375c5c6c017ad5" kindref="member">CCoins::CalcMaskSize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;nBytes,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;nNonzeroBytes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLastUsedByte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>0;<sp/>2+b*8<sp/>&lt;<sp/><ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>.size();<sp/>b++)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fZero<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>2+b*8+i<sp/>&lt;<sp/><ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>[2+b*8+i].IsNull())<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fZero<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fZero)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLastUsedByte<sp/>=<sp/>b<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNonzeroBytes++;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>nBytes<sp/>+=<sp/>nLastUsedByte;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" kindref="member">CCoins::Spend</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>&amp;out,<sp/><ref refid="class_c_tx_in_undo" kindref="compound">CTxInUndo</ref><sp/>&amp;undo)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref><sp/>&gt;=<sp/><ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>.size())</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>[out.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].IsNull())</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>undo<sp/>=<sp/><ref refid="class_c_tx_in_undo" kindref="compound">CTxInUndo</ref>(<ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>[out.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>]);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>[out.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].SetNull();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coins_1a7cfa2efc07f4d35785c9c75caa8bddcb" kindref="member">Cleanup</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undo.<ref refid="class_c_tx_in_undo_1af022118f015a9b1b9ab96e04e8452292" kindref="member">nHeight</ref><sp/>=<sp/><ref refid="class_c_coins_1af7396dfad71367de46f21cf92e2c70ab" kindref="member">nHeight</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undo.<ref refid="class_c_tx_in_undo_1a5952f917224de3a2193157b856c47864" kindref="member">fCoinBase</ref><sp/>=<sp/><ref refid="class_c_coins_1adeedfaef84ba39b6e295d5d1fb9d8f0b" kindref="member">fCoinBase</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undo.<ref refid="class_c_tx_in_undo_1a193281289475ca792e436a7a02de23ef" kindref="member">nVersion</ref><sp/>=<sp/>this-&gt;<ref refid="class_c_coins_1a96fea4ee8841e9ce32f60c2e7e3cf6b6" kindref="member">nVersion</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_c_coins_1a99210076cac4b1ac521a532d3b5df182" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" kindref="member">CCoins::Spend</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPos)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in_undo" kindref="compound">CTxInUndo</ref><sp/>undo;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>out(0,<sp/>nPos);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_1a8d5fe8c1ab0c9558620448a19ecdb8b2" kindref="member">Spend</ref>(out,<sp/>undo);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_c_coins_view_1aaf5668eb2f9033583d7072dc2a3f96ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_1aaf5668eb2f9033583d7072dc2a3f96ef" kindref="member">CCoinsView::GetCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid,<sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref><sp/>&amp;coins)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="58" refid="class_c_coins_view_1a14c8db07cb11223426bb660861389f3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_1a14c8db07cb11223426bb660861389f3a" kindref="member">CCoinsView::HaveCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="59" refid="class_c_coins_view_1a556cf7661ff49df1ada5cd0ad552f8db" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="class_c_coins_view_1a556cf7661ff49df1ada5cd0ad552f8db" kindref="member">CCoinsView::GetBestBlock</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>(0);<sp/>}</highlight></codeline>
<codeline lineno="60" refid="class_c_coins_view_1ad7dc37396ca4fac7014cea06fec7178e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_1ad7dc37396ca4fac7014cea06fec7178e" kindref="member">CCoinsView::BatchWrite</ref>(<ref refid="coins_8h_1a2886ba2fd0428bae777e1cbcabc02834" kindref="member">CCoinsMap</ref><sp/>&amp;mapCoins,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hashBlock)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="61" refid="class_c_coins_view_1afd645b903fba9c6b84bdb898d764f5fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_1afd645b903fba9c6b84bdb898d764f5fc" kindref="member">CCoinsView::GetStats</ref>(<ref refid="struct_c_coins_stats" kindref="compound">CCoinsStats</ref><sp/>&amp;<ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_c_coins_view_backed_1af86a3b07433e8d84678772411791125e" refkind="member"><highlight class="normal"><ref refid="class_c_coins_view_backed_1af86a3b07433e8d84678772411791125e" kindref="member">CCoinsViewBacked::CCoinsViewBacked</ref>(<ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref><sp/>*viewIn)<sp/>:<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>(viewIn)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="65" refid="class_c_coins_view_backed_1a21b95a9910f94e9b7ebed62a6f329ea0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a21b95a9910f94e9b7ebed62a6f329ea0" kindref="member">CCoinsViewBacked::GetCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid,<sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref><sp/>&amp;coins)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1aaf5668eb2f9033583d7072dc2a3f96ef" kindref="member">GetCoins</ref>(txid,<sp/>coins);<sp/>}</highlight></codeline>
<codeline lineno="66" refid="class_c_coins_view_backed_1a6a769cf9cc55128dea8e1a2798056e71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a6a769cf9cc55128dea8e1a2798056e71" kindref="member">CCoinsViewBacked::HaveCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1a14c8db07cb11223426bb660861389f3a" kindref="member">HaveCoins</ref>(txid);<sp/>}</highlight></codeline>
<codeline lineno="67" refid="class_c_coins_view_backed_1a8465dc4764fd5b01591b824551cbbfab" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="class_c_coins_view_backed_1a8465dc4764fd5b01591b824551cbbfab" kindref="member">CCoinsViewBacked::GetBestBlock</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1a556cf7661ff49df1ada5cd0ad552f8db" kindref="member">GetBestBlock</ref>();<sp/>}</highlight></codeline>
<codeline lineno="68" refid="class_c_coins_view_backed_1a7eaddfbfd401a95c2fda2a8d8feaaf73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a7eaddfbfd401a95c2fda2a8d8feaaf73" kindref="member">CCoinsViewBacked::SetBackend</ref>(<ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref><sp/>&amp;viewIn)<sp/>{<sp/><ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref><sp/>=<sp/>&amp;viewIn;<sp/>}</highlight></codeline>
<codeline lineno="69" refid="class_c_coins_view_backed_1ace15da3934c9d7a9cb9c7a787f92f764" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1ace15da3934c9d7a9cb9c7a787f92f764" kindref="member">CCoinsViewBacked::BatchWrite</ref>(<ref refid="coins_8h_1a2886ba2fd0428bae777e1cbcabc02834" kindref="member">CCoinsMap</ref><sp/>&amp;mapCoins,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hashBlock)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1ad7dc37396ca4fac7014cea06fec7178e" kindref="member">BatchWrite</ref>(mapCoins,<sp/>hashBlock);<sp/>}</highlight></codeline>
<codeline lineno="70" refid="class_c_coins_view_backed_1a368f277ac68652a91ac171f46f02edca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a368f277ac68652a91ac171f46f02edca" kindref="member">CCoinsViewBacked::GetStats</ref>(<ref refid="struct_c_coins_stats" kindref="compound">CCoinsStats</ref><sp/>&amp;<ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1afd645b903fba9c6b84bdb898d764f5fc" kindref="member">GetStats</ref>(stats);<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_c_coins_key_hasher_1a2c2495e2dffdcbda511ed232cc47a575" refkind="member"><highlight class="normal"><ref refid="class_c_coins_key_hasher_1a2c2495e2dffdcbda511ed232cc47a575" kindref="member">CCoinsKeyHasher::CCoinsKeyHasher</ref>()<sp/>:<sp/>salt(<ref refid="util_8cpp_1af3aedae75efabb170337a497457f7ecf" kindref="member">GetRandHash</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_c_coins_view_cache_1a515a6f259af607fb3394b560d9c063c9" refkind="member"><highlight class="normal"><ref refid="class_c_coins_view_cache_1a515a6f259af607fb3394b560d9c063c9" kindref="member">CCoinsViewCache::CCoinsViewCache</ref>(<ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref><sp/>*baseIn)<sp/>:<sp/><ref refid="class_c_coins_view_backed" kindref="compound">CCoinsViewBacked</ref>(baseIn),<sp/>hasModifier(false),<sp/>hashBlock(0)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_c_coins_view_cache_1a6148421cb7605fb434f6c8622f39430b" refkind="member"><highlight class="normal"><ref refid="class_c_coins_view_cache_1a6148421cb7605fb434f6c8622f39430b" kindref="member">CCoinsViewCache::~CCoinsViewCache</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!<ref refid="class_c_coins_view_cache_1a363e27234d36bb0fc533d60cd64d1bc3" kindref="member">hasModifier</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">CCoinsMap::const_iterator<sp/>CCoinsViewCache::FetchCoins(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>CCoinsMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.find(txid);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.end())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1aaf5668eb2f9033583d7072dc2a3f96ef" kindref="member">GetCoins</ref>(txid,<sp/>tmp))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.end();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>CCoinsMap::iterator<sp/>ret<sp/>=<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.insert(std::make_pair(txid,<sp/><ref refid="struct_c_coins_cache_entry" kindref="compound">CCoinsCacheEntry</ref>())).first;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="class_c_coins_1a9581324a74e9500b3d2cad472c0a830f" kindref="member">swap</ref>(ret-&gt;second.coins);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret-&gt;second.coins.IsPruned())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>parent<sp/>only<sp/>has<sp/>an<sp/>empty<sp/>entry<sp/>for<sp/>this<sp/>txid;<sp/>we<sp/>can<sp/>consider<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>version<sp/>as<sp/>fresh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;second.flags<sp/>=<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7aae43958b088ff7b6e4f0daaafff00816" kindref="member">CCoinsCacheEntry::FRESH</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_c_coins_view_cache_1a27ec8311ae409ea1e3c3484c1d4a9035" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1a27ec8311ae409ea1e3c3484c1d4a9035" kindref="member">CCoinsViewCache::GetCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid,<sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref><sp/>&amp;coins)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>CCoinsMap::const_iterator<sp/>it<sp/>=<sp/>FetchCoins(txid);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coins<sp/>=<sp/>it-&gt;second.coins;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_c_coins_view_cache_1ab67c0d489873ed735c4fc52aa66f0830" refkind="member"><highlight class="normal"><ref refid="class_c_coins_modifier" kindref="compound">CCoinsModifier</ref><sp/><ref refid="class_c_coins_view_cache_1ab67c0d489873ed735c4fc52aa66f0830" kindref="member">CCoinsViewCache::ModifyCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!<ref refid="class_c_coins_view_cache_1a363e27234d36bb0fc533d60cd64d1bc3" kindref="member">hasModifier</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;CCoinsMap::iterator,<sp/>bool&gt;<sp/>ret<sp/>=<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.insert(std::make_pair(txid,<sp/><ref refid="struct_c_coins_cache_entry" kindref="compound">CCoinsCacheEntry</ref>()));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret.second)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1aaf5668eb2f9033583d7072dc2a3f96ef" kindref="member">GetCoins</ref>(txid,<sp/>ret.first-&gt;second.coins))<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>parent<sp/>view<sp/>does<sp/>not<sp/>have<sp/>this<sp/>entry;<sp/>mark<sp/>it<sp/>as<sp/>fresh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.first-&gt;second.coins.Clear();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.first-&gt;second.flags<sp/>=<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7aae43958b088ff7b6e4f0daaafff00816" kindref="member">CCoinsCacheEntry::FRESH</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret.first-&gt;second.coins.IsPruned())<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>parent<sp/>view<sp/>only<sp/>has<sp/>a<sp/>pruned<sp/>entry<sp/>for<sp/>this;<sp/>mark<sp/>it<sp/>as<sp/>fresh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.first-&gt;second.flags<sp/>=<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7aae43958b088ff7b6e4f0daaafff00816" kindref="member">CCoinsCacheEntry::FRESH</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>that<sp/>whenever<sp/>ModifyCoins<sp/>is<sp/>called,<sp/>the<sp/>entry<sp/>will<sp/>be<sp/>modified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.first-&gt;second.flags<sp/>|=<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7ac8cbd1b21d937e8618f9fecdf2c7223e" kindref="member">CCoinsCacheEntry::DIRTY</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1ae6ce8219acb79950bced74cb108acacf" kindref="member">CCoinsModifier</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ret.first);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_c_coins_view_cache_1a2b72aa925d9c1a1bd662f7e2852059d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref>*<sp/><ref refid="class_c_coins_view_cache_1a2b72aa925d9c1a1bd662f7e2852059d9" kindref="member">CCoinsViewCache::AccessCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>CCoinsMap::const_iterator<sp/>it<sp/>=<sp/>FetchCoins(txid);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;it-&gt;second.coins;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_c_coins_view_cache_1a25dddabe8734fc9823112763494da72b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1a25dddabe8734fc9823112763494da72b" kindref="member">CCoinsViewCache::HaveCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>CCoinsMap::const_iterator<sp/>it<sp/>=<sp/>FetchCoins(txid);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>using<sp/>vtx.empty()<sp/>instead<sp/>of<sp/>IsPruned<sp/>here<sp/>for<sp/>performance<sp/>reasons,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>we<sp/>only<sp/>care<sp/>about<sp/>the<sp/>case<sp/>where<sp/>a<sp/>transaction<sp/>was<sp/>replaced<sp/>entirely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>reorganization<sp/>(which<sp/>wipes<sp/>vout<sp/>entirely,<sp/>as<sp/>opposed<sp/>to<sp/>spending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>just<sp/>cleans<sp/>individual<sp/>outputs).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.end()<sp/>&amp;&amp;<sp/>!it-&gt;second.coins.vout.empty());</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_c_coins_view_cache_1aabcd1da9f28445e09c9af5f68ce7f100" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="class_c_coins_view_cache_1aabcd1da9f28445e09c9af5f68ce7f100" kindref="member">CCoinsViewCache::GetBestBlock</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_coins_view_cache_1a229dddddbc5501edc250209a2ce5df8b" kindref="member">hashBlock</ref><sp/>==<sp/><ref refid="classuint256" kindref="compound">uint256</ref>(0))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_coins_view_cache_1a229dddddbc5501edc250209a2ce5df8b" kindref="member">hashBlock</ref><sp/>=<sp/><ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1a556cf7661ff49df1ada5cd0ad552f8db" kindref="member">GetBestBlock</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1a229dddddbc5501edc250209a2ce5df8b" kindref="member">hashBlock</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_c_coins_view_cache_1aa3f787f77b123f0fd340fbe4e458b4ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1aa3f787f77b123f0fd340fbe4e458b4ad" kindref="member">CCoinsViewCache::SetBestBlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hashBlockIn)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coins_view_cache_1a229dddddbc5501edc250209a2ce5df8b" kindref="member">hashBlock</ref><sp/>=<sp/>hashBlockIn;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="class_c_coins_view_cache_1a561bb7c6c97701b12c48fbbb563d0a91" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1a561bb7c6c97701b12c48fbbb563d0a91" kindref="member">CCoinsViewCache::BatchWrite</ref>(<ref refid="coins_8h_1a2886ba2fd0428bae777e1cbcabc02834" kindref="member">CCoinsMap</ref><sp/>&amp;mapCoins,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hashBlockIn)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!<ref refid="class_c_coins_view_cache_1a363e27234d36bb0fc533d60cd64d1bc3" kindref="member">hasModifier</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CCoinsMap::iterator<sp/>it<sp/>=<sp/>mapCoins.begin();<sp/>it<sp/>!=<sp/>mapCoins.end();)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.flags<sp/>&amp;<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7ac8cbd1b21d937e8618f9fecdf2c7223e" kindref="member">CCoinsCacheEntry::DIRTY</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>non-dirty<sp/>entries<sp/>(optimization).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CCoinsMap::iterator<sp/>itUs<sp/>=<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.find(it-&gt;first);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itUs<sp/>==<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it-&gt;second.coins.IsPruned())<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>parent<sp/>cache<sp/>does<sp/>not<sp/>have<sp/>an<sp/>entry,<sp/>while<sp/>the<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>does<sp/>have<sp/>(a<sp/>non-pruned)<sp/>one.<sp/>Move<sp/>the<sp/>data<sp/>up,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>it<sp/>as<sp/>fresh<sp/>(if<sp/>the<sp/>grandparent<sp/>did<sp/>have<sp/>it,<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>have<sp/>pulled<sp/>it<sp/>in<sp/>at<sp/>first<sp/>GetCoins).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(it-&gt;second.flags<sp/>&amp;<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7aae43958b088ff7b6e4f0daaafff00816" kindref="member">CCoinsCacheEntry::FRESH</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_coins_cache_entry" kindref="compound">CCoinsCacheEntry</ref>&amp;<sp/>entry<sp/>=<sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>[it-&gt;first];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="struct_c_coins_cache_entry_1a343585f1fcb810f9c21fc25ae42a1eba" kindref="member">coins</ref>.<ref refid="class_c_coins_1a9581324a74e9500b3d2cad472c0a830f" kindref="member">swap</ref>(it-&gt;second.coins);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="struct_c_coins_cache_entry_1a05225c349f51777385e3a1c9b0eeaaed" kindref="member">flags</ref><sp/>=<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7ac8cbd1b21d937e8618f9fecdf2c7223e" kindref="member">CCoinsCacheEntry::DIRTY</ref><sp/>|<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7aae43958b088ff7b6e4f0daaafff00816" kindref="member">CCoinsCacheEntry::FRESH</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((itUs-&gt;second.flags<sp/>&amp;<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7aae43958b088ff7b6e4f0daaafff00816" kindref="member">CCoinsCacheEntry::FRESH</ref>)<sp/>&amp;&amp;<sp/>it-&gt;second.coins.IsPruned())<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>grandparent<sp/>does<sp/>not<sp/>have<sp/>an<sp/>entry,<sp/>and<sp/>the<sp/>child<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modified<sp/>and<sp/>being<sp/>pruned.<sp/>This<sp/>means<sp/>we<sp/>can<sp/>just<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>from<sp/>the<sp/>parent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.erase(itUs);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>normal<sp/>modification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itUs-&gt;second.coins.swap(it-&gt;second.coins);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itUs-&gt;second.flags<sp/>|=<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7ac8cbd1b21d937e8618f9fecdf2c7223e" kindref="member">CCoinsCacheEntry::DIRTY</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CCoinsMap::iterator<sp/>itOld<sp/>=<sp/>it++;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapCoins.erase(itOld);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coins_view_cache_1a229dddddbc5501edc250209a2ce5df8b" kindref="member">hashBlock</ref><sp/>=<sp/>hashBlockIn;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_c_coins_view_cache_1ac9888d4feaa46666d03871cd7cd1c01d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1ac9888d4feaa46666d03871cd7cd1c01d" kindref="member">CCoinsViewCache::Flush</ref>()<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOk<sp/>=<sp/><ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1ad7dc37396ca4fac7014cea06fec7178e" kindref="member">BatchWrite</ref>(<ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>,<sp/><ref refid="class_c_coins_view_cache_1a229dddddbc5501edc250209a2ce5df8b" kindref="member">hashBlock</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.clear();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fOk;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_c_coins_view_cache_1a5e8c37ab1b772d00b57e2b40256a4646" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1a5e8c37ab1b772d00b57e2b40256a4646" kindref="member">CCoinsViewCache::GetCacheSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.size();</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class_c_coins_view_cache_1aa441d7d3869be2f164af1c52a3acb56a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>&amp;<ref refid="class_c_coins_view_cache_1aa441d7d3869be2f164af1c52a3acb56a" kindref="member">CCoinsViewCache::GetOutputFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>input)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="200"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref>*<sp/>coins<sp/>=<sp/><ref refid="class_c_coins_view_cache_1a2b72aa925d9c1a1bd662f7e2852059d9" kindref="member">AccessCoins</ref>(input.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(coins<sp/>&amp;&amp;<sp/>coins-&gt;<ref refid="class_c_coins_1a69bdcbac02e1644cb02b2645068777b5" kindref="member">IsAvailable</ref>(input.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coins-&gt;<ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>[input.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>];</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="class_c_coins_view_cache_1a7fd5ad106e1ac2c2770005672421ff93" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_coins_view_cache_1a7fd5ad106e1ac2c2770005672421ff93" kindref="member">CCoinsViewCache::GetValueIn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="207"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx.<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>())</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nResult<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nResult<sp/>+=<sp/><ref refid="class_c_coins_view_cache_1aa441d7d3869be2f164af1c52a3acb56a" kindref="member">GetOutputFor</ref>(tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[i]).<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nResult;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_c_coins_view_cache_1a2b547a48709e9f9af9a4cfc77a328a3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1a2b547a48709e9f9af9a4cfc77a328a3f" kindref="member">CCoinsViewCache::HaveInputs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tx.<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>())<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>&amp;prevout<sp/>=<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[i].prevout;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref>*<sp/>coins<sp/>=<sp/><ref refid="class_c_coins_view_cache_1a2b72aa925d9c1a1bd662f7e2852059d9" kindref="member">AccessCoins</ref>(prevout.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coins<sp/>||<sp/>!coins-&gt;<ref refid="class_c_coins_1a69bdcbac02e1644cb02b2645068777b5" kindref="member">IsAvailable</ref>(prevout.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>))<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_c_coins_view_cache_1a0ba6f2f115a73a91d3cfb8f59569099d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache_1a0ba6f2f115a73a91d3cfb8f59569099d" kindref="member">CCoinsViewCache::GetPriority</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="233"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx.<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>())</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dResult<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref>*<sp/>coins<sp/>=<sp/><ref refid="class_c_coins_view_cache_1a2b72aa925d9c1a1bd662f7e2852059d9" kindref="member">AccessCoins</ref>(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(coins);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coins-&gt;<ref refid="class_c_coins_1a69bdcbac02e1644cb02b2645068777b5" kindref="member">IsAvailable</ref>(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coins-&gt;<ref refid="class_c_coins_1af7396dfad71367de46f21cf92e2c70ab" kindref="member">nHeight</ref><sp/>&lt;<sp/>nHeight)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dResult<sp/>+=<sp/>coins-&gt;<ref refid="class_c_coins_1a1dcea1a6da9b25642337e286f9f59b03" kindref="member">vout</ref>[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].nValue<sp/>*<sp/>(nHeight-coins-&gt;<ref refid="class_c_coins_1af7396dfad71367de46f21cf92e2c70ab" kindref="member">nHeight</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx.<ref refid="class_c_transaction_1ad2452fe2ae424f43e5fd767c28517b3b" kindref="member">ComputePriority</ref>(dResult);</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">CCoinsModifier::CCoinsModifier(<ref refid="class_c_coins_view_cache" kindref="compound">CCoinsViewCache</ref>&amp;<sp/>cache_,<sp/>CCoinsMap::iterator<sp/>it_)<sp/>:<sp/>cache(cache_),<sp/>it(it_)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!cache.hasModifier);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>cache.hasModifier<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class_c_coins_modifier_1aacb75869fd2cabec97645eb46f42e98b" refkind="member"><highlight class="normal"><ref refid="class_c_coins_modifier_1aacb75869fd2cabec97645eb46f42e98b" kindref="member">CCoinsModifier::~CCoinsModifier</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cache.<ref refid="class_c_coins_view_cache_1a363e27234d36bb0fc533d60cd64d1bc3" kindref="member">hasModifier</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>cache.<ref refid="class_c_coins_view_cache_1a363e27234d36bb0fc533d60cd64d1bc3" kindref="member">hasModifier</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>it-&gt;second.coins.Cleanup();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it-&gt;second.flags<sp/>&amp;<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7aae43958b088ff7b6e4f0daaafff00816" kindref="member">CCoinsCacheEntry::FRESH</ref>)<sp/>&amp;&amp;<sp/>it-&gt;second.coins.IsPruned())<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache.<ref refid="class_c_coins_view_cache_1af33cc2c6d38af65ac833d4d13c8e3764" kindref="member">cacheCoins</ref>.erase(it);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="class_c_coins_view_d_b_1a209841b241febcccb2ec584b886ad374" refkind="member"><highlight class="normal"><ref refid="class_c_coins_view_d_b_1a209841b241febcccb2ec584b886ad374" kindref="member">CCoinsViewDB::CCoinsViewDB</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nCacheSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fMemory,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fWipe)<sp/>:<sp/>db(<ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;chainstate&quot;</highlight><highlight class="normal">,<sp/>nCacheSize,<sp/>fMemory,<sp/>fWipe)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="class_c_coins_view_d_b_1a20655c9c13a6124cdcf210206d518d92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_d_b_1a20655c9c13a6124cdcf210206d518d92" kindref="member">CCoinsViewDB::GetCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid,<sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref><sp/>&amp;coins)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_d_b_1aba0a7b26fe82c1a2e80ca060d12fb66a" kindref="member">db</ref>.<ref refid="class_c_level_d_b_wrapper_1aa3b816ae43c930b4bf1f85461bff4b5b" kindref="member">Read</ref>(make_pair(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>txid),<sp/>coins);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="class_c_coins_view_d_b_1a4d08cf2d3440c1de4e48cfddd67962d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_d_b_1a4d08cf2d3440c1de4e48cfddd67962d7" kindref="member">CCoinsViewDB::HaveCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_d_b_1aba0a7b26fe82c1a2e80ca060d12fb66a" kindref="member">db</ref>.<ref refid="class_c_level_d_b_wrapper_1a9c9d2e1c06c45c5d6883f33136f6718b" kindref="member">Exists</ref>(make_pair(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>txid));</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_c_coins_view_d_b_1a01777676c2eafd2970a9d53e5fb4a49a" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="class_c_coins_view_d_b_1a01777676c2eafd2970a9d53e5fb4a49a" kindref="member">CCoinsViewDB::GetBestBlock</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="main_8cpp_1ace9c3343567f488a96598abe61e1d309" kindref="member">hashBestChain</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_coins_view_d_b_1aba0a7b26fe82c1a2e80ca060d12fb66a" kindref="member">db</ref>.<ref refid="class_c_level_d_b_wrapper_1aa3b816ae43c930b4bf1f85461bff4b5b" kindref="member">Read</ref>(</highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">,<sp/>hashBestChain))</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>(0);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ace9c3343567f488a96598abe61e1d309" kindref="member">hashBestChain</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="class_c_coins_view_d_b_1a33f98ec9323ce48e1704327bc8a2a002" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_d_b_1a33f98ec9323ce48e1704327bc8a2a002" kindref="member">CCoinsViewDB::BatchWrite</ref>(<ref refid="coins_8h_1a2886ba2fd0428bae777e1cbcabc02834" kindref="member">CCoinsMap</ref><sp/>&amp;mapCoins,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hashBlock)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_level_d_b_batch" kindref="compound">CLevelDBBatch</ref><sp/>batch;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>changed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CCoinsMap::iterator<sp/>it<sp/>=<sp/>mapCoins.begin();<sp/>it<sp/>!=<sp/>mapCoins.end();)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.flags<sp/>&amp;<sp/><ref refid="struct_c_coins_cache_entry_1a1d5ac74da0f6ff5ab056e47ce79753c7ac8cbd1b21d937e8618f9fecdf2c7223e" kindref="member">CCoinsCacheEntry::DIRTY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="txdb_8cpp_1ac78624a7ae785f74ad74dd33341b6cd4" kindref="member">BatchWriteCoins</ref>(batch,<sp/>it-&gt;first,<sp/>it-&gt;second.coins);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed++;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CCoinsMap::iterator<sp/>itOld<sp/>=<sp/>it++;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapCoins.erase(itOld);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hashBlock<sp/>!=<sp/><ref refid="classuint256" kindref="compound">uint256</ref>(0))</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="txdb_8cpp_1a51ba67d9783e3a8bbc639f48fc43f48e" kindref="member">BatchWriteHashBestChain</ref>(batch,<sp/>hashBlock);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;coindb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Committing<sp/>%u<sp/>changed<sp/>transactions<sp/>(out<sp/>of<sp/>%u)<sp/>to<sp/>coin<sp/>database...\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)changed,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)count);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_d_b_1aba0a7b26fe82c1a2e80ca060d12fb66a" kindref="member">db</ref>.<ref refid="class_c_level_d_b_wrapper_1a820484c9e427f9e3400396e750acf4b8" kindref="member">WriteBatch</ref>(batch);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_c_coins_view_d_b_1a6bbe15962b0efd519e30dada872f01c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_d_b_1a6bbe15962b0efd519e30dada872f01c5" kindref="member">CCoinsViewDB::GetStats</ref>(<ref refid="struct_c_coins_stats" kindref="compound">CCoinsStats</ref><sp/>&amp;<ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>seems<sp/>that<sp/>there<sp/>are<sp/>no<sp/>&quot;const<sp/>iterators&quot;<sp/>for<sp/>LevelDB.<sp/><sp/>Since<sp/>we</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>need<sp/>read<sp/>operations<sp/>on<sp/>it,<sp/>use<sp/>a<sp/>const-cast<sp/>to<sp/>get<sp/>around</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>restriction.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::scoped_ptr&lt;leveldb::Iterator&gt;<sp/>pcursor(const_cast&lt;CLevelDBWrapper*&gt;(&amp;<ref refid="class_c_coins_view_d_b_1aba0a7b26fe82c1a2e80ca060d12fb66a" kindref="member">db</ref>)-&gt;NewIterator());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>pcursor-&gt;SeekToFirst();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="struct_c_coins_stats_1a75b32757ea85b8df6453490e1acc4607" kindref="member">hashBlock</ref><sp/>=<sp/><ref refid="class_c_coins_view_d_b_1a01777676c2eafd2970a9d53e5fb4a49a" kindref="member">GetBestBlock</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>stats.<ref refid="struct_c_coins_stats_1a75b32757ea85b8df6453490e1acc4607" kindref="member">hashBlock</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotalAmount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pcursor-&gt;Valid())<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::this_thread::interruption_point();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">leveldb::Slice</ref><sp/>slKey<sp/>=<sp/>pcursor-&gt;key();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssKey(slKey.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>slKey.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>()+slKey.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>(),<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chType;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssKey<sp/>&gt;&gt;<sp/>chType;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chType<sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">leveldb::Slice</ref><sp/>slValue<sp/>=<sp/>pcursor-&gt;value();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssValue(slValue.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>slValue.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>()+slValue.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>(),<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref><sp/>coins;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssValue<sp/>&gt;&gt;<sp/>coins;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>txhash;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssKey<sp/>&gt;&gt;<sp/>txhash;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>txhash;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(coins.nVersion);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>(coins.fCoinBase<sp/>?<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(coins.nHeight);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats.<ref refid="struct_c_coins_stats_1a0b04da159443c350e9b9e8a39c6a82db" kindref="member">nTransactions</ref>++;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;coins.vout.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>&amp;out<sp/>=<sp/>coins.vout[i];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out.<ref refid="class_c_tx_out_1aeaa6b16e0c4caee54196cf8eb0f127f3" kindref="member">IsNull</ref>())<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats.<ref refid="struct_c_coins_stats_1a02612be210ba7c628d04ddedd83b9ff0" kindref="member">nTransactionOutputs</ref>++;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(i+1);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>out;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalAmount<sp/>+=<sp/>out.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats.<ref refid="struct_c_coins_stats_1ac4302ffc2f8be6e62dbc5655f77e4202" kindref="member">nSerializedSize</ref><sp/>+=<sp/>32<sp/>+<sp/>slValue.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(0);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcursor-&gt;Next();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Deserialize<sp/>or<sp/>I/O<sp/>error<sp/>-<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>e.what());</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="struct_c_coins_stats_1a5972700c4733ce02e12530d758e95d8c" kindref="member">nHeight</ref><sp/>=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.find(<ref refid="class_c_coins_view_d_b_1a01777676c2eafd2970a9d53e5fb4a49a" kindref="member">GetBestBlock</ref>())-&gt;second-&gt;nHeight;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="struct_c_coins_stats_1a0ce8e745d7a62e4ae41f943333c81d7c" kindref="member">hashSerialized</ref><sp/>=<sp/>ss.<ref refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="struct_c_coins_stats_1a97c76344c650e55377d5f9246a906cc4" kindref="member">nTotalAmount</ref><sp/>=<sp/>nTotalAmount;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="class_c_coins_view_mem_pool_1aab9a206c304acec322fddf646c7bafb9" refkind="member"><highlight class="normal"><ref refid="class_c_coins_view_mem_pool_1aab9a206c304acec322fddf646c7bafb9" kindref="member">CCoinsViewMemPool::CCoinsViewMemPool</ref>(<ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref><sp/>*baseIn,<sp/><ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref><sp/>&amp;mempoolIn)<sp/>:<sp/><ref refid="class_c_coins_view_backed" kindref="compound">CCoinsViewBacked</ref>(baseIn),<sp/><ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>(mempoolIn)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="class_c_coins_view_mem_pool_1a01564f29ff2673ddd0d27414e576f1bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_mem_pool_1a01564f29ff2673ddd0d27414e576f1bc" kindref="member">CCoinsViewMemPool::GetCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid,<sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref><sp/>&amp;coins)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>mempool<sp/>exists,<sp/>always<sp/>return<sp/>that<sp/>one,<sp/>as<sp/>it&apos;s<sp/>guaranteed<sp/>to<sp/>never</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conflict<sp/>with<sp/>the<sp/>underlying<sp/>cache,<sp/>and<sp/>it<sp/>cannot<sp/>have<sp/>pruned<sp/>entries<sp/>(as<sp/>it<sp/>contains<sp/>full)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transactions.<sp/>First<sp/>checking<sp/>the<sp/>underlying<sp/>cache<sp/>risks<sp/>returning<sp/>a<sp/>pruned<sp/>entry<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_coins_view_mem_pool_1a7a3870fc65376cb311a0b3abb28fec10" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a8c19232d17e668c6690721b0f5088960" kindref="member">lookup</ref>(txid,<sp/>tx))<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coins<sp/>=<sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref>(tx,<sp/>MEMPOOL_HEIGHT);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1aaf5668eb2f9033583d7072dc2a3f96ef" kindref="member">GetCoins</ref>(txid,<sp/>coins)<sp/>&amp;&amp;<sp/>!coins.<ref refid="class_c_coins_1af28a2e44f0b41c3a4a6366607b4b8f81" kindref="member">IsPruned</ref>());</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="class_c_coins_view_mem_pool_1a965e6c8e378fe937620ba2c180d1ed74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_mem_pool_1a965e6c8e378fe937620ba2c180d1ed74" kindref="member">CCoinsViewMemPool::HaveCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_mem_pool_1a7a3870fc65376cb311a0b3abb28fec10" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a93b2aa8c01fa291d183a82a9e0beeb35" kindref="member">exists</ref>(txid)<sp/>||<sp/><ref refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" kindref="member">base</ref>-&gt;<ref refid="class_c_coins_view_1a14c8db07cb11223426bb660861389f3a" kindref="member">HaveCoins</ref>(txid);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Amount<sp/>compression:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>If<sp/>the<sp/>amount<sp/>is<sp/>0,<sp/>output<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>first,<sp/>divide<sp/>the<sp/>amount<sp/>(in<sp/>base<sp/>units)<sp/>by<sp/>the<sp/>largest<sp/>power<sp/>of<sp/>10<sp/>possible;<sp/>call<sp/>the<sp/>exponent<sp/>e<sp/>(e<sp/>is<sp/>max<sp/>9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>if<sp/>e&lt;9,<sp/>the<sp/>last<sp/>digit<sp/>of<sp/>the<sp/>resulting<sp/>number<sp/>cannot<sp/>be<sp/>0;<sp/>store<sp/>it<sp/>as<sp/>d,<sp/>and<sp/>drop<sp/>it<sp/>(divide<sp/>by<sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>call<sp/>the<sp/>result<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>output<sp/>1<sp/>+<sp/>10*(9*n<sp/>+<sp/>d<sp/>-<sp/>1)<sp/>+<sp/>e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>if<sp/>e==9,<sp/>we<sp/>only<sp/>know<sp/>the<sp/>resulting<sp/>number<sp/>is<sp/>not<sp/>zero,<sp/>so<sp/>output<sp/>1<sp/>+<sp/>10*(n<sp/>-<sp/>1)<sp/>+<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(this<sp/>is<sp/>decodable,<sp/>as<sp/>d<sp/>is<sp/>in<sp/>[1-9]<sp/>and<sp/>e<sp/>is<sp/>in<sp/>[0-9])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="class_c_tx_out_compressor_coin_1a9ce8ffc644da7218f91d5390fd835e36" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="class_c_tx_out_compressor_coin_1a9ce8ffc644da7218f91d5390fd835e36" kindref="member">CTxOutCompressorCoin::CompressAmount</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>n)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(((n<sp/>%<sp/>10)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>e<sp/>&lt;<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e++;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>&lt;<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>(n<sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(d<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>d<sp/>&lt;=<sp/>9);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/>(n*9<sp/>+<sp/>d<sp/>-<sp/>1)*10<sp/>+<sp/>e;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/>(n<sp/>-<sp/>1)*10<sp/>+<sp/>9;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_c_tx_out_compressor_coin_1afc4ea4c94e9a935b0e18621aef621574" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="class_c_tx_out_compressor_coin_1afc4ea4c94e9a935b0e18621aef621574" kindref="member">CTxOutCompressorCoin::DecompressAmount</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>x)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>=<sp/>0<sp/><sp/>OR<sp/><sp/>x<sp/>=<sp/>1+10*(9*n<sp/>+<sp/>d<sp/>-<sp/>1)<sp/>+<sp/>e<sp/><sp/>OR<sp/><sp/>x<sp/>=<sp/>1+10*(n<sp/>-<sp/>1)<sp/>+<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>x--;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>=<sp/>10*(9*n<sp/>+<sp/>d<sp/>-<sp/>1)<sp/>+<sp/>e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>x<sp/>%<sp/>10;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>&lt;<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>=<sp/>9*n<sp/>+<sp/>d<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>(x<sp/>%<sp/>9)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>/=<sp/>9;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>=<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>x*10<sp/>+<sp/>d;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>x+1;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e--;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/coins.cpp"/>
  </compounddef>
</doxygen>
