<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="guiutil_8cpp" kind="file" language="C++">
    <compoundname>guiutil.cpp</compoundname>
    <includes local="no">QApplication</includes>
    <includes refid="guiutil_8h" local="yes">guiutil.h</includes>
    <includes refid="transaction_8h" local="yes">primitives/transaction.h</includes>
    <includes refid="darksilkaddressvalidator_8h" local="yes">darksilkaddressvalidator.h</includes>
    <includes refid="walletmodel_8h" local="yes">walletmodel.h</includes>
    <includes refid="darksilkunits_8h" local="yes">darksilkunits.h</includes>
    <includes local="yes">util.h</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes local="no">QDateTime</includes>
    <includes local="no">QDoubleValidator</includes>
    <includes local="no">QFont</includes>
    <includes local="no">QLineEdit</includes>
    <includes local="no">QUrl</includes>
    <includes local="no">QTextDocument</includes>
    <includes local="no">QAbstractItemView</includes>
    <includes local="no">QClipboard</includes>
    <includes local="no">QFileDialog</includes>
    <includes local="no">QDesktopServices</includes>
    <includes local="no">QThread</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">boost/filesystem/fstream.hpp</includes>
    <incdepgraph>
      <node id="15065">
        <label>list</label>
      </node>
      <node id="15034">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="15132">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15130" relation="include">
        </childnode>
      </node>
      <node id="15112">
        <label>netinet/in.h</label>
      </node>
      <node id="15017">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
      </node>
      <node id="15105">
        <label>arpa/inet.h</label>
      </node>
      <node id="15090">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="15024">
        <label>limits</label>
      </node>
      <node id="15140">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="15009">
        <label>/home/dev/ds-160209/src/qt/guiutil.cpp</label>
        <link refid="guiutil.cpp"/>
        <childnode refid="15010" relation="include">
        </childnode>
        <childnode refid="15011" relation="include">
        </childnode>
        <childnode refid="15016" relation="include">
        </childnode>
        <childnode refid="15081" relation="include">
        </childnode>
        <childnode refid="15083" relation="include">
        </childnode>
        <childnode refid="15138" relation="include">
        </childnode>
        <childnode refid="15043" relation="include">
        </childnode>
        <childnode refid="15140" relation="include">
        </childnode>
        <childnode refid="15141" relation="include">
        </childnode>
        <childnode refid="15142" relation="include">
        </childnode>
        <childnode refid="15143" relation="include">
        </childnode>
        <childnode refid="15144" relation="include">
        </childnode>
        <childnode refid="15145" relation="include">
        </childnode>
        <childnode refid="15146" relation="include">
        </childnode>
        <childnode refid="15147" relation="include">
        </childnode>
        <childnode refid="15148" relation="include">
        </childnode>
        <childnode refid="15149" relation="include">
        </childnode>
        <childnode refid="15150" relation="include">
        </childnode>
        <childnode refid="15151" relation="include">
        </childnode>
        <childnode refid="15068" relation="include">
        </childnode>
        <childnode refid="15152" relation="include">
        </childnode>
      </node>
      <node id="15052">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
      </node>
      <node id="15053">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="15054" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15036" relation="include">
        </childnode>
      </node>
      <node id="15016">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="15040" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15043" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
        <childnode refid="15080" relation="include">
        </childnode>
        <childnode refid="15078" relation="include">
        </childnode>
      </node>
      <node id="15044">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15045" relation="include">
        </childnode>
        <childnode refid="15046" relation="include">
        </childnode>
        <childnode refid="15047" relation="include">
        </childnode>
        <childnode refid="15056" relation="include">
        </childnode>
        <childnode refid="15058" relation="include">
        </childnode>
        <childnode refid="15077" relation="include">
        </childnode>
      </node>
      <node id="15076">
        <label>openssl/rand.h</label>
      </node>
      <node id="15086">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="15087" relation="include">
        </childnode>
        <childnode refid="15097" relation="include">
        </childnode>
        <childnode refid="15077" relation="include">
        </childnode>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="15065" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15066" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15014">
        <label>QMessageBox</label>
      </node>
      <node id="15041">
        <label>assert.h</label>
      </node>
      <node id="15029">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="15111">
        <label>net/if.h</label>
      </node>
      <node id="15121">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="15016" relation="include">
        </childnode>
        <childnode refid="15088" relation="include">
        </childnode>
        <childnode refid="15122" relation="include">
        </childnode>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="15134" relation="include">
        </childnode>
      </node>
      <node id="15141">
        <label>QDateTime</label>
      </node>
      <node id="15131">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="15054" relation="include">
        </childnode>
      </node>
      <node id="15013">
        <label>QObject</label>
      </node>
      <node id="15092">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="15038">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="15039" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
      </node>
      <node id="15122">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="15123" relation="include">
        </childnode>
        <childnode refid="15121" relation="include">
        </childnode>
        <childnode refid="15041" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15045" relation="include">
        </childnode>
        <childnode refid="15133" relation="include">
        </childnode>
      </node>
      <node id="15035">
        <label>sys/mman.h</label>
      </node>
      <node id="15032">
        <label>stdlib.h</label>
      </node>
      <node id="15135">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="15100" relation="include">
        </childnode>
        <childnode refid="15058" relation="include">
        </childnode>
        <childnode refid="15117" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15045" relation="include">
        </childnode>
      </node>
      <node id="15045">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="15151">
        <label>QThread</label>
      </node>
      <node id="15075">
        <label>openssl/crypto.h</label>
      </node>
      <node id="15152">
        <label>boost/filesystem/fstream.hpp</label>
      </node>
      <node id="15108">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="15109" relation="include">
        </childnode>
        <childnode refid="15035" relation="include">
        </childnode>
        <childnode refid="15110" relation="include">
        </childnode>
        <childnode refid="15059" relation="include">
        </childnode>
        <childnode refid="15111" relation="include">
        </childnode>
        <childnode refid="15112" relation="include">
        </childnode>
        <childnode refid="15105" relation="include">
        </childnode>
        <childnode refid="15113" relation="include">
        </childnode>
        <childnode refid="15036" relation="include">
        </childnode>
        <childnode refid="15114" relation="include">
        </childnode>
        <childnode refid="15037" relation="include">
        </childnode>
        <childnode refid="15115" relation="include">
        </childnode>
      </node>
      <node id="15071">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="15049">
        <label>openssl/sha.h</label>
      </node>
      <node id="15115">
        <label>errno.h</label>
      </node>
      <node id="15023">
        <label>cassert</label>
      </node>
      <node id="15042">
        <label>stdexcept</label>
      </node>
      <node id="15058">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="15059" relation="include">
        </childnode>
        <childnode refid="15060" relation="include">
        </childnode>
        <childnode refid="15061" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15062" relation="include">
        </childnode>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15065" relation="include">
        </childnode>
        <childnode refid="15066" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15067" relation="include">
        </childnode>
        <childnode refid="15068" relation="include">
        </childnode>
        <childnode refid="15069" relation="include">
        </childnode>
        <childnode refid="15070" relation="include">
        </childnode>
        <childnode refid="15071" relation="include">
        </childnode>
        <childnode refid="15072" relation="include">
        </childnode>
        <childnode refid="15073" relation="include">
        </childnode>
        <childnode refid="15074" relation="include">
        </childnode>
        <childnode refid="15075" relation="include">
        </childnode>
        <childnode refid="15076" relation="include">
        </childnode>
        <childnode refid="15057" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
      </node>
      <node id="15116">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="15117" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15107" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
      </node>
      <node id="15143">
        <label>QFont</label>
      </node>
      <node id="15070">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="15127">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15078" relation="include">
        </childnode>
        <childnode refid="15128" relation="include">
        </childnode>
        <childnode refid="15131" relation="include">
        </childnode>
      </node>
      <node id="15019">
        <label>string</label>
      </node>
      <node id="15085">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="15086" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
        <childnode refid="15100" relation="include">
        </childnode>
        <childnode refid="15016" relation="include">
        </childnode>
        <childnode refid="15119" relation="include">
        </childnode>
        <childnode refid="15120" relation="include">
        </childnode>
        <childnode refid="15098" relation="include">
        </childnode>
        <childnode refid="15097" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
        <childnode refid="15136" relation="include">
        </childnode>
        <childnode refid="15058" relation="include">
        </childnode>
        <childnode refid="15077" relation="include">
        </childnode>
      </node>
      <node id="15101">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
        <childnode refid="15058" relation="include">
        </childnode>
        <childnode refid="15102" relation="include">
        </childnode>
      </node>
      <node id="15145">
        <label>QUrl</label>
      </node>
      <node id="15021">
        <label>map</label>
      </node>
      <node id="15067">
        <label>boost/thread.hpp</label>
      </node>
      <node id="15118">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="15107" relation="include">
        </childnode>
        <childnode refid="15116" relation="include">
        </childnode>
        <childnode refid="15088" relation="include">
        </childnode>
        <childnode refid="15080" relation="include">
        </childnode>
        <childnode refid="15058" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15148">
        <label>QClipboard</label>
      </node>
      <node id="15136">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="15137" relation="include">
        </childnode>
        <childnode refid="15099" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
      </node>
      <node id="15126">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15093" relation="include">
        </childnode>
        <childnode refid="15058" relation="include">
        </childnode>
        <childnode refid="15069" relation="include">
        </childnode>
        <childnode refid="15127" relation="include">
        </childnode>
        <childnode refid="15132" relation="include">
        </childnode>
      </node>
      <node id="15054">
        <label>stddef.h</label>
      </node>
      <node id="15046">
        <label>boost/variant.hpp</label>
      </node>
      <node id="15084">
        <label>instantx.h</label>
        <link refid="instantx_8h"/>
        <childnode refid="15016" relation="include">
        </childnode>
      </node>
      <node id="15114">
        <label>netdb.h</label>
      </node>
      <node id="15109">
        <label>sys/fcntl.h</label>
      </node>
      <node id="15123">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="15124" relation="include">
        </childnode>
      </node>
      <node id="15130">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15129" relation="include">
        </childnode>
      </node>
      <node id="15134">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="15018">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15022" relation="include">
        </childnode>
        <childnode refid="15023" relation="include">
        </childnode>
        <childnode refid="15024" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15026" relation="include">
        </childnode>
        <childnode refid="15027" relation="include">
        </childnode>
        <childnode refid="15028" relation="include">
        </childnode>
        <childnode refid="15029" relation="include">
        </childnode>
        <childnode refid="15030" relation="include">
        </childnode>
        <childnode refid="15038" relation="include">
        </childnode>
      </node>
      <node id="15036">
        <label>limits.h</label>
      </node>
      <node id="15089">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="15106">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="15022" relation="include">
        </childnode>
        <childnode refid="15103" relation="include">
        </childnode>
      </node>
      <node id="15061">
        <label>sys/resource.h</label>
      </node>
      <node id="15150">
        <label>QDesktopServices</label>
      </node>
      <node id="15072">
        <label>openssl/bio.h</label>
      </node>
      <node id="15119">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="15030" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15097" relation="include">
        </childnode>
      </node>
      <node id="15099">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="15107">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15108" relation="include">
        </childnode>
      </node>
      <node id="15097">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="15098" relation="include">
        </childnode>
        <childnode refid="15047" relation="include">
        </childnode>
        <childnode refid="15088" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
        <childnode refid="15099" relation="include">
        </childnode>
        <childnode refid="15046" relation="include">
        </childnode>
      </node>
      <node id="15048">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="15040" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15049" relation="include">
        </childnode>
        <childnode refid="15050" relation="include">
        </childnode>
        <childnode refid="15051" relation="include">
        </childnode>
        <childnode refid="15052" relation="include">
        </childnode>
        <childnode refid="15053" relation="include">
        </childnode>
        <childnode refid="15055" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15113">
        <label>ifaddrs.h</label>
      </node>
      <node id="15149">
        <label>QFileDialog</label>
      </node>
      <node id="15077">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="15058" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
        <childnode refid="15078" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15079" relation="include">
        </childnode>
      </node>
      <node id="15059">
        <label>sys/types.h</label>
      </node>
      <node id="15095">
        <label>ios</label>
      </node>
      <node id="15033">
        <label>string.h</label>
      </node>
      <node id="15039">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="15027">
        <label>cstdio</label>
      </node>
      <node id="15010">
        <label>QApplication</label>
      </node>
      <node id="15091">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="15074">
        <label>openssl/buffer.h</label>
      </node>
      <node id="15028">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="15120">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="15121" relation="include">
        </childnode>
        <childnode refid="15102" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
        <childnode refid="15093" relation="include">
        </childnode>
        <childnode refid="15125" relation="include">
        </childnode>
        <childnode refid="15135" relation="include">
        </childnode>
        <childnode refid="15065" relation="include">
        </childnode>
        <childnode refid="15133" relation="include">
        </childnode>
      </node>
      <node id="15069">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="15081">
        <label>darksilkaddressvalidator.h</label>
        <link refid="darksilkaddressvalidator_8h"/>
        <childnode refid="15082" relation="include">
        </childnode>
      </node>
      <node id="15133">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="15047">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="15048" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15040" relation="include">
        </childnode>
        <childnode refid="15042" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15082">
        <label>QValidator</label>
      </node>
      <node id="15147">
        <label>QAbstractItemView</label>
      </node>
      <node id="15037">
        <label>unistd.h</label>
      </node>
      <node id="15096">
        <label>db_cxx.h</label>
      </node>
      <node id="15020">
        <label>vector</label>
      </node>
      <node id="15056">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15040" relation="include">
        </childnode>
        <childnode refid="15057" relation="include">
        </childnode>
        <childnode refid="15042" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
      </node>
      <node id="15102">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="15103" relation="include">
        </childnode>
        <childnode refid="15104" relation="include">
        </childnode>
        <childnode refid="15045" relation="include">
        </childnode>
        <childnode refid="15099" relation="include">
        </childnode>
        <childnode refid="15076" relation="include">
        </childnode>
        <childnode refid="15105" relation="include">
        </childnode>
        <childnode refid="15106" relation="include">
        </childnode>
        <childnode refid="15107" relation="include">
        </childnode>
        <childnode refid="15116" relation="include">
        </childnode>
        <childnode refid="15118" relation="include">
        </childnode>
        <childnode refid="15048" relation="include">
        </childnode>
        <childnode refid="15093" relation="include">
        </childnode>
      </node>
      <node id="15050">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="15068">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="15144">
        <label>QLineEdit</label>
      </node>
      <node id="15066">
        <label>utility</label>
      </node>
      <node id="15124">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="15016" relation="include">
        </childnode>
        <childnode refid="15125" relation="include">
        </childnode>
      </node>
      <node id="15064">
        <label>sstream</label>
      </node>
      <node id="15138">
        <label>darksilkunits.h</label>
        <link refid="darksilkunits_8h"/>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="15012" relation="include">
        </childnode>
        <childnode refid="15139" relation="include">
        </childnode>
      </node>
      <node id="15012">
        <label>QString</label>
      </node>
      <node id="15137">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="15098">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="15030" relation="include">
        </childnode>
        <childnode refid="15047" relation="include">
        </childnode>
        <childnode refid="15042" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15073">
        <label>openssl/evp.h</label>
      </node>
      <node id="15015">
        <label>QLabel</label>
      </node>
      <node id="15062">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="15023" relation="include">
        </childnode>
        <childnode refid="15063" relation="include">
        </childnode>
        <childnode refid="15064" relation="include">
        </childnode>
        <childnode refid="15042" relation="include">
        </childnode>
      </node>
      <node id="15025">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="15087">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15088" relation="include">
        </childnode>
        <childnode refid="15093" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15069" relation="include">
        </childnode>
        <childnode refid="15096" relation="include">
        </childnode>
      </node>
      <node id="15093">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="15030" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15094" relation="include">
        </childnode>
        <childnode refid="15041" relation="include">
        </childnode>
        <childnode refid="15095" relation="include">
        </childnode>
        <childnode refid="15024" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15022" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15033" relation="include">
        </childnode>
        <childnode refid="15066" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15055">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15054" relation="include">
        </childnode>
        <childnode refid="15036" relation="include">
        </childnode>
      </node>
      <node id="15060">
        <label>sys/time.h</label>
      </node>
      <node id="15063">
        <label>iostream</label>
      </node>
      <node id="15103">
        <label>deque</label>
      </node>
      <node id="15040">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="15041" relation="include">
        </childnode>
        <childnode refid="15026" relation="include">
        </childnode>
        <childnode refid="15042" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15110">
        <label>sys/socket.h</label>
      </node>
      <node id="15129">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="15041" relation="include">
        </childnode>
        <childnode refid="15054" relation="include">
        </childnode>
        <childnode refid="15033" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
      </node>
      <node id="15142">
        <label>QDoubleValidator</label>
      </node>
      <node id="15104">
        <label>boost/array.hpp</label>
      </node>
      <node id="15057">
        <label>openssl/bn.h</label>
      </node>
      <node id="15125">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="15126" relation="include">
        </childnode>
        <childnode refid="15120" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15066" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15080">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="15025" relation="include">
        </childnode>
      </node>
      <node id="15030">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="15031" relation="include">
        </childnode>
        <childnode refid="15033" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15034" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15035" relation="include">
        </childnode>
        <childnode refid="15036" relation="include">
        </childnode>
        <childnode refid="15037" relation="include">
        </childnode>
      </node>
      <node id="15146">
        <label>QTextDocument</label>
      </node>
      <node id="15139">
        <label>QAbstractListModel</label>
      </node>
      <node id="15117">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="15056" relation="include">
        </childnode>
        <childnode refid="15040" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15022">
        <label>set</label>
      </node>
      <node id="15011">
        <label>guiutil.h</label>
        <link refid="guiutil_8h"/>
        <childnode refid="15012" relation="include">
        </childnode>
        <childnode refid="15013" relation="include">
        </childnode>
        <childnode refid="15014" relation="include">
        </childnode>
        <childnode refid="15015" relation="include">
        </childnode>
      </node>
      <node id="15094">
        <label>algorithm</label>
      </node>
      <node id="15083">
        <label>walletmodel.h</label>
        <link refid="walletmodel_8h"/>
        <childnode refid="15013" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15030" relation="include">
        </childnode>
        <childnode refid="15084" relation="include">
        </childnode>
        <childnode refid="15085" relation="include">
        </childnode>
      </node>
      <node id="15051">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
      </node>
      <node id="15043">
        <label>util.h</label>
      </node>
      <node id="15078">
        <label>stdio.h</label>
      </node>
      <node id="15031">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="15032" relation="include">
        </childnode>
      </node>
      <node id="15026">
        <label>cstring</label>
      </node>
      <node id="15088">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="15089" relation="include">
        </childnode>
        <childnode refid="15090" relation="include">
        </childnode>
        <childnode refid="15091" relation="include">
        </childnode>
        <childnode refid="15034" relation="include">
        </childnode>
        <childnode refid="15092" relation="include">
        </childnode>
      </node>
      <node id="15079">
        <label>inttypes.h</label>
      </node>
      <node id="15128">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="15129" relation="include">
        </childnode>
        <childnode refid="15130" relation="include">
        </childnode>
      </node>
      <node id="15100">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="15016" relation="include">
        </childnode>
        <childnode refid="15055" relation="include">
        </childnode>
        <childnode refid="15101" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_g_u_i_util">GUIUtil</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;QApplication&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="guiutil_8h" kindref="compound">guiutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="transaction_8h" kindref="compound">primitives/transaction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="darksilkaddressvalidator_8h" kindref="compound">darksilkaddressvalidator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="walletmodel_8h" kindref="compound">walletmodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="darksilkunits_8h" kindref="compound">darksilkunits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDateTime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDoubleValidator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFont&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QLineEdit&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QUrl&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTextDocument&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>For<sp/>Qt::escape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QAbstractItemView&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QClipboard&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFileDialog&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDesktopServices&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QThread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem/fstream.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32_WINNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_WIN32_WINNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_WIN32_WINNT<sp/>0x0501</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32_IE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_WIN32_IE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_WIN32_IE<sp/>0x0501</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIN32_LEAN_AND_MEAN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NOMINMAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NOMINMAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shlwapi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shlobj.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shellapi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespace_g_u_i_util" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_g_u_i_util" kindref="compound">GUIUtil</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespace_g_u_i_util_1aae732a04fea25190081120bf0cc773e8" refkind="member"><highlight class="normal">QString<sp/><ref refid="namespace_g_u_i_util_1aae732a04fea25190081120bf0cc773e8" kindref="member">dateTimeStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDateTime<sp/>&amp;date)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date.date().toString(Qt::SystemLocaleShortDate)<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>date.toString(</highlight><highlight class="stringliteral">&quot;hh:mm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespace_g_u_i_util_1ad182b65c8060da6b6c99b8574820084d" refkind="member"><highlight class="normal">QString<sp/><ref refid="namespace_g_u_i_util_1aae732a04fea25190081120bf0cc773e8" kindref="member">dateTimeStr</ref>(qint64<sp/>nTime)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1aae732a04fea25190081120bf0cc773e8" kindref="member">dateTimeStr</ref>(QDateTime::fromTime_t((qint32)nTime));</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespace_g_u_i_util_1a41a85267642918f27a9e4bf3cfaf272f" refkind="member"><highlight class="normal">QFont<sp/><ref refid="namespace_g_u_i_util_1a41a85267642918f27a9e4bf3cfaf272f" kindref="member">darksilkAddressFont</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>QFont<sp/>font(</highlight><highlight class="stringliteral">&quot;Monospace&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&gt;=<sp/>0x040800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>font.setStyleHint(QFont::Monospace);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>font.setStyleHint(QFont::TypeWriter);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>font;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespace_g_u_i_util_1a4a230e717c130875bb07f2ef63bbb95c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1a4a230e717c130875bb07f2ef63bbb95c" kindref="member">setupAddressWidget</ref>(QLineEdit<sp/>*widget,<sp/>QWidget<sp/>*parent)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>widget-&gt;setMaxLength(<ref refid="class_dark_silk_address_validator_1ade0e41d2e163261099b876a880249519" kindref="member">DarkSilkAddressValidator::MaxAddressLength</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>widget-&gt;setValidator(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_dark_silk_address_validator" kindref="compound">DarkSilkAddressValidator</ref>(parent));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>widget-&gt;setFont(<ref refid="namespace_g_u_i_util_1a41a85267642918f27a9e4bf3cfaf272f" kindref="member">darksilkAddressFont</ref>());</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespace_g_u_i_util_1a168a2c8d25a022bbd979c0693ce08297" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1a168a2c8d25a022bbd979c0693ce08297" kindref="member">setupAmountWidget</ref>(QLineEdit<sp/>*widget,<sp/>QWidget<sp/>*parent)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>QDoubleValidator<sp/>*amountValidator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QDoubleValidator(parent);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>amountValidator-&gt;setDecimals(8);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>amountValidator-&gt;setBottom(0.0);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>widget-&gt;setValidator(amountValidator);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>widget-&gt;setAlignment(Qt::AlignRight|Qt::AlignVCenter);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="namespace_g_u_i_util_1afbb52d0e5aa16b91a37d8ea9b19a842b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1afbb52d0e5aa16b91a37d8ea9b19a842b" kindref="member">parseDarkSilkURI</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QUrl<sp/>&amp;uri,<sp/><ref refid="class_send_coins_recipient" kindref="compound">SendCoinsRecipient</ref><sp/>*out)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DarkSilk:<sp/>check<sp/>prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uri.scheme()<sp/>!=<sp/>QString(</highlight><highlight class="stringliteral">&quot;darksilk&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_send_coins_recipient" kindref="compound">SendCoinsRecipient</ref><sp/>rv;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>rv.<ref refid="class_send_coins_recipient_1aaa8a3b13ff9f8e84baced2aec75307a0" kindref="member">address</ref><sp/>=<sp/>uri.path();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>rv.<ref refid="class_send_coins_recipient_1a54ab1355617a342b9b3d7f6e0781f578" kindref="member">amount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QPair&lt;QString,<sp/>QString&gt;<sp/>&gt;<sp/>items<sp/>=<sp/>uri.queryItems();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QList&lt;QPair&lt;QString,<sp/>QString&gt;<sp/>&gt;::iterator<sp/>i<sp/>=<sp/>items.begin();<sp/>i<sp/>!=<sp/>items.end();<sp/>i++)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fShouldReturnFalse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;first.startsWith(</highlight><highlight class="stringliteral">&quot;req-&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;first.remove(0,<sp/>4);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fShouldReturnFalse<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;first<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.<ref refid="class_send_coins_recipient_1a0152933f2c0cb9164d2fcb36bca83666" kindref="member">label</ref><sp/>=<sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fShouldReturnFalse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;first<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!i-&gt;second.isEmpty())</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_dark_silk_units_1a11d6661d65f2fe22fb17716b509cb135" kindref="member">DarkSilkUnits::parse</ref>(<ref refid="class_dark_silk_units_1a588cf5f654ad4aa646647ffde0031482a0edba4fddfbef1b8abc52ce9b516971d" kindref="member">DarkSilkUnits::DRKSLK</ref>,<sp/>i-&gt;second,<sp/>&amp;rv.<ref refid="class_send_coins_recipient_1a54ab1355617a342b9b3d7f6e0781f578" kindref="member">amount</ref>))</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fShouldReturnFalse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fShouldReturnFalse)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out<sp/>=<sp/>rv;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="namespace_g_u_i_util_1a6ae33beeabcd5c1c40129895277687dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1afbb52d0e5aa16b91a37d8ea9b19a842b" kindref="member">parseDarkSilkURI</ref>(QString<sp/>uri,<sp/><ref refid="class_send_coins_recipient" kindref="compound">SendCoinsRecipient</ref><sp/>*out)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>darksilk://<sp/>to<sp/>darksilk:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Cannot<sp/>handle<sp/>this<sp/>later,<sp/>because<sp/>darksilk://<sp/>will<sp/>cause<sp/>Qt<sp/>to<sp/>see<sp/>the<sp/>part<sp/>after<sp/>//<sp/>as<sp/>host,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>which<sp/>will<sp/>lower-case<sp/>it<sp/>(and<sp/>thus<sp/>invalidate<sp/>the<sp/>address).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uri.startsWith(</highlight><highlight class="stringliteral">&quot;darksilk://&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri.replace(0,<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;darksilk:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>QUrl<sp/>uriInstance(uri);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1afbb52d0e5aa16b91a37d8ea9b19a842b" kindref="member">parseDarkSilkURI</ref>(uriInstance,<sp/>out);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="namespace_g_u_i_util_1a2d4b7f2c11ebc4b97af10bc20d19b1b2" refkind="member"><highlight class="normal">QString<sp/><ref refid="namespace_g_u_i_util_1a2d4b7f2c11ebc4b97af10bc20d19b1b2" kindref="member">HtmlEscape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fMultiLine)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>escaped<sp/>=<sp/>Qt::escape(str);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>escaped<sp/>=<sp/>escaped.replace(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&amp;nbsp;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fMultiLine)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped<sp/>=<sp/>escaped.replace(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&lt;br&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>escaped;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="namespace_g_u_i_util_1ad6086df566cf2cb7f699a24e099dc59c" refkind="member"><highlight class="normal">QString<sp/><ref refid="namespace_g_u_i_util_1a2d4b7f2c11ebc4b97af10bc20d19b1b2" kindref="member">HtmlEscape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fMultiLine)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1a2d4b7f2c11ebc4b97af10bc20d19b1b2" kindref="member">HtmlEscape</ref>(QString::fromStdString(str),<sp/>fMultiLine);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="namespace_g_u_i_util_1aad7852433ad4953a9bcae9a6e735b2d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1aad7852433ad4953a9bcae9a6e735b2d4" kindref="member">copyEntryData</ref>(QAbstractItemView<sp/>*view,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>role)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!view<sp/>||<sp/>!view-&gt;selectionModel())</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>QModelIndexList<sp/>selection<sp/>=<sp/>view-&gt;selectionModel()-&gt;selectedRows(column);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!selection.isEmpty())</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>first<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setText(selection.at(0).data(role).toString());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="namespace_g_u_i_util_1a788c51092a2255b1f8976d4794fc3ee6" refkind="member"><highlight class="normal">QString<sp/><ref refid="namespace_g_u_i_util_1a788c51092a2255b1f8976d4794fc3ee6" kindref="member">getSaveFileName</ref>(QWidget<sp/>*parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;caption,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;dir,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;filter,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>*selectedSuffixOut)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>selectedFilter;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>myDir;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dir.isEmpty())<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>to<sp/>user<sp/>documents<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myDir<sp/>=<sp/>QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myDir<sp/>=<sp/>dir;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>result<sp/>=<sp/><ref refid="namespace_g_u_i_util_1a788c51092a2255b1f8976d4794fc3ee6" kindref="member">QFileDialog::getSaveFileName</ref>(parent,<sp/>caption,<sp/>myDir,<sp/>filter,<sp/>&amp;selectedFilter);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extract<sp/>first<sp/>suffix<sp/>from<sp/>filter<sp/>pattern<sp/>&quot;Description<sp/>(*.foo)&quot;<sp/>or<sp/>&quot;Description<sp/>(*.foo<sp/>*.bar<sp/>...)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegExp<sp/>filter_re(</highlight><highlight class="stringliteral">&quot;.*<sp/>\\(\\*\\.(.*)[<sp/>\\)]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>selectedSuffix;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filter_re.exactMatch(selectedFilter))</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedSuffix<sp/>=<sp/>filter_re.cap(1);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>suffix<sp/>if<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>QFileInfo<sp/>info(result);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result.isEmpty())</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.suffix().isEmpty()<sp/>&amp;&amp;<sp/>!selectedSuffix.isEmpty())</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>suffix<sp/>specified,<sp/>add<sp/>selected<sp/>suffix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result.endsWith(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(selectedSuffix);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>selected<sp/>suffix<sp/>if<sp/>asked<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selectedSuffixOut)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*selectedSuffixOut<sp/>=<sp/>selectedSuffix;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="namespace_g_u_i_util_1a2046fc343a70996c23cae6fe7f8d94f2" refkind="member"><highlight class="normal">Qt::ConnectionType<sp/><ref refid="namespace_g_u_i_util_1a2046fc343a70996c23cae6fe7f8d94f2" kindref="member">blockingGUIThreadConnection</ref>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QThread::currentThread()<sp/>!=<sp/>QCoreApplication::instance()-&gt;thread())</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::BlockingQueuedConnection;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::DirectConnection;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="namespace_g_u_i_util_1ab2e7ef0aa9a1ad3f86d67a3f596b6fc4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1ab2e7ef0aa9a1ad3f86d67a3f596b6fc4" kindref="member">checkPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QWidget<sp/>*w)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>QWidget<sp/>*atW<sp/>=<sp/>qApp-&gt;widgetAt(w-&gt;mapToGlobal(p));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!atW)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atW-&gt;topLevelWidget()<sp/>==<sp/>w;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="namespace_g_u_i_util_1a0b7266e2b8e7de5f5fd1c7ddb9e5b637" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1a0b7266e2b8e7de5f5fd1c7ddb9e5b637" kindref="member">isObscured</ref>(QWidget<sp/>*w)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(<ref refid="namespace_g_u_i_util_1ab2e7ef0aa9a1ad3f86d67a3f596b6fc4" kindref="member">checkPoint</ref>(QPoint(0,<sp/>0),<sp/>w)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="namespace_g_u_i_util_1ab2e7ef0aa9a1ad3f86d67a3f596b6fc4" kindref="member">checkPoint</ref>(QPoint(w-&gt;width()<sp/>-<sp/>1,<sp/>0),<sp/>w)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="namespace_g_u_i_util_1ab2e7ef0aa9a1ad3f86d67a3f596b6fc4" kindref="member">checkPoint</ref>(QPoint(0,<sp/>w-&gt;height()<sp/>-<sp/>1),<sp/>w)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="namespace_g_u_i_util_1ab2e7ef0aa9a1ad3f86d67a3f596b6fc4" kindref="member">checkPoint</ref>(QPoint(w-&gt;width()<sp/>-<sp/>1,<sp/>w-&gt;height()<sp/>-<sp/>1),<sp/>w)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="namespace_g_u_i_util_1ab2e7ef0aa9a1ad3f86d67a3f596b6fc4" kindref="member">checkPoint</ref>(QPoint(w-&gt;width()<sp/>/<sp/>2,<sp/>w-&gt;height()<sp/>/<sp/>2),<sp/>w));</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="namespace_g_u_i_util_1aad169e3227e7a851db52a08bfb30391c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1aad169e3227e7a851db52a08bfb30391c" kindref="member">openDebugLogfile</ref>()</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::filesystem::path<sp/>pathDebug<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;debug.log&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>debug.log<sp/>with<sp/>the<sp/>associated<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boost::filesystem::exists(pathDebug))</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDesktopServices::openUrl(QUrl::fromLocalFile(QString::fromStdString(pathDebug.string())));</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="class_g_u_i_util_1_1_tool_tip_to_rich_text_filter_1abdb48682c8ec34a8f774813cd9449f0d" refkind="member"><highlight class="normal"><ref refid="class_g_u_i_util_1_1_tool_tip_to_rich_text_filter_1abdb48682c8ec34a8f774813cd9449f0d" kindref="member">ToolTipToRichTextFilter::ToolTipToRichTextFilter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_threshold,<sp/>QObject<sp/>*parent)<sp/>:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject(parent),<sp/>size_threshold(size_threshold)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_g_u_i_util_1_1_tool_tip_to_rich_text_filter_1a5f4450d8b203f009a8bdc67d6d3f388c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_g_u_i_util_1_1_tool_tip_to_rich_text_filter_1a5f4450d8b203f009a8bdc67d6d3f388c" kindref="member">ToolTipToRichTextFilter::eventFilter</ref>(QObject<sp/>*obj,<sp/>QEvent<sp/>*evt)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt-&gt;type()<sp/>==<sp/>QEvent::ToolTipChange)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWidget<sp/>*widget<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">QWidget*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>tooltip<sp/>=<sp/>widget-&gt;toolTip();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tooltip.size()<sp/>&gt;<sp/>size_threshold<sp/>&amp;&amp;<sp/>!tooltip.startsWith(</highlight><highlight class="stringliteral">&quot;&lt;qt&gt;&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!Qt::mightBeRichText(tooltip))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefix<sp/>&lt;qt/&gt;<sp/>to<sp/>make<sp/>sure<sp/>Qt<sp/>detects<sp/>this<sp/>as<sp/>rich<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Escape<sp/>the<sp/>current<sp/>message<sp/>as<sp/>HTML<sp/>and<sp/>replace<sp/>\n<sp/>by<sp/>&lt;br&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tooltip<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;qt&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespace_g_u_i_util_1a2d4b7f2c11ebc4b97af10bc20d19b1b2" kindref="member">HtmlEscape</ref>(tooltip,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;qt/&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>widget-&gt;setToolTip(tooltip);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::eventFilter(obj,<sp/>evt);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">boost::filesystem::path<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>StartupShortcutPath()</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetSpecialFolderPath(CSIDL_STARTUP)<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk.lnk&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1adca0cdbc1de324bc53c891bdcafa6513" kindref="member">GetStartOnSystemStartup</ref>()</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>DarkSilk.lnk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::filesystem::exists(StartupShortcutPath());</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1a82afe76b9469d777217438a25ab7f95e" kindref="member">SetStartOnSystemStartup</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAutoStart)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>shortcut<sp/>exists<sp/>already,<sp/>remove<sp/>it<sp/>for<sp/>updating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::filesystem::remove(StartupShortcutPath());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fAutoStart)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoInitialize(NULL);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>IShellLink<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IShellLink*<sp/>psl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>CoCreateInstance(CLSID_ShellLink,<sp/>NULL,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_INPROC_SERVER,<sp/>IID_IShellLink,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;void**&gt;(&amp;psl));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hres))</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>executable<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>pszExePath[<ref refid="util_8h_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetModuleFileName(NULL,<sp/>pszExePath,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pszExePath));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>pszArgs[5]<sp/>=<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;-min&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>path<sp/>to<sp/>the<sp/>shortcut<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl-&gt;SetPath(pszExePath);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathRemoveFileSpec(pszExePath);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl-&gt;SetWorkingDirectory(pszExePath);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl-&gt;SetShowCmd(SW_SHOWMINNOACTIVE);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl-&gt;SetArguments(pszArgs);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Query<sp/>IShellLink<sp/>for<sp/>the<sp/>IPersistFile<sp/>interface<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>saving<sp/>the<sp/>shortcut<sp/>in<sp/>persistent<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPersistFile*<sp/>ppf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>psl-&gt;QueryInterface(IID_IPersistFile,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;void**&gt;(&amp;ppf));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hres))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WCHAR<sp/>pwsz[<ref refid="util_8h_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>string<sp/>is<sp/>ANSI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiByteToWideChar(CP_ACP,<sp/>0,<sp/>StartupShortcutPath().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">().c_str(),<sp/>-1,<sp/>pwsz,<sp/><ref refid="util_8h_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>link<sp/>by<sp/>calling<sp/>IPersistFile::Save.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>ppf-&gt;Save(pwsz,<sp/>TRUE);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppf-&gt;Release();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl-&gt;Release();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoUninitialize();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl-&gt;Release();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoUninitialize();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(Q_OS_LINUX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Follow<sp/>the<sp/>Desktop<sp/>Application<sp/>Autostart<sp/>Spec:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>http://standards.freedesktop.org/autostart-spec/autostart-spec-latest.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">boost::filesystem::path<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GetAutostartDir()</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>=<sp/>boost::filesystem;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszConfigHome<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;XDG_CONFIG_HOME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pszConfigHome)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fs::path(pszConfigHome)<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;autostart&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszHome<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;HOME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pszHome)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fs::path(pszHome)<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;.config&quot;</highlight><highlight class="normal"><sp/>/<sp/></highlight><highlight class="stringliteral">&quot;autostart&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fs::path();</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">boost::filesystem::path<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GetAutostartFilePath()</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetAutostartDir()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;darksilk.desktop&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1adca0cdbc1de324bc53c891bdcafa6513" kindref="member">GetStartOnSystemStartup</ref>()</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::filesystem::ifstream<sp/>optionFile(GetAutostartFilePath());</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!optionFile.good())</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>through<sp/>file<sp/>for<sp/>&quot;Hidden=true&quot;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!optionFile.eof())</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(optionFile,<sp/>line);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;Hidden&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line.find(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>optionFile.close();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1a82afe76b9469d777217438a25ab7f95e" kindref="member">SetStartOnSystemStartup</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAutoStart)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fAutoStart)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::remove(GetAutostartFilePath());</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pszExePath[<ref refid="util_8h_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>+1];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(pszExePath,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pszExePath));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readlink(</highlight><highlight class="stringliteral">&quot;/proc/self/exe&quot;</highlight><highlight class="normal">,<sp/>pszExePath,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pszExePath)-1)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::create_directories(GetAutostartDir());</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::ofstream<sp/>optionFile(GetAutostartFilePath(),<sp/>std::ios_base::out|std::ios_base::trunc);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!optionFile.good())</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>a<sp/>darksilk.desktop<sp/>file<sp/>to<sp/>the<sp/>autostart<sp/>directory:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[Desktop<sp/>Entry]\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Type=Application\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Name=DarkSilk\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Exec=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pszExePath<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-min\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Terminal=false\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Hidden=false\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionFile.close();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>OSX<sp/>startup<sp/>stuff;<sp/>see:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/BPSystemStartup/Articles/CustomLogin.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="namespace_g_u_i_util_1adca0cdbc1de324bc53c891bdcafa6513" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1adca0cdbc1de324bc53c891bdcafa6513" kindref="member">GetStartOnSystemStartup</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="421" refid="namespace_g_u_i_util_1a82afe76b9469d777217438a25ab7f95e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1a82afe76b9469d777217438a25ab7f95e" kindref="member">SetStartOnSystemStartup</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAutoStart)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="class_g_u_i_util_1_1_help_message_box_1af8c3ad315224552b1699ac34c7ebd839" refkind="member"><highlight class="normal"><ref refid="class_g_u_i_util_1_1_help_message_box_1af8c3ad315224552b1699ac34c7ebd839" kindref="member">HelpMessageBox::HelpMessageBox</ref>(QWidget<sp/>*parent)<sp/>:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>QMessageBox(parent)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>header<sp/>=<sp/>tr(</highlight><highlight class="stringliteral">&quot;DarkSilk-Qt&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>tr(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString::fromStdString(<ref refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" kindref="member">FormatFullVersion</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr(</highlight><highlight class="stringliteral">&quot;Usage:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>darksilk-qt<sp/>[&quot;</highlight><highlight class="normal"><sp/>+<sp/>tr(</highlight><highlight class="stringliteral">&quot;command-line<sp/>options&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>coreOptions<sp/>=<sp/>QString::fromStdString(<ref refid="init_8cpp_1a60c54061faf43bd9cca8ab8bfa38055a" kindref="member">HelpMessage</ref>());</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>uiOptions<sp/>=<sp/>tr(</highlight><highlight class="stringliteral">&quot;UI<sp/>options&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-lang=&lt;lang&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>tr(</highlight><highlight class="stringliteral">&quot;Set<sp/>language,<sp/>for<sp/>example<sp/>\&quot;de_DE\&quot;<sp/>(default:<sp/>system<sp/>locale)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-min<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>tr(</highlight><highlight class="stringliteral">&quot;Start<sp/>minimized&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-splash<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>tr(</highlight><highlight class="stringliteral">&quot;Show<sp/>splash<sp/>screen<sp/>on<sp/>startup<sp/>(default:<sp/>1)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>setWindowTitle(tr(</highlight><highlight class="stringliteral">&quot;DarkSilk-Qt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>setTextFormat(Qt::PlainText);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setMinimumWidth<sp/>is<sp/>ignored<sp/>for<sp/>QMessageBox<sp/>so<sp/>put<sp/>in<sp/>non-breaking<sp/>spaces<sp/>to<sp/>make<sp/>it<sp/>wider.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>setText(header<sp/>+<sp/>QString(QChar(0x2003)).repeated(50));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>setDetailedText(coreOptions<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>uiOptions);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="class_g_u_i_util_1_1_help_message_box_1afbd5a1cd2e1e43e807fda73d6e3d69e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_u_i_util_1_1_help_message_box_1afbd5a1cd2e1e43e807fda73d6e3d69e5" kindref="member">HelpMessageBox::printToConsole</ref>()</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>other<sp/>operating<sp/>systems,<sp/>the<sp/>expected<sp/>action<sp/>is<sp/>to<sp/>print<sp/>the<sp/>message<sp/>to<sp/>the<sp/>console.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>strUsage<sp/>=<sp/>header<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>coreOptions<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>uiOptions;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>strUsage.toStdString().c_str());</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_g_u_i_util_1_1_help_message_box_1a6302786b8f88ca0980047262940b144e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_u_i_util_1_1_help_message_box_1a6302786b8f88ca0980047262940b144e" kindref="member">HelpMessageBox::showOrPrint</ref>()</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>show<sp/>a<sp/>message<sp/>box,<sp/>as<sp/>there<sp/>is<sp/>no<sp/>stderr/stdout<sp/>in<sp/>windowed<sp/>applications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>other<sp/>operating<sp/>systems,<sp/>print<sp/>help<sp/>text<sp/>to<sp/>console</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_u_i_util_1_1_help_message_box_1afbd5a1cd2e1e43e807fda73d6e3d69e5" kindref="member">printToConsole</ref>();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_g_u_i_util_1_1_clickable_label_1a10c4a2a17cf216e9a1ba27389e827a82" refkind="member"><highlight class="normal"><ref refid="class_g_u_i_util_1_1_clickable_label_1a10c4a2a17cf216e9a1ba27389e827a82" kindref="member">ClickableLabel::ClickableLabel</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>text,<sp/>QWidget<sp/>*<sp/>parent<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>QLabel(parent)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setText(text);</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="class_g_u_i_util_1_1_clickable_label_1a54d1792cc5ea7c57f630328b84cfbe59" refkind="member"><highlight class="normal"><ref refid="class_g_u_i_util_1_1_clickable_label_1a54d1792cc5ea7c57f630328b84cfbe59" kindref="member">ClickableLabel::~ClickableLabel</ref>()</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="class_g_u_i_util_1_1_clickable_label_1a5bd4929d11bc3a714b55527d38e928fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_u_i_util_1_1_clickable_label_1a5bd4929d11bc3a714b55527d38e928fe" kindref="member">ClickableLabel::mouseReleaseEvent</ref><sp/>(<sp/>QMouseEvent<sp/>*<sp/>event<sp/>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_g_u_i_util_1_1_clickable_label_1a6606940e3d7d916db187a9e89a0b7844" kindref="member">clicked</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="namespace_g_u_i_util_1a5dcebf0def16e303ecb89b832e114a10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_g_u_i_util_1a5dcebf0def16e303ecb89b832e114a10" kindref="member">SetBlackThemeQSS</ref>(QApplication&amp;<sp/>app)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>app.setStyleSheet(</highlight><highlight class="stringliteral">&quot;QTableView<sp/>{<sp/>background:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>border:<sp/>1px<sp/>inset<sp/>white;<sp/>border-radius:<sp/>3px;<sp/>margin:<sp/>0px;<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QWidget<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>background-color:<sp/>rgb(0,0,0);<sp/>alternate-background-color:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QFrame<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>border:<sp/>none;<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QCheckBox<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>color:<sp/>rgb(0,0,0);<sp/>background-color:<sp/>rgb(255,255,255);}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QComboBox<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>background-color:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QComboBox<sp/>QAbstractItemView::item<sp/>{<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QPushButton<sp/><sp/><sp/><sp/>{<sp/>background:<sp/>rgb(86,0,120);<sp/>alternate-background-color:<sp/>rgb(86,0,120);<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QDoubleSpinBox<sp/>{<sp/>background:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>border-color:<sp/>rgb(255,0,0);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QLineEdit<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>background:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>border-color:<sp/>rgb(255,0,0);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QTextEdit<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>background:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>border:<sp/>1px<sp/>inset<sp/>white;<sp/>border-radius:<sp/>3px;<sp/>margin:<sp/>0px;<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QPlainTextEdit<sp/>{<sp/>background:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QMenuBar<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>background:<sp/>rgb(0,0,0);<sp/>alternate-background-color:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>border-color:<sp/>rgb(0,0,0);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QMenuBar::item<sp/>{background-color:<sp/>rgb(0,0,0);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QMenu::item:selected<sp/>{<sp/>background-color:<sp/>rgb(86,0,120);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QLabel<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QScrollBar<sp/><sp/><sp/><sp/><sp/>{<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QCheckBox<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>color:<sp/>rgb(0,0,0);<sp/>background-color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QRadioButton<sp/><sp/><sp/>{<sp/>color:<sp/>rgb(0,0,0);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QTabBar::tab<sp/><sp/><sp/>{<sp/>color:<sp/>rgb(255,255,255);<sp/>border:<sp/>1px<sp/>solid<sp/>rgb(255,255,255);<sp/>border-bottom:<sp/>none;<sp/>padding:<sp/>5px;<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QTabBar::tab:selected<sp/><sp/>{<sp/>background-color:<sp/>rgb(86,0,120);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QTabBar::tab:!selected<sp/>{<sp/>background-color:<sp/>rgb(0,0,0);<sp/>margin-top:<sp/>2px;<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QTabWidget::pane<sp/>{<sp/>border:<sp/>1px<sp/>solid<sp/>rgb(0,0,0);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QToolButton<sp/><sp/><sp/><sp/>{<sp/>background:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(232,234,236);<sp/>border:<sp/>none;<sp/>border-left-color:<sp/>rgb(0,0,0);<sp/>border-left-style:<sp/>solid;<sp/>border-left-width:<sp/>6px;<sp/>margin-top:<sp/>8px;<sp/>margin-bottom:<sp/>8px;<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QToolButton:checked<sp/>{<sp/>color:<sp/>rgb(255,255,255);<sp/>border:<sp/>none;<sp/>border-left-color:<sp/>rgb(86,0,120);<sp/>border-left-style:<sp/>solid;<sp/>border-left-width:<sp/>6px;<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QProgressBar<sp/><sp/><sp/>{<sp/>color:<sp/>rgb(255,255,255);<sp/>border:<sp/>1px<sp/>inset<sp/>white;<sp/>border-radius:<sp/>3px;<sp/>margin:<sp/>0px;<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QProgressBar::chunk<sp/>{<sp/>background:<sp/>rgb(86,0,120);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QTreeView::item<sp/>{<sp/>background:<sp/>rgb(86,0,120);<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QTreeView::item:selected<sp/>{<sp/>background-color:<sp/>rgb(138,138,138);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QHeaderView::section<sp/>{<sp/>background-color:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QToolBar<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>background:<sp/>rgb(0,0,0);<sp/>border:<sp/>rgb(0,0,0);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QTextEdit<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>background-color:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QPlainTextEdit<sp/>{<sp/>background-color:<sp/>rgb(0,0,0);<sp/>color:<sp/>rgb(255,255,255);<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;QProgressBar<sp/>{<sp/>background-color:<sp/>rgb(0,0,0);<sp/>border:<sp/>1px<sp/>solid<sp/>grey;<sp/>border-radius:<sp/>7px;<sp/>padding:<sp/>1px;<sp/>text-align:<sp/>center;<sp/>}<sp/>QProgressBar::chunk<sp/>{<sp/>background:<sp/>QLinearGradient(x1:<sp/>0,<sp/>y1:<sp/>0,<sp/>x2:<sp/>1,<sp/>y2:<sp/>0,<sp/>stop:<sp/>0<sp/>#220050,<sp/>stop:<sp/>1<sp/>#500078);<sp/>border-radius:<sp/>7px;<sp/>margin:<sp/>0px;<sp/>}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="namespace_g_u_i_util_1a432bcee36e242a968c9149fadfba44fa" refkind="member"><highlight class="normal">QString<sp/><ref refid="namespace_g_u_i_util_1a432bcee36e242a968c9149fadfba44fa" kindref="member">formatPingTime</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPingTime)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dPingTime<sp/>==<sp/>0<sp/>?<sp/>QObject::tr(</highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">)<sp/>:<sp/>QString(QObject::tr(</highlight><highlight class="stringliteral">&quot;%1<sp/>ms&quot;</highlight><highlight class="normal">)).arg(QString::number((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(dPingTime<sp/>*<sp/>1000),<sp/>10));</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="namespace_g_u_i_util_1aaf51686c47c77ad81c51d115d150e867" refkind="member"><highlight class="normal">QString<sp/><ref refid="namespace_g_u_i_util_1aaf51686c47c77ad81c51d115d150e867" kindref="member">formatDurationStr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secs)</highlight></codeline>
<codeline lineno="525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>QStringList<sp/>strList;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days<sp/>=<sp/>secs<sp/>/<sp/>86400;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hours<sp/>=<sp/>(secs<sp/>%<sp/>86400)<sp/>/<sp/>3600;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mins<sp/>=<sp/>(secs<sp/>%<sp/>3600)<sp/>/<sp/>60;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds<sp/>=<sp/>secs<sp/>%<sp/>60;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(days)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strList.append(QString(QObject::tr(</highlight><highlight class="stringliteral">&quot;%1<sp/>d&quot;</highlight><highlight class="normal">)).<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>(days));</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hours)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strList.append(QString(QObject::tr(</highlight><highlight class="stringliteral">&quot;%1<sp/>h&quot;</highlight><highlight class="normal">)).<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>(hours));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mins)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strList.append(QString(QObject::tr(</highlight><highlight class="stringliteral">&quot;%1<sp/>m&quot;</highlight><highlight class="normal">)).<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>(mins));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seconds<sp/>||<sp/>(!days<sp/>&amp;&amp;<sp/>!hours<sp/>&amp;&amp;<sp/>!mins))</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strList.append(QString(QObject::tr(</highlight><highlight class="stringliteral">&quot;%1<sp/>s&quot;</highlight><highlight class="normal">)).<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>(seconds));</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strList.join(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="namespace_g_u_i_util_1ac0c0a23fbbfefc827220eebcacc3ee63" refkind="member"><highlight class="normal">QString<sp/><ref refid="namespace_g_u_i_util_1ac0c0a23fbbfefc827220eebcacc3ee63" kindref="member">formatServicesStr</ref>(quint64<sp/>mask)</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>==<sp/>(NODE_I2P<sp/>|<sp/><ref refid="protocol_8h_1abc5c98fcc1211af2b80116dd6e0a035da9d1154f0e7e56f183a5c8373abe2e86c" kindref="member">NODE_NETWORK</ref>))</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;P2P<sp/>Nodes<sp/>and<sp/>I2P&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>==<sp/><ref refid="protocol_8h_1abc5c98fcc1211af2b80116dd6e0a035da9d1154f0e7e56f183a5c8373abe2e86c" kindref="member">NODE_NETWORK</ref>)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;P2P<sp/>Nodes&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>GUIUtil</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/qt/guiutil.cpp"/>
  </compounddef>
</doxygen>
