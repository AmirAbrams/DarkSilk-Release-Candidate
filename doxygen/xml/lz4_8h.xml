<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="lz4_8h" kind="file" language="C++">
    <compoundname>lz4.h</compoundname>
    <includedby refid="smessage_8h" local="yes">/home/dev/ds-160209/src/smessage.h</includedby>
    <includedby refid="lz4_8c" local="yes">/home/dev/ds-160209/src/lz4/lz4.c</includedby>
    <invincdepgraph>
      <node id="40335">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="40341">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="40343">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="40333">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="40334" relation="include">
        </childnode>
        <childnode refid="40335" relation="include">
        </childnode>
        <childnode refid="40336" relation="include">
        </childnode>
        <childnode refid="40337" relation="include">
        </childnode>
        <childnode refid="40338" relation="include">
        </childnode>
        <childnode refid="40339" relation="include">
        </childnode>
      </node>
      <node id="40344">
        <label>/home/dev/ds-160209/src/lz4/lz4.c</label>
        <link refid="lz4_8c"/>
        <childnode refid="40342" relation="include">
        </childnode>
      </node>
      <node id="40329">
        <label>/home/dev/ds-160209/src/lz4/lz4.h</label>
        <link refid="lz4.h"/>
        <childnode refid="40330" relation="include">
        </childnode>
        <childnode refid="40344" relation="include">
        </childnode>
      </node>
      <node id="40336">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="40330">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="40331" relation="include">
        </childnode>
        <childnode refid="40332" relation="include">
        </childnode>
        <childnode refid="40333" relation="include">
        </childnode>
        <childnode refid="40339" relation="include">
        </childnode>
        <childnode refid="40340" relation="include">
        </childnode>
        <childnode refid="40341" relation="include">
        </childnode>
        <childnode refid="40342" relation="include">
        </childnode>
        <childnode refid="40343" relation="include">
        </childnode>
      </node>
      <node id="40334">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="40340">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="40331">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="40337">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="40338">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="40339">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="40342">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="40332">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="lz4_8h_1a4a15eb1f8aa69834f917a50d7652413e" prot="public" static="no">
        <name>LZ4_VERSION_MAJOR</name>
        <initializer>1    /* for major interface/format changes  */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="44" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8h_1af16952f74f68ac445da9fc7603609909" prot="public" static="no">
        <name>LZ4_VERSION_MINOR</name>
        <initializer>1    /* for minor interface/format changes  */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="45" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8h_1a19d496bbe4d8448bc2d42cfb576cf525" prot="public" static="no">
        <name>LZ4_VERSION_RELEASE</name>
        <initializer>3    /* for tweaks, bug-fixes, or development */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="46" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lz4_8h_1a88ee51e36ca74cd0533e731c20572ea6" prot="public" static="no">
        <name>LZ4_MAX_INPUT_SIZE</name>
        <initializer>0x7E000000   /* 2 113 929 216 bytes */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="85" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</referencedby>
      </memberdef>
      <memberdef kind="define" id="lz4_8h_1a2453a423fd34640a0afbbf57ed0a5399" prot="public" static="no">
        <name>LZ4_COMPRESSBOUND</name>
        <param><defname>isize</defname></param>
        <initializer>((unsigned int)(isize) &gt; (unsigned int)<ref refid="lz4_8h_1a88ee51e36ca74cd0533e731c20572ea6" kindref="member">LZ4_MAX_INPUT_SIZE</ref> ? 0 : (isize) + ((isize)/255) + 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="86" column="9" bodyfile="/home/dev/ds-160209/src/lz4/lz4.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="lz4_8h_1a2b09f5ca41ce609bb136d3637beffe04" compoundref="lz4_8c" startline="372" endline="372">LZ4_compressBound</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lz4_8h_1a806e7d86885991c722172bcf57abb71b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress</definition>
        <argsstring>(const char *source, char *dest, int inputSize)</argsstring>
        <name>LZ4_compress</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="557" bodyend="575"/>
        <references refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" compoundref="lz4_8c" startline="161">ALLOCATOR</references>
        <references refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" compoundref="lz4_8c" startline="229">HASHNBCELLS4</references>
        <references refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" compoundref="lz4_8c" startline="44">MEMORY_USAGE</references>
        <references refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" compoundref="lz4_8c" startline="242">LZ4_64KLIMIT</references>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" compoundref="debugconsole_8cpp" startline="33">source</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" compoundref="lz4_8c" startline="264">notLimited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
        <references refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" compoundref="lz4_8c" startline="162">FREEMEM</references>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a76d66de24858903c049171e700c1371c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_safe</definition>
        <argsstring>(const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_decompress_safe</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="62" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="850" bodyend="853"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" compoundref="lz4_8c" startline="269">endOnInputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" compoundref="lz4_8c" startline="270">full</references>
        <referencedby refid="lz4_8h_1a81aa900c172d655f8a4f0a75739791f0" compoundref="lz4_8c" startline="880" endline="880">LZ4_uncompress_unknownOutputSize</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a2b09f5ca41ce609bb136d3637beffe04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compressBound</definition>
        <argsstring>(int isize)</argsstring>
        <name>LZ4_compressBound</name>
        <param>
          <type>int</type>
          <declname>isize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="99" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="372" bodyend="372"/>
        <references refid="lz4_8h_1a2453a423fd34640a0afbbf57ed0a5399" compoundref="lz4_8h" startline="86">LZ4_COMPRESSBOUND</references>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a464e8e2a2ad215e0d94042722eb75551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_limitedOutput</definition>
        <argsstring>(const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_compress_limitedOutput</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="113" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="577" bodyend="595"/>
        <references refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" compoundref="lz4_8c" startline="161">ALLOCATOR</references>
        <references refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" compoundref="lz4_8c" startline="229">HASHNBCELLS4</references>
        <references refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" compoundref="lz4_8c" startline="44">MEMORY_USAGE</references>
        <references refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" compoundref="lz4_8c" startline="242">LZ4_64KLIMIT</references>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" compoundref="debugconsole_8cpp" startline="33">source</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" compoundref="lz4_8c" startline="264">limited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
        <references refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" compoundref="lz4_8c" startline="162">FREEMEM</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a1b6fd5873bbe60abc9a6bf7b3e75056a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_fast</definition>
        <argsstring>(const char *source, char *dest, int originalSize)</argsstring>
        <name>LZ4_decompress_fast</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>originalSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="126" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="870" bodyend="877"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" compoundref="lz4_8c" startline="269">endOnOutputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" compoundref="lz4_8c" startline="270">full</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
        <referencedby refid="lz4_8h_1a76994c12731075f0d8a96239c8856192" compoundref="lz4_8c" startline="879" endline="879">LZ4_uncompress</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1ad7d22bc0cde54258724c4c77e7cf829f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_safe_partial</definition>
        <argsstring>(const char *source, char *dest, int inputSize, int targetOutputSize, int maxOutputSize)</argsstring>
        <name>LZ4_decompress_safe_partial</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>targetOutputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="141" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="860" bodyend="863"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" compoundref="lz4_8c" startline="269">endOnInputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca67bce1b2dc0e7c66a27de1a9e146ce3e" compoundref="lz4_8c" startline="270">partial</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a5533b6e13559d2c75ac5ac6d4eb13beb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_sizeofState</definition>
        <argsstring>(void)</argsstring>
        <name>LZ4_sizeofState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="155" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="602" bodyend="602"/>
        <references refid="lz4_8c_1ae3f505916d48e2bd86b7fc6eb1f9541b" compoundref="lz4_8c" startline="44">MEMORY_USAGE</references>
        <referencedby refid="lz4_8h_1a430f331e5951658bd033faf564a958bf" compoundref="lz4_8c" startline="605" endline="614">LZ4_compress_withState</referencedby>
        <referencedby refid="lz4_8h_1aae32f2434789e3878e43f52094b81b9a" compoundref="lz4_8c" startline="617" endline="626">LZ4_compress_limitedOutput_withState</referencedby>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a430f331e5951658bd033faf564a958bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_withState</definition>
        <argsstring>(void *state, const char *source, char *dest, int inputSize)</argsstring>
        <name>LZ4_compress_withState</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="156" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="605" bodyend="614"/>
        <references refid="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" compoundref="lz4_8c" startline="164">MEM_INIT</references>
        <references refid="lz4_8c_1aa7ea35a4a6f3c9b29dbbd14939706c53" compoundref="lz4_8c" startline="602" endline="602">LZ4_sizeofState</references>
        <references refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" compoundref="lz4_8c" startline="242">LZ4_64KLIMIT</references>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" compoundref="lz4_8c" startline="264">notLimited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1aae32f2434789e3878e43f52094b81b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_limitedOutput_withState</definition>
        <argsstring>(void *state, const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_compress_limitedOutput_withState</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="157" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="617" bodyend="626"/>
        <references refid="lz4_8c_1a1bd91a4e39950622f1d2e1c8990d2284" compoundref="lz4_8c" startline="164">MEM_INIT</references>
        <references refid="lz4_8c_1aa7ea35a4a6f3c9b29dbbd14939706c53" compoundref="lz4_8c" startline="602" endline="602">LZ4_sizeofState</references>
        <references refid="lz4_8c_1a54d5e65eeac14266f16958a632bf3bd1" compoundref="lz4_8c" startline="242">LZ4_64KLIMIT</references>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" compoundref="lz4_8c" startline="264">limited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a48aff40d7237850c996a1f6c266a598f" compoundref="lz4_8c" startline="265">byU16</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a98fcae5930c1fed598fe458fcdaf0ee5" compoundref="lz4_8c" startline="267">noPrefix</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699a5c952c05e312cfc0589ef1d283397560" compoundref="lz4_8c" startline="265">byPtr</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a3aa16d37ad77d8007ffaa0bdb3c7fb10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* LZ4_create</definition>
        <argsstring>(const char *inputBuffer)</argsstring>
        <name>LZ4_create</name>
        <param>
          <type>const char *</type>
          <declname>inputBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="163" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="653" bodyend="658"/>
        <references refid="lz4_8c_1ab6db208cb9c6a8d096008384a4c8b8c1" compoundref="lz4_8c" startline="161">ALLOCATOR</references>
        <references refid="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" compoundref="lz4_8c" startline="638" endline="644">LZ4_init</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a8893fc9d295b44546f945b0502f59864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_continue</definition>
        <argsstring>(void *LZ4_Data, const char *source, char *dest, int inputSize)</argsstring>
        <name>LZ4_compress_continue</name>
        <param>
          <type>void *</type>
          <declname>LZ4_Data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="164" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="699" bodyend="702"/>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28adc568f9214a2932542608f43124efcff" compoundref="lz4_8c" startline="264">notLimited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a2ed396b7d1983814698fbc31eecba9f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_compress_limitedOutput_continue</definition>
        <argsstring>(void *LZ4_Data, const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_compress_limitedOutput_continue</name>
        <param>
          <type>void *</type>
          <declname>LZ4_Data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="165" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="705" bodyend="708"/>
        <references refid="lz4_8c_1a4162a3b9897ca31136c7f1c7999ee584" compoundref="lz4_8c" startline="414" endline="554">LZ4_compress_generic</references>
        <references refid="lz4_8c_1ab93acf685743debab05876250a1cbe28a349792523322839d5afa7b6bdc5d5e82" compoundref="lz4_8c" startline="264">limited</references>
        <references refid="lz4_8c_1ae86e1d8a28953326b685d6ebb243a699ae7520fe8d6957f5029ddeb0652c65471" compoundref="lz4_8c" startline="265">byU32</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a2fd193cdf3113ab39f312a6cf625e988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* LZ4_slideInputBuffer</definition>
        <argsstring>(void *LZ4_Data)</argsstring>
        <name>LZ4_slideInputBuffer</name>
        <param>
          <type>void *</type>
          <declname>LZ4_Data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="166" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="668" bodyend="696"/>
        <references refid="struct_l_z4___data___structure_1a7e7e3cfaeae61371275c713ddff64b15" compoundref="lz4_8c" startline="261">LZ4_Data_Structure::nextBlock</references>
        <references refid="struct_l_z4___data___structure_1a3cfd405b97b4998b89dd9fad44e14714" compoundref="lz4_8c" startline="259">LZ4_Data_Structure::bufferStart</references>
        <references refid="lz4_8c_1a1841fd1a462d245d8c73dce55e2f45da" compoundref="lz4_8c" startline="238">KB</references>
        <references refid="struct_l_z4___data___structure_1ab80b5080c12714a3f24864f899ea139f" compoundref="lz4_8c" startline="260">LZ4_Data_Structure::base</references>
        <references refid="lz4_8c_1a01c821754d4c7a78283f423ebd753071" compoundref="lz4_8c" startline="229">HASHNBCELLS4</references>
        <references refid="struct_l_z4___data___structure_1a619a192c8d9e8dc479fd8df09106e0bf" compoundref="lz4_8c" startline="258">LZ4_Data_Structure::hashTable</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1ac85fe1c4aadb06c903e31812bb109a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_free</definition>
        <argsstring>(void *LZ4_Data)</argsstring>
        <name>LZ4_free</name>
        <param>
          <type>void *</type>
          <declname>LZ4_Data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="167" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="661" bodyend="665"/>
        <references refid="lz4_8c_1a2e47ec7ce19d2f57a60da284f1d7b0ab" compoundref="lz4_8c" startline="162">FREEMEM</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a92f20fa55554d00760fb6fb4108a2825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_sizeofStreamState</definition>
        <argsstring>(void)</argsstring>
        <name>LZ4_sizeofStreamState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="199" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="633" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1ae29eae664f704fd216b9db8d05d51e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_resetStreamState</definition>
        <argsstring>(void *state, const char *inputBuffer)</argsstring>
        <name>LZ4_resetStreamState</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>inputBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="200" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="646" bodyend="651"/>
        <references refid="lz4_8c_1a0d50f54660532fc3e7ec2b484d36f115" compoundref="lz4_8c" startline="638" endline="644">LZ4_init</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a29e5a7a8c67e597d432e4f008e736bd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_safe_withPrefix64k</definition>
        <argsstring>(const char *source, char *dest, int inputSize, int maxOutputSize)</argsstring>
        <name>LZ4_decompress_safe_withPrefix64k</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="224" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="855" bodyend="858"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a2a30c7b77002529763d202e7ac636539" compoundref="lz4_8c" startline="269">endOnInputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" compoundref="lz4_8c" startline="270">full</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a745dc4d765fc0b9bdb771a8259584933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_decompress_fast_withPrefix64k</definition>
        <argsstring>(const char *source, char *dest, int outputSize)</argsstring>
        <name>LZ4_decompress_fast_withPrefix64k</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="225" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="865" bodyend="868"/>
        <references refid="lz4_8c_1aa12ae44b1b8e9039c86fa87efc06e6ab" compoundref="lz4_8c" startline="720" endline="847">LZ4_decompress_generic</references>
        <references refid="lz4_8c_1a23fcfcea9fce4ad48b37485e3b6e8746a92d766b3022f9d86ccf764d716a46b2a" compoundref="lz4_8c" startline="269">endOnOutputSize</references>
        <references refid="lz4_8c_1afb1ac82a1a37a274f92fa7a9abdeeec4a1d0add22cacf7a79570b41d2f69b6108" compoundref="lz4_8c" startline="267">withPrefix</references>
        <references refid="lz4_8c_1a2719d1421671f2c7fa3c68ca7465994ca0a601c9076b9914da4a237c8688b1c88" compoundref="lz4_8c" startline="270">full</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a76994c12731075f0d8a96239c8856192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_uncompress</definition>
        <argsstring>(const char *source, char *dest, int outputSize)</argsstring>
        <name>LZ4_uncompress</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="242" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="879" bodyend="879"/>
        <references refid="lz4_8c_1ae6848d320c953d012408c7584a87b454" compoundref="lz4_8c" startline="870" endline="877">LZ4_decompress_fast</references>
      </memberdef>
      <memberdef kind="function" id="lz4_8h_1a81aa900c172d655f8a4f0a75739791f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LZ4_uncompress_unknownOutputSize</definition>
        <argsstring>(const char *source, char *dest, int isize, int maxOutputSize)</argsstring>
        <name>LZ4_uncompress_unknownOutputSize</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>isize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxOutputSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/lz4/lz4.h" line="243" column="1" bodyfile="/home/dev/ds-160209/src/lz4/lz4.c" bodystart="880" bodyend="880"/>
        <references refid="lz4_8c_1a76d66de24858903c049171e700c1371c" compoundref="lz4_8c" startline="850" endline="853">LZ4_decompress_safe</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>LZ4<sp/>-<sp/>Fast<sp/>LZ<sp/>compression<sp/>algorithm</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Header<sp/>File</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2011-2014,<sp/>Yann<sp/>Collet.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>BSD<sp/>2-Clause<sp/>License<sp/>(http://www.opensource.org/licenses/bsd-license.php)</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>met:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>You<sp/>can<sp/>contact<sp/>the<sp/>author<sp/>at<sp/>:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>-<sp/>LZ4<sp/>homepage<sp/>:<sp/>http://fastcompression.blogspot.com/p/lz4.html</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/>-<sp/>LZ4<sp/>source<sp/>repository<sp/>:<sp/>http://code.google.com/p/lz4/</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>Version</highlight></codeline>
<codeline lineno="43"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="lz4_8h_1a4a15eb1f8aa69834f917a50d7652413e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_VERSION_MAJOR<sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>major<sp/>interface/format<sp/>changes<sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="lz4_8h_1af16952f74f68ac445da9fc7603609909" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_VERSION_MINOR<sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>minor<sp/>interface/format<sp/>changes<sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="lz4_8h_1a19d496bbe4d8448bc2d42cfb576cf525" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_VERSION_RELEASE<sp/><sp/>3<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>tweaks,<sp/>bug-fixes,<sp/>or<sp/>development<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>Compiler<sp/>Options</highlight></codeline>
<codeline lineno="51"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(__STRICT_ANSI__))<sp/>||<sp/>(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(__cplusplus))<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Visual<sp/>Studio<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inline<sp/>__inline<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Visual<sp/>C<sp/>is<sp/>not<sp/>C99,<sp/>but<sp/>supports<sp/>some<sp/>kind<sp/>of<sp/>inline<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/>Simple<sp/>Functions</highlight></codeline>
<codeline lineno="59"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a806e7d86885991c722172bcf57abb71b" kindref="member">LZ4_compress</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a76d66de24858903c049171e700c1371c" kindref="member">LZ4_decompress_safe</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment">LZ4_compress()<sp/>:</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>Compresses<sp/>&apos;inputSize&apos;<sp/>bytes<sp/>from<sp/>&apos;source&apos;<sp/>into<sp/>&apos;dest&apos;.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/>Destination<sp/>buffer<sp/>must<sp/>be<sp/>already<sp/>allocated,</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>must<sp/>be<sp/>sized<sp/>to<sp/>handle<sp/>worst<sp/>cases<sp/>situations<sp/>(input<sp/>data<sp/>not<sp/>compressible)</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>Worst<sp/>case<sp/>size<sp/>evaluation<sp/>is<sp/>provided<sp/>by<sp/>function<sp/>LZ4_compressBound()</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>inputSize<sp/>:<sp/>Max<sp/>supported<sp/>value<sp/>is<sp/>LZ4_MAX_INPUT_VALUE</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>:<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>written<sp/>in<sp/>buffer<sp/>dest</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>0<sp/>if<sp/>the<sp/>compression<sp/>fails</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">LZ4_decompress_safe()<sp/>:</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>maxOutputSize<sp/>:<sp/>is<sp/>the<sp/>size<sp/>of<sp/>the<sp/>destination<sp/>buffer<sp/>(which<sp/>must<sp/>be<sp/>already<sp/>allocated)</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>:<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>decoded<sp/>in<sp/>the<sp/>destination<sp/>buffer<sp/>(necessarily<sp/>&lt;=<sp/>maxOutputSize)</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>source<sp/>stream<sp/>is<sp/>detected<sp/>malformed,<sp/>the<sp/>function<sp/>will<sp/>stop<sp/>decoding<sp/>and<sp/>return<sp/>a<sp/>negative<sp/>result.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>protected<sp/>against<sp/>buffer<sp/>overflow<sp/>exploits<sp/>(never<sp/>writes<sp/>outside<sp/>of<sp/>output<sp/>buffer,<sp/>and<sp/>never<sp/>reads<sp/>outside<sp/>of<sp/>input<sp/>buffer).<sp/>Therefore,<sp/>it<sp/>is<sp/>protected<sp/>against<sp/>malicious<sp/>data<sp/>packets</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>Advanced<sp/>Functions</highlight></codeline>
<codeline lineno="84"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="lz4_8h_1a88ee51e36ca74cd0533e731c20572ea6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_MAX_INPUT_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7E000000<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/>113<sp/>929<sp/>216<sp/>bytes<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="lz4_8h_1a2453a423fd34640a0afbbf57ed0a5399" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LZ4_COMPRESSBOUND(isize)<sp/><sp/>((unsigned<sp/>int)(isize)<sp/>&gt;<sp/>(unsigned<sp/>int)LZ4_MAX_INPUT_SIZE<sp/>?<sp/>0<sp/>:<sp/>(isize)<sp/>+<sp/>((isize)/255)<sp/>+<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="89"><highlight class="comment">LZ4_compressBound()<sp/>:</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>Provides<sp/>the<sp/>maximum<sp/>size<sp/>that<sp/>LZ4<sp/>may<sp/>output<sp/>in<sp/>a<sp/>&quot;worst<sp/>case&quot;<sp/>scenario<sp/>(input<sp/>data<sp/>not<sp/>compressible)</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>primarily<sp/>useful<sp/>for<sp/>memory<sp/>allocation<sp/>of<sp/>output<sp/>buffer.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>inline<sp/>function<sp/>is<sp/>recommended<sp/>for<sp/>the<sp/>general<sp/>case,</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/>macro<sp/>is<sp/>also<sp/>provided<sp/>when<sp/>result<sp/>needs<sp/>to<sp/>be<sp/>evaluated<sp/>at<sp/>compilation<sp/>(such<sp/>as<sp/>stack<sp/>memory<sp/>allocation).</highlight></codeline>
<codeline lineno="94"><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>isize<sp/><sp/>:<sp/>is<sp/>the<sp/>input<sp/>size.<sp/>Max<sp/>supported<sp/>value<sp/>is<sp/>LZ4_MAX_INPUT_SIZE</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>:<sp/>maximum<sp/>output<sp/>size<sp/>in<sp/>a<sp/>&quot;worst<sp/>case&quot;<sp/>scenario</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>0,<sp/>if<sp/>input<sp/>size<sp/>is<sp/>too<sp/>large<sp/>(<sp/>&gt;<sp/>LZ4_MAX_INPUT_SIZE)</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a2b09f5ca41ce609bb136d3637beffe04" kindref="member">LZ4_compressBound</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isize);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="103"><highlight class="comment">LZ4_compress_limitedOutput()<sp/>:</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>Compress<sp/>&apos;inputSize&apos;<sp/>bytes<sp/>from<sp/>&apos;source&apos;<sp/>into<sp/>an<sp/>output<sp/>buffer<sp/>&apos;dest&apos;<sp/>of<sp/>maximum<sp/>size<sp/>&apos;maxOutputSize&apos;.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>it<sp/>cannot<sp/>achieve<sp/>it,<sp/>compression<sp/>will<sp/>stop,<sp/>and<sp/>result<sp/>of<sp/>the<sp/>function<sp/>will<sp/>be<sp/>zero.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>never<sp/>writes<sp/>outside<sp/>of<sp/>provided<sp/>output<sp/>buffer.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/>inputSize<sp/><sp/>:<sp/>Max<sp/>supported<sp/>value<sp/>is<sp/>LZ4_MAX_INPUT_VALUE</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/>maxOutputSize<sp/>:<sp/>is<sp/>the<sp/>size<sp/>of<sp/>the<sp/>destination<sp/>buffer<sp/>(which<sp/>must<sp/>be<sp/>already<sp/>allocated)</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>:<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>written<sp/>in<sp/>buffer<sp/>&apos;dest&apos;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>0<sp/>if<sp/>the<sp/>compression<sp/>fails</highlight></codeline>
<codeline lineno="112"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a464e8e2a2ad215e0d94042722eb75551" kindref="member">LZ4_compress_limitedOutput</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="117"><highlight class="comment">LZ4_decompress_fast()<sp/>:</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/>originalSize<sp/>:<sp/>is<sp/>the<sp/>original<sp/>and<sp/>therefore<sp/>uncompressed<sp/>size</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>:<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>read<sp/>from<sp/>the<sp/>source<sp/>buffer<sp/>(in<sp/>other<sp/>words,<sp/>the<sp/>compressed<sp/>size)</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>source<sp/>stream<sp/>is<sp/>malformed,<sp/>the<sp/>function<sp/>will<sp/>stop<sp/>decoding<sp/>and<sp/>return<sp/>a<sp/>negative<sp/>result.</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>note<sp/>:<sp/>This<sp/>function<sp/>is<sp/>a<sp/>bit<sp/>faster<sp/>than<sp/>LZ4_decompress_safe()</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>never<sp/>writes<sp/>outside<sp/>of<sp/>output<sp/>buffers,<sp/>but<sp/>may<sp/>read<sp/>beyond<sp/>input<sp/>buffer<sp/>in<sp/>case<sp/>of<sp/>malicious<sp/>data<sp/>packet.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>this<sp/>function<sp/>preferably<sp/>into<sp/>a<sp/>trusted<sp/>environment<sp/>(data<sp/>to<sp/>decode<sp/>comes<sp/>from<sp/>a<sp/>trusted<sp/>source).</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destination<sp/>buffer<sp/>must<sp/>be<sp/>already<sp/>allocated.<sp/>Its<sp/>size<sp/>must<sp/>be<sp/>a<sp/>minimum<sp/>of<sp/>&apos;outputSize&apos;<sp/>bytes.</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a1b6fd5873bbe60abc9a6bf7b3e75056a" kindref="member">LZ4_decompress_fast</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>originalSize);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="130"><highlight class="comment">LZ4_decompress_safe_partial()<sp/>:</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>decompress<sp/>a<sp/>compressed<sp/>block<sp/>of<sp/>size<sp/>&apos;inputSize&apos;<sp/>at<sp/>position<sp/>&apos;source&apos;</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>into<sp/>output<sp/>buffer<sp/>&apos;dest&apos;<sp/>of<sp/>size<sp/>&apos;maxOutputSize&apos;.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>function<sp/>tries<sp/>to<sp/>stop<sp/>decompressing<sp/>operation<sp/>as<sp/>soon<sp/>as<sp/>&apos;targetOutputSize&apos;<sp/>has<sp/>been<sp/>reached,</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>reducing<sp/>decompression<sp/>time.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>:<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>decoded<sp/>in<sp/>the<sp/>destination<sp/>buffer<sp/>(necessarily<sp/>&lt;=<sp/>maxOutputSize)</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>:<sp/>this<sp/>number<sp/>can<sp/>be<sp/>&lt;<sp/>&apos;targetOutputSize&apos;<sp/>should<sp/>the<sp/>compressed<sp/>block<sp/>to<sp/>decode<sp/>be<sp/>smaller.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Always<sp/>control<sp/>how<sp/>many<sp/>bytes<sp/>were<sp/>decoded.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>source<sp/>stream<sp/>is<sp/>detected<sp/>malformed,<sp/>the<sp/>function<sp/>will<sp/>stop<sp/>decoding<sp/>and<sp/>return<sp/>a<sp/>negative<sp/>result.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>never<sp/>writes<sp/>outside<sp/>of<sp/>output<sp/>buffer,<sp/>and<sp/>never<sp/>reads<sp/>outside<sp/>of<sp/>input<sp/>buffer.<sp/>It<sp/>is<sp/>therefore<sp/>protected<sp/>against<sp/>malicious<sp/>data<sp/>packets</highlight></codeline>
<codeline lineno="140"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1ad7d22bc0cde54258724c4c77e7cf829f" kindref="member">LZ4_decompress_safe_partial</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetOutputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="145"><highlight class="comment">These<sp/>functions<sp/>are<sp/>provided<sp/>should<sp/>you<sp/>prefer<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>compression<sp/>tables<sp/>with<sp/>your<sp/>own<sp/>allocation<sp/>methods.</highlight></codeline>
<codeline lineno="146"><highlight class="comment">To<sp/>know<sp/>how<sp/>much<sp/>memory<sp/>must<sp/>be<sp/>allocated<sp/>for<sp/>the<sp/>compression<sp/>tables,<sp/>use<sp/>:</highlight></codeline>
<codeline lineno="147"><highlight class="comment">int<sp/>LZ4_sizeofState();</highlight></codeline>
<codeline lineno="148"><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">Note<sp/>that<sp/>tables<sp/>must<sp/>be<sp/>aligned<sp/>on<sp/>4-bytes<sp/>boundaries,<sp/>otherwise<sp/>compression<sp/>will<sp/>fail<sp/>(return<sp/>code<sp/>0).</highlight></codeline>
<codeline lineno="150"><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment">The<sp/>allocated<sp/>memory<sp/>can<sp/>be<sp/>provided<sp/>to<sp/>the<sp/>compressions<sp/>functions<sp/>using<sp/>&apos;void*<sp/>state&apos;<sp/>parameter.</highlight></codeline>
<codeline lineno="152"><highlight class="comment">LZ4_compress_withState()<sp/>and<sp/>LZ4_compress_limitedOutput_withState()<sp/>are<sp/>equivalent<sp/>to<sp/>previously<sp/>described<sp/>functions.</highlight></codeline>
<codeline lineno="153"><highlight class="comment">They<sp/>just<sp/>use<sp/>the<sp/>externally<sp/>allocated<sp/>memory<sp/>area<sp/>instead<sp/>of<sp/>allocating<sp/>their<sp/>own<sp/>(on<sp/>stack,<sp/>or<sp/>on<sp/>heap).</highlight></codeline>
<codeline lineno="154"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a5533b6e13559d2c75ac5ac6d4eb13beb" kindref="member">LZ4_sizeofState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a430f331e5951658bd033faf564a958bf" kindref="member">LZ4_compress_withState</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1aae32f2434789e3878e43f52094b81b9a" kindref="member">LZ4_compress_limitedOutput_withState</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>Streaming<sp/>Functions</highlight></codeline>
<codeline lineno="162"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="lz4_8h_1a3aa16d37ad77d8007ffaa0bdb3c7fb10" kindref="member">LZ4_create</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inputBuffer);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="lz4_8h_1a8893fc9d295b44546f945b0502f59864" kindref="member">LZ4_compress_continue</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>LZ4_Data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="lz4_8h_1a2ed396b7d1983814698fbc31eecba9f2" kindref="member">LZ4_compress_limitedOutput_continue</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>LZ4_Data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lz4_8h_1a2fd193cdf3113ab39f312a6cf625e988" kindref="member">LZ4_slideInputBuffer</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>LZ4_Data);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="lz4_8h_1ac85fe1c4aadb06c903e31812bb109a86" kindref="member">LZ4_free</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>LZ4_Data);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="170"><highlight class="comment">These<sp/>functions<sp/>allow<sp/>the<sp/>compression<sp/>of<sp/>dependent<sp/>blocks,<sp/>where<sp/>each<sp/>block<sp/>benefits<sp/>from<sp/>prior<sp/>64<sp/>KB<sp/>within<sp/>preceding<sp/>blocks.</highlight></codeline>
<codeline lineno="171"><highlight class="comment">In<sp/>order<sp/>to<sp/>achieve<sp/>this,<sp/>it<sp/>is<sp/>necessary<sp/>to<sp/>start<sp/>creating<sp/>the<sp/>LZ4<sp/>Data<sp/>Structure,<sp/>thanks<sp/>to<sp/>the<sp/>function<sp/>:</highlight></codeline>
<codeline lineno="172"><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment">void*<sp/>LZ4_create<sp/>(const<sp/>char*<sp/>inputBuffer);</highlight></codeline>
<codeline lineno="174"><highlight class="comment">The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>the<sp/>(void*)<sp/>pointer<sp/>on<sp/>the<sp/>LZ4<sp/>Data<sp/>Structure.</highlight></codeline>
<codeline lineno="175"><highlight class="comment">This<sp/>pointer<sp/>will<sp/>be<sp/>needed<sp/>in<sp/>all<sp/>other<sp/>functions.</highlight></codeline>
<codeline lineno="176"><highlight class="comment">If<sp/>the<sp/>pointer<sp/>returned<sp/>is<sp/>NULL,<sp/>then<sp/>the<sp/>allocation<sp/>has<sp/>failed,<sp/>and<sp/>compression<sp/>must<sp/>be<sp/>aborted.</highlight></codeline>
<codeline lineno="177"><highlight class="comment">The<sp/>only<sp/>parameter<sp/>&apos;const<sp/>char*<sp/>inputBuffer&apos;<sp/>must,<sp/>obviously,<sp/>point<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>input<sp/>buffer.</highlight></codeline>
<codeline lineno="178"><highlight class="comment">The<sp/>input<sp/>buffer<sp/>must<sp/>be<sp/>already<sp/>allocated,<sp/>and<sp/>size<sp/>at<sp/>least<sp/>192KB.</highlight></codeline>
<codeline lineno="179"><highlight class="comment">&apos;inputBuffer&apos;<sp/>will<sp/>also<sp/>be<sp/>the<sp/>&apos;const<sp/>char*<sp/>source&apos;<sp/>of<sp/>the<sp/>first<sp/>block.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment">All<sp/>blocks<sp/>are<sp/>expected<sp/>to<sp/>lay<sp/>next<sp/>to<sp/>each<sp/>other<sp/>within<sp/>the<sp/>input<sp/>buffer,<sp/>starting<sp/>from<sp/>&apos;inputBuffer&apos;.</highlight></codeline>
<codeline lineno="182"><highlight class="comment">To<sp/>compress<sp/>each<sp/>block,<sp/>use<sp/>either<sp/>LZ4_compress_continue()<sp/>or<sp/>LZ4_compress_limitedOutput_continue().</highlight></codeline>
<codeline lineno="183"><highlight class="comment">Their<sp/>behavior<sp/>are<sp/>identical<sp/>to<sp/>LZ4_compress()<sp/>or<sp/>LZ4_compress_limitedOutput(),</highlight></codeline>
<codeline lineno="184"><highlight class="comment">but<sp/>require<sp/>the<sp/>LZ4<sp/>Data<sp/>Structure<sp/>as<sp/>their<sp/>first<sp/>argument,<sp/>and<sp/>check<sp/>that<sp/>each<sp/>block<sp/>starts<sp/>right<sp/>after<sp/>the<sp/>previous<sp/>one.</highlight></codeline>
<codeline lineno="185"><highlight class="comment">If<sp/>next<sp/>block<sp/>does<sp/>not<sp/>begin<sp/>immediately<sp/>after<sp/>the<sp/>previous<sp/>one,<sp/>the<sp/>compression<sp/>will<sp/>fail<sp/>(return<sp/>0).</highlight></codeline>
<codeline lineno="186"><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment">When<sp/>it&apos;s<sp/>no<sp/>longer<sp/>possible<sp/>to<sp/>lay<sp/>the<sp/>next<sp/>block<sp/>after<sp/>the<sp/>previous<sp/>one<sp/>(not<sp/>enough<sp/>space<sp/>left<sp/>into<sp/>input<sp/>buffer),<sp/>a<sp/>call<sp/>to<sp/>:</highlight></codeline>
<codeline lineno="188"><highlight class="comment">char*<sp/>LZ4_slideInputBuffer(void*<sp/>LZ4_Data);</highlight></codeline>
<codeline lineno="189"><highlight class="comment">must<sp/>be<sp/>performed.<sp/>It<sp/>will<sp/>typically<sp/>copy<sp/>the<sp/>latest<sp/>64KB<sp/>of<sp/>input<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>input<sp/>buffer.</highlight></codeline>
<codeline lineno="190"><highlight class="comment">Note<sp/>that,<sp/>for<sp/>this<sp/>function<sp/>to<sp/>work<sp/>properly,<sp/>minimum<sp/>size<sp/>of<sp/>an<sp/>input<sp/>buffer<sp/>must<sp/>be<sp/>192KB.</highlight></codeline>
<codeline lineno="191"><highlight class="comment">==&gt;<sp/>The<sp/>memory<sp/>position<sp/>where<sp/>the<sp/>next<sp/>input<sp/>data<sp/>block<sp/>must<sp/>start<sp/>is<sp/>provided<sp/>as<sp/>the<sp/>result<sp/>of<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment">Compression<sp/>can<sp/>then<sp/>resume,<sp/>using<sp/>LZ4_compress_continue()<sp/>or<sp/>LZ4_compress_limitedOutput_continue(),<sp/>as<sp/>usual.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"></highlight></codeline>
<codeline lineno="195"><highlight class="comment">When<sp/>compression<sp/>is<sp/>completed,<sp/>a<sp/>call<sp/>to<sp/>LZ4_free()<sp/>will<sp/>release<sp/>the<sp/>memory<sp/>used<sp/>by<sp/>the<sp/>LZ4<sp/>Data<sp/>Structure.</highlight></codeline>
<codeline lineno="196"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a92f20fa55554d00760fb6fb4108a2825" kindref="member">LZ4_sizeofStreamState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1ae29eae664f704fd216b9db8d05d51e18" kindref="member">LZ4_resetStreamState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inputBuffer);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="203"><highlight class="comment">These<sp/>functions<sp/>achieve<sp/>the<sp/>same<sp/>result<sp/>as<sp/>:</highlight></codeline>
<codeline lineno="204"><highlight class="comment">void*<sp/>LZ4_create<sp/>(const<sp/>char*<sp/>inputBuffer);</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment">They<sp/>are<sp/>provided<sp/>here<sp/>to<sp/>allow<sp/>the<sp/>user<sp/>program<sp/>to<sp/>allocate<sp/>memory<sp/>using<sp/>its<sp/>own<sp/>routines.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment">To<sp/>know<sp/>how<sp/>much<sp/>space<sp/>must<sp/>be<sp/>allocated,<sp/>use<sp/>LZ4_sizeofStreamState();</highlight></codeline>
<codeline lineno="209"><highlight class="comment">Note<sp/>also<sp/>that<sp/>space<sp/>must<sp/>be<sp/>4-bytes<sp/>aligned.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment">Once<sp/>space<sp/>is<sp/>allocated,<sp/>you<sp/>must<sp/>initialize<sp/>it<sp/>using<sp/>:<sp/>LZ4_resetStreamState(void*<sp/>state,<sp/>const<sp/>char*<sp/>inputBuffer);</highlight></codeline>
<codeline lineno="212"><highlight class="comment">void*<sp/>state<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>space<sp/>allocated.</highlight></codeline>
<codeline lineno="213"><highlight class="comment">It<sp/>must<sp/>be<sp/>aligned<sp/>on<sp/>4-bytes<sp/>boundaries,<sp/>and<sp/>be<sp/>large<sp/>enough.</highlight></codeline>
<codeline lineno="214"><highlight class="comment">The<sp/>parameter<sp/>&apos;const<sp/>char*<sp/>inputBuffer&apos;<sp/>must,<sp/>obviously,<sp/>point<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>input<sp/>buffer.</highlight></codeline>
<codeline lineno="215"><highlight class="comment">The<sp/>input<sp/>buffer<sp/>must<sp/>be<sp/>already<sp/>allocated,<sp/>and<sp/>size<sp/>at<sp/>least<sp/>192KB.</highlight></codeline>
<codeline lineno="216"><highlight class="comment">&apos;inputBuffer&apos;<sp/>will<sp/>also<sp/>be<sp/>the<sp/>&apos;const<sp/>char*<sp/>source&apos;<sp/>of<sp/>the<sp/>first<sp/>block.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"></highlight></codeline>
<codeline lineno="218"><highlight class="comment">The<sp/>same<sp/>space<sp/>can<sp/>be<sp/>re-used<sp/>multiple<sp/>times,<sp/>just<sp/>by<sp/>initializing<sp/>it<sp/>each<sp/>time<sp/>with<sp/>LZ4_resetStreamState().</highlight></codeline>
<codeline lineno="219"><highlight class="comment">return<sp/>value<sp/>of<sp/>LZ4_resetStreamState()<sp/>must<sp/>be<sp/>0<sp/>is<sp/>OK.</highlight></codeline>
<codeline lineno="220"><highlight class="comment">Any<sp/>other<sp/>value<sp/>means<sp/>there<sp/>was<sp/>an<sp/>error<sp/>(typically,<sp/>pointer<sp/>is<sp/>not<sp/>aligned<sp/>on<sp/>4-bytes<sp/>boundaries).</highlight></codeline>
<codeline lineno="221"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a29e5a7a8c67e597d432e4f008e736bd5" kindref="member">LZ4_decompress_safe_withPrefix64k</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a745dc4d765fc0b9bdb771a8259584933" kindref="member">LZ4_decompress_fast_withPrefix64k</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputSize);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="228"><highlight class="comment">*_withPrefix64k()<sp/>:</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/>These<sp/>decoding<sp/>functions<sp/>work<sp/>the<sp/>same<sp/>as<sp/>their<sp/>&quot;normal<sp/>name&quot;<sp/>versions,</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>can<sp/>use<sp/>up<sp/>to<sp/>64KB<sp/>of<sp/>data<sp/>in<sp/>front<sp/>of<sp/>&apos;char*<sp/>dest&apos;.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/>These<sp/>functions<sp/>are<sp/>necessary<sp/>to<sp/>decode<sp/>inter-dependant<sp/>blocks.</highlight></codeline>
<codeline lineno="232"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/>Obsolete<sp/>Functions</highlight></codeline>
<codeline lineno="237"><highlight class="comment">**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="239"><highlight class="comment">These<sp/>functions<sp/>are<sp/>deprecated<sp/>and<sp/>should<sp/>no<sp/>longer<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="240"><highlight class="comment">They<sp/>are<sp/>provided<sp/>here<sp/>for<sp/>compatibility<sp/>with<sp/>existing<sp/>user<sp/>programs.</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a76994c12731075f0d8a96239c8856192" kindref="member">LZ4_uncompress</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputSize);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lz4_8h_1a81aa900c172d655f8a4f0a75739791f0" kindref="member">LZ4_uncompress_unknownOutputSize</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="debugconsole_8cpp_1af2ed45b90afa2ef4ec6e09625335a082" kindref="member">source</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxOutputSize);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/lz4/lz4.h"/>
  </compounddef>
</doxygen>
