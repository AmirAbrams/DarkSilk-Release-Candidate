<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_script_num" kind="class" language="C++" prot="public">
    <compoundname>CScriptNum</compoundname>
    <includes refid="script_8h" local="no">script.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_c_script_num_1a50a64fe3041a47f7d87d64d4533b5431" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t CScriptNum::nMaxNumSize</definition>
        <argsstring></argsstring>
        <name>nMaxNumSize</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="520" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_script_num_1a045e75208fcde34ccb79da65f49cbd7e" prot="private" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CScriptNum::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="540" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="540" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_script_num_1abd546b6e7786ba70aeeb81e218d055bc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CScriptNum::CScriptNum</definition>
        <argsstring>(const int64_t &amp;n)</argsstring>
        <name>CScriptNum</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Numeric opcodes (OP_1ADD, etc) are restricted to operating on 4-byte integers. The semantics are subtle, though: operands must be in the range [-2^31 +1...2^31 -1], but results may overflow (and are valid as long as they are not used in a subsequent numeric operation). <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> enforces those semantics by storing results as an int64 and allowing out-of-range values to be returned as a vector of bytes but throwing an exception if arithmetic is done or the result is interpreted as an integer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="392" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a936fb594ed65099e7bf0dd8b2b7a237f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CScriptNum::CScriptNum</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch, bool fRequireMinimal)</argsstring>
        <name>CScriptNum</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fRequireMinimal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="397" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="397" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1aee8614a7d617f19a013d9153b2ae8935" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator==</definition>
        <argsstring>(const int64_t &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="423" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="423" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a2e0863436a79af14f9f12ba5b7273956" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator!=</definition>
        <argsstring>(const int64_t &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="424" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="424" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a8fc4407cbbe5c0dcff4ac29f4df90094" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator&lt;=</definition>
        <argsstring>(const int64_t &amp;rhs) const </argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="425" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="425" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1abdd8282d14d3bbec06870738382ff273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator&lt;</definition>
        <argsstring>(const int64_t &amp;rhs) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="426" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="426" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1ae3d84e811252420503b1fb1023e8634d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator&gt;=</definition>
        <argsstring>(const int64_t &amp;rhs) const </argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="427" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="427" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a683de19baa777f9dd893f4eeb5f5f4d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator&gt;</definition>
        <argsstring>(const int64_t &amp;rhs) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="428" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="428" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a0e4ca77274d40a56cd33626728ded1e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator==</definition>
        <argsstring>(const CScriptNum &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="430" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1aea161271e8d9b2d8fdd48045d38a7725" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator!=</definition>
        <argsstring>(const CScriptNum &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="431" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="431" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a5ed4aa41e828599087d67080aec898a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator&lt;=</definition>
        <argsstring>(const CScriptNum &amp;rhs) const </argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="432" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="432" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a582b21f1dc3583e894fb85ea162c92d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator&lt;</definition>
        <argsstring>(const CScriptNum &amp;rhs) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="433" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="433" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a7f45272bbabd1e0e2b4f899c201f3c15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator&gt;=</definition>
        <argsstring>(const CScriptNum &amp;rhs) const </argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="434" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="434" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a68465738661f8f6f216bf3f99849a5c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CScriptNum::operator&gt;</definition>
        <argsstring>(const CScriptNum &amp;rhs) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="435" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="435" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a6e688183c0e78712327575f81d2388da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref></type>
        <definition>CScriptNum CScriptNum::operator+</definition>
        <argsstring>(const int64_t &amp;rhs) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="437" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="437" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1ab9e35a0951d8134c7c50ce2939407a96" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref></type>
        <definition>CScriptNum CScriptNum::operator-</definition>
        <argsstring>(const int64_t &amp;rhs) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="438" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="438" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a033183dfe2b274bbf598073a053b8eca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref></type>
        <definition>CScriptNum CScriptNum::operator+</definition>
        <argsstring>(const CScriptNum &amp;rhs) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="439" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="439" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a260907928a4c48e18be70abf32a0f270" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref></type>
        <definition>CScriptNum CScriptNum::operator-</definition>
        <argsstring>(const CScriptNum &amp;rhs) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="440" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="440" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a34a41a249893e9561b47aecb98b7fc54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
        <definition>CScriptNum&amp; CScriptNum::operator+=</definition>
        <argsstring>(const CScriptNum &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="442" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="442" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1aac8cae8548fb610e67f444796d89877b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
        <definition>CScriptNum&amp; CScriptNum::operator-=</definition>
        <argsstring>(const CScriptNum &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="443" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="443" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a13d925ab4d697b8fbcf5bbaa9df9bb40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref></type>
        <definition>CScriptNum CScriptNum::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="445" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="445" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1ace45ef712f5b771114c019e95b24b3be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
        <definition>CScriptNum&amp; CScriptNum::operator=</definition>
        <argsstring>(const int64_t &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="451" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="451" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1a75a2fce922fed2ef4433d4e9fba6f85c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
        <definition>CScriptNum&amp; CScriptNum::operator+=</definition>
        <argsstring>(const int64_t &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="457" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="457" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1af83fa61859f58965e26fad7b4c82cc0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_script_num" kindref="compound">CScriptNum</ref> &amp;</type>
        <definition>CScriptNum&amp; CScriptNum::operator-=</definition>
        <argsstring>(const int64_t &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="465" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="465" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1ab58edf8d8c555acbcac9e1ff9827a8da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CScriptNum::getint</definition>
        <argsstring>() const </argsstring>
        <name>getint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="473" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="473" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="class_c_script_num_1aaa803c18a86acc8b928054f052dcc4c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CScriptNum::getvch</definition>
        <argsstring>() const </argsstring>
        <name>getvch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="482" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="482" bodyend="485"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_c_script_num_1a2e2c60f2646f03b5cec8d92a6d31b1e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>static std::vector&lt;unsigned char&gt; CScriptNum::serialize</definition>
        <argsstring>(const int64_t &amp;value)</argsstring>
        <name>serialize</name>
        <param>
          <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="487" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="487" bodyend="518"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_c_script_num_1ada37d02a4818b1ae00b2da54b5d73cba" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>static int64_t CScriptNum::set_vch</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>set_vch</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/script.h" line="523" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="523" bodyend="538"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/script.h" line="381" column="1" bodyfile="/home/dev/ds-160209/src/script.h" bodystart="380" bodyend="541"/>
    <listofallmembers>
      <member refid="class_c_script_num_1abd546b6e7786ba70aeeb81e218d055bc" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>CScriptNum</name></member>
      <member refid="class_c_script_num_1a936fb594ed65099e7bf0dd8b2b7a237f" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>CScriptNum</name></member>
      <member refid="class_c_script_num_1ab58edf8d8c555acbcac9e1ff9827a8da" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>getint</name></member>
      <member refid="class_c_script_num_1aaa803c18a86acc8b928054f052dcc4c4" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>getvch</name></member>
      <member refid="class_c_script_num_1a045e75208fcde34ccb79da65f49cbd7e" prot="private" virt="non-virtual"><scope>CScriptNum</scope><name>m_value</name></member>
      <member refid="class_c_script_num_1a50a64fe3041a47f7d87d64d4533b5431" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>nMaxNumSize</name></member>
      <member refid="class_c_script_num_1a2e0863436a79af14f9f12ba5b7273956" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator!=</name></member>
      <member refid="class_c_script_num_1aea161271e8d9b2d8fdd48045d38a7725" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator!=</name></member>
      <member refid="class_c_script_num_1a6e688183c0e78712327575f81d2388da" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator+</name></member>
      <member refid="class_c_script_num_1a033183dfe2b274bbf598073a053b8eca" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator+</name></member>
      <member refid="class_c_script_num_1a34a41a249893e9561b47aecb98b7fc54" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator+=</name></member>
      <member refid="class_c_script_num_1a75a2fce922fed2ef4433d4e9fba6f85c" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator+=</name></member>
      <member refid="class_c_script_num_1ab9e35a0951d8134c7c50ce2939407a96" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator-</name></member>
      <member refid="class_c_script_num_1a260907928a4c48e18be70abf32a0f270" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator-</name></member>
      <member refid="class_c_script_num_1a13d925ab4d697b8fbcf5bbaa9df9bb40" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator-</name></member>
      <member refid="class_c_script_num_1aac8cae8548fb610e67f444796d89877b" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator-=</name></member>
      <member refid="class_c_script_num_1af83fa61859f58965e26fad7b4c82cc0d" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator-=</name></member>
      <member refid="class_c_script_num_1abdd8282d14d3bbec06870738382ff273" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator&lt;</name></member>
      <member refid="class_c_script_num_1a582b21f1dc3583e894fb85ea162c92d6" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator&lt;</name></member>
      <member refid="class_c_script_num_1a8fc4407cbbe5c0dcff4ac29f4df90094" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator&lt;=</name></member>
      <member refid="class_c_script_num_1a5ed4aa41e828599087d67080aec898a6" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator&lt;=</name></member>
      <member refid="class_c_script_num_1ace45ef712f5b771114c019e95b24b3be" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator=</name></member>
      <member refid="class_c_script_num_1aee8614a7d617f19a013d9153b2ae8935" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator==</name></member>
      <member refid="class_c_script_num_1a0e4ca77274d40a56cd33626728ded1e5" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator==</name></member>
      <member refid="class_c_script_num_1a683de19baa777f9dd893f4eeb5f5f4d6" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator&gt;</name></member>
      <member refid="class_c_script_num_1a68465738661f8f6f216bf3f99849a5c2" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator&gt;</name></member>
      <member refid="class_c_script_num_1ae3d84e811252420503b1fb1023e8634d" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator&gt;=</name></member>
      <member refid="class_c_script_num_1a7f45272bbabd1e0e2b4f899c201f3c15" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>operator&gt;=</name></member>
      <member refid="class_c_script_num_1a2e2c60f2646f03b5cec8d92a6d31b1e8" prot="public" virt="non-virtual"><scope>CScriptNum</scope><name>serialize</name></member>
      <member refid="class_c_script_num_1ada37d02a4818b1ae00b2da54b5d73cba" prot="private" virt="non-virtual"><scope>CScriptNum</scope><name>set_vch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
