<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="i2p_8cpp" kind="file" language="C++">
    <compoundname>i2p.cpp</compoundname>
    <includes local="no">boost/thread/shared_mutex.hpp</includes>
    <includes refid="i2p_8h" local="yes">i2p.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="hash_8h" local="yes">hash.h</includes>
    <incdepgraph>
      <node id="34603">
        <label>list</label>
      </node>
      <node id="34628">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="34608">
        <label>netinet/in.h</label>
      </node>
      <node id="34638">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="34614" relation="include">
        </childnode>
        <childnode refid="34626" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
      </node>
      <node id="34609">
        <label>arpa/inet.h</label>
      </node>
      <node id="34619">
        <label>limits</label>
      </node>
      <node id="34656">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="34604" relation="include">
        </childnode>
        <childnode refid="34626" relation="include">
        </childnode>
      </node>
      <node id="34657">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="34658" relation="include">
        </childnode>
        <childnode refid="34604" relation="include">
        </childnode>
        <childnode refid="34630" relation="include">
        </childnode>
      </node>
      <node id="34648">
        <label>openssl/rand.h</label>
      </node>
      <node id="34652">
        <label>assert.h</label>
      </node>
      <node id="34623">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="34632">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="34633" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
      </node>
      <node id="34629">
        <label>sys/mman.h</label>
      </node>
      <node id="34626">
        <label>stdlib.h</label>
      </node>
      <node id="34647">
        <label>openssl/crypto.h</label>
      </node>
      <node id="34643">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="34653">
        <label>openssl/sha.h</label>
      </node>
      <node id="34618">
        <label>cassert</label>
      </node>
      <node id="34637">
        <label>stdexcept</label>
      </node>
      <node id="34610">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="34611" relation="include">
        </childnode>
        <childnode refid="34612" relation="include">
        </childnode>
        <childnode refid="34613" relation="include">
        </childnode>
        <childnode refid="34614" relation="include">
        </childnode>
        <childnode refid="34634" relation="include">
        </childnode>
        <childnode refid="34638" relation="include">
        </childnode>
        <childnode refid="34616" relation="include">
        </childnode>
        <childnode refid="34603" relation="include">
        </childnode>
        <childnode refid="34606" relation="include">
        </childnode>
        <childnode refid="34615" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
        <childnode refid="34639" relation="include">
        </childnode>
        <childnode refid="34640" relation="include">
        </childnode>
        <childnode refid="34641" relation="include">
        </childnode>
        <childnode refid="34642" relation="include">
        </childnode>
        <childnode refid="34643" relation="include">
        </childnode>
        <childnode refid="34644" relation="include">
        </childnode>
        <childnode refid="34645" relation="include">
        </childnode>
        <childnode refid="34646" relation="include">
        </childnode>
        <childnode refid="34647" relation="include">
        </childnode>
        <childnode refid="34648" relation="include">
        </childnode>
        <childnode refid="34649" relation="include">
        </childnode>
        <childnode refid="34604" relation="include">
        </childnode>
      </node>
      <node id="34642">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="34602">
        <label>string</label>
      </node>
      <node id="34616">
        <label>map</label>
      </node>
      <node id="34639">
        <label>boost/thread.hpp</label>
      </node>
      <node id="34598">
        <label>/home/dev/ds-160209/src/i2p.cpp</label>
        <link refid="i2p.cpp"/>
        <childnode refid="34599" relation="include">
        </childnode>
        <childnode refid="34600" relation="include">
        </childnode>
        <childnode refid="34610" relation="include">
        </childnode>
        <childnode refid="34650" relation="include">
        </childnode>
      </node>
      <node id="34658">
        <label>stddef.h</label>
      </node>
      <node id="34614">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="34602" relation="include">
        </childnode>
        <childnode refid="34615" relation="include">
        </childnode>
        <childnode refid="34616" relation="include">
        </childnode>
        <childnode refid="34617" relation="include">
        </childnode>
        <childnode refid="34618" relation="include">
        </childnode>
        <childnode refid="34619" relation="include">
        </childnode>
        <childnode refid="34604" relation="include">
        </childnode>
        <childnode refid="34620" relation="include">
        </childnode>
        <childnode refid="34621" relation="include">
        </childnode>
        <childnode refid="34622" relation="include">
        </childnode>
        <childnode refid="34623" relation="include">
        </childnode>
        <childnode refid="34624" relation="include">
        </childnode>
        <childnode refid="34632" relation="include">
        </childnode>
      </node>
      <node id="34630">
        <label>limits.h</label>
      </node>
      <node id="34613">
        <label>sys/resource.h</label>
      </node>
      <node id="34644">
        <label>openssl/bio.h</label>
      </node>
      <node id="34650">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="34651" relation="include">
        </childnode>
        <childnode refid="34614" relation="include">
        </childnode>
        <childnode refid="34653" relation="include">
        </childnode>
        <childnode refid="34654" relation="include">
        </childnode>
        <childnode refid="34655" relation="include">
        </childnode>
        <childnode refid="34656" relation="include">
        </childnode>
        <childnode refid="34657" relation="include">
        </childnode>
        <childnode refid="34659" relation="include">
        </childnode>
        <childnode refid="34615" relation="include">
        </childnode>
      </node>
      <node id="34611">
        <label>sys/types.h</label>
      </node>
      <node id="34627">
        <label>string.h</label>
      </node>
      <node id="34633">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="34621">
        <label>cstdio</label>
      </node>
      <node id="34646">
        <label>openssl/buffer.h</label>
      </node>
      <node id="34622">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="34641">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="34631">
        <label>unistd.h</label>
      </node>
      <node id="34615">
        <label>vector</label>
      </node>
      <node id="34654">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="34640">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="34606">
        <label>utility</label>
      </node>
      <node id="34636">
        <label>sstream</label>
      </node>
      <node id="34599">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="34645">
        <label>openssl/evp.h</label>
      </node>
      <node id="34600">
        <label>i2p.h</label>
        <link refid="i2p_8h"/>
        <childnode refid="34601" relation="include">
        </childnode>
      </node>
      <node id="34634">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="34618" relation="include">
        </childnode>
        <childnode refid="34635" relation="include">
        </childnode>
        <childnode refid="34636" relation="include">
        </childnode>
        <childnode refid="34637" relation="include">
        </childnode>
      </node>
      <node id="34604">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="34659">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="34604" relation="include">
        </childnode>
        <childnode refid="34658" relation="include">
        </childnode>
        <childnode refid="34630" relation="include">
        </childnode>
      </node>
      <node id="34612">
        <label>sys/time.h</label>
      </node>
      <node id="34601">
        <label>i2psam.h</label>
        <link refid="i2psam_8h"/>
        <childnode refid="34602" relation="include">
        </childnode>
        <childnode refid="34603" relation="include">
        </childnode>
        <childnode refid="34604" relation="include">
        </childnode>
        <childnode refid="34605" relation="include">
        </childnode>
        <childnode refid="34606" relation="include">
        </childnode>
        <childnode refid="34607" relation="include">
        </childnode>
        <childnode refid="34608" relation="include">
        </childnode>
        <childnode refid="34609" relation="include">
        </childnode>
      </node>
      <node id="34635">
        <label>iostream</label>
      </node>
      <node id="34651">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="34652" relation="include">
        </childnode>
        <childnode refid="34620" relation="include">
        </childnode>
        <childnode refid="34637" relation="include">
        </childnode>
        <childnode refid="34604" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
        <childnode refid="34615" relation="include">
        </childnode>
      </node>
      <node id="34607">
        <label>sys/socket.h</label>
      </node>
      <node id="34649">
        <label>openssl/bn.h</label>
      </node>
      <node id="34624">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="34625" relation="include">
        </childnode>
        <childnode refid="34627" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
        <childnode refid="34628" relation="include">
        </childnode>
        <childnode refid="34616" relation="include">
        </childnode>
        <childnode refid="34629" relation="include">
        </childnode>
        <childnode refid="34630" relation="include">
        </childnode>
        <childnode refid="34631" relation="include">
        </childnode>
      </node>
      <node id="34617">
        <label>set</label>
      </node>
      <node id="34655">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="34604" relation="include">
        </childnode>
        <childnode refid="34626" relation="include">
        </childnode>
      </node>
      <node id="34625">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="34626" relation="include">
        </childnode>
      </node>
      <node id="34620">
        <label>cstring</label>
      </node>
      <node id="34605">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder" prot="public">SAM::StreamSessionAdapter::SessionHolder</innerclass>
    <innernamespace refid="namespace_s_a_m">SAM</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012-2016<sp/>giv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread/shared_mutex.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="i2p_8h" kindref="compound">i2p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hash_8h" kindref="compound">hash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespace_s_a_m" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_a_m" kindref="compound">SAM</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder" kindref="compound">StreamSessionAdapter::SessionHolder</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1ae1e2a6ccc998b0593900a760d4fee71e" kindref="member">SessionHolder</ref>(std::auto_ptr&lt;SAM::StreamSession&gt;<sp/>session);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session" kindref="compound">SAM::StreamSession</ref>&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1abfe42c992695ab920cdc947a5f7207e5" kindref="member">getSession</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_a_m_1_1_stream_session" kindref="compound">SAM::StreamSession</ref>&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1abfe42c992695ab920cdc947a5f7207e5" kindref="member">getSession</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>heal()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reborn()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::auto_ptr&lt;SAM::StreamSession&gt;<sp/>session_;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_mutex<sp/>mutex_type;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>mutex_type<sp/>mtx_;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1ae1e2a6ccc998b0593900a760d4fee71e" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1ae1e2a6ccc998b0593900a760d4fee71e" kindref="member">StreamSessionAdapter::SessionHolder::SessionHolder</ref>(std::auto_ptr&lt;SAM::StreamSession&gt;<sp/>session)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>session_(session)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1abfe42c992695ab920cdc947a5f7207e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session" kindref="compound">SAM::StreamSession</ref>&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1abfe42c992695ab920cdc947a5f7207e5" kindref="member">StreamSessionAdapter::SessionHolder::getSession</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="34"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::upgrade_lock&lt;mutex_type&gt;<sp/>lock(mtx_);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session_-&gt;isSick())</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::upgrade_to_unique_lock&lt;mutex_type&gt;<sp/>ulock(lock);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heal();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*session_;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1a1fc3997d4d2eebb27b6103def34baec0" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_stream_session" kindref="compound">SAM::StreamSession</ref>&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder_1abfe42c992695ab920cdc947a5f7207e5" kindref="member">StreamSessionAdapter::SessionHolder::getSession</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::upgrade_lock&lt;mutex_type&gt;<sp/>lock(mtx_);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(session_-&gt;isSick())</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::upgrade_to_unique_lock&lt;mutex_type&gt;<sp/>ulock(lock);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heal();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*session_;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StreamSessionAdapter::SessionHolder::heal()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>reborn();<sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>don&apos;t<sp/>know<sp/>how<sp/>to<sp/>heal<sp/>it<sp/>just<sp/>reborn<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StreamSessionAdapter::SessionHolder::reborn()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="61"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!session_-&gt;isSick())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;SAM::StreamSession&gt;<sp/>newSession(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session" kindref="compound">SAM::StreamSession</ref>(*session_));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newSession-&gt;isSick()<sp/>&amp;&amp;<sp/>session_-&gt;isSick())</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session_<sp/>=<sp/>newSession;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_s_a_m_1_1_stream_session_adapter_1aa2c9e13fcfa6570af80d387b3fc5704c" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_stream_session_adapter_1aa2c9e13fcfa6570af80d387b3fc5704c" kindref="member">StreamSessionAdapter::StreamSessionAdapter</ref>(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nickname,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>SAMHost<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_ADDRESS*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/>SAMPort<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_PORT*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>myDestination<sp/></highlight><highlight class="comment">/*=<sp/>SAM_GENERATE_MY_DESTINATION*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>i2pOptions<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_I2P_OPTIONS*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>minVer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_MIN_VER*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>maxVer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_MAX_VER*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>sessionHolder_(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1_1_session_holder" kindref="compound">SessionHolder</ref>(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::auto_ptr&lt;<ref refid="namespace_s_a_m" kindref="compound">SAM</ref>::<ref refid="class_s_a_m_1_1_stream_session" kindref="compound">StreamSession</ref>&gt;(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/><ref refid="namespace_s_a_m" kindref="compound">SAM</ref>::<ref refid="class_s_a_m_1_1_stream_session" kindref="compound">StreamSession</ref>(nickname,<sp/>SAMHost,<sp/>SAMPort,<sp/>myDestination,<sp/>i2pOptions,<sp/>minVer,<sp/>maxVer))))</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_s_a_m_1_1_stream_session_adapter_1abf40bd7ca543e91544ebd4c03fd8d702" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_stream_session_adapter_1abf40bd7ca543e91544ebd4c03fd8d702" kindref="member">StreamSessionAdapter::~StreamSessionAdapter</ref>()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_s_a_m_1_1_stream_session_adapter_1a040e02aced837c8409ed1edfc4f8ac69" refkind="member"><highlight class="normal"><ref refid="namespace_s_a_m_1a346e18b1c3780d27cc960b8a432dfdf7" kindref="member">SAM::SOCKET</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a040e02aced837c8409ed1edfc4f8ac69" kindref="member">StreamSessionAdapter::accept</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">SAM::RequestResult&lt;std::auto_ptr&lt;SAM::Socket&gt;</ref><sp/>&gt;<sp/>result<sp/>=<sp/>sessionHolder_-&gt;getSession().accept(silent);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>Socket::release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.<ref refid="struct_s_a_m_1_1_request_result_1a417f74624c0c9426eeca809613a56ada" kindref="member">isOk</ref><sp/>?<sp/>result.<ref refid="struct_s_a_m_1_1_request_result_1a8253483e546b2075a1dda00ef1fb310a" kindref="member">value</ref>-&gt;release()<sp/>:<sp/><ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_s_a_m_1_1_stream_session_adapter_1a983b84796d46f00aee1e4b7c4f6f421f" refkind="member"><highlight class="normal"><ref refid="namespace_s_a_m_1a346e18b1c3780d27cc960b8a432dfdf7" kindref="member">SAM::SOCKET</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a983b84796d46f00aee1e4b7c4f6f421f" kindref="member">StreamSessionAdapter::connect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>destination,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">SAM::RequestResult&lt;std::auto_ptr&lt;SAM::Socket&gt;</ref><sp/>&gt;<sp/>result<sp/>=<sp/>sessionHolder_-&gt;getSession().connect(destination,<sp/>silent);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>Socket::release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.<ref refid="struct_s_a_m_1_1_request_result_1a417f74624c0c9426eeca809613a56ada" kindref="member">isOk</ref><sp/>?<sp/>result.<ref refid="struct_s_a_m_1_1_request_result_1a8253483e546b2075a1dda00ef1fb310a" kindref="member">value</ref>-&gt;release()<sp/>:<sp/><ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_s_a_m_1_1_stream_session_adapter_1a1ebd1d55194db5bbed563836f06a2b55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a1ebd1d55194db5bbed563836f06a2b55" kindref="member">StreamSessionAdapter::forward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/>port,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().forward(host,<sp/>port,<sp/>silent).isOk;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_s_a_m_1_1_stream_session_adapter_1a865f56708a911fc832953f10c59d96e3" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a865f56708a911fc832953f10c59d96e3" kindref="member">StreamSessionAdapter::namingLookup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="110"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">SAM::RequestResult&lt;const std::string&gt;</ref><sp/>result<sp/>=<sp/>sessionHolder_-&gt;getSession().namingLookup(name);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.<ref refid="struct_s_a_m_1_1_request_result_1a417f74624c0c9426eeca809613a56ada" kindref="member">isOk</ref><sp/>?<sp/>result.<ref refid="struct_s_a_m_1_1_request_result_1a8253483e546b2075a1dda00ef1fb310a" kindref="member">value</ref><sp/>:<sp/>std::string();</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_s_a_m_1_1_stream_session_adapter_1a62c02a359e9e36459f13180189bed974" refkind="member"><highlight class="normal"><ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">SAM::FullDestination</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a62c02a359e9e36459f13180189bed974" kindref="member">StreamSessionAdapter::destGenerate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="116"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">SAM::RequestResult&lt;const SAM::FullDestination&gt;</ref><sp/>result<sp/>=<sp/>sessionHolder_-&gt;getSession().destGenerate();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.<ref refid="struct_s_a_m_1_1_request_result_1a417f74624c0c9426eeca809613a56ada" kindref="member">isOk</ref><sp/>?<sp/>result.<ref refid="struct_s_a_m_1_1_request_result_1a8253483e546b2075a1dda00ef1fb310a" kindref="member">value</ref><sp/>:<sp/><ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">SAM::FullDestination</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_s_a_m_1_1_stream_session_adapter_1a0c0e5dec8a7ec68aeae7a653e6aa8d13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a0c0e5dec8a7ec68aeae7a653e6aa8d13" kindref="member">StreamSessionAdapter::stopForwarding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/>port)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>sessionHolder_-&gt;getSession().stopForwarding(host,<sp/>port);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_s_a_m_1_1_stream_session_adapter_1a94cb431a3fee60c87f134b1b925ff67a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a94cb431a3fee60c87f134b1b925ff67a" kindref="member">StreamSessionAdapter::stopForwardingAll</ref>()</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>sessionHolder_-&gt;getSession().stopForwardingAll();</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_s_a_m_1_1_stream_session_adapter_1a80d5e268298b1970dbb1119df2bc76d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">SAM::FullDestination</ref>&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a80d5e268298b1970dbb1119df2bc76d5" kindref="member">StreamSessionAdapter::getMyDestination</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().getMyDestination();</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_s_a_m_1_1_stream_session_adapter_1a3507ca50cf27d61adaad5ac5006172df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sockaddr_in&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a3507ca50cf27d61adaad5ac5006172df" kindref="member">StreamSessionAdapter::getSAMAddress</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().getSAMAddress();</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_s_a_m_1_1_stream_session_adapter_1a154db264cc3b2c442c11280175ae7e8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a154db264cc3b2c442c11280175ae7e8d" kindref="member">StreamSessionAdapter::getSAMHost</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="142"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().getSAMHost();</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_s_a_m_1_1_stream_session_adapter_1aceada2034be63523f41ac1153c2dc3fa" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1aceada2034be63523f41ac1153c2dc3fa" kindref="member">StreamSessionAdapter::getSAMPort</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().getSAMPort();</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_s_a_m_1_1_stream_session_adapter_1a928ff5f1c5546862fedd2f4216e56541" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1a928ff5f1c5546862fedd2f4216e56541" kindref="member">StreamSessionAdapter::getNickname</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="152"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().getNickname();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_s_a_m_1_1_stream_session_adapter_1ab194deeaa1fba6e8eed3e55af17d788c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1ab194deeaa1fba6e8eed3e55af17d788c" kindref="member">StreamSessionAdapter::getSAMMinVer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="157"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().getSAMMinVer();</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_s_a_m_1_1_stream_session_adapter_1ac9a713a36d06047b54d1a5df477165be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1ac9a713a36d06047b54d1a5df477165be" kindref="member">StreamSessionAdapter::getSAMMaxVer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="162"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().getSAMMaxVer();</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_s_a_m_1_1_stream_session_adapter_1af0911ea5109eb8e0987b328369e80dc2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1af0911ea5109eb8e0987b328369e80dc2" kindref="member">StreamSessionAdapter::getSAMVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().getSAMVersion();</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_s_a_m_1_1_stream_session_adapter_1adc4e097ce8db41980c540e6c11371585" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_adapter_1adc4e097ce8db41980c540e6c11371585" kindref="member">StreamSessionAdapter::getOptions</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="172"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionHolder_-&gt;getSession().getOptions();</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">I2PSession::I2PSession()</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespace_s_a_m" kindref="compound">SAM</ref>::StreamSessionAdapter(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(<ref refid="i2p_8h_1a932a388c966338106979fa78a4a49564" kindref="member">I2P_SESSION_NAME_PARAM</ref>,<sp/><ref refid="i2p_8h_1a045f59d11afb181f7c1c33faa680d045" kindref="member">I2P_SESSION_NAME_DEFAULT</ref>),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(<ref refid="i2p_8h_1a93c16d5dc5d0f08ca53915794d21e81d" kindref="member">I2P_SAM_HOST_PARAM</ref>,<sp/><ref refid="i2p_8h_1aa33b0c223ff08a1c0f451d3e3595b7e7" kindref="member">I2P_SAM_HOST_DEFAULT</ref>),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref>)<ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(<ref refid="i2p_8h_1a61ee08cae7f33ea500fcfbb20fd12785" kindref="member">I2P_SAM_PORT_PARAM</ref>,<sp/><ref refid="i2p_8h_1a8b0799be44b0a977cffcba8c5a63c5bf" kindref="member">I2P_SAM_PORT_DEFAULT</ref>),</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(<ref refid="i2p_8h_1af5d464f35bc76ee055d137e0e7ecfd86" kindref="member">I2P_SAM_MY_DESTINATION_PARAM</ref>,<sp/><ref refid="i2p_8h_1ace603f3e82d48b54fbaa7a577cca71d1" kindref="member">I2P_SAM_MY_DESTINATION_DEFAULT</ref>),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(<ref refid="i2p_8h_1aa76427728df37ad804ad6febede75b94" kindref="member">I2P_SAM_I2P_OPTIONS_PARAM</ref>,<sp/><ref refid="i2psam_8h_1a27b1654d5365d0ef151d0a185b4aea36" kindref="member">SAM_DEFAULT_I2P_OPTIONS</ref>))</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">I2PSession::~I2PSession()</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_i2_p_session_1a4daa60a1a5767f354ebc5af8cabc4691" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_i2_p_session_1a4daa60a1a5767f354ebc5af8cabc4691" kindref="member">I2PSession::GenerateB32AddressFromDestination</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>destination)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>canonicalDest<sp/>=<sp/>destination;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>canonicalDest.find_first_of(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);<sp/>pos<sp/>!=<sp/>std::string::npos;<sp/>pos<sp/>=<sp/>canonicalDest.find_first_of(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">,<sp/>pos))</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canonicalDest[pos]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>canonicalDest.find_first_of(</highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">);<sp/>pos<sp/>!=<sp/>std::string::npos;<sp/>pos<sp/>=<sp/>canonicalDest.find_first_of(</highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">,<sp/>pos))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canonicalDest[pos]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rawHash<sp/>=<sp/><ref refid="util_8cpp_1a224a1ec4dc69c9463abf0e8ae767af0d" kindref="member">DecodeBase64</ref>(canonicalDest);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)rawHash.c_str(),<sp/>rawHash.size(),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result<sp/>=<sp/><ref refid="util_8cpp_1a71aa75e646de8a10971f887bc71d9a75" kindref="member">EncodeBase32</ref>(hash.<ref refid="classbase__uint_1aaa32054bf4e8fbb31d54a75f6065174d" kindref="member">begin</ref>(),<sp/>hash.<ref refid="classbase__uint_1a76539ef6be800bc02e4038f457a4f74a" kindref="member">end</ref>()<sp/>-<sp/>hash.<ref refid="classbase__uint_1aaa32054bf4e8fbb31d54a75f6065174d" kindref="member">begin</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.b32.i2p&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>result.find_first_of(</highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">);<sp/>pos<sp/>!=<sp/>std::string::npos;<sp/>pos<sp/>=<sp/>result.find_first_of(</highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">,<sp/>pos-1))</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.erase(pos,<sp/>1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/i2p.cpp"/>
  </compounddef>
</doxygen>
