<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="port__posix_8cc" kind="file" language="C++">
    <compoundname>port_posix.cc</compoundname>
    <includes refid="port__posix_8h" local="yes">port/port_posix.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="logging_8h" local="yes">util/logging.h</includes>
    <incdepgraph>
      <node id="9122">
        <label>util/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="9120" relation="include">
        </childnode>
        <childnode refid="9116" relation="include">
        </childnode>
        <childnode refid="9117" relation="include">
        </childnode>
        <childnode refid="9123" relation="include">
        </childnode>
      </node>
      <node id="9113">
        <label>port/port_posix.h</label>
        <link refid="port__posix_8h"/>
        <childnode refid="9114" relation="include">
        </childnode>
        <childnode refid="9115" relation="include">
        </childnode>
        <childnode refid="9116" relation="include">
        </childnode>
        <childnode refid="9117" relation="include">
        </childnode>
        <childnode refid="9118" relation="include">
        </childnode>
      </node>
      <node id="9114">
        <label>endian.h</label>
      </node>
      <node id="9117">
        <label>string</label>
      </node>
      <node id="9115">
        <label>pthread.h</label>
      </node>
      <node id="9121">
        <label>string.h</label>
      </node>
      <node id="9123">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="9121" relation="include">
        </childnode>
      </node>
      <node id="9116">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="9119">
        <label>cstdlib</label>
      </node>
      <node id="9112">
        <label>/home/dev/ds-160209/src/leveldb/port/port_posix.cc</label>
        <link refid="port_posix.cc"/>
        <childnode refid="9113" relation="include">
        </childnode>
        <childnode refid="9119" relation="include">
        </childnode>
        <childnode refid="9120" relation="include">
        </childnode>
        <childnode refid="9121" relation="include">
        </childnode>
        <childnode refid="9122" relation="include">
        </childnode>
      </node>
      <node id="9118">
        <label>port/atomic_pointer.h</label>
        <link refid="atomic__pointer_8h"/>
        <childnode refid="9116" relation="include">
        </childnode>
      </node>
      <node id="9120">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <innernamespace refid="namespaceleveldb_1_1port">leveldb::port</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="port__posix_8h" kindref="compound">port/port_posix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logging_8h" kindref="compound">util/logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">port<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PthreadCall(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;pthread<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>label,<sp/>strerror(result));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classleveldb_1_1port_1_1_mutex_1ab8f26966b881db1fd96839df85e5c583" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1port_1_1_mutex_1ab8f26966b881db1fd96839df85e5c583" kindref="member">Mutex::Mutex</ref>()<sp/>{<sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;init<sp/>mutex&quot;</highlight><highlight class="normal">,<sp/>pthread_mutex_init(&amp;mu_,<sp/>NULL));<sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classleveldb_1_1port_1_1_mutex_1a86acffb44e6134be2e8398e6f3be6abc" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1port_1_1_mutex_1a86acffb44e6134be2e8398e6f3be6abc" kindref="member">Mutex::~Mutex</ref>()<sp/>{<sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;destroy<sp/>mutex&quot;</highlight><highlight class="normal">,<sp/>pthread_mutex_destroy(&amp;mu_));<sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Mutex::Lock</ref>()<sp/>{<sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;lock&quot;</highlight><highlight class="normal">,<sp/>pthread_mutex_lock(&amp;mu_));<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Mutex::Unlock</ref>()<sp/>{<sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;unlock&quot;</highlight><highlight class="normal">,<sp/>pthread_mutex_unlock(&amp;mu_));<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classleveldb_1_1port_1_1_cond_var_1abb23c74c7b58298a20d4cfd6a0c5839a" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1port_1_1_cond_var_1abb23c74c7b58298a20d4cfd6a0c5839a" kindref="member">CondVar::CondVar</ref>(<ref refid="classleveldb_1_1port_1_1_mutex" kindref="compound">Mutex</ref>*<sp/><ref refid="db__bench_8cc_1a1a5c2f3b52d2dec1d9896cec4b02d17e" kindref="member">mu</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="db__test_8cc_1a7409a2fd2bde9ec649030b2513a568b8" kindref="member">mu_</ref>(mu)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;init<sp/>cv&quot;</highlight><highlight class="normal">,<sp/>pthread_cond_init(&amp;cv_,<sp/>NULL));</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classleveldb_1_1port_1_1_cond_var_1abf5e80198afeeccf1ee1b9af848d0cf6" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1port_1_1_cond_var_1abf5e80198afeeccf1ee1b9af848d0cf6" kindref="member">CondVar::~CondVar</ref>()<sp/>{<sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;destroy<sp/>cv&quot;</highlight><highlight class="normal">,<sp/>pthread_cond_destroy(&amp;cv_));<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classleveldb_1_1port_1_1_cond_var_1a9e9855595a3f3a3ccf47949696065597" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1port_1_1_cond_var_1a9e9855595a3f3a3ccf47949696065597" kindref="member">CondVar::Wait</ref>()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;wait&quot;</highlight><highlight class="normal">,<sp/>pthread_cond_wait(&amp;cv_,<sp/>&amp;mu_-&gt;mu_));</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classleveldb_1_1port_1_1_cond_var_1ac36a2038b058b24886741c99e4a7d7d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1port_1_1_cond_var_1ac36a2038b058b24886741c99e4a7d7d4" kindref="member">CondVar::Signal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;signal&quot;</highlight><highlight class="normal">,<sp/>pthread_cond_signal(&amp;cv_));</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classleveldb_1_1port_1_1_cond_var_1ad7725662f3c1bc542100c41081d1428a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1port_1_1_cond_var_1ad7725662f3c1bc542100c41081d1428a" kindref="member">CondVar::SignalAll</ref>()<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;broadcast&quot;</highlight><highlight class="normal">,<sp/>pthread_cond_broadcast(&amp;cv_));</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="namespaceleveldb_1_1port_1a1493e91d494e6f0ea086a743a562e983" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1port_1a1493e91d494e6f0ea086a743a562e983" kindref="member">InitOnce</ref>(<ref refid="classleveldb_1_1port_1_1_once_type" kindref="compound">OnceType</ref>*<sp/>once,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*initializer)())<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>PthreadCall(</highlight><highlight class="stringliteral">&quot;once&quot;</highlight><highlight class="normal">,<sp/>pthread_once(once,<sp/>initializer));</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/port/port_posix.cc"/>
  </compounddef>
</doxygen>
