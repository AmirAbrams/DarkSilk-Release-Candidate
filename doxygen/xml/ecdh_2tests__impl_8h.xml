<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="ecdh_2tests__impl_8h" kind="file" language="C++">
    <compoundname>tests_impl.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="ecdh_2tests__impl_8h_1ab13157e14f777c18f14fefc834d067c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_ecdh_generator_basepoint</definition>
        <argsstring>(void)</argsstring>
        <name>test_ecdh_generator_basepoint</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/tests_impl.h" line="10" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/tests_impl.h" bodystart="10" bodyend="42"/>
        <references refid="tests_8c_1a01cf4b4fc9b4ab8cb3e04fd3dc2ff57f" compoundref="tests_8c" startline="123" endline="134">random_scalar_order</references>
        <references refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" compoundref="secp256k1_2src_2util_8h" startline="52">CHECK</references>
        <references refid="secp256k1_8h_1a7438071aa8a6dc4697abe4f4659f2161" compoundref="secp256k1_8c" startline="409" endline="430">secp256k1_ec_pubkey_create</references>
        <references refid="secp256k1__ecdh_8h_1a4b0ce331dd8a723475e934aa6461b75a" compoundref="ecdh_2main__impl_8h" startline="13" endline="52">secp256k1_ecdh</references>
        <references refid="secp256k1_8h_1a34977bf00322e510e881160c421836d7" compoundref="secp256k1_8c" startline="168" endline="190">secp256k1_ec_pubkey_serialize</references>
        <references refid="secp256k1_8h_1a7b8f642c65e8b5c81fa4421b7c42ab57" compoundref="secp256k1_8h" startline="165">SECP256K1_EC_COMPRESSED</references>
        <referencedby refid="ecdh_2tests__impl_8h_1aab6cd779f0b87dc8a7afdf4eaf873407" compoundref="ecdh_2tests__impl_8h" startline="70" endline="73">run_ecdh_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="ecdh_2tests__impl_8h_1a505bff7cea922e6d8aa4f7525cfd191a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_bad_scalar</definition>
        <argsstring>(void)</argsstring>
        <name>test_bad_scalar</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/tests_impl.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/tests_impl.h" bodystart="44" bodyend="68"/>
        <references refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" compoundref="db__bench_8cc" startline="290">rand</references>
        <references refid="tests_8c_1a01cf4b4fc9b4ab8cb3e04fd3dc2ff57f" compoundref="tests_8c" startline="123" endline="134">random_scalar_order</references>
        <references refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" compoundref="secp256k1_2src_2util_8h" startline="52">CHECK</references>
        <references refid="secp256k1_8h_1a7438071aa8a6dc4697abe4f4659f2161" compoundref="secp256k1_8c" startline="409" endline="430">secp256k1_ec_pubkey_create</references>
        <references refid="secp256k1__ecdh_8h_1a4b0ce331dd8a723475e934aa6461b75a" compoundref="ecdh_2main__impl_8h" startline="13" endline="52">secp256k1_ecdh</references>
        <referencedby refid="ecdh_2tests__impl_8h_1aab6cd779f0b87dc8a7afdf4eaf873407" compoundref="ecdh_2tests__impl_8h" startline="70" endline="73">run_ecdh_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="ecdh_2tests__impl_8h_1aab6cd779f0b87dc8a7afdf4eaf873407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void run_ecdh_tests</definition>
        <argsstring>(void)</argsstring>
        <name>run_ecdh_tests</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/tests_impl.h" line="70" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/tests_impl.h" bodystart="70" bodyend="73"/>
        <references refid="ecdh_2tests__impl_8h_1ab13157e14f777c18f14fefc834d067c5" compoundref="ecdh_2tests__impl_8h" startline="10" endline="42">test_ecdh_generator_basepoint</references>
        <references refid="ecdh_2tests__impl_8h_1a505bff7cea922e6d8aa4f7525cfd191a" compoundref="ecdh_2tests__impl_8h" startline="44" endline="68">test_bad_scalar</references>
        <referencedby refid="tests_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="tests_8c" startline="4252" endline="4383">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Andrew<sp/>Poelstra<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SECP256K1_MODULE_ECDH_TESTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SECP256K1_MODULE_ECDH_TESTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="ecdh_2tests__impl_8h_1ab13157e14f777c18f14fefc834d067c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ecdh_2tests__impl_8h_1ab13157e14f777c18f14fefc834d067c5" kindref="member">test_ecdh_generator_basepoint</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s_one[32]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__pubkey" kindref="compound">secp256k1_pubkey</ref><sp/>point[2];</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>s_one[31]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>against<sp/>pubkey<sp/>creation<sp/>when<sp/>the<sp/>basepoint<sp/>is<sp/>the<sp/>generator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__sha256__t" kindref="compound">secp256k1_sha256_t</ref><sp/>sha;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s_b32[32];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>output_ecdh[32];</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>output_ser[32];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>point_ser[33];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>point_ser_len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(point_ser);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>s;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tests_8c_1a01cf4b4fc9b4ab8cb3e04fd3dc2ff57f" kindref="member">random_scalar_order</ref>(&amp;s);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_scalar_get_b32(s_b32,<sp/>&amp;s);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>using<sp/>ECDH<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1_8h_1a7438071aa8a6dc4697abe4f4659f2161" kindref="member">secp256k1_ec_pubkey_create</ref>(ctx,<sp/>&amp;point[0],<sp/>s_one)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1__ecdh_8h_1a4b0ce331dd8a723475e934aa6461b75a" kindref="member">secp256k1_ecdh</ref>(ctx,<sp/>output_ecdh,<sp/>&amp;point[0],<sp/>s_b32)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>&quot;explicitly&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1_8h_1a7438071aa8a6dc4697abe4f4659f2161" kindref="member">secp256k1_ec_pubkey_create</ref>(ctx,<sp/>&amp;point[1],<sp/>s_b32)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1_8h_1a34977bf00322e510e881160c421836d7" kindref="member">secp256k1_ec_pubkey_serialize</ref>(ctx,<sp/>point_ser,<sp/>&amp;point_ser_len,<sp/>&amp;point[1],<sp/><ref refid="secp256k1_8h_1a7b8f642c65e8b5c81fa4421b7c42ab57" kindref="member">SECP256K1_EC_COMPRESSED</ref>)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(point_ser_len<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(point_ser));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_initialize(&amp;sha);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_write(&amp;sha,<sp/>point_ser,<sp/>point_ser_len);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_finalize(&amp;sha,<sp/>output_ser);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(memcmp(output_ecdh,<sp/>output_ser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(output_ser))<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="ecdh_2tests__impl_8h_1a505bff7cea922e6d8aa4f7525cfd191a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ecdh_2tests__impl_8h_1a505bff7cea922e6d8aa4f7525cfd191a" kindref="member">test_bad_scalar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s_zero[32]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s_overflow[32]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xff,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xff,<sp/>0xfe,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xba,<sp/>0xae,<sp/>0xdc,<sp/>0xe6,<sp/>0xaf,<sp/>0x48,<sp/>0xa0,<sp/>0x3b,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xbf,<sp/>0xd2,<sp/>0x5e,<sp/>0x8c,<sp/>0xd0,<sp/>0x36,<sp/>0x41,<sp/>0x41</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s_rand[32]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>output[32];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/><ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__pubkey" kindref="compound">secp256k1_pubkey</ref><sp/>point;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>random<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tests_8c_1a01cf4b4fc9b4ab8cb3e04fd3dc2ff57f" kindref="member">random_scalar_order</ref>(&amp;rand);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_get_b32(s_rand,<sp/>&amp;rand);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1_8h_1a7438071aa8a6dc4697abe4f4659f2161" kindref="member">secp256k1_ec_pubkey_create</ref>(ctx,<sp/>&amp;point,<sp/>s_rand)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>multiply<sp/>it<sp/>by<sp/>bad<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1__ecdh_8h_1a4b0ce331dd8a723475e934aa6461b75a" kindref="member">secp256k1_ecdh</ref>(ctx,<sp/>output,<sp/>&amp;point,<sp/>s_zero)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1__ecdh_8h_1a4b0ce331dd8a723475e934aa6461b75a" kindref="member">secp256k1_ecdh</ref>(ctx,<sp/>output,<sp/>&amp;point,<sp/>s_overflow)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>...and<sp/>a<sp/>good<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>s_overflow[31]<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1__ecdh_8h_1a4b0ce331dd8a723475e934aa6461b75a" kindref="member">secp256k1_ecdh</ref>(ctx,<sp/>output,<sp/>&amp;point,<sp/>s_overflow)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="ecdh_2tests__impl_8h_1aab6cd779f0b87dc8a7afdf4eaf873407" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ecdh_2tests__impl_8h_1aab6cd779f0b87dc8a7afdf4eaf873407" kindref="member">run_ecdh_tests</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ecdh_2tests__impl_8h_1ab13157e14f777c18f14fefc834d067c5" kindref="member">test_ecdh_generator_basepoint</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ecdh_2tests__impl_8h_1a505bff7cea922e6d8aa4f7525cfd191a" kindref="member">test_bad_scalar</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/modules/ecdh/tests_impl.h"/>
  </compounddef>
</doxygen>
