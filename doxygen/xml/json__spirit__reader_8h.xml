<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="json__spirit__reader_8h" kind="file" language="C++">
    <compoundname>json_spirit_reader.h</compoundname>
    <includes refid="json__spirit__value_8h" local="yes">json_spirit_value.h</includes>
    <includes refid="json__spirit__error__position_8h" local="yes">json_spirit_error_position.h</includes>
    <includes local="no">iostream</includes>
    <includedby refid="json__spirit_8h" local="yes">/home/dev/ds-160209/src/json/json_spirit.h</includedby>
    <includedby refid="json__spirit__reader_8cpp" local="yes">/home/dev/ds-160209/src/json/json_spirit_reader.cpp</includedby>
    <incdepgraph>
      <node id="35216">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="35218">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="35210" relation="include">
        </childnode>
      </node>
      <node id="35211">
        <label>cassert</label>
      </node>
      <node id="35213">
        <label>stdexcept</label>
      </node>
      <node id="35210">
        <label>string</label>
      </node>
      <node id="35209">
        <label>map</label>
      </node>
      <node id="35217">
        <label>boost/variant.hpp</label>
      </node>
      <node id="35208">
        <label>vector</label>
      </node>
      <node id="35212">
        <label>sstream</label>
      </node>
      <node id="35214">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="35219">
        <label>iostream</label>
      </node>
      <node id="35215">
        <label>boost/config.hpp</label>
      </node>
      <node id="35206">
        <label>/home/dev/ds-160209/src/json/json_spirit_reader.h</label>
        <link refid="json_spirit_reader.h"/>
        <childnode refid="35207" relation="include">
        </childnode>
        <childnode refid="35218" relation="include">
        </childnode>
        <childnode refid="35219" relation="include">
        </childnode>
      </node>
      <node id="35207">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="35208" relation="include">
        </childnode>
        <childnode refid="35209" relation="include">
        </childnode>
        <childnode refid="35210" relation="include">
        </childnode>
        <childnode refid="35211" relation="include">
        </childnode>
        <childnode refid="35212" relation="include">
        </childnode>
        <childnode refid="35213" relation="include">
        </childnode>
        <childnode refid="35214" relation="include">
        </childnode>
        <childnode refid="35215" relation="include">
        </childnode>
        <childnode refid="35216" relation="include">
        </childnode>
        <childnode refid="35217" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="35223">
        <label>/home/dev/ds-160209/src/json/json_spirit_reader.cpp</label>
        <link refid="json__spirit__reader_8cpp"/>
      </node>
      <node id="35222">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="35221">
        <label>/home/dev/ds-160209/src/json/json_spirit.h</label>
        <link refid="json__spirit_8h"/>
        <childnode refid="35222" relation="include">
        </childnode>
      </node>
      <node id="35220">
        <label>/home/dev/ds-160209/src/json/json_spirit_reader.h</label>
        <link refid="json_spirit_reader.h"/>
        <childnode refid="35221" relation="include">
        </childnode>
        <childnode refid="35223" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacejson__spirit">json_spirit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>JSON_SPIRIT_READER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JSON_SPIRIT_READER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>John<sp/>W.<sp/>Wilkinson<sp/>2007<sp/>-<sp/>2016.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>License,<sp/>see<sp/>accompanying<sp/>file<sp/>LICENSE.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>json<sp/>spirit<sp/>version<sp/>4.03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>(_MSC_VER<sp/>&gt;=<sp/>1020)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__spirit__value_8h" kindref="compound">json_spirit_value.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__spirit__error__position_8h" kindref="compound">json_spirit_error_position.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacejson__spirit" kindref="compound">json_spirit</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>functions<sp/>to<sp/>reads<sp/>a<sp/>JSON<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/>std::string::const_iterator&amp;<sp/>begin,<sp/>std::string::const_iterator<sp/>end,<sp/><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/>std::string::const_iterator&amp;<sp/>begin,<sp/>std::string::const_iterator<sp/>end,<sp/><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_NO_STD_WSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;<sp/>s,<sp/><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/>std::wistream&amp;<sp/><sp/>is,<sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/>std::wstring::const_iterator&amp;<sp/>begin,<sp/>std::wstring::const_iterator<sp/>end,<sp/><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;<sp/>s,<sp/><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/>std::wistream&amp;<sp/>is,<sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/>std::wstring::const_iterator&amp;<sp/>begin,<sp/>std::wstring::const_iterator<sp/>end,<sp/><ref refid="namespacejson__spirit_1a048cde4e921b6f41cbc0fab1cbc352e8" kindref="member">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/>std::string::const_iterator&amp;<sp/>begin,<sp/>std::string::const_iterator<sp/>end,<sp/><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/>std::string::const_iterator&amp;<sp/>begin,<sp/>std::string::const_iterator<sp/>end,<sp/><ref refid="namespacejson__spirit_1a4dfd55710919c7c5e20fcbe4e4fe7b46" kindref="member">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_NO_STD_WSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;<sp/>s,<sp/><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/>std::wistream&amp;<sp/>is,<sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">read</ref>(<sp/>std::wstring::const_iterator&amp;<sp/>begin,<sp/>std::wstring::const_iterator<sp/>end,<sp/><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;<sp/>s,<sp/><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/>std::wistream&amp;<sp/>is,<sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">read_or_throw</ref>(<sp/>std::wstring::const_iterator&amp;<sp/>begin,<sp/>std::wstring::const_iterator<sp/>end,<sp/><ref refid="namespacejson__spirit_1a2b6befe411be23e2a1a9ca590ef212b5" kindref="member">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/json/json_spirit_reader.h"/>
  </compounddef>
</doxygen>
