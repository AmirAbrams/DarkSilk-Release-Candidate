<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="issue178__test_8cc" kind="file" language="C++">
    <compoundname>issue178_test.cc</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">cstdlib</includes>
    <includes refid="leveldb_2include_2leveldb_2db_8h" local="yes">leveldb/db.h</includes>
    <includes refid="write__batch_8h" local="yes">leveldb/write_batch.h</includes>
    <includes refid="testharness_8h" local="yes">util/testharness.h</includes>
    <incdepgraph>
      <node id="9013">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="9010" relation="include">
        </childnode>
        <childnode refid="9011" relation="include">
        </childnode>
      </node>
      <node id="9018">
        <label>stdarg.h</label>
      </node>
      <node id="9019">
        <label>util/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="9003" relation="include">
        </childnode>
      </node>
      <node id="9007">
        <label>assert.h</label>
      </node>
      <node id="9012">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="9008" relation="include">
        </childnode>
      </node>
      <node id="9015">
        <label>stdlib.h</label>
      </node>
      <node id="9002">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="9004" relation="include">
        </childnode>
        <childnode refid="9005" relation="include">
        </childnode>
        <childnode refid="9012" relation="include">
        </childnode>
      </node>
      <node id="9010">
        <label>string</label>
      </node>
      <node id="9008">
        <label>stddef.h</label>
      </node>
      <node id="9011">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="9010" relation="include">
        </childnode>
        <childnode refid="9006" relation="include">
        </childnode>
      </node>
      <node id="9009">
        <label>string.h</label>
      </node>
      <node id="9017">
        <label>vector</label>
      </node>
      <node id="9000">
        <label>sstream</label>
      </node>
      <node id="9003">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="9001">
        <label>cstdlib</label>
      </node>
      <node id="8999">
        <label>iostream</label>
      </node>
      <node id="9014">
        <label>util/testharness.h</label>
        <link refid="testharness_8h"/>
        <childnode refid="9004" relation="include">
        </childnode>
        <childnode refid="9015" relation="include">
        </childnode>
        <childnode refid="9000" relation="include">
        </childnode>
        <childnode refid="9016" relation="include">
        </childnode>
        <childnode refid="9006" relation="include">
        </childnode>
        <childnode refid="9019" relation="include">
        </childnode>
      </node>
      <node id="9006">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="9007" relation="include">
        </childnode>
        <childnode refid="9008" relation="include">
        </childnode>
        <childnode refid="9009" relation="include">
        </childnode>
        <childnode refid="9010" relation="include">
        </childnode>
      </node>
      <node id="9016">
        <label>leveldb/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="9010" relation="include">
        </childnode>
        <childnode refid="9017" relation="include">
        </childnode>
        <childnode refid="9018" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="9011" relation="include">
        </childnode>
      </node>
      <node id="9004">
        <label>stdio.h</label>
      </node>
      <node id="9005">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="9006" relation="include">
        </childnode>
        <childnode refid="9011" relation="include">
        </childnode>
      </node>
      <node id="8998">
        <label>/home/dev/ds-160209/src/leveldb/issues/issue178_test.cc</label>
        <link refid="issue178_test.cc"/>
        <childnode refid="8999" relation="include">
        </childnode>
        <childnode refid="9000" relation="include">
        </childnode>
        <childnode refid="9001" relation="include">
        </childnode>
        <childnode refid="9002" relation="include">
        </childnode>
        <childnode refid="9013" relation="include">
        </childnode>
        <childnode refid="9014" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="issue178__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/issues/issue178_test.cc" line="90" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/issues/issue178_test.cc" bodystart="90" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2013-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>issue<sp/>178:<sp/>a<sp/>manual<sp/>compaction<sp/>causes<sp/>deleted<sp/>data<sp/>to<sp/>reappear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="leveldb_2include_2leveldb_2db_8h" kindref="compound">leveldb/db.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="write__batch_8h" kindref="compound">leveldb/write_batch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testharness_8h" kindref="compound">util/testharness.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumKeys<sp/>=<sp/>1100000;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">std::string<sp/>Key1(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[100];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;my_key_%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">std::string<sp/>Key2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Key1(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_xxx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Issue178<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="testharness_8h_1a3c428ed0cddb46f6075333cf640029ec" kindref="member">TEST</ref>(Issue178,<sp/>Test)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>any<sp/>state<sp/>from<sp/>an<sp/>old<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>std::string<sp/>dbpath<sp/>=<sp/><ref refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" kindref="member">leveldb::test::TmpDir</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/leveldb_cbug_test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" kindref="member">DestroyDB</ref>(dbpath,<sp/><ref refid="structleveldb_1_1_options" kindref="compound">leveldb::Options</ref>());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>database.<sp/><sp/>Disable<sp/>compression<sp/>since<sp/>it<sp/>affects<sp/>the<sp/>creation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>layers<sp/>and<sp/>the<sp/>code<sp/>below<sp/>is<sp/>trying<sp/>to<sp/>test<sp/>against<sp/>a<sp/>very</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specific<sp/>scenario.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">leveldb::DB</ref>*<sp/>db;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">leveldb::Options</ref><sp/>db_options;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>db_options.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>db_options.<ref refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" kindref="member">compression</ref><sp/>=<sp/><ref refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" kindref="member">leveldb::kNoCompression</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">leveldb::DB::Open</ref>(db_options,<sp/>dbpath,<sp/>&amp;db));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>first<sp/>key<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">leveldb::WriteBatch</ref><sp/>batch;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kNumKeys;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(Key1(i),<sp/></highlight><highlight class="stringliteral">&quot;value<sp/>for<sp/>range<sp/>1<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(db-&gt;<ref refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" kindref="member">Write</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">leveldb::WriteOptions</ref>(),<sp/>&amp;batch));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>second<sp/>key<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1afd5058344dc9be113919a5110129006f" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kNumKeys;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(Key2(i),<sp/></highlight><highlight class="stringliteral">&quot;value<sp/>for<sp/>range<sp/>2<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(db-&gt;<ref refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" kindref="member">Write</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">leveldb::WriteOptions</ref>(),<sp/>&amp;batch));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>second<sp/>key<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1afd5058344dc9be113919a5110129006f" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kNumKeys;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" kindref="member">Delete</ref>(Key2(i));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(db-&gt;<ref refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" kindref="member">Write</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">leveldb::WriteOptions</ref>(),<sp/>&amp;batch));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compact<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>std::string<sp/>start_key<sp/>=<sp/>Key1(0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::string<sp/>end_key<sp/>=<sp/>Key1(kNumKeys<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">leveldb::Slice</ref><sp/>least(start_key.data(),<sp/>start_key.size());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">leveldb::Slice</ref><sp/>greatest(end_key.data(),<sp/>end_key.size());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>commenting<sp/>out<sp/>the<sp/>line<sp/>below<sp/>causes<sp/>the<sp/>example<sp/>to<sp/>work<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>db-&gt;<ref refid="classleveldb_1_1_d_b_1aeea500cbc6704454b3be6908d5da8b3a" kindref="member">CompactRange</ref>(&amp;least,<sp/>&amp;greatest);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>the<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">leveldb::Iterator</ref>*<sp/>iter<sp/>=<sp/>db-&gt;<ref refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">leveldb::ReadOptions</ref>());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_keys<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>();<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>num_keys++;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(kNumKeys,<sp/>num_keys)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>number<sp/>of<sp/>keys&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>db;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" kindref="member">DestroyDB</ref>(dbpath,<sp/><ref refid="structleveldb_1_1_options" kindref="compound">leveldb::Options</ref>());</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>anonymous<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="issue178__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="issue178__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1test_1a3329162c54a0bff42d41c2ac86b2580a" kindref="member">leveldb::test::RunAllTests</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/issues/issue178_test.cc"/>
  </compounddef>
</doxygen>
