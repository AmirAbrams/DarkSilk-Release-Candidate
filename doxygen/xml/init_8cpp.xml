<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="init_8cpp" kind="file" language="C++">
    <compoundname>init.cpp</compoundname>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="chainparams_8h" local="yes">chainparams.h</includes>
    <includes refid="txdb_8h" local="yes">txdb.h</includes>
    <includes refid="rpcserver_8h" local="yes">rpcserver.h</includes>
    <includes refid="net_8h" local="yes">net.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="key_8h" local="yes">key.h</includes>
    <includes refid="pubkey_8h" local="yes">pubkey.h</includes>
    <includes refid="ui__interface_8h" local="yes">ui_interface.h</includes>
    <includes refid="activestormnode_8h" local="yes">activestormnode.h</includes>
    <includes refid="stormnode-budget_8h" local="yes">stormnode-budget.h</includes>
    <includes refid="stormnode-payments_8h" local="yes">stormnode-payments.h</includes>
    <includes refid="stormnodeman_8h" local="yes">stormnodeman.h</includes>
    <includes refid="spork_8h" local="yes">spork.h</includes>
    <includes refid="stormnodeconfig_8h" local="yes">stormnodeconfig.h</includes>
    <includes refid="smessage_8h" local="yes">smessage.h</includes>
    <includes refid="txdb-leveldb_8h" local="yes">txdb-leveldb.h</includes>
    <includes local="no">boost/algorithm/string/predicate.hpp</includes>
    <includes local="no">boost/algorithm/string/replace.hpp</includes>
    <includes local="no">boost/bind.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">boost/interprocess/sync/file_lock.hpp</includes>
    <includes local="no">boost/thread.hpp</includes>
    <includes local="no">openssl/crypto.h</includes>
    <includes local="no">signal.h</includes>
    <incdepgraph>
      <node id="34760">
        <label>list</label>
      </node>
      <node id="34729">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="34864">
        <label>boost/interprocess/sync/file_lock.hpp</label>
      </node>
      <node id="34794">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34792" relation="include">
        </childnode>
      </node>
      <node id="34808">
        <label>netinet/in.h</label>
      </node>
      <node id="34712">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34727" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
      </node>
      <node id="34801">
        <label>arpa/inet.h</label>
      </node>
      <node id="34778">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="34839">
        <label>iomanip</label>
      </node>
      <node id="34831">
        <label>boost/version.hpp</label>
      </node>
      <node id="34827">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="34719">
        <label>limits</label>
      </node>
      <node id="34708">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="34747">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34727" relation="include">
        </childnode>
      </node>
      <node id="34850">
        <label>stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="34709" relation="include">
        </childnode>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34797" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34851" relation="include">
        </childnode>
        <childnode refid="34852" relation="include">
        </childnode>
        <childnode refid="34853" relation="include">
        </childnode>
        <childnode refid="34708" relation="include">
        </childnode>
      </node>
      <node id="34748">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="34749" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34731" relation="include">
        </childnode>
      </node>
      <node id="34711">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="34712" relation="include">
        </childnode>
        <childnode refid="34735" relation="include">
        </childnode>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34738" relation="include">
        </childnode>
        <childnode refid="34739" relation="include">
        </childnode>
        <childnode refid="34775" relation="include">
        </childnode>
        <childnode refid="34773" relation="include">
        </childnode>
      </node>
      <node id="34739">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34740" relation="include">
        </childnode>
        <childnode refid="34741" relation="include">
        </childnode>
        <childnode refid="34742" relation="include">
        </childnode>
        <childnode refid="34751" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34772" relation="include">
        </childnode>
      </node>
      <node id="34771">
        <label>openssl/rand.h</label>
      </node>
      <node id="34845">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="34846" relation="include">
        </childnode>
        <childnode refid="34848" relation="include">
        </childnode>
        <childnode refid="34772" relation="include">
        </childnode>
        <childnode refid="34712" relation="include">
        </childnode>
        <childnode refid="34760" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34761" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34832">
        <label>boost/spirit/core.hpp</label>
      </node>
      <node id="34736">
        <label>assert.h</label>
      </node>
      <node id="34724">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="34807">
        <label>net/if.h</label>
      </node>
      <node id="34857">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34843" relation="include">
        </childnode>
        <childnode refid="34855" relation="include">
        </childnode>
      </node>
      <node id="34710">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="34711" relation="include">
        </childnode>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34781" relation="include">
        </childnode>
        <childnode refid="34712" relation="include">
        </childnode>
        <childnode refid="34796" relation="include">
        </childnode>
      </node>
      <node id="34853">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="34793">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="34749" relation="include">
        </childnode>
      </node>
      <node id="34780">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="34851">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="34813" relation="include">
        </childnode>
        <childnode refid="34742" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34739" relation="include">
        </childnode>
        <childnode refid="34725" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34733">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="34734" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
      </node>
      <node id="34860">
        <label>lz4/lz4.h</label>
        <link refid="lz4_8h"/>
      </node>
      <node id="34781">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="34782" relation="include">
        </childnode>
        <childnode refid="34710" relation="include">
        </childnode>
        <childnode refid="34736" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34740" relation="include">
        </childnode>
        <childnode refid="34795" relation="include">
        </childnode>
      </node>
      <node id="34730">
        <label>sys/mman.h</label>
      </node>
      <node id="34727">
        <label>stdlib.h</label>
      </node>
      <node id="34815">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34813" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34740" relation="include">
        </childnode>
      </node>
      <node id="34859">
        <label>smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="34789" relation="include">
        </childnode>
        <childnode refid="34794" relation="include">
        </childnode>
        <childnode refid="34797" relation="include">
        </childnode>
        <childnode refid="34846" relation="include">
        </childnode>
        <childnode refid="34844" relation="include">
        </childnode>
        <childnode refid="34851" relation="include">
        </childnode>
        <childnode refid="34860" relation="include">
        </childnode>
      </node>
      <node id="34740">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="34770">
        <label>openssl/crypto.h</label>
      </node>
      <node id="34828">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="34714" relation="include">
        </childnode>
      </node>
      <node id="34854">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34709" relation="include">
        </childnode>
        <childnode refid="34852" relation="include">
        </childnode>
        <childnode refid="34853" relation="include">
        </childnode>
      </node>
      <node id="34836">
        <label>boost/spirit/iterator/position_iterator.hpp</label>
      </node>
      <node id="34804">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="34805" relation="include">
        </childnode>
        <childnode refid="34730" relation="include">
        </childnode>
        <childnode refid="34806" relation="include">
        </childnode>
        <childnode refid="34754" relation="include">
        </childnode>
        <childnode refid="34807" relation="include">
        </childnode>
        <childnode refid="34808" relation="include">
        </childnode>
        <childnode refid="34801" relation="include">
        </childnode>
        <childnode refid="34809" relation="include">
        </childnode>
        <childnode refid="34731" relation="include">
        </childnode>
        <childnode refid="34810" relation="include">
        </childnode>
        <childnode refid="34732" relation="include">
        </childnode>
        <childnode refid="34811" relation="include">
        </childnode>
      </node>
      <node id="34766">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="34744">
        <label>openssl/sha.h</label>
      </node>
      <node id="34811">
        <label>errno.h</label>
      </node>
      <node id="34718">
        <label>cassert</label>
      </node>
      <node id="34737">
        <label>stdexcept</label>
      </node>
      <node id="34753">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="34754" relation="include">
        </childnode>
        <childnode refid="34755" relation="include">
        </childnode>
        <childnode refid="34756" relation="include">
        </childnode>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34757" relation="include">
        </childnode>
        <childnode refid="34712" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34760" relation="include">
        </childnode>
        <childnode refid="34761" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34762" relation="include">
        </childnode>
        <childnode refid="34763" relation="include">
        </childnode>
        <childnode refid="34764" relation="include">
        </childnode>
        <childnode refid="34765" relation="include">
        </childnode>
        <childnode refid="34766" relation="include">
        </childnode>
        <childnode refid="34767" relation="include">
        </childnode>
        <childnode refid="34768" relation="include">
        </childnode>
        <childnode refid="34769" relation="include">
        </childnode>
        <childnode refid="34770" relation="include">
        </childnode>
        <childnode refid="34771" relation="include">
        </childnode>
        <childnode refid="34752" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
      </node>
      <node id="34812">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="34813" relation="include">
        </childnode>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34803" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
      </node>
      <node id="34837">
        <label>json/json_spirit_utils.h</label>
        <link refid="json__spirit__utils_8h"/>
        <childnode refid="34825" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
      </node>
      <node id="34765">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="34789">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34773" relation="include">
        </childnode>
        <childnode refid="34790" relation="include">
        </childnode>
        <childnode refid="34793" relation="include">
        </childnode>
      </node>
      <node id="34714">
        <label>string</label>
      </node>
      <node id="34844">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="34845" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34727" relation="include">
        </childnode>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34711" relation="include">
        </childnode>
        <childnode refid="34849" relation="include">
        </childnode>
        <childnode refid="34709" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34848" relation="include">
        </childnode>
        <childnode refid="34739" relation="include">
        </childnode>
        <childnode refid="34841" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34772" relation="include">
        </childnode>
      </node>
      <node id="34817">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34727" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34797" relation="include">
        </childnode>
      </node>
      <node id="34716">
        <label>map</label>
      </node>
      <node id="34821">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="34762">
        <label>boost/thread.hpp</label>
      </node>
      <node id="34814">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="34803" relation="include">
        </childnode>
        <childnode refid="34812" relation="include">
        </childnode>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34775" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34852">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34797" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34851" relation="include">
        </childnode>
        <childnode refid="34709" relation="include">
        </childnode>
        <childnode refid="34775" relation="include">
        </childnode>
      </node>
      <node id="34824">
        <label>json/json_spirit_reader_template.h</label>
        <link refid="json__spirit__reader__template_8h"/>
        <childnode refid="34825" relation="include">
        </childnode>
        <childnode refid="34828" relation="include">
        </childnode>
        <childnode refid="34829" relation="include">
        </childnode>
        <childnode refid="34830" relation="include">
        </childnode>
        <childnode refid="34831" relation="include">
        </childnode>
        <childnode refid="34832" relation="include">
        </childnode>
        <childnode refid="34833" relation="include">
        </childnode>
        <childnode refid="34834" relation="include">
        </childnode>
        <childnode refid="34835" relation="include">
        </childnode>
        <childnode refid="34836" relation="include">
        </childnode>
      </node>
      <node id="34841">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="34712" relation="include">
        </childnode>
        <childnode refid="34842" relation="include">
        </childnode>
        <childnode refid="34800" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
      </node>
      <node id="34785">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34786" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34764" relation="include">
        </childnode>
        <childnode refid="34789" relation="include">
        </childnode>
        <childnode refid="34794" relation="include">
        </childnode>
      </node>
      <node id="34749">
        <label>stddef.h</label>
      </node>
      <node id="34741">
        <label>boost/variant.hpp</label>
      </node>
      <node id="34820">
        <label>boost/iostreams/concepts.hpp</label>
      </node>
      <node id="34810">
        <label>netdb.h</label>
      </node>
      <node id="34805">
        <label>sys/fcntl.h</label>
      </node>
      <node id="34782">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="34783" relation="include">
        </childnode>
      </node>
      <node id="34792">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34791" relation="include">
        </childnode>
      </node>
      <node id="34796">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="34862">
        <label>boost/algorithm/string/predicate.hpp</label>
      </node>
      <node id="34830">
        <label>boost/function.hpp</label>
      </node>
      <node id="34713">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34717" relation="include">
        </childnode>
        <childnode refid="34718" relation="include">
        </childnode>
        <childnode refid="34719" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34721" relation="include">
        </childnode>
        <childnode refid="34722" relation="include">
        </childnode>
        <childnode refid="34723" relation="include">
        </childnode>
        <childnode refid="34724" relation="include">
        </childnode>
        <childnode refid="34725" relation="include">
        </childnode>
        <childnode refid="34733" relation="include">
        </childnode>
      </node>
      <node id="34731">
        <label>limits.h</label>
      </node>
      <node id="34777">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="34802">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="34717" relation="include">
        </childnode>
        <childnode refid="34798" relation="include">
        </childnode>
      </node>
      <node id="34756">
        <label>sys/resource.h</label>
      </node>
      <node id="34767">
        <label>openssl/bio.h</label>
      </node>
      <node id="34849">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="34725" relation="include">
        </childnode>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34848" relation="include">
        </childnode>
      </node>
      <node id="34800">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="34803">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34804" relation="include">
        </childnode>
      </node>
      <node id="34848">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34742" relation="include">
        </childnode>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34739" relation="include">
        </childnode>
        <childnode refid="34800" relation="include">
        </childnode>
        <childnode refid="34741" relation="include">
        </childnode>
      </node>
      <node id="34822">
        <label>boost/asio.hpp</label>
      </node>
      <node id="34823">
        <label>boost/asio/ssl.hpp</label>
      </node>
      <node id="34743">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="34735" relation="include">
        </childnode>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34744" relation="include">
        </childnode>
        <childnode refid="34745" relation="include">
        </childnode>
        <childnode refid="34746" relation="include">
        </childnode>
        <childnode refid="34747" relation="include">
        </childnode>
        <childnode refid="34748" relation="include">
        </childnode>
        <childnode refid="34750" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34809">
        <label>ifaddrs.h</label>
      </node>
      <node id="34772">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34727" relation="include">
        </childnode>
        <childnode refid="34773" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34774" relation="include">
        </childnode>
      </node>
      <node id="34754">
        <label>sys/types.h</label>
      </node>
      <node id="34788">
        <label>ios</label>
      </node>
      <node id="34728">
        <label>string.h</label>
      </node>
      <node id="34734">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="34722">
        <label>cstdio</label>
      </node>
      <node id="34779">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="34769">
        <label>openssl/buffer.h</label>
      </node>
      <node id="34723">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="34709">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="34710" relation="include">
        </childnode>
        <childnode refid="34797" relation="include">
        </childnode>
        <childnode refid="34739" relation="include">
        </childnode>
        <childnode refid="34786" relation="include">
        </childnode>
        <childnode refid="34784" relation="include">
        </childnode>
        <childnode refid="34815" relation="include">
        </childnode>
        <childnode refid="34760" relation="include">
        </childnode>
        <childnode refid="34795" relation="include">
        </childnode>
      </node>
      <node id="34764">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="34855">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34797" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34851" relation="include">
        </childnode>
        <childnode refid="34709" relation="include">
        </childnode>
        <childnode refid="34852" relation="include">
        </childnode>
      </node>
      <node id="34795">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="34742">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="34743" relation="include">
        </childnode>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34735" relation="include">
        </childnode>
        <childnode refid="34737" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34732">
        <label>unistd.h</label>
      </node>
      <node id="34847">
        <label>db_cxx.h</label>
      </node>
      <node id="34715">
        <label>vector</label>
      </node>
      <node id="34751">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34735" relation="include">
        </childnode>
        <childnode refid="34752" relation="include">
        </childnode>
        <childnode refid="34737" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
      </node>
      <node id="34819">
        <label>rpcprotocol.h</label>
        <link refid="rpcprotocol_8h"/>
        <childnode refid="34804" relation="include">
        </childnode>
        <childnode refid="34760" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34821" relation="include">
        </childnode>
        <childnode refid="34822" relation="include">
        </childnode>
        <childnode refid="34823" relation="include">
        </childnode>
        <childnode refid="34824" relation="include">
        </childnode>
        <childnode refid="34837" relation="include">
        </childnode>
        <childnode refid="34838" relation="include">
        </childnode>
      </node>
      <node id="34797">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="34798" relation="include">
        </childnode>
        <childnode refid="34799" relation="include">
        </childnode>
        <childnode refid="34740" relation="include">
        </childnode>
        <childnode refid="34800" relation="include">
        </childnode>
        <childnode refid="34771" relation="include">
        </childnode>
        <childnode refid="34801" relation="include">
        </childnode>
        <childnode refid="34802" relation="include">
        </childnode>
        <childnode refid="34803" relation="include">
        </childnode>
        <childnode refid="34812" relation="include">
        </childnode>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34743" relation="include">
        </childnode>
        <childnode refid="34786" relation="include">
        </childnode>
      </node>
      <node id="34865">
        <label>signal.h</label>
      </node>
      <node id="34838">
        <label>json/json_spirit_writer_template.h</label>
        <link refid="json__spirit__writer__template_8h"/>
        <childnode refid="34825" relation="include">
        </childnode>
        <childnode refid="34718" relation="include">
        </childnode>
        <childnode refid="34759" relation="include">
        </childnode>
        <childnode refid="34839" relation="include">
        </childnode>
      </node>
      <node id="34745">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="34763">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="34834">
        <label>boost/spirit/utility/escape_char.hpp</label>
      </node>
      <node id="34761">
        <label>utility</label>
      </node>
      <node id="34783">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="34711" relation="include">
        </childnode>
        <childnode refid="34784" relation="include">
        </childnode>
      </node>
      <node id="34759">
        <label>sstream</label>
      </node>
      <node id="34842">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="34861">
        <label>txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="34709" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34789" relation="include">
        </childnode>
        <childnode refid="34794" relation="include">
        </childnode>
        <childnode refid="34786" relation="include">
        </childnode>
      </node>
      <node id="34840">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="34725" relation="include">
        </childnode>
        <childnode refid="34742" relation="include">
        </childnode>
        <childnode refid="34737" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34768">
        <label>openssl/evp.h</label>
      </node>
      <node id="34757">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="34718" relation="include">
        </childnode>
        <childnode refid="34758" relation="include">
        </childnode>
        <childnode refid="34759" relation="include">
        </childnode>
        <childnode refid="34737" relation="include">
        </childnode>
      </node>
      <node id="34720">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="34707">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init.cpp"/>
        <childnode refid="34708" relation="include">
        </childnode>
        <childnode refid="34709" relation="include">
        </childnode>
        <childnode refid="34813" relation="include">
        </childnode>
        <childnode refid="34784" relation="include">
        </childnode>
        <childnode refid="34818" relation="include">
        </childnode>
        <childnode refid="34797" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34742" relation="include">
        </childnode>
        <childnode refid="34841" relation="include">
        </childnode>
        <childnode refid="34843" relation="include">
        </childnode>
        <childnode refid="34850" relation="include">
        </childnode>
        <childnode refid="34854" relation="include">
        </childnode>
        <childnode refid="34855" relation="include">
        </childnode>
        <childnode refid="34856" relation="include">
        </childnode>
        <childnode refid="34858" relation="include">
        </childnode>
        <childnode refid="34859" relation="include">
        </childnode>
        <childnode refid="34861" relation="include">
        </childnode>
        <childnode refid="34862" relation="include">
        </childnode>
        <childnode refid="34863" relation="include">
        </childnode>
        <childnode refid="34829" relation="include">
        </childnode>
        <childnode refid="34763" relation="include">
        </childnode>
        <childnode refid="34864" relation="include">
        </childnode>
        <childnode refid="34762" relation="include">
        </childnode>
        <childnode refid="34770" relation="include">
        </childnode>
        <childnode refid="34865" relation="include">
        </childnode>
      </node>
      <node id="34846">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34786" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34764" relation="include">
        </childnode>
        <childnode refid="34847" relation="include">
        </childnode>
      </node>
      <node id="34786">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="34725" relation="include">
        </childnode>
        <childnode refid="34713" relation="include">
        </childnode>
        <childnode refid="34787" relation="include">
        </childnode>
        <childnode refid="34736" relation="include">
        </childnode>
        <childnode refid="34788" relation="include">
        </childnode>
        <childnode refid="34719" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34717" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34728" relation="include">
        </childnode>
        <childnode refid="34761" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34750">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34749" relation="include">
        </childnode>
        <childnode refid="34731" relation="include">
        </childnode>
      </node>
      <node id="34856">
        <label>spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="34751" relation="include">
        </childnode>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34797" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34753" relation="include">
        </childnode>
        <childnode refid="34739" relation="include">
        </childnode>
        <childnode refid="34851" relation="include">
        </childnode>
        <childnode refid="34709" relation="include">
        </childnode>
        <childnode refid="34812" relation="include">
        </childnode>
        <childnode refid="34857" relation="include">
        </childnode>
        <childnode refid="34853" relation="include">
        </childnode>
      </node>
      <node id="34755">
        <label>sys/time.h</label>
      </node>
      <node id="34758">
        <label>iostream</label>
      </node>
      <node id="34818">
        <label>rpcserver.h</label>
        <link refid="rpcserver_8h"/>
        <childnode refid="34712" relation="include">
        </childnode>
        <childnode refid="34735" relation="include">
        </childnode>
        <childnode refid="34819" relation="include">
        </childnode>
        <childnode refid="34760" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
      </node>
      <node id="34858">
        <label>stormnodeconfig.h</label>
        <link refid="stormnodeconfig_8h"/>
      </node>
      <node id="34798">
        <label>deque</label>
      </node>
      <node id="34735">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="34736" relation="include">
        </childnode>
        <childnode refid="34721" relation="include">
        </childnode>
        <childnode refid="34737" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34829">
        <label>boost/bind.hpp</label>
      </node>
      <node id="34826">
        <label>boost/config.hpp</label>
      </node>
      <node id="34806">
        <label>sys/socket.h</label>
      </node>
      <node id="34791">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="34736" relation="include">
        </childnode>
        <childnode refid="34749" relation="include">
        </childnode>
        <childnode refid="34728" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
      </node>
      <node id="34825">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="34715" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34718" relation="include">
        </childnode>
        <childnode refid="34759" relation="include">
        </childnode>
        <childnode refid="34737" relation="include">
        </childnode>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34826" relation="include">
        </childnode>
        <childnode refid="34827" relation="include">
        </childnode>
        <childnode refid="34741" relation="include">
        </childnode>
      </node>
      <node id="34799">
        <label>boost/array.hpp</label>
      </node>
      <node id="34752">
        <label>openssl/bn.h</label>
      </node>
      <node id="34784">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="34785" relation="include">
        </childnode>
        <childnode refid="34709" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34761" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34775">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="34720" relation="include">
        </childnode>
      </node>
      <node id="34725">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="34726" relation="include">
        </childnode>
        <childnode refid="34728" relation="include">
        </childnode>
        <childnode refid="34714" relation="include">
        </childnode>
        <childnode refid="34729" relation="include">
        </childnode>
        <childnode refid="34716" relation="include">
        </childnode>
        <childnode refid="34730" relation="include">
        </childnode>
        <childnode refid="34731" relation="include">
        </childnode>
        <childnode refid="34732" relation="include">
        </childnode>
      </node>
      <node id="34835">
        <label>boost/spirit/iterator/multi_pass.hpp</label>
      </node>
      <node id="34813">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="34751" relation="include">
        </childnode>
        <childnode refid="34735" relation="include">
        </childnode>
        <childnode refid="34715" relation="include">
        </childnode>
      </node>
      <node id="34717">
        <label>set</label>
      </node>
      <node id="34787">
        <label>algorithm</label>
      </node>
      <node id="34863">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="34843">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="34776" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34844" relation="include">
        </childnode>
      </node>
      <node id="34746">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="34720" relation="include">
        </childnode>
        <childnode refid="34727" relation="include">
        </childnode>
      </node>
      <node id="34738">
        <label>util.h</label>
      </node>
      <node id="34773">
        <label>stdio.h</label>
      </node>
      <node id="34726">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="34727" relation="include">
        </childnode>
      </node>
      <node id="34721">
        <label>cstring</label>
      </node>
      <node id="34776">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="34777" relation="include">
        </childnode>
        <childnode refid="34778" relation="include">
        </childnode>
        <childnode refid="34779" relation="include">
        </childnode>
        <childnode refid="34729" relation="include">
        </childnode>
        <childnode refid="34780" relation="include">
        </childnode>
      </node>
      <node id="34774">
        <label>inttypes.h</label>
      </node>
      <node id="34790">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="34791" relation="include">
        </childnode>
        <childnode refid="34792" relation="include">
        </childnode>
      </node>
      <node id="34833">
        <label>boost/spirit/utility/confix.hpp</label>
      </node>
      <node id="34816">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="34711" relation="include">
        </childnode>
        <childnode refid="34750" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_c_coins_view_error_catcher" prot="public">CCoinsViewErrorCatcher</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_client_u_i_interface" kindref="compound">CClientUIInterface</ref></type>
        <definition>CClientUIInterface uiInterface</definition>
        <argsstring></argsstring>
        <name>uiInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="52" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_c_alert_1af3e6b2e5d3584f58c5d7be9dbd72b4cc" compoundref="alert_8cpp" startline="174" endline="263">CAlert::ProcessAlert</referencedby>
        <referencedby refid="main_8h_1af573b79d097a9ffe6503869f838ccf42" compoundref="main_8cpp" startline="478" endline="486">AbortNode</referencedby>
        <referencedby refid="main_8h_1a6df609da0bad1550cbb2cdc781ad2904" compoundref="main_8cpp" startline="2024" endline="2039">CheckDiskSpace</referencedby>
        <referencedby refid="net_8cpp_1aa1111c12121e039bbd8eedb556e4514a" compoundref="net_8cpp" startline="754" endline="1131">ThreadSocketHandler</referencedby>
        <referencedby refid="noui_8cpp_1ad4eab1820a36fab7debaa999ca082f9d" compoundref="noui_8cpp" startline="45" endline="51">noui_connect</referencedby>
        <referencedby refid="darksilk_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilk_8cpp" startline="128" endline="350">main</referencedby>
        <referencedby refid="class_wallet_model_1a497418d4a8566b881bab45dec7ad8fd8" compoundref="walletmodel_8cpp" startline="213" endline="488">WalletModel::sendCoins</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="timedata_8h_1ad8af089fc8835e11c7d77f6b473fccae" compoundref="timedata_8cpp" startline="40" endline="111">AddTimeData</referencedby>
        <referencedby refid="class_c_wallet_1a509492fe45395af29a4a16045686c239" compoundref="wallet_8cpp" startline="3347" endline="3383">CWallet::SendStealthMoney</referencedby>
        <referencedby refid="class_c_wallet_1aeeeca131336b2ec20cede9a2fccc203a" compoundref="wallet_8cpp" startline="4331" endline="4363">CWallet::TopUpKeyPool</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1aacdc0cc923bcbbe612f7975b56e05d18" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fConfChange</definition>
        <argsstring></argsstring>
        <name>fConfChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="53" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="53" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" compoundref="wallet_8h" startline="1022" endline="1051">CWalletTx::IsTrusted</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1afdd10e8c0a44aad0b719c365fa3bb458" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nNodeLifespan</definition>
        <argsstring></argsstring>
        <name>nNodeLifespan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="54" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="54" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1a3e3a4daba510b75f09387695c6c8a11f" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nDerivationMethodIndex</definition>
        <argsstring></argsstring>
        <name>nDerivationMethodIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="55" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="55" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_wallet_1ab34fe5bf771619dcbe22a65f013e5469" compoundref="wallet_8cpp" startline="479" endline="596">CWallet::EncryptWallet</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1abb57d52de7c99ac76f7020624a7565fd" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nMinerSleep</definition>
        <argsstring></argsstring>
        <name>nMinerSleep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="56" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="56" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="miner_8cpp_1a31faece5ef0e403969b3d3debd79b352" compoundref="miner_8cpp" startline="536" endline="591">ThreadStakeMiner</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1ad316d89326f17948a58ad3cdf23850a5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fUseFastIndex</definition>
        <argsstring></argsstring>
        <name>fUseFastIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="57" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="57" bodyend="-1"/>
        <referencedby refid="class_c_disk_block_index_1adbe404c55c68be782360b4594d355fad" compoundref="chain_8h" startline="391" endline="407">CDiskBlockIndex::GetBlockHash</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1a43c1918fef61f5c3105f03f9b190717e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fOnlyTor</definition>
        <argsstring></argsstring>
        <name>fOnlyTor</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="58" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="58" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_dark_silk_g_u_i_1a671bf7d03e729b88040ede8ae3a86ac5" compoundref="darksilkgui_8cpp" startline="570" endline="647">DarkSilkGUI::setClientModel</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1ad32c5d94e1b12cb49fc73deca3f3068f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fMinimizeCoinAge</definition>
        <argsstring></argsstring>
        <name>fMinimizeCoinAge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="59" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="59" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1a6e1f612c12531e241e96cc04ffaebfd4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fFeeEstimatesInitialized</definition>
        <argsstring></argsstring>
        <name>fFeeEstimatesInitialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="61" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="61" bodyend="-1"/>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1aaa861c3cc03fcc79d42105ae8bab6837" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* FEE_ESTIMATES_FILENAME</definition>
        <argsstring></argsstring>
        <name>FEE_ESTIMATES_FILENAME</name>
        <initializer>=&quot;fee_estimates.dat&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="63" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool fRequestShutdown</definition>
        <argsstring></argsstring>
        <name>fRequestShutdown</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="95" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="95" bodyend="-1"/>
        <referencedby refid="init_8h_1ac7140c7327b1e6a8d46470b1cd0e8e1b" compoundref="init_8cpp" startline="121" endline="124">StartShutdown</referencedby>
        <referencedby refid="init_8h_1a6f201ca9fe6b594f1985c12b4482ea5a" compoundref="init_8cpp" startline="125" endline="128">ShutdownRequested</referencedby>
        <referencedby refid="init_8cpp_1ad59c5cbbe3bdf4fa36f3b7480da8d6ba" compoundref="init_8cpp" startline="199" endline="202">HandleSIGTERM</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1a6bfd81994d7eb439873021f25d4d7949" prot="public" static="yes" mutable="no">
        <type>boost::scoped_ptr&lt; <ref refid="class_e_c_c_verify_handle" kindref="compound">ECCVerifyHandle</ref> &gt;</type>
        <definition>boost::scoped_ptr&lt;ECCVerifyHandle&gt; globalVerifyHandle</definition>
        <argsstring></argsstring>
        <name>globalVerifyHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="96" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1a1fa98bf3c123612093fcb5321d6a47fb" prot="public" static="yes" mutable="no">
        <type><ref refid="class_c_coins_view_d_b" kindref="compound">CCoinsViewDB</ref> *</type>
        <definition>CCoinsViewDB* pcoinsdbview</definition>
        <argsstring></argsstring>
        <name>pcoinsdbview</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="118" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1ada9880e5650247956ce93bfc37ca9d8a" prot="public" static="yes" mutable="no">
        <type><ref refid="class_c_coins_view_error_catcher" kindref="compound">CCoinsViewErrorCatcher</ref> *</type>
        <definition>CCoinsViewErrorCatcher* pcoinscatcher</definition>
        <argsstring></argsstring>
        <name>pcoinscatcher</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="119" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="init_8cpp_1ac7140c7327b1e6a8d46470b1cd0e8e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StartShutdown</definition>
        <argsstring>()</argsstring>
        <name>StartShutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="121" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="121" bodyend="124"/>
        <references refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" compoundref="init_8cpp" startline="95">fRequestShutdown</references>
        <referencedby refid="main_8h_1af573b79d097a9ffe6503869f838ccf42" compoundref="main_8cpp" startline="478" endline="486">AbortNode</referencedby>
        <referencedby refid="main_8h_1a6df609da0bad1550cbb2cdc781ad2904" compoundref="main_8cpp" startline="2024" endline="2039">CheckDiskSpace</referencedby>
        <referencedby refid="rpcserver_8cpp_1a7ed4eb27f00f40cee8c15108916e8d71" compoundref="rpcserver_8cpp" startline="201" endline="211">stop</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a5fb49bac2748015a256c63e9f8ccc539" compoundref="rpcwallet_8cpp" startline="2110" endline="2160">encryptwallet</referencedby>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1a6f201ca9fe6b594f1985c12b4482ea5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ShutdownRequested</definition>
        <argsstring>()</argsstring>
        <name>ShutdownRequested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="125" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="125" bodyend="128"/>
        <references refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" compoundref="init_8cpp" startline="95">fRequestShutdown</references>
        <referencedby refid="darksilkd_8cpp_1ab68baad9d16aab4c1dcdda691a8bf18f" compoundref="darksilkd_8cpp" startline="14" endline="28">DetectShutdownThread</referencedby>
        <referencedby refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" compoundref="stormnode_8cpp" startline="178" endline="226">CStormnode::Check</referencedby>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shutdown</definition>
        <argsstring>()</argsstring>
        <name>Shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="130" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="130" bodyend="194"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" compoundref="sync_8h" startline="161">TRY_LOCK</references>
        <references refid="util_8cpp_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" compoundref="util_8cpp" startline="1441" endline="1463">RenameThread</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_tx_mem_pool_1a3039b67e5eebaa3ff830261c192816f2" compoundref="txmempool_8cpp" startline="39" endline="43">CTxMemPool::AddTransactionsUpdated</references>
        <references refid="rpcserver_8cpp_1af5be6ec7b71359ed4111f1a5ed93b893" compoundref="rpcserver_8cpp" startline="636" endline="647">StopRPCThreads</references>
        <references refid="smessage_8cpp_1a49c8b6520e51ba498f92accf33eb6c17" compoundref="smessage_8cpp" startline="1144" endline="1168">SecureMsgShutdown</references>
        <references refid="rpcmining_8cpp_1ae7370e6af93e26e0c967cda6a63fe3a9" compoundref="rpcmining_8cpp" startline="38" endline="44">ShutdownRPCMining</references>
        <references refid="db_8cpp_1a0e3d95be19da4a302447fa44703b1979" compoundref="db_8cpp" startline="32">bitdb</references>
        <references refid="class_c_d_b_env_1a09c5850b88919553a8db416ce288ff1a" compoundref="db_8cpp" startline="428" endline="470">CDBEnv::Flush</references>
        <references refid="net_8cpp_1ac9110488f45c160d58f3c7ab7197bcea" compoundref="net_8cpp" startline="1901" endline="1911">StopNode</references>
        <references refid="stormnodeman_8cpp_1ab4bfbf67ff3a5463457d04b68610e18b" compoundref="stormnodeman_8cpp" startline="178" endline="205">DumpStormnodes</references>
        <references refid="stormnode-budget_8cpp_1a277f8d83f6cfcfbe4ee3f622d38f8790" compoundref="stormnode-budget_8cpp" startline="335" endline="362">DumpBudgets</references>
        <references refid="stormnode-payments_8cpp_1ae992438141f991b3ca132d11da230d1a" compoundref="stormnode-payments_8cpp" startline="156" endline="183">DumpStormnodePayments</references>
        <references refid="main_8cpp_1a3ef0cc6e9d9d6435ee2a5569244d6ebd" compoundref="main_8cpp" startline="469" endline="476">UnregisterNodeSignals</references>
        <references refid="net_8cpp_1a475f2fc7d8f5cd7511db253cae8fe28a" compoundref="net_8cpp" startline="91" endline="91">GetNodeSignals</references>
        <references refid="init_8cpp_1a6e1f612c12531e241e96cc04ffaebfd4" compoundref="init_8cpp" startline="61">fFeeEstimatesInitialized</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" compoundref="serialize_8h" startline="90">SER_DISK</references>
        <references refid="class_c_auto_file_1a78d666b1ef5dff5fd3f4ee33692b6d1d" compoundref="streams_8h" startline="344" endline="344">CAutoFile::IsNull</references>
        <references refid="class_c_tx_mem_pool_1a0a05d7b50b9c2a387182402e60475da6" compoundref="txmempool_8cpp" startline="126" endline="139">CTxMemPool::WriteFeeEstimates</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" compoundref="main_8cpp" startline="44">cs_main</references>
        <references refid="main_8cpp_1a1821834b8f7837b469f7f91a14c20042" compoundref="main_8cpp" startline="110">pcoinsTip</references>
        <references refid="main_8cpp_1a0023503503c358eda0c97a576ef53fde" compoundref="main_8cpp" startline="111">pblocktree</references>
        <references refid="main_8cpp_1a0d01c135cc5a05475e3dc3910c9888da" compoundref="main_8cpp" startline="4120" endline="4123">FlushStateToDisk</references>
        <references refid="class_c_wallet_1a1697a92171b4359f49b38aed643cf92b" compoundref="wallet_8cpp" startline="335" endline="339">CWallet::SetBestChain</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="util_8cpp_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" compoundref="util_8cpp" startline="1245" endline="1250">GetPidFile</references>
        <references refid="main_8cpp_1ad0b02f9e3ff8997319581ce5021d4244" compoundref="main_8cpp" startline="241" endline="248">UnregisterAllWallets</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="darksilk_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilk_8cpp" startline="128" endline="350">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1ad59c5cbbe3bdf4fa36f3b7480da8d6ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HandleSIGTERM</definition>
        <argsstring>(int)</argsstring>
        <name>HandleSIGTERM</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="199" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="199" bodyend="202"/>
        <references refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" compoundref="init_8cpp" startline="95">fRequestShutdown</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1a70b23efd8d46bc8c627e5c241f0d7716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HandleSIGHUP</definition>
        <argsstring>(int)</argsstring>
        <name>HandleSIGHUP</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="204" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="204" bodyend="207"/>
        <references refid="util_8cpp_1aad5e5c200c78bd5bdec18c8707e63822" compoundref="util_8cpp" startline="107">fReopenDebugLog</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1ac9735d5270989ff15eecbb44c26e85da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool InitError</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>InitError</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="209" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="209" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1a5d35afe2cdd83042e024232e07e7045e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool InitWarning</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>InitWarning</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="215" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="215" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1a9a9b0573392f737da5951ceef838bb49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bind</definition>
        <argsstring>(const CService &amp;addr, bool fError=true)</argsstring>
        <name>Bind</name>
        <param>
          <type>const <ref refid="class_c_service" kindref="compound">CService</ref> &amp;</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fError</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="230" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="230" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1a60c54061faf43bd9cca8ab8bfa38055a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string HelpMessage</definition>
        <argsstring>()</argsstring>
        <name>HelpMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="243" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="243" bodyend="353"/>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" compoundref="util_8cpp" startline="89">fEnableSandstorm</references>
        <references refid="util_8cpp_1aa6e1d8c03f1d46e89708f9c282181c47" compoundref="util_8cpp" startline="92">fSandstormMultiSession</references>
        <references refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" compoundref="util_8cpp" startline="82">nSandstormRounds</references>
        <references refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" compoundref="util_8cpp" startline="83">nAnonymizeDarkSilkAmount</references>
        <references refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" compoundref="util_8cpp" startline="84">nLiquidityProvider</references>
        <references refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" compoundref="util_8cpp" startline="81">nInstantXDepth</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="class_g_u_i_util_1_1_help_message_box_1af8c3ad315224552b1699ac34c7ebd839" compoundref="guiutil_8cpp" startline="425" endline="445">GUIUtil::HelpMessageBox::HelpMessageBox</referencedby>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1a878797b40fb8eb0d7f330a41d7742d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InitSanityCheck</definition>
        <argsstring>(void)</argsstring>
        <name>InitSanityCheck</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sanity checks Ensure that DarkSilk is running in a usable environment with all necessary library support. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="359" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="359" bodyend="370"/>
        <references refid="key_8cpp_1adc8d142f5bcd2ca6646462fb45a7945d" compoundref="key_8cpp" startline="313" endline="318">ECC_InitSanityCheck</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="init_8cpp_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AppInit2</definition>
        <argsstring>(boost::thread_group &amp;threadGroup)</argsstring>
        <name>AppInit2</name>
        <param>
          <type>boost::thread_group &amp;</type>
          <declname>threadGroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize darksilk. <simplesect kind="pre"><para>Parameters should be parsed and config file should be read. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/init.cpp" line="375" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="375" bodyend="1285"/>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" compoundref="util_8cpp" startline="550" endline="559">GetBoolArg</references>
        <references refid="init_8cpp_1ad59c5cbbe3bdf4fa36f3b7480da8d6ba" compoundref="init_8cpp" startline="199" endline="202">HandleSIGTERM</references>
        <references refid="init_8cpp_1a70b23efd8d46bc8c627e5c241f0d7716" compoundref="init_8cpp" startline="204" endline="207">HandleSIGHUP</references>
        <references refid="i2p_8h_1a7941cc36eb7258154bd3ae870485729d" compoundref="i2p_8h" startline="25">I2P_SAM_GENERATE_DESTINATION_PARAM</references>
        <references refid="class_i2_p_session_1a0b2a285f34224a7fdc8ffcb0d1f6d48e" compoundref="i2p_8h" startline="76" endline="80">I2PSession::Instance</references>
        <references refid="class_s_a_m_1_1_stream_session_adapter_1a62c02a359e9e36459f13180189bed974" compoundref="i2p_8cpp" startline="115" endline="119">SAM::StreamSessionAdapter::destGenerate</references>
        <references refid="struct_s_a_m_1_1_full_destination_1abd0be9a7b3b430ca750f1e876f2d6b4b" compoundref="i2psam_8h" startline="266">SAM::FullDestination::pub</references>
        <references refid="struct_s_a_m_1_1_full_destination_1a9ce0281e2f9cd55dcfc773c7fbd09f0f" compoundref="i2psam_8h" startline="267">SAM::FullDestination::priv</references>
        <references refid="class_i2_p_session_1a4daa60a1a5767f354ebc5af8cabc4691" compoundref="i2p_8cpp" startline="193" endline="207">I2PSession::GenerateB32AddressFromDestination</references>
        <references refid="util_8cpp_1a7d86fadf98dfaba55f80b9be0ab0f978" compoundref="util_8cpp" startline="1148" endline="1153">GetConfigFile</references>
        <references refid="init_8cpp_1afdd10e8c0a44aad0b719c365fa3bb458" compoundref="init_8cpp" startline="54">nNodeLifespan</references>
        <references refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" compoundref="util_8cpp" startline="536" endline="541">GetArg</references>
        <references refid="init_8cpp_1ad316d89326f17948a58ad3cdf23850a5" compoundref="init_8cpp" startline="57">fUseFastIndex</references>
        <references refid="init_8cpp_1abb57d52de7c99ac76f7020624a7565fd" compoundref="init_8cpp" startline="56">nMinerSleep</references>
        <references refid="init_8cpp_1a3e3a4daba510b75f09387695c6c8a11f" compoundref="init_8cpp" startline="55">nDerivationMethodIndex</references>
        <references refid="chainparams_8cpp_1a8b1e95814ad8f7fbcd9dead5cae3783d" compoundref="chainparams_8cpp" startline="204" endline="214">SelectParamsFromCommandLine</references>
        <references refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" compoundref="util_8cpp" startline="94">mapArgs</references>
        <references refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" compoundref="util_8cpp" startline="569" endline="575">SoftSetBoolArg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" compoundref="util_8cpp" startline="95">mapMultiArgs</references>
        <references refid="util_8cpp_1acb212e467afc6516452e15829eeb58d5" compoundref="util_8cpp" startline="80">fEnableInstantX</references>
        <references refid="util_8cpp_1a9d94ca9f7c1496626992d1873e3f69df" compoundref="util_8cpp" startline="561" endline="567">SoftSetArg</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8cpp_1a49ade2b91028ff037557259b0729b049" compoundref="util_8cpp" startline="98">fNoSmsg</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="util_8cpp_1a2839c7c01ad9d90fbd3ce55d32b50c6f" compoundref="util_8cpp" startline="102">fServer</references>
        <references refid="util_8cpp_1a9d6b03a0dcc515a84e620794e64b9547" compoundref="util_8cpp" startline="99">fPrintToConsole</references>
        <references refid="util_8cpp_1ae1c7830d95f75ba35fbc6bfa50509913" compoundref="util_8cpp" startline="100">fPrintToDebugLog</references>
        <references refid="util_8cpp_1aa5e7caf6936a9a94eb088f04bcc62b97" compoundref="util_8cpp" startline="106">fLogTimestamps</references>
        <references refid="netbase_8cpp_1ac8115c6e2874217f2e487b5391cbe963" compoundref="netbase_8cpp" startline="29">nConnectTimeout</references>
        <references refid="util_8cpp_1a9ebffff9292ea77a3801d29ae2f23572" compoundref="util_8cpp" startline="363" endline="366">ParseMoney</references>
        <references refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" compoundref="wallet_8cpp" startline="40">nTransactionFee</references>
        <references refid="wallet_8h_1add67e95cd66a980b74a7a2f434d9cf1c" compoundref="wallet_8h" startline="27">MIN_TX_FEE</references>
        <references refid="init_8cpp_1aacdc0cc923bcbbe612f7975b56e05d18" compoundref="init_8cpp" startline="53">fConfChange</references>
        <references refid="init_8cpp_1ad32c5d94e1b12cb49fc73deca3f3068f" compoundref="init_8cpp" startline="59">fMinimizeCoinAge</references>
        <references refid="wallet_8cpp_1a6161012435f37404c65527606c4e0c3d" compoundref="wallet_8cpp" startline="42">nMinimumInputValue</references>
        <references refid="key_8cpp_1ae4d2893f2f5af1cca247516578171860" compoundref="key_8cpp" startline="321" endline="338">ECC_Start</references>
        <references refid="init_8cpp_1a878797b40fb8eb0d7f330a41d7742d11" compoundref="init_8cpp" startline="359" endline="370">InitSanityCheck</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="util_8cpp_1a37fca7e305fe0caa306b23fdb37f88e2" compoundref="util_8cpp" startline="1328" endline="1348">ShrinkDebugFile</references>
        <references refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" compoundref="util_8cpp" startline="1393" endline="1396">FormatFullVersion</references>
        <references refid="version_8h_1a9d36ad6318ca298d6b7d38701212ce20">CLIENT_DATE</references>
        <references refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1ab272995de020a3bcbf743be630e485c6" compoundref="util_8cpp" startline="1077" endline="1104">GetDefaultDataDir</references>
        <references refid="spork_8cpp_1af6873019c3095ea6b554795e4040395c" compoundref="spork_8cpp" startline="28">sporkManager</references>
        <references refid="class_c_spork_manager_1a599d088218de9d242e4dc5cb17dd310b" compoundref="spork_8cpp" startline="247" endline="262">CSporkManager::SetPrivKey</references>
        <references refid="util_8cpp_1a87d1153c97b6c99fdad9a30af07fed6e" compoundref="util_8cpp" startline="87">nStormnodeMinProtocol</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" compoundref="serialize_8h" startline="90">SER_DISK</references>
        <references refid="class_c_auto_file_1a78d666b1ef5dff5fd3f4ee33692b6d1d" compoundref="streams_8h" startline="344" endline="344">CAutoFile::IsNull</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_tx_mem_pool_1a0dbbcb6a3b7e1a6c564410668c12cd4f" compoundref="txmempool_8cpp" startline="141" endline="157">CTxMemPool::ReadFeeEstimates</references>
        <references refid="init_8cpp_1a6e1f612c12531e241e96cc04ffaebfd4" compoundref="init_8cpp" startline="61">fFeeEstimatesInitialized</references>
        <references refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" compoundref="ui__interface_8h" startline="93">CClientUIInterface::InitMessage</references>
        <references refid="db_8cpp_1a0e3d95be19da4a302447fa44703b1979" compoundref="db_8cpp" startline="32">bitdb</references>
        <references refid="class_c_d_b_env_1a1a81be1585305e5cedd2bccd6c7570c3" compoundref="db_8cpp" startline="63" endline="114">CDBEnv::Open</references>
        <references refid="class_c_wallet_d_b_1a3ebeb12f37d9c66512e2bc2903a6854a" compoundref="walletdb_8cpp" startline="837" endline="913">CWalletDB::Recover</references>
        <references refid="class_c_d_b_env_1a9d04604da4ad6f063e150b34d5df392d" compoundref="db_8cpp" startline="150" endline="165">CDBEnv::Verify</references>
        <references refid="class_c_d_b_env_1a6fbf26da5d7f8f64a77a3ba15e4df244a25eebe1e7f52e4e07a4c9b1e6abc4274" compoundref="db_8h" startline="61">CDBEnv::RECOVER_OK</references>
        <references refid="class_c_d_b_env_1a6fbf26da5d7f8f64a77a3ba15e4df244a0c9f58677b786e700258e8ad29579d75" compoundref="db_8h" startline="61">CDBEnv::RECOVER_FAIL</references>
        <references refid="main_8cpp_1ab02615ff65f91d69f8d786ec900baa8a" compoundref="main_8cpp" startline="460" endline="467">RegisterNodeSignals</references>
        <references refid="net_8cpp_1a475f2fc7d8f5cd7511db253cae8fe28a" compoundref="net_8cpp" startline="91" endline="91">GetNodeSignals</references>
        <references refid="netbase_8cpp_1a1d5be927f8f03e9fdb405a278374cb8d" compoundref="netbase_8cpp" startline="34" endline="44">ParseNetwork</references>
        <references refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9defff41db522fc865d58fc4e7646e9f" compoundref="netbase_8h" startline="33">NET_TOR</references>
        <references refid="init_8cpp_1a43c1918fef61f5c3105f03f9b190717e" compoundref="init_8cpp" startline="58">fOnlyTor</references>
        <references refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3af66f60a80e2a5d99813c3f322cf8a6e1" compoundref="netbase_8h" startline="30">NET_UNROUTABLE</references>
        <references refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a675b0737d6c404a5de25e324c166a4b5" compoundref="netbase_8h" startline="39">NET_MAX</references>
        <references refid="net_8cpp_1a2f6d62a9d456bf38003df3815b707f46" compoundref="net_8cpp" startline="282" endline="288">SetLimited</references>
        <references refid="class_c_net_addr_1a52a1b506f07e5450057e12a8b5a7fbcd" compoundref="netbase_8cpp" startline="754" endline="793">CNetAddr::IsValid</references>
        <references refid="net_8cpp_1a96eb2fba6d80870802ac787b6ada4beb" compoundref="net_8cpp" startline="290" endline="294">IsLimited</references>
        <references refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3ae1598b317168b96919bc3131ee149ebb" compoundref="netbase_8h" startline="31">NET_IPV4</references>
        <references refid="netbase_8cpp_1a3b85c9f702a45e80d9b6bfbe78c4bf12" compoundref="netbase_8cpp" startline="388" endline="395">SetProxy</references>
        <references refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9a9d9355a4923b33382f9894ba80688d" compoundref="netbase_8h" startline="32">NET_IPV6</references>
        <references refid="netbase_8cpp_1a5f78099167609daf40193a0717f96f87" compoundref="netbase_8cpp" startline="406" endline="412">SetNameProxy</references>
        <references refid="net_8cpp_1a89098b55df7d627a7a3c7f367cae24e6" compoundref="net_8cpp" startline="238" endline="244">SetReachable</references>
        <references refid="util_8cpp_1a53f30a9fc322fa65a5c4e3732e4ad410" compoundref="util_8cpp" startline="105">fNoListen</references>
        <references refid="net_8cpp_1a37089835ec27ad8bf945a458708165b9" compoundref="net_8cpp" startline="47">fDiscover</references>
        <references refid="netbase_8cpp_1ab5335ec17aee4d4fdd4c735b85707b56" compoundref="netbase_8cpp" startline="30">fNameLookup</references>
        <references refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" compoundref="netbase_8cpp" startline="144" endline="160">Lookup</references>
        <references refid="net_8cpp_1af6d341a24d761a509fca026458cf2f72" compoundref="net_8cpp" startline="99" endline="102">GetListenPort</references>
        <references refid="net_8cpp_1abb92a02eecc581e8927c8a6e31968645" compoundref="net_8cpp" startline="247" endline="274">AddLocal</references>
        <references refid="net_8h_1a385c44f6fb256e5716a2302a5b940388a85f937846a9820dce1ac928efee52a91" compoundref="net_8h" startline="85">LOCAL_MANUAL</references>
        <references refid="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" compoundref="wallet_8cpp" startline="41">nReserveBalance</references>
        <references refid="net_8cpp_1a5230a9dcbf8f7663e386b358f8d2fdc8" compoundref="net_8cpp" startline="93" endline="97">AddOneShot</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</references>
        <references refid="main_8cpp_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</references>
        <references refid="main_8cpp_1a08b980f03b2fb15445e0ddc8bb4b3d73" compoundref="main_8cpp" startline="113">nCoinCacheSize</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="main_8cpp_1af94b2ea9be1ac00e564bc30492e39783" compoundref="main_8cpp" startline="2068" endline="2104">LoadBlockIndex</references>
        <references refid="main_8cpp_1ac98b87e479f71b7be2b990a10c4ebc2d" compoundref="main_8cpp" startline="2060" endline="2066">UnloadBlockIndex</references>
        <references refid="main_8cpp_1a1821834b8f7837b469f7f91a14c20042" compoundref="main_8cpp" startline="110">pcoinsTip</references>
        <references refid="main_8cpp_1a0023503503c358eda0c97a576ef53fde" compoundref="main_8cpp" startline="111">pblocktree</references>
        <references refid="main_8cpp_1a8e0eca589b2d4254a65f04c5d91888b2" compoundref="main_8cpp" startline="80">fReindex</references>
        <references refid="class_c_block_tree_d_b_1a8fa5d150b98f4fd1aa8cf503eddfccef" compoundref="txdb_8cpp" startline="47" endline="52">CBlockTreeDB::WriteReindexing</references>
        <references refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" compoundref="main_8cpp" startline="59">mapBlockIndex</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="main_8cpp_1a92e5e1fcbd56cc44c27d39b64da8a79a" compoundref="main_8cpp" startline="2106" endline="2144">InitBlockIndex</references>
        <references refid="main_8cpp_1a6b569217f0bbb0a69a42c8769df06a06" compoundref="main_8cpp" startline="67">fTxIndex</references>
        <references refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" compoundref="init_8cpp" startline="95">fRequestShutdown</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" compoundref="primitives_2block_8h" startline="196" endline="213">CBlock::BuildMerkleTree</references>
        <references refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</references>
        <references refid="class_c_wallet_1a5d7b244b8ed0cbe24233ee0b6ca3cae0" compoundref="wallet_8cpp" startline="4222" endline="4243">CWallet::LoadWallet</references>
        <references refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944aa2367ec374804930406cea446fbb3fd2" compoundref="walletdb_8h" startline="33">DB_LOAD_OK</references>
        <references refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944a5eb73e7d323c832e22611f0ff94b1655" compoundref="walletdb_8h" startline="34">DB_CORRUPT</references>
        <references refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944ac83155a59a0d2ca8fc325075f58060c5" compoundref="walletdb_8h" startline="35">DB_NONCRITICAL_ERROR</references>
        <references refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944a0e0f7a1f3a38544a975bd97fba1eed58" compoundref="walletdb_8h" startline="36">DB_TOO_NEW</references>
        <references refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944aef89bee2c244fcd980d6cf7edc5bf2d6" compoundref="walletdb_8h" startline="38">DB_NEED_REWRITE</references>
        <references refid="wallet_8h_1a39a6b71da3eb95cddc0836d3b27ac7c9a867e17547f858859f558244dc96ac2f3" compoundref="wallet_8h" startline="57">FEATURE_LATEST</references>
        <references refid="class_c_wallet_1afa48a3ee3096681650c8b9589579e9cb" compoundref="wallet_8cpp" startline="341" endline="366">CWallet::SetMinVersion</references>
        <references refid="class_c_wallet_1a1bb7c19e7dd483f231f8077fb7fb942b" compoundref="wallet_8cpp" startline="368" endline="378">CWallet::SetMaxVersion</references>
        <references refid="util_8cpp_1a786af12a87491f8dc24351d93b9833b6" compoundref="util_8cpp" startline="171" endline="196">RandAddSeedPerfmon</references>
        <references refid="class_c_wallet_1a18549ec5c472c003afc4794daeb9adfd" compoundref="wallet_8cpp" startline="4429" endline="4446">CWallet::GetKeyFromPool</references>
        <references refid="class_c_wallet_1ad54cca8f6e5e1d5535860f43ddb0246f" compoundref="wallet_8cpp" startline="4292" endline="4301">CWallet::SetDefaultKey</references>
        <references refid="class_c_wallet_1a95d2dd3693db562aa11afbecf33e1276" compoundref="wallet_8cpp" startline="4246" endline="4260">CWallet::SetAddressBookName</references>
        <references refid="class_c_wallet_1a6d415899e530a91e6e28dd0fa4ecef8d" compoundref="wallet_8h" startline="198">CWallet::vchDefaultKey</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="class_c_wallet_1a1697a92171b4359f49b38aed643cf92b" compoundref="wallet_8cpp" startline="335" endline="339">CWallet::SetBestChain</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="main_8cpp_1aa6b7f220759fb53f10c65654bbf61317" compoundref="main_8cpp" startline="223" endline="230">RegisterWallet</references>
        <references refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" compoundref="main_8cpp" startline="69">pindexGenesisBlock</references>
        <references refid="class_c_wallet_d_b_1a20eecdac6605607ff7cba2f55ec86f73" compoundref="walletdb_8cpp" startline="148" endline="151">CWalletDB::ReadBestBlock</references>
        <references refid="class_c_block_locator_1a9109609622705fe47ec42ecc71c59d48" compoundref="chain_8h" startline="508" endline="522">CBlockLocator::GetBlockIndex</references>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_wallet_1a979a17e80e4897ed1f4ae9a4be7c493c" compoundref="wallet_8cpp" startline="1124" endline="1151">CWallet::ScanForWalletTransactions</references>
        <references refid="db_8cpp_1aad0b4d8ce794391063e82239d0a20b09" compoundref="db_8cpp" startline="24">nWalletDBUpdated</references>
        <references refid="main_8cpp_1a0189c34248cd89bbbe20d4d6045bd7c9" compoundref="main_8cpp" startline="2294" endline="2317">ThreadImport</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <references refid="class_c_addr_d_b_1aed4b567fb7c2dd15b2856e7c769967b7" compoundref="net_8cpp" startline="2060" endline="2111">CAddrDB::Read</references>
        <references refid="net_8cpp_1ac575e3335fd15a19b567026491f8f01a" compoundref="net_8cpp" startline="61">addrman</references>
        <references refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" compoundref="stormnodeman_8cpp" startline="18">snodeman</references>
        <references refid="class_c_stormnode_man_1a6d8c3a832ea7d6f4780a59e2ae0441b8" compoundref="stormnodeman_8cpp" startline="255" endline="350">CStormnodeMan::CheckAndRemove</references>
        <references refid="class_c_stormnode_man_1a5c49bb4788cad79574d90fdca8ea7464" compoundref="stormnodeman_8cpp" startline="820" endline="831">CStormnodeMan::ToString</references>
        <references refid="smessage_8cpp_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</references>
        <references refid="main_8cpp_1a7d4a97e049394047743b48c0cd0f0791" compoundref="main_8cpp" startline="2024" endline="2039">CheckDiskSpace</references>
        <references refid="class_c_stormnode_d_b_1a574f76256d8032a4c4e437d800d3795b" compoundref="stormnodeman_8cpp" startline="91" endline="176">CStormnodeDB::Read</references>
        <references refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cead20cc439041690b904357ce10985f17c" compoundref="stormnodeman_8h" startline="36">CStormnodeDB::FileError</references>
        <references refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cea2659a41b2f2ec27fe9c3afb3fcefa3a8" compoundref="stormnodeman_8h" startline="35">CStormnodeDB::Ok</references>
        <references refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cea9092524fb8ce01be56bc89d7eb161b75" compoundref="stormnodeman_8h" startline="41">CStormnodeDB::IncorrectFormat</references>
        <references refid="class_c_budget_d_b_1aecdde2af475070d9fafdcacf93f2e4f2" compoundref="stormnode-budget_8cpp" startline="245" endline="333">CBudgetDB::Read</references>
        <references refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" compoundref="stormnode-budget_8cpp" startline="18">budget</references>
        <references refid="class_c_budget_d_b_1a53586703b6648c7cabbf9cdcfef5f7d9a63cc82db74636abbd3f287b95964cfdf" compoundref="stormnode-budget_8h" startline="62">CBudgetDB::FileError</references>
        <references refid="class_c_budget_d_b_1a53586703b6648c7cabbf9cdcfef5f7d9abb62dc76c646498e10e16e9b6c9d8b0b" compoundref="stormnode-budget_8h" startline="61">CBudgetDB::Ok</references>
        <references refid="class_c_budget_d_b_1a53586703b6648c7cabbf9cdcfef5f7d9a38c7fec029b0c59cfa63cfb616bafe39" compoundref="stormnode-budget_8h" startline="67">CBudgetDB::IncorrectFormat</references>
        <references refid="class_c_budget_manager_1ac890f5fcc4bb9ec568675d602595d384" compoundref="stormnode-budget_8cpp" startline="1081" endline="1115">CBudgetManager::ResetSync</references>
        <references refid="class_c_budget_manager_1a21781707dcbe751e196abc105b51a669" compoundref="stormnode-budget_8h" startline="105" endline="110">CBudgetManager::ClearSeen</references>
        <references refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" compoundref="stormnode-payments_8cpp" startline="66" endline="154">CStormnodePaymentDB::Read</references>
        <references refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" compoundref="stormnode-payments_8cpp" startline="18">stormnodePayments</references>
        <references refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a7f12ef3395c370257e8fa09d3ff5626e" compoundref="stormnode-payments_8h" startline="47">CStormnodePaymentDB::FileError</references>
        <references refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a2f12de8ca0f127551efaccbdeb5ca6fe" compoundref="stormnode-payments_8h" startline="46">CStormnodePaymentDB::Ok</references>
        <references refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a96d00baa28f120ca64ffa93880171c09" compoundref="stormnode-payments_8h" startline="52">CStormnodePaymentDB::IncorrectFormat</references>
        <references refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" compoundref="util_8cpp" startline="76">fStormNode</references>
        <references refid="util_8cpp_1a54b81bb7643acf8ec4ab91fdea98c16f" compoundref="util_8cpp" startline="78">strStormNodeAddr</references>
        <references refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" compoundref="util_8cpp" startline="77">strStormNodePrivKey</references>
        <references refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" compoundref="sandstorm_8cpp" startline="28">sandStormSigner</references>
        <references refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" compoundref="sandstorm_8cpp" startline="2044" endline="2057">CSandStormSigner::SetKey</references>
        <references refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" compoundref="sandstorm_8cpp" startline="36">activeStormnode</references>
        <references refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" compoundref="activestormnode_8h" startline="39">CActiveStormnode::pubKeyStormnode</references>
        <references refid="util_8cpp_1aade01c058f2409dc8dc1f20c87370a43" compoundref="util_8cpp" startline="108">strBudgetMode</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_wallet_1a4e6eb889f7638ed9695fdc0731581428" compoundref="wallet_8h" startline="131">CWallet::cs_wallet</references>
        <references refid="stormnodeconfig_8cpp_1a399e6911e15f2ad43696d708ebd56cf2" compoundref="stormnodeconfig_8cpp" startline="14">stormnodeConfig</references>
        <references refid="class_c_stormnode_config_1aadf8ea91de17d416d1046987f07c4d1a" compoundref="stormnodeconfig_8h" startline="95" endline="97">CStormnodeConfig::getEntries</references>
        <references refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" compoundref="stormnodeconfig_8h" startline="62" endline="64">CStormnodeConfig::CStormnodeEntry::getTxHash</references>
        <references refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" compoundref="stormnodeconfig_8h" startline="46" endline="48">CStormnodeConfig::CStormnodeEntry::getOutputIndex</references>
        <references refid="classbase__uint_1ade1a897fac931f28f54998c92c797228" compoundref="uint256_8cpp" startline="163" endline="189">base_uint&lt; BITS &gt;::SetHex</references>
        <references refid="class_c_wallet_1a2be3aa26d84c79bdcabb41c6b3fe0e0f" compoundref="wallet_8cpp" startline="4737" endline="4741">CWallet::LockCoin</references>
        <references refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" compoundref="util_8cpp" startline="84">nLiquidityProvider</references>
        <references refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" compoundref="sandstorm_8cpp" startline="26">sandStormPool</references>
        <references refid="class_c_sandstorm_pool_1a9be4f999ba6ac95ce4967c7b72c4c13f" compoundref="sandstorm_8h" startline="387" endline="389">CSandstormPool::SetMinBlockSpacing</references>
        <references refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" compoundref="util_8cpp" startline="89">fEnableSandstorm</references>
        <references refid="util_8cpp_1aa6e1d8c03f1d46e89708f9c282181c47" compoundref="util_8cpp" startline="92">fSandstormMultiSession</references>
        <references refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" compoundref="util_8cpp" startline="82">nSandstormRounds</references>
        <references refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" compoundref="util_8cpp" startline="83">nAnonymizeDarkSilkAmount</references>
        <references refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" compoundref="util_8cpp" startline="81">nInstantXDepth</references>
        <references refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" compoundref="util_8cpp" startline="79">fLiteMode</references>
        <references refid="class_c_sandstorm_pool_1a1b40173d3fdd69fd20da1d01117a0970" compoundref="sandstorm_8h" startline="365" endline="384">CSandstormPool::InitDenominations</references>
        <references refid="class_c_sandstorm_pool_1aaa874c4418a12df76eddfe8faff56b67" compoundref="sandstorm_8h" startline="348" endline="350">CSandstormPool::InitCollateralAddress</references>
        <references refid="sandstorm_8cpp_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</references>
        <references refid="class_c_block_1aea2c77ad84cd7909720f75a0c3f7ddc2" compoundref="chain_8cpp" startline="250" endline="295">CBlock::RebuildAddressIndex</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_wallet_1a363fabb2b82d596c33e4fa3920a11c26" compoundref="wallet_8h" startline="151">CWallet::setKeyPool</references>
        <references refid="class_c_wallet_1a0b17f72f2170090f2de43a6c48af3214" compoundref="wallet_8h" startline="192">CWallet::mapWallet</references>
        <references refid="class_c_wallet_1afed31f2489c987e0f76233121ed84ab7" compoundref="wallet_8h" startline="196">CWallet::mapAddressBook</references>
        <references refid="net_8cpp_1a9396d8054e8f74959e9391871aaddde0" compoundref="net_8cpp" startline="1858" endline="1899">StartNode</references>
        <references refid="rpcmining_8cpp_1ad47789e7e3d3323a832e764f692e4ea8" compoundref="rpcmining_8cpp" startline="29" endline="36">InitRPCMining</references>
        <references refid="rpcserver_8cpp_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</references>
        <references refid="main_8h_1a31faece5ef0e403969b3d3debd79b352" compoundref="miner_8cpp" startline="536" endline="591">ThreadStakeMiner</references>
        <references refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" compoundref="wallet_8cpp" startline="1153" endline="1223">CWallet::ReacceptWalletTransactions</references>
        <references refid="db_8h_1aa23a48af6e03352212955045a6204821">ThreadFlushWalletDB</references>
        <references refid="class_c_wallet_1a3e886f3a3b20228770e082b3fc014fc7" compoundref="wallet_8h" startline="149">CWallet::strWalletFile</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="darksilk_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilk_8cpp" startline="128" endline="350">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chainparams_8h" kindref="compound">chainparams.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb_8h" kindref="compound">txdb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rpcserver_8h" kindref="compound">rpcserver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="net_8h" kindref="compound">net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key_8h" kindref="compound">key.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pubkey_8h" kindref="compound">pubkey.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui__interface_8h" kindref="compound">ui_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="activestormnode_8h" kindref="compound">activestormnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-budget_8h" kindref="compound">stormnode-budget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-payments_8h" kindref="compound">stormnode-payments.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeman_8h" kindref="compound">stormnodeman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spork_8h" kindref="compound">spork.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeconfig_8h" kindref="compound">stormnodeconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="smessage_8h" kindref="compound">smessage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb-leveldb_8h" kindref="compound">txdb-leveldb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wallet_8h" kindref="compound">wallet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="walletdb_8h" kindref="compound">walletdb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string/predicate.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string/replace.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/sync/file_lock.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/crypto.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="i2p_8h" kindref="compound">i2p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost" kindref="compound">boost</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="class_c_wallet" kindref="compound">CWallet</ref>*<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="ui__interface_8h_1a4fe31b510fc1c2b95321cedb9f89e8de" refkind="member"><highlight class="normal"><ref refid="class_c_client_u_i_interface" kindref="compound">CClientUIInterface</ref><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>;</highlight></codeline>
<codeline lineno="53" refid="wallet_8h_1aacdc0cc923bcbbe612f7975b56e05d18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1aacdc0cc923bcbbe612f7975b56e05d18" kindref="member">fConfChange</ref>;</highlight></codeline>
<codeline lineno="54" refid="main_8h_1afdd10e8c0a44aad0b719c365fa3bb458" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1afdd10e8c0a44aad0b719c365fa3bb458" kindref="member">nNodeLifespan</ref>;</highlight></codeline>
<codeline lineno="55" refid="main_8h_1a3e3a4daba510b75f09387695c6c8a11f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a3e3a4daba510b75f09387695c6c8a11f" kindref="member">nDerivationMethodIndex</ref>;</highlight></codeline>
<codeline lineno="56" refid="miner_8cpp_1abb57d52de7c99ac76f7020624a7565fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1abb57d52de7c99ac76f7020624a7565fd" kindref="member">nMinerSleep</ref>;</highlight></codeline>
<codeline lineno="57" refid="main_8h_1ad316d89326f17948a58ad3cdf23850a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1ad316d89326f17948a58ad3cdf23850a5" kindref="member">fUseFastIndex</ref>;</highlight></codeline>
<codeline lineno="58" refid="darksilkgui_8cpp_1a43c1918fef61f5c3105f03f9b190717e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a43c1918fef61f5c3105f03f9b190717e" kindref="member">fOnlyTor</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59" refid="main_8h_1ad32c5d94e1b12cb49fc73deca3f3068f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1ad32c5d94e1b12cb49fc73deca3f3068f" kindref="member">fMinimizeCoinAge</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="init_8cpp_1a6e1f612c12531e241e96cc04ffaebfd4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a6e1f612c12531e241e96cc04ffaebfd4" kindref="member">fFeeEstimatesInitialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>FEE_ESTIMATES_FILENAME=</highlight><highlight class="stringliteral">&quot;fee_estimates.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thread<sp/>management<sp/>and<sp/>startup/shutdown:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>network-processing<sp/>threads<sp/>are<sp/>all<sp/>part<sp/>of<sp/>a<sp/>thread<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>created<sp/>by<sp/>AppInit()<sp/>or<sp/>the<sp/>Qt<sp/>main()<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>clean<sp/>exit<sp/>happens<sp/>when<sp/>StartShutdown()<sp/>or<sp/>the<sp/>SIGTERM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>signal<sp/>handler<sp/>sets<sp/>fRequestShutdown,<sp/>which<sp/>triggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>DetectShutdownThread(),<sp/>which<sp/>interrupts<sp/>the<sp/>main<sp/>thread<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DetectShutdownThread()<sp/>then<sp/>exits,<sp/>which<sp/>causes<sp/>AppInit()<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>continue<sp/>(it<sp/>.joins<sp/>the<sp/>shutdown<sp/>thread).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shutdown()<sp/>is<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>called<sp/>to<sp/>clean<sp/>up<sp/>database<sp/>connections,<sp/>and<sp/>stop<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>threads<sp/>that<sp/>should<sp/>only<sp/>be<sp/>stopped<sp/>after<sp/>the<sp/>main<sp/>network-processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>threads<sp/>have<sp/>exited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>if<sp/>running<sp/>-daemon<sp/>the<sp/>parent<sp/>process<sp/>returns<sp/>from<sp/>AppInit2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>before<sp/>adding<sp/>any<sp/>threads<sp/>to<sp/>the<sp/>threadGroup,<sp/>so<sp/>.join_all()<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>immediately<sp/>and<sp/>the<sp/>parent<sp/>exits<sp/>from<sp/>main().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shutdown<sp/>for<sp/>Qt<sp/>is<sp/>very<sp/>similar,<sp/>only<sp/>it<sp/>uses<sp/>a<sp/>QTimer<sp/>to<sp/>detect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fRequestShutdown<sp/>getting<sp/>set,<sp/>and<sp/>then<sp/>does<sp/>the<sp/>normal<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shutdown<sp/>thing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" kindref="member">fRequestShutdown</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::scoped_ptr&lt;ECCVerifyHandle&gt;<sp/>globalVerifyHandle;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_c_coins_view_error_catcher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_coins_view_error_catcher" kindref="compound">CCoinsViewErrorCatcher</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed" kindref="compound">CCoinsViewBacked</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101" refid="class_c_coins_view_error_catcher_1aa8295e2f5ce5ad9880c5bd86d52e014c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coins_view_error_catcher_1aa8295e2f5ce5ad9880c5bd86d52e014c" kindref="member">CCoinsViewErrorCatcher</ref>(<ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref>*<sp/>view)<sp/>:<sp/><ref refid="class_c_coins_view_backed" kindref="compound">CCoinsViewBacked</ref>(view)<sp/>{}</highlight></codeline>
<codeline lineno="102" refid="class_c_coins_view_error_catcher_1a762969de31b62e55d01f1cdf0b178eb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_error_catcher_1a762969de31b62e55d01f1cdf0b178eb9" kindref="member">GetCoins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;txid,<sp/><ref refid="class_c_coins" kindref="compound">CCoins</ref><sp/>&amp;coins)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_backed_1a21b95a9910f94e9b7ebed62a6f329ea0" kindref="member">CCoinsViewBacked::GetCoins</ref>(txid,<sp/>coins);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::runtime_error&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1ab3f23c730300df11cf9ff369fbae0635" kindref="member">ThreadSafeMessageBox</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>from<sp/>database,<sp/>shutting<sp/>down.&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1a0551e67c07eb6a81edf6e43fed89759f" kindref="member">CClientUIInterface::MSG_ERROR</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>from<sp/>database:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Starting<sp/>the<sp/>shutdown<sp/>sequence<sp/>and<sp/>returning<sp/>false<sp/>to<sp/>the<sp/>caller<sp/>would<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interpreted<sp/>as<sp/>&apos;entry<sp/>not<sp/>found&apos;<sp/>(as<sp/>opposed<sp/>to<sp/>unable<sp/>to<sp/>read<sp/>data),<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>lead<sp/>to<sp/>invalid<sp/>interpration.<sp/>Just<sp/>exit<sp/>immediately,<sp/>as<sp/>we<sp/>can&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continue<sp/>anyway,<sp/>and<sp/>all<sp/>writes<sp/>should<sp/>be<sp/>atomic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>do<sp/>not<sp/>need<sp/>similar<sp/>protection,<sp/>as<sp/>failure<sp/>to<sp/>write<sp/>is<sp/>handled<sp/>by<sp/>the<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_d_b" kindref="compound">CCoinsViewDB</ref><sp/>*pcoinsdbview<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_error_catcher" kindref="compound">CCoinsViewErrorCatcher</ref><sp/>*pcoinscatcher<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="init_8h_1ac7140c7327b1e6a8d46470b1cd0e8e1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1ac7140c7327b1e6a8d46470b1cd0e8e1b" kindref="member">StartShutdown</ref>()</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" kindref="member">fRequestShutdown</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125" refid="init_8h_1a6f201ca9fe6b594f1985c12b4482ea5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a6f201ca9fe6b594f1985c12b4482ea5a" kindref="member">ShutdownRequested</ref>()</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" kindref="member">fRequestShutdown</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" kindref="member">Shutdown</ref>()</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Shutdown<sp/>:<sp/>In<sp/>progress...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/>cs_Shutdown;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(cs_Shutdown,<sp/>lockShutdown);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lockShutdown)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" kindref="member">RenameThread</ref>(</highlight><highlight class="stringliteral">&quot;darksilk-shutoff&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a3039b67e5eebaa3ff830261c192816f2" kindref="member">AddTransactionsUpdated</ref>(1);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcserver_8cpp_1af5be6ec7b71359ed4111f1a5ed93b893" kindref="member">StopRPCThreads</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a49c8b6520e51ba498f92accf33eb6c17" kindref="member">SecureMsgShutdown</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcmining_8cpp_1ae7370e6af93e26e0c967cda6a63fe3a9" kindref="member">ShutdownRPCMining</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwalletMain)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db_8cpp_1a0e3d95be19da4a302447fa44703b1979" kindref="member">bitdb</ref>.<ref refid="class_c_d_b_env_1a09c5850b88919553a8db416ce288ff1a" kindref="member">Flush</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1ac9110488f45c160d58f3c7ab7197bcea" kindref="member">StopNode</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1ab4bfbf67ff3a5463457d04b68610e18b" kindref="member">DumpStormnodes</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stormnode-budget_8cpp_1a277f8d83f6cfcfbe4ee3f622d38f8790" kindref="member">DumpBudgets</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stormnode-payments_8cpp_1ae992438141f991b3ca132d11da230d1a" kindref="member">DumpStormnodePayments</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a3ef0cc6e9d9d6435ee2a5569244d6ebd" kindref="member">UnregisterNodeSignals</ref>(<ref refid="net_8cpp_1a475f2fc7d8f5cd7511db253cae8fe28a" kindref="member">GetNodeSignals</ref>());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="init_8cpp_1a6e1f612c12531e241e96cc04ffaebfd4" kindref="member">fFeeEstimatesInitialized</ref>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::path<sp/>est_path<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/>FEE_ESTIMATES_FILENAME;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref><sp/>est_fileout(fopen(est_path.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">),<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!est_fileout.<ref refid="class_c_auto_file_1a78d666b1ef5dff5fd3f4ee33692b6d1d" kindref="member">IsNull</ref>())</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a0a05d7b50b9c2a387182402e60475da6" kindref="member">WriteFeeEstimates</ref>(est_fileout);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>Failed<sp/>to<sp/>write<sp/>fee<sp/>estimates<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>est_path.string());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a6e1f612c12531e241e96cc04ffaebfd4" kindref="member">fFeeEstimatesInitialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1a1821834b8f7837b469f7f91a14c20042" kindref="member">pcoinsTip</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/><ref refid="main_8cpp_1a0023503503c358eda0c97a576ef53fde" kindref="member">pblocktree</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a0d01c135cc5a05475e3dc3910c9888da" kindref="member">FlushStateToDisk</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a1821834b8f7837b469f7f91a14c20042" kindref="member">pcoinsTip</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a1821834b8f7837b469f7f91a14c20042" kindref="member">pcoinsTip</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pcoinscatcher;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcoinscatcher<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pcoinsdbview;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcoinsdbview<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a0023503503c358eda0c97a576ef53fde" kindref="member">pblocktree</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a0023503503c358eda0c97a576ef53fde" kindref="member">pblocktree</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwalletMain)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a1697a92171b4359f49b38aed643cf92b" kindref="member">SetBestChain</ref>(<ref refid="class_c_block_locator" kindref="compound">CBlockLocator</ref>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwalletMain)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db_8cpp_1a0e3d95be19da4a302447fa44703b1979" kindref="member">bitdb</ref>.<ref refid="class_c_d_b_env_1a09c5850b88919553a8db416ce288ff1a" kindref="member">Flush</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::filesystem::remove(<ref refid="util_8cpp_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" kindref="member">GetPidFile</ref>());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1ad0b02f9e3ff8997319581ce5021d4244" kindref="member">UnregisterAllWallets</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>pwalletMain<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Shutdown<sp/>:<sp/>done\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Signal<sp/>handlers<sp/>are<sp/>very<sp/>limited<sp/>in<sp/>what<sp/>they<sp/>are<sp/>allowed<sp/>to<sp/>do,<sp/>so:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="init_8cpp_1ad59c5cbbe3bdf4fa36f3b7480da8d6ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1ad59c5cbbe3bdf4fa36f3b7480da8d6ba" kindref="member">HandleSIGTERM</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" kindref="member">fRequestShutdown</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="init_8cpp_1a70b23efd8d46bc8c627e5c241f0d7716" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a70b23efd8d46bc8c627e5c241f0d7716" kindref="member">HandleSIGHUP</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aad5e5c200c78bd5bdec18c8707e63822" kindref="member">fReopenDebugLog</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>InitError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;str)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1ab3f23c730300df11cf9ff369fbae0635" kindref="member">ThreadSafeMessageBox</ref>(str,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1a0551e67c07eb6a81edf6e43fed89759f" kindref="member">CClientUIInterface::MSG_ERROR</ref><sp/>|<sp/><ref refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1af82009148c4cbf1ccb930f2895a8c8d6" kindref="member">CClientUIInterface::NOSHOWGUI</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>InitWarning(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;str)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1ab3f23c730300df11cf9ff369fbae0635" kindref="member">ThreadSafeMessageBox</ref>(str,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1a72b206c5d6304b4e2257281a5ca551eb" kindref="member">CClientUIInterface::MSG_WARNING</ref><sp/>|<sp/><ref refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1af82009148c4cbf1ccb930f2895a8c8d6" kindref="member">CClientUIInterface::NOSHOWGUI</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BindNativeI2P(</highlight><highlight class="comment">/*bool<sp/>fError<sp/>=<sp/>true*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="net_8cpp_1a96eb2fba6d80870802ac787b6ada4beb" kindref="member">IsLimited</ref>(NET_NATIVE_I2P))</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BindListenNativeI2P();</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Bind(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>&amp;addr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fError<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="net_8cpp_1a96eb2fba6d80870802ac787b6ada4beb" kindref="member">IsLimited</ref>(addr))</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strError;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="net_8cpp_1a0c8010ad96acff7cca6aca684ec42b71" kindref="member">BindListenPort</ref>(addr,<sp/>strError))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fError)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(strError);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Core-specific<sp/>options<sp/>shared<sp/>between<sp/>UI<sp/>and<sp/>daemon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="init_8h_1a60c54061faf43bd9cca8ab8bfa38055a" refkind="member"><highlight class="normal">std::string<sp/><ref refid="init_8cpp_1a60c54061faf43bd9cca8ab8bfa38055a" kindref="member">HelpMessage</ref>()</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strUsage<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Options:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>help<sp/>message&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-conf=&lt;file&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Specify<sp/>configuration<sp/>file<sp/>(default:<sp/>darksilk.conf)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-pid=&lt;file&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Specify<sp/>pid<sp/>file<sp/>(default:<sp/>darksilkd.pid)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-datadir=&lt;dir&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Specify<sp/>data<sp/>directory&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-wallet=&lt;dir&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Specify<sp/>wallet<sp/>file<sp/>(within<sp/>data<sp/>directory)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-dbcache=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>database<sp/>cache<sp/>size<sp/>in<sp/>megabytes<sp/>(default:<sp/>25)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-dblogsize=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>database<sp/>disk<sp/>log<sp/>size<sp/>in<sp/>megabytes<sp/>(default:<sp/>100)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-timeout=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Specify<sp/>connection<sp/>timeout<sp/>in<sp/>milliseconds<sp/>(default:<sp/>5000)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-proxy=&lt;ip:port&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Connect<sp/>through<sp/>SOCKS5<sp/>proxy&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-tor=&lt;ip:port&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>proxy<sp/>to<sp/>reach<sp/>tor<sp/>hidden<sp/>services<sp/>(default:<sp/>same<sp/>as<sp/>-proxy)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-dns<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Allow<sp/>DNS<sp/>lookups<sp/>for<sp/>-addnode,<sp/>-seednode<sp/>and<sp/>-connect&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-port=&lt;port&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Listen<sp/>for<sp/>connections<sp/>on<sp/>&lt;port&gt;<sp/>(default:<sp/>31500<sp/>or<sp/>testnet:<sp/>31800)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-maxconnections=&lt;n&gt;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Maintain<sp/>at<sp/>most<sp/>&lt;n&gt;<sp/>connections<sp/>to<sp/>peers<sp/>(default:<sp/>200)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-addnode=&lt;ip&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Add<sp/>a<sp/>node<sp/>to<sp/>connect<sp/>to<sp/>and<sp/>attempt<sp/>to<sp/>keep<sp/>the<sp/>connection<sp/>open&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-connect=&lt;ip&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Connect<sp/>only<sp/>to<sp/>the<sp/>specified<sp/>node(s)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-seednode=&lt;ip&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Connect<sp/>to<sp/>a<sp/>node<sp/>to<sp/>retrieve<sp/>peer<sp/>addresses,<sp/>and<sp/>disconnect&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-externalip=&lt;ip&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Specify<sp/>your<sp/>own<sp/>public<sp/>address&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-onlynet=&lt;net&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Only<sp/>connect<sp/>to<sp/>nodes<sp/>in<sp/>network<sp/>&lt;net&gt;<sp/>(IPv4,<sp/>IPv6<sp/>or<sp/>Tor)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-discover<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Discover<sp/>own<sp/>IP<sp/>address<sp/>(default:<sp/>1<sp/>when<sp/>listening<sp/>and<sp/>no<sp/>-externalip)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-listen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Accept<sp/>connections<sp/>from<sp/>outside<sp/>(default:<sp/>1<sp/>if<sp/>no<sp/>-proxy<sp/>or<sp/>-connect)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-bind=&lt;addr&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Bind<sp/>to<sp/>given<sp/>address.<sp/>Use<sp/>[host]:port<sp/>notation<sp/>for<sp/>IPv6&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-dnsseed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Query<sp/>for<sp/>peer<sp/>addresses<sp/>via<sp/>DNS<sp/>lookup,<sp/>if<sp/>low<sp/>on<sp/>addresses<sp/>(default:<sp/>1<sp/>unless<sp/>-connect)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-forcednsseed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Always<sp/>query<sp/>for<sp/>peer<sp/>addresses<sp/>via<sp/>DNS<sp/>lookup<sp/>(default:<sp/>0)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-synctime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Sync<sp/>time<sp/>with<sp/>other<sp/>nodes.<sp/>Disable<sp/>if<sp/>time<sp/>on<sp/>your<sp/>system<sp/>is<sp/>precise<sp/>e.g.<sp/>syncing<sp/>with<sp/>NTP<sp/>(default:<sp/>1)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-banscore=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Threshold<sp/>for<sp/>disconnecting<sp/>misbehaving<sp/>peers<sp/>(default:<sp/>100)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-bantime=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>seconds<sp/>to<sp/>keep<sp/>misbehaving<sp/>peers<sp/>from<sp/>reconnecting<sp/>(default:<sp/>86400)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-maxreceivebuffer=&lt;n&gt;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>per-connection<sp/>receive<sp/>buffer,<sp/>&lt;n&gt;*1000<sp/>bytes<sp/>(default:<sp/>5000)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-maxsendbuffer=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>per-connection<sp/>send<sp/>buffer,<sp/>&lt;n&gt;*1000<sp/>bytes<sp/>(default:<sp/>1000)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_UPNP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_UPNP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-upnp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>UPnP<sp/>to<sp/>map<sp/>the<sp/>listening<sp/>port<sp/>(default:<sp/>1<sp/>when<sp/>listening)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-upnp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>UPnP<sp/>to<sp/>map<sp/>the<sp/>listening<sp/>port<sp/>(default:<sp/>0)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-paytxfee=&lt;amt&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Fee<sp/>per<sp/>KB<sp/>to<sp/>add<sp/>to<sp/>transactions<sp/>you<sp/>send&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-mininput=&lt;amt&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;When<sp/>creating<sp/>transactions,<sp/>ignore<sp/>inputs<sp/>with<sp/>value<sp/>less<sp/>than<sp/>this<sp/>(default:<sp/>0.01)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-server<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Accept<sp/>command<sp/>line<sp/>and<sp/>JSON-RPC<sp/>commands&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-daemon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Run<sp/>in<sp/>the<sp/>background<sp/>as<sp/>a<sp/>daemon<sp/>and<sp/>accept<sp/>commands&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-testnet<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>test<sp/>network&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-litemode=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Disable<sp/>all<sp/>Darksilk<sp/>specific<sp/>functionality<sp/>(Stormnodes,<sp/>Sandstorm,<sp/>InstantX,<sp/>Budgeting)<sp/>(0-1,<sp/>default:<sp/>%u)&quot;</highlight><highlight class="normal">),<sp/>0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-debug=&lt;category&gt;<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Output<sp/>debugging<sp/>information<sp/>(default:<sp/>0,<sp/>supplying<sp/>&lt;category&gt;<sp/>is<sp/>optional)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;If<sp/>&lt;category&gt;<sp/>is<sp/>not<sp/>supplied,<sp/>output<sp/>all<sp/>debugging<sp/>information.&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&lt;category&gt;<sp/>can<sp/>be:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>addrman,<sp/>alert,<sp/>db,<sp/>lock,<sp/>rand,<sp/>rpc,<sp/>selectcoins,<sp/>mempool,<sp/>net,&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>translate<sp/>these<sp/>and<sp/>qt<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>coinage,<sp/>coinstake,<sp/>creation,<sp/>stakemodifier&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>qt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-logtimestamps<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Prepend<sp/>debug<sp/>output<sp/>with<sp/>timestamp<sp/>(defaultg:<sp/>1)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-shrinkdebugfile<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Shrink<sp/>debug.log<sp/>file<sp/>on<sp/>client<sp/>startup<sp/>(default:<sp/>1<sp/>when<sp/>no<sp/>-debug)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-printtodebuglog<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Send<sp/>trace/debug<sp/>info<sp/>to<sp/>debug.log<sp/>file<sp/>(default:<sp/>%u)&quot;</highlight><highlight class="normal">),<sp/>1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-printtoconsole<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Send<sp/>trace/debug<sp/>info<sp/>to<sp/>console<sp/>instead<sp/>of<sp/>debug.log<sp/>file&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcuser=&lt;user&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Username<sp/>for<sp/>JSON-RPC<sp/>connections&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcpassword=&lt;pw&gt;<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Password<sp/>for<sp/>JSON-RPC<sp/>connections&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcport=&lt;port&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Listen<sp/>for<sp/>JSON-RPC<sp/>connections<sp/>on<sp/>&lt;port&gt;<sp/>(default:<sp/>31500<sp/>or<sp/>testnet:<sp/>31800)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcallowip=&lt;ip&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Allow<sp/>JSON-RPC<sp/>connections<sp/>from<sp/>specified<sp/>IP<sp/>address&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcconnect=&lt;ip&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Send<sp/>commands<sp/>to<sp/>node<sp/>running<sp/>on<sp/>&lt;ip&gt;<sp/>(default:<sp/>127.0.0.1)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcwait<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Wait<sp/>for<sp/>RPC<sp/>server<sp/>to<sp/>start&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcthreads=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>the<sp/>number<sp/>of<sp/>threads<sp/>to<sp/>service<sp/>RPC<sp/>calls<sp/>(default:<sp/>4)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-blocknotify=&lt;cmd&gt;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Execute<sp/>command<sp/>when<sp/>the<sp/>best<sp/>block<sp/>changes<sp/>(%s<sp/>in<sp/>cmd<sp/>is<sp/>replaced<sp/>by<sp/>block<sp/>hash)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-walletnotify=&lt;cmd&gt;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Execute<sp/>command<sp/>when<sp/>a<sp/>wallet<sp/>transaction<sp/>changes<sp/>(%s<sp/>in<sp/>cmd<sp/>is<sp/>replaced<sp/>by<sp/>TxID)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-confchange<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Require<sp/>a<sp/>confirmations<sp/>for<sp/>change<sp/>(default:<sp/>0)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-alertnotify=&lt;cmd&gt;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Execute<sp/>command<sp/>when<sp/>a<sp/>relevant<sp/>alert<sp/>is<sp/>received<sp/>(%s<sp/>in<sp/>cmd<sp/>is<sp/>replaced<sp/>by<sp/>message)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-upgradewallet<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Upgrade<sp/>wallet<sp/>to<sp/>latest<sp/>format&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-keypool=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>key<sp/>pool<sp/>size<sp/>to<sp/>&lt;n&gt;<sp/>(default:<sp/>%u).<sp/>Run<sp/>&apos;keypoolrefill&apos;<sp/>to<sp/>apply<sp/>this<sp/>to<sp/>already<sp/>existing<sp/>wallets&quot;</highlight><highlight class="normal">),<sp/>DEFAULT_KEYPOOL_SIZE)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rescan<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Rescan<sp/>the<sp/>block<sp/>chain<sp/>for<sp/>missing<sp/>wallet<sp/>transactions&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-salvagewallet<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>recover<sp/>private<sp/>keys<sp/>from<sp/>a<sp/>corrupt<sp/>wallet.dat&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-checkblocks=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;How<sp/>many<sp/>blocks<sp/>to<sp/>check<sp/>at<sp/>startup<sp/>(default:<sp/>500,<sp/>0<sp/>=<sp/>all)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-checklevel=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;How<sp/>thorough<sp/>the<sp/>block<sp/>verification<sp/>is<sp/>(0-6,<sp/>default:<sp/>1)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-loadblock=&lt;file&gt;<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Imports<sp/>blocks<sp/>from<sp/>external<sp/>blk000?.dat<sp/>file&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-maxorphanblocksMiB=&lt;n&gt;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Keep<sp/>at<sp/>most<sp/>&lt;n&gt;<sp/>MiB<sp/>of<sp/>unconnectable<sp/>blocks<sp/>in<sp/>memory<sp/>(default:<sp/>%u)&quot;</highlight><highlight class="normal">),<sp/>DEFAULT_MAX_ORPHAN_BLOCKS)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Block<sp/>creation<sp/>options:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-blockminsize=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>minimum<sp/>block<sp/>size<sp/>in<sp/>bytes<sp/>(default:<sp/>0)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-blockmaxsize=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>maximum<sp/>block<sp/>size<sp/>in<sp/>bytes<sp/>(default:<sp/>%d)&quot;</highlight><highlight class="normal">),<sp/>MAX_BLOCK_SIZE_GEN)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-blockprioritysize=&lt;n&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>maximum<sp/>size<sp/>of<sp/>high-priority/low-fee<sp/>transactions<sp/>in<sp/>bytes<sp/>(default:<sp/>%d)&quot;</highlight><highlight class="normal">),<sp/>DEFAULT_BLOCK_PRIORITY_SIZE)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;SSL<sp/>options:<sp/>(see<sp/>the<sp/>DarkSilk<sp/>Wiki<sp/>for<sp/>SSL<sp/>setup<sp/>instructions)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcssl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>OpenSSL<sp/>(https)<sp/>for<sp/>JSON-RPC<sp/>connections&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcsslcertificatechainfile=&lt;file.cert&gt;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Server<sp/>certificate<sp/>file<sp/>(default:<sp/>server.cert)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcsslprivatekeyfile=&lt;file.pem&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Server<sp/>private<sp/>key<sp/>(default:<sp/>server.pem)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-rpcsslciphers=&lt;ciphers&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Acceptable<sp/>ciphers<sp/>(default:<sp/>TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-litemode=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Disable<sp/>all<sp/>Stormnode<sp/>and<sp/>Sandstorm<sp/>related<sp/>functionality<sp/>(0-1,<sp/>default:<sp/>0)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>options:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-stormnode=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Enable<sp/>the<sp/>client<sp/>to<sp/>act<sp/>as<sp/>a<sp/>stormnode<sp/>(0-1,<sp/>default:<sp/>0)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-snconf=&lt;file&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Specify<sp/>stormnode<sp/>configuration<sp/>file<sp/>(default:<sp/>stormnode.conf)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-snconflock=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Lock<sp/>stormnodes<sp/>from<sp/>stormnode<sp/>configuration<sp/>file<sp/>(default:<sp/>1)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-stormnodeprivkey=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>the<sp/>stormnode<sp/>private<sp/>key&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-stormnodeaddr=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>external<sp/>address:port<sp/>to<sp/>get<sp/>to<sp/>this<sp/>stormnode<sp/>(example:<sp/>address:port)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-stormnodeminprotocol=&lt;n&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Ignore<sp/>stormnodes<sp/>less<sp/>than<sp/>version<sp/>(example:<sp/>60135;<sp/>default<sp/>:<sp/>0)&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-enablesandstorm=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Enable<sp/>use<sp/>of<sp/>automated<sp/>sandstorm<sp/>for<sp/>funds<sp/>stored<sp/>in<sp/>this<sp/>wallet<sp/>(0-1,<sp/>default:<sp/>0)&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-sandstormmultisession=&lt;n&gt;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Enable<sp/>multiple<sp/>sandstorm<sp/>mixing<sp/>sessions<sp/>per<sp/>block,<sp/>experimental<sp/>(0-1,<sp/>default:<sp/>%u)&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1aa6e1d8c03f1d46e89708f9c282181c47" kindref="member">fSandstormMultiSession</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-sandstormrounds=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>N<sp/>separate<sp/>stormnodes<sp/>to<sp/>anonymize<sp/>funds<sp/><sp/>(2-50,<sp/>default:<sp/>2)&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-anonymizedarksilkamount=&lt;n&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Keep<sp/>N<sp/>DarkSilk<sp/>anonymized<sp/>(default:<sp/>0)&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" kindref="member">nAnonymizeDarkSilkAmount</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-liquidityprovider=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Provide<sp/>liquidity<sp/>to<sp/>Sandstorm<sp/>by<sp/>infrequently<sp/>mixing<sp/>coins<sp/>on<sp/>a<sp/>continual<sp/>basis<sp/>(0-100,<sp/>default:<sp/>0,<sp/>1=very<sp/>frequent,<sp/>high<sp/>fees,<sp/>100=very<sp/>infrequent,<sp/>low<sp/>fees)&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;InstantX<sp/>options:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-enableinstantx=&lt;n&gt;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Enable<sp/>instantx,<sp/>show<sp/>confirmations<sp/>for<sp/>locked<sp/>transactions<sp/>(0-1,<sp/>default:<sp/>%u)&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-instantxdepth=&lt;n&gt;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Show<sp/>N<sp/>confirmations<sp/>for<sp/>a<sp/>successfully<sp/>locked<sp/>transaction<sp/>(0-9999,<sp/>default:<sp/>%u)&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" kindref="member">nInstantXDepth</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Secure<sp/>messaging<sp/>options:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-nosmsg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Disable<sp/>secure<sp/>messaging.&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-debugsmsg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Log<sp/>extra<sp/>debug<sp/>messages.&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-smsgscanchain<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Scan<sp/>the<sp/>block<sp/>chain<sp/>for<sp/>public<sp/>key<sp/>addresses<sp/>on<sp/>startup.&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strUsage;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="init_8cpp_1a878797b40fb8eb0d7f330a41d7742d11" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a878797b40fb8eb0d7f330a41d7742d11" kindref="member">InitSanityCheck</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="key_8cpp_1adc8d142f5bcd2ca6646462fb45a7945d" kindref="member">ECC_InitSanityCheck</ref>())<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitError(</highlight><highlight class="stringliteral">&quot;OpenSSL<sp/>appears<sp/>to<sp/>lack<sp/>support<sp/>for<sp/>elliptic<sp/>curve<sp/>cryptography.<sp/>For<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;information,<sp/>visit<sp/>https://en.darksilk.it/wiki/OpenSSL_and_EC_Libraries&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>remaining<sp/>sanity<sp/>checks,<sp/>see<sp/>#4081</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" kindref="member">AppInit2</ref>(boost::thread_group&amp;<sp/>threadGroup)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>1:<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>Microsoft<sp/>heap<sp/>dump<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>_CrtSetReportMode(_CRT_WARN,<sp/>_CRTDBG_MODE_FILE);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>_CrtSetReportFile(_CRT_WARN,<sp/>CreateFileA(</highlight><highlight class="stringliteral">&quot;NUL&quot;</highlight><highlight class="normal">,<sp/>GENERIC_WRITE,<sp/>0,<sp/>NULL,<sp/>OPEN_EXISTING,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MSC_VER<sp/>&gt;=<sp/>1400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>confusing<sp/>&quot;helpful&quot;<sp/>text<sp/>message<sp/>on<sp/>abort,<sp/>Ctrl-C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>_set_abort_behavior(0,<sp/>_WRITE_ABORT_MSG<sp/>|<sp/>_CALL_REPORTFAULT);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>Data<sp/>Execution<sp/>Prevention<sp/>(DEP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>supported<sp/>OS<sp/>versions:<sp/>WinXP<sp/>SP3,<sp/>WinVista<sp/>&gt;=<sp/>SP1,<sp/>Win<sp/>Server<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>failure<sp/>is<sp/>non-critical<sp/>and<sp/>needs<sp/>no<sp/>further<sp/>attention!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PROCESS_DEP_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>define<sp/>this<sp/>here,<sp/>because<sp/>GCCs<sp/>winbase.h<sp/>limits<sp/>this<sp/>to<sp/>_WIN32_WINNT<sp/>&gt;=<sp/>0x0601<sp/>(Windows<sp/>7),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>not<sp/>correct.<sp/>Can<sp/>be<sp/>removed,<sp/>when<sp/>GCCs<sp/>winbase.h<sp/>is<sp/>fixed!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROCESS_DEP_ENABLE<sp/>0x00000001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>BOOL<sp/>(WINAPI<sp/>*PSETPROCDEPPOL)(DWORD);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>PSETPROCDEPPOL<sp/>setProcDEPPol<sp/>=<sp/>(PSETPROCDEPPOL)GetProcAddress(GetModuleHandleA(</highlight><highlight class="stringliteral">&quot;Kernel32.dll&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;SetProcessDEPPolicy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setProcDEPPol<sp/>!=<sp/>NULL)<sp/>setProcDEPPol(PROCESS_DEP_ENABLE);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>Windows<sp/>Sockets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>WSADATA<sp/>wsadata;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>WSAStartup(MAKEWORD(2,2),<sp/>&amp;wsadata);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>NO_ERROR<sp/>||<sp/>LOBYTE(wsadata.wVersion<sp/>)<sp/>!=<sp/>2<sp/>||<sp/>HIBYTE(wsadata.wVersion)<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Winsock<sp/>library<sp/>failed<sp/>to<sp/>start<sp/>(WSAStartup<sp/>returned<sp/>error<sp/>%d)&quot;</highlight><highlight class="normal">,<sp/>ret));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-sysperms&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-disablewallet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(</highlight><highlight class="stringliteral">&quot;Error:<sp/>-sysperms<sp/>is<sp/>not<sp/>allowed<sp/>in<sp/>combination<sp/>with<sp/>enabled<sp/>wallet<sp/>functionality&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>umask(077);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>shutdown<sp/>on<sp/>SIGTERM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sa;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>sa.sa_handler<sp/>=<sp/><ref refid="init_8cpp_1ad59c5cbbe3bdf4fa36f3b7480da8d6ba" kindref="member">HandleSIGTERM</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(&amp;sa.sa_mask);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>sa.sa_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGTERM,<sp/>&amp;sa,<sp/>NULL);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGINT,<sp/>&amp;sa,<sp/>NULL);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reopen<sp/>debug.log<sp/>on<sp/>SIGHUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sa_hup;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>sa_hup.sa_handler<sp/>=<sp/><ref refid="init_8cpp_1a70b23efd8d46bc8c627e5c241f0d7716" kindref="member">HandleSIGHUP</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(&amp;sa_hup.sa_mask);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>sa_hup.sa_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGHUP,<sp/>&amp;sa_hup,<sp/>NULL);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__SVR4)<sp/>&amp;&amp;<sp/>defined<sp/>(__sun)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>SIGPIPE<sp/>on<sp/>Solaris</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGPIPE,<sp/>SIG_IGN);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>2:<sp/>parameter<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(<ref refid="i2p_8h_1a7941cc36eb7258154bd3ae870485729d" kindref="member">I2P_SAM_GENERATE_DESTINATION_PARAM</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">SAM::FullDestination</ref><sp/>generatedDest<sp/>=<sp/><ref refid="class_i2_p_session_1a0b2a285f34224a7fdc8ffcb0d1f6d48e" kindref="member">I2PSession::Instance</ref>().<ref refid="class_s_a_m_1_1_stream_session_adapter_1a62c02a359e9e36459f13180189bed974" kindref="member">destGenerate</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uiInterface.ThreadSafeShowGeneratedI2PAddress(</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Generated<sp/>I2P<sp/>address&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generatedDest.<ref refid="struct_s_a_m_1_1_full_destination_1abd0be9a7b3b430ca750f1e876f2d6b4b" kindref="member">pub</ref>,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generatedDest.<ref refid="struct_s_a_m_1_1_full_destination_1a9ce0281e2f9cd55dcfc773c7fbd09f0f" kindref="member">priv</ref>,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i2_p_session_1a4daa60a1a5767f354ebc5af8cabc4691" kindref="member">I2PSession::GenerateB32AddressFromDestination</ref>(generatedDest.<ref refid="struct_s_a_m_1_1_full_destination_1abd0be9a7b3b430ca750f1e876f2d6b4b" kindref="member">pub</ref>),</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a7d86fadf98dfaba55f80b9be0ab0f978" kindref="member">GetConfigFile</ref>().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1afdd10e8c0a44aad0b719c365fa3bb458" kindref="member">nNodeLifespan</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-addrlifespan&quot;</highlight><highlight class="normal">,<sp/>7);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1ad316d89326f17948a58ad3cdf23850a5" kindref="member">fUseFastIndex</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-fastindex&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1abb57d52de7c99ac76f7020624a7565fd" kindref="member">nMinerSleep</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-minersleep&quot;</highlight><highlight class="normal">,<sp/>500);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a3e3a4daba510b75f09387695c6c8a11f" kindref="member">nDerivationMethodIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="chainparams_8cpp_1a8b1e95814ad8f7fbcd9dead5cae3783d" kindref="member">SelectParamsFromCommandLine</ref>())<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>use<sp/>of<sp/>-testnet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-bind&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>specifying<sp/>an<sp/>explicit<sp/>binding<sp/>address,<sp/>you<sp/>want<sp/>to<sp/>listen<sp/>on<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>when<sp/>-connect<sp/>or<sp/>-proxy<sp/>is<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-listen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-bind<sp/>set<sp/>-&gt;<sp/>setting<sp/>-listen=1\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-connect&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" kindref="member">mapMultiArgs</ref>[</highlight><highlight class="stringliteral">&quot;-connect&quot;</highlight><highlight class="normal">].size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>only<sp/>connecting<sp/>to<sp/>trusted<sp/>nodes,<sp/>do<sp/>not<sp/>seed<sp/>via<sp/>DNS,<sp/>or<sp/>listen<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-dnsseed&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-connect<sp/>set<sp/>-&gt;<sp/>setting<sp/>-dnsseed=0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-listen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-connect<sp/>set<sp/>-&gt;<sp/>setting<sp/>-listen=0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-proxy&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>protect<sp/>privacy,<sp/>do<sp/>not<sp/>listen<sp/>by<sp/>default<sp/>if<sp/>a<sp/>default<sp/>proxy<sp/>server<sp/>is<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-listen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-proxy<sp/>set<sp/>-&gt;<sp/>setting<sp/>-listen=0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>protect<sp/>privacy,<sp/>do<sp/>not<sp/>discover<sp/>addresses<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-discover&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-proxy<sp/>set<sp/>-&gt;<sp/>setting<sp/>-discover=0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-listen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>map<sp/>ports<sp/>or<sp/>try<sp/>to<sp/>retrieve<sp/>public<sp/>IP<sp/>when<sp/>not<sp/>listening<sp/>(pointless)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-upnp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-listen=0<sp/>-&gt;<sp/>setting<sp/>-upnp=0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-discover&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-listen=0<sp/>-&gt;<sp/>setting<sp/>-discover=0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-externalip&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>an<sp/>explicit<sp/>public<sp/>IP<sp/>is<sp/>specified,<sp/>do<sp/>not<sp/>try<sp/>to<sp/>find<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-discover&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-externalip<sp/>set<sp/>-&gt;<sp/>setting<sp/>-discover=0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-salvagewallet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rewrite<sp/>just<sp/>private<sp/>keys:<sp/>rescan<sp/>to<sp/>find<sp/>transactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-rescan&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-salvagewallet=1<sp/>-&gt;<sp/>setting<sp/>-rescan=1\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-enableinstantx&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1acb212e467afc6516452e15829eeb58d5" kindref="member">fEnableInstantX</ref>)){</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a9d94ca9f7c1496626992d1873e3f69df" kindref="member">SoftSetArg</ref>(</highlight><highlight class="stringliteral">&quot;-instantxdepth&quot;</highlight><highlight class="normal">,<sp/>0))</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-enableinstantx=false<sp/>-&gt;<sp/>setting<sp/>-nInstantXDepth=0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-liquidityprovider&quot;</highlight><highlight class="normal">,<sp/>0)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLiqProvTmp<sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-liquidityprovider&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-enablesandstorm&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-liquidityprovider=%d<sp/>-&gt;<sp/>setting<sp/>-enablesandstorm=1\n&quot;</highlight><highlight class="normal">,<sp/>nLiqProvTmp);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-sandstormrounds&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;99999&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-liquidityprovider=%d<sp/>-&gt;<sp/>setting<sp/>-sandstormrounds=99999\n&quot;</highlight><highlight class="normal">,<sp/>nLiqProvTmp);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-anonymizedarksilkamount&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;999999&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-liquidityprovider=%d<sp/>-&gt;<sp/>setting<sp/>-anonymizedarksilkamount=999999\n&quot;</highlight><highlight class="normal">,<sp/>nLiqProvTmp);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-sandstormmultisession&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AppInit2<sp/>:<sp/>parameter<sp/>interaction:<sp/>-liquidityprovider=%d<sp/>-&gt;<sp/>setting<sp/>-sandstormmultisession=0\n&quot;</highlight><highlight class="normal">,<sp/>nLiqProvTmp);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>3:<sp/>parameter-to-internal-flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref><sp/>=<sp/>!<ref refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" kindref="member">mapMultiArgs</ref>[</highlight><highlight class="stringliteral">&quot;-debug&quot;</highlight><highlight class="normal">].empty();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special-case:<sp/>if<sp/>-debug=0/-nodebug<sp/>is<sp/>set,<sp/>turn<sp/>off<sp/>debugging<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;string&gt;&amp;<sp/>categories<sp/>=<sp/><ref refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" kindref="member">mapMultiArgs</ref>[</highlight><highlight class="stringliteral">&quot;-debug&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-nodebug&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>||<sp/>find(categories.begin(),<sp/>categories.end(),<sp/>string(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>categories.end())</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-debugsmsg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a49ade2b91028ff037557259b0729b049" kindref="member">fNoSmsg</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-nosmsg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>-debugnet<sp/>(deprecated)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-debugnet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitWarning(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>Deprecated<sp/>argument<sp/>-debugnet<sp/>ignored,<sp/>use<sp/>-debug=net&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>-socks<sp/>-<sp/>as<sp/>this<sp/>is<sp/>a<sp/>privacy<sp/>risk<sp/>to<sp/>continue,<sp/>exit<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-socks&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Unsupported<sp/>argument<sp/>-socks<sp/>found.<sp/>Setting<sp/>SOCKS<sp/>version<sp/>isn&apos;t<sp/>possible<sp/>anymore,<sp/>only<sp/>SOCKS5<sp/>proxies<sp/>are<sp/>supported.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a2839c7c01ad9d90fbd3ce55d32b50c6f" kindref="member">fServer</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-server&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a9d6b03a0dcc515a84e620794e64b9547" kindref="member">fPrintToConsole</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-printtoconsole&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1ae1c7830d95f75ba35fbc6bfa50509913" kindref="member">fPrintToDebugLog</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-printtodebuglog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!<ref refid="util_8cpp_1a9d6b03a0dcc515a84e620794e64b9547" kindref="member">fPrintToConsole</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa5e7caf6936a9a94eb088f04bcc62b97" kindref="member">fLogTimestamps</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-logtimestamps&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDisableWallet<sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-disablewallet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-timeout&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNewTimeout<sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-timeout&quot;</highlight><highlight class="normal">,<sp/>5000);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nNewTimeout<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>nNewTimeout<sp/>&lt;<sp/>600000)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="netbase_8cpp_1ac8115c6e2874217f2e487b5391cbe963" kindref="member">nConnectTimeout</ref><sp/>=<sp/>nNewTimeout;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-paytxfee&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a9ebffff9292ea77a3801d29ae2f23572" kindref="member">ParseMoney</ref>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-paytxfee&quot;</highlight><highlight class="normal">],<sp/><ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref>))</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>amount<sp/>for<sp/>-paytxfee=&lt;amount&gt;:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-paytxfee&quot;</highlight><highlight class="normal">]));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref><sp/>&gt;<sp/>0.25<sp/>*<sp/>COIN)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitWarning(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>-paytxfee<sp/>is<sp/>set<sp/>very<sp/>high!<sp/>This<sp/>is<sp/>the<sp/>transaction<sp/>fee<sp/>you<sp/>will<sp/>pay<sp/>if<sp/>you<sp/>send<sp/>a<sp/>transaction.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref><sp/>=<sp/><ref refid="wallet_8h_1add67e95cd66a980b74a7a2f434d9cf1c" kindref="member">MIN_TX_FEE</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1aacdc0cc923bcbbe612f7975b56e05d18" kindref="member">fConfChange</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-confchange&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1ad32c5d94e1b12cb49fc73deca3f3068f" kindref="member">fMinimizeCoinAge</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-minimizecoinage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-mininput&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a9ebffff9292ea77a3801d29ae2f23572" kindref="member">ParseMoney</ref>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-mininput&quot;</highlight><highlight class="normal">],<sp/><ref refid="wallet_8cpp_1a6161012435f37404c65527606c4e0c3d" kindref="member">nMinimumInputValue</ref>))</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>amount<sp/>for<sp/>-mininput=&lt;amount&gt;:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-mininput&quot;</highlight><highlight class="normal">]));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>elliptic<sp/>curve<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="key_8cpp_1ae4d2893f2f5af1cca247516578171860" kindref="member">ECC_Start</ref>();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>globalVerifyHandle.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_e_c_c_verify_handle" kindref="compound">ECCVerifyHandle</ref>());</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>4:<sp/>application<sp/>initialization:<sp/>dir<sp/>lock,<sp/>daemonize,<sp/>pidfile,<sp/>debug<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="init_8cpp_1a878797b40fb8eb0d7f330a41d7742d11" kindref="member">InitSanityCheck</ref>())</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Initialization<sp/>sanity<sp/>check<sp/>failed.<sp/>DarkSilk<sp/>is<sp/>shutting<sp/>down.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strDataDir<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>().string();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strWalletFileName<sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-wallet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wallet.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>strWalletFileName<sp/>must<sp/>be<sp/>a<sp/>plain<sp/>filename<sp/>without<sp/>a<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strWalletFileName<sp/>!=<sp/>boost::filesystem::basename(strWalletFileName)<sp/>+<sp/>boost::filesystem::extension(strWalletFileName))</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Wallet<sp/>%s<sp/>resides<sp/>outside<sp/>data<sp/>directory<sp/>%s.&quot;</highlight><highlight class="normal">),<sp/>strWalletFileName,<sp/>strDataDir));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>only<sp/>a<sp/>single<sp/>DarkSilk<sp/>process<sp/>is<sp/>using<sp/>the<sp/>data<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::filesystem::path<sp/>pathLockFile<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;.lock&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file<sp/>=<sp/>fopen(pathLockFile.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>empty<sp/>lock<sp/>file;<sp/>created<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file)<sp/>fclose(file);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::interprocess::file_lock<sp/>lock(pathLockFile.string().c_str());</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lock.try_lock())</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>obtain<sp/>a<sp/>lock<sp/>on<sp/>data<sp/>directory<sp/>%s.<sp/>DarkSilk<sp/>is<sp/>probably<sp/>already<sp/>running.&quot;</highlight><highlight class="normal">),<sp/>strDataDir));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-shrinkdebugfile&quot;</highlight><highlight class="normal">,<sp/>!<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>))</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a37fca7e305fe0caa306b23fdb37f88e2" kindref="member">ShrinkDebugFile</ref>();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;\n\n\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//A<sp/>bit<sp/>excessive???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>version<sp/>%s<sp/>(%s)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" kindref="member">FormatFullVersion</ref>(),<sp/><ref refid="version_8h_1a9d36ad6318ca298d6b7d38701212ce20" kindref="member">CLIENT_DATE</ref>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Using<sp/>OpenSSL<sp/>version<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>SSLeay_version(SSLEAY_VERSION));</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1aa5e7caf6936a9a94eb088f04bcc62b97" kindref="member">fLogTimestamps</ref>)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Startup<sp/>time:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(</highlight><highlight class="stringliteral">&quot;%x<sp/>%H:%M:%S&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Default<sp/>data<sp/>directory<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1ab272995de020a3bcbf743be630e485c6" kindref="member">GetDefaultDataDir</ref>().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Used<sp/>data<sp/>directory<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strDataDir);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>strErrors;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-sporkkey&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="comment">//<sp/>spork<sp/>priv<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="spork_8cpp_1af6873019c3095ea6b554795e4040395c" kindref="member">sporkManager</ref>.<ref refid="class_c_spork_manager_1a599d088218de9d242e4dc5cb17dd310b" kindref="member">SetPrivKey</ref>(<ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-sporkkey&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>sign<sp/>spork<sp/>message,<sp/>wrong<sp/>key?&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ignore<sp/>stormnodes<sp/>below<sp/>protocol<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a87d1153c97b6c99fdad9a30af07fed6e" kindref="member">nStormnodeMinProtocol</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-stormnodeminprotocol&quot;</highlight><highlight class="normal">,<sp/>MIN_SN_PROTO_VERSION);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::filesystem::path<sp/>est_path<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/>FEE_ESTIMATES_FILENAME;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref><sp/>est_filein(fopen(est_path.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">),<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allowed<sp/>to<sp/>fail<sp/>as<sp/>this<sp/>file<sp/>IS<sp/>missing<sp/>on<sp/>first<sp/>startup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!est_filein.<ref refid="class_c_auto_file_1a78d666b1ef5dff5fd3f4ee33692b6d1d" kindref="member">IsNull</ref>())</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a0dbbcb6a3b7e1a6c564410668c12cd4f" kindref="member">ReadFeeEstimates</ref>(est_filein);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a6e1f612c12531e241e96cc04ffaebfd4" kindref="member">fFeeEstimatesInitialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>5:<sp/>verify<sp/>database<sp/>integrity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fDisableWallet)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Verifying<sp/>database<sp/>integrity...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="db_8cpp_1a0e3d95be19da4a302447fa44703b1979" kindref="member">bitdb</ref>.<ref refid="class_c_d_b_env_1a1a81be1585305e5cedd2bccd6c7570c3" kindref="member">Open</ref>(<ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()))</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>moving<sp/>the<sp/>database<sp/>env<sp/>out<sp/>of<sp/>the<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::path<sp/>pathDatabase<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;database&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::path<sp/>pathDatabaseBak<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;database.%d.bak&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>());</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::filesystem::rename(pathDatabase,<sp/>pathDatabaseBak);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Moved<sp/>old<sp/>%s<sp/>to<sp/>%s.<sp/>Retrying.\n&quot;</highlight><highlight class="normal">,<sp/>pathDatabase.string(),<sp/>pathDatabaseBak.string());</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(boost::filesystem::filesystem_error<sp/>&amp;error)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>failure<sp/>is<sp/>ok<sp/>(well,<sp/>not<sp/>really,<sp/>but<sp/>it&apos;s<sp/>not<sp/>worse<sp/>than<sp/>what<sp/>we<sp/>started<sp/>with)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="db_8cpp_1a0e3d95be19da4a302447fa44703b1979" kindref="member">bitdb</ref>.<ref refid="class_c_d_b_env_1a1a81be1585305e5cedd2bccd6c7570c3" kindref="member">Open</ref>(<ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>still<sp/>fails,<sp/>it<sp/>probably<sp/>means<sp/>we<sp/>can&apos;t<sp/>even<sp/>create<sp/>the<sp/>database<sp/>env</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>initializing<sp/>wallet<sp/>database<sp/>environment<sp/>%s!&quot;</highlight><highlight class="normal">),<sp/>strDataDir);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(msg);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-salvagewallet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recover<sp/>readable<sp/>keypairs:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_wallet_d_b_1a3ebeb12f37d9c66512e2bc2903a6854a" kindref="member">CWalletDB::Recover</ref>(<ref refid="db_8cpp_1a0e3d95be19da4a302447fa44703b1979" kindref="member">bitdb</ref>,<sp/>strWalletFileName,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filesystem::exists(<ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/>strWalletFileName))</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_d_b_env_1a6fbf26da5d7f8f64a77a3ba15e4df244" kindref="member">CDBEnv::VerifyResult</ref><sp/>r<sp/>=<sp/><ref refid="db_8cpp_1a0e3d95be19da4a302447fa44703b1979" kindref="member">bitdb</ref>.<ref refid="class_c_d_b_env_1a9d04604da4ad6f063e150b34d5df392d" kindref="member">Verify</ref>(strWalletFileName,<sp/><ref refid="class_c_wallet_d_b_1a3ebeb12f37d9c66512e2bc2903a6854a" kindref="member">CWalletDB::Recover</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/><ref refid="class_c_d_b_env_1a6fbf26da5d7f8f64a77a3ba15e4df244a25eebe1e7f52e4e07a4c9b1e6abc4274" kindref="member">CDBEnv::RECOVER_OK</ref>)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>wallet.dat<sp/>corrupt,<sp/>data<sp/>salvaged!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Original<sp/>wallet.dat<sp/>saved<sp/>as<sp/>wallet.{timestamp}.bak<sp/>in<sp/>%s;<sp/>if&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>your<sp/>balance<sp/>or<sp/>transactions<sp/>are<sp/>incorrect<sp/>you<sp/>should&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>restore<sp/>from<sp/>a<sp/>backup.&quot;</highlight><highlight class="normal">),<sp/>strDataDir);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitWarning(msg);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/><ref refid="class_c_d_b_env_1a6fbf26da5d7f8f64a77a3ba15e4df244a0c9f58677b786e700258e8ad29579d75" kindref="member">CDBEnv::RECOVER_FAIL</ref>)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;wallet.dat<sp/>corrupt,<sp/>salvage<sp/>failed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>(!fDisableWallet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>6:<sp/>network<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1ab02615ff65f91d69f8d786ec900baa8a" kindref="member">RegisterNodeSignals</ref>(<ref refid="net_8cpp_1a475f2fc7d8f5cd7511db253cae8fe28a" kindref="member">GetNodeSignals</ref>());</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-onlynet&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;enum<sp/>Network&gt;<sp/>nets;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(std::string<sp/>snet,<sp/><ref refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" kindref="member">mapMultiArgs</ref>[</highlight><highlight class="stringliteral">&quot;-onlynet&quot;</highlight><highlight class="normal">])<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3" kindref="member">Network</ref><sp/>net<sp/>=<sp/><ref refid="netbase_8cpp_1a1d5be927f8f03e9fdb405a278374cb8d" kindref="member">ParseNetwork</ref>(snet);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(net<sp/>==<sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9defff41db522fc865d58fc4e7646e9f" kindref="member">NET_TOR</ref>)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a43c1918fef61f5c3105f03f9b190717e" kindref="member">fOnlyTor</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net<sp/>==<sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3af66f60a80e2a5d99813c3f322cf8a6e1" kindref="member">NET_UNROUTABLE</ref>)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>network<sp/>specified<sp/>in<sp/>-onlynet:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/>snet));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nets.insert(net);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a675b0737d6c404a5de25e324c166a4b5" kindref="member">NET_MAX</ref>;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3" kindref="member">Network</ref><sp/>net<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3" kindref="member">Network</ref>)n;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nets.count(net))</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a2f6d62a9d456bf38003df3815b707f46" kindref="member">SetLimited</ref>(net);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>addrProxy;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fProxy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-proxy&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addrProxy<sp/>=<sp/><ref refid="class_c_service" kindref="compound">CService</ref>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-proxy&quot;</highlight><highlight class="normal">],<sp/>9050);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrProxy.<ref refid="class_c_net_addr_1a52a1b506f07e5450057e12a8b5a7fbcd" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>-proxy<sp/>address:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-proxy&quot;</highlight><highlight class="normal">]));</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="net_8cpp_1a96eb2fba6d80870802ac787b6ada4beb" kindref="member">IsLimited</ref>(<ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3ae1598b317168b96919bc3131ee149ebb" kindref="member">NET_IPV4</ref>))</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="netbase_8cpp_1a3b85c9f702a45e80d9b6bfbe78c4bf12" kindref="member">SetProxy</ref>(<ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3ae1598b317168b96919bc3131ee149ebb" kindref="member">NET_IPV4</ref>,<sp/>addrProxy);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="net_8cpp_1a96eb2fba6d80870802ac787b6ada4beb" kindref="member">IsLimited</ref>(<ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9a9d9355a4923b33382f9894ba80688d" kindref="member">NET_IPV6</ref>))</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="netbase_8cpp_1a3b85c9f702a45e80d9b6bfbe78c4bf12" kindref="member">SetProxy</ref>(<ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9a9d9355a4923b33382f9894ba80688d" kindref="member">NET_IPV6</ref>,<sp/>addrProxy);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="netbase_8cpp_1a5f78099167609daf40193a0717f96f87" kindref="member">SetNameProxy</ref>(addrProxy);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProxy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-tor<sp/>can<sp/>override<sp/>normal<sp/>proxy,<sp/>-notor<sp/>disables<sp/>tor<sp/>entirely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-tor&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-tor&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(fProxy<sp/>||<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-tor&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>addrOnion;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-tor&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addrOnion<sp/>=<sp/>addrProxy;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addrOnion<sp/>=<sp/><ref refid="class_c_service" kindref="compound">CService</ref>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-tor&quot;</highlight><highlight class="normal">],<sp/>9050);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrOnion.<ref refid="class_c_net_addr_1a52a1b506f07e5450057e12a8b5a7fbcd" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>-tor<sp/>address:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-tor&quot;</highlight><highlight class="normal">]));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="netbase_8cpp_1a3b85c9f702a45e80d9b6bfbe78c4bf12" kindref="member">SetProxy</ref>(<ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9defff41db522fc865d58fc4e7646e9f" kindref="member">NET_TOR</ref>,<sp/>addrOnion);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a89098b55df7d627a7a3c7f367cae24e6" kindref="member">SetReachable</ref>(<ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9defff41db522fc865d58fc4e7646e9f" kindref="member">NET_TOR</ref>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>Step<sp/>2:<sp/>parameter<sp/>interactions<sp/>for<sp/>more<sp/>information<sp/>about<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a53f30a9fc322fa65a5c4e3732e4ad410" kindref="member">fNoListen</ref><sp/>=<sp/>!<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-listen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a37089835ec27ad8bf945a458708165b9" kindref="member">fDiscover</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-discover&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="netbase_8cpp_1ab5335ec17aee4d4fdd4c735b85707b56" kindref="member">fNameLookup</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-dns&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fBound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a53f30a9fc322fa65a5c4e3732e4ad410" kindref="member">fNoListen</ref>)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strError;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-bind&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(std::string<sp/>strBind,<sp/><ref refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" kindref="member">mapMultiArgs</ref>[</highlight><highlight class="stringliteral">&quot;-bind&quot;</highlight><highlight class="normal">])<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>addrBind;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="netbase_8cpp_1a56a2f4bcb9fb77b5efe358f804f642cc" kindref="member">Lookup</ref>(strBind.c_str(),<sp/>addrBind,<sp/><ref refid="net_8cpp_1af6d341a24d761a509fca026458cf2f72" kindref="member">GetListenPort</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>resolve<sp/>-bind<sp/>address:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/>strBind));</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fBound<sp/>|=<sp/>Bind(addrBind);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">in_addr<sp/>inaddr_any;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inaddr_any.s_addr<sp/>=<sp/>INADDR_ANY;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="net_8cpp_1a96eb2fba6d80870802ac787b6ada4beb" kindref="member">IsLimited</ref>(<ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3a9a9d9355a4923b33382f9894ba80688d" kindref="member">NET_IPV6</ref>))</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fBound<sp/>|=<sp/>Bind(<ref refid="class_c_service" kindref="compound">CService</ref>(in6addr_any,<sp/><ref refid="net_8cpp_1af6d341a24d761a509fca026458cf2f72" kindref="member">GetListenPort</ref>()),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="net_8cpp_1a96eb2fba6d80870802ac787b6ada4beb" kindref="member">IsLimited</ref>(<ref refid="netbase_8h_1acc9a38c714afe79b5035cb36f560dac3ae1598b317168b96919bc3131ee149ebb" kindref="member">NET_IPV4</ref>))</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fBound<sp/>|=<sp/>Bind(<ref refid="class_c_service" kindref="compound">CService</ref>(inaddr_any,<sp/><ref refid="net_8cpp_1af6d341a24d761a509fca026458cf2f72" kindref="member">GetListenPort</ref>()),<sp/>!fBound);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="net_8cpp_1a96eb2fba6d80870802ac787b6ada4beb" kindref="member">IsLimited</ref>(NET_NATIVE_I2P))</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fBound<sp/>|=<sp/>BindNativeI2P();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fBound)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>listen<sp/>on<sp/>any<sp/>port.<sp/>Use<sp/>-listen=0<sp/>if<sp/>you<sp/>want<sp/>this.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-externalip&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strAddr,<sp/><ref refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" kindref="member">mapMultiArgs</ref>[</highlight><highlight class="stringliteral">&quot;-externalip&quot;</highlight><highlight class="normal">])<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>addrLocal(strAddr,<sp/><ref refid="net_8cpp_1af6d341a24d761a509fca026458cf2f72" kindref="member">GetListenPort</ref>(),<sp/><ref refid="netbase_8cpp_1ab5335ec17aee4d4fdd4c735b85707b56" kindref="member">fNameLookup</ref>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrLocal.<ref refid="class_c_net_addr_1a52a1b506f07e5450057e12a8b5a7fbcd" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>resolve<sp/>-externalip<sp/>address:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/>strAddr));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1abb92a02eecc581e8927c8a6e31968645" kindref="member">AddLocal</ref>(<ref refid="class_c_service" kindref="compound">CService</ref>(strAddr,<sp/><ref refid="net_8cpp_1af6d341a24d761a509fca026458cf2f72" kindref="member">GetListenPort</ref>(),<sp/><ref refid="netbase_8cpp_1ab5335ec17aee4d4fdd4c735b85707b56" kindref="member">fNameLookup</ref>),<sp/><ref refid="net_8h_1a385c44f6fb256e5716a2302a5b940388a85f937846a9820dce1ac928efee52a91" kindref="member">LOCAL_MANUAL</ref>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-reservebalance&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="comment">//<sp/>ppcoin:<sp/>reserve<sp/>balance<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a9ebffff9292ea77a3801d29ae2f23572" kindref="member">ParseMoney</ref>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-reservebalance&quot;</highlight><highlight class="normal">],<sp/><ref refid="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" kindref="member">nReserveBalance</ref>))</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>amount<sp/>for<sp/>-reservebalance=&lt;amount&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strDest,<sp/><ref refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" kindref="member">mapMultiArgs</ref>[</highlight><highlight class="stringliteral">&quot;-seednode&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a5230a9dcbf8f7663e386b358f8d2fdc8" kindref="member">AddOneShot</ref>(strDest);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>7:<sp/>load<sp/>blockchain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-loadblockindextest&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txdb.<ref refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" kindref="member">LoadBlockIndex</ref>();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aac88c75e65aa0dee60e4332dbcc16120" kindref="member">PrintBlockTree</ref>();</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>block<sp/>index...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>size<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nTotalCache<sp/>=<sp/>(<ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-dbcache&quot;</highlight><highlight class="normal">,<sp/>nDefaultDbCache)<sp/>&lt;&lt;<sp/>20);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTotalCache<sp/>&lt;<sp/>(nMinDbCache<sp/>&lt;&lt;<sp/>20))</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalCache<sp/>=<sp/>(nMinDbCache<sp/>&lt;&lt;<sp/>20);<sp/></highlight><highlight class="comment">//<sp/>total<sp/>cache<sp/>cannot<sp/>be<sp/>less<sp/>than<sp/>nMinDbCache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTotalCache<sp/>&gt;<sp/>(nMaxDbCache<sp/>&lt;&lt;<sp/>20))</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalCache<sp/>=<sp/>(nMaxDbCache<sp/>&lt;&lt;<sp/>20);<sp/></highlight><highlight class="comment">//<sp/>total<sp/>cache<sp/>cannot<sp/>be<sp/>greater<sp/>than<sp/>nMaxDbCache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBlockTreeDBCache<sp/>=<sp/>nTotalCache<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBlockTreeDBCache<sp/>&gt;<sp/>(1<sp/>&lt;&lt;<sp/>21)<sp/>&amp;&amp;<sp/>!<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-txindex&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlockTreeDBCache<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>21);<sp/></highlight><highlight class="comment">//<sp/>block<sp/>tree<sp/>db<sp/>cache<sp/>shouldn&apos;t<sp/>be<sp/>larger<sp/>than<sp/>2<sp/>MiB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>nTotalCache<sp/>-=<sp/>nBlockTreeDBCache;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nCoinDBCache<sp/>=<sp/>nTotalCache<sp/>/<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>half<sp/>of<sp/>the<sp/>remaining<sp/>cache<sp/>for<sp/>coindb<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>nTotalCache<sp/>-=<sp/>nCoinDBCache;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a08b980f03b2fb15445e0ddc8bb4b3d73" kindref="member">nCoinCacheSize</ref><sp/>=<sp/>nTotalCache<sp/>/<sp/>300;<sp/></highlight><highlight class="comment">//<sp/>coins<sp/>in<sp/>memory<sp/>require<sp/>around<sp/>300<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="main_8cpp_1af94b2ea9be1ac00e564bc30492e39783" kindref="member">LoadBlockIndex</ref>())</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>block<sp/>database&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fLoaded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!fLoaded)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>fReset<sp/>=<sp/>fReindex;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strLoadError;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>block<sp/>index...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1ac98b87e479f71b7be2b990a10c4ebc2d" kindref="member">UnloadBlockIndex</ref>();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a1821834b8f7837b469f7f91a14c20042" kindref="member">pcoinsTip</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pcoinsdbview;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pcoinscatcher;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a0023503503c358eda0c97a576ef53fde" kindref="member">pblocktree</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pblocktree<sp/>=<sp/>new<sp/>CBlockTreeDB(nBlockTreeDBCache,<sp/>false,<sp/>fReindex);<sp/>//TODO<sp/>(Amir)<sp/>Put<sp/>pblocktree<sp/>new<sp/>back.<sp/>causes<sp/>segfault.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcoinsdbview<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_d_b" kindref="compound">CCoinsViewDB</ref>(nCoinDBCache,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a8e0eca589b2d4254a65f04c5d91888b2" kindref="member">fReindex</ref>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcoinscatcher<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_error_catcher" kindref="compound">CCoinsViewErrorCatcher</ref>(pcoinsdbview);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a1821834b8f7837b469f7f91a14c20042" kindref="member">pcoinsTip</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache" kindref="compound">CCoinsViewCache</ref>(pcoinscatcher);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1a8e0eca589b2d4254a65f04c5d91888b2" kindref="member">fReindex</ref>)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a0023503503c358eda0c97a576ef53fde" kindref="member">pblocktree</ref>-&gt;<ref refid="class_c_block_tree_d_b_1a8fa5d150b98f4fd1aa8cf503eddfccef" kindref="member">WriteReindexing</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="main_8cpp_1af94b2ea9be1ac00e564bc30492e39783" kindref="member">LoadBlockIndex</ref>())<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strLoadError<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>block<sp/>database&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>loaded<sp/>chain<sp/>has<sp/>a<sp/>wrong<sp/>genesis,<sp/>bail<sp/>out<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(we&apos;re<sp/>likely<sp/>using<sp/>a<sp/>testnet<sp/>datadir,<sp/>or<sp/>the<sp/>other<sp/>way<sp/>around).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.empty()<sp/>&amp;&amp;<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.count(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().HashGenesisBlock())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>or<sp/>no<sp/>genesis<sp/>block<sp/>found.<sp/>Wrong<sp/>datadir<sp/>for<sp/>network?&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>block<sp/>index<sp/>(no-op<sp/>if<sp/>non-empty<sp/>database<sp/>was<sp/>already<sp/>loaded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="main_8cpp_1a92e5e1fcbd56cc44c27d39b64da8a79a" kindref="member">InitBlockIndex</ref>())<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strLoadError<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>initializing<sp/>block<sp/>database&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>changed<sp/>-txindex<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1a6b569217f0bbb0a69a42c8769df06a06" kindref="member">fTxIndex</ref><sp/>!=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-txindex&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strLoadError<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>need<sp/>to<sp/>rebuild<sp/>the<sp/>database<sp/>using<sp/>-reindex<sp/>to<sp/>change<sp/>-txindex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Verifying<sp/>blocks...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_verify_d_b" kindref="compound">CVerifyDB</ref>().VerifyDB(pcoinsdbview,<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-checklevel&quot;</highlight><highlight class="normal">,<sp/>3),</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-checkblocks&quot;</highlight><highlight class="normal">,<sp/>288)))<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strLoadError<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Corrupted<sp/>block<sp/>database<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strLoadError<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>block<sp/>database&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fLoaded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>implement<sp/>reindex<sp/>on<sp/>load<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(!fLoaded)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>first<sp/>suggest<sp/>a<sp/>reindex</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!fReset)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>fRet<sp/>=<sp/>uiInterface.ThreadSafeMessageBox(</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strLoadError<sp/>+<sp/>&quot;.\n\n&quot;<sp/>+<sp/>_(&quot;Do<sp/>you<sp/>want<sp/>to<sp/>rebuild<sp/>the<sp/>block<sp/>database<sp/>now?&quot;),<sp/>&quot;&quot;,<sp/>CClientUIInterface::MSG_ERROR<sp/>|<sp/>CClientUIInterface::BTN_ABORT);</highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fRet)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fReindex<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="898"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRequestShutdown<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="899"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;Aborted<sp/>block<sp/>database<sp/>rebuild.<sp/>Exiting.\n&quot;);</highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>InitError(strLoadError);</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>LoadBlockIndex<sp/>can<sp/>take<sp/>several<sp/>minutes,<sp/>it&apos;s<sp/>possible<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requested<sp/>to<sp/>kill<sp/>darksilk-qt<sp/>during<sp/>the<sp/>last<sp/>operation.<sp/>If<sp/>so,<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>the<sp/>program<sp/>has<sp/>not<sp/>fully<sp/>started<sp/>yet,<sp/>Shutdown()<sp/>is<sp/>possibly<sp/>overkill.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" kindref="member">fRequestShutdown</ref>)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Shutdown<sp/>requested.<sp/>Exiting.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>block<sp/>index<sp/>%15dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-printblockindex&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-printblocktree&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aac88c75e65aa0dee60e4332dbcc16120" kindref="member">PrintBlockTree</ref>();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-printblock&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strMatch<sp/>=<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-printblock&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFound<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CBlockIndex*&gt;::iterator<sp/>mi<sp/>=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.begin();<sp/>mi<sp/>!=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.end();<sp/>++mi)</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>(*mi).first;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str(),<sp/>strMatch.c_str(),<sp/>strMatch.size())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex<sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.<ref refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" kindref="member">ReadFromDisk</ref>(pindex);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.<ref refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" kindref="member">BuildMerkleTree</ref>();</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>block.<ref refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFound++;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nFound<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>blocks<sp/>matching<sp/>%s<sp/>were<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/>strMatch);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>8:<sp/>load<sp/>wallet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fDisableWallet)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Wallet<sp/>disabled!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>wallet...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFirstRun<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet" kindref="compound">CWallet</ref>(strWalletFileName);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944" kindref="member">DBErrors</ref><sp/>nLoadWalletRet<sp/>=<sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a5d7b244b8ed0cbe24233ee0b6ca3cae0" kindref="member">LoadWallet</ref>(fFirstRun);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLoadWalletRet<sp/>!=<sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944aa2367ec374804930406cea446fbb3fd2" kindref="member">DB_LOAD_OK</ref>)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLoadWalletRet<sp/>==<sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944a5eb73e7d323c832e22611f0ff94b1655" kindref="member">DB_CORRUPT</ref>)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strErrors<sp/>&lt;&lt;<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>wallet.dat:<sp/>Wallet<sp/>corrupted&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLoadWalletRet<sp/>==<sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944ac83155a59a0d2ca8fc325075f58060c5" kindref="member">DB_NONCRITICAL_ERROR</ref>)</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>error<sp/>reading<sp/>wallet.dat!<sp/>All<sp/>keys<sp/>read<sp/>correctly,<sp/>but<sp/>transaction<sp/>data&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>or<sp/>address<sp/>book<sp/>entries<sp/>might<sp/>be<sp/>missing<sp/>or<sp/>incorrect.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitWarning(msg);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLoadWalletRet<sp/>==<sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944a0e0f7a1f3a38544a975bd97fba1eed58" kindref="member">DB_TOO_NEW</ref>)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strErrors<sp/>&lt;&lt;<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>wallet.dat:<sp/>Wallet<sp/>requires<sp/>newer<sp/>version<sp/>of<sp/>DarkSilk&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLoadWalletRet<sp/>==<sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944aef89bee2c244fcd980d6cf7edc5bf2d6" kindref="member">DB_NEED_REWRITE</ref>)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strErrors<sp/>&lt;&lt;<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Wallet<sp/>needed<sp/>to<sp/>be<sp/>rewritten:<sp/>restart<sp/>DarkSilk<sp/>to<sp/>complete&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>strErrors.str());</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(strErrors.str());</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strErrors<sp/>&lt;&lt;<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>wallet.dat&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-upgradewallet&quot;</highlight><highlight class="normal">,<sp/>fFirstRun))</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaxVersion<sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-upgradewallet&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nMaxVersion<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>the<sp/>-upgradewallet<sp/>without<sp/>argument<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Performing<sp/>wallet<sp/>upgrade<sp/>to<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="wallet_8h_1a39a6b71da3eb95cddc0836d3b27ac7c9a867e17547f858859f558244dc96ac2f3" kindref="member">FEATURE_LATEST</ref>);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMaxVersion<sp/>=<sp/>CLIENT_VERSION;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1afa48a3ee3096681650c8b9589579e9cb" kindref="member">SetMinVersion</ref>(<ref refid="wallet_8h_1a39a6b71da3eb95cddc0836d3b27ac7c9a867e17547f858859f558244dc96ac2f3" kindref="member">FEATURE_LATEST</ref>);<sp/></highlight><highlight class="comment">//<sp/>permanently<sp/>upgrade<sp/>the<sp/>wallet<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Allowing<sp/>wallet<sp/>upgrade<sp/>up<sp/>to<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>nMaxVersion);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nMaxVersion<sp/>&lt;<sp/>pwalletMain-&gt;GetVersion())</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strErrors<sp/>&lt;&lt;<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>downgrade<sp/>wallet&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a1bb7c19e7dd483f231f8077fb7fb942b" kindref="member">SetMaxVersion</ref>(nMaxVersion);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFirstRun)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>keyUser<sp/>and<sp/>set<sp/>as<sp/>default<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a786af12a87491f8dc24351d93b9833b6" kindref="member">RandAddSeedPerfmon</ref>();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>newDefaultKey;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwalletMain-&gt;<ref refid="class_c_wallet_1a18549ec5c472c003afc4794daeb9adfd" kindref="member">GetKeyFromPool</ref>(newDefaultKey))<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1ad54cca8f6e5e1d5535860f43ddb0246f" kindref="member">SetDefaultKey</ref>(newDefaultKey);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pwalletMain-&gt;<ref refid="class_c_wallet_1a95d2dd3693db562aa11afbecf33e1276" kindref="member">SetAddressBookName</ref>(pwalletMain-&gt;<ref refid="class_c_wallet_1a6d415899e530a91e6e28dd0fa4ecef8d" kindref="member">vchDefaultKey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strErrors<sp/>&lt;&lt;<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>default<sp/>address&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a1697a92171b4359f49b38aed643cf92b" kindref="member">SetBestChain</ref>(<ref refid="class_c_block_locator" kindref="compound">CBlockLocator</ref>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>));</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>strErrors.str());</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>wallet<sp/><sp/><sp/><sp/><sp/><sp/>%15dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aa6b7f220759fb53f10c65654bbf61317" kindref="member">RegisterWallet</ref>(pwalletMain);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref><sp/>*pindexRescan<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-rescan&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexRescan<sp/>=<sp/><ref refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" kindref="member">pindexGenesisBlock</ref>;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>walletdb(strWalletFileName);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_locator" kindref="compound">CBlockLocator</ref><sp/>locator;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(walletdb.<ref refid="class_c_wallet_d_b_1a20eecdac6605607ff7cba2f55ec86f73" kindref="member">ReadBestBlock</ref>(locator))</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexRescan<sp/>=<sp/>locator.<ref refid="class_c_block_locator_1a9109609622705fe47ec42ecc71c59d48" kindref="member">GetBlockIndex</ref>();</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexRescan<sp/>=<sp/><ref refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" kindref="member">pindexGenesisBlock</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>&amp;&amp;<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>!=<sp/>pindexRescan)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Rescanning...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Rescanning<sp/>last<sp/>%i<sp/>blocks<sp/>(from<sp/>block<sp/>%i)...\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref><sp/>-<sp/>pindexRescan-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>,<sp/>pindexRescan-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a979a17e80e4897ed1f4ae9a4be7c493c" kindref="member">ScanForWalletTransactions</ref>(pindexRescan,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>rescan<sp/><sp/><sp/><sp/><sp/><sp/>%15dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a1697a92171b4359f49b38aed643cf92b" kindref="member">SetBestChain</ref>(<ref refid="class_c_block_locator" kindref="compound">CBlockLocator</ref>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>));</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db_8cpp_1aad0b4d8ce794391063e82239d0a20b09" kindref="member">nWalletDBUpdated</ref>++;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>(!fDisableWallet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>wallet<sp/>compiled<sp/>in!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>9:<sp/>import<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;boost::filesystem::path&gt;<sp/>vImportFiles;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-loadblock&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strFile,<sp/><ref refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" kindref="member">mapMultiArgs</ref>[</highlight><highlight class="stringliteral">&quot;-loadblock&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vImportFiles.push_back(strFile);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>threadGroup.create_thread(boost::bind(&amp;<ref refid="main_8cpp_1a0189c34248cd89bbbe20d4d6045bd7c9" kindref="member">ThreadImport</ref>,<sp/>vImportFiles));</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>genesis<sp/>block<sp/>to<sp/>be<sp/>imported...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" kindref="member">fRequestShutdown</ref><sp/>&amp;&amp;<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(10);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>10:<sp/>load<sp/>peers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>addresses...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_addr_d_b" kindref="compound">CAddrDB</ref><sp/>adb;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adb.<ref refid="class_c_addr_d_b_1aed4b567fb7c2dd15b2856e7c769967b7" kindref="member">Read</ref>(<ref refid="net_8cpp_1ac575e3335fd15a19b567026491f8f01a" kindref="member">addrman</ref>))</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>or<sp/>missing<sp/>peers.dat;<sp/>recreating\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a6d8c3a832ea7d6f4780a59e2ae0441b8" kindref="member">CheckAndRemove</ref>();<sp/></highlight><highlight class="comment">//<sp/>clean<sp/>out<sp/>expired</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Loaded<sp/>info<sp/>from<sp/>stormnodes.dat<sp/><sp/>%dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a5c49bb4788cad79574d90fdca8ea7464" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>10.1:<sp/>startup<sp/>secure<sp/>messaging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1a4c2723040974201407c876e9365ed74c" kindref="member">SecureMsgStart</ref>(<ref refid="util_8cpp_1a49ade2b91028ff037557259b0729b049" kindref="member">fNoSmsg</ref>,<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-smsgscanchain&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>11:<sp/>start<sp/>SandStorm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="main_8cpp_1a7d4a97e049394047743b48c0cd0f0791" kindref="member">CheckDiskSpace</ref>())</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strErrors.str().empty())</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(strErrors.str());</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>Stormnode<sp/>cache...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_d_b" kindref="compound">CStormnodeDB</ref><sp/>sndb;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5ce" kindref="member">CStormnodeDB::ReadResult</ref><sp/>readResult<sp/>=<sp/>sndb.<ref refid="class_c_stormnode_d_b_1a574f76256d8032a4c4e437d800d3795b" kindref="member">Read</ref>(<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult<sp/>==<sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cead20cc439041690b904357ce10985f17c" kindref="member">CStormnodeDB::FileError</ref>)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Missing<sp/>Stormnode<sp/>cache<sp/>file<sp/>-<sp/>sncache.dat,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult<sp/>!=<sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cea2659a41b2f2ec27fe9c3afb3fcefa3a8" kindref="member">CStormnodeDB::Ok</ref>)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>sncache.dat:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(readResult<sp/>==<sp/><ref refid="class_c_stormnode_d_b_1a81c48785c6e811c3751c2aee6ad0b5cea9092524fb8ce01be56bc89d7eb161b75" kindref="member">CStormnodeDB::IncorrectFormat</ref>)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;magic<sp/>is<sp/>ok<sp/>but<sp/>data<sp/>has<sp/>invalid<sp/>format,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;file<sp/>format<sp/>is<sp/>unknown<sp/>or<sp/>invalid,<sp/>please<sp/>fix<sp/>it<sp/>manually\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>budget<sp/>cache...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_budget_d_b" kindref="compound">CBudgetDB</ref><sp/>budgetdb;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_budget_d_b_1a53586703b6648c7cabbf9cdcfef5f7d9" kindref="member">CBudgetDB::ReadResult</ref><sp/>readResult2<sp/>=<sp/>budgetdb.<ref refid="class_c_budget_d_b_1aecdde2af475070d9fafdcacf93f2e4f2" kindref="member">Read</ref>(<ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult2<sp/>==<sp/><ref refid="class_c_budget_d_b_1a53586703b6648c7cabbf9cdcfef5f7d9a63cc82db74636abbd3f287b95964cfdf" kindref="member">CBudgetDB::FileError</ref>)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Missing<sp/>budget<sp/>cache<sp/>-<sp/>budget.dat,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult2<sp/>!=<sp/><ref refid="class_c_budget_d_b_1a53586703b6648c7cabbf9cdcfef5f7d9abb62dc76c646498e10e16e9b6c9d8b0b" kindref="member">CBudgetDB::Ok</ref>)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>budget.dat:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(readResult2<sp/>==<sp/><ref refid="class_c_budget_d_b_1a53586703b6648c7cabbf9cdcfef5f7d9a38c7fec029b0c59cfa63cfb616bafe39" kindref="member">CBudgetDB::IncorrectFormat</ref>)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;magic<sp/>is<sp/>ok<sp/>but<sp/>data<sp/>has<sp/>invalid<sp/>format,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;file<sp/>format<sp/>is<sp/>unknown<sp/>or<sp/>invalid,<sp/>please<sp/>fix<sp/>it<sp/>manually\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//flag<sp/>our<sp/>cached<sp/>items<sp/>so<sp/>we<sp/>send<sp/>them<sp/>to<sp/>our<sp/>peers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1ac890f5fcc4bb9ec568675d602595d384" kindref="member">ResetSync</ref>();</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1a21781707dcbe751e196abc105b51a669" kindref="member">ClearSeen</ref>();</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>stormnode<sp/>payment<sp/>cache...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_d_b" kindref="compound">CStormnodePaymentDB</ref><sp/>snpayments;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23" kindref="member">CStormnodePaymentDB::ReadResult</ref><sp/>readResult3<sp/>=<sp/>snpayments.<ref refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" kindref="member">Read</ref>(<ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult3<sp/>==<sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a7f12ef3395c370257e8fa09d3ff5626e" kindref="member">CStormnodePaymentDB::FileError</ref>)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Missing<sp/>Stormnode<sp/>payment<sp/>cache<sp/>-<sp/>snpayments.dat,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult3<sp/>!=<sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a2f12de8ca0f127551efaccbdeb5ca6fe" kindref="member">CStormnodePaymentDB::Ok</ref>)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>mnpayments.dat:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(readResult3<sp/>==<sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a96d00baa28f120ca64ffa93880171c09" kindref="member">CStormnodePaymentDB::IncorrectFormat</ref>)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;magic<sp/>is<sp/>ok<sp/>but<sp/>data<sp/>has<sp/>invalid<sp/>format,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;file<sp/>format<sp/>is<sp/>unknown<sp/>or<sp/>invalid,<sp/>please<sp/>fix<sp/>it<sp/>manually\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;IS<sp/>SANDSTORM<sp/>STORMNODE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a54b81bb7643acf8ec4ab91fdea98c16f" kindref="member">strStormNodeAddr</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-stormnodeaddr&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>addr<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a54b81bb7643acf8ec4ab91fdea98c16f" kindref="member">strStormNodeAddr</ref>.c_str());</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a54b81bb7643acf8ec4ab91fdea98c16f" kindref="member">strStormNodeAddr</ref>.empty()){</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_service" kindref="compound">CService</ref><sp/>addrTest<sp/>=<sp/><ref refid="class_c_service" kindref="compound">CService</ref>(<ref refid="util_8cpp_1a54b81bb7643acf8ec4ab91fdea98c16f" kindref="member">strStormNodeAddr</ref>,<sp/><ref refid="netbase_8cpp_1ab5335ec17aee4d4fdd4c735b85707b56" kindref="member">fNameLookup</ref>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addrTest.<ref refid="class_c_net_addr_1a52a1b506f07e5450057e12a8b5a7fbcd" kindref="member">IsValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>-stormnodeaddr<sp/>address:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="util_8cpp_1a54b81bb7643acf8ec4ab91fdea98c16f" kindref="member">strStormNodeAddr</ref>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" kindref="member">strStormNodePrivKey</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-stormnodeprivkey&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" kindref="member">strStormNodePrivKey</ref>.empty()){</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>key;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">SetKey</ref>(<ref refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" kindref="member">strStormNodePrivKey</ref>,<sp/>errorMessage,<sp/>key,<sp/>pubkey))</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>stormnodeprivkey.<sp/>Please<sp/>see<sp/>documenation.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" kindref="member">pubKeyStormnode</ref><sp/>=<sp/>pubkey;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>specify<sp/>a<sp/>stormnodeprivkey<sp/>in<sp/>the<sp/>configuration.<sp/>Please<sp/>see<sp/>documentation<sp/>for<sp/>help.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>mode<sp/>of<sp/>budget<sp/>voting<sp/>for<sp/>this<sp/>stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aade01c058f2409dc8dc1f20c87370a43" kindref="member">strBudgetMode</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-budgetvotemode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;auto&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-snconflock&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)&amp;&amp;<sp/>pwalletMain)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pwalletMain-&gt;<ref refid="class_c_wallet_1a4e6eb889f7638ed9695fdc0731581428" kindref="member">cs_wallet</ref>);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Locking<sp/>Stormnodes:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>snTxHash;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry" kindref="compound">CStormnodeConfig::CStormnodeEntry</ref><sp/>sne,<sp/><ref refid="stormnodeconfig_8cpp_1a399e6911e15f2ad43696d708ebd56cf2" kindref="member">stormnodeConfig</ref>.<ref refid="class_c_stormnode_config_1aadf8ea91de17d416d1046987f07c4d1a" kindref="member">getEntries</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" kindref="member">getTxHash</ref>(),<sp/>sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" kindref="member">getOutputIndex</ref>());</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snTxHash.<ref refid="classbase__uint_1ade1a897fac931f28f54998c92c797228" kindref="member">SetHex</ref>(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1a96b1b54ab8cd92c2fa1bd22834963512" kindref="member">getTxHash</ref>());</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>outpoint<sp/>=<sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>(snTxHash,<sp/>boost::lexical_cast&lt;unsigned<sp/>int&gt;(sne.<ref refid="class_c_stormnode_config_1_1_c_stormnode_entry_1ab46bd1124cbb3b970e58e306ffe799ae" kindref="member">getOutputIndex</ref>()));</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a2be3aa26d84c79bdcabb41c6b3fe0e0f" kindref="member">LockCoin</ref>(outpoint);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-liquidityprovider&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref>);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref><sp/>=<sp/>std::min(std::max(<ref refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref>,<sp/>0),<sp/>100);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a9be4f999ba6ac95ce4967c7b72c4c13f" kindref="member">SetMinBlockSpacing</ref>(<ref refid="util_8cpp_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref><sp/>*<sp/>15);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-enablesandstorm&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref>);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa6e1d8c03f1d46e89708f9c282181c47" kindref="member">fSandstormMultiSession</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-sandstormmultisession&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1aa6e1d8c03f1d46e89708f9c282181c47" kindref="member">fSandstormMultiSession</ref>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-sandstormrounds&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref><sp/>=<sp/>std::min(std::max(<ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>,<sp/>1),<sp/>99999);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" kindref="member">nAnonymizeDarkSilkAmount</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-anonymizedashamount&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" kindref="member">nAnonymizeDarkSilkAmount</ref>);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" kindref="member">nAnonymizeDarkSilkAmount</ref><sp/>=<sp/>std::min(std::max(<ref refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" kindref="member">nAnonymizeDarkSilkAmount</ref>,<sp/>2),<sp/>999999);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1acb212e467afc6516452e15829eeb58d5" kindref="member">fEnableInstantX</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-enableinstantx&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1acb212e467afc6516452e15829eeb58d5" kindref="member">fEnableInstantX</ref>);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" kindref="member">nInstantXDepth</ref><sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-instantxdepth&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" kindref="member">nInstantXDepth</ref>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" kindref="member">nInstantXDepth</ref><sp/>=<sp/>std::min(std::max(<ref refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" kindref="member">nInstantXDepth</ref>,<sp/>0),<sp/>60);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//lite<sp/>mode<sp/>disables<sp/>all<sp/>Stormnode<sp/>and<sp/>Sandstorm<sp/>related<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-litemode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref><sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>){</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InitError(</highlight><highlight class="stringliteral">&quot;You<sp/>can<sp/>not<sp/>start<sp/>a<sp/>stormnode<sp/>in<sp/>litemode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;fLiteMode<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;nInstantXDepth<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" kindref="member">nInstantXDepth</ref>);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Sandstorm<sp/>rounds<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Anonymize<sp/>DarkSilk<sp/>Amount<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a8726b2c37267fdeae9fee074106be65b" kindref="member">nAnonymizeDarkSilkAmount</ref>);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Budget<sp/>Mode<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1aade01c058f2409dc8dc1f20c87370a43" kindref="member">strBudgetMode</ref>.c_str());</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a1b40173d3fdd69fd20da1d01117a0970" kindref="member">InitDenominations</ref>();</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1aaa874c4418a12df76eddfe8faff56b67" kindref="member">InitCollateralAddress</ref>();</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>threadGroup.create_thread(boost::bind(&amp;<ref refid="sandstorm_8cpp_1ac661e702905cd5093cb237555ba5c1c0" kindref="member">ThreadCheckSandStormPool</ref>));</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a786af12a87491f8dc24351d93b9833b6" kindref="member">RandAddSeedPerfmon</ref>();</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reindex<sp/>addresses<sp/>found<sp/>in<sp/>blockchain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-reindexaddr&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Rebuilding<sp/>address<sp/>index...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref><sp/>*pblockAddrIndex<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/>txdbAddr(</highlight><highlight class="stringliteral">&quot;rw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(pblockAddrIndex)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Rebuilding<sp/>address<sp/>index,<sp/>block<sp/>%i&quot;</highlight><highlight class="normal">,<sp/>pblockAddrIndex-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>));</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ReadFromDisk(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fReadTransactions=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/>pblockAddr;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pblockAddr.<ref refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" kindref="member">ReadFromDisk</ref>(pblockAddrIndex,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblockAddr.<ref refid="class_c_block_1aea2c77ad84cd7909720f75a0c3f7ddc2" kindref="member">RebuildAddressIndex</ref>(txdbAddr);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblockAddrIndex<sp/>=<sp/>pblockAddrIndex-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;mapBlockIndex.size()<sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.size());</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;nBestHeight<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;setKeyPool.size()<sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain<sp/>?<sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a363fabb2b82d596c33e4fa3920a11c26" kindref="member">setKeyPool</ref>.size()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;mapWallet.size()<sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain<sp/>?<sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a0b17f72f2170090f2de43a6c48af3214" kindref="member">mapWallet</ref>.size()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;mapAddressBook.size()<sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/><sp/>pwalletMain<sp/>?<sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1afed31f2489c987e0f76233121ed84ab7" kindref="member">mapAddressBook</ref>.size()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a9396d8054e8f74959e9391871aaddde0" kindref="member">StartNode</ref>(threadGroup);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>InitRPCMining<sp/>is<sp/>needed<sp/>here<sp/>so<sp/>getwork/getblocktemplate<sp/>in<sp/>the<sp/>GUI<sp/>debug<sp/>console<sp/>works<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcmining_8cpp_1ad47789e7e3d3323a832e764f692e4ea8" kindref="member">InitRPCMining</ref>();</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2839c7c01ad9d90fbd3ce55d32b50c6f" kindref="member">fServer</ref>)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpcserver_8cpp_1af4d692a884c24c4abe2fc3f2b165542d" kindref="member">StartRPCThreads</ref>();</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mine<sp/>proof-of-stake<sp/>blocks<sp/>in<sp/>the<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-staking&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Staking<sp/>disabled\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwalletMain)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadGroup.create_thread(boost::bind(&amp;<ref refid="main_8h_1a31faece5ef0e403969b3d3debd79b352" kindref="member">ThreadStakeMiner</ref>,<sp/>pwalletMain));</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*********************************************************<sp/>Step<sp/>12:<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>uiInterface.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Done<sp/>loading&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_WALLET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwalletMain)<sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>wallet<sp/>transactions<sp/>that<sp/>aren&apos;t<sp/>already<sp/>in<sp/>a<sp/>block<sp/>to<sp/>mapTransactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletMain-&gt;<ref refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" kindref="member">ReacceptWalletTransactions</ref>();</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>a<sp/>thread<sp/>to<sp/>flush<sp/>wallet<sp/>periodically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadGroup.create_thread(boost::bind(&amp;<ref refid="db_8h_1aa23a48af6e03352212955045a6204821" kindref="member">ThreadFlushWalletDB</ref>,<sp/>boost::ref(pwalletMain-&gt;<ref refid="class_c_wallet_1a3e886f3a3b20228770e082b3fc014fc7" kindref="member">strWalletFile</ref>)));</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="init_8cpp_1a42553c6f79ea2db4f932bee3791ee6d6" kindref="member">fRequestShutdown</ref>;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/init.cpp"/>
  </compounddef>
</doxygen>
