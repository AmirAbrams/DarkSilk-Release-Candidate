<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="uint256__tests_8cpp" kind="file" language="C++">
    <compoundname>uint256_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="uint256_8h" local="yes">uint256.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="26445">
        <label>assert.h</label>
      </node>
      <node id="26443">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="26447">
        <label>stdexcept</label>
      </node>
      <node id="26449">
        <label>string</label>
      </node>
      <node id="26450">
        <label>vector</label>
      </node>
      <node id="26448">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="26444">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="26445" relation="include">
        </childnode>
        <childnode refid="26446" relation="include">
        </childnode>
        <childnode refid="26447" relation="include">
        </childnode>
        <childnode refid="26448" relation="include">
        </childnode>
        <childnode refid="26449" relation="include">
        </childnode>
        <childnode refid="26450" relation="include">
        </childnode>
      </node>
      <node id="26442">
        <label>/home/dev/ds-160209/src/test/uint256_tests.cpp</label>
        <link refid="uint256_tests.cpp"/>
        <childnode refid="26443" relation="include">
        </childnode>
        <childnode refid="26444" relation="include">
        </childnode>
        <childnode refid="26449" relation="include">
        </childnode>
      </node>
      <node id="26446">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="uint256__tests_8cpp_1a3854fe9a9eb822b73c3370d34fabed54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(uint256_equality)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>uint256_equality</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/uint256_tests.cpp" line="8" column="1" bodyfile="/home/dev/ds-160209/src/test/uint256_tests.cpp" bodystart="8" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="uint256__tests_8cpp_1ab3c19e11618ace950a0a982ed30a9322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(uint256_hex)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>uint256_hex</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/test/uint256_tests.cpp" line="19" column="1" bodyfile="/home/dev/ds-160209/src/test/uint256_tests.cpp" bodystart="19" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="uint256_8h" kindref="compound">uint256.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">BOOST_AUTO_TEST_SUITE(uint256_tests)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="uint256__tests_8cpp_1a3854fe9a9eb822b73c3370d34fabed54" refkind="member"><highlight class="normal"><ref refid="uint256__tests_8cpp_1a3854fe9a9eb822b73c3370d34fabed54" kindref="member">BOOST_AUTO_TEST_CASE</ref>(uint256_equality)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>num1<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>num2<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(num1+1<sp/>==<sp/>num2);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>num3<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(num1<sp/>==<sp/>num3);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(num1+num2<sp/>==<sp/>num3+num2);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="uint256__tests_8cpp_1ab3c19e11618ace950a0a982ed30a9322" refkind="member"><highlight class="normal"><ref refid="uint256__tests_8cpp_1a3854fe9a9eb822b73c3370d34fabed54" kindref="member">BOOST_AUTO_TEST_CASE</ref>(uint256_hex)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>hexStr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;d35583ed493a5eee756931353144f558e6a9ab3ad6024a63ced7f10daf7faad9&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>num1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>num1.<ref refid="classbase__uint_1ade1a897fac931f28f54998c92c797228" kindref="member">SetHex</ref>(hexStr);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK(num1.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()<sp/>==<sp/>hexStr);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/test/uint256_tests.cpp"/>
  </compounddef>
</doxygen>
