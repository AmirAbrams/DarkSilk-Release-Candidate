<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="rpcmining_8cpp" kind="file" language="C++">
    <compoundname>rpcmining.cpp</compoundname>
    <includes refid="rpcserver_8h" local="yes">rpcserver.h</includes>
    <includes refid="base58_8h" local="yes">base58.h</includes>
    <includes refid="chainparams_8h" local="yes">chainparams.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="db_8h" local="yes">db.h</includes>
    <includes refid="txdb_8h" local="yes">txdb.h</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes refid="miner_8h" local="yes">miner.h</includes>
    <includes refid="kernel_8h" local="yes">kernel.h</includes>
    <includes refid="txdb-leveldb_8h" local="yes">txdb-leveldb.h</includes>
    <includes refid="stormnode-sync_8h" local="yes">stormnode-sync.h</includes>
    <includes local="no">boost/assign/list_of.hpp</includes>
    <incdepgraph>
      <node id="48930">
        <label>list</label>
      </node>
      <node id="48910">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="49011">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="49009" relation="include">
        </childnode>
      </node>
      <node id="48925">
        <label>netinet/in.h</label>
      </node>
      <node id="48893">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="48908" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
      </node>
      <node id="48926">
        <label>arpa/inet.h</label>
      </node>
      <node id="48995">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="48952">
        <label>iomanip</label>
      </node>
      <node id="48944">
        <label>boost/version.hpp</label>
      </node>
      <node id="48939">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="48900">
        <label>limits</label>
      </node>
      <node id="49027">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="48962">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48908" relation="include">
        </childnode>
      </node>
      <node id="48990">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="48893" relation="include">
        </childnode>
        <childnode refid="48916" relation="include">
        </childnode>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="48991" relation="include">
        </childnode>
        <childnode refid="48967" relation="include">
        </childnode>
        <childnode refid="48992" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
      </node>
      <node id="48963">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="48964" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48912" relation="include">
        </childnode>
      </node>
      <node id="48967">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48968" relation="include">
        </childnode>
        <childnode refid="48940" relation="include">
        </childnode>
        <childnode refid="48957" relation="include">
        </childnode>
        <childnode refid="48955" relation="include">
        </childnode>
        <childnode refid="48969" relation="include">
        </childnode>
        <childnode refid="48985" relation="include">
        </childnode>
      </node>
      <node id="48984">
        <label>openssl/rand.h</label>
      </node>
      <node id="49030">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="49025" relation="include">
        </childnode>
        <childnode refid="49031" relation="include">
        </childnode>
        <childnode refid="48985" relation="include">
        </childnode>
        <childnode refid="48893" relation="include">
        </childnode>
        <childnode refid="48930" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48974" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="48945">
        <label>boost/spirit/core.hpp</label>
      </node>
      <node id="48917">
        <label>assert.h</label>
      </node>
      <node id="48905">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="48924">
        <label>net/if.h</label>
      </node>
      <node id="49037">
        <label>stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="49038" relation="include">
        </childnode>
        <childnode refid="48988" relation="include">
        </childnode>
      </node>
      <node id="48989">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="48990" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="48893" relation="include">
        </childnode>
        <childnode refid="49013" relation="include">
        </childnode>
      </node>
      <node id="49040">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="49010">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="48964" relation="include">
        </childnode>
      </node>
      <node id="48997">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="48953">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="48954" relation="include">
        </childnode>
        <childnode refid="48957" relation="include">
        </childnode>
        <childnode refid="48966" relation="include">
        </childnode>
        <childnode refid="48967" relation="include">
        </childnode>
        <childnode refid="48906" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="48914">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="48915" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
      </node>
      <node id="48998">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="48999" relation="include">
        </childnode>
        <childnode refid="48989" relation="include">
        </childnode>
        <childnode refid="48917" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48968" relation="include">
        </childnode>
        <childnode refid="49012" relation="include">
        </childnode>
      </node>
      <node id="48911">
        <label>sys/mman.h</label>
      </node>
      <node id="48908">
        <label>stdlib.h</label>
      </node>
      <node id="49022">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="49023" relation="include">
        </childnode>
        <childnode refid="48969" relation="include">
        </childnode>
        <childnode refid="48954" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48968" relation="include">
        </childnode>
      </node>
      <node id="48968">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="48983">
        <label>openssl/crypto.h</label>
      </node>
      <node id="48941">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="48895" relation="include">
        </childnode>
      </node>
      <node id="49038">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="48966" relation="include">
        </childnode>
        <childnode refid="48988" relation="include">
        </childnode>
        <childnode refid="49039" relation="include">
        </childnode>
        <childnode refid="49040" relation="include">
        </childnode>
      </node>
      <node id="48949">
        <label>boost/spirit/iterator/position_iterator.hpp</label>
      </node>
      <node id="48920">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="48921" relation="include">
        </childnode>
        <childnode refid="48911" relation="include">
        </childnode>
        <childnode refid="48922" relation="include">
        </childnode>
        <childnode refid="48923" relation="include">
        </childnode>
        <childnode refid="48924" relation="include">
        </childnode>
        <childnode refid="48925" relation="include">
        </childnode>
        <childnode refid="48926" relation="include">
        </childnode>
        <childnode refid="48927" relation="include">
        </childnode>
        <childnode refid="48912" relation="include">
        </childnode>
        <childnode refid="48928" relation="include">
        </childnode>
        <childnode refid="48913" relation="include">
        </childnode>
        <childnode refid="48929" relation="include">
        </childnode>
      </node>
      <node id="48979">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="48959">
        <label>openssl/sha.h</label>
      </node>
      <node id="48929">
        <label>errno.h</label>
      </node>
      <node id="48899">
        <label>cassert</label>
      </node>
      <node id="48918">
        <label>stdexcept</label>
      </node>
      <node id="48969">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="48923" relation="include">
        </childnode>
        <childnode refid="48970" relation="include">
        </childnode>
        <childnode refid="48971" relation="include">
        </childnode>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="48972" relation="include">
        </childnode>
        <childnode refid="48893" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48930" relation="include">
        </childnode>
        <childnode refid="48974" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48975" relation="include">
        </childnode>
        <childnode refid="48976" relation="include">
        </childnode>
        <childnode refid="48977" relation="include">
        </childnode>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="48981" relation="include">
        </childnode>
        <childnode refid="48982" relation="include">
        </childnode>
        <childnode refid="48983" relation="include">
        </childnode>
        <childnode refid="48984" relation="include">
        </childnode>
        <childnode refid="48956" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
      </node>
      <node id="49020">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="48954" relation="include">
        </childnode>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="49019" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
      </node>
      <node id="48950">
        <label>json/json_spirit_utils.h</label>
        <link refid="json__spirit__utils_8h"/>
        <childnode refid="48936" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
      </node>
      <node id="48978">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="49006">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
        <childnode refid="49007" relation="include">
        </childnode>
        <childnode refid="49010" relation="include">
        </childnode>
      </node>
      <node id="48895">
        <label>string</label>
      </node>
      <node id="49029">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="49030" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48908" relation="include">
        </childnode>
        <childnode refid="49023" relation="include">
        </childnode>
        <childnode refid="48990" relation="include">
        </childnode>
        <childnode refid="49032" relation="include">
        </childnode>
        <childnode refid="48988" relation="include">
        </childnode>
        <childnode refid="48966" relation="include">
        </childnode>
        <childnode refid="49031" relation="include">
        </childnode>
        <childnode refid="48967" relation="include">
        </childnode>
        <childnode refid="49033" relation="include">
        </childnode>
        <childnode refid="48969" relation="include">
        </childnode>
        <childnode refid="48985" relation="include">
        </childnode>
      </node>
      <node id="49024">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48908" relation="include">
        </childnode>
        <childnode refid="48969" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
      </node>
      <node id="48897">
        <label>map</label>
      </node>
      <node id="48932">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="48975">
        <label>boost/thread.hpp</label>
      </node>
      <node id="48891">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining.cpp"/>
        <childnode refid="48892" relation="include">
        </childnode>
        <childnode refid="48953" relation="include">
        </childnode>
        <childnode refid="48954" relation="include">
        </childnode>
        <childnode refid="48988" relation="include">
        </childnode>
        <childnode refid="49025" relation="include">
        </childnode>
        <childnode refid="49001" relation="include">
        </childnode>
        <childnode refid="49027" relation="include">
        </childnode>
        <childnode refid="49028" relation="include">
        </childnode>
        <childnode refid="49035" relation="include">
        </childnode>
        <childnode refid="49036" relation="include">
        </childnode>
        <childnode refid="49037" relation="include">
        </childnode>
        <childnode refid="49041" relation="include">
        </childnode>
      </node>
      <node id="49021">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="49019" relation="include">
        </childnode>
        <childnode refid="49020" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="48992" relation="include">
        </childnode>
        <childnode refid="48969" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="49039">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="48966" relation="include">
        </childnode>
        <childnode refid="48969" relation="include">
        </childnode>
        <childnode refid="48953" relation="include">
        </childnode>
        <childnode refid="48988" relation="include">
        </childnode>
        <childnode refid="48992" relation="include">
        </childnode>
      </node>
      <node id="48935">
        <label>json/json_spirit_reader_template.h</label>
        <link refid="json__spirit__reader__template_8h"/>
        <childnode refid="48936" relation="include">
        </childnode>
        <childnode refid="48941" relation="include">
        </childnode>
        <childnode refid="48942" relation="include">
        </childnode>
        <childnode refid="48943" relation="include">
        </childnode>
        <childnode refid="48944" relation="include">
        </childnode>
        <childnode refid="48945" relation="include">
        </childnode>
        <childnode refid="48946" relation="include">
        </childnode>
        <childnode refid="48947" relation="include">
        </childnode>
        <childnode refid="48948" relation="include">
        </childnode>
        <childnode refid="48949" relation="include">
        </childnode>
      </node>
      <node id="49033">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="48893" relation="include">
        </childnode>
        <childnode refid="49034" relation="include">
        </childnode>
        <childnode refid="49017" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
      </node>
      <node id="49002">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="49003" relation="include">
        </childnode>
        <childnode refid="48969" relation="include">
        </childnode>
        <childnode refid="48977" relation="include">
        </childnode>
        <childnode refid="49006" relation="include">
        </childnode>
        <childnode refid="49011" relation="include">
        </childnode>
      </node>
      <node id="48964">
        <label>stddef.h</label>
      </node>
      <node id="48940">
        <label>boost/variant.hpp</label>
      </node>
      <node id="48931">
        <label>boost/iostreams/concepts.hpp</label>
      </node>
      <node id="48928">
        <label>netdb.h</label>
      </node>
      <node id="48921">
        <label>sys/fcntl.h</label>
      </node>
      <node id="48999">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="49000" relation="include">
        </childnode>
      </node>
      <node id="49009">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="49008" relation="include">
        </childnode>
      </node>
      <node id="49013">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="48943">
        <label>boost/function.hpp</label>
      </node>
      <node id="48894">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48898" relation="include">
        </childnode>
        <childnode refid="48899" relation="include">
        </childnode>
        <childnode refid="48900" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48902" relation="include">
        </childnode>
        <childnode refid="48903" relation="include">
        </childnode>
        <childnode refid="48904" relation="include">
        </childnode>
        <childnode refid="48905" relation="include">
        </childnode>
        <childnode refid="48906" relation="include">
        </childnode>
        <childnode refid="48914" relation="include">
        </childnode>
      </node>
      <node id="48912">
        <label>limits.h</label>
      </node>
      <node id="48994">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="49018">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="48898" relation="include">
        </childnode>
        <childnode refid="49015" relation="include">
        </childnode>
      </node>
      <node id="48971">
        <label>sys/resource.h</label>
      </node>
      <node id="48980">
        <label>openssl/bio.h</label>
      </node>
      <node id="49032">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="48906" relation="include">
        </childnode>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="49031" relation="include">
        </childnode>
      </node>
      <node id="49017">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="49019">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="48920" relation="include">
        </childnode>
      </node>
      <node id="49031">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="48966" relation="include">
        </childnode>
        <childnode refid="48957" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="48967" relation="include">
        </childnode>
        <childnode refid="49017" relation="include">
        </childnode>
        <childnode refid="48940" relation="include">
        </childnode>
      </node>
      <node id="49041">
        <label>boost/assign/list_of.hpp</label>
      </node>
      <node id="48933">
        <label>boost/asio.hpp</label>
      </node>
      <node id="48958">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="48916" relation="include">
        </childnode>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="48959" relation="include">
        </childnode>
        <childnode refid="48960" relation="include">
        </childnode>
        <childnode refid="48961" relation="include">
        </childnode>
        <childnode refid="48962" relation="include">
        </childnode>
        <childnode refid="48963" relation="include">
        </childnode>
        <childnode refid="48965" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="48934">
        <label>boost/asio/ssl.hpp</label>
      </node>
      <node id="48927">
        <label>ifaddrs.h</label>
      </node>
      <node id="48985">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="48969" relation="include">
        </childnode>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="48908" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48987" relation="include">
        </childnode>
      </node>
      <node id="49035">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="49022" relation="include">
        </childnode>
      </node>
      <node id="48923">
        <label>sys/types.h</label>
      </node>
      <node id="49005">
        <label>ios</label>
      </node>
      <node id="48909">
        <label>string.h</label>
      </node>
      <node id="48915">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="48903">
        <label>cstdio</label>
      </node>
      <node id="48996">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="48982">
        <label>openssl/buffer.h</label>
      </node>
      <node id="48904">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="48988">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="48989" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="48967" relation="include">
        </childnode>
        <childnode refid="49003" relation="include">
        </childnode>
        <childnode refid="49001" relation="include">
        </childnode>
        <childnode refid="49022" relation="include">
        </childnode>
        <childnode refid="48930" relation="include">
        </childnode>
        <childnode refid="49012" relation="include">
        </childnode>
      </node>
      <node id="48977">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="49012">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="48957">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="48958" relation="include">
        </childnode>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="48916" relation="include">
        </childnode>
        <childnode refid="48918" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="48913">
        <label>unistd.h</label>
      </node>
      <node id="49026">
        <label>db_cxx.h</label>
      </node>
      <node id="48896">
        <label>vector</label>
      </node>
      <node id="48955">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="48916" relation="include">
        </childnode>
        <childnode refid="48956" relation="include">
        </childnode>
        <childnode refid="48918" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
      </node>
      <node id="49014">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="49015" relation="include">
        </childnode>
        <childnode refid="49016" relation="include">
        </childnode>
        <childnode refid="48968" relation="include">
        </childnode>
        <childnode refid="49017" relation="include">
        </childnode>
        <childnode refid="48984" relation="include">
        </childnode>
        <childnode refid="48926" relation="include">
        </childnode>
        <childnode refid="49018" relation="include">
        </childnode>
        <childnode refid="49019" relation="include">
        </childnode>
        <childnode refid="49020" relation="include">
        </childnode>
        <childnode refid="49021" relation="include">
        </childnode>
        <childnode refid="48958" relation="include">
        </childnode>
        <childnode refid="49003" relation="include">
        </childnode>
      </node>
      <node id="48919">
        <label>rpcprotocol.h</label>
        <link refid="rpcprotocol_8h"/>
        <childnode refid="48920" relation="include">
        </childnode>
        <childnode refid="48930" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48931" relation="include">
        </childnode>
        <childnode refid="48932" relation="include">
        </childnode>
        <childnode refid="48933" relation="include">
        </childnode>
        <childnode refid="48934" relation="include">
        </childnode>
        <childnode refid="48935" relation="include">
        </childnode>
        <childnode refid="48950" relation="include">
        </childnode>
        <childnode refid="48951" relation="include">
        </childnode>
      </node>
      <node id="48951">
        <label>json/json_spirit_writer_template.h</label>
        <link refid="json__spirit__writer__template_8h"/>
        <childnode refid="48936" relation="include">
        </childnode>
        <childnode refid="48899" relation="include">
        </childnode>
        <childnode refid="48937" relation="include">
        </childnode>
        <childnode refid="48952" relation="include">
        </childnode>
      </node>
      <node id="48960">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="48976">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="48947">
        <label>boost/spirit/utility/escape_char.hpp</label>
      </node>
      <node id="48974">
        <label>utility</label>
      </node>
      <node id="49000">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="48990" relation="include">
        </childnode>
        <childnode refid="49001" relation="include">
        </childnode>
      </node>
      <node id="48937">
        <label>sstream</label>
      </node>
      <node id="49034">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="49036">
        <label>txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="48988" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="49006" relation="include">
        </childnode>
        <childnode refid="49011" relation="include">
        </childnode>
        <childnode refid="49003" relation="include">
        </childnode>
      </node>
      <node id="48966">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="48906" relation="include">
        </childnode>
        <childnode refid="48957" relation="include">
        </childnode>
        <childnode refid="48918" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="48981">
        <label>openssl/evp.h</label>
      </node>
      <node id="48972">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="48899" relation="include">
        </childnode>
        <childnode refid="48973" relation="include">
        </childnode>
        <childnode refid="48937" relation="include">
        </childnode>
        <childnode refid="48918" relation="include">
        </childnode>
      </node>
      <node id="48901">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="49025">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="49003" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48977" relation="include">
        </childnode>
        <childnode refid="49026" relation="include">
        </childnode>
      </node>
      <node id="49003">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="48906" relation="include">
        </childnode>
        <childnode refid="48894" relation="include">
        </childnode>
        <childnode refid="49004" relation="include">
        </childnode>
        <childnode refid="48917" relation="include">
        </childnode>
        <childnode refid="49005" relation="include">
        </childnode>
        <childnode refid="48900" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48898" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48909" relation="include">
        </childnode>
        <childnode refid="48974" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="48965">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48964" relation="include">
        </childnode>
        <childnode refid="48912" relation="include">
        </childnode>
      </node>
      <node id="48970">
        <label>sys/time.h</label>
      </node>
      <node id="48973">
        <label>iostream</label>
      </node>
      <node id="48892">
        <label>rpcserver.h</label>
        <link refid="rpcserver_8h"/>
        <childnode refid="48893" relation="include">
        </childnode>
        <childnode refid="48916" relation="include">
        </childnode>
        <childnode refid="48919" relation="include">
        </childnode>
        <childnode refid="48930" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
      </node>
      <node id="49015">
        <label>deque</label>
      </node>
      <node id="48916">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="48917" relation="include">
        </childnode>
        <childnode refid="48902" relation="include">
        </childnode>
        <childnode refid="48918" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="49028">
        <label>miner.h</label>
        <link refid="miner_8h"/>
        <childnode refid="49029" relation="include">
        </childnode>
      </node>
      <node id="48942">
        <label>boost/bind.hpp</label>
      </node>
      <node id="48938">
        <label>boost/config.hpp</label>
      </node>
      <node id="48922">
        <label>sys/socket.h</label>
      </node>
      <node id="49008">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="48917" relation="include">
        </childnode>
        <childnode refid="48964" relation="include">
        </childnode>
        <childnode refid="48909" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
      </node>
      <node id="48936">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="48896" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48899" relation="include">
        </childnode>
        <childnode refid="48937" relation="include">
        </childnode>
        <childnode refid="48918" relation="include">
        </childnode>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48938" relation="include">
        </childnode>
        <childnode refid="48939" relation="include">
        </childnode>
        <childnode refid="48940" relation="include">
        </childnode>
      </node>
      <node id="49016">
        <label>boost/array.hpp</label>
      </node>
      <node id="48956">
        <label>openssl/bn.h</label>
      </node>
      <node id="49001">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="49002" relation="include">
        </childnode>
        <childnode refid="48988" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48974" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="48992">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="48901" relation="include">
        </childnode>
      </node>
      <node id="48906">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="48907" relation="include">
        </childnode>
        <childnode refid="48909" relation="include">
        </childnode>
        <childnode refid="48895" relation="include">
        </childnode>
        <childnode refid="48910" relation="include">
        </childnode>
        <childnode refid="48897" relation="include">
        </childnode>
        <childnode refid="48911" relation="include">
        </childnode>
        <childnode refid="48912" relation="include">
        </childnode>
        <childnode refid="48913" relation="include">
        </childnode>
      </node>
      <node id="48948">
        <label>boost/spirit/iterator/multi_pass.hpp</label>
      </node>
      <node id="48954">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="48955" relation="include">
        </childnode>
        <childnode refid="48916" relation="include">
        </childnode>
        <childnode refid="48896" relation="include">
        </childnode>
      </node>
      <node id="48898">
        <label>set</label>
      </node>
      <node id="49004">
        <label>algorithm</label>
      </node>
      <node id="48961">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="48901" relation="include">
        </childnode>
        <childnode refid="48908" relation="include">
        </childnode>
      </node>
      <node id="48991">
        <label>util.h</label>
      </node>
      <node id="48986">
        <label>stdio.h</label>
      </node>
      <node id="48907">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="48908" relation="include">
        </childnode>
      </node>
      <node id="48902">
        <label>cstring</label>
      </node>
      <node id="48993">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="48994" relation="include">
        </childnode>
        <childnode refid="48995" relation="include">
        </childnode>
        <childnode refid="48996" relation="include">
        </childnode>
        <childnode refid="48910" relation="include">
        </childnode>
        <childnode refid="48997" relation="include">
        </childnode>
      </node>
      <node id="48987">
        <label>inttypes.h</label>
      </node>
      <node id="49007">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="49008" relation="include">
        </childnode>
        <childnode refid="49009" relation="include">
        </childnode>
      </node>
      <node id="48946">
        <label>boost/spirit/utility/confix.hpp</label>
      </node>
      <node id="49023">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="48990" relation="include">
        </childnode>
        <childnode refid="48965" relation="include">
        </childnode>
        <childnode refid="49024" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rpcmining_8cpp_1a9a8d62fc489ca92e2b8c85bed589c474" prot="public" static="yes" mutable="no">
        <type><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref> *</type>
        <definition>CReserveKey* pMiningKey</definition>
        <argsstring></argsstring>
        <name>pMiningKey</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="27" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rpcmining_8cpp_1ad47789e7e3d3323a832e764f692e4ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitRPCMining</definition>
        <argsstring>()</argsstring>
        <name>InitRPCMining</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="29" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="29" bodyend="36"/>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1ae7370e6af93e26e0c967cda6a63fe3a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShutdownRPCMining</definition>
        <argsstring>()</argsstring>
        <name>ShutdownRPCMining</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="38" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="38" bodyend="44"/>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1a70bed6c442862e2a969b623e3b56b952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getsubsidy</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getsubsidy</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="46" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="46" bodyend="54"/>
        <references refid="main_8cpp_1a54eeb686375f66683fb139de496c088d" compoundref="main_8cpp" startline="1662" endline="1675">GetProofOfWorkReward</references>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1a389f62bd448bb24933a1ea8920411d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getstakesubsidy</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getstakesubsidy</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="56" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="56" bodyend="76"/>
        <references refid="rpcserver_8cpp_1a6f9782b3c0efdb472b355c60bd90f2b6" compoundref="rpcserver_8cpp" startline="47" endline="66">RPCTypeCheck</references>
        <references refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa7f3c0ef07c91049418fc6ac24ff1c1f" compoundref="json__spirit__value_8h" startline="26">json_spirit::str_type</references>
        <references refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" compoundref="util_8cpp" startline="450" endline="469">ParseHex</references>
        <references refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" compoundref="json__spirit__reader__template_8h" startline="172" endline="175">json_spirit::get_str</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" compoundref="serialize_8h" startline="89">SER_NETWORK</references>
        <references refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" compoundref="rpcprotocol_8cpp" startline="260" endline="266">JSONRPCError</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae41723a0e8091c7853a1e582e317b272" compoundref="rpcprotocol_8h" startline="54">RPC_DESERIALIZATION_ERROR</references>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getmininginfo</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getmininginfo</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="78" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="78" bodyend="112"/>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" compoundref="wallet_8cpp" startline="3699" endline="3730">CWallet::GetStakeWeight</references>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
        <references refid="main_8h_1af8945f7f19ea7e938baab1bd4c226c2f" compoundref="miner_8cpp" startline="79">nLastBlockSize</references>
        <references refid="main_8h_1a31f8b0d3c96670151ba997019820e0f4" compoundref="miner_8cpp" startline="78">nLastBlockTx</references>
        <references refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" compoundref="rpcblockchain_8cpp" startline="17" endline="46">GetDifficulty</references>
        <references refid="main_8cpp_1a67a2382a391340c12c45961f3b8c66e8" compoundref="main_8cpp" startline="1678" endline="1683">GetLastBlockIndex</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="main_8h_1a544c4ab48afad09d2f474d0720570e94" compoundref="miner_8cpp" startline="80">nLastCoinStakeSearchInterval</references>
        <references refid="main_8cpp_1a54eeb686375f66683fb139de496c088d" compoundref="main_8cpp" startline="1662" endline="1675">GetProofOfWorkReward</references>
        <references refid="rpcblockchain_8cpp_1a3da60ebd3884dc09e7a20b0798b6cf36" compoundref="rpcblockchain_8cpp" startline="48" endline="71">GetPoWMHashPS</references>
        <references refid="darksilkgui_8cpp_1a8de51dc4945be68c0581e328efb8c9ab" compoundref="rpcblockchain_8cpp" startline="73" endline="106">GetPoSKernelPS</references>
        <references refid="main_8cpp_1a70b1d1b79f1c760e65c960713b87b732" compoundref="main_8cpp" startline="2327" endline="2368">GetWarnings</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_tx_mem_pool_1a0d3646e13e7fce3b1df3dd30b02e3396" compoundref="txmempool_8h" startline="414" endline="418">CTxMemPool::size</references>
        <references refid="chainparams_8h_1abc8c1af875107f5eac0f327bd3b8363d" compoundref="chainparams_8h" startline="111" endline="114">TestNet</references>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getstakinginfo</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getstakinginfo</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="114" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="114" bodyend="148"/>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" compoundref="wallet_8cpp" startline="3699" endline="3730">CWallet::GetStakeWeight</references>
        <references refid="darksilkgui_8cpp_1a8de51dc4945be68c0581e328efb8c9ab" compoundref="rpcblockchain_8cpp" startline="73" endline="106">GetPoSKernelPS</references>
        <references refid="main_8h_1a544c4ab48afad09d2f474d0720570e94" compoundref="miner_8cpp" startline="80">nLastCoinStakeSearchInterval</references>
        <references refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" compoundref="util_8cpp" startline="550" endline="559">GetBoolArg</references>
        <references refid="main_8cpp_1a70b1d1b79f1c760e65c960713b87b732" compoundref="main_8cpp" startline="2327" endline="2368">GetWarnings</references>
        <references refid="main_8h_1af8945f7f19ea7e938baab1bd4c226c2f" compoundref="miner_8cpp" startline="79">nLastBlockSize</references>
        <references refid="main_8h_1a31f8b0d3c96670151ba997019820e0f4" compoundref="miner_8cpp" startline="78">nLastBlockTx</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_tx_mem_pool_1a0d3646e13e7fce3b1df3dd30b02e3396" compoundref="txmempool_8h" startline="414" endline="418">CTxMemPool::size</references>
        <references refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" compoundref="rpcblockchain_8cpp" startline="17" endline="46">GetDifficulty</references>
        <references refid="main_8cpp_1a67a2382a391340c12c45961f3b8c66e8" compoundref="main_8cpp" startline="1678" endline="1683">GetLastBlockIndex</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value checkkernel</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>checkkernel</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="150" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="150" bodyend="234"/>
        <references refid="rpcserver_8cpp_1a6f9782b3c0efdb472b355c60bd90f2b6" compoundref="rpcserver_8cpp" startline="47" endline="66">RPCTypeCheck</references>
        <references refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a8a173a0de09f9f4e59c89abe4a965504" compoundref="json__spirit__value_8h" startline="26">json_spirit::array_type</references>
        <references refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74acb4555092080cd3b93638a2a8b8c6a6f" compoundref="json__spirit__value_8h" startline="26">json_spirit::bool_type</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" compoundref="rpcprotocol_8cpp" startline="260" endline="266">JSONRPCError</references>
        <references refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="main_8cpp_1a868a58404bd61b6a82901f428d152bae" compoundref="main_8cpp" startline="1685" endline="1723">GetNextTargetRequired</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="classjson__spirit_1_1_value__impl_1a85bcead33b915d62f83bb95ad824da4f" compoundref="json__spirit__value_8h" startline="361" endline="366">json_spirit::Value_impl&lt; Config &gt;::get_obj</references>
        <references refid="namespacejson__spirit_1a74f681114641f2ca6250370280ee1089" compoundref="json__spirit__utils_8h" startline="47" endline="58">json_spirit::find_value</references>
        <references refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" compoundref="json__spirit__value_8h" startline="321" endline="324">json_spirit::Value_impl&lt; Config &gt;::type</references>
        <references refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa7f3c0ef07c91049418fc6ac24ff1c1f" compoundref="json__spirit__value_8h" startline="26">json_spirit::str_type</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" compoundref="rpcprotocol_8h" startline="52">RPC_INVALID_PARAMETER</references>
        <references refid="classjson__spirit_1_1_value__impl_1a0e02b3a4e65ae45f069ee938fee40f80" compoundref="json__spirit__value_8h" startline="353" endline="358">json_spirit::Value_impl&lt; Config &gt;::get_str</references>
        <references refid="util_8cpp_1aa4e3553d2b2fe693c106f4296685f75c" compoundref="util_8cpp" startline="440" endline="448">IsHex</references>
        <references refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa2975b4fc32d1b1c74976404c7064294" compoundref="json__spirit__value_8h" startline="26">json_spirit::int_type</references>
        <references refid="classjson__spirit_1_1_value__impl_1ad437ac0c465adaeefda05eef57a99248" compoundref="json__spirit__value_8h" startline="385" endline="390">json_spirit::Value_impl&lt; Config &gt;::get_int</references>
        <references refid="kernel_8cpp_1afda24c84e30a494d6b63c3a9651579ae" compoundref="kernel_8cpp" startline="328" endline="353">CheckKernel</references>
        <references refid="class_c_out_point_1acd3225f1bb5550af0b900cd0dd7112d9" compoundref="transaction_8h" startline="44" endline="44">COutPoint::IsNull</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" compoundref="uint256_8cpp" startline="154" endline="160">base_uint&lt; BITS &gt;::GetHex</references>
        <references refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" compoundref="transaction_8h" startline="31">COutPoint::n</references>
        <references refid="miner_8cpp_1aa2eb52225c2bb423ea961f4844d1c69a" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" compoundref="serialize_8h" startline="90">SER_DISK</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" compoundref="streams_8h" startline="112" endline="112">CDataStream::begin</references>
        <references refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" compoundref="streams_8h" startline="114" endline="114">CDataStream::end</references>
        <references refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" compoundref="wallet_8cpp" startline="4666" endline="4685">CReserveKey::GetReservedKey</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada5aa884a9e263e1fad4ad13ec564d33d5" compoundref="rpcprotocol_8h" startline="47">RPC_MISC_ERROR</references>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getworkex</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getworkex</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="236" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="236" bodyend="360"/>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" compoundref="rpcprotocol_8cpp" startline="260" endline="266">JSONRPCError</references>
        <references refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" compoundref="txmempool_8cpp" startline="33" endline="37">CTxMemPool::GetTransactionsUpdated</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="miner_8cpp_1aa2eb52225c2bb423ea961f4844d1c69a" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</references>
        <references refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" compoundref="primitives_2block_8h" startline="42">CBlockHeader::nTime</references>
        <references refid="class_c_block_index_1a52a53d7e151aba62e32ec4ffd165b5a7" compoundref="chain_8h" startline="255" endline="258">CBlockIndex::GetPastTimeLimit</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" compoundref="primitives_2block_8h" startline="44">CBlockHeader::nNonce</references>
        <references refid="miner_8cpp_1a6f07c738a8aadffe748358e985b43d3f" compoundref="miner_8cpp" startline="383" endline="399">IncrementExtraNonce</references>
        <references refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" compoundref="primitives_2block_8h" startline="41">CBlockHeader::hashMerkleRoot</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">CBlock::vtx</references>
        <references refid="miner_8cpp_1a391a5a462c3f60bbb7dbf6a09fe2e78f" compoundref="miner_8cpp" startline="401" endline="444">FormatHashBuffers</references>
        <references refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" compoundref="bignum_8h" startline="321" endline="331">CBigNum::SetCompact</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <references refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" compoundref="bignum_8h" startline="278" endline="291">CBigNum::getuint256</references>
        <references refid="class_c_block_1ad857691c46c20eee278c083f7513d0f6" compoundref="primitives_2block_8h" startline="215" endline="229">CBlock::GetMerkleBranch</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" compoundref="util_8h" startline="45">BEGIN</references>
        <references refid="util_8h_1ac32457d3f041434e57a2924847796fda" compoundref="util_8h" startline="46">END</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" compoundref="serialize_8h" startline="89">SER_NETWORK</references>
        <references refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" compoundref="streams_8h" startline="112" endline="112">CDataStream::begin</references>
        <references refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" compoundref="streams_8h" startline="114" endline="114">CDataStream::end</references>
        <references refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" compoundref="util_8cpp" startline="450" endline="469">ParseHex</references>
        <references refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" compoundref="json__spirit__reader__template_8h" startline="172" endline="175">json_spirit::get_str</references>
        <references refid="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" compoundref="util_8h" startline="584" endline="588">ByteReverse</references>
        <references refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" compoundref="primitives_2block_8h" startline="196" endline="213">CBlock::BuildMerkleTree</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="miner_8cpp_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</references>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getwork</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getwork</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="363" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="363" bodyend="473"/>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" compoundref="rpcprotocol_8cpp" startline="260" endline="266">JSONRPCError</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaab5f4888435073da8cd11d99d274c8af" compoundref="rpcprotocol_8h" startline="58">RPC_CLIENT_NOT_CONNECTED</references>
        <references refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd3692758a03ba3dcd1accbdd656b27f" compoundref="rpcprotocol_8h" startline="59">RPC_CLIENT_IN_INITIAL_DOWNLOAD</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" compoundref="txmempool_8cpp" startline="33" endline="37">CTxMemPool::GetTransactionsUpdated</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="miner_8cpp_1aa2eb52225c2bb423ea961f4844d1c69a" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada2b50733804d98a7d4f2252563d864a66" compoundref="rpcprotocol_8h" startline="51">RPC_OUT_OF_MEMORY</references>
        <references refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" compoundref="block_8cpp" startline="52" endline="55">CBlock::UpdateTime</references>
        <references refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" compoundref="primitives_2block_8h" startline="44">CBlockHeader::nNonce</references>
        <references refid="miner_8cpp_1a6f07c738a8aadffe748358e985b43d3f" compoundref="miner_8cpp" startline="383" endline="399">IncrementExtraNonce</references>
        <references refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" compoundref="primitives_2block_8h" startline="41">CBlockHeader::hashMerkleRoot</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">CBlock::vtx</references>
        <references refid="miner_8cpp_1a391a5a462c3f60bbb7dbf6a09fe2e78f" compoundref="miner_8cpp" startline="401" endline="444">FormatHashBuffers</references>
        <references refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" compoundref="bignum_8h" startline="321" endline="331">CBigNum::SetCompact</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <references refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" compoundref="bignum_8h" startline="278" endline="291">CBigNum::getuint256</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" compoundref="util_8h" startline="45">BEGIN</references>
        <references refid="util_8h_1ac32457d3f041434e57a2924847796fda" compoundref="util_8h" startline="46">END</references>
        <references refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" compoundref="util_8cpp" startline="450" endline="469">ParseHex</references>
        <references refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" compoundref="json__spirit__reader__template_8h" startline="172" endline="175">json_spirit::get_str</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" compoundref="rpcprotocol_8h" startline="52">RPC_INVALID_PARAMETER</references>
        <references refid="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" compoundref="util_8h" startline="584" endline="588">ByteReverse</references>
        <references refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" compoundref="primitives_2block_8h" startline="42">CBlockHeader::nTime</references>
        <references refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" compoundref="primitives_2block_8h" startline="196" endline="213">CBlock::BuildMerkleTree</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="miner_8cpp_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</references>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getblocktemplate</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getblocktemplate</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="476" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="476" bodyend="653"/>
        <references refid="classjson__spirit_1_1_value__impl_1a85bcead33b915d62f83bb95ad824da4f" compoundref="json__spirit__value_8h" startline="361" endline="366">json_spirit::Value_impl&lt; Config &gt;::get_obj</references>
        <references refid="namespacejson__spirit_1a74f681114641f2ca6250370280ee1089" compoundref="json__spirit__utils_8h" startline="47" endline="58">json_spirit::find_value</references>
        <references refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" compoundref="json__spirit__value_8h" startline="321" endline="324">json_spirit::Value_impl&lt; Config &gt;::type</references>
        <references refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa7f3c0ef07c91049418fc6ac24ff1c1f" compoundref="json__spirit__value_8h" startline="26">json_spirit::str_type</references>
        <references refid="classjson__spirit_1_1_value__impl_1a0e02b3a4e65ae45f069ee938fee40f80" compoundref="json__spirit__value_8h" startline="353" endline="358">json_spirit::Value_impl&lt; Config &gt;::get_str</references>
        <references refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a38ef470443cb345064758efff2e303fc" compoundref="json__spirit__value_8h" startline="26">json_spirit::null_type</references>
        <references refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" compoundref="rpcprotocol_8cpp" startline="260" endline="266">JSONRPCError</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" compoundref="rpcprotocol_8h" startline="52">RPC_INVALID_PARAMETER</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaab5f4888435073da8cd11d99d274c8af" compoundref="rpcprotocol_8h" startline="58">RPC_CLIENT_NOT_CONNECTED</references>
        <references refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd3692758a03ba3dcd1accbdd656b27f" compoundref="rpcprotocol_8h" startline="59">RPC_CLIENT_IN_INITIAL_DOWNLOAD</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" compoundref="txmempool_8cpp" startline="33" endline="37">CTxMemPool::GetTransactionsUpdated</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="miner_8cpp_1aa2eb52225c2bb423ea961f4844d1c69a" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada2b50733804d98a7d4f2252563d864a66" compoundref="rpcprotocol_8h" startline="51">RPC_OUT_OF_MEMORY</references>
        <references refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" compoundref="block_8cpp" startline="52" endline="55">CBlock::UpdateTime</references>
        <references refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" compoundref="primitives_2block_8h" startline="44">CBlockHeader::nNonce</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">CBlock::vtx</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" compoundref="transaction_8h" startline="314" endline="317">CTransaction::IsCoinBase</references>
        <references refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" compoundref="transaction_8h" startline="319" endline="323">CTransaction::IsCoinStake</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" compoundref="serialize_8h" startline="89">SER_NETWORK</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" compoundref="streams_8h" startline="112" endline="112">CDataStream::begin</references>
        <references refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" compoundref="streams_8h" startline="114" endline="114">CDataStream::end</references>
        <references refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" compoundref="uint256_8cpp" startline="154" endline="160">base_uint&lt; BITS &gt;::GetHex</references>
        <references refid="class_c_transaction_po_s_1a20a028e06f505f03a0d30a7f186d9489" compoundref="main_8cpp" startline="3747" endline="3817">CTransactionPoS::FetchInputs</references>
        <references refid="class_c_transaction_po_s_1ac2c734d9f302dda6e8681ce6d0f7843e" compoundref="main_8cpp" startline="3832" endline="3844">CTransactionPoS::GetValueIn</references>
        <references refid="class_c_transaction_po_s_1ad85303c69a61f41eb8874f07c15faa10" compoundref="main_8cpp" startline="3635" endline="3647">CTransactionPoS::GetValueOut</references>
        <references refid="main_8cpp_1ad2eaf4f8542c12ea9ee1183609cc6d1a" compoundref="main_8cpp" startline="756" endline="768">GetLegacySigOpCount</references>
        <references refid="main_8cpp_1a519cfd439598a8bf64fe5503aa74cfcb" compoundref="main_8cpp" startline="770" endline="784">GetP2SHSigOpCount</references>
        <references refid="main_8cpp_1a5ed86cbbedb72d8fcec0524f2792ada8" compoundref="main_8cpp" startline="104">COINBASE_FLAGS</references>
        <references refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" compoundref="bignum_8h" startline="321" endline="331">CBigNum::SetCompact</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <references refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" compoundref="bignum_8h" startline="278" endline="291">CBigNum::getuint256</references>
        <references refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" compoundref="primitives_2block_8h" startline="39">CBlockHeader::nVersion</references>
        <references refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" compoundref="primitives_2block_8h" startline="40">CBlockHeader::hashPrevBlock</references>
        <references refid="class_c_block_index_1a52a53d7e151aba62e32ec4ffd165b5a7" compoundref="chain_8h" startline="255" endline="258">CBlockIndex::GetPastTimeLimit</references>
        <references refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" compoundref="primitives_2block_8h" startline="42">CBlockHeader::nTime</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_1a1604a6d25f313ab1bf4e3777a6cba948" compoundref="primitives_2block_8h" startline="113">CBlock::payee</references>
        <references refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" compoundref="script_8cpp" startline="2670" endline="2694">ExtractDestination</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="main_8cpp_1ab9c19a2d094fea9bd9f285f4b33961a4" compoundref="main_8cpp" startline="1733" endline="1738">GetStormnodePayment</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
      </memberdef>
      <memberdef kind="function" id="rpcmining_8cpp_1a6fc1aa077add8cb1c74207056616134d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value submitblock</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>submitblock</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcmining.cpp" line="655" column="1" bodyfile="/home/dev/ds-160209/src/rpcmining.cpp" bodystart="655" bodyend="679"/>
        <references refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" compoundref="util_8cpp" startline="450" endline="469">ParseHex</references>
        <references refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" compoundref="json__spirit__reader__template_8h" startline="172" endline="175">json_spirit::get_str</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" compoundref="serialize_8h" startline="89">SER_NETWORK</references>
        <references refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" compoundref="rpcprotocol_8cpp" startline="260" endline="266">JSONRPCError</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae41723a0e8091c7853a1e582e317b272" compoundref="rpcprotocol_8h" startline="54">RPC_DESERIALIZATION_ERROR</references>
        <references refid="main_8cpp_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</references>
        <references refid="classjson__spirit_1_1_value__impl_1abb8ef4f2732e2c842afa716c456cb35d" compoundref="json__spirit__value_8h" startline="78">json_spirit::Value_impl&lt; Config &gt;::null</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rpcserver_8h" kindref="compound">rpcserver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base58_8h" kindref="compound">base58.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chainparams_8h" kindref="compound">chainparams.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db_8h" kindref="compound">db.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb_8h" kindref="compound">txdb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="miner_8h" kindref="compound">miner.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel_8h" kindref="compound">kernel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb-leveldb_8h" kindref="compound">txdb-leveldb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-sync_8h" kindref="compound">stormnode-sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/list_of.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacejson__spirit" kindref="compound">json_spirit</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost_1_1assign" kindref="compound">boost::assign</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Key<sp/>used<sp/>by<sp/>getwork/getblocktemplate<sp/>miners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allocated<sp/>in<sp/>InitRPCMining,<sp/>free&apos;d<sp/>in<sp/>ShutdownRPCMining</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref>*<sp/>pMiningKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="rpcserver_8h_1ad47789e7e3d3323a832e764f692e4ea8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rpcmining_8cpp_1ad47789e7e3d3323a832e764f692e4ea8" kindref="member">InitRPCMining</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getwork/getblocktemplate<sp/>mining<sp/>rewards<sp/>paid<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>pMiningKey<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="rpcserver_8h_1ae7370e6af93e26e0c967cda6a63fe3a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rpcmining_8cpp_1ae7370e6af93e26e0c967cda6a63fe3a9" kindref="member">ShutdownRPCMining</ref>()</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pMiningKey)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pMiningKey;<sp/>pMiningKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="rpcmining_8cpp_1a70bed6c442862e2a969b623e3b56b952" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcmining_8cpp_1a70bed6c442862e2a969b623e3b56b952" kindref="member">getsubsidy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getsubsidy<sp/>[nTarget]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>proof-of-work<sp/>subsidy<sp/>value<sp/>for<sp/>the<sp/>specified<sp/>value<sp/>of<sp/>target.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="main_8cpp_1a54eeb686375f66683fb139de496c088d" kindref="member">GetProofOfWorkReward</ref>(0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="rpcmining_8cpp_1a389f62bd448bb24933a1ea8920411d7e" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcmining_8cpp_1a389f62bd448bb24933a1ea8920411d7e" kindref="member">getstakesubsidy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getstakesubsidy<sp/>&lt;hex<sp/>string&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>proof-of-stake<sp/>subsidy<sp/>value<sp/>for<sp/>the<sp/>specified<sp/>coinstake.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcserver_8cpp_1a6f9782b3c0efdb472b355c60bd90f2b6" kindref="member">RPCTypeCheck</ref>(params,<sp/>list_of(<ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa7f3c0ef07c91049418fc6ac24ff1c1f" kindref="member">str_type</ref>));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>txData(<ref refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" kindref="member">ParseHex</ref>(params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>()));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssData(txData,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssData<sp/>&gt;&gt;<sp/>tx;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae41723a0e8091c7853a1e582e317b272" kindref="member">RPC_DESERIALIZATION_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;TX<sp/>decode<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)STATIC_POS_REWARD;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" kindref="member">getmininginfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getmininginfo\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>an<sp/>object<sp/>containing<sp/>mining-related<sp/>information.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nWeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nWeight<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" kindref="member">GetStakeWeight</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>obj,<sp/>diff,<sp/>weight;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;blocks&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref>));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;currentblocksize&quot;</highlight><highlight class="normal">,(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="main_8h_1af8945f7f19ea7e938baab1bd4c226c2f" kindref="member">nLastBlockSize</ref>));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;currentblocktx&quot;</highlight><highlight class="normal">,(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="main_8h_1a31f8b0d3c96670151ba997019820e0f4" kindref="member">nLastBlockTx</ref>));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>diff.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;proof-of-work&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" kindref="member">GetDifficulty</ref>()));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>diff.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;proof-of-stake&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" kindref="member">GetDifficulty</ref>(<ref refid="main_8cpp_1a67a2382a391340c12c45961f3b8c66e8" kindref="member">GetLastBlockIndex</ref>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>diff.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;search-interval&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="main_8h_1a544c4ab48afad09d2f474d0720570e94" kindref="member">nLastCoinStakeSearchInterval</ref>));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;difficulty&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>diff));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;blockvalue&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="main_8cpp_1a54eeb686375f66683fb139de496c088d" kindref="member">GetProofOfWorkReward</ref>(0)));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;netmhashps&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><ref refid="rpcblockchain_8cpp_1a3da60ebd3884dc09e7a20b0798b6cf36" kindref="member">GetPoWMHashPS</ref>()));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;netstakeweight&quot;</highlight><highlight class="normal">,<sp/><ref refid="darksilkgui_8cpp_1a8de51dc4945be68c0581e328efb8c9ab" kindref="member">GetPoSKernelPS</ref>()));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;errors&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a70b1d1b79f1c760e65c960713b87b732" kindref="member">GetWarnings</ref>(</highlight><highlight class="stringliteral">&quot;statusbar&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;pooledtx&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a0d3646e13e7fce3b1df3dd30b02e3396" kindref="member">size</ref>()));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>weight.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;minimum&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)nWeight));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>weight.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;maximum&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)0));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>weight.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;combined&quot;</highlight><highlight class="normal">,<sp/><sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)nWeight));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;stakeweight&quot;</highlight><highlight class="normal">,<sp/>weight));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;testnet&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="chainparams_8h_1abc8c1af875107f5eac0f327bd3b8363d" kindref="member">TestNet</ref>()));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" kindref="member">getstakinginfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getstakinginfo\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>an<sp/>object<sp/>containing<sp/>staking-related<sp/>information.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nWeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nWeight<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" kindref="member">GetStakeWeight</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nNetworkWeight<sp/>=<sp/><ref refid="darksilkgui_8cpp_1a8de51dc4945be68c0581e328efb8c9ab" kindref="member">GetPoSKernelPS</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>staking<sp/>=<sp/><ref refid="main_8h_1a544c4ab48afad09d2f474d0720570e94" kindref="member">nLastCoinStakeSearchInterval</ref><sp/>&amp;&amp;<sp/>nWeight;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nExpectedTime<sp/>=<sp/>staking<sp/>?<sp/>(POS_TARGET_SPACING<sp/>*<sp/>nNetworkWeight<sp/>/<sp/>nWeight)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;enabled&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-staking&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;staking&quot;</highlight><highlight class="normal">,<sp/>staking));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;errors&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a70b1d1b79f1c760e65c960713b87b732" kindref="member">GetWarnings</ref>(</highlight><highlight class="stringliteral">&quot;statusbar&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;currentblocksize&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="main_8h_1af8945f7f19ea7e938baab1bd4c226c2f" kindref="member">nLastBlockSize</ref>));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;currentblocktx&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="main_8h_1a31f8b0d3c96670151ba997019820e0f4" kindref="member">nLastBlockTx</ref>));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;pooledtx&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a0d3646e13e7fce3b1df3dd30b02e3396" kindref="member">size</ref>()));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;difficulty&quot;</highlight><highlight class="normal">,<sp/><ref refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" kindref="member">GetDifficulty</ref>(<ref refid="main_8cpp_1a67a2382a391340c12c45961f3b8c66e8" kindref="member">GetLastBlockIndex</ref>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;search-interval&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="main_8h_1a544c4ab48afad09d2f474d0720570e94" kindref="member">nLastCoinStakeSearchInterval</ref>));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;weight&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)nWeight));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;netstakeweight&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)nNetworkWeight));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;expectedtime&quot;</highlight><highlight class="normal">,<sp/>nExpectedTime));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" kindref="member">checkkernel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>&lt;<sp/>1<sp/>||<sp/>params.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;checkkernel<sp/>[{\&quot;txid\&quot;:txid,\&quot;vout\&quot;:n},...]<sp/>[createblocktemplate=false]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Check<sp/>if<sp/>one<sp/>of<sp/>given<sp/>inputs<sp/>is<sp/>a<sp/>kernel<sp/>input<sp/>at<sp/>the<sp/>moment.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcserver_8cpp_1a6f9782b3c0efdb472b355c60bd90f2b6" kindref="member">RPCTypeCheck</ref>(params,<sp/>list_of(<ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a8a173a0de09f9f4e59c89abe4a965504" kindref="member">array_type</ref>)(<ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74acb4555092080cd3b93638a2a8b8c6a6f" kindref="member">bool_type</ref>));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>inputs<sp/>=<sp/>params[0].get_array();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCreateBlockTemplate<sp/>=<sp/>params.size()<sp/>&gt;<sp/>1<sp/>?<sp/>params[1].get_bool()<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>.empty())</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(-9,<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>is<sp/>not<sp/>connected!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" kindref="member">IsInitialBlockDownload</ref>())</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(-10,<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>is<sp/>downloading<sp/>blocks...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>kernel;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits<sp/>=<sp/><ref refid="main_8cpp_1a868a58404bd61b6a82901f428d152bae" kindref="member">GetNextTargetRequired</ref>(pindexPrev,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTime<sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>nTime<sp/>&amp;=<sp/>~STAKE_TIMESTAMP_MASK;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>input,<sp/>inputs)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref>&amp;<sp/>o<sp/>=<sp/>input.<ref refid="classjson__spirit_1_1_value__impl_1a85bcead33b915d62f83bb95ad824da4f" kindref="member">get_obj</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>txid_v<sp/>=<sp/><ref refid="namespacejson__spirit_1a74f681114641f2ca6250370280ee1089" kindref="member">find_value</ref>(o,<sp/></highlight><highlight class="stringliteral">&quot;txid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txid_v.<ref refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" kindref="member">type</ref>()<sp/>!=<sp/><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa7f3c0ef07c91049418fc6ac24ff1c1f" kindref="member">str_type</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" kindref="member">RPC_INVALID_PARAMETER</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>parameter,<sp/>missing<sp/>txid<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>txid<sp/>=<sp/>txid_v.<ref refid="classjson__spirit_1_1_value__impl_1a0e02b3a4e65ae45f069ee938fee40f80" kindref="member">get_str</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1aa4e3553d2b2fe693c106f4296685f75c" kindref="member">IsHex</ref>(txid))</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" kindref="member">RPC_INVALID_PARAMETER</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>parameter,<sp/>expected<sp/>hex<sp/>txid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>vout_v<sp/>=<sp/><ref refid="namespacejson__spirit_1a74f681114641f2ca6250370280ee1089" kindref="member">find_value</ref>(o,<sp/></highlight><highlight class="stringliteral">&quot;vout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vout_v.<ref refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" kindref="member">type</ref>()<sp/>!=<sp/><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa2975b4fc32d1b1c74976404c7064294" kindref="member">int_type</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" kindref="member">RPC_INVALID_PARAMETER</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>parameter,<sp/>missing<sp/>vout<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nOutput<sp/>=<sp/>vout_v.<ref refid="classjson__spirit_1_1_value__impl_1ad437ac0c465adaeefda05eef57a99248" kindref="member">get_int</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nOutput<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" kindref="member">RPC_INVALID_PARAMETER</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>parameter,<sp/>vout<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>cInput(<ref refid="classuint256" kindref="compound">uint256</ref>(txid),<sp/>nOutput);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="kernel_8cpp_1afda24c84e30a494d6b63c3a9651579ae" kindref="member">CheckKernel</ref>(pindexPrev,<sp/>nBits,<sp/>nTime,<sp/>cInput))</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel<sp/>=<sp/>cInput;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>result;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;found&quot;</highlight><highlight class="normal">,<sp/>!kernel.<ref refid="class_c_out_point_1acd3225f1bb5550af0b900cd0dd7112d9" kindref="member">IsNull</ref>()));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kernel.<ref refid="class_c_out_point_1acd3225f1bb5550af0b900cd0dd7112d9" kindref="member">IsNull</ref>())</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>oKernel;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>oKernel.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;txid&quot;</highlight><highlight class="normal">,<sp/>kernel.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>oKernel.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;vout&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)kernel.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>oKernel.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">,<sp/>nTime));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;kernel&quot;</highlight><highlight class="normal">,<sp/>oKernel));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fCreateBlockTemplate)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nFees;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>auto_ptr&lt;CBlock&gt;<sp/>pblock(<ref refid="miner_8cpp_1aa2eb52225c2bb423ea961f4844d1c69a" kindref="member">CreateNewBlock</ref>(*pMiningKey,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>&amp;nFees));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>pblock-&gt;nTime<sp/>=<sp/>pblock-&gt;vtx[0].nTime<sp/>=<sp/>nTime;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>*pblock;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;blocktemplate&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(ss.<ref refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" kindref="member">begin</ref>(),<sp/>ss.<ref refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" kindref="member">end</ref>())));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;blocktemplatefees&quot;</highlight><highlight class="normal">,<sp/>nFees));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pMiningKey-&gt;<ref refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" kindref="member">GetReservedKey</ref>(pubkey))</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada5aa884a9e263e1fad4ad13ec564d33d5" kindref="member">RPC_MISC_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GetReservedKey<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;blocktemplatesignkey&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(pubkey)));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" kindref="member">getworkex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getworkex<sp/>[data,<sp/>coinbase]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>[data,<sp/>coinbase]<sp/>is<sp/>not<sp/>specified,<sp/>returns<sp/>extended<sp/>work<sp/>data.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>.empty())</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(-9,<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>is<sp/>not<sp/>connected!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" kindref="member">IsInitialBlockDownload</ref>())</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(-10,<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>is<sp/>downloading<sp/>blocks...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;uint256,<sp/>pair&lt;CBlock*,<sp/>CScript&gt;<sp/>&gt;<sp/>mapNewBlock_t;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>mapNewBlock_t<sp/>mapNewBlock;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vector&lt;CBlock*&gt;<sp/>vNewBlock;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTransactionsUpdatedLast;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindexPrev<sp/>!=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>||</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" kindref="member">GetTransactionsUpdated</ref>()<sp/>!=<sp/>nTransactionsUpdatedLast<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>-<sp/>nStart<sp/>&gt;<sp/>60))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindexPrev<sp/>!=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deallocate<sp/>old<sp/>blocks<sp/>since<sp/>they&apos;re<sp/>obsolete<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapNewBlock.clear();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock,<sp/>vNewBlock)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pblock;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vNewBlock.clear();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTransactionsUpdatedLast<sp/>=<sp/><ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" kindref="member">GetTransactionsUpdated</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexPrev<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStart<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock<sp/>=<sp/><ref refid="miner_8cpp_1aa2eb52225c2bb423ea961f4844d1c69a" kindref="member">CreateNewBlock</ref>(*pMiningKey);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pblock)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(-7,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vNewBlock.push_back(pblock);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>nTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" kindref="member">nTime</ref><sp/>=<sp/>max(pindexPrev-&gt;<ref refid="class_c_block_index_1a52a53d7e151aba62e32ec4ffd165b5a7" kindref="member">GetPastTimeLimit</ref>()+1,<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" kindref="member">nNonce</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>nExtraNonce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nExtraNonce<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="miner_8cpp_1a6f07c738a8aadffe748358e985b43d3f" kindref="member">IncrementExtraNonce</ref>(pblock,<sp/>pindexPrev,<sp/>nExtraNonce);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapNewBlock[pblock-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>]<sp/>=<sp/>make_pair(pblock,<sp/>pblock-&gt;<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0].vin[0].scriptSig);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prebuild<sp/>hash<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pmidstate[32];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pdata[128];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>phash1[64];</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="miner_8cpp_1a391a5a462c3f60bbb7dbf6a09fe2e78f" kindref="member">FormatHashBuffers</ref>(pblock,<sp/>pmidstate,<sp/>pdata,<sp/>phash1);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashTarget<sp/>=<sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref>().<ref refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" kindref="member">SetCompact</ref>(pblock-&gt;<ref refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" kindref="member">nBits</ref>).<ref refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" kindref="member">getuint256</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>coinbaseTx<sp/>=<sp/>pblock-&gt;<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint256&gt;<sp/>merkle<sp/>=<sp/>pblock-&gt;<ref refid="class_c_block_1ad857691c46c20eee278c083f7513d0f6" kindref="member">GetMerkleBranch</ref>(0);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>result;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(<ref refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" kindref="member">BEGIN</ref>(pdata),<sp/><ref refid="util_8h_1ac32457d3f041434e57a2924847796fda" kindref="member">END</ref>(pdata))));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(<ref refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" kindref="member">BEGIN</ref>(hashTarget),<sp/><ref refid="util_8h_1ac32457d3f041434e57a2924847796fda" kindref="member">END</ref>(hashTarget))));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssTx(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssTx<sp/>&lt;&lt;<sp/>coinbaseTx;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;coinbase&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(ssTx.<ref refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" kindref="member">begin</ref>(),<sp/>ssTx.<ref refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" kindref="member">end</ref>())));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>merkle_arr;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="classuint256" kindref="compound">uint256</ref><sp/>merkleh,<sp/>merkle)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merkle_arr.push_back(<ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(<ref refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" kindref="member">BEGIN</ref>(merkleh),<sp/><ref refid="util_8h_1ac32457d3f041434e57a2924847796fda" kindref="member">END</ref>(merkleh)));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;merkle&quot;</highlight><highlight class="normal">,<sp/>merkle_arr));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>vchData<sp/>=<sp/><ref refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" kindref="member">ParseHex</ref>(params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>coinbase;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params.size()<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coinbase<sp/>=<sp/><ref refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" kindref="member">ParseHex</ref>(params[1].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>!=<sp/>128)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(-8,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>parameter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pdata<sp/>=<sp/>(<ref refid="class_c_block" kindref="compound">CBlock</ref>*)&amp;vchData[0];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Byte<sp/>reverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>128/4;<sp/>i++)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)pdata)[i]<sp/>=<sp/><ref refid="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" kindref="member">ByteReverse</ref>(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)pdata)[i]);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>saved<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mapNewBlock.count(pdata-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>))</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock<sp/>=<sp/>mapNewBlock[pdata-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>].first;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" kindref="member">nTime</ref><sp/>=<sp/>pdata-&gt;<ref refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" kindref="member">nTime</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" kindref="member">nNonce</ref><sp/>=<sp/>pdata-&gt;<ref refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" kindref="member">nNonce</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coinbase.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0].vin[0].scriptSig<sp/>=<sp/>mapNewBlock[pdata-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>].second;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>(coinbase,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION)<sp/>&gt;&gt;<sp/>pblock-&gt;<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0];<sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>-<sp/>HACK!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref><sp/>=<sp/>pblock-&gt;<ref refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" kindref="member">BuildMerkleTree</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="miner_8cpp_1aadd8a05aa6d8fae1c0f4daa5e971a12a" kindref="member">CheckWork</ref>(pblock,<sp/>*<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>,<sp/>*pMiningKey);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" kindref="member">getwork</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getwork<sp/>[data]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>[data]<sp/>is<sp/>not<sp/>specified,<sp/>returns<sp/>formatted<sp/>hash<sp/>data<sp/>to<sp/>work<sp/>on:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;midstate\&quot;<sp/>:<sp/>precomputed<sp/>hash<sp/>state<sp/>after<sp/>hashing<sp/>the<sp/>first<sp/>half<sp/>of<sp/>the<sp/>data<sp/>(DEPRECATED)\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;data\&quot;<sp/>:<sp/>block<sp/>data\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;hash1\&quot;<sp/>:<sp/>formatted<sp/>hash<sp/>buffer<sp/>for<sp/>second<sp/>hash<sp/>(DEPRECATED)\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;target\&quot;<sp/>:<sp/>little<sp/>endian<sp/>hash<sp/>target\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>[data]<sp/>is<sp/>specified,<sp/>tries<sp/>to<sp/>solve<sp/>the<sp/>block<sp/>and<sp/>returns<sp/>true<sp/>if<sp/>it<sp/>was<sp/>successful.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>.empty())</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaab5f4888435073da8cd11d99d274c8af" kindref="member">RPC_CLIENT_NOT_CONNECTED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>is<sp/>not<sp/>connected!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" kindref="member">IsInitialBlockDownload</ref>())</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd3692758a03ba3dcd1accbdd656b27f" kindref="member">RPC_CLIENT_IN_INITIAL_DOWNLOAD</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>is<sp/>downloading<sp/>blocks...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;uint256,<sp/>pair&lt;CBlock*,<sp/>CScript&gt;<sp/>&gt;<sp/>mapNewBlock_t;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>mapNewBlock_t<sp/>mapNewBlock;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>thread<sp/>safety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vector&lt;CBlock*&gt;<sp/>vNewBlock;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTransactionsUpdatedLast;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindexPrev<sp/>!=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>||</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" kindref="member">GetTransactionsUpdated</ref>()<sp/>!=<sp/>nTransactionsUpdatedLast<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>-<sp/>nStart<sp/>&gt;<sp/>60))</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindexPrev<sp/>!=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deallocate<sp/>old<sp/>blocks<sp/>since<sp/>they&apos;re<sp/>obsolete<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapNewBlock.clear();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock,<sp/>vNewBlock)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pblock;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vNewBlock.clear();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>pindexPrev<sp/>so<sp/>future<sp/>getworks<sp/>make<sp/>a<sp/>new<sp/>block,<sp/>despite<sp/>any<sp/>failures<sp/>from<sp/>here<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexPrev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>pindexBest<sp/>used<sp/>before<sp/>CreateNewBlock,<sp/>to<sp/>avoid<sp/>races</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTransactionsUpdatedLast<sp/>=<sp/><ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" kindref="member">GetTransactionsUpdated</ref>();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrevNew<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStart<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock<sp/>=<sp/><ref refid="miner_8cpp_1aa2eb52225c2bb423ea961f4844d1c69a" kindref="member">CreateNewBlock</ref>(*pMiningKey);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pblock)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada2b50733804d98a7d4f2252563d864a66" kindref="member">RPC_OUT_OF_MEMORY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vNewBlock.push_back(pblock);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>update<sp/>only<sp/>after<sp/>we<sp/>know<sp/>CreateNewBlock<sp/>succeeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexPrev<sp/>=<sp/>pindexPrevNew;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>nTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" kindref="member">UpdateTime</ref>(pindexPrev);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" kindref="member">nNonce</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>nExtraNonce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nExtraNonce<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="miner_8cpp_1a6f07c738a8aadffe748358e985b43d3f" kindref="member">IncrementExtraNonce</ref>(pblock,<sp/>pindexPrev,<sp/>nExtraNonce);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapNewBlock[pblock-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>]<sp/>=<sp/>make_pair(pblock,<sp/>pblock-&gt;<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0].vin[0].scriptSig);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pre-build<sp/>hash<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pmidstate[32];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pdata[128];</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>phash1[64];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="miner_8cpp_1a391a5a462c3f60bbb7dbf6a09fe2e78f" kindref="member">FormatHashBuffers</ref>(pblock,<sp/>pmidstate,<sp/>pdata,<sp/>phash1);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashTarget<sp/>=<sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref>().<ref refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" kindref="member">SetCompact</ref>(pblock-&gt;<ref refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" kindref="member">nBits</ref>).<ref refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" kindref="member">getuint256</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>result;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;midstate&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(<ref refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" kindref="member">BEGIN</ref>(pmidstate),<sp/><ref refid="util_8h_1ac32457d3f041434e57a2924847796fda" kindref="member">END</ref>(pmidstate))));<sp/></highlight><highlight class="comment">//<sp/>deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(<ref refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" kindref="member">BEGIN</ref>(pdata),<sp/><ref refid="util_8h_1ac32457d3f041434e57a2924847796fda" kindref="member">END</ref>(pdata))));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;hash1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(<ref refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" kindref="member">BEGIN</ref>(phash1),<sp/><ref refid="util_8h_1ac32457d3f041434e57a2924847796fda" kindref="member">END</ref>(phash1))));<sp/></highlight><highlight class="comment">//<sp/>deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(<ref refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" kindref="member">BEGIN</ref>(hashTarget),<sp/><ref refid="util_8h_1ac32457d3f041434e57a2924847796fda" kindref="member">END</ref>(hashTarget))));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>vchData<sp/>=<sp/><ref refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" kindref="member">ParseHex</ref>(params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchData.size()<sp/>!=<sp/>128)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" kindref="member">RPC_INVALID_PARAMETER</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>parameter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pdata<sp/>=<sp/>(<ref refid="class_c_block" kindref="compound">CBlock</ref>*)&amp;vchData[0];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Byte<sp/>reverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>128/4;<sp/>i++)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)pdata)[i]<sp/>=<sp/><ref refid="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" kindref="member">ByteReverse</ref>(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)pdata)[i]);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>saved<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mapNewBlock.count(pdata-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>))</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock<sp/>=<sp/>mapNewBlock[pdata-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>].first;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" kindref="member">nTime</ref><sp/>=<sp/>pdata-&gt;<ref refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" kindref="member">nTime</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" kindref="member">nNonce</ref><sp/>=<sp/>pdata-&gt;<ref refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" kindref="member">nNonce</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0].vin[0].scriptSig<sp/>=<sp/>mapNewBlock[pdata-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>].second;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref><sp/>=<sp/>pblock-&gt;<ref refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" kindref="member">BuildMerkleTree</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="miner_8cpp_1aadd8a05aa6d8fae1c0f4daa5e971a12a" kindref="member">CheckWork</ref>(pblock,<sp/>*<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>,<sp/>*pMiningKey);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" kindref="member">getblocktemplate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getblocktemplate<sp/>[params]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>data<sp/>needed<sp/>to<sp/>construct<sp/>a<sp/>block<sp/>to<sp/>work<sp/>on:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;version\&quot;<sp/>:<sp/>block<sp/>version\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;previousblockhash\&quot;<sp/>:<sp/>hash<sp/>of<sp/>current<sp/>highest<sp/>block\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;transactions\&quot;<sp/>:<sp/>contents<sp/>of<sp/>non-coinbase<sp/>transactions<sp/>that<sp/>should<sp/>be<sp/>included<sp/>in<sp/>the<sp/>next<sp/>block\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;coinbaseaux\&quot;<sp/>:<sp/>data<sp/>that<sp/>should<sp/>be<sp/>included<sp/>in<sp/>coinbase\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;coinbasevalue\&quot;<sp/>:<sp/>maximum<sp/>allowable<sp/>input<sp/>to<sp/>coinbase<sp/>transaction,<sp/>including<sp/>the<sp/>generation<sp/>award<sp/>and<sp/>transaction<sp/>fees\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;target\&quot;<sp/>:<sp/>hash<sp/>target\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;mintime\&quot;<sp/>:<sp/>minimum<sp/>timestamp<sp/>appropriate<sp/>for<sp/>next<sp/>block\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;curtime\&quot;<sp/>:<sp/>current<sp/>timestamp\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;mutable\&quot;<sp/>:<sp/>list<sp/>of<sp/>ways<sp/>the<sp/>block<sp/>template<sp/>may<sp/>be<sp/>changed\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;noncerange\&quot;<sp/>:<sp/>range<sp/>of<sp/>valid<sp/>nonces\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;sigoplimit\&quot;<sp/>:<sp/>limit<sp/>of<sp/>sigops<sp/>in<sp/>blocks\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;sizelimit\&quot;<sp/>:<sp/>limit<sp/>of<sp/>block<sp/>size\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;bits\&quot;<sp/>:<sp/>compressed<sp/>target<sp/>of<sp/>next<sp/>block\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;height\&quot;<sp/>:<sp/>height<sp/>of<sp/>the<sp/>next<sp/>block\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;payee\&quot;<sp/>:<sp/>\&quot;xxx\&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(string)<sp/>required<sp/>payee<sp/>for<sp/>the<sp/>next<sp/>block\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;payee_amount\&quot;<sp/>:<sp/>n,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(numeric)<sp/>required<sp/>amount<sp/>to<sp/>pay\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;votes\&quot;<sp/>:<sp/>[\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(array)<sp/>show<sp/>vote<sp/>candidates\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>...<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(json<sp/>object)<sp/>vote<sp/>candidate\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,...\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>],\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;stormnode_payments\&quot;<sp/>:<sp/>true|false,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(boolean)<sp/>true,<sp/>if<sp/>stormnode<sp/>payments<sp/>are<sp/>enabled&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>\&quot;enforce_stormnode_payments\&quot;<sp/>:<sp/>true|false<sp/><sp/>(boolean)<sp/>true,<sp/>if<sp/>stormnode<sp/>payments<sp/>are<sp/>enforced&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;template&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref>&amp;<sp/>oparam<sp/>=<sp/>params[0].<ref refid="classjson__spirit_1_1_value__impl_1a85bcead33b915d62f83bb95ad824da4f" kindref="member">get_obj</ref>();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>modeval<sp/>=<sp/><ref refid="namespacejson__spirit_1a74f681114641f2ca6250370280ee1089" kindref="member">find_value</ref>(oparam,<sp/></highlight><highlight class="stringliteral">&quot;mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modeval.<ref refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" kindref="member">type</ref>()<sp/>==<sp/><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa7f3c0ef07c91049418fc6ac24ff1c1f" kindref="member">str_type</ref>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strMode<sp/>=<sp/>modeval.<ref refid="classjson__spirit_1_1_value__impl_1a0e02b3a4e65ae45f069ee938fee40f80" kindref="member">get_str</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modeval.<ref refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" kindref="member">type</ref>()<sp/>==<sp/><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a38ef470443cb345064758efff2e303fc" kindref="member">null_type</ref>)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" kindref="member">RPC_INVALID_PARAMETER</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;template&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" kindref="member">RPC_INVALID_PARAMETER</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>.empty())</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaab5f4888435073da8cd11d99d274c8af" kindref="member">RPC_CLIENT_NOT_CONNECTED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>is<sp/>not<sp/>connected!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" kindref="member">IsInitialBlockDownload</ref>())</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd3692758a03ba3dcd1accbdd656b27f" kindref="member">RPC_CLIENT_IN_INITIAL_DOWNLOAD</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>is<sp/>downloading<sp/>blocks...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTransactionsUpdatedLast;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindexPrev<sp/>!=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>||</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" kindref="member">GetTransactionsUpdated</ref>()<sp/>!=<sp/>nTransactionsUpdatedLast<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>-<sp/>nStart<sp/>&gt;<sp/>5))</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>pindexPrev<sp/>so<sp/>future<sp/>calls<sp/>make<sp/>a<sp/>new<sp/>block,<sp/>despite<sp/>any<sp/>failures<sp/>from<sp/>here<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexPrev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>pindexBest<sp/>used<sp/>before<sp/>CreateNewBlock,<sp/>to<sp/>avoid<sp/>races</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTransactionsUpdatedLast<sp/>=<sp/><ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a26a5bdb66c9b84f73d1d30fea8e31cc9" kindref="member">GetTransactionsUpdated</ref>();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrevNew<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStart<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pblock)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pblock;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblock<sp/>=<sp/><ref refid="miner_8cpp_1aa2eb52225c2bb423ea961f4844d1c69a" kindref="member">CreateNewBlock</ref>(*pMiningKey);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pblock)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada2b50733804d98a7d4f2252563d864a66" kindref="member">RPC_OUT_OF_MEMORY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>update<sp/>only<sp/>after<sp/>we<sp/>know<sp/>CreateNewBlock<sp/>succeeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexPrev<sp/>=<sp/>pindexPrevNew;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>nTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" kindref="member">UpdateTime</ref>(pindexPrev);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>pblock-&gt;<ref refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" kindref="member">nNonce</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>transactions;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>int64_t&gt;<sp/>setTxIndex;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/>pblock-&gt;<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>txHash<sp/>=<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTxIndex[txHash]<sp/>=<sp/>i++;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx.<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()<sp/>||<sp/>tx.<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>())</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>entry;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssTx(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssTx<sp/>&lt;&lt;<sp/>tx;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(ssTx.<ref refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" kindref="member">begin</ref>(),<sp/>ssTx.<ref refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" kindref="member">end</ref>())));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;hash&quot;</highlight><highlight class="normal">,<sp/>txHash.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref><sp/>mapInputs;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CTxIndex&gt;<sp/>mapUnused;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fInvalid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_po_s" kindref="compound">CTransactionPoS</ref><sp/>txPoS;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txPoS.<ref refid="class_c_transaction_po_s_1a20a028e06f505f03a0d30a7f186d9489" kindref="member">FetchInputs</ref>(tx,<sp/>txdb,<sp/>mapUnused,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>mapInputs,<sp/>fInvalid))</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;fee&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)(txPoS.<ref refid="class_c_transaction_po_s_1ac2c734d9f302dda6e8681ce6d0f7843e" kindref="member">GetValueIn</ref>(tx,<sp/>mapInputs)<sp/>-<sp/>txPoS.<ref refid="class_c_transaction_po_s_1ad85303c69a61f41eb8874f07c15faa10" kindref="member">GetValueOut</ref>(tx))));</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>deps;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(MapPrevTx::value_type&amp;<sp/>inp,<sp/>mapInputs)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setTxIndex.count(inp.first))</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deps.push_back(setTxIndex[inp.first]);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;depends&quot;</highlight><highlight class="normal">,<sp/>deps));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nSigOps<sp/>=<sp/><ref refid="main_8cpp_1ad2eaf4f8542c12ea9ee1183609cc6d1a" kindref="member">GetLegacySigOpCount</ref>(tx);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSigOps<sp/>+=<sp/><ref refid="main_8cpp_1a519cfd439598a8bf64fe5503aa74cfcb" kindref="member">GetP2SHSigOpCount</ref>(tx,<sp/>mapInputs);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;sigops&quot;</highlight><highlight class="normal">,<sp/>nSigOps));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions.push_back(entry);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>aux;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;flags&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(<ref refid="main_8cpp_1a5ed86cbbedb72d8fcec0524f2792ada8" kindref="member">COINBASE_FLAGS</ref>.begin(),<sp/><ref refid="main_8cpp_1a5ed86cbbedb72d8fcec0524f2792ada8" kindref="member">COINBASE_FLAGS</ref>.end())));</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashTarget<sp/>=<sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref>().<ref refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" kindref="member">SetCompact</ref>(pblock-&gt;<ref refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" kindref="member">nBits</ref>).<ref refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" kindref="member">getuint256</ref>();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>aMutable;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aMutable.empty())</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aMutable.push_back(</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aMutable.push_back(</highlight><highlight class="stringliteral">&quot;transactions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aMutable.push_back(</highlight><highlight class="stringliteral">&quot;prevblock&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>result;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/>pblock-&gt;<ref refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" kindref="member">nVersion</ref>));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;previousblockhash&quot;</highlight><highlight class="normal">,<sp/>pblock-&gt;<ref refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" kindref="member">hashPrevBlock</ref>.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;transactions&quot;</highlight><highlight class="normal">,<sp/>transactions));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;coinbaseaux&quot;</highlight><highlight class="normal">,<sp/>aux));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;coinbasevalue&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)pblock-&gt;<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0].vout[0].nValue));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">,<sp/>hashTarget.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;mintime&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)pindexPrev-&gt;<ref refid="class_c_block_index_1a52a53d7e151aba62e32ec4ffd165b5a7" kindref="member">GetPastTimeLimit</ref>()+1));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;mutable&quot;</highlight><highlight class="normal">,<sp/>aMutable));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;noncerange&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;00000000ffffffff&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;sigoplimit&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)MAX_BLOCK_SIGOPS));</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;sizelimit&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)MAX_BLOCK_SIZE));</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;curtime&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)pblock-&gt;<ref refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" kindref="member">nTime</ref>));</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;bits&quot;</highlight><highlight class="normal">,<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%08x&quot;</highlight><highlight class="normal">,<sp/>pblock-&gt;<ref refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" kindref="member">nBits</ref>)));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)(pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1)));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pblock-&gt;<ref refid="class_c_block_1a1604a6d25f313ab1bf4e3777a6cba948" kindref="member">payee</ref><sp/>!=<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>()){</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address1;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(pblock-&gt;<ref refid="class_c_block_1a1604a6d25f313ab1bf4e3777a6cba948" kindref="member">payee</ref>,<sp/>address1);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address2(address1);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;payee&quot;</highlight><highlight class="normal">,<sp/>address2.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str()));</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_po_s" kindref="compound">CTransactionPoS</ref><sp/>txPoS;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;payee_amount&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)<ref refid="main_8cpp_1ab9c19a2d094fea9bd9f285f4b33961a4" kindref="member">GetStormnodePayment</ref>(pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1,<sp/>txPoS.<ref refid="class_c_transaction_po_s_1ad85303c69a61f41eb8874f07c15faa10" kindref="member">GetValueOut</ref>(pblock-&gt;<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0]))));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;payee&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;payee_amount&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;stormnode<sp/>payments&quot;</highlight><highlight class="normal">,<sp/>pblock-&gt;<ref refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" kindref="member">nTime</ref><sp/>&gt;<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().StartStormnodePayments()));</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;enforce_stormnode_payments&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="rpcmining_8cpp_1a6fc1aa077add8cb1c74207056616134d" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcmining_8cpp_1a6fc1aa077add8cb1c74207056616134d" kindref="member">submitblock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>&lt;<sp/>1<sp/>||<sp/>params.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;submitblock<sp/>&lt;hex<sp/>data&gt;<sp/>[optional-params-obj]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[optional-params-obj]<sp/>parameter<sp/>is<sp/>currently<sp/>ignored.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempts<sp/>to<sp/>submit<sp/>new<sp/>block<sp/>to<sp/>network.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;See<sp/>https://en.bitcoin.it/wiki/BIP_0022<sp/>for<sp/>full<sp/>specification.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>blockData(<ref refid="util_8cpp_1abea395175fbc4a788ed0f0a41710b8a7" kindref="member">ParseHex</ref>(params[0].<ref refid="namespacejson__spirit_1acdef70e45909522ba51a74b68e186b25" kindref="member">get_str</ref>()));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssBlock(blockData,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssBlock<sp/>&gt;&gt;<sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae41723a0e8091c7853a1e582e317b272" kindref="member">RPC_DESERIALIZATION_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Block<sp/>decode<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAccepted<sp/>=<sp/><ref refid="main_8cpp_1a7c8a7be3439bb5e1e40548a332a3cf29" kindref="member">ProcessBlock</ref>(NULL,<sp/>&amp;block);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fAccepted)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;rejected&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl_1abb8ef4f2732e2c842afa716c456cb35d" kindref="member">Value::null</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/rpcmining.cpp"/>
  </compounddef>
</doxygen>
