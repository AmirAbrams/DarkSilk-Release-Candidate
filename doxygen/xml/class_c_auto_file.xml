<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_auto_file" kind="class" language="C++" prot="public">
    <compoundname>CAutoFile</compoundname>
    <includes refid="streams_8h" local="no">streams.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_auto_file_1a04ae666616ebc5d873c636fe6d2998ff" prot="protected" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* CAutoFile::file</definition>
        <argsstring></argsstring>
        <name>file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="323" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="323" bodyend="-1"/>
        <referencedby refid="class_c_auto_file_1a25b51d94dc85c4140da0b15494ac9f8a" compoundref="streams_8h" startline="353" endline="353">release</referencedby>
        <referencedby refid="class_c_auto_file_1a903d7058c4cd92d3c13b0d62dfaee3f4" compoundref="streams_8h" startline="354" endline="354">operator FILE *</referencedby>
        <referencedby refid="class_c_auto_file_1aef9213ad71294fc518e092771bf6ec46" compoundref="streams_8h" startline="355" endline="355">operator-&gt;</referencedby>
        <referencedby refid="class_c_auto_file_1ad3baf76beb55cf98aa275bb9548840fc" compoundref="streams_8h" startline="356" endline="356">operator*</referencedby>
        <referencedby refid="class_c_auto_file_1ac4d6f33720cc4755c9f9d98e4876cf03" compoundref="streams_8h" startline="357" endline="357">operator&amp;</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_auto_file_1aa345c8c05e4b305762c35fffd4fe2f26" prot="protected" static="no" mutable="no">
        <type>short</type>
        <definition>short CAutoFile::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="324" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_auto_file_1a09729c28c239d6b157adee2c3853fa23" prot="protected" static="no" mutable="no">
        <type>short</type>
        <definition>short CAutoFile::exceptmask</definition>
        <argsstring></argsstring>
        <name>exceptmask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="325" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="325" bodyend="-1"/>
        <referencedby refid="class_c_auto_file_1aaeaaa4713ba8c65f6c41710bdb8335a1" compoundref="streams_8h" startline="375" endline="375">exceptions</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_auto_file_1a39ca705ff45e36a05acd5df3c4114aef" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CAutoFile::nType</definition>
        <argsstring></argsstring>
        <name>nType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="327" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="327" bodyend="-1"/>
        <referencedby refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</referencedby>
        <referencedby refid="class_c_auto_file_1a774f2aad2c462d4ff47125ceec2ebab0" compoundref="streams_8h" startline="379" endline="379">GetType</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_auto_file_1a23fb456ee23003aebc3c58ab3fd683c1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CAutoFile::nVersion</definition>
        <argsstring></argsstring>
        <name>nVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="328" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="328" bodyend="-1"/>
        <referencedby refid="class_c_auto_file_1a976ab8e5477aedd3a531fc49b01153ce" compoundref="streams_8h" startline="381" endline="381">GetVersion</referencedby>
        <referencedby refid="class_c_auto_file_1a9511060b5c971cff532faeab60c7d88b" compoundref="streams_8h" startline="382" endline="382">ReadVersion</referencedby>
        <referencedby refid="class_c_auto_file_1a23d6f22c3aff80be7665bfc5a77a01ff" compoundref="streams_8h" startline="383" endline="383">WriteVersion</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_auto_file_1a52613083aaeab4c9238c649ae471783f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CAutoFile::CAutoFile</definition>
        <argsstring>(FILE *filenew, int nTypeIn, int nVersionIn)</argsstring>
        <name>CAutoFile</name>
        <param>
          <type>FILE *</type>
          <declname>filenew</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nTypeIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersionIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="330" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="330" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1ab1362f4cb52c819c25cff4598e0f28da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CAutoFile::~CAutoFile</definition>
        <argsstring>()</argsstring>
        <name>~CAutoFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="339" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="339" bodyend="342"/>
        <references refid="class_c_auto_file_1abcbafe943bfe392c09363078fa8a4e77" compoundref="streams_8h" startline="346" endline="351">fclose</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a78d666b1ef5dff5fd3f4ee33692b6d1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CAutoFile::IsNull</definition>
        <argsstring>() const </argsstring>
        <name>IsNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="344" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="344" bodyend="344"/>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1abcbafe943bfe392c09363078fa8a4e77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CAutoFile::fclose</definition>
        <argsstring>()</argsstring>
        <name>fclose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="346" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="346" bodyend="351"/>
        <referencedby refid="class_c_auto_file_1ab1362f4cb52c819c25cff4598e0f28da" compoundref="streams_8h" startline="339" endline="342">~CAutoFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a25b51d94dc85c4140da0b15494ac9f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* CAutoFile::release</definition>
        <argsstring>()</argsstring>
        <name>release</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="353" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="353" bodyend="353"/>
        <references refid="class_c_auto_file_1a04ae666616ebc5d873c636fe6d2998ff" compoundref="streams_8h" startline="323">file</references>
        <referencedby refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" compoundref="main_8cpp" startline="3649" endline="3674">CTransactionPoS::ReadFromDisk</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a903d7058c4cd92d3c13b0d62dfaee3f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CAutoFile::operator FILE *</definition>
        <argsstring>()</argsstring>
        <name>operator FILE *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="354" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="354" bodyend="354"/>
        <references refid="class_c_auto_file_1a04ae666616ebc5d873c636fe6d2998ff" compoundref="streams_8h" startline="323">file</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1aef9213ad71294fc518e092771bf6ec46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* CAutoFile::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="355" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="355" bodyend="355"/>
        <references refid="class_c_auto_file_1a04ae666616ebc5d873c636fe6d2998ff" compoundref="streams_8h" startline="323">file</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1ad3baf76beb55cf98aa275bb9548840fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE &amp;</type>
        <definition>FILE&amp; CAutoFile::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="356" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="356" bodyend="356"/>
        <references refid="class_c_auto_file_1a04ae666616ebc5d873c636fe6d2998ff" compoundref="streams_8h" startline="323">file</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1ac4d6f33720cc4755c9f9d98e4876cf03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE **</type>
        <definition>FILE** CAutoFile::operator&amp;</definition>
        <argsstring>()</argsstring>
        <name>operator&amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="357" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="357" bodyend="357"/>
        <references refid="class_c_auto_file_1a04ae666616ebc5d873c636fe6d2998ff" compoundref="streams_8h" startline="323">file</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a1ceb9211a21bea5885204b8e05d2e422" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* CAutoFile::operator=</definition>
        <argsstring>(FILE *pnew)</argsstring>
        <name>operator=</name>
        <param>
          <type>FILE *</type>
          <declname>pnew</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="358" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="358" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a39e0a0cc31794200679b5db04c400ef9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CAutoFile::operator!</definition>
        <argsstring>()</argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="359" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="359" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1ad8f48031644ff88adb275e6dd146e9f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CAutoFile::setstate</definition>
        <argsstring>(short bits, const char *psz)</argsstring>
        <name>setstate</name>
        <param>
          <type>short</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="365" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="365" bodyend="370"/>
        <referencedby refid="class_c_auto_file_1a8ad72afbdc75f714ce53bd4b0702675e" compoundref="streams_8h" startline="376" endline="376">exceptions</referencedby>
        <referencedby refid="class_c_auto_file_1a87e670f3dd03055264c05b25335babb4" compoundref="streams_8h" startline="385" endline="392">read</referencedby>
        <referencedby refid="class_c_auto_file_1a7b2852b345b75835f883be3732cf826a" compoundref="streams_8h" startline="394" endline="401">write</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1adfbf62852f7e892fe48c83f58d685c85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CAutoFile::fail</definition>
        <argsstring>() const </argsstring>
        <name>fail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="372" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1afec38aaa4cc8a86766b7be4bcd0e1c4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CAutoFile::good</definition>
        <argsstring>() const </argsstring>
        <name>good</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="373" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="373" bodyend="373"/>
        <referencedby refid="main_8cpp_1afbdbbb5a1b376748e5460cbcf644a9af" compoundref="main_8cpp" startline="2219" endline="2279">LoadExternalBlockFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a92c81934cb6483f2686768f322ab90bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CAutoFile::clear</definition>
        <argsstring>(short n=0)</argsstring>
        <name>clear</name>
        <param>
          <type>short</type>
          <declname>n</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="374" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="374" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1aaeaaa4713ba8c65f6c41710bdb8335a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>short CAutoFile::exceptions</definition>
        <argsstring>()</argsstring>
        <name>exceptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="375" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="375" bodyend="375"/>
        <references refid="class_c_auto_file_1a09729c28c239d6b157adee2c3853fa23" compoundref="streams_8h" startline="325">exceptmask</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a8ad72afbdc75f714ce53bd4b0702675e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>short CAutoFile::exceptions</definition>
        <argsstring>(short mask)</argsstring>
        <name>exceptions</name>
        <param>
          <type>short</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="376" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="376" bodyend="376"/>
        <references refid="cache_8cc_1aabbd2f01bb8ec4a7a0128bce5f8cdb1b" compoundref="cache_8cc" startline="30">prev</references>
        <references refid="class_c_auto_file_1a09729c28c239d6b157adee2c3853fa23" compoundref="streams_8h" startline="325">exceptmask</references>
        <references refid="class_c_auto_file_1ad8f48031644ff88adb275e6dd146e9f5" compoundref="streams_8h" startline="365" endline="370">setstate</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1ac1a3986f191fe81384f58fc5fa073820" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CAutoFile::SetType</definition>
        <argsstring>(int n)</argsstring>
        <name>SetType</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="378" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="378" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a774f2aad2c462d4ff47125ceec2ebab0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CAutoFile::GetType</definition>
        <argsstring>()</argsstring>
        <name>GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="379" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="379" bodyend="379"/>
        <references refid="class_c_auto_file_1a39ca705ff45e36a05acd5df3c4114aef" compoundref="streams_8h" startline="327">nType</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a51f805bc470a95c9948250503b587aec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CAutoFile::SetVersion</definition>
        <argsstring>(int n)</argsstring>
        <name>SetVersion</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="380" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="380" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a976ab8e5477aedd3a531fc49b01153ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CAutoFile::GetVersion</definition>
        <argsstring>()</argsstring>
        <name>GetVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="381" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="381" bodyend="381"/>
        <references refid="class_c_auto_file_1a23fb456ee23003aebc3c58ab3fd683c1" compoundref="streams_8h" startline="328">nVersion</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a9511060b5c971cff532faeab60c7d88b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CAutoFile::ReadVersion</definition>
        <argsstring>()</argsstring>
        <name>ReadVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="382" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="382" bodyend="382"/>
        <references refid="class_c_auto_file_1a23fb456ee23003aebc3c58ab3fd683c1" compoundref="streams_8h" startline="328">nVersion</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a23d6f22c3aff80be7665bfc5a77a01ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CAutoFile::WriteVersion</definition>
        <argsstring>()</argsstring>
        <name>WriteVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="383" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="383" bodyend="383"/>
        <references refid="class_c_auto_file_1a23fb456ee23003aebc3c58ab3fd683c1" compoundref="streams_8h" startline="328">nVersion</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a87e670f3dd03055264c05b25335babb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref> &amp;</type>
        <definition>CAutoFile&amp; CAutoFile::read</definition>
        <argsstring>(char *pch, size_t nSize)</argsstring>
        <name>read</name>
        <param>
          <type>char *</type>
          <declname>pch</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="385" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="385" bodyend="392"/>
        <references refid="class_c_auto_file_1ad8f48031644ff88adb275e6dd146e9f5" compoundref="streams_8h" startline="365" endline="370">setstate</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a7b2852b345b75835f883be3732cf826a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref> &amp;</type>
        <definition>CAutoFile&amp; CAutoFile::write</definition>
        <argsstring>(const char *pch, size_t nSize)</argsstring>
        <name>write</name>
        <param>
          <type>const char *</type>
          <declname>pch</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="394" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="394" bodyend="401"/>
        <references refid="class_c_auto_file_1ad8f48031644ff88adb275e6dd146e9f5" compoundref="streams_8h" startline="365" endline="370">setstate</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a883a261f0d7d0320f72152ff2167fd24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int CAutoFile::GetSerializeSize</definition>
        <argsstring>(const T &amp;obj)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="404" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="404" bodyend="408"/>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
        <referencedby refid="class_c_block_1a606df2cab7dc67e5dd11b157d288cf2b" compoundref="chain_8cpp" startline="830" endline="854">CBlock::WriteToDisk</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1a8e194596d1f8f64059247724b25df82c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref> &amp;</type>
        <definition>CAutoFile&amp; CAutoFile::operator&lt;&lt;</definition>
        <argsstring>(const T &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="411" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="411" bodyend="418"/>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
      </memberdef>
      <memberdef kind="function" id="class_c_auto_file_1ae6826219322626d2ac8229e022c41dd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref> &amp;</type>
        <definition>CAutoFile&amp; CAutoFile::operator&gt;&gt;</definition>
        <argsstring>(T &amp;obj)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/streams.h" line="421" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="421" bodyend="428"/>
        <references refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Non-refcounted RAII wrapper for FILE* Will automatically close the file when it goes out of scope if not null. If you&apos;re returning the file pointer, return file.release(). If you need to close the file early, use file.fclose() instead of fclose(file). </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/streams.h" line="321" column="1" bodyfile="/home/dev/ds-160209/src/streams.h" bodystart="320" bodyend="429"/>
    <listofallmembers>
      <member refid="class_c_auto_file_1a52613083aaeab4c9238c649ae471783f" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>CAutoFile</name></member>
      <member refid="class_c_auto_file_1a92c81934cb6483f2686768f322ab90bd" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>clear</name></member>
      <member refid="class_c_auto_file_1aaeaaa4713ba8c65f6c41710bdb8335a1" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>exceptions</name></member>
      <member refid="class_c_auto_file_1a8ad72afbdc75f714ce53bd4b0702675e" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>exceptions</name></member>
      <member refid="class_c_auto_file_1a09729c28c239d6b157adee2c3853fa23" prot="protected" virt="non-virtual"><scope>CAutoFile</scope><name>exceptmask</name></member>
      <member refid="class_c_auto_file_1adfbf62852f7e892fe48c83f58d685c85" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>fail</name></member>
      <member refid="class_c_auto_file_1abcbafe943bfe392c09363078fa8a4e77" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>fclose</name></member>
      <member refid="class_c_auto_file_1a04ae666616ebc5d873c636fe6d2998ff" prot="protected" virt="non-virtual"><scope>CAutoFile</scope><name>file</name></member>
      <member refid="class_c_auto_file_1a883a261f0d7d0320f72152ff2167fd24" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>GetSerializeSize</name></member>
      <member refid="class_c_auto_file_1a774f2aad2c462d4ff47125ceec2ebab0" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>GetType</name></member>
      <member refid="class_c_auto_file_1a976ab8e5477aedd3a531fc49b01153ce" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>GetVersion</name></member>
      <member refid="class_c_auto_file_1afec38aaa4cc8a86766b7be4bcd0e1c4d" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>good</name></member>
      <member refid="class_c_auto_file_1a78d666b1ef5dff5fd3f4ee33692b6d1d" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>IsNull</name></member>
      <member refid="class_c_auto_file_1a39ca705ff45e36a05acd5df3c4114aef" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>nType</name></member>
      <member refid="class_c_auto_file_1a23fb456ee23003aebc3c58ab3fd683c1" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>nVersion</name></member>
      <member refid="class_c_auto_file_1a903d7058c4cd92d3c13b0d62dfaee3f4" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>operator FILE *</name></member>
      <member refid="class_c_auto_file_1a39e0a0cc31794200679b5db04c400ef9" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>operator!</name></member>
      <member refid="class_c_auto_file_1ac4d6f33720cc4755c9f9d98e4876cf03" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>operator&amp;</name></member>
      <member refid="class_c_auto_file_1ad3baf76beb55cf98aa275bb9548840fc" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>operator*</name></member>
      <member refid="class_c_auto_file_1aef9213ad71294fc518e092771bf6ec46" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>operator-&gt;</name></member>
      <member refid="class_c_auto_file_1a8e194596d1f8f64059247724b25df82c" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_c_auto_file_1a1ceb9211a21bea5885204b8e05d2e422" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>operator=</name></member>
      <member refid="class_c_auto_file_1ae6826219322626d2ac8229e022c41dd7" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_c_auto_file_1a87e670f3dd03055264c05b25335babb4" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>read</name></member>
      <member refid="class_c_auto_file_1a9511060b5c971cff532faeab60c7d88b" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>ReadVersion</name></member>
      <member refid="class_c_auto_file_1a25b51d94dc85c4140da0b15494ac9f8a" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>release</name></member>
      <member refid="class_c_auto_file_1ad8f48031644ff88adb275e6dd146e9f5" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>setstate</name></member>
      <member refid="class_c_auto_file_1ac1a3986f191fe81384f58fc5fa073820" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>SetType</name></member>
      <member refid="class_c_auto_file_1a51f805bc470a95c9948250503b587aec" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>SetVersion</name></member>
      <member refid="class_c_auto_file_1aa345c8c05e4b305762c35fffd4fe2f26" prot="protected" virt="non-virtual"><scope>CAutoFile</scope><name>state</name></member>
      <member refid="class_c_auto_file_1a7b2852b345b75835f883be3732cf826a" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>write</name></member>
      <member refid="class_c_auto_file_1a23d6f22c3aff80be7665bfc5a77a01ff" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>WriteVersion</name></member>
      <member refid="class_c_auto_file_1ab1362f4cb52c819c25cff4598e0f28da" prot="public" virt="non-virtual"><scope>CAutoFile</scope><name>~CAutoFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
