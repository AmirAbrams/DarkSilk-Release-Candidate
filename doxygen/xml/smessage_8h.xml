<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="smessage_8h" kind="file" language="C++">
    <compoundname>smessage.h</compoundname>
    <includes refid="leveldb_2include_2leveldb_2db_8h" local="no">leveldb/db.h</includes>
    <includes refid="write__batch_8h" local="no">leveldb/write_batch.h</includes>
    <includes refid="net_8h" local="yes">net.h</includes>
    <includes refid="db_8h" local="yes">db.h</includes>
    <includes refid="wallet_8h" local="yes">wallet.h</includes>
    <includes refid="base58_8h" local="yes">base58.h</includes>
    <includes refid="lz4_8h" local="yes">lz4/lz4.h</includes>
    <includedby refid="init_8cpp" local="yes">/home/dev/ds-160209/src/init.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">/home/dev/ds-160209/src/main.cpp</includedby>
    <includedby refid="messagemodel_8h" local="yes">/home/dev/ds-160209/src/qt/messagemodel.h</includedby>
    <includedby refid="sendmessagesentry_8cpp" local="yes">/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</includedby>
    <includedby refid="walletmodel_8cpp" local="yes">/home/dev/ds-160209/src/qt/walletmodel.cpp</includedby>
    <includedby refid="rpcsmessage_8cpp" local="yes">/home/dev/ds-160209/src/rpcsmessage.cpp</includedby>
    <includedby refid="smessage_8cpp" local="yes">/home/dev/ds-160209/src/smessage.cpp</includedby>
    <includedby refid="wallet_8cpp" local="yes">/home/dev/ds-160209/src/wallet.cpp</includedby>
    <incdepgraph>
      <node id="52826">
        <label>list</label>
      </node>
      <node id="52791">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="52768">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52766" relation="include">
        </childnode>
      </node>
      <node id="52802">
        <label>netinet/in.h</label>
      </node>
      <node id="52825">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52790" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
      </node>
      <node id="52775">
        <label>arpa/inet.h</label>
      </node>
      <node id="52815">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="52783">
        <label>limits</label>
      </node>
      <node id="52841">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52790" relation="include">
        </childnode>
      </node>
      <node id="52859">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="52825" relation="include">
        </childnode>
        <childnode refid="52809" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52860" relation="include">
        </childnode>
        <childnode refid="52854" relation="include">
        </childnode>
        <childnode refid="52818" relation="include">
        </childnode>
        <childnode refid="52759" relation="include">
        </childnode>
      </node>
      <node id="52842">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="52763" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52793" relation="include">
        </childnode>
      </node>
      <node id="52854">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52772" relation="include">
        </childnode>
        <childnode refid="52855" relation="include">
        </childnode>
        <childnode refid="52853" relation="include">
        </childnode>
        <childnode refid="52808" relation="include">
        </childnode>
        <childnode refid="52819" relation="include">
        </childnode>
        <childnode refid="52856" relation="include">
        </childnode>
      </node>
      <node id="52774">
        <label>openssl/rand.h</label>
      </node>
      <node id="52850">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="52847" relation="include">
        </childnode>
        <childnode refid="52851" relation="include">
        </childnode>
        <childnode refid="52856" relation="include">
        </childnode>
        <childnode refid="52825" relation="include">
        </childnode>
        <childnode refid="52826" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52827" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52787">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="52762">
        <label>assert.h</label>
      </node>
      <node id="52801">
        <label>net/if.h</label>
      </node>
      <node id="52864">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="52859" relation="include">
        </childnode>
        <childnode refid="52813" relation="include">
        </childnode>
        <childnode refid="52865" relation="include">
        </childnode>
        <childnode refid="52825" relation="include">
        </childnode>
        <childnode refid="52871" relation="include">
        </childnode>
      </node>
      <node id="52767">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="52763" relation="include">
        </childnode>
      </node>
      <node id="52817">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="52875">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="52807" relation="include">
        </childnode>
        <childnode refid="52853" relation="include">
        </childnode>
        <childnode refid="52852" relation="include">
        </childnode>
        <childnode refid="52854" relation="include">
        </childnode>
        <childnode refid="52788" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52795">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="52796" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
      </node>
      <node id="52876">
        <label>lz4/lz4.h</label>
        <link refid="lz4_8h"/>
      </node>
      <node id="52865">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="52866" relation="include">
        </childnode>
        <childnode refid="52864" relation="include">
        </childnode>
        <childnode refid="52762" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52772" relation="include">
        </childnode>
        <childnode refid="52870" relation="include">
        </childnode>
      </node>
      <node id="52792">
        <label>sys/mman.h</label>
      </node>
      <node id="52790">
        <label>stdlib.h</label>
      </node>
      <node id="52872">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="52858" relation="include">
        </childnode>
        <childnode refid="52819" relation="include">
        </childnode>
        <childnode refid="52807" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52772" relation="include">
        </childnode>
      </node>
      <node id="52756">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage.h"/>
        <childnode refid="52757" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52769" relation="include">
        </childnode>
        <childnode refid="52847" relation="include">
        </childnode>
        <childnode refid="52849" relation="include">
        </childnode>
        <childnode refid="52875" relation="include">
        </childnode>
        <childnode refid="52876" relation="include">
        </childnode>
      </node>
      <node id="52772">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="52836">
        <label>openssl/crypto.h</label>
      </node>
      <node id="52797">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="52798" relation="include">
        </childnode>
        <childnode refid="52792" relation="include">
        </childnode>
        <childnode refid="52799" relation="include">
        </childnode>
        <childnode refid="52800" relation="include">
        </childnode>
        <childnode refid="52801" relation="include">
        </childnode>
        <childnode refid="52802" relation="include">
        </childnode>
        <childnode refid="52775" relation="include">
        </childnode>
        <childnode refid="52803" relation="include">
        </childnode>
        <childnode refid="52793" relation="include">
        </childnode>
        <childnode refid="52804" relation="include">
        </childnode>
        <childnode refid="52794" relation="include">
        </childnode>
        <childnode refid="52805" relation="include">
        </childnode>
      </node>
      <node id="52832">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="52838">
        <label>openssl/sha.h</label>
      </node>
      <node id="52805">
        <label>errno.h</label>
      </node>
      <node id="52782">
        <label>cassert</label>
      </node>
      <node id="52810">
        <label>stdexcept</label>
      </node>
      <node id="52819">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="52800" relation="include">
        </childnode>
        <childnode refid="52820" relation="include">
        </childnode>
        <childnode refid="52821" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52822" relation="include">
        </childnode>
        <childnode refid="52825" relation="include">
        </childnode>
        <childnode refid="52781" relation="include">
        </childnode>
        <childnode refid="52826" relation="include">
        </childnode>
        <childnode refid="52827" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52828" relation="include">
        </childnode>
        <childnode refid="52829" relation="include">
        </childnode>
        <childnode refid="52830" relation="include">
        </childnode>
        <childnode refid="52831" relation="include">
        </childnode>
        <childnode refid="52832" relation="include">
        </childnode>
        <childnode refid="52833" relation="include">
        </childnode>
        <childnode refid="52834" relation="include">
        </childnode>
        <childnode refid="52835" relation="include">
        </childnode>
        <childnode refid="52836" relation="include">
        </childnode>
        <childnode refid="52774" relation="include">
        </childnode>
        <childnode refid="52811" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
      </node>
      <node id="52806">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="52807" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52778" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
      </node>
      <node id="52831">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="52757">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52759" relation="include">
        </childnode>
        <childnode refid="52760" relation="include">
        </childnode>
        <childnode refid="52767" relation="include">
        </childnode>
      </node>
      <node id="52765">
        <label>string</label>
      </node>
      <node id="52849">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="52850" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52790" relation="include">
        </childnode>
        <childnode refid="52858" relation="include">
        </childnode>
        <childnode refid="52859" relation="include">
        </childnode>
        <childnode refid="52862" relation="include">
        </childnode>
        <childnode refid="52863" relation="include">
        </childnode>
        <childnode refid="52852" relation="include">
        </childnode>
        <childnode refid="52851" relation="include">
        </childnode>
        <childnode refid="52854" relation="include">
        </childnode>
        <childnode refid="52873" relation="include">
        </childnode>
        <childnode refid="52819" relation="include">
        </childnode>
        <childnode refid="52856" relation="include">
        </childnode>
      </node>
      <node id="52861">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52790" relation="include">
        </childnode>
        <childnode refid="52819" relation="include">
        </childnode>
        <childnode refid="52769" relation="include">
        </childnode>
      </node>
      <node id="52781">
        <label>map</label>
      </node>
      <node id="52828">
        <label>boost/thread.hpp</label>
      </node>
      <node id="52812">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="52778" relation="include">
        </childnode>
        <childnode refid="52806" relation="include">
        </childnode>
        <childnode refid="52813" relation="include">
        </childnode>
        <childnode refid="52818" relation="include">
        </childnode>
        <childnode refid="52819" relation="include">
        </childnode>
        <childnode refid="52781" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52873">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="52825" relation="include">
        </childnode>
        <childnode refid="52874" relation="include">
        </childnode>
        <childnode refid="52773" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
      </node>
      <node id="52869">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52844" relation="include">
        </childnode>
        <childnode refid="52819" relation="include">
        </childnode>
        <childnode refid="52830" relation="include">
        </childnode>
        <childnode refid="52757" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
      </node>
      <node id="52763">
        <label>stddef.h</label>
      </node>
      <node id="52855">
        <label>boost/variant.hpp</label>
      </node>
      <node id="52804">
        <label>netdb.h</label>
      </node>
      <node id="52798">
        <label>sys/fcntl.h</label>
      </node>
      <node id="52866">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="52867" relation="include">
        </childnode>
      </node>
      <node id="52766">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52761" relation="include">
        </childnode>
      </node>
      <node id="52871">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="52780">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52781" relation="include">
        </childnode>
        <childnode refid="52777" relation="include">
        </childnode>
        <childnode refid="52782" relation="include">
        </childnode>
        <childnode refid="52783" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
        <childnode refid="52785" relation="include">
        </childnode>
        <childnode refid="52786" relation="include">
        </childnode>
        <childnode refid="52787" relation="include">
        </childnode>
        <childnode refid="52788" relation="include">
        </childnode>
        <childnode refid="52795" relation="include">
        </childnode>
      </node>
      <node id="52793">
        <label>limits.h</label>
      </node>
      <node id="52814">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="52821">
        <label>sys/resource.h</label>
      </node>
      <node id="52776">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="52777" relation="include">
        </childnode>
        <childnode refid="52770" relation="include">
        </childnode>
      </node>
      <node id="52833">
        <label>openssl/bio.h</label>
      </node>
      <node id="52862">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="52788" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52851" relation="include">
        </childnode>
      </node>
      <node id="52773">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="52778">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52797" relation="include">
        </childnode>
      </node>
      <node id="52851">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="52852" relation="include">
        </childnode>
        <childnode refid="52853" relation="include">
        </childnode>
        <childnode refid="52813" relation="include">
        </childnode>
        <childnode refid="52854" relation="include">
        </childnode>
        <childnode refid="52773" relation="include">
        </childnode>
        <childnode refid="52855" relation="include">
        </childnode>
      </node>
      <node id="52837">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="52809" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52838" relation="include">
        </childnode>
        <childnode refid="52839" relation="include">
        </childnode>
        <childnode refid="52840" relation="include">
        </childnode>
        <childnode refid="52841" relation="include">
        </childnode>
        <childnode refid="52842" relation="include">
        </childnode>
        <childnode refid="52843" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52803">
        <label>ifaddrs.h</label>
      </node>
      <node id="52856">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="52819" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52790" relation="include">
        </childnode>
        <childnode refid="52759" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52857" relation="include">
        </childnode>
      </node>
      <node id="52800">
        <label>sys/types.h</label>
      </node>
      <node id="52846">
        <label>ios</label>
      </node>
      <node id="52764">
        <label>string.h</label>
      </node>
      <node id="52796">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="52785">
        <label>cstdio</label>
      </node>
      <node id="52816">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="52835">
        <label>openssl/buffer.h</label>
      </node>
      <node id="52786">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="52863">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="52864" relation="include">
        </childnode>
        <childnode refid="52769" relation="include">
        </childnode>
        <childnode refid="52854" relation="include">
        </childnode>
        <childnode refid="52844" relation="include">
        </childnode>
        <childnode refid="52868" relation="include">
        </childnode>
        <childnode refid="52872" relation="include">
        </childnode>
        <childnode refid="52826" relation="include">
        </childnode>
        <childnode refid="52870" relation="include">
        </childnode>
      </node>
      <node id="52830">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="52870">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="52853">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="52837" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52809" relation="include">
        </childnode>
        <childnode refid="52810" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52794">
        <label>unistd.h</label>
      </node>
      <node id="52848">
        <label>db_cxx.h</label>
      </node>
      <node id="52779">
        <label>vector</label>
      </node>
      <node id="52808">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52809" relation="include">
        </childnode>
        <childnode refid="52811" relation="include">
        </childnode>
        <childnode refid="52810" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
      </node>
      <node id="52769">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="52770" relation="include">
        </childnode>
        <childnode refid="52771" relation="include">
        </childnode>
        <childnode refid="52772" relation="include">
        </childnode>
        <childnode refid="52773" relation="include">
        </childnode>
        <childnode refid="52774" relation="include">
        </childnode>
        <childnode refid="52775" relation="include">
        </childnode>
        <childnode refid="52776" relation="include">
        </childnode>
        <childnode refid="52778" relation="include">
        </childnode>
        <childnode refid="52806" relation="include">
        </childnode>
        <childnode refid="52812" relation="include">
        </childnode>
        <childnode refid="52837" relation="include">
        </childnode>
        <childnode refid="52844" relation="include">
        </childnode>
      </node>
      <node id="52839">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="52829">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="52827">
        <label>utility</label>
      </node>
      <node id="52867">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="52859" relation="include">
        </childnode>
        <childnode refid="52868" relation="include">
        </childnode>
      </node>
      <node id="52824">
        <label>sstream</label>
      </node>
      <node id="52874">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="52852">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="52788" relation="include">
        </childnode>
        <childnode refid="52853" relation="include">
        </childnode>
        <childnode refid="52810" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52834">
        <label>openssl/evp.h</label>
      </node>
      <node id="52822">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="52782" relation="include">
        </childnode>
        <childnode refid="52823" relation="include">
        </childnode>
        <childnode refid="52824" relation="include">
        </childnode>
        <childnode refid="52810" relation="include">
        </childnode>
      </node>
      <node id="52758">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="52847">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52813" relation="include">
        </childnode>
        <childnode refid="52844" relation="include">
        </childnode>
        <childnode refid="52781" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52830" relation="include">
        </childnode>
        <childnode refid="52848" relation="include">
        </childnode>
      </node>
      <node id="52844">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="52788" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
        <childnode refid="52845" relation="include">
        </childnode>
        <childnode refid="52762" relation="include">
        </childnode>
        <childnode refid="52846" relation="include">
        </childnode>
        <childnode refid="52783" relation="include">
        </childnode>
        <childnode refid="52781" relation="include">
        </childnode>
        <childnode refid="52777" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52764" relation="include">
        </childnode>
        <childnode refid="52827" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52843">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52763" relation="include">
        </childnode>
        <childnode refid="52793" relation="include">
        </childnode>
      </node>
      <node id="52820">
        <label>sys/time.h</label>
      </node>
      <node id="52823">
        <label>iostream</label>
      </node>
      <node id="52770">
        <label>deque</label>
      </node>
      <node id="52809">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="52762" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
        <childnode refid="52810" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52799">
        <label>sys/socket.h</label>
      </node>
      <node id="52761">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="52762" relation="include">
        </childnode>
        <childnode refid="52763" relation="include">
        </childnode>
        <childnode refid="52764" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
      </node>
      <node id="52771">
        <label>boost/array.hpp</label>
      </node>
      <node id="52811">
        <label>openssl/bn.h</label>
      </node>
      <node id="52868">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="52869" relation="include">
        </childnode>
        <childnode refid="52863" relation="include">
        </childnode>
        <childnode refid="52781" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52827" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52818">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="52758" relation="include">
        </childnode>
      </node>
      <node id="52788">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="52789" relation="include">
        </childnode>
        <childnode refid="52764" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52791" relation="include">
        </childnode>
        <childnode refid="52781" relation="include">
        </childnode>
        <childnode refid="52792" relation="include">
        </childnode>
        <childnode refid="52793" relation="include">
        </childnode>
        <childnode refid="52794" relation="include">
        </childnode>
      </node>
      <node id="52807">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="52808" relation="include">
        </childnode>
        <childnode refid="52809" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
      </node>
      <node id="52777">
        <label>set</label>
      </node>
      <node id="52845">
        <label>algorithm</label>
      </node>
      <node id="52840">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52790" relation="include">
        </childnode>
      </node>
      <node id="52860">
        <label>util.h</label>
      </node>
      <node id="52759">
        <label>stdio.h</label>
      </node>
      <node id="52789">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="52790" relation="include">
        </childnode>
      </node>
      <node id="52784">
        <label>cstring</label>
      </node>
      <node id="52813">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="52814" relation="include">
        </childnode>
        <childnode refid="52815" relation="include">
        </childnode>
        <childnode refid="52816" relation="include">
        </childnode>
        <childnode refid="52791" relation="include">
        </childnode>
        <childnode refid="52817" relation="include">
        </childnode>
      </node>
      <node id="52857">
        <label>inttypes.h</label>
      </node>
      <node id="52760">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="52761" relation="include">
        </childnode>
        <childnode refid="52766" relation="include">
        </childnode>
      </node>
      <node id="52858">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="52859" relation="include">
        </childnode>
        <childnode refid="52843" relation="include">
        </childnode>
        <childnode refid="52861" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="52882">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="52888">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="52890">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="52880">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="52881" relation="include">
        </childnode>
        <childnode refid="52882" relation="include">
        </childnode>
        <childnode refid="52883" relation="include">
        </childnode>
        <childnode refid="52884" relation="include">
        </childnode>
        <childnode refid="52885" relation="include">
        </childnode>
        <childnode refid="52886" relation="include">
        </childnode>
      </node>
      <node id="52883">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="52877">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage.h"/>
        <childnode refid="52878" relation="include">
        </childnode>
        <childnode refid="52879" relation="include">
        </childnode>
        <childnode refid="52880" relation="include">
        </childnode>
        <childnode refid="52886" relation="include">
        </childnode>
        <childnode refid="52887" relation="include">
        </childnode>
        <childnode refid="52888" relation="include">
        </childnode>
        <childnode refid="52889" relation="include">
        </childnode>
        <childnode refid="52890" relation="include">
        </childnode>
      </node>
      <node id="52881">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="52887">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="52878">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="52884">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="52885">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="52886">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="52889">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="52879">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_secure_message" prot="public">SecureMessage</innerclass>
    <innerclass refid="class_message_data" prot="public">MessageData</innerclass>
    <innerclass refid="class_sec_msg_token" prot="public">SecMsgToken</innerclass>
    <innerclass refid="class_sec_msg_bucket" prot="public">SecMsgBucket</innerclass>
    <innerclass refid="class_c_dark_silk_address___b" prot="public">CDarkSilkAddress_B</innerclass>
    <innerclass refid="class_c_key_i_d___b" prot="public">CKeyID_B</innerclass>
    <innerclass refid="class_sec_msg_address" prot="public">SecMsgAddress</innerclass>
    <innerclass refid="class_sec_msg_options" prot="public">SecMsgOptions</innerclass>
    <innerclass refid="class_sec_msg_crypter" prot="public">SecMsgCrypter</innerclass>
    <innerclass refid="class_sec_msg_stored" prot="public">SecMsgStored</innerclass>
    <innerclass refid="class_sec_msg_d_b" prot="public">SecMsgDB</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="smessage_8h_1a67801d51a4169b62fe9f323c04ad928a" prot="public" static="no">
        <name>SMSG_MASK_UNREAD</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="38" column="9" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="38" bodyend="-1"/>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_HDR_LEN</definition>
        <argsstring></argsstring>
        <name>SMSG_HDR_LEN</name>
        <initializer>= 104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="18" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="18" bodyend="-1"/>
        <referencedby refid="class_message_table_priv_1a0c420e61982703babe27416089ff2bd3" compoundref="messagemodel_8cpp" startline="47" endline="132">MessageTablePriv::refreshMessageTable</referencedby>
        <referencedby refid="class_message_table_priv_1a7769c63c504ab64c04e0699c4f4aacd3" compoundref="messagemodel_8cpp" startline="134" endline="170">MessageTablePriv::newMessage</referencedby>
        <referencedby refid="class_message_table_priv_1a4718ccab000f83181ada7e74df2e80b4" compoundref="messagemodel_8cpp" startline="172" endline="207">MessageTablePriv::newOutboxMessage</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a09f153f6fb0e6094919452744ef58ded" compoundref="rpcsmessage_8cpp" startline="679" endline="770">smsgoutbox</referencedby>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
        <referencedby refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
        <referencedby refid="smessage_8h_1a9a34bfa72cc027350d71f9daaefb8fef" compoundref="smessage_8cpp" startline="2731" endline="2794">SecureMsgRetrieve</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
        <referencedby refid="smessage_8h_1ae4abbffb060bb486b9e15053f83cbcbf" compoundref="smessage_8cpp" startline="3099" endline="3166">SecureMsgValidate</referencedby>
        <referencedby refid="smessage_8h_1ac434a0295e161eb2ebdad951f4049dc6" compoundref="smessage_8cpp" startline="3168" endline="3274">SecureMsgSetHash</referencedby>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_PL_HDR_LEN</definition>
        <argsstring></argsstring>
        <name>SMSG_PL_HDR_LEN</name>
        <initializer>= 1+20+65+4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="19" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="19" bodyend="-1"/>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_BUCKET_LEN</definition>
        <argsstring></argsstring>
        <name>SMSG_BUCKET_LEN</name>
        <initializer>= 60 * 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="21" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="21" bodyend="-1"/>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
        <referencedby refid="smessage_8h_1a9a34bfa72cc027350d71f9daaefb8fef" compoundref="smessage_8cpp" startline="2731" endline="2794">SecureMsgRetrieve</referencedby>
        <referencedby refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_RETENTION</definition>
        <argsstring></argsstring>
        <name>SMSG_RETENTION</name>
        <initializer>= 60 * 60 * 48</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="22" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="22" bodyend="-1"/>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</referencedby>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a58ba0f46d3e1d728616c6259c3069db9" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_SEND_DELAY</definition>
        <argsstring></argsstring>
        <name>SMSG_SEND_DELAY</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="23" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="23" bodyend="-1"/>
        <referencedby refid="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" compoundref="smessage_8cpp" startline="1783" endline="1882">SecureMsgSendData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a4a4a481ee91964e90efbc0e5a742407e" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_THREAD_DELAY</definition>
        <argsstring></argsstring>
        <name>SMSG_THREAD_DELAY</name>
        <initializer>= 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="24" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="24" bodyend="-1"/>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a8efaec21328f5c6b873f6d822b84c6c0" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_THREAD_LOG_GAP</definition>
        <argsstring></argsstring>
        <name>SMSG_THREAD_LOG_GAP</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="25" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="25" bodyend="-1"/>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_TIME_LEEWAY</definition>
        <argsstring></argsstring>
        <name>SMSG_TIME_LEEWAY</name>
        <initializer>= 60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="27" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a10bd0be4c103ccf8f76c710ae2a15b83" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_TIME_IGNORE</definition>
        <argsstring></argsstring>
        <name>SMSG_TIME_IGNORE</name>
        <initializer>= 90</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="28" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_MAX_MSG_BYTES</definition>
        <argsstring></argsstring>
        <name>SMSG_MAX_MSG_BYTES</name>
        <initializer>= 4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="31" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="31" bodyend="-1"/>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1af7fb9dac77a91414591c4ef98f772120" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SMSG_MAX_MSG_WORST</definition>
        <argsstring></argsstring>
        <name>SMSG_MAX_MSG_WORST</name>
        <initializer>= <ref refid="lz4_8h_1a2453a423fd34640a0afbbf57ed0a5399" kindref="member">LZ4_COMPRESSBOUND</ref>(<ref refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" kindref="member">SMSG_MAX_MSG_BYTES</ref>+<ref refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" kindref="member">SMSG_PL_HDR_LEN</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="34" column="1" bodyfile="/home/dev/ds-160209/src/smessage.h" bodystart="34" bodyend="-1"/>
        <referencedby refid="smessage_8h_1ae4abbffb060bb486b9e15053f83cbcbf" compoundref="smessage_8cpp" startline="3099" endline="3166">SecureMsgValidate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a6a38441245ee84417e8fb4a77860dc09" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fSecMsgEnabled</definition>
        <argsstring></argsstring>
        <name>fSecMsgEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="42" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="74" bodyend="-1"/>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a6bb03c9454a432862fc0ca6da63b9acd" compoundref="rpcsmessage_8cpp" startline="21" endline="40">smsgenable</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a64a1730a2db8d797bb2bd0f35cc8c0d3" compoundref="rpcsmessage_8cpp" startline="42" endline="60">smsgdisable</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1af9835f898bc619ef6f9a39a5a8a9f2f1" compoundref="rpcsmessage_8cpp" startline="140" endline="346">smsglocalkeys</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ae8a97c9381cc7d24d3c86f84cef1a9f3" compoundref="rpcsmessage_8cpp" startline="348" endline="367">smsgscanchain</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a5b2bd8a2dd98a14b6342c7b08787bb21" compoundref="rpcsmessage_8cpp" startline="369" endline="391">smsgscanbuckets</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ab3f43e65ebac0f02747e50c3d4689e9f" compoundref="rpcsmessage_8cpp" startline="393" endline="425">smsgaddkey</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a7cf2eaa93f14ecaa9d8ac72fd3dc02a2" compoundref="rpcsmessage_8cpp" startline="427" endline="509">smsggetpubkey</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a98f31e03cd4847162535ddd58c28ac52" compoundref="rpcsmessage_8cpp" startline="511" endline="537">smsgsend</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a64f22b883ee399f49e1656ef90b7c936" compoundref="rpcsmessage_8cpp" startline="539" endline="564">smsgsendanon</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a09f153f6fb0e6094919452744ef58ded" compoundref="rpcsmessage_8cpp" startline="679" endline="770">smsgoutbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
        <referencedby refid="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</referencedby>
        <referencedby refid="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</referencedby>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" compoundref="smessage_8cpp" startline="1144" endline="1168">SecureMsgShutdown</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a2a1e22a7c3bbeb96983dc3f28407657e" compoundref="smessage_8cpp" startline="2446" endline="2480">SecureMsgWalletKeyChanged</referencedby>
        <referencedby refid="smessage_8h_1ac434a0295e161eb2ebdad951f4049dc6" compoundref="smessage_8cpp" startline="3168" endline="3274">SecureMsgSetHash</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a93126f5e674af8370c3f10f3f8de8a37" prot="public" static="no" mutable="no">
        <type>boost::signals2::signal&lt; void(<ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref> &amp;inboxHdr)&gt;</type>
        <definition>boost::signals2::signal&lt;void (SecMsgStored&amp; inboxHdr)&gt; NotifySecMsgInboxChanged</definition>
        <argsstring></argsstring>
        <name>NotifySecMsgInboxChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="47" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="70" bodyend="-1"/>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1aa848b072a4193ed7af7f01276f819170" prot="public" static="no" mutable="no">
        <type>boost::signals2::signal&lt; void(<ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref> &amp;outboxHdr)&gt;</type>
        <definition>boost::signals2::signal&lt;void (SecMsgStored&amp; outboxHdr)&gt; NotifySecMsgOutboxChanged</definition>
        <argsstring></argsstring>
        <name>NotifySecMsgOutboxChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="50" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="71" bodyend="-1"/>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1ac81e578e38c2f309e808d36f4c36dc62" prot="public" static="no" mutable="no">
        <type>boost::signals2::signal&lt; void()&gt;</type>
        <definition>boost::signals2::signal&lt;void ()&gt; NotifySecMsgWalletUnlocked</definition>
        <argsstring></argsstring>
        <name>NotifySecMsgWalletUnlocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="53" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="72" bodyend="-1"/>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1aff7c48d987b8a7eb24801d262a30fb6e" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>, <ref refid="class_sec_msg_bucket" kindref="compound">SecMsgBucket</ref> &gt;</type>
        <definition>std::map&lt;int64_t, SecMsgBucket&gt; smsgBuckets</definition>
        <argsstring></argsstring>
        <name>smsgBuckets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="60" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="76" bodyend="-1"/>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
        <referencedby refid="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" compoundref="smessage_8cpp" startline="1783" endline="1882">SecureMsgSendData</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a5a56ac0f79a9871c59a6482b1323acf5" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_sec_msg_address" kindref="compound">SecMsgAddress</ref> &gt;</type>
        <definition>std::vector&lt;SecMsgAddress&gt; smsgAddresses</definition>
        <argsstring></argsstring>
        <name>smsgAddresses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="77" bodyend="-1"/>
        <referencedby refid="rpcsmessage_8cpp_1af9835f898bc619ef6f9a39a5a8a9f2f1" compoundref="rpcsmessage_8cpp" startline="140" endline="346">smsglocalkeys</referencedby>
        <referencedby refid="smessage_8h_1ab47945fac81152e28647920d324ec630" compoundref="smessage_8cpp" startline="911" endline="961">SecureMsgAddWalletAddresses</referencedby>
        <referencedby refid="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</referencedby>
        <referencedby refid="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</referencedby>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
        <referencedby refid="smessage_8h_1a2a1e22a7c3bbeb96983dc3f28407657e" compoundref="smessage_8cpp" startline="2446" endline="2480">SecureMsgWalletKeyChanged</referencedby>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1ac6ee7d290a6b6af015c10b95d61c704d" prot="public" static="no" mutable="no">
        <type><ref refid="class_sec_msg_options" kindref="compound">SecMsgOptions</ref></type>
        <definition>SecMsgOptions smsgOptions</definition>
        <argsstring></argsstring>
        <name>smsgOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="62" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="78" bodyend="-1"/>
        <referencedby refid="rpcsmessage_8cpp_1aa2570646d53e4ca21553f1535c9d7084" compoundref="rpcsmessage_8cpp" startline="62" endline="138">smsgoptions</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1a06b6584a0cc47952cc6b071c17c7cbd7" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_smsg</definition>
        <argsstring></argsstring>
        <name>cs_smsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="64" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="81" bodyend="-1"/>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
      </memberdef>
      <memberdef kind="variable" id="smessage_8h_1ac42d4f2a114c9e994ebb1379df8ac6d2" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_smsgDB</definition>
        <argsstring></argsstring>
        <name>cs_smsgDB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="82" bodyend="-1"/>
        <referencedby refid="class_message_table_priv_1a0c420e61982703babe27416089ff2bd3" compoundref="messagemodel_8cpp" startline="47" endline="132">MessageTablePriv::refreshMessageTable</referencedby>
        <referencedby refid="class_message_model_1a0bf2ae180e0d137be51b1e1567e66eee" compoundref="messagemodel_8cpp" startline="527" endline="551">MessageModel::removeRows</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a09f153f6fb0e6094919452744ef58ded" compoundref="rpcsmessage_8cpp" startline="679" endline="770">smsgoutbox</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgBuildBucketSet</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgBuildBucketSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="332" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="768" bodyend="909"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" compoundref="smessage_8h" startline="139">SecMsgToken::offset</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" compoundref="smessage_8h" startline="137">SecMsgToken::timestamp</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" compoundref="smessage_8h" startline="138">SecMsgToken::sample</references>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1ab47945fac81152e28647920d324ec630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgAddWalletAddresses</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgAddWalletAddresses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="333" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="911" bodyend="961"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_wallet_1afed31f2489c987e0f76233121ed84ab7" compoundref="wallet_8h" startline="196">CWallet::mapAddressBook</references>
        <references refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" compoundref="script_8cpp" startline="2607" endline="2612">IsMine</references>
        <references refid="class_c_dark_silk_address_1ab98113189d0746ea660447efe3700103" compoundref="base58_8cpp" startline="218" endline="223">CDarkSilkAddress::IsValid</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgReadIni</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgReadIni</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="335" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="964" bodyend="1036"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" compoundref="smessage_8h" startline="226">SecMsgOptions::fNewAddressRecv</references>
        <references refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" compoundref="smessage_8h" startline="227">SecMsgOptions::fNewAddressAnon</references>
        <references refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" compoundref="smessage_8h" startline="228">SecMsgOptions::fScanIncoming</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgWriteIni</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgWriteIni</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="336" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1038" bodyend="1100"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" compoundref="smessage_8h" startline="226">SecMsgOptions::fNewAddressRecv</references>
        <references refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" compoundref="smessage_8h" startline="227">SecMsgOptions::fNewAddressAnon</references>
        <references refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" compoundref="smessage_8h" startline="228">SecMsgOptions::fScanIncoming</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <referencedby refid="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" compoundref="smessage_8cpp" startline="1144" endline="1168">SecureMsgShutdown</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a4c2723040974201407c876e9365ed74c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgStart</definition>
        <argsstring>(bool fDontStart, bool fScanChain)</argsstring>
        <name>SecureMsgStart</name>
        <param>
          <type>bool</type>
          <declname>fDontStart</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fScanChain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>called from <ref refid="init_8cpp_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" kindref="member">AppInit2()</ref> in <ref refid="init_8cpp" kindref="compound">init.cpp</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="338" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1104" bodyend="1142"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="smessage_8cpp_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="smessage_8cpp_1ab47945fac81152e28647920d324ec630" compoundref="smessage_8cpp" startline="911" endline="961">SecureMsgAddWalletAddresses</references>
        <references refid="smessage_8cpp_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" compoundref="smessage_8cpp" startline="2123" endline="2151">SecureMsgScanBlockChain</references>
        <references refid="smessage_8cpp_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</references>
        <references refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" compoundref="smessage_8cpp" startline="68">threadGroupSmsg</references>
        <references refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" compoundref="util_8h" startline="623" endline="644">TraceThread</references>
        <references refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</references>
        <references refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgShutdown</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgShutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="339" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1144" bodyend="1168"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8cpp_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</references>
        <references refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" compoundref="smessage_8cpp" startline="68">threadGroupSmsg</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" compoundref="smessage_8cpp" startline="85">smsgDB</references>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgEnable</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="341" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1170" bodyend="1229"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="smessage_8cpp_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</references>
        <references refid="smessage_8cpp_1ab47945fac81152e28647920d324ec630" compoundref="smessage_8cpp" startline="911" endline="961">SecureMsgAddWalletAddresses</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="smessage_8cpp_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</references>
        <references refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" compoundref="smessage_8cpp" startline="68">threadGroupSmsg</references>
        <references refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" compoundref="util_8h" startline="623" endline="644">TraceThread</references>
        <references refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</references>
        <references refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <referencedby refid="rpcsmessage_8cpp_1a6bb03c9454a432862fc0ca6da63b9acd" compoundref="rpcsmessage_8cpp" startline="21" endline="40">smsgenable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgDisable</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgDisable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="342" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1231" bodyend="1289"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1a8042449955e3a583fe5bf56df94b6353" compoundref="smessage_8cpp" startline="68">threadGroupSmsg</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" compoundref="net_8h" startline="300">CNode::smsgData</references>
        <references refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" compoundref="net_8h" startline="217">SecMsgNode::fEnabled</references>
        <references refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" compoundref="sync_8h" startline="160">LOCK2</references>
        <references refid="class_c_node_1a79edcac83fc5067567c7b41c26fcc56f" compoundref="net_8h" startline="233">CNode::cs_vSend</references>
        <references refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" compoundref="net_8h" startline="209">SecMsgNode::cs_smsg_net</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="smessage_8cpp_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <references refid="smessage_8cpp_1add742de1cada2e96dadcac92efb72b91" compoundref="smessage_8cpp" startline="85">smsgDB</references>
        <referencedby refid="rpcsmessage_8cpp_1a64a1730a2db8d797bb2bd0f35cc8c0d3" compoundref="rpcsmessage_8cpp" startline="42" endline="60">smsgdisable</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgReceiveData</definition>
        <argsstring>(CNode *pfrom, std::string strCommand, CDataStream &amp;vRecv)</argsstring>
        <name>SecureMsgReceiveData</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pfrom</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>strCommand</declname>
        </param>
        <param>
          <type><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref> &amp;</type>
          <declname>vRecv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="344" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1292" bodyend="1781"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_node_1a3155cd313d85ec3ff691f8259a5f5345" compoundref="net_8h" startline="246">CNode::addrName</references>
        <references refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" compoundref="net_8cpp" startline="505" endline="528">CNode::Misbehaving</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" compoundref="net_8h" startline="300">CNode::smsgData</references>
        <references refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" compoundref="net_8h" startline="209">SecMsgNode::cs_smsg_net</references>
        <references refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" compoundref="net_8h" startline="268">CNode::id</references>
        <references refid="class_sec_msg_node_1a574e453a229ed2cbed30ca56727fa564" compoundref="net_8h" startline="214">SecMsgNode::ignoreUntil</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" compoundref="smessage_8h" startline="21">SMSG_BUCKET_LEN</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" compoundref="smessage_8h" startline="27">SMSG_TIME_LEEWAY</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" compoundref="smessage_8h" startline="137">SecMsgToken::timestamp</references>
        <references refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" compoundref="smessage_8h" startline="138">SecMsgToken::sample</references>
        <references refid="class_c_data_stream_1aa91abddde56127bd3d6ac2a0fb005874" compoundref="streams_8h" startline="118" endline="118">CDataStream::resize</references>
        <references refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" compoundref="smessage_8h" startline="139">SecMsgToken::offset</references>
        <references refid="smessage_8cpp_1a9a34bfa72cc027350d71f9daaefb8fef" compoundref="smessage_8cpp" startline="2731" endline="2794">SecureMsgRetrieve</references>
        <references refid="smessage_8cpp_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</references>
        <references refid="class_sec_msg_node_1ac714be60c0566e644df2e0eb006a7817" compoundref="net_8h" startline="213">SecMsgNode::lastMatched</references>
        <references refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" compoundref="net_8h" startline="217">SecMsgNode::fEnabled</references>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgSendData</definition>
        <argsstring>(CNode *pto, bool fSendTrickle)</argsstring>
        <name>SecureMsgSendData</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pto</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fSendTrickle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="345" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="1783" bodyend="1882"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_node_1a739eeb371b83583a159b0b9d386737b9" compoundref="net_8h" startline="300">CNode::smsgData</references>
        <references refid="class_sec_msg_node_1a202af59c01df20a0c45e2ff068df544d" compoundref="net_8h" startline="209">SecMsgNode::cs_smsg_net</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_sec_msg_node_1a3a2e08f929788ebfb517218788e29836" compoundref="net_8h" startline="212">SecMsgNode::lastSeen</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_node_1a3155cd313d85ec3ff691f8259a5f5345" compoundref="net_8h" startline="246">CNode::addrName</references>
        <references refid="class_c_node_1af99591c635f495fc1e6c14745a2a4203" compoundref="net_8h" startline="268">CNode::id</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="class_sec_msg_node_1ad6b7ce67b38267e49c7f173855258800" compoundref="net_8h" startline="217">SecMsgNode::fEnabled</references>
        <references refid="smessage_8h_1a58ba0f46d3e1d728616c6259c3069db9" compoundref="smessage_8h" startline="23">SMSG_SEND_DELAY</references>
        <references refid="class_sec_msg_node_1a72aad5e6551e9c79fac326a2a2806844" compoundref="net_8h" startline="215">SecMsgNode::nWakeCounter</references>
        <references refid="class_sec_msg_node_1ac714be60c0566e644df2e0eb006a7817" compoundref="net_8h" startline="213">SecMsgNode::lastMatched</references>
        <references refid="util_8cpp_1a0e44e088732172da6662db2d5e37d4b2" compoundref="util_8cpp" startline="213" endline="216">GetRandInt</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="class_sec_msg_bucket_1af3c53d130f0f0e1851face20ecaa0ffc" compoundref="smessage_8h" startline="162">SecMsgBucket::setTokens</references>
        <references refid="class_sec_msg_bucket_1a77b045448af083e17a200f042c6d9331" compoundref="smessage_8h" startline="158">SecMsgBucket::timeChanged</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="class_sec_msg_bucket_1a1ad5a6063201291474379dca235824c8" compoundref="smessage_8h" startline="159">SecMsgBucket::hash</references>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a9bd026d2eb7c6dee89c539e99ecac49f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgScanBlock</definition>
        <argsstring>(CBlock &amp;block)</argsstring>
        <name>SecureMsgScanBlock</name>
        <param>
          <type><ref refid="class_c_block" kindref="compound">CBlock</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="348" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2037" bodyend="2071"/>
        <references refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" compoundref="smessage_8h" startline="228">SecMsgOptions::fScanIncoming</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1a0bbc537adf50f87a8bfaa68664e41c41" compoundref="smessage_8cpp" startline="279" endline="285">SecMsgDB::TxnBegin</references>
        <references refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" compoundref="smessage_8cpp" startline="287" endline="305">SecMsgDB::TxnCommit</references>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a440b38f2f513f80283993a2d81e908b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ScanChainForPublicKeys</definition>
        <argsstring>(CBlockIndex *pindexStart)</argsstring>
        <name>ScanChainForPublicKeys</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexStart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="349" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2073" bodyend="2121"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1a0bbc537adf50f87a8bfaa68664e41c41" compoundref="smessage_8cpp" startline="279" endline="285">SecMsgDB::TxnBegin</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" compoundref="chain_8h" startline="112">CBlockIndex::pnext</references>
        <references refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" compoundref="smessage_8cpp" startline="287" endline="305">SecMsgDB::TxnCommit</references>
        <referencedby refid="smessage_8h_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" compoundref="smessage_8cpp" startline="2123" endline="2151">SecureMsgScanBlockChain</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgScanBlockChain</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgScanBlockChain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="350" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2123" bodyend="2151"/>
        <references refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" compoundref="sync_8h" startline="161">TRY_LOCK</references>
        <references refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" compoundref="main_8cpp" startline="44">cs_main</references>
        <references refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" compoundref="main_8cpp" startline="69">pindexGenesisBlock</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8cpp_1a440b38f2f513f80283993a2d81e908b5" compoundref="smessage_8cpp" startline="2073" endline="2121">ScanChainForPublicKeys</references>
        <referencedby refid="rpcsmessage_8cpp_1ae8a97c9381cc7d24d3c86f84cef1a9f3" compoundref="rpcsmessage_8cpp" startline="348" endline="367">smsgscanchain</referencedby>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SecureMsgScanBuckets</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgScanBuckets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="351" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2153" bodyend="2298"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</references>
        <referencedby refid="rpcsmessage_8cpp_1a5b2bd8a2dd98a14b6342c7b08787bb21" compoundref="rpcsmessage_8cpp" startline="369" endline="391">smsgscanbuckets</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgWalletUnlocked</definition>
        <argsstring>()</argsstring>
        <name>SecureMsgWalletUnlocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="354" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2301" bodyend="2444"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</references>
        <references refid="smessage_8cpp_1ac81e578e38c2f309e808d36f4c36dc62" compoundref="smessage_8cpp" startline="72">NotifySecMsgWalletUnlocked</references>
        <referencedby refid="class_c_wallet_1a654ae5a3a7c4c7c7bfd271f108781b40" compoundref="wallet_8cpp" startline="250" endline="283">CWallet::Unlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a2a1e22a7c3bbeb96983dc3f28407657e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgWalletKeyChanged</definition>
        <argsstring>(std::string sAddress, std::string sLabel, ChangeType mode)</argsstring>
        <name>SecureMsgWalletKeyChanged</name>
        <param>
          <type>std::string</type>
          <declname>sAddress</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sLabel</declname>
        </param>
        <param>
          <type><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969" kindref="member">ChangeType</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="355" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2446" bodyend="2480"/>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969ae975c67c7f3a5386de0bbde38221b32f" compoundref="ui__interface_8h" startline="25">CT_NEW</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" compoundref="smessage_8h" startline="226">SecMsgOptions::fNewAddressRecv</references>
        <references refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" compoundref="smessage_8h" startline="227">SecMsgOptions::fNewAddressAnon</references>
        <references refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969a6aa8d1cd0da86fe8886e3a5c47f194ef" compoundref="ui__interface_8h" startline="27">CT_DELETED</references>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgScanMessage</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload, bool reportToGui)</argsstring>
        <name>SecureMsgScanMessage</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reportToGui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="357" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2482" bodyend="2599"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="smessage_8cpp_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</references>
        <references refid="smessage_8cpp_1a5a56ac0f79a9871c59a6482b1323acf5" compoundref="smessage_8cpp" startline="77">smsgAddresses</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</references>
        <references refid="class_message_data_1ab50857b301726898d38ca62031dc67ed" compoundref="smessage_8h" startline="106">MessageData::sFromAddress</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="class_sec_msg_stored_1a9c3a85bc56cd832e5cdf3f04aa37eb3c" compoundref="smessage_8h" startline="271">SecMsgStored::timeReceived</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_sec_msg_stored_1a63b5b4cfb96450a5c170981e108315fe" compoundref="smessage_8h" startline="272">SecMsgStored::status</references>
        <references refid="smessage_8h_1a67801d51a4169b62fe9f323c04ad928a" compoundref="smessage_8h" startline="38">SMSG_MASK_UNREAD</references>
        <references refid="class_sec_msg_stored_1af1f7fa5c7ae4fb43ad914e87686425a1" compoundref="smessage_8h" startline="274">SecMsgStored::sAddrTo</references>
        <references refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" compoundref="smessage_8h" startline="276">SecMsgStored::vchMessage</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1ad9869377019ded94b70a3c4a9ba2afb0" compoundref="smessage_8cpp" startline="535" endline="556">SecMsgDB::ExistsSmesg</references>
        <references refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" compoundref="smessage_8cpp" startline="507" endline="533">SecMsgDB::WriteSmesg</references>
        <references refid="smessage_8cpp_1a93126f5e674af8370c3f10f3f8de8a37" compoundref="smessage_8cpp" startline="70">NotifySecMsgInboxChanged</references>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a1341706507a851babcff6ce436b8ce2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgGetStoredKey</definition>
        <argsstring>(CKeyID &amp;ckid, CPubKey &amp;cpkOut)</argsstring>
        <name>SecureMsgGetStoredKey</name>
        <param>
          <type><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref> &amp;</type>
          <declname>ckid</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>cpkOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="359" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2649" bodyend="2674"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1aabce57e714b562302cee71bcea5e340f" compoundref="smessage_8cpp" startline="314" endline="357">SecMsgDB::ReadPK</references>
        <referencedby refid="class_message_model_1a272e7ceeba4664046472e6f7c4d49d23" compoundref="messagemodel_8cpp" startline="331" endline="352">MessageModel::getAddressOrPubkey</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a7cf2eaa93f14ecaa9d8ac72fd3dc02a2" compoundref="rpcsmessage_8cpp" startline="427" endline="509">smsggetpubkey</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a430258e823bdead36f823a51fd6a4510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgGetLocalKey</definition>
        <argsstring>(CKeyID &amp;ckid, CPubKey &amp;cpkOut)</argsstring>
        <name>SecureMsgGetLocalKey</name>
        <param>
          <type><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref> &amp;</type>
          <declname>ckid</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>cpkOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="360" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2601" bodyend="2617"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1abd897aff07ec5679235b14cb4485dc37" compoundref="crypter_8cpp" startline="325" endline="340">CCryptoKeyStore::GetPubKey</references>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">CPubKey::IsValid</references>
        <references refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" compoundref="pubkey_8h" startline="152" endline="154">CPubKey::IsCompressed</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <referencedby refid="class_message_model_1a272e7ceeba4664046472e6f7c4d49d23" compoundref="messagemodel_8cpp" startline="331" endline="352">MessageModel::getAddressOrPubkey</referencedby>
        <referencedby refid="smessage_8h_1a6dadcd107f4196325fd1b0841dbffd2a" compoundref="smessage_8cpp" startline="2619" endline="2647">SecureMsgGetLocalPublicKey</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a6dadcd107f4196325fd1b0841dbffd2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgGetLocalPublicKey</definition>
        <argsstring>(std::string &amp;strAddress, std::string &amp;strPublicKey)</argsstring>
        <name>SecureMsgGetLocalPublicKey</name>
        <param>
          <type>std::string &amp;</type>
          <declname>strAddress</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strPublicKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="361" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2619" bodyend="2647"/>
        <references refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</references>
        <references refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" compoundref="base58_8cpp" startline="238" endline="245">CDarkSilkAddress::GetKeyID</references>
        <references refid="smessage_8cpp_1a430258e823bdead36f823a51fd6a4510" compoundref="smessage_8cpp" startline="2601" endline="2617">SecureMsgGetLocalKey</references>
        <references refid="base58_8cpp_1a8d6f0e9d5df175b4966dcede31dc90ad" compoundref="base58_8cpp" startline="67" endline="99">EncodeBase58</references>
        <references refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" compoundref="pubkey_8h" startline="92" endline="92">CPubKey::begin</references>
        <references refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" compoundref="pubkey_8h" startline="93" endline="93">CPubKey::end</references>
        <referencedby refid="rpcsmessage_8cpp_1a7cf2eaa93f14ecaa9d8ac72fd3dc02a2" compoundref="rpcsmessage_8cpp" startline="427" endline="509">smsggetpubkey</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a7d84ccbc16eb3d679638ba37b822a5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgAddAddress</definition>
        <argsstring>(std::string &amp;address, std::string &amp;publicKey)</argsstring>
        <name>SecureMsgAddAddress</name>
        <param>
          <type>std::string &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>publicKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="363" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2676" bodyend="2729"/>
        <references refid="class_c_dark_silk_address_1ab98113189d0746ea660447efe3700103" compoundref="base58_8cpp" startline="218" endline="223">CDarkSilkAddress::IsValid</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" compoundref="base58_8cpp" startline="238" endline="245">CDarkSilkAddress::GetKeyID</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="base58_8cpp_1a0f74d1d6e7e982cad4b0e538acea4538" compoundref="base58_8cpp" startline="22" endline="65">DecodeBase58</references>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">CPubKey::IsValid</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" compoundref="smessage_8cpp" startline="1922" endline="1935">SecureMsgInsertAddress</references>
        <referencedby refid="class_message_model_1a76c42a7c0940348d6c2bdd2111cc6424" compoundref="messagemodel_8cpp" startline="364" endline="420">MessageModel::sendMessages</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ab3f43e65ebac0f02747e50c3d4689e9f" compoundref="rpcsmessage_8cpp" startline="393" endline="425">smsgaddkey</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a9a34bfa72cc027350d71f9daaefb8fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgRetrieve</definition>
        <argsstring>(SecMsgToken &amp;token, std::vector&lt; uint8_t &gt; &amp;vchData)</argsstring>
        <name>SecureMsgRetrieve</name>
        <param>
          <type><ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref> &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> &gt; &amp;</type>
          <declname>vchData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="365" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2731" bodyend="2794"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" compoundref="smessage_8h" startline="137">SecMsgToken::timestamp</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" compoundref="smessage_8h" startline="21">SMSG_BUCKET_LEN</references>
        <references refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" compoundref="smessage_8h" startline="139">SecMsgToken::offset</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgReceive</definition>
        <argsstring>(CNode *pfrom, std::vector&lt; uint8_t &gt; &amp;vchData)</argsstring>
        <name>SecureMsgReceive</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pfrom</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> &gt; &amp;</type>
          <declname>vchData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="367" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2796" bodyend="2909"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" compoundref="smessage_8h" startline="27">SMSG_TIME_LEEWAY</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" compoundref="net_8cpp" startline="505" endline="528">CNode::Misbehaving</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="smessage_8cpp_1ae4abbffb060bb486b9e15053f83cbcbf" compoundref="smessage_8cpp" startline="3099" endline="3166">SecureMsgValidate</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</references>
        <references refid="smessage_8cpp_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</references>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgStoreUnscanned</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload)</argsstring>
        <name>SecureMsgStoreUnscanned</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="369" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2911" bodyend="2975"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" compoundref="smessage_8h" startline="27">SMSG_TIME_LEEWAY</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" compoundref="smessage_8h" startline="21">SMSG_BUCKET_LEN</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgStore</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload, bool fUpdateBucket)</argsstring>
        <name>SecureMsgStore</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fUpdateBucket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="370" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="2978" bodyend="3092"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" compoundref="sync_8h" startline="100">AssertLockHeld</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" compoundref="smessage_8h" startline="27">SMSG_TIME_LEEWAY</references>
        <references refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" compoundref="smessage_8h" startline="22">SMSG_RETENTION</references>
        <references refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" compoundref="smessage_8h" startline="21">SMSG_BUCKET_LEN</references>
        <references refid="smessage_8cpp_1aff7c48d987b8a7eb24801d262a30fb6e" compoundref="smessage_8cpp" startline="76">smsgBuckets</references>
        <references refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" compoundref="smessage_8h" startline="137">SecMsgToken::timestamp</references>
        <references refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" compoundref="smessage_8h" startline="138">SecMsgToken::sample</references>
        <references refid="script_8h_1ab545c0a3638ba9151370e91fac78f48d" compoundref="script_8h" startline="354" endline="360">ValueString</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" compoundref="smessage_8h" startline="139">SecMsgToken::offset</references>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1ae5f8acf9cccf634cdb27b3f77b451f9d" compoundref="smessage_8cpp" startline="3094" endline="3097">SecureMsgStore</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1ae5f8acf9cccf634cdb27b3f77b451f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgStore</definition>
        <argsstring>(SecureMessage &amp;smsg, bool fUpdateBucket)</argsstring>
        <name>SecureMsgStore</name>
        <param>
          <type><ref refid="class_secure_message" kindref="compound">SecureMessage</ref> &amp;</type>
          <declname>smsg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fUpdateBucket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="371" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3094" bodyend="3097"/>
        <references refid="smessage_8cpp_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" compoundref="smessage_8h" startline="94">SecureMessage::pPayload</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1acbe2815144396344354ffa3022300278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgSend</definition>
        <argsstring>(std::string &amp;addressFrom, std::string &amp;addressTo, std::string &amp;message, std::string &amp;sError)</argsstring>
        <name>SecureMsgSend</name>
        <param>
          <type>std::string &amp;</type>
          <declname>addressFrom</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>addressTo</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>sError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="375" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3533" bodyend="3699"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" compoundref="smessage_8h" startline="31">SMSG_MAX_MSG_BYTES</references>
        <references refid="smessage_8cpp_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" compoundref="smessage_8h" startline="94">SecureMessage::pPayload</references>
        <references refid="class_sec_msg_stored_1a9c3a85bc56cd832e5cdf3f04aa37eb3c" compoundref="smessage_8h" startline="271">SecMsgStored::timeReceived</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_sec_msg_stored_1af1f7fa5c7ae4fb43ad914e87686425a1" compoundref="smessage_8h" startline="274">SecMsgStored::sAddrTo</references>
        <references refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" compoundref="smessage_8h" startline="276">SecMsgStored::vchMessage</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</references>
        <references refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" compoundref="smessage_8cpp" startline="507" endline="533">SecMsgDB::WriteSmesg</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <references refid="class_c_wallet_1afed31f2489c987e0f76233121ed84ab7" compoundref="wallet_8h" startline="196">CWallet::mapAddressBook</references>
        <references refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" compoundref="script_8cpp" startline="2607" endline="2612">IsMine</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</references>
        <references refid="class_sec_msg_stored_1a9200ada27d6664d6c4c995fac0ed486d" compoundref="smessage_8h" startline="275">SecMsgStored::sAddrOutbox</references>
        <references refid="smessage_8cpp_1aa848b072a4193ed7af7f01276f819170" compoundref="smessage_8cpp" startline="71">NotifySecMsgOutboxChanged</references>
        <referencedby refid="class_message_model_1a76c42a7c0940348d6c2bdd2111cc6424" compoundref="messagemodel_8cpp" startline="364" endline="420">MessageModel::sendMessages</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a98f31e03cd4847162535ddd58c28ac52" compoundref="rpcsmessage_8cpp" startline="511" endline="537">smsgsend</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a64f22b883ee399f49e1656ef90b7c936" compoundref="rpcsmessage_8cpp" startline="539" endline="564">smsgsendanon</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1ae4abbffb060bb486b9e15053f83cbcbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgValidate</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload)</argsstring>
        <name>SecureMsgValidate</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="377" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3099" bodyend="3166"/>
        <references refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" compoundref="smessage_8h" startline="86">SecureMessage::version</references>
        <references refid="smessage_8h_1af7fb9dac77a91414591c4ef98f772120" compoundref="smessage_8h" startline="34">SMSG_MAX_MSG_WORST</references>
        <references refid="class_secure_message_1a0b7fff6595961810d258de2b06cd1854" compoundref="smessage_8h" startline="92">SecureMessage::nonse</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1ac434a0295e161eb2ebdad951f4049dc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgSetHash</definition>
        <argsstring>(uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload)</argsstring>
        <name>SecureMsgSetHash</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="378" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3168" bodyend="3274"/>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="class_secure_message_1a0b7fff6595961810d258de2b06cd1854" compoundref="smessage_8h" startline="92">SecureMessage::nonse</references>
        <references refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" compoundref="smessage_8h" startline="18">SMSG_HDR_LEN</references>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgEncrypt</definition>
        <argsstring>(SecureMessage &amp;smsg, const std::string &amp;addressFrom, const std::string &amp;addressTo, const std::string &amp;message)</argsstring>
        <name>SecureMsgEncrypt</name>
        <param>
          <type><ref refid="class_secure_message" kindref="compound">SecureMessage</ref> &amp;</type>
          <declname>smsg</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>addressFrom</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>addressTo</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="380" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3276" bodyend="3531"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" compoundref="smessage_8h" startline="31">SMSG_MAX_MSG_BYTES</references>
        <references refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" compoundref="smessage_8h" startline="86">SecureMessage::version</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</references>
        <references refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" compoundref="base58_8cpp" startline="238" endline="245">CDarkSilkAddress::GetKeyID</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="smessage_8cpp_1a1341706507a851babcff6ce436b8ce2d" compoundref="smessage_8cpp" startline="2649" endline="2674">SecureMsgGetStoredKey</references>
        <references refid="smessage_8cpp_1a430258e823bdead36f823a51fd6a4510" compoundref="smessage_8cpp" startline="2601" endline="2617">SecureMsgGetLocalKey</references>
        <references refid="util_8cpp_1a786af12a87491f8dc24351d93b9833b6" compoundref="util_8cpp" startline="171" endline="196">RandAddSeedPerfmon</references>
        <references refid="class_secure_message_1ad6f6a76b680f346e4738e40a52479b17" compoundref="smessage_8h" startline="89">SecureMessage::iv</references>
        <references refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" compoundref="key_8cpp" startline="139" endline="146">CKey::MakeNewKey</references>
        <references refid="class_c_e_c_key_1a4f5a374f5aaa622749b7772392c2ef30" compoundref="ecwrapper_8cpp" startline="147" endline="156">CECKey::SetSecretBytes</references>
        <references refid="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" compoundref="key_8h" startline="84" endline="84">CKey::begin</references>
        <references refid="class_c_e_c_key_1a07055de929aa6e4f4b692fb2bd272fdd" compoundref="ecwrapper_8cpp" startline="193" endline="195">CECKey::SetPubKey</references>
        <references refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" compoundref="pubkey_8h" startline="92" endline="92">CPubKey::begin</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">CPubKey::size</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="class_c_e_c_key_1a1a2e6828d8d29d2919d8377cbb14933a" compoundref="ecwrapper_8h" startline="24" endline="24">CECKey::GetECKey</references>
        <references refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" compoundref="key_8cpp" startline="169" endline="180">CKey::GetPubKey</references>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">CPubKey::IsValid</references>
        <references refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" compoundref="pubkey_8h" startline="152" endline="154">CPubKey::IsCompressed</references>
        <references refid="class_secure_message_1a1618e9f53a94ac57bcbbdeaa06dedda4" compoundref="smessage_8h" startline="90">SecureMessage::cpkR</references>
        <references refid="lz4_8c_1a2b09f5ca41ce609bb136d3637beffe04" compoundref="lz4_8c" startline="372" endline="372">LZ4_compressBound</references>
        <references refid="lz4_8c_1a806e7d86885991c722172bcf57abb71b" compoundref="lz4_8c" startline="557" endline="575">LZ4_compress</references>
        <references refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" compoundref="smessage_8h" startline="19">SMSG_PL_HDR_LEN</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a58cfb3c490318ef82de8fc9be6637269" compoundref="crypter_8cpp" startline="301" endline="323">CCryptoKeyStore::GetKey</references>
        <references refid="class_c_key_1a59afeabf3f63d99dfdbd3722087853a1" compoundref="key_8cpp" startline="211" endline="224">CKey::SignCompact</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" compoundref="smessage_8cpp" startline="90" endline="96">SecMsgCrypter::SetKey</references>
        <references refid="class_sec_msg_crypter_1abcd38cca1e7e04486ea959d71465da09" compoundref="smessage_8cpp" startline="108" endline="135">SecMsgCrypter::Encrypt</references>
        <references refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" compoundref="smessage_8h" startline="94">SecureMessage::pPayload</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
        <references refid="class_secure_message_1abf74073a4e3cab2ee76868c4aa5f3641" compoundref="smessage_8h" startline="91">SecureMessage::mac</references>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a2edb582fcb7f69b543174479231647be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgDecrypt</definition>
        <argsstring>(bool fTestOnly, std::string &amp;address, uint8_t *pHeader, uint8_t *pPayload, uint32_t nPayload, MessageData &amp;msg)</argsstring>
        <name>SecureMsgDecrypt</name>
        <param>
          <type>bool</type>
          <declname>fTestOnly</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pHeader</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>pPayload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>nPayload</declname>
        </param>
        <param>
          <type><ref refid="class_message_data" kindref="compound">MessageData</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="382" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3702" bodyend="3946"/>
        <references refid="util_8cpp_1aebbe7fc2f3e1ae3d840076985c9214fa" compoundref="util_8cpp" startline="97">fDebugSmsg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" compoundref="smessage_8h" startline="86">SecureMessage::version</references>
        <references refid="class_c_base58_data_1a250fa3bc97d03c7d87de5485c8b49b57" compoundref="base58_8cpp" startline="155" endline="169">CBase58Data::SetString</references>
        <references refid="class_c_dark_silk_address_1ab305645f49be30fdeac6290debf029ec" compoundref="base58_8cpp" startline="238" endline="245">CDarkSilkAddress::GetKeyID</references>
        <references refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" compoundref="base58_8cpp" startline="175" endline="179">CBase58Data::ToString</references>
        <references refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920">pwalletMain</references>
        <references refid="class_c_crypto_key_store_1a58cfb3c490318ef82de8fc9be6637269" compoundref="crypter_8cpp" startline="301" endline="323">CCryptoKeyStore::GetKey</references>
        <references refid="class_secure_message_1a1618e9f53a94ac57bcbbdeaa06dedda4" compoundref="smessage_8h" startline="90">SecureMessage::cpkR</references>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">CPubKey::IsValid</references>
        <references refid="class_c_e_c_key_1a07055de929aa6e4f4b692fb2bd272fdd" compoundref="ecwrapper_8cpp" startline="193" endline="195">CECKey::SetPubKey</references>
        <references refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" compoundref="pubkey_8h" startline="92" endline="92">CPubKey::begin</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">CPubKey::size</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="class_c_e_c_key_1a4f5a374f5aaa622749b7772392c2ef30" compoundref="ecwrapper_8cpp" startline="147" endline="156">CECKey::SetSecretBytes</references>
        <references refid="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" compoundref="key_8h" startline="84" endline="84">CKey::begin</references>
        <references refid="class_c_e_c_key_1a1a2e6828d8d29d2919d8377cbb14933a" compoundref="ecwrapper_8h" startline="24" endline="24">CECKey::GetECKey</references>
        <references refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" compoundref="smessage_8h" startline="88">SecureMessage::timestamp</references>
        <references refid="class_secure_message_1abf74073a4e3cab2ee76868c4aa5f3641" compoundref="smessage_8h" startline="91">SecureMessage::mac</references>
        <references refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" compoundref="smessage_8cpp" startline="90" endline="96">SecMsgCrypter::SetKey</references>
        <references refid="class_secure_message_1ad6f6a76b680f346e4738e40a52479b17" compoundref="smessage_8h" startline="89">SecureMessage::iv</references>
        <references refid="class_sec_msg_crypter_1a7ede11e62c67b4c1b205f2ddc9402ddb" compoundref="smessage_8cpp" startline="137" endline="163">SecMsgCrypter::Decrypt</references>
        <references refid="class_message_data_1ab5afd561eaa6bc5f64a6c63de9b09f9d" compoundref="smessage_8h" startline="104">MessageData::timestamp</references>
        <references refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" compoundref="smessage_8h" startline="19">SMSG_PL_HDR_LEN</references>
        <references refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" compoundref="smessage_8h" startline="107">MessageData::vchMessage</references>
        <references refid="lz4_8c_1a76d66de24858903c049171e700c1371c" compoundref="lz4_8c" startline="850" endline="853">LZ4_decompress_safe</references>
        <references refid="class_message_data_1ab50857b301726898d38ca62031dc67ed" compoundref="smessage_8h" startline="106">MessageData::sFromAddress</references>
        <references refid="class_c_dark_silk_address_1adafb09872a993f450999c4e4ea0e795b" compoundref="base58_8cpp" startline="204" endline="207">CDarkSilkAddress::Set</references>
        <references refid="class_c_dark_silk_address_1ab98113189d0746ea660447efe3700103" compoundref="base58_8cpp" startline="218" endline="223">CDarkSilkAddress::IsValid</references>
        <references refid="class_c_pub_key_1a169505e735a02db385486b0affeb565c" compoundref="pubkey_8cpp" startline="187" endline="205">CPubKey::RecoverCompact</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="smessage_8cpp_1abedd17ef0763598b8ea28f83438a1858" compoundref="smessage_8cpp" startline="1922" endline="1935">SecureMsgInsertAddress</references>
        <referencedby refid="class_message_table_priv_1a0c420e61982703babe27416089ff2bd3" compoundref="messagemodel_8cpp" startline="47" endline="132">MessageTablePriv::refreshMessageTable</referencedby>
        <referencedby refid="class_message_table_priv_1a7769c63c504ab64c04e0699c4f4aacd3" compoundref="messagemodel_8cpp" startline="134" endline="170">MessageTablePriv::newMessage</referencedby>
        <referencedby refid="class_message_table_priv_1a4718ccab000f83181ada7e74df2e80b4" compoundref="messagemodel_8cpp" startline="172" endline="207">MessageTablePriv::newOutboxMessage</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a09f153f6fb0e6094919452744ef58ded" compoundref="rpcsmessage_8cpp" startline="679" endline="770">smsgoutbox</referencedby>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
        <referencedby refid="smessage_8h_1a7710a63b846d5a4f35f233cfeae6027b" compoundref="smessage_8cpp" startline="3948" endline="3951">SecureMsgDecrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="smessage_8h_1a7710a63b846d5a4f35f233cfeae6027b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SecureMsgDecrypt</definition>
        <argsstring>(bool fTestOnly, std::string &amp;address, SecureMessage &amp;smsg, MessageData &amp;msg)</argsstring>
        <name>SecureMsgDecrypt</name>
        <param>
          <type>bool</type>
          <declname>fTestOnly</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="class_secure_message" kindref="compound">SecureMessage</ref> &amp;</type>
          <declname>smsg</declname>
        </param>
        <param>
          <type><ref refid="class_message_data" kindref="compound">MessageData</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/smessage.h" line="383" column="1" bodyfile="/home/dev/ds-160209/src/smessage.cpp" bodystart="3948" bodyend="3951"/>
        <references refid="smessage_8cpp_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</references>
        <references refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" compoundref="smessage_8h" startline="83">SecureMessage::hash</references>
        <references refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" compoundref="smessage_8h" startline="94">SecureMessage::pPayload</references>
        <references refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" compoundref="smessage_8h" startline="93">SecureMessage::nPayload</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2015<sp/>The<sp/>ShadowCoin<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SEC_MESSAGE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEC_MESSAGE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="leveldb_2include_2leveldb_2db_8h" kindref="compound">leveldb/db.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="write__batch_8h" kindref="compound">leveldb/write_batch.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="net_8h" kindref="compound">net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db_8h" kindref="compound">db.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wallet_8h" kindref="compound">wallet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base58_8h" kindref="compound">base58.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lz4_8h" kindref="compound">lz4/lz4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1afc28e67a41867a64a4a13a73586a2607" kindref="member">SMSG_HDR_LEN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>104;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>unencrypted<sp/>header,<sp/>4<sp/>+<sp/>2<sp/>+<sp/>1<sp/>+<sp/>8<sp/>+<sp/>16<sp/>+<sp/>33<sp/>+<sp/>32<sp/>+<sp/>4<sp/>+4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" kindref="member">SMSG_PL_HDR_LEN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1+20+65+4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>encrypted<sp/>header<sp/>in<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a41ca66ff63082a5ead46779327cb5d8c" kindref="member">SMSG_BUCKET_LEN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>60<sp/>*<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a54e4521fb24340cfbce3df43f214d23d" kindref="member">SMSG_RETENTION</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>60<sp/>*<sp/>60<sp/>*<sp/>48;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="smessage_8h_1a58ba0f46d3e1d728616c6259c3069db9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a58ba0f46d3e1d728616c6259c3069db9" kindref="member">SMSG_SEND_DELAY</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>seconds,<sp/>SecureMsgSendData<sp/>will<sp/>delay<sp/>this<sp/>long<sp/>between<sp/>firing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="smessage_8h_1a4a4a481ee91964e90efbc0e5a742407e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a4a4a481ee91964e90efbc0e5a742407e" kindref="member">SMSG_THREAD_DELAY</ref><sp/><sp/><sp/><sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="25" refid="smessage_8h_1a8efaec21328f5c6b873f6d822b84c6c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a8efaec21328f5c6b873f6d822b84c6c0" kindref="member">SMSG_THREAD_LOG_GAP</ref><sp/><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1ab0c23581ef7a79853848bdb51afebf87" kindref="member">SMSG_TIME_LEEWAY</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="28" refid="smessage_8h_1a10bd0be4c103ccf8f76c710ae2a15b83" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a10bd0be4c103ccf8f76c710ae2a15b83" kindref="member">SMSG_TIME_IGNORE</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>90;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seconds<sp/>that<sp/>a<sp/>peer<sp/>is<sp/>ignored<sp/>for<sp/>if<sp/>they<sp/>fail<sp/>to<sp/>deliver<sp/>messages<sp/>for<sp/>a<sp/>smsgWant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" kindref="member">SMSG_MAX_MSG_BYTES</ref><sp/><sp/><sp/>=<sp/>4096;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>user<sp/>input<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>max<sp/>size<sp/>of<sp/>payload<sp/>worst<sp/>case<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="smessage_8h_1af7fb9dac77a91414591c4ef98f772120" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1af7fb9dac77a91414591c4ef98f772120" kindref="member">SMSG_MAX_MSG_WORST</ref><sp/>=<sp/><ref refid="lz4_8h_1a2453a423fd34640a0afbbf57ed0a5399" kindref="member">LZ4_COMPRESSBOUND</ref>(<ref refid="smessage_8h_1a6a9a6a4cdb43a82fcc67428cf5ede29c" kindref="member">SMSG_MAX_MSG_BYTES</ref>+<ref refid="smessage_8h_1a6e268b09db9a3f1b775cfb4d649e174d" kindref="member">SMSG_PL_HDR_LEN</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="smessage_8h_1a67801d51a4169b62fe9f323c04ad928a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMSG_MASK_UNREAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a6a38441245ee84417e8fb4a77860dc09" kindref="member">fSecMsgEnabled</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inbox<sp/>db<sp/>changed,<sp/>called<sp/>with<sp/>lock<sp/>cs_smsgDB<sp/>held.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>boost::signals2::signal&lt;void<sp/>(SecMsgStored&amp;<sp/>inboxHdr)&gt;<sp/><ref refid="smessage_8h_1a93126f5e674af8370c3f10f3f8de8a37" kindref="member">NotifySecMsgInboxChanged</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Outbox<sp/>db<sp/>changed,<sp/>called<sp/>with<sp/>lock<sp/>cs_smsgDB<sp/>held.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>boost::signals2::signal&lt;void<sp/>(SecMsgStored&amp;<sp/>outboxHdr)&gt;<sp/><ref refid="smessage_8h_1aa848b072a4193ed7af7f01276f819170" kindref="member">NotifySecMsgOutboxChanged</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wallet<sp/>Unlocked,<sp/>called<sp/>after<sp/>all<sp/>messages<sp/>received<sp/>while<sp/>locked<sp/>have<sp/>been<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>boost::signals2::signal&lt;void<sp/>()&gt;<sp/><ref refid="smessage_8h_1ac81e578e38c2f309e808d36f4c36dc62" kindref="member">NotifySecMsgWalletUnlocked</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_bucket" kindref="compound">SecMsgBucket</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_address" kindref="compound">SecMsgAddress</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_options" kindref="compound">SecMsgOptions</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::map&lt;int64_t,<sp/>SecMsgBucket&gt;<sp/><sp/><ref refid="smessage_8h_1aff7c48d987b8a7eb24801d262a30fb6e" kindref="member">smsgBuckets</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::vector&lt;SecMsgAddress&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8h_1a5a56ac0f79a9871c59a6482b1323acf5" kindref="member">smsgAddresses</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_options" kindref="compound">SecMsgOptions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8h_1ac6ee7d290a6b6af015c10b95d61c704d" kindref="member">smsgOptions</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="smessage_8h_1a06b6584a0cc47952cc6b071c17c7cbd7" kindref="member">cs_smsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>except<sp/>inbox<sp/>and<sp/>outbox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="smessage_8h_1ac42d4f2a114c9e994ebb1379df8ac6d2" kindref="member">cs_smsgDB</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_secure_message" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_secure_message" kindref="compound">SecureMessage</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72" refid="class_secure_message_1a6bcfce50d98c362802f731acb0ef1020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message_1a6bcfce50d98c362802f731acb0ef1020" kindref="member">SecureMessage</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_secure_message_1ab1edd17883e0807d40601077c6c83a40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_secure_message_1ab1edd17883e0807d40601077c6c83a40" kindref="member">~SecureMessage</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="83" refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/><sp/><ref refid="class_secure_message_1a922e818b7d08a351ccf6298fd8b9e312" kindref="member">hash</ref>[4];</highlight></codeline>
<codeline lineno="86" refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/><sp/><ref refid="class_secure_message_1a13da5a2bfabeba96f2b0e8beafad4404" kindref="member">version</ref>[2];</highlight></codeline>
<codeline lineno="87" refid="class_secure_message_1a753fd0eac0696882e5a7775e3d56604c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/><sp/><ref refid="class_secure_message_1a753fd0eac0696882e5a7775e3d56604c" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="88" refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/><sp/><ref refid="class_secure_message_1abcacba8fbdcf20ff354e00dda9c9fec1" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="89" refid="class_secure_message_1ad6f6a76b680f346e4738e40a52479b17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/><sp/><ref refid="class_secure_message_1ad6f6a76b680f346e4738e40a52479b17" kindref="member">iv</ref>[16];</highlight></codeline>
<codeline lineno="90" refid="class_secure_message_1a1618e9f53a94ac57bcbbdeaa06dedda4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/><sp/><ref refid="class_secure_message_1a1618e9f53a94ac57bcbbdeaa06dedda4" kindref="member">cpkR</ref>[33];</highlight></codeline>
<codeline lineno="91" refid="class_secure_message_1abf74073a4e3cab2ee76868c4aa5f3641" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/><sp/><ref refid="class_secure_message_1abf74073a4e3cab2ee76868c4aa5f3641" kindref="member">mac</ref>[32];</highlight></codeline>
<codeline lineno="92" refid="class_secure_message_1a0b7fff6595961810d258de2b06cd1854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/><sp/><ref refid="class_secure_message_1a0b7fff6595961810d258de2b06cd1854" kindref="member">nonse</ref>[4];</highlight></codeline>
<codeline lineno="93" refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><sp/><ref refid="class_secure_message_1a438e4c877867ad7b09768bb1ab047555" kindref="member">nPayload</ref>;</highlight></codeline>
<codeline lineno="94" refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/><sp/><ref refid="class_secure_message_1a2602ff454315ad14c6576008c1b0c333" kindref="member">pPayload</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_message_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_message_data" kindref="compound">MessageData</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--<sp/>Decrypted<sp/>SecureMessage<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104" refid="class_message_data_1ab5afd561eaa6bc5f64a6c63de9b09f9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_message_data_1ab5afd561eaa6bc5f64a6c63de9b09f9d" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="105" refid="class_message_data_1aada42ee21e633c6ac8031800942b0dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_message_data_1aada42ee21e633c6ac8031800942b0dff" kindref="member">sToAddress</ref>;</highlight></codeline>
<codeline lineno="106" refid="class_message_data_1ab50857b301726898d38ca62031dc67ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_message_data_1ab50857b301726898d38ca62031dc67ed" kindref="member">sFromAddress</ref>;</highlight></codeline>
<codeline lineno="107" refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/><sp/><ref refid="class_message_data_1a0a0a69a68866ee4810571e0e4dd05242" kindref="member">vchMessage</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>null<sp/>terminated<sp/>plaintext</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_sec_msg_token" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114" refid="class_sec_msg_token_1afab3652ec51eb938aca1d922e565a91d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token_1afab3652ec51eb938aca1d922e565a91d" kindref="member">SecMsgToken</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>ts,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>np,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref><sp/>=<sp/>ts;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(np<sp/>&lt;<sp/>8)<sp/></highlight><highlight class="comment">//<sp/>payload<sp/>will<sp/>always<sp/>be<sp/>&gt;<sp/>8,<sp/>just<sp/>make<sp/>sure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" kindref="member">sample</ref>,<sp/>0,<sp/>8);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" kindref="member">sample</ref>,<sp/>p,<sp/>8);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" kindref="member">offset</ref><sp/>=<sp/>o;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_sec_msg_token_1a8f4b8e10e090e523958c85bdff065f77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token_1a8f4b8e10e090e523958c85bdff065f77" kindref="member">SecMsgToken</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_sec_msg_token_1a35a5c515530de2ff38c618ad08c812de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token_1a35a5c515530de2ff38c618ad08c812de" kindref="member">~SecMsgToken</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_sec_msg_token_1a565aa7d13b5a90aa9a028f3bfeb8227b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_token_1a565aa7d13b5a90aa9a028f3bfeb8227b" kindref="member">operator &lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref>&amp;<sp/>y)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="130"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pack<sp/>and<sp/>memcmp<sp/>from<sp/>timesent?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref><sp/>==<sp/>y.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>memcmp(<ref refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" kindref="member">sample</ref>,<sp/>y.<ref refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" kindref="member">sample</ref>,<sp/>8)<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref><sp/>&lt;<sp/>y.<ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token_1ae38e93419379e9d202e386aa9dda193b" kindref="member">timestamp</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>need<sp/>to<sp/>be<sp/>full<sp/>64<sp/>bytes?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token_1a5cda3c8fcc7e167458c7b28bd6acc9e4" kindref="member">sample</ref>[8];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>8<sp/>bytes<sp/>of<sp/>payload<sp/>-<sp/>a<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_token_1a65aeb2a37d1653ae97c2fe5c32c0c4b2" kindref="member">offset</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_sec_msg_bucket" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_bucket" kindref="compound">SecMsgBucket</ref></highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147" refid="class_sec_msg_bucket_1a9963ecd126aa5c429543dcd9d5526551" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1a9963ecd126aa5c429543dcd9d5526551" kindref="member">SecMsgBucket</ref>()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1a77b045448af083e17a200f042c6d9331" kindref="member">timeChanged</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1a1ad5a6063201291474379dca235824c8" kindref="member">hash</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1af12267e1275cad471f8f1873f8282280" kindref="member">nLockCount</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1ae141dcf89fde5f3d1671cae9303f874d" kindref="member">nLockPeerId</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="154" refid="class_sec_msg_bucket_1a4e3c2f4001f4f3dc4b31ac566b4b6c14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1a4e3c2f4001f4f3dc4b31ac566b4b6c14" kindref="member">~SecMsgBucket</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_bucket_1ae6e05a91141c7cacf593b90e8c082113" kindref="member">hashBucket</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_sec_msg_bucket_1a77b045448af083e17a200f042c6d9331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1a77b045448af083e17a200f042c6d9331" kindref="member">timeChanged</ref>;</highlight></codeline>
<codeline lineno="159" refid="class_sec_msg_bucket_1a1ad5a6063201291474379dca235824c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1a1ad5a6063201291474379dca235824c8" kindref="member">hash</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>token<sp/>set<sp/>should<sp/>get<sp/>ordered<sp/>the<sp/>same<sp/>on<sp/>each<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_sec_msg_bucket_1af12267e1275cad471f8f1873f8282280" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1af12267e1275cad471f8f1873f8282280" kindref="member">nLockCount</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>when<sp/>smsgWant<sp/>first<sp/>sent,<sp/>unset<sp/>at<sp/>end<sp/>of<sp/>smsgMsg,<sp/>ticks<sp/>down<sp/>in<sp/>ThreadSecureMsg()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_sec_msg_bucket_1ae141dcf89fde5f3d1671cae9303f874d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net_8h_1a954d746a58632565552615fd0a4ee660" kindref="member">NodeId</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1ae141dcf89fde5f3d1671cae9303f874d" kindref="member">nLockPeerId</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>id<sp/>of<sp/>peer<sp/>that<sp/>bucket<sp/>is<sp/>locked<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_sec_msg_bucket_1af3c53d130f0f0e1851face20ecaa0ffc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;SecMsgToken&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_bucket_1af3c53d130f0f0e1851face20ecaa0ffc" kindref="member">setTokens</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--<sp/>get<sp/>at<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_c_dark_silk_address___b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_dark_silk_address___b" kindref="compound">CDarkSilkAddress_B</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref></highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171" refid="class_c_dark_silk_address___b_1affe58d6433eb41ed80ab1f901cd35123" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><ref refid="class_c_dark_silk_address___b_1affe58d6433eb41ed80ab1f901cd35123" kindref="member">getVersion</ref>()</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>fix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_base58_data_1a110c1008f399053098a1bdf63408e923" kindref="member">vchVersion</ref>.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_base58_data_1a110c1008f399053098a1bdf63408e923" kindref="member">vchVersion</ref>[0];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_c_key_i_d___b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_key_i_d___b" kindref="compound">CKeyID_B</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref></highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183" refid="class_c_key_i_d___b_1acca0e984445eda4dd5354d6725018f58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>*<sp/><ref refid="class_c_key_i_d___b_1acca0e984445eda4dd5354d6725018f58" kindref="member">GetPPN</ref>()</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbase__uint_1a0edb1465d540fadd92b21659f27083a2" kindref="member">pn</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_sec_msg_address" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_address" kindref="compound">SecMsgAddress</ref></highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193" refid="class_sec_msg_address_1af9bf7b0336ac539a99ab5f2a61e88f60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_address_1af9bf7b0336ac539a99ab5f2a61e88f60" kindref="member">SecMsgAddress</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="194" refid="class_sec_msg_address_1a8b4fbe93dcaf5bbcee30cb6f480227d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_address_1a8b4fbe93dcaf5bbcee30cb6f480227d0" kindref="member">SecMsgAddress</ref>(std::string<sp/>sAddr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>receiveOn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>receiveAnon)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_address_1a75c5e24741cf29ee640244e0bf6d8ec4" kindref="member">sAddress</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sAddr;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_address_1a7413861d7bc9036c5f832528ec7fa3ff" kindref="member">fReceiveEnabled</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>receiveOn;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_address_1a6d8d71d0d6eec6643ad5bd12e411d3d4" kindref="member">fReceiveAnon</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>receiveAnon;</highlight></codeline>
<codeline lineno="199" refid="class_sec_msg_address_1a75c5e24741cf29ee640244e0bf6d8ec4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_address_1a75c5e24741cf29ee640244e0bf6d8ec4" kindref="member">sAddress</ref>;</highlight></codeline>
<codeline lineno="202" refid="class_sec_msg_address_1a7413861d7bc9036c5f832528ec7fa3ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_address_1a7413861d7bc9036c5f832528ec7fa3ff" kindref="member">fReceiveEnabled</ref>;</highlight></codeline>
<codeline lineno="203" refid="class_sec_msg_address_1a6d8d71d0d6eec6643ad5bd12e411d3d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_address_1a6d8d71d0d6eec6643ad5bd12e411d3d4" kindref="member">fReceiveAnon</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="class_sec_msg_address_1a1b2009d0b40c315053c4ed9625580155" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_address_1a1b2009d0b40c315053c4ed9625580155" kindref="member">ADD_SERIALIZE_METHODS</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Operation&gt;</highlight></codeline>
<codeline lineno="208" refid="class_sec_msg_address_1a6bdc333f6fa806bd842233b50a314329" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_address_1a6bdc333f6fa806bd842233b50a314329" kindref="member">SerializationOp</ref>(Stream&amp;<sp/>s,<sp/>Operation<sp/>ser_action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;sAddress);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;fReceiveEnabled);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;fReceiveAnon);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="class_sec_msg_options" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_options" kindref="compound">SecMsgOptions</ref></highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218" refid="class_sec_msg_options_1a50014a716fc9c496eb8db708fb5114ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_options_1a50014a716fc9c496eb8db708fb5114ce" kindref="member">SecMsgOptions</ref>()</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>default<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" kindref="member">fNewAddressRecv</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" kindref="member">fNewAddressAnon</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" kindref="member">fScanIncoming</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_options_1ae9e4dac2327a288f33b95319ea8730da" kindref="member">fNewAddressRecv</ref>;</highlight></codeline>
<codeline lineno="227" refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_options_1a1c385b931d2cf0c43c228dd3e6fc42b2" kindref="member">fNewAddressAnon</ref>;</highlight></codeline>
<codeline lineno="228" refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_options_1ab6112d8ce04dd74987daaee636da15fa" kindref="member">fScanIncoming</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_sec_msg_crypter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_crypter" kindref="compound">SecMsgCrypter</ref></highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>chKey[32];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>chIV[16];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fKeySet;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_sec_msg_crypter_1a9ad7ff90747e0ed5e3670206aabcbaf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_crypter_1a9ad7ff90747e0ed5e3670206aabcbaf6" kindref="member">SecMsgCrypter</ref>()</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>keep<sp/>the<sp/>key<sp/>data<sp/>out<sp/>of<sp/>swap<sp/>(and<sp/>be<sp/>a<sp/>bit<sp/>over-careful<sp/>to<sp/>keep<sp/>the<sp/>IV<sp/>that<sp/>we<sp/>don&apos;t<sp/>even<sp/>use<sp/>out<sp/>of<sp/>swap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>does<sp/>nothing<sp/>about<sp/>suspend-to-disk<sp/>(which<sp/>will<sp/>put<sp/>all<sp/>our<sp/>key<sp/>data<sp/>on<sp/>disk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>as<sp/>well<sp/>that<sp/>at<sp/>no<sp/>point<sp/>in<sp/>this<sp/>program<sp/>is<sp/>any<sp/>attempt<sp/>made<sp/>to<sp/>prevent<sp/>stealing<sp/>of<sp/>keys<sp/>by<sp/>reading<sp/>the<sp/>memory<sp/>of<sp/>the<sp/>running<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_locked_page_manager_1aedd82df65c12c1d83d43ac8500c57fcf" kindref="member">LockedPageManager::instance</ref>.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(&amp;chKey[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>chKey);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_locked_page_manager_1aedd82df65c12c1d83d43ac8500c57fcf" kindref="member">LockedPageManager::instance</ref>.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(&amp;chIV[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>chIV);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fKeySet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="class_sec_msg_crypter_1a366a49eed14dce915015fd467e3f4169" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_crypter_1a366a49eed14dce915015fd467e3f4169" kindref="member">~SecMsgCrypter</ref>()</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;chKey,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>chKey);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;chIV,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>chIV);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fKeySet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_locked_page_manager_1aedd82df65c12c1d83d43ac8500c57fcf" kindref="member">LockedPageManager::instance</ref>.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(&amp;chKey[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>chKey);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_locked_page_manager_1aedd82df65c12c1d83d43ac8500c57fcf" kindref="member">LockedPageManager::instance</ref>.<ref refid="class_locked_page_manager_base_1ae24ac08899505b892d451404133fa494" kindref="member">LockRange</ref>(&amp;chIV[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>chIV);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" kindref="member">SetKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>vchNewKey,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chNewIV);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" kindref="member">SetKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chNewKey,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chNewIV);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_crypter_1abcd38cca1e7e04486ea959d71465da09" kindref="member">Encrypt</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chPlaintext,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPlain,<sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;vchCiphertext);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_crypter_1a7ede11e62c67b4c1b205f2ddc9402ddb" kindref="member">Decrypt</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chCiphertext,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nCipher,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>vchPlaintext);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="class_sec_msg_stored" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref></highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271" refid="class_sec_msg_stored_1a9c3a85bc56cd832e5cdf3f04aa37eb3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored_1a9c3a85bc56cd832e5cdf3f04aa37eb3c" kindref="member">timeReceived</ref>;</highlight></codeline>
<codeline lineno="272" refid="class_sec_msg_stored_1a63b5b4cfb96450a5c170981e108315fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored_1a63b5b4cfb96450a5c170981e108315fe" kindref="member">status</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="class_sec_msg_stored_1a1ec4984f1718b756aeb18b44aaf4fbad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored_1a1ec4984f1718b756aeb18b44aaf4fbad" kindref="member">folderId</ref>;</highlight></codeline>
<codeline lineno="274" refid="class_sec_msg_stored_1af1f7fa5c7ae4fb43ad914e87686425a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored_1af1f7fa5c7ae4fb43ad914e87686425a1" kindref="member">sAddrTo</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>in<sp/>owned<sp/>addr,<sp/>when<sp/>sent<sp/>remote<sp/>addr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_sec_msg_stored_1a9200ada27d6664d6c4c995fac0ed486d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored_1a9200ada27d6664d6c4c995fac0ed486d" kindref="member">sAddrOutbox</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>owned<sp/>address<sp/>this<sp/>copy<sp/>was<sp/>encrypted<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored_1a109dca8a348a188efba86d41e21cdfed" kindref="member">vchMessage</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>header<sp/>+<sp/>encryped<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="class_sec_msg_stored_1a0d1bc2f6c5a7453f0343d230bd76e8a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_stored_1a0d1bc2f6c5a7453f0343d230bd76e8a0" kindref="member">ADD_SERIALIZE_METHODS</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Operation&gt;</highlight></codeline>
<codeline lineno="281" refid="class_sec_msg_stored_1a04684c852fb85f4bb0bfa3248a057e7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_stored_1a04684c852fb85f4bb0bfa3248a057e7f" kindref="member">SerializationOp</ref>(Stream&amp;<sp/>s,<sp/>Operation<sp/>ser_action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;timeReceived);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;status);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;folderId);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;sAddrTo);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;sAddrOutbox);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;vchMessage);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal">};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class_sec_msg_d_b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sec_msg_d_b" kindref="compound">SecMsgDB</ref></highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294" refid="class_sec_msg_d_b_1a903159afeb64ca142f9f2634929e57fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1a903159afeb64ca142f9f2634929e57fd" kindref="member">SecMsgDB</ref>()</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="class_sec_msg_d_b_1ac73f225e8632a99aeb3fb618935b0599" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_d_b_1ac73f225e8632a99aeb3fb618935b0599" kindref="member">~SecMsgDB</ref>()</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>deletes<sp/>only<sp/>data<sp/>scoped<sp/>to<sp/>this<sp/>TxDB<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" kindref="member">Open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszMode=</highlight><highlight class="stringliteral">&quot;r+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1af26665a96e391711f4df702861d1557a" kindref="member">ScanBatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>&amp;<sp/>key,<sp/>std::string*<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>deleted)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a0bbc537adf50f87a8bfaa68664e41c41" kindref="member">TxnBegin</ref>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" kindref="member">TxnCommit</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a49e50670db162f8c9e192b7b00f0a813" kindref="member">TxnAbort</ref>();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1aabce57e714b562302cee71bcea5e340f" kindref="member">ReadPK</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>addr,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a77131fcd232e503a57ab8569d3ab9fd8" kindref="member">WritePK</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>addr,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1ad039b1d29fc0e82695d3bd30087765b9" kindref="member">ExistsPK</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>addr);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1ac16426690cd634af83b90aa39a7a5d51" kindref="member">NextSmesg</ref>(<ref refid="classleveldb_1_1_iterator" kindref="compound">leveldb::Iterator</ref>*<sp/>it,<sp/>std::string&amp;<sp/>prefix,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>vchKey,<sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref>&amp;<sp/>smsgStored);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a6aa8320d9850912374a74823024df701" kindref="member">NextSmesgKey</ref>(<ref refid="classleveldb_1_1_iterator" kindref="compound">leveldb::Iterator</ref>*<sp/>it,<sp/>std::string&amp;<sp/>prefix,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>vchKey);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a35c86d596ed6c60f4d62cc3e551356d2" kindref="member">ReadSmesg</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey,<sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref>&amp;<sp/>smsgStored);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" kindref="member">WriteSmesg</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey,<sp/><ref refid="class_sec_msg_stored" kindref="compound">SecMsgStored</ref>&amp;<sp/>smsgStored);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1ad9869377019ded94b70a3c4a9ba2afb0" kindref="member">ExistsSmesg</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sec_msg_d_b_1a7d00fef57cf02d33e0b076ca114f7af5" kindref="member">EraseSmesg</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*<sp/>chKey);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">leveldb::DB</ref><sp/>*<ref refid="class_sec_msg_d_b_1a3715bf85e5e420c6c3ec5335bec80ed0" kindref="member">pdb</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>points<sp/>to<sp/>the<sp/>global<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">leveldb::WriteBatch</ref><sp/>*<ref refid="class_sec_msg_d_b_1add6d2066ed0af0b4fcaef2739663e2c4" kindref="member">activeBatch</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" kindref="member">SecureMsgBuildBucketSet</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1ab47945fac81152e28647920d324ec630" kindref="member">SecureMsgAddWalletAddresses</ref>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" kindref="member">SecureMsgReadIni</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" kindref="member">SecureMsgWriteIni</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" kindref="member">SecureMsgStart</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDontStart,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fScanChain);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" kindref="member">SecureMsgShutdown</ref>();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" kindref="member">SecureMsgEnable</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" kindref="member">SecureMsgDisable</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" kindref="member">SecureMsgReceiveData</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/>std::string<sp/>strCommand,<sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>&amp;<sp/>vRecv);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" kindref="member">SecureMsgSendData</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pto,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSendTrickle);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a9bd026d2eb7c6dee89c539e99ecac49f" kindref="member">SecureMsgScanBlock</ref>(<ref refid="class_c_block" kindref="compound">CBlock</ref>&amp;<sp/><ref refid="structblock__" kindref="compound">block</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a440b38f2f513f80283993a2d81e908b5" kindref="member">ScanChainForPublicKeys</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexStart);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" kindref="member">SecureMsgScanBlockChain</ref>();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" kindref="member">SecureMsgScanBuckets</ref>();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" kindref="member">SecureMsgWalletUnlocked</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a2a1e22a7c3bbeb96983dc3f28407657e" kindref="member">SecureMsgWalletKeyChanged</ref>(std::string<sp/>sAddress,<sp/>std::string<sp/>sLabel,<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969" kindref="member">ChangeType</ref><sp/>mode);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" kindref="member">SecureMsgScanMessage</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reportToGui);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a1341706507a851babcff6ce436b8ce2d" kindref="member">SecureMsgGetStoredKey</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>ckid,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>cpkOut);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a430258e823bdead36f823a51fd6a4510" kindref="member">SecureMsgGetLocalKey</ref>(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>&amp;<sp/>ckid,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>cpkOut);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a6dadcd107f4196325fd1b0841dbffd2a" kindref="member">SecureMsgGetLocalPublicKey</ref>(std::string&amp;<sp/>strAddress,<sp/>std::string&amp;<sp/>strPublicKey);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a7d84ccbc16eb3d679638ba37b822a5e2" kindref="member">SecureMsgAddAddress</ref>(std::string&amp;<sp/>address,<sp/>std::string&amp;<sp/>publicKey);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a9a34bfa72cc027350d71f9daaefb8fef" kindref="member">SecureMsgRetrieve</ref>(<ref refid="class_sec_msg_token" kindref="compound">SecMsgToken</ref><sp/>&amp;token,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>vchData);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" kindref="member">SecureMsgReceive</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>vchData);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" kindref="member">SecureMsgStoreUnscanned</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" kindref="member">SecureMsgStore</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUpdateBucket);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" kindref="member">SecureMsgStore</ref>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref>&amp;<sp/>smsg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUpdateBucket);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1acbe2815144396344354ffa3022300278" kindref="member">SecureMsgSend</ref>(std::string<sp/>&amp;addressFrom,<sp/>std::string<sp/>&amp;addressTo,<sp/>std::string<sp/>&amp;message,<sp/>std::string<sp/>&amp;sError);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1ae4abbffb060bb486b9e15053f83cbcbf" kindref="member">SecureMsgValidate</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1ac434a0295e161eb2ebdad951f4049dc6" kindref="member">SecureMsgSetHash</ref>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" kindref="member">SecureMsgEncrypt</ref>(<ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>&amp;smsg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;addressFrom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;addressTo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" kindref="member">SecureMsgDecrypt</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fTestOnly,<sp/>std::string<sp/>&amp;address,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pHeader,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*pPayload,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nPayload,<sp/><ref refid="class_message_data" kindref="compound">MessageData</ref><sp/>&amp;msg);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" kindref="member">SecureMsgDecrypt</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fTestOnly,<sp/>std::string<sp/>&amp;address,<sp/><ref refid="class_secure_message" kindref="compound">SecureMessage</ref><sp/>&amp;smsg,<sp/><ref refid="class_message_data" kindref="compound">MessageData</ref><sp/>&amp;msg);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SEC_MESSAGE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/smessage.h"/>
  </compounddef>
</doxygen>
