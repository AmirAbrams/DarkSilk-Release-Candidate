<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="bench__recover_8c" kind="file" language="C++">
    <compoundname>bench_recover.c</compoundname>
    <includes refid="secp256k1_8h" local="yes">include/secp256k1.h</includes>
    <includes refid="secp256k1__recovery_8h" local="yes">include/secp256k1_recovery.h</includes>
    <includes refid="secp256k1_2src_2util_8h" local="yes">util.h</includes>
    <includes refid="bench_8h" local="yes">bench.h</includes>
    <incdepgraph>
      <node id="51639">
        <label>stdlib.h</label>
      </node>
      <node id="51635">
        <label>include/secp256k1.h</label>
        <link refid="secp256k1_8h"/>
        <childnode refid="51636" relation="include">
        </childnode>
      </node>
      <node id="51636">
        <label>stddef.h</label>
      </node>
      <node id="51638">
        <label>util.h</label>
        <link refid="secp256k1_2src_2util_8h"/>
        <childnode refid="51639" relation="include">
        </childnode>
        <childnode refid="51640" relation="include">
        </childnode>
        <childnode refid="51641" relation="include">
        </childnode>
      </node>
      <node id="51634">
        <label>/home/dev/ds-160209/src/secp256k1/src/bench_recover.c</label>
        <link refid="bench_recover.c"/>
        <childnode refid="51635" relation="include">
        </childnode>
        <childnode refid="51637" relation="include">
        </childnode>
        <childnode refid="51638" relation="include">
        </childnode>
        <childnode refid="51642" relation="include">
        </childnode>
      </node>
      <node id="51643">
        <label>math.h</label>
      </node>
      <node id="51640">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="51644">
        <label>sys/time.h</label>
      </node>
      <node id="51637">
        <label>include/secp256k1_recovery.h</label>
        <link refid="secp256k1__recovery_8h"/>
        <childnode refid="51635" relation="include">
        </childnode>
      </node>
      <node id="51641">
        <label>stdio.h</label>
      </node>
      <node id="51642">
        <label>bench.h</label>
        <link refid="bench_8h"/>
        <childnode refid="51641" relation="include">
        </childnode>
        <childnode refid="51643" relation="include">
        </childnode>
        <childnode refid="51644" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structbench__recover__t" prot="public">bench_recover_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="bench__recover_8c_1a6bbc6888c36d93d55e5410b25121db10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_recover</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_recover</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_recover.c" line="18" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_recover.c" bodystart="18" bodyend="37"/>
        <references refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" compoundref="secp256k1_2src_2util_8h" startline="52">CHECK</references>
        <references refid="secp256k1__recovery_8h_1a6699b45dc75be70f028ac7d8ffaba46e" compoundref="recovery_2main__impl_8h" startline="38" endline="58">secp256k1_ecdsa_recoverable_signature_parse_compact</references>
        <references refid="structbench__recover__t_1acc09a09bcc17745c54700b8bc712a6f6" compoundref="bench__recover_8c" startline="13">bench_recover_t::ctx</references>
        <references refid="structbench__recover__t_1a76d1266b30c8d6a55fd52e9bb7c67a85" compoundref="bench__recover_8c" startline="15">bench_recover_t::sig</references>
        <references refid="secp256k1__recovery_8h_1a7e156c6f4be24b07f4a563210dcb1a2e" compoundref="recovery_2main__impl_8h" startline="170" endline="191">secp256k1_ecdsa_recover</references>
        <references refid="structbench__recover__t_1ae1fb7111eb50d3b09ea073ffa61824ee" compoundref="bench__recover_8c" startline="14">bench_recover_t::msg</references>
        <references refid="secp256k1_8h_1a34977bf00322e510e881160c421836d7" compoundref="secp256k1_8c" startline="168" endline="190">secp256k1_ec_pubkey_serialize</references>
        <references refid="secp256k1_8h_1a7b8f642c65e8b5c81fa4421b7c42ab57" compoundref="secp256k1_8h" startline="165">SECP256K1_EC_COMPRESSED</references>
        <referencedby refid="bench__recover_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="bench__recover_8c" startline="51" endline="60">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="bench__recover_8c_1a15af8ec3a7685ac66f3d2b1addc91099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bench_recover_setup</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_recover_setup</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_recover.c" line="39" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_recover.c" bodystart="39" bodyend="49"/>
        <references refid="structbench__recover__t_1ae1fb7111eb50d3b09ea073ffa61824ee" compoundref="bench__recover_8c" startline="14">bench_recover_t::msg</references>
        <references refid="structbench__recover__t_1a76d1266b30c8d6a55fd52e9bb7c67a85" compoundref="bench__recover_8c" startline="15">bench_recover_t::sig</references>
        <referencedby refid="bench__recover_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="bench__recover_8c" startline="51" endline="60">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="bench__recover_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_recover.c" line="51" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_recover.c" bodystart="51" bodyend="60"/>
        <references refid="structbench__recover__t_1acc09a09bcc17745c54700b8bc712a6f6" compoundref="bench__recover_8c" startline="13">bench_recover_t::ctx</references>
        <references refid="secp256k1_8h_1a769d478f352afbb55200e33970533a3c" compoundref="secp256k1_8c" startline="60" endline="83">secp256k1_context_create</references>
        <references refid="secp256k1_8h_1add20a6c320e247ca7bd524cbc4259d64" compoundref="secp256k1_8h" startline="160">SECP256K1_CONTEXT_VERIFY</references>
        <references refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" compoundref="bench_8h" startline="33" endline="64">run_benchmark</references>
        <references refid="bench__recover_8c_1a6bbc6888c36d93d55e5410b25121db10" compoundref="bench__recover_8c" startline="18" endline="37">bench_recover</references>
        <references refid="bench__recover_8c_1a15af8ec3a7685ac66f3d2b1addc91099" compoundref="bench__recover_8c" startline="39" endline="49">bench_recover_setup</references>
        <references refid="secp256k1_8h_1af8569fb9aa73c0acf46afce4df662950" compoundref="secp256k1_8c" startline="94" endline="101">secp256k1_context_destroy</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014-2015<sp/>Pieter<sp/>Wuille<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1_8h" kindref="compound">include/secp256k1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1__recovery_8h" kindref="compound">include/secp256k1_recovery.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1_2src_2util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bench_8h" kindref="compound">bench.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structbench__recover__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="structbench__recover__t_1acc09a09bcc17745c54700b8bc712a6f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__context__struct" kindref="compound">secp256k1_context</ref><sp/>*<ref refid="structbench__recover__t_1acc09a09bcc17745c54700b8bc712a6f6" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="14" refid="structbench__recover__t_1ae1fb7111eb50d3b09ea073ffa61824ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[32];</highlight></codeline>
<codeline lineno="15" refid="structbench__recover__t_1a76d1266b30c8d6a55fd52e9bb7c67a85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sig[64];</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}<sp/><ref refid="structbench__recover__t" kindref="compound">bench_recover_t</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="bench__recover_8c_1a6bbc6888c36d93d55e5410b25121db10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__recover_8c_1a6bbc6888c36d93d55e5410b25121db10" kindref="member">bench_recover</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__recover__t" kindref="compound">bench_recover_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__recover__t" kindref="compound">bench_recover_t</ref>*)arg;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__pubkey" kindref="compound">secp256k1_pubkey</ref><sp/>pubkey;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pubkeyc[33];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pubkeylen<sp/>=<sp/>33;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__ecdsa__recoverable__signature" kindref="compound">secp256k1_ecdsa_recoverable_signature</ref><sp/>sig;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1__recovery_8h_1a6699b45dc75be70f028ac7d8ffaba46e" kindref="member">secp256k1_ecdsa_recoverable_signature_parse_compact</ref>(data-&gt;<ref refid="structbench__recover__t_1acc09a09bcc17745c54700b8bc712a6f6" kindref="member">ctx</ref>,<sp/>&amp;sig,<sp/>data-&gt;<ref refid="structbench__recover__t_1a76d1266b30c8d6a55fd52e9bb7c67a85" kindref="member">sig</ref>,<sp/>i<sp/>%<sp/>2));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1__recovery_8h_1a7e156c6f4be24b07f4a563210dcb1a2e" kindref="member">secp256k1_ecdsa_recover</ref>(data-&gt;<ref refid="structbench__recover__t_1acc09a09bcc17745c54700b8bc712a6f6" kindref="member">ctx</ref>,<sp/>&amp;pubkey,<sp/>&amp;sig,<sp/>data-&gt;<ref refid="structbench__recover__t_1ae1fb7111eb50d3b09ea073ffa61824ee" kindref="member">msg</ref>));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1_8h_1a34977bf00322e510e881160c421836d7" kindref="member">secp256k1_ec_pubkey_serialize</ref>(data-&gt;<ref refid="structbench__recover__t_1acc09a09bcc17745c54700b8bc712a6f6" kindref="member">ctx</ref>,<sp/>pubkeyc,<sp/>&amp;pubkeylen,<sp/>&amp;pubkey,<sp/><ref refid="secp256k1_8h_1a7b8f642c65e8b5c81fa4421b7c42ab57" kindref="member">SECP256K1_EC_COMPRESSED</ref>));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>32;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbench__recover__t_1a76d1266b30c8d6a55fd52e9bb7c67a85" kindref="member">sig</ref>[j<sp/>+<sp/>32]<sp/>=<sp/>data-&gt;<ref refid="structbench__recover__t_1ae1fb7111eb50d3b09ea073ffa61824ee" kindref="member">msg</ref>[j];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>former<sp/>message<sp/>to<sp/>S.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbench__recover__t_1ae1fb7111eb50d3b09ea073ffa61824ee" kindref="member">msg</ref>[j]<sp/>=<sp/>data-&gt;<ref refid="structbench__recover__t_1a76d1266b30c8d6a55fd52e9bb7c67a85" kindref="member">sig</ref>[j];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>former<sp/>R<sp/>to<sp/>message.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbench__recover__t_1a76d1266b30c8d6a55fd52e9bb7c67a85" kindref="member">sig</ref>[j]<sp/>=<sp/>pubkeyc[j<sp/>+<sp/>1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>recovered<sp/>pubkey<sp/>X<sp/>coordinate<sp/>to<sp/>R<sp/>(which<sp/>must<sp/>be<sp/>a<sp/>valid<sp/>X<sp/>coordinate).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="bench__recover_8c_1a15af8ec3a7685ac66f3d2b1addc91099" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bench__recover_8c_1a15af8ec3a7685ac66f3d2b1addc91099" kindref="member">bench_recover_setup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__recover__t" kindref="compound">bench_recover_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__recover__t" kindref="compound">bench_recover_t</ref>*)arg;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbench__recover__t_1ae1fb7111eb50d3b09ea073ffa61824ee" kindref="member">msg</ref>[i]<sp/>=<sp/>1<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>64;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbench__recover__t_1a76d1266b30c8d6a55fd52e9bb7c67a85" kindref="member">sig</ref>[i]<sp/>=<sp/>65<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="bench__recover_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bench__recover_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__recover__t" kindref="compound">bench_recover_t</ref><sp/>data;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structbench__recover__t_1acc09a09bcc17745c54700b8bc712a6f6" kindref="member">ctx</ref><sp/>=<sp/><ref refid="secp256k1_8h_1a769d478f352afbb55200e33970533a3c" kindref="member">secp256k1_context_create</ref>(<ref refid="secp256k1_8h_1add20a6c320e247ca7bd524cbc4259d64" kindref="member">SECP256K1_CONTEXT_VERIFY</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;ecdsa_recover&quot;</highlight><highlight class="normal">,<sp/><ref refid="bench__recover_8c_1a6bbc6888c36d93d55e5410b25121db10" kindref="member">bench_recover</ref>,<sp/><ref refid="bench__recover_8c_1a15af8ec3a7685ac66f3d2b1addc91099" kindref="member">bench_recover_setup</ref>,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_8h_1af8569fb9aa73c0acf46afce4df662950" kindref="member">secp256k1_context_destroy</ref>(data.<ref refid="structbench__recover__t_1acc09a09bcc17745c54700b8bc712a6f6" kindref="member">ctx</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/bench_recover.c"/>
  </compounddef>
</doxygen>
