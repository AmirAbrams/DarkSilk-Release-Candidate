<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="lax__der__privatekey__parsing_8h" kind="file" language="C++">
    <compoundname>lax_der_privatekey_parsing.h</compoundname>
    <includes refid="secp256k1_8h" local="no">secp256k1.h</includes>
    <includedby refid="lax__der__privatekey__parsing_8c" local="yes">/home/dev/ds-160209/src/secp256k1/contrib/lax_der_privatekey_parsing.c</includedby>
    <incdepgraph>
      <node id="22060">
        <label>secp256k1.h</label>
        <link refid="secp256k1_8h"/>
        <childnode refid="22061" relation="include">
        </childnode>
      </node>
      <node id="22061">
        <label>stddef.h</label>
      </node>
      <node id="22059">
        <label>/home/dev/ds-160209/src/secp256k1/contrib/lax_der_privatekey_parsing.h</label>
        <link refid="lax_der_privatekey_parsing.h"/>
        <childnode refid="22060" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22064">
        <label>/home/dev/ds-160209/src/secp256k1/src/tests.c</label>
        <link refid="tests_8c"/>
      </node>
      <node id="22063">
        <label>/home/dev/ds-160209/src/secp256k1/contrib/lax_der_privatekey_parsing.c</label>
        <link refid="lax__der__privatekey__parsing_8c"/>
        <childnode refid="22064" relation="include">
        </childnode>
      </node>
      <node id="22062">
        <label>/home/dev/ds-160209/src/secp256k1/contrib/lax_der_privatekey_parsing.h</label>
        <link refid="lax_der_privatekey_parsing.h"/>
        <childnode refid="22063" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="lax__der__privatekey__parsing_8h_1ab0172ae6ae0adcf65b3d94960ece8e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1aebd5ca8fbfcbb0ba0754a46115143c2c" kindref="member">SECP256K1_WARN_UNUSED_RESULT</ref> int</type>
        <definition>SECP256K1_WARN_UNUSED_RESULT int ec_privkey_export_der</definition>
        <argsstring>(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *seckey, int compressed) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4)</argsstring>
        <name>ec_privkey_export_der</name>
        <param>
          <type>const <ref refid="secp256k1_8h_1a282ec9e6dfec8c35955c3eb2f7476e5e" kindref="member">secp256k1_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>privkeylen</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>seckey</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compressed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Export a private key in DER format.</para><para>Returns: 1 if the private key was valid. Args: ctx: pointer to a context object, initialized for signing (cannot be NULL) Out: privkey: pointer to an array for storing the private key in BER. Should have space for 279 bytes, and cannot be NULL. privkeylen: Pointer to an int where the length of the private key in privkey will be stored. In: seckey: pointer to a 32-byte secret key to export. compressed: 1 if the key should be exported in compressed format, 0 otherwise</para><para>This function is purely meant for compatibility with applications that require BER encoded keys. When working with secp256k1-specific code, the simple 32-byte private keys are sufficient.</para><para>Note that this function does not guarantee correct DER output. It is guaranteed to be parsable by secp256k1_ec_privkey_import_der </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/contrib/lax_der_privatekey_parsing.h" line="57" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/contrib/lax_der_privatekey_parsing.c" bodystart="56" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="lax__der__privatekey__parsing_8h_1a73106d5c4a234faa276659a29efe11d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1aebd5ca8fbfcbb0ba0754a46115143c2c" kindref="member">SECP256K1_WARN_UNUSED_RESULT</ref> int</type>
        <definition>SECP256K1_WARN_UNUSED_RESULT int ec_privkey_import_der</definition>
        <argsstring>(const secp256k1_context *ctx, unsigned char *seckey, const unsigned char *privkey, size_t privkeylen) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3)</argsstring>
        <name>ec_privkey_import_der</name>
        <param>
          <type>const <ref refid="secp256k1_8h_1a282ec9e6dfec8c35955c3eb2f7476e5e" kindref="member">secp256k1_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>seckey</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>privkeylen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Import a private key in DER format. Returns: 1 if a private key was extracted. Args: ctx: pointer to a context object (cannot be NULL). Out: seckey: pointer to a 32-byte array for storing the private key. (cannot be NULL). In: privkey: pointer to a private key in DER format (cannot be NULL). privkeylen: length of the DER private key pointed to be privkey.</para><para>This function will accept more than just strict DER, and even allow some BER violations. The public key stored inside the DER-encoded private key is not verified for correctness, nor are the curve parameters. Use this function only if you know in advance it is supposed to contain a secp256k1 private key. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/contrib/lax_der_privatekey_parsing.h" line="79" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/contrib/lax_der_privatekey_parsing.c" bodystart="12" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014,<sp/>2015<sp/>Pieter<sp/>Wuille<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/****</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Please<sp/>do<sp/>not<sp/>link<sp/>this<sp/>file<sp/>directly.<sp/>It<sp/>is<sp/>not<sp/>part<sp/>of<sp/>the<sp/>libsecp256k1</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>project<sp/>and<sp/>does<sp/>not<sp/>promise<sp/>any<sp/>stability<sp/>in<sp/>its<sp/>API,<sp/>functionality<sp/>or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>presence.<sp/>Projects<sp/>which<sp/>use<sp/>this<sp/>code<sp/>should<sp/>instead<sp/>copy<sp/>this<sp/>header</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>and<sp/>its<sp/>accompanying<sp/>.c<sp/>file<sp/>directly<sp/>into<sp/>their<sp/>codebase.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>file<sp/>contains<sp/>code<sp/>snippets<sp/>that<sp/>parse<sp/>DER<sp/>private<sp/>keys<sp/>with</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>various<sp/>errors<sp/>and<sp/>violations.<sp/><sp/>This<sp/>is<sp/>not<sp/>a<sp/>part<sp/>of<sp/>the<sp/>library</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>itself,<sp/>because<sp/>the<sp/>allowed<sp/>violations<sp/>are<sp/>chosen<sp/>arbitrarily<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>do<sp/>not<sp/>follow<sp/>or<sp/>establish<sp/>any<sp/>standard.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>It<sp/>also<sp/>contains<sp/>code<sp/>to<sp/>serialize<sp/>private<sp/>keys<sp/>in<sp/>a<sp/>compatible</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>manner.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>These<sp/>functions<sp/>are<sp/>meant<sp/>for<sp/>compatibility<sp/>with<sp/>applications</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>that<sp/>require<sp/>BER<sp/>encoded<sp/>keys.<sp/>When<sp/>working<sp/>with<sp/>secp256k1-specific</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>code,<sp/>the<sp/>simple<sp/>32-byte<sp/>private<sp/>keys<sp/>normally<sp/>used<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>library<sp/>are<sp/>sufficient.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SECP256K1_CONTRIB_BER_PRIVATEKEY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SECP256K1_CONTRIB_BER_PRIVATEKEY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="secp256k1_8h" kindref="compound">secp256k1.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="secp256k1_8h_1aebd5ca8fbfcbb0ba0754a46115143c2c" kindref="member">SECP256K1_WARN_UNUSED_RESULT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lax__der__privatekey__parsing_8h_1ab0172ae6ae0adcf65b3d94960ece8e31" kindref="member">ec_privkey_export_der</ref>(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__context__struct" kindref="compound">secp256k1_context</ref>*<sp/>ctx,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*privkey,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*privkeylen,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*seckey,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compressed</highlight></codeline>
<codeline lineno="63"><highlight class="normal">)<sp/><ref refid="secp256k1_8h_1a03c194d8fa91b9b66758b36c91e0b5cb" kindref="member">SECP256K1_ARG_NONNULL</ref>(1)<sp/><ref refid="secp256k1_8h_1a03c194d8fa91b9b66758b36c91e0b5cb" kindref="member">SECP256K1_ARG_NONNULL</ref>(2)<sp/><ref refid="secp256k1_8h_1a03c194d8fa91b9b66758b36c91e0b5cb" kindref="member">SECP256K1_ARG_NONNULL</ref>(3)<sp/><ref refid="secp256k1_8h_1a03c194d8fa91b9b66758b36c91e0b5cb" kindref="member">SECP256K1_ARG_NONNULL</ref>(4);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="secp256k1_8h_1aebd5ca8fbfcbb0ba0754a46115143c2c" kindref="member">SECP256K1_WARN_UNUSED_RESULT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lax__der__privatekey__parsing_8h_1a73106d5c4a234faa276659a29efe11d3" kindref="member">ec_privkey_import_der</ref>(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/><ref refid="structsecp256k1__context__struct" kindref="compound">secp256k1_context</ref>*<sp/>ctx,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*seckey,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*privkey,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>privkeylen</highlight></codeline>
<codeline lineno="84"><highlight class="normal">)<sp/>SECP256K1_ARG_NONNULL(1)<sp/>SECP256K1_ARG_NONNULL(2)<sp/>SECP256K1_ARG_NONNULL(3);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/contrib/lax_der_privatekey_parsing.h"/>
  </compounddef>
</doxygen>
