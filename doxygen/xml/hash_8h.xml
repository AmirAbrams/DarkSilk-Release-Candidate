<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="hash_8h" kind="file" language="C++">
    <compoundname>hash.h</compoundname>
    <includes refid="uint256_8h" local="yes">uint256.h</includes>
    <includes refid="serialize_8h" local="yes">serialize.h</includes>
    <includes local="no">openssl/sha.h</includes>
    <includes local="no">openssl/ripemd.h</includes>
    <includes refid="ripemd160_8h" local="yes">crypto/ripemd160.h</includes>
    <includes refid="sha256_8h" local="yes">crypto/sha256.h</includes>
    <includes refid="blake2_8h" local="yes">crypto/argon2/blake2/blake2.h</includes>
    <includes refid="argon2_8h" local="yes">crypto/argon2/argon2.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="pubkey_8h" local="yes">/home/dev/ds-160209/src/pubkey.h</includedby>
    <includedby refid="net_8h" local="yes">/home/dev/ds-160209/src/net.h</includedby>
    <includedby refid="addrman_8cpp" local="yes">/home/dev/ds-160209/src/addrman.cpp</includedby>
    <includedby refid="base58_8cpp" local="yes">/home/dev/ds-160209/src/base58.cpp</includedby>
    <includedby refid="compressor_8cpp" local="yes">/home/dev/ds-160209/src/compressor.cpp</includedby>
    <includedby refid="db_8cpp" local="yes">/home/dev/ds-160209/src/db.cpp</includedby>
    <includedby refid="hash_8cpp" local="yes">/home/dev/ds-160209/src/hash.cpp</includedby>
    <includedby refid="i2p_8cpp" local="yes">/home/dev/ds-160209/src/i2p.cpp</includedby>
    <includedby refid="netbase_8cpp" local="yes">/home/dev/ds-160209/src/netbase.cpp</includedby>
    <incdepgraph>
      <node id="34425">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="34417">
        <label>limits</label>
      </node>
      <node id="34434">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="34410" relation="include">
        </childnode>
        <childnode refid="34423" relation="include">
        </childnode>
      </node>
      <node id="34435">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="34436" relation="include">
        </childnode>
        <childnode refid="34410" relation="include">
        </childnode>
        <childnode refid="34427" relation="include">
        </childnode>
      </node>
      <node id="34420">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="34407">
        <label>assert.h</label>
      </node>
      <node id="34429">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="34430" relation="include">
        </childnode>
        <childnode refid="34411" relation="include">
        </childnode>
      </node>
      <node id="34426">
        <label>sys/mman.h</label>
      </node>
      <node id="34423">
        <label>stdlib.h</label>
      </node>
      <node id="34431">
        <label>openssl/sha.h</label>
      </node>
      <node id="34416">
        <label>cassert</label>
      </node>
      <node id="34409">
        <label>stdexcept</label>
      </node>
      <node id="34411">
        <label>string</label>
      </node>
      <node id="34414">
        <label>map</label>
      </node>
      <node id="34436">
        <label>stddef.h</label>
      </node>
      <node id="34413">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="34411" relation="include">
        </childnode>
        <childnode refid="34412" relation="include">
        </childnode>
        <childnode refid="34414" relation="include">
        </childnode>
        <childnode refid="34415" relation="include">
        </childnode>
        <childnode refid="34416" relation="include">
        </childnode>
        <childnode refid="34417" relation="include">
        </childnode>
        <childnode refid="34410" relation="include">
        </childnode>
        <childnode refid="34408" relation="include">
        </childnode>
        <childnode refid="34418" relation="include">
        </childnode>
        <childnode refid="34419" relation="include">
        </childnode>
        <childnode refid="34420" relation="include">
        </childnode>
        <childnode refid="34421" relation="include">
        </childnode>
        <childnode refid="34429" relation="include">
        </childnode>
      </node>
      <node id="34427">
        <label>limits.h</label>
      </node>
      <node id="34405">
        <label>/home/dev/ds-160209/src/hash.h</label>
        <link refid="hash.h"/>
        <childnode refid="34406" relation="include">
        </childnode>
        <childnode refid="34413" relation="include">
        </childnode>
        <childnode refid="34431" relation="include">
        </childnode>
        <childnode refid="34432" relation="include">
        </childnode>
        <childnode refid="34433" relation="include">
        </childnode>
        <childnode refid="34434" relation="include">
        </childnode>
        <childnode refid="34435" relation="include">
        </childnode>
        <childnode refid="34437" relation="include">
        </childnode>
        <childnode refid="34412" relation="include">
        </childnode>
      </node>
      <node id="34424">
        <label>string.h</label>
      </node>
      <node id="34430">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="34418">
        <label>cstdio</label>
      </node>
      <node id="34419">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="34428">
        <label>unistd.h</label>
      </node>
      <node id="34412">
        <label>vector</label>
      </node>
      <node id="34432">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="34410">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="34437">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="34410" relation="include">
        </childnode>
        <childnode refid="34436" relation="include">
        </childnode>
        <childnode refid="34427" relation="include">
        </childnode>
      </node>
      <node id="34406">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="34407" relation="include">
        </childnode>
        <childnode refid="34408" relation="include">
        </childnode>
        <childnode refid="34409" relation="include">
        </childnode>
        <childnode refid="34410" relation="include">
        </childnode>
        <childnode refid="34411" relation="include">
        </childnode>
        <childnode refid="34412" relation="include">
        </childnode>
      </node>
      <node id="34421">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="34422" relation="include">
        </childnode>
        <childnode refid="34424" relation="include">
        </childnode>
        <childnode refid="34411" relation="include">
        </childnode>
        <childnode refid="34425" relation="include">
        </childnode>
        <childnode refid="34414" relation="include">
        </childnode>
        <childnode refid="34426" relation="include">
        </childnode>
        <childnode refid="34427" relation="include">
        </childnode>
        <childnode refid="34428" relation="include">
        </childnode>
      </node>
      <node id="34415">
        <label>set</label>
      </node>
      <node id="34433">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="34410" relation="include">
        </childnode>
        <childnode refid="34423" relation="include">
        </childnode>
      </node>
      <node id="34422">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="34423" relation="include">
        </childnode>
      </node>
      <node id="34408">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="34474">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="34455">
        <label>/home/dev/ds-160209/src/stormnodeman.cpp</label>
        <link refid="stormnodeman_8cpp"/>
      </node>
      <node id="34479">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="34521">
        <label>/home/dev/ds-160209/src/rpcserver.cpp</label>
        <link refid="rpcserver_8cpp"/>
      </node>
      <node id="34456">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="34568">
        <label>/home/dev/ds-160209/src/hash.cpp</label>
        <link refid="hash_8cpp"/>
      </node>
      <node id="34487">
        <label>/home/dev/ds-160209/src/qt/guiutil.cpp</label>
        <link refid="guiutil_8cpp"/>
      </node>
      <node id="34517">
        <label>/home/dev/ds-160209/src/stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34462" relation="include">
        </childnode>
        <childnode refid="34463" relation="include">
        </childnode>
        <childnode refid="34452" relation="include">
        </childnode>
        <childnode refid="34466" relation="include">
        </childnode>
        <childnode refid="34453" relation="include">
        </childnode>
        <childnode refid="34454" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34530">
        <label>/home/dev/ds-160209/src/primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="34531" relation="include">
        </childnode>
        <childnode refid="34470" relation="include">
        </childnode>
        <childnode refid="34538" relation="include">
        </childnode>
        <childnode refid="34535" relation="include">
        </childnode>
        <childnode refid="34557" relation="include">
        </childnode>
        <childnode refid="34558" relation="include">
        </childnode>
        <childnode refid="34457" relation="include">
        </childnode>
        <childnode refid="34559" relation="include">
        </childnode>
        <childnode refid="34560" relation="include">
        </childnode>
        <childnode refid="34487" relation="include">
        </childnode>
        <childnode refid="34509" relation="include">
        </childnode>
      </node>
      <node id="34472">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="34473" relation="include">
        </childnode>
        <childnode refid="34474" relation="include">
        </childnode>
        <childnode refid="34475" relation="include">
        </childnode>
        <childnode refid="34476" relation="include">
        </childnode>
        <childnode refid="34477" relation="include">
        </childnode>
        <childnode refid="34478" relation="include">
        </childnode>
      </node>
      <node id="34529">
        <label>/home/dev/ds-160209/src/script.h</label>
        <link refid="script_8h"/>
        <childnode refid="34468" relation="include">
        </childnode>
        <childnode refid="34530" relation="include">
        </childnode>
        <childnode refid="34533" relation="include">
        </childnode>
        <childnode refid="34470" relation="include">
        </childnode>
        <childnode refid="34518" relation="include">
        </childnode>
        <childnode refid="34444" relation="include">
        </childnode>
        <childnode refid="34507" relation="include">
        </childnode>
        <childnode refid="34483" relation="include">
        </childnode>
        <childnode refid="34465" relation="include">
        </childnode>
        <childnode refid="34510" relation="include">
        </childnode>
        <childnode refid="34452" relation="include">
        </childnode>
        <childnode refid="34528" relation="include">
        </childnode>
      </node>
      <node id="34485">
        <label>/home/dev/ds-160209/src/qt/addresstablemodel.cpp</label>
        <link refid="addresstablemodel_8cpp"/>
      </node>
      <node id="34556">
        <label>/home/dev/ds-160209/src/primitives/block.cpp</label>
        <link refid="block_8cpp"/>
      </node>
      <node id="34457">
        <label>/home/dev/ds-160209/src/net.cpp</label>
        <link refid="net_8cpp"/>
      </node>
      <node id="34469">
        <label>/home/dev/ds-160209/src/walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="34470" relation="include">
        </childnode>
        <childnode refid="34483" relation="include">
        </childnode>
        <childnode refid="34499" relation="include">
        </childnode>
        <childnode refid="34460" relation="include">
        </childnode>
        <childnode refid="34450" relation="include">
        </childnode>
        <childnode refid="34501" relation="include">
        </childnode>
        <childnode refid="34502" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
        <childnode refid="34505" relation="include">
        </childnode>
      </node>
      <node id="34443">
        <label>/home/dev/ds-160209/src/sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="34444" relation="include">
        </childnode>
        <childnode refid="34447" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34457" relation="include">
        </childnode>
        <childnode refid="34458" relation="include">
        </childnode>
        <childnode refid="34459" relation="include">
        </childnode>
        <childnode refid="34460" relation="include">
        </childnode>
        <childnode refid="34461" relation="include">
        </childnode>
        <childnode refid="34462" relation="include">
        </childnode>
        <childnode refid="34463" relation="include">
        </childnode>
        <childnode refid="34464" relation="include">
        </childnode>
        <childnode refid="34465" relation="include">
        </childnode>
        <childnode refid="34466" relation="include">
        </childnode>
        <childnode refid="34453" relation="include">
        </childnode>
        <childnode refid="34467" relation="include">
        </childnode>
        <childnode refid="34455" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34538">
        <label>/home/dev/ds-160209/src/txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="34533" relation="include">
        </childnode>
        <childnode refid="34537" relation="include">
        </childnode>
        <childnode refid="34539" relation="include">
        </childnode>
      </node>
      <node id="34512">
        <label>/home/dev/ds-160209/src/stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="34442" relation="include">
        </childnode>
        <childnode refid="34447" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34513" relation="include">
        </childnode>
        <childnode refid="34474" relation="include">
        </childnode>
        <childnode refid="34482" relation="include">
        </childnode>
        <childnode refid="34451" relation="include">
        </childnode>
        <childnode refid="34462" relation="include">
        </childnode>
        <childnode refid="34463" relation="include">
        </childnode>
        <childnode refid="34465" relation="include">
        </childnode>
        <childnode refid="34466" relation="include">
        </childnode>
        <childnode refid="34453" relation="include">
        </childnode>
        <childnode refid="34454" relation="include">
        </childnode>
        <childnode refid="34467" relation="include">
        </childnode>
        <childnode refid="34455" relation="include">
        </childnode>
      </node>
      <node id="34452">
        <label>/home/dev/ds-160209/src/spork.cpp</label>
        <link refid="spork_8cpp"/>
      </node>
      <node id="34500">
        <label>/home/dev/ds-160209/src/qt/transactiondesc.cpp</label>
        <link refid="transactiondesc_8cpp"/>
      </node>
      <node id="34513">
        <label>/home/dev/ds-160209/src/qt/clientmodel.cpp</label>
        <link refid="clientmodel_8cpp"/>
      </node>
      <node id="34494">
        <label>/home/dev/ds-160209/src/qt/transactionview.cpp</label>
        <link refid="transactionview_8cpp"/>
      </node>
      <node id="34518">
        <label>/home/dev/ds-160209/src/base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="34514" relation="include">
        </childnode>
        <childnode refid="34515" relation="include">
        </childnode>
        <childnode refid="34444" relation="include">
        </childnode>
        <childnode refid="34519" relation="include">
        </childnode>
        <childnode refid="34517" relation="include">
        </childnode>
        <childnode refid="34471" relation="include">
        </childnode>
        <childnode refid="34447" relation="include">
        </childnode>
        <childnode refid="34483" relation="include">
        </childnode>
        <childnode refid="34485" relation="include">
        </childnode>
        <childnode refid="34495" relation="include">
        </childnode>
        <childnode refid="34496" relation="include">
        </childnode>
        <childnode refid="34458" relation="include">
        </childnode>
        <childnode refid="34497" relation="include">
        </childnode>
        <childnode refid="34475" relation="include">
        </childnode>
        <childnode refid="34489" relation="include">
        </childnode>
        <childnode refid="34491" relation="include">
        </childnode>
        <childnode refid="34498" relation="include">
        </childnode>
        <childnode refid="34500" relation="include">
        </childnode>
        <childnode refid="34461" relation="include">
        </childnode>
        <childnode refid="34450" relation="include">
        </childnode>
        <childnode refid="34520" relation="include">
        </childnode>
        <childnode refid="34482" relation="include">
        </childnode>
        <childnode refid="34451" relation="include">
        </childnode>
        <childnode refid="34509" relation="include">
        </childnode>
        <childnode refid="34521" relation="include">
        </childnode>
        <childnode refid="34501" relation="include">
        </childnode>
        <childnode refid="34480" relation="include">
        </childnode>
        <childnode refid="34452" relation="include">
        </childnode>
        <childnode refid="34522" relation="include">
        </childnode>
        <childnode refid="34523" relation="include">
        </childnode>
        <childnode refid="34524" relation="include">
        </childnode>
        <childnode refid="34525" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
        <childnode refid="34505" relation="include">
        </childnode>
      </node>
      <node id="34463">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode_8cpp"/>
      </node>
      <node id="34458">
        <label>/home/dev/ds-160209/src/qt/coincontroldialog.cpp</label>
        <link refid="coincontroldialog_8cpp"/>
      </node>
      <node id="34540">
        <label>/home/dev/ds-160209/src/coins.cpp</label>
        <link refid="coins_8cpp"/>
      </node>
      <node id="34475">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="34523">
        <label>/home/dev/ds-160209/src/stormnodeconfig.cpp</label>
        <link refid="stormnodeconfig_8cpp"/>
      </node>
      <node id="34537">
        <label>/home/dev/ds-160209/src/coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="34538" relation="include">
        </childnode>
        <childnode refid="34540" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
      </node>
      <node id="34532">
        <label>/home/dev/ds-160209/src/chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="34533" relation="include">
        </childnode>
        <childnode refid="34445" relation="include">
        </childnode>
        <childnode refid="34555" relation="include">
        </childnode>
      </node>
      <node id="34471">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34472" relation="include">
        </childnode>
        <childnode refid="34478" relation="include">
        </childnode>
        <childnode refid="34450" relation="include">
        </childnode>
        <childnode refid="34479" relation="include">
        </childnode>
        <childnode refid="34480" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34473">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="34559">
        <label>/home/dev/ds-160209/src/primitives/transaction.cpp</label>
        <link refid="transaction_8cpp"/>
      </node>
      <node id="34501">
        <label>/home/dev/ds-160209/src/rpcwallet.cpp</label>
        <link refid="rpcwallet_8cpp"/>
      </node>
      <node id="34553">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="34498" relation="include">
        </childnode>
      </node>
      <node id="34539">
        <label>/home/dev/ds-160209/src/txmempool.cpp</label>
        <link refid="txmempool_8cpp"/>
      </node>
      <node id="34511">
        <label>/home/dev/ds-160209/src/stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="34512" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34449" relation="include">
        </childnode>
        <childnode refid="34462" relation="include">
        </childnode>
        <childnode refid="34463" relation="include">
        </childnode>
        <childnode refid="34465" relation="include">
        </childnode>
        <childnode refid="34453" relation="include">
        </childnode>
        <childnode refid="34454" relation="include">
        </childnode>
        <childnode refid="34467" relation="include">
        </childnode>
        <childnode refid="34455" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34498">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="34490">
        <label>/home/dev/ds-160209/src/qt/sendcoinsentry.cpp</label>
        <link refid="sendcoinsentry_8cpp"/>
      </node>
      <node id="34550">
        <label>/home/dev/ds-160209/src/qt/debugconsole.h</label>
        <link refid="debugconsole_8h"/>
        <childnode refid="34474" relation="include">
        </childnode>
        <childnode refid="34551" relation="include">
        </childnode>
      </node>
      <node id="34548">
        <label>/home/dev/ds-160209/src/chainparams.cpp</label>
        <link refid="chainparams_8cpp"/>
      </node>
      <node id="34450">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="34542">
        <label>/home/dev/ds-160209/src/compressor.cpp</label>
        <link refid="compressor_8cpp"/>
      </node>
      <node id="34492">
        <label>/home/dev/ds-160209/src/qt/test/uritests.cpp</label>
        <link refid="uritests_8cpp"/>
      </node>
      <node id="34470">
        <label>/home/dev/ds-160209/src/wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="34441" relation="include">
        </childnode>
        <childnode refid="34445" relation="include">
        </childnode>
        <childnode refid="34471" relation="include">
        </childnode>
        <childnode refid="34481" relation="include">
        </childnode>
        <childnode refid="34457" relation="include">
        </childnode>
        <childnode refid="34483" relation="include">
        </childnode>
        <childnode refid="34484" relation="include">
        </childnode>
        <childnode refid="34485" relation="include">
        </childnode>
        <childnode refid="34495" relation="include">
        </childnode>
        <childnode refid="34496" relation="include">
        </childnode>
        <childnode refid="34458" relation="include">
        </childnode>
        <childnode refid="34473" relation="include">
        </childnode>
        <childnode refid="34474" relation="include">
        </childnode>
        <childnode refid="34497" relation="include">
        </childnode>
        <childnode refid="34499" relation="include">
        </childnode>
        <childnode refid="34491" relation="include">
        </childnode>
        <childnode refid="34498" relation="include">
        </childnode>
        <childnode refid="34460" relation="include">
        </childnode>
        <childnode refid="34500" relation="include">
        </childnode>
        <childnode refid="34461" relation="include">
        </childnode>
        <childnode refid="34493" relation="include">
        </childnode>
        <childnode refid="34450" relation="include">
        </childnode>
        <childnode refid="34501" relation="include">
        </childnode>
        <childnode refid="34502" relation="include">
        </childnode>
        <childnode refid="34503" relation="include">
        </childnode>
        <childnode refid="34504" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
        <childnode refid="34505" relation="include">
        </childnode>
      </node>
      <node id="34564">
        <label>/home/dev/ds-160209/src/scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="34531" relation="include">
        </childnode>
        <childnode refid="34507" relation="include">
        </childnode>
        <childnode refid="34565" relation="include">
        </childnode>
      </node>
      <node id="34527">
        <label>/home/dev/ds-160209/src/rpcnet.cpp</label>
        <link refid="rpcnet_8cpp"/>
      </node>
      <node id="34546">
        <label>/home/dev/ds-160209/src/txdb.cpp</label>
        <link refid="txdb_8cpp"/>
      </node>
      <node id="34491">
        <label>/home/dev/ds-160209/src/qt/signverifymessagedialog.cpp</label>
        <link refid="signverifymessagedialog_8cpp"/>
      </node>
      <node id="34449">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="34454">
        <label>/home/dev/ds-160209/src/stormnode-sync.cpp</label>
        <link refid="stormnode-sync_8cpp"/>
      </node>
      <node id="34482">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="34570">
        <label>/home/dev/ds-160209/src/netbase.cpp</label>
        <link refid="netbase_8cpp"/>
      </node>
      <node id="34569">
        <label>/home/dev/ds-160209/src/i2p.cpp</label>
        <link refid="i2p_8cpp"/>
      </node>
      <node id="34516">
        <label>/home/dev/ds-160209/src/sandstorm-relay.h</label>
        <link refid="sandstorm-relay_8h"/>
        <childnode refid="34464" relation="include">
        </childnode>
      </node>
      <node id="34496">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.cpp</label>
        <link refid="blockbrowser_8cpp"/>
      </node>
      <node id="34514">
        <label>/home/dev/ds-160209/src/stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="34511" relation="include">
        </childnode>
        <childnode refid="34515" relation="include">
        </childnode>
        <childnode refid="34517" relation="include">
        </childnode>
        <childnode refid="34460" relation="include">
        </childnode>
        <childnode refid="34466" relation="include">
        </childnode>
        <childnode refid="34454" relation="include">
        </childnode>
        <childnode refid="34467" relation="include">
        </childnode>
        <childnode refid="34455" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34520">
        <label>/home/dev/ds-160209/src/rpcdump.cpp</label>
        <link refid="rpcdump_8cpp"/>
      </node>
      <node id="34558">
        <label>/home/dev/ds-160209/src/instantx.h</label>
        <link refid="instantx_8h"/>
        <childnode refid="34447" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34484" relation="include">
        </childnode>
        <childnode refid="34461" relation="include">
        </childnode>
        <childnode refid="34465" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34566">
        <label>/home/dev/ds-160209/src/addrman.cpp</label>
        <link refid="addrman_8cpp"/>
      </node>
      <node id="34545">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="34461">
        <label>/home/dev/ds-160209/src/qt/transactionrecord.cpp</label>
        <link refid="transactionrecord_8cpp"/>
      </node>
      <node id="34536">
        <label>/home/dev/ds-160209/src/undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="34537" relation="include">
        </childnode>
        <childnode refid="34541" relation="include">
        </childnode>
      </node>
      <node id="34554">
        <label>/home/dev/ds-160209/src/test/allocator_tests.cpp</label>
        <link refid="allocator__tests_8cpp"/>
      </node>
      <node id="34519">
        <label>/home/dev/ds-160209/src/base58.cpp</label>
        <link refid="base58_8cpp"/>
      </node>
      <node id="34565">
        <label>/home/dev/ds-160209/src/scrypt.cpp</label>
        <link refid="scrypt_8cpp"/>
      </node>
      <node id="34557">
        <label>/home/dev/ds-160209/src/coincontrol.h</label>
        <link refid="coincontrol_8h"/>
        <childnode refid="34458" relation="include">
        </childnode>
        <childnode refid="34489" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34510">
        <label>/home/dev/ds-160209/src/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="34503">
        <label>/home/dev/ds-160209/src/test/base64_tests.cpp</label>
        <link refid="base64__tests_8cpp"/>
      </node>
      <node id="34460">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.cpp</label>
        <link refid="stormnodemanager_8cpp"/>
      </node>
      <node id="34488">
        <label>/home/dev/ds-160209/src/qt/sandstormconfig.cpp</label>
        <link refid="sandstormconfig_8cpp"/>
      </node>
      <node id="34453">
        <label>/home/dev/ds-160209/src/stormnode-payments.cpp</label>
        <link refid="stormnode-payments_8cpp"/>
      </node>
      <node id="34561">
        <label>/home/dev/ds-160209/src/alert.cpp</label>
        <link refid="alert_8cpp"/>
      </node>
      <node id="34562">
        <label>/home/dev/ds-160209/src/pubkey.cpp</label>
        <link refid="pubkey_8cpp"/>
      </node>
      <node id="34506">
        <label>/home/dev/ds-160209/src/crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="34470" relation="include">
        </childnode>
        <childnode refid="34507" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34504">
        <label>/home/dev/ds-160209/src/test/wallet_tests.cpp</label>
        <link refid="wallet__tests_8cpp"/>
      </node>
      <node id="34468">
        <label>/home/dev/ds-160209/src/keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="34469" relation="include">
        </childnode>
        <childnode refid="34506" relation="include">
        </childnode>
        <childnode refid="34470" relation="include">
        </childnode>
        <childnode refid="34508" relation="include">
        </childnode>
        <childnode refid="34509" relation="include">
        </childnode>
        <childnode refid="34510" relation="include">
        </childnode>
      </node>
      <node id="34499">
        <label>/home/dev/ds-160209/src/qt/optionsmodel.cpp</label>
        <link refid="optionsmodel_8cpp"/>
      </node>
      <node id="34438">
        <label>/home/dev/ds-160209/src/hash.h</label>
        <link refid="hash.h"/>
        <childnode refid="34439" relation="include">
        </childnode>
        <childnode refid="34563" relation="include">
        </childnode>
        <childnode refid="34566" relation="include">
        </childnode>
        <childnode refid="34519" relation="include">
        </childnode>
        <childnode refid="34542" relation="include">
        </childnode>
        <childnode refid="34567" relation="include">
        </childnode>
        <childnode refid="34568" relation="include">
        </childnode>
        <childnode refid="34569" relation="include">
        </childnode>
        <childnode refid="34570" relation="include">
        </childnode>
      </node>
      <node id="34567">
        <label>/home/dev/ds-160209/src/db.cpp</label>
        <link refid="db_8cpp"/>
      </node>
      <node id="34555">
        <label>/home/dev/ds-160209/src/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="34445" relation="include">
        </childnode>
        <childnode refid="34544" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34449" relation="include">
        </childnode>
        <childnode refid="34553" relation="include">
        </childnode>
        <childnode refid="34482" relation="include">
        </childnode>
        <childnode refid="34545" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34502">
        <label>/home/dev/ds-160209/src/test/accounting_tests.cpp</label>
        <link refid="accounting__tests_8cpp"/>
      </node>
      <node id="34522">
        <label>/home/dev/ds-160209/src/stealth.cpp</label>
        <link refid="stealth_8cpp"/>
      </node>
      <node id="34509">
        <label>/home/dev/ds-160209/src/rpcrawtransaction.cpp</label>
        <link refid="rpcrawtransaction_8cpp"/>
      </node>
      <node id="34533">
        <label>/home/dev/ds-160209/src/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="34470" relation="include">
        </childnode>
        <childnode refid="34534" relation="include">
        </childnode>
        <childnode refid="34511" relation="include">
        </childnode>
        <childnode refid="34514" relation="include">
        </childnode>
        <childnode refid="34512" relation="include">
        </childnode>
        <childnode refid="34515" relation="include">
        </childnode>
        <childnode refid="34444" relation="include">
        </childnode>
        <childnode refid="34547" relation="include">
        </childnode>
        <childnode refid="34548" relation="include">
        </childnode>
        <childnode refid="34543" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34517" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34457" relation="include">
        </childnode>
        <childnode refid="34495" relation="include">
        </childnode>
        <childnode refid="34496" relation="include">
        </childnode>
        <childnode refid="34549" relation="include">
        </childnode>
        <childnode refid="34513" relation="include">
        </childnode>
        <childnode refid="34497" relation="include">
        </childnode>
        <childnode refid="34491" relation="include">
        </childnode>
        <childnode refid="34498" relation="include">
        </childnode>
        <childnode refid="34500" relation="include">
        </childnode>
        <childnode refid="34553" relation="include">
        </childnode>
        <childnode refid="34482" relation="include">
        </childnode>
        <childnode refid="34451" relation="include">
        </childnode>
        <childnode refid="34527" relation="include">
        </childnode>
        <childnode refid="34509" relation="include">
        </childnode>
        <childnode refid="34479" relation="include">
        </childnode>
        <childnode refid="34462" relation="include">
        </childnode>
        <childnode refid="34463" relation="include">
        </childnode>
        <childnode refid="34510" relation="include">
        </childnode>
        <childnode refid="34452" relation="include">
        </childnode>
        <childnode refid="34466" relation="include">
        </childnode>
        <childnode refid="34554" relation="include">
        </childnode>
        <childnode refid="34503" relation="include">
        </childnode>
        <childnode refid="34504" relation="include">
        </childnode>
        <childnode refid="34545" relation="include">
        </childnode>
      </node>
      <node id="34464">
        <label>/home/dev/ds-160209/src/sandstorm-relay.cpp</label>
        <link refid="sandstorm-relay_8cpp"/>
      </node>
      <node id="34515">
        <label>/home/dev/ds-160209/src/stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="34442" relation="include">
        </childnode>
        <childnode refid="34443" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34447" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34449" relation="include">
        </childnode>
        <childnode refid="34513" relation="include">
        </childnode>
        <childnode refid="34460" relation="include">
        </childnode>
        <childnode refid="34462" relation="include">
        </childnode>
        <childnode refid="34463" relation="include">
        </childnode>
        <childnode refid="34516" relation="include">
        </childnode>
        <childnode refid="34466" relation="include">
        </childnode>
        <childnode refid="34453" relation="include">
        </childnode>
        <childnode refid="34454" relation="include">
        </childnode>
        <childnode refid="34467" relation="include">
        </childnode>
        <childnode refid="34455" relation="include">
        </childnode>
      </node>
      <node id="34528">
        <label>/home/dev/ds-160209/src/test/sigopcount_tests.cpp</label>
        <link refid="sigopcount__tests_8cpp"/>
      </node>
      <node id="34439">
        <label>/home/dev/ds-160209/src/pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="34440" relation="include">
        </childnode>
        <childnode refid="34468" relation="include">
        </childnode>
        <childnode refid="34529" relation="include">
        </childnode>
        <childnode refid="34518" relation="include">
        </childnode>
        <childnode refid="34561" relation="include">
        </childnode>
        <childnode refid="34542" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34526" relation="include">
        </childnode>
        <childnode refid="34562" relation="include">
        </childnode>
      </node>
      <node id="34544">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
      </node>
      <node id="34486">
        <label>/home/dev/ds-160209/src/qt/askpassphrasedialog.cpp</label>
        <link refid="askpassphrasedialog_8cpp"/>
      </node>
      <node id="34563">
        <label>/home/dev/ds-160209/src/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="34533" relation="include">
        </childnode>
        <childnode refid="34514" relation="include">
        </childnode>
        <childnode refid="34515" relation="include">
        </childnode>
        <childnode refid="34444" relation="include">
        </childnode>
        <childnode refid="34561" relation="include">
        </childnode>
        <childnode refid="34564" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34517" relation="include">
        </childnode>
        <childnode refid="34471" relation="include">
        </childnode>
        <childnode refid="34447" relation="include">
        </childnode>
        <childnode refid="34457" relation="include">
        </childnode>
        <childnode refid="34549" relation="include">
        </childnode>
        <childnode refid="34552" relation="include">
        </childnode>
        <childnode refid="34451" relation="include">
        </childnode>
        <childnode refid="34527" relation="include">
        </childnode>
        <childnode refid="34509" relation="include">
        </childnode>
        <childnode refid="34501" relation="include">
        </childnode>
        <childnode refid="34565" relation="include">
        </childnode>
        <childnode refid="34452" relation="include">
        </childnode>
        <childnode refid="34523" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34462">
        <label>/home/dev/ds-160209/src/rpcstormnode-budget.cpp</label>
        <link refid="rpcstormnode-budget_8cpp"/>
      </node>
      <node id="34535">
        <label>/home/dev/ds-160209/src/compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="34536" relation="include">
        </childnode>
        <childnode refid="34542" relation="include">
        </childnode>
      </node>
      <node id="34442">
        <label>/home/dev/ds-160209/src/activestormnode.cpp</label>
        <link refid="activestormnode_8cpp"/>
      </node>
      <node id="34505">
        <label>/home/dev/ds-160209/src/walletdb.cpp</label>
        <link refid="walletdb_8cpp"/>
      </node>
      <node id="34445">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="34466">
        <label>/home/dev/ds-160209/src/stormnode-budget.cpp</label>
        <link refid="stormnode-budget_8cpp"/>
      </node>
      <node id="34541">
        <label>/home/dev/ds-160209/src/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="34547">
        <label>/home/dev/ds-160209/src/txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="34445" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34544" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34449" relation="include">
        </childnode>
        <childnode refid="34500" relation="include">
        </childnode>
        <childnode refid="34482" relation="include">
        </childnode>
        <childnode refid="34509" relation="include">
        </childnode>
        <childnode refid="34480" relation="include">
        </childnode>
        <childnode refid="34545" relation="include">
        </childnode>
        <childnode refid="34546" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34440">
        <label>/home/dev/ds-160209/src/key.h</label>
        <link refid="key_8h"/>
        <childnode refid="34441" relation="include">
        </childnode>
        <childnode refid="34468" relation="include">
        </childnode>
        <childnode refid="34470" relation="include">
        </childnode>
        <childnode refid="34511" relation="include">
        </childnode>
        <childnode refid="34514" relation="include">
        </childnode>
        <childnode refid="34518" relation="include">
        </childnode>
        <childnode refid="34515" relation="include">
        </childnode>
        <childnode refid="34444" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34517" relation="include">
        </childnode>
        <childnode refid="34447" relation="include">
        </childnode>
        <childnode refid="34526" relation="include">
        </childnode>
        <childnode refid="34483" relation="include">
        </childnode>
        <childnode refid="34527" relation="include">
        </childnode>
        <childnode refid="34452" relation="include">
        </childnode>
        <childnode refid="34525" relation="include">
        </childnode>
        <childnode refid="34528" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34483">
        <label>/home/dev/ds-160209/src/qt/addeditstormnode.cpp</label>
        <link refid="addeditstormnode_8cpp"/>
      </node>
      <node id="34447">
        <label>/home/dev/ds-160209/src/instantx.cpp</label>
        <link refid="instantx_8cpp"/>
      </node>
      <node id="34446">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="34549">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.h</label>
        <link refid="peertablemodel_8h"/>
        <childnode refid="34513" relation="include">
        </childnode>
        <childnode refid="34550" relation="include">
        </childnode>
        <childnode refid="34552" relation="include">
        </childnode>
      </node>
      <node id="34476">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="34444">
        <label>/home/dev/ds-160209/src/spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="34442" relation="include">
        </childnode>
        <childnode refid="34445" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34447" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34449" relation="include">
        </childnode>
        <childnode refid="34450" relation="include">
        </childnode>
        <childnode refid="34451" relation="include">
        </childnode>
        <childnode refid="34452" relation="include">
        </childnode>
        <childnode refid="34453" relation="include">
        </childnode>
        <childnode refid="34454" relation="include">
        </childnode>
        <childnode refid="34455" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34477">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="34478">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="34525">
        <label>/home/dev/ds-160209/src/test/key_tests.cpp</label>
        <link refid="key__tests_8cpp"/>
      </node>
      <node id="34481">
        <label>/home/dev/ds-160209/src/miner.h</label>
        <link refid="miner_8h"/>
        <childnode refid="34449" relation="include">
        </childnode>
        <childnode refid="34482" relation="include">
        </childnode>
      </node>
      <node id="34480">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="34552">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.cpp</label>
        <link refid="peertablemodel_8cpp"/>
      </node>
      <node id="34497">
        <label>/home/dev/ds-160209/src/qt/statisticspage.h</label>
        <link refid="statisticspage_8h"/>
        <childnode refid="34474" relation="include">
        </childnode>
        <childnode refid="34498" relation="include">
        </childnode>
      </node>
      <node id="34524">
        <label>/home/dev/ds-160209/src/test/base58_tests.cpp</label>
        <link refid="base58__tests_8cpp"/>
      </node>
      <node id="34560">
        <label>/home/dev/ds-160209/src/qt/darksilkunits.cpp</label>
        <link refid="darksilkunits_8cpp"/>
      </node>
      <node id="34534">
        <label>/home/dev/ds-160209/src/txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="34535" relation="include">
        </childnode>
        <childnode refid="34533" relation="include">
        </childnode>
        <childnode refid="34543" relation="include">
        </childnode>
        <childnode refid="34540" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34544" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34449" relation="include">
        </childnode>
        <childnode refid="34482" relation="include">
        </childnode>
        <childnode refid="34509" relation="include">
        </childnode>
        <childnode refid="34480" relation="include">
        </childnode>
        <childnode refid="34545" relation="include">
        </childnode>
        <childnode refid="34546" relation="include">
        </childnode>
        <childnode refid="34456" relation="include">
        </childnode>
      </node>
      <node id="34493">
        <label>/home/dev/ds-160209/src/qt/transactiontablemodel.cpp</label>
        <link refid="transactiontablemodel_8cpp"/>
      </node>
      <node id="34448">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="34451">
        <label>/home/dev/ds-160209/src/rpcmisc.cpp</label>
        <link refid="rpcmisc_8cpp"/>
      </node>
      <node id="34489">
        <label>/home/dev/ds-160209/src/qt/sendcoinsdialog.cpp</label>
        <link refid="sendcoinsdialog_8cpp"/>
      </node>
      <node id="34441">
        <label>/home/dev/ds-160209/src/activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="34442" relation="include">
        </childnode>
        <childnode refid="34443" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34447" relation="include">
        </childnode>
        <childnode refid="34460" relation="include">
        </childnode>
        <childnode refid="34462" relation="include">
        </childnode>
        <childnode refid="34463" relation="include">
        </childnode>
        <childnode refid="34454" relation="include">
        </childnode>
        <childnode refid="34455" relation="include">
        </childnode>
      </node>
      <node id="34508">
        <label>/home/dev/ds-160209/src/keystore.cpp</label>
        <link refid="keystore_8cpp"/>
      </node>
      <node id="34484">
        <label>/home/dev/ds-160209/src/qt/walletmodel.h</label>
        <link refid="walletmodel_8h"/>
        <childnode refid="34485" relation="include">
        </childnode>
        <childnode refid="34486" relation="include">
        </childnode>
        <childnode refid="34458" relation="include">
        </childnode>
        <childnode refid="34473" relation="include">
        </childnode>
        <childnode refid="34474" relation="include">
        </childnode>
        <childnode refid="34487" relation="include">
        </childnode>
        <childnode refid="34475" relation="include">
        </childnode>
        <childnode refid="34459" relation="include">
        </childnode>
        <childnode refid="34488" relation="include">
        </childnode>
        <childnode refid="34489" relation="include">
        </childnode>
        <childnode refid="34490" relation="include">
        </childnode>
        <childnode refid="34477" relation="include">
        </childnode>
        <childnode refid="34478" relation="include">
        </childnode>
        <childnode refid="34491" relation="include">
        </childnode>
        <childnode refid="34460" relation="include">
        </childnode>
        <childnode refid="34492" relation="include">
        </childnode>
        <childnode refid="34493" relation="include">
        </childnode>
        <childnode refid="34494" relation="include">
        </childnode>
        <childnode refid="34450" relation="include">
        </childnode>
      </node>
      <node id="34526">
        <label>/home/dev/ds-160209/src/key.cpp</label>
        <link refid="key_8cpp"/>
      </node>
      <node id="34465">
        <label>/home/dev/ds-160209/src/sandstorm.cpp</label>
        <link refid="sandstorm_8cpp"/>
      </node>
      <node id="34495">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.h</label>
        <link refid="blockbrowser_8h"/>
        <childnode refid="34496" relation="include">
        </childnode>
        <childnode refid="34474" relation="include">
        </childnode>
      </node>
      <node id="34459">
        <label>/home/dev/ds-160209/src/qt/overviewpage.cpp</label>
        <link refid="overviewpage_8cpp"/>
      </node>
      <node id="34543">
        <label>/home/dev/ds-160209/src/checkpoints.cpp</label>
        <link refid="checkpoints_8cpp"/>
      </node>
      <node id="34467">
        <label>/home/dev/ds-160209/src/stormnode.cpp</label>
        <link refid="stormnode_8cpp"/>
      </node>
      <node id="34531">
        <label>/home/dev/ds-160209/src/primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="34470" relation="include">
        </childnode>
        <childnode refid="34532" relation="include">
        </childnode>
        <childnode refid="34449" relation="include">
        </childnode>
        <childnode refid="34556" relation="include">
        </childnode>
      </node>
      <node id="34551">
        <label>/home/dev/ds-160209/src/qt/debugconsole.cpp</label>
        <link refid="debugconsole_8cpp"/>
      </node>
      <node id="34507">
        <label>/home/dev/ds-160209/src/crypter.cpp</label>
        <link refid="crypter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_hash256" prot="public">CHash256</innerclass>
    <innerclass refid="class_c_hash160" prot="public">CHash160</innerclass>
    <innerclass refid="class_c_hash_writer" prot="public">CHashWriter</innerclass>
    <innerclass refid="struct_h_m_a_c___s_h_a512___c_t_x" prot="public">HMAC_SHA512_CTX</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hash_8h_1a638884e5c7a5a29339575de215386172" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int OUTPUT_BYTES</definition>
        <argsstring></argsstring>
        <name>OUTPUT_BYTES</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="22" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hash_8h_1ab3f6c437460137530d86e09c2c102e99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 Hash</definition>
        <argsstring>(const T1 pbegin, const T1 pend)</argsstring>
        <name>Hash</name>
        <param>
          <type>const T1</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const T1</type>
          <declname>pend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="77" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="77" bodyend="85"/>
        <referencedby refid="class_c_addr_info_1a3732720a8d657d1dc8163e896cc480b4" compoundref="addrman_8cpp" startline="11" endline="23">CAddrInfo::GetTriedBucket</referencedby>
        <referencedby refid="class_c_addr_info_1ae53c2174bdbc070bb1777cfabecaddda" compoundref="addrman_8cpp" startline="25" endline="37">CAddrInfo::GetNewBucket</referencedby>
        <referencedby refid="class_c_alert_1a59a57a4b4e93bd186ef18d4f09ebd844" compoundref="alert_8cpp" startline="99" endline="102">CAlert::GetHash</referencedby>
        <referencedby refid="class_c_alert_1a40b71fc58ec056e3e539663152092030" compoundref="alert_8cpp" startline="150" endline="160">CAlert::CheckSignature</referencedby>
        <referencedby refid="base58_8h_1ace9a5807ee51604f33044339f073ec76" compoundref="base58_8cpp" startline="109" endline="115">EncodeBase58Check</referencedby>
        <referencedby refid="base58_8h_1ae2dc7ad63e243509e0871ec4a5890678" compoundref="base58_8cpp" startline="117" endline="133">DecodeBase58Check</referencedby>
        <referencedby refid="kernel_8h_1ae7cea47493b7e179fe492df175c9cfdc" compoundref="kernel_8cpp" startline="196" endline="204">ComputeStakeModifierV2</referencedby>
        <referencedby refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</referencedby>
        <referencedby refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</referencedby>
        <referencedby refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" compoundref="primitives_2block_8h" startline="196" endline="213">CBlock::BuildMerkleTree</referencedby>
        <referencedby refid="class_c_block_1ab0d596c51fb317e3cb6f444015a652a5" compoundref="primitives_2block_8h" startline="231" endline="244">CBlock::CheckMerkleBranch</referencedby>
        <referencedby refid="main_8h_1a196f9318f02448b85b28d612698934fd" compoundref="main_8cpp" startline="3306" endline="3423">ProcessMessages</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="class_c_addr_d_b_1aaec90dba59cd69a2f25bc5630a1dde39" compoundref="net_8cpp" startline="2022" endline="2058">CAddrDB::Write</referencedby>
        <referencedby refid="class_c_addr_d_b_1aed4b567fb7c2dd15b2856e7c769967b7" compoundref="net_8cpp" startline="2060" endline="2111">CAddrDB::Read</referencedby>
        <referencedby refid="class_c_node_1af8d4b8c0f883afffcb62d906c31b2cdf" compoundref="net_8h" startline="544" endline="578">CNode::EndMessage</referencedby>
        <referencedby refid="class_c_net_addr_1a4c94fea8695ef97adf5b2a18e1074308" compoundref="netbase_8cpp" startline="985" endline="991">CNetAddr::GetHash</referencedby>
        <referencedby refid="class_c_pub_key_1a85b5eaf92b26cb4a230586050285c3f4" compoundref="pubkey_8h" startline="137" endline="139">CPubKey::GetHash</referencedby>
        <referencedby refid="rpcnet_8cpp_1a89a8e338923aea165bb7d8d572d76203" compoundref="rpcnet_8cpp" startline="244" endline="301">sendalert</referencedby>
        <referencedby refid="script_8h_1a7f55c113b0164f50f214d94996b6b02a" compoundref="script_8cpp" startline="475" endline="1341">EvalScript</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
        <referencedby refid="class_c_spork_message_1aa71d5976465a8edb3f11901b14b9df65" compoundref="spork_8h" startline="79" endline="82">CSporkMessage::GetHash</referencedby>
        <referencedby refid="class_c_budget_d_b_1a7c9bd15eefe04f87e822cc1bc0887b76" compoundref="stormnode-budget_8cpp" startline="210" endline="243">CBudgetDB::Write</referencedby>
        <referencedby refid="class_c_budget_d_b_1aecdde2af475070d9fafdcacf93f2e4f2" compoundref="stormnode-budget_8cpp" startline="245" endline="333">CBudgetDB::Read</referencedby>
        <referencedby refid="class_c_stormnode_payment_d_b_1a6dc05426079d7bcf41f2587899e422fd" compoundref="stormnode-payments_8cpp" startline="34" endline="64">CStormnodePaymentDB::Write</referencedby>
        <referencedby refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" compoundref="stormnode-payments_8cpp" startline="66" endline="154">CStormnodePaymentDB::Read</referencedby>
        <referencedby refid="class_c_stormnode_d_b_1af60b25c3f72317d363fd6584045c6f5f" compoundref="stormnodeman_8cpp" startline="57" endline="89">CStormnodeDB::Write</referencedby>
        <referencedby refid="class_c_stormnode_d_b_1a574f76256d8032a4c4e437d800d3795b" compoundref="stormnodeman_8cpp" startline="91" endline="176">CStormnodeDB::Read</referencedby>
        <referencedby refid="key__tests_8cpp_1add8f8fb6aeee707149cdf29db2eca2b2" compoundref="key__tests_8cpp" startline="56" endline="139">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="class_c_wallet_1ab34fe5bf771619dcbe22a65f013e5469" compoundref="wallet_8cpp" startline="479" endline="596">CWallet::EncryptWallet</referencedby>
        <referencedby refid="class_c_wallet_1a19d6a23e37ff619c741b7dfa9279b973" compoundref="wallet_8cpp" startline="3042" endline="3088">CWallet::AddStealthAddress</referencedby>
        <referencedby refid="class_c_wallet_1ac45af0632ea59c56295d3158b7387f33" compoundref="wallet_8cpp" startline="3090" endline="3240">CWallet::UnlockStealthAddresses</referencedby>
        <referencedby refid="class_c_wallet_d_b_1a7ebef5e0c7f604aa2159ba96d527e3a2" compoundref="walletdb_8cpp" startline="80" endline="95">CWalletDB::WriteKey</referencedby>
        <referencedby refid="walletdb_8cpp_1ad1f171cf096f5479805a06fc20480343" compoundref="walletdb_8cpp" startline="357" endline="622">ReadKeyValue</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a52050dfad4b22ccef10e459e5ffc284b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 HashBlake2b</definition>
        <argsstring>(const T1 pbegin, const T1 pend)</argsstring>
        <name>HashBlake2b</name>
        <param>
          <type>const T1</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const T1</type>
          <declname>pend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="88" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="88" bodyend="97"/>
        <references refid="blake2_8h_1a7cefd211bfec58d37d8b67741955ce8a" compoundref="blake2b_8c" startline="74" endline="100">blake2b_init</references>
        <references refid="blake2_8h_1a1ee160fb796e342c9ee8a99ea0ffab0a" compoundref="blake2b_8c" startline="206" endline="244">blake2b_update</references>
        <references refid="blake2_8h_1ae3265f4a4ba468da48c850ad815bed2d" compoundref="blake2b_8c" startline="246" endline="274">blake2b_final</references>
        <referencedby refid="hash_8h_1a56d12e978cb15670e334b04e9ee22059" compoundref="hash_8h" startline="151" endline="161">hashArgon2d</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1af436e83e55018b521de4f912cf4b91ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Argon2d_Hash</definition>
        <argsstring>(void *out, size_t outlen, const void *in, size_t inlen, const void *salt, size_t saltlen, unsigned int t_cost, unsigned int m_cost)</argsstring>
        <name>Argon2d_Hash</name>
        <param>
          <type>void *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>outlen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>inlen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>saltlen</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>t_cost</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>m_cost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Argon2d Parameters Salt and password are the block header. Output length: 32 bytes. Input length (in the case of a block header): 80 bytes. Salt length (same note as input length): 80 bytes. Input: Block header Salt: Block header (SAME AS INPUT) Secret data: None Secret length: 0 Associated data: None Associated data length: 0 Memory cost: 1024 Lanes: 64 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="112" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="112" bodyend="148"/>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a5a7ef47de184c148345256b7a5234c7f" compoundref="argon2_8h" startline="88">ARGON2_PWD_TOO_LONG</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a8517282911ba40c46e4e7718be3b841c" compoundref="argon2_8h" startline="85">ARGON2_OUTPUT_TOO_LONG</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a90732265191dbd3ff3fd743cd6cca138" compoundref="argon2_8h" startline="91">ARGON2_SALT_TOO_LONG</references>
        <references refid="struct_argon2___context_1a53bc334f5ca86d2ff639abddb9b08177" compoundref="argon2_8h" startline="170">Argon2_Context::out</references>
        <references refid="struct_argon2___context_1a11cb0932b2a6fd6fa0e6f5f5148f3ba9" compoundref="argon2_8h" startline="171">Argon2_Context::outlen</references>
        <references refid="struct_argon2___context_1a0ddb2c07c361a668e1f925f9a2eb6523" compoundref="argon2_8h" startline="173">Argon2_Context::pwd</references>
        <references refid="struct_argon2___context_1a734b6a24aa48806715a5b81d7dfa98c3" compoundref="argon2_8h" startline="174">Argon2_Context::pwdlen</references>
        <references refid="struct_argon2___context_1a36bfd9d93195daafa0d7e4afdbbee1dc" compoundref="argon2_8h" startline="176">Argon2_Context::salt</references>
        <references refid="struct_argon2___context_1a1f151741022a0b25c66c704408522cca" compoundref="argon2_8h" startline="177">Argon2_Context::saltlen</references>
        <references refid="struct_argon2___context_1a7c35fd8bd296f776a9db6278c9bdacb6" compoundref="argon2_8h" startline="179">Argon2_Context::secret</references>
        <references refid="struct_argon2___context_1a9530abd766c77aba4e841445e5c70a08" compoundref="argon2_8h" startline="180">Argon2_Context::secretlen</references>
        <references refid="struct_argon2___context_1a20329e319449d710c4f5bf591690b4c4" compoundref="argon2_8h" startline="182">Argon2_Context::ad</references>
        <references refid="struct_argon2___context_1a27f944c49530b5a43d754c1a5ec30918" compoundref="argon2_8h" startline="183">Argon2_Context::adlen</references>
        <references refid="struct_argon2___context_1adffe97f0527779835c511385dfc5d63d" compoundref="argon2_8h" startline="185">Argon2_Context::t_cost</references>
        <references refid="struct_argon2___context_1a78b6d500cdb208f3b09a10c07716d6ab" compoundref="argon2_8h" startline="186">Argon2_Context::m_cost</references>
        <references refid="struct_argon2___context_1a8ab1ecf163c039d8db1d9eeb119b6112" compoundref="argon2_8h" startline="187">Argon2_Context::lanes</references>
        <references refid="struct_argon2___context_1a1efec02e4fd164068c7e77ec5f8b5b01" compoundref="argon2_8h" startline="188">Argon2_Context::threads</references>
        <references refid="struct_argon2___context_1aee437e28f004ff3e4a0ea15a7526bf63" compoundref="argon2_8h" startline="190">Argon2_Context::allocate_cbk</references>
        <references refid="struct_argon2___context_1a496ae30b7ad3db25e1a1ef1fbf98ce0b" compoundref="argon2_8h" startline="191">Argon2_Context::free_cbk</references>
        <references refid="struct_argon2___context_1a17f2c93463a2d9c0f6017b2d843c6d0c" compoundref="argon2_8h" startline="193">Argon2_Context::flags</references>
        <references refid="argon2_8h_1a9b76119494a1a329506f420f6d47905d" compoundref="argon2_8h" startline="76">ARGON2_DEFAULT_FLAGS</references>
        <references refid="argon2_8c_1a46052a12b5448759fa3b5de616cb783a" compoundref="argon2_8c" startline="109" endline="163">argon2_core</references>
        <references refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695a48ce300350099ad17bb3d5fe7da1c1cc" compoundref="argon2_8h" startline="197">Argon2_d</references>
        <referencedby refid="hash_8h_1a56d12e978cb15670e334b04e9ee22059" compoundref="hash_8h" startline="151" endline="161">hashArgon2d</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a56d12e978cb15670e334b04e9ee22059" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 hashArgon2d</definition>
        <argsstring>(const T1 pbegin, const T1 pend)</argsstring>
        <name>hashArgon2d</name>
        <param>
          <type>const T1</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const T1</type>
          <declname>pend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="151" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="151" bodyend="161"/>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="hash_8h_1a52050dfad4b22ccef10e459e5ffc284b" compoundref="hash_8h" startline="88" endline="97">HashBlake2b</references>
        <references refid="hash_8h_1af436e83e55018b521de4f912cf4b91ef" compoundref="hash_8h" startline="112" endline="148">Argon2d_Hash</references>
        <referencedby refid="class_c_block_header_1a795e040a33329757f6b31dfbcabbb2a5" compoundref="primitives_2block_8h" startline="92" endline="95">CBlockHeader::GetPoWArgonHash</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1aea8943bbdf28dfc2030d00b330f4cdd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 Hash</definition>
        <argsstring>(const T1 p1begin, const T1 p1end, const T2 p2begin, const T2 p2end)</argsstring>
        <name>Hash</name>
        <param>
          <type>const T1</type>
          <declname>p1begin</declname>
        </param>
        <param>
          <type>const T1</type>
          <declname>p1end</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2begin</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="204" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="204" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1aba727a7a2611f58d8c64b1ab2b80f611" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
          <param>
            <type>typename T3</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 Hash</definition>
        <argsstring>(const T1 p1begin, const T1 p1end, const T2 p2begin, const T2 p2end, const T3 p3begin, const T3 p3end)</argsstring>
        <name>Hash</name>
        <param>
          <type>const T1</type>
          <declname>p1begin</declname>
        </param>
        <param>
          <type>const T1</type>
          <declname>p1end</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2begin</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2end</declname>
        </param>
        <param>
          <type>const T3</type>
          <declname>p3begin</declname>
        </param>
        <param>
          <type>const T3</type>
          <declname>p3end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="220" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="220" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a6de694e43f17c62025c6883965b65e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 SerializeHash</definition>
        <argsstring>(const T &amp;obj, int nType=SER_GETHASH, int nVersion=PROTOCOL_VERSION)</argsstring>
        <name>SerializeHash</name>
        <param>
          <type>const T &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
          <defval><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
          <defval>PROTOCOL_VERSION</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="238" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="238" bodyend="243"/>
        <references refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" compoundref="hash_8h" startline="186" endline="192">CHashWriter::GetHash</references>
        <referencedby refid="struct_c_mutable_transaction_1af57dc15618f64c9ae3a4c0e06850e382" compoundref="transaction_8cpp" startline="125" endline="128">CMutableTransaction::GetHash</referencedby>
        <referencedby refid="class_c_out_point_1ab63a99ac182d5174f568addf5db35162" compoundref="transaction_8h" startline="71" endline="74">COutPoint::GetHash</referencedby>
        <referencedby refid="class_c_tx_out_1afae2ca52efebb049e3af78edc8332e8d" compoundref="transaction_8h" startline="215" endline="218">CTxOut::GetHash</referencedby>
        <referencedby refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a4490f70ddae16e9e48460a0416a48a6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint160" kindref="compound">uint160</ref></type>
        <definition>uint160 Hash160</definition>
        <argsstring>(const T1 pbegin, const T1 pend)</argsstring>
        <name>Hash160</name>
        <param>
          <type>const T1</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const T1</type>
          <declname>pend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="246" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="246" bodyend="254"/>
        <referencedby refid="hash_8h_1a78eccd4352c5377b614ad3f5a1b5b223" compoundref="hash_8h" startline="256" endline="259">Hash160</referencedby>
        <referencedby refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</referencedby>
        <referencedby refid="script_8h_1a7f55c113b0164f50f214d94996b6b02a" compoundref="script_8cpp" startline="475" endline="1341">EvalScript</referencedby>
        <referencedby refid="class_c_script_1a59fd961e1b74202a0951a077b576c0ba" compoundref="script_8h" startline="893" endline="896">CScript::GetID</referencedby>
        <referencedby refid="class_c_wallet_1ad7edacad1c926bc4b7fe0dc1be95ce31" compoundref="wallet_8cpp" startline="154" endline="161">CWallet::AddCScript</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a78eccd4352c5377b614ad3f5a1b5b223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint160" kindref="compound">uint160</ref></type>
        <definition>uint160 Hash160</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>Hash160</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="256" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="256" bodyend="259"/>
        <references refid="hash_8h_1a4490f70ddae16e9e48460a0416a48a6b" compoundref="hash_8h" startline="246" endline="254">Hash160</references>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a4b8c72838f26539d69f31e256fd6dc5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMAC_SHA512_Init</definition>
        <argsstring>(HMAC_SHA512_CTX *pctx, const void *pkey, size_t len)</argsstring>
        <name>HMAC_SHA512_Init</name>
        <param>
          <type><ref refid="struct_h_m_a_c___s_h_a512___c_t_x" kindref="compound">HMAC_SHA512_CTX</ref> *</type>
          <declname>pctx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="267" column="1" bodyfile="/home/dev/ds-160209/src/hash.cpp" bodystart="3" bodyend="29"/>
        <references refid="struct_h_m_a_c___s_h_a512___c_t_x_1aaed38b9a2310e97f4d516b40d7ac2f9f" compoundref="hash_8h" startline="264">HMAC_SHA512_CTX::ctxOuter</references>
        <references refid="struct_h_m_a_c___s_h_a512___c_t_x_1a3120d5087218a30088b409605ac63afb" compoundref="hash_8h" startline="263">HMAC_SHA512_CTX::ctxInner</references>
        <referencedby refid="hash_8h_1af81a4d88d7eaba27c63313aec22b01a4" compoundref="hash_8cpp" startline="44" endline="56">BIP32Hash</referencedby>
        <referencedby refid="struct_c_ext_key_1a8cd6ecafdd649082601d7eebbec79688" compoundref="key_8cpp" startline="268" endline="282">CExtKey::SetMaster</referencedby>
        <referencedby refid="hmac__tests_8cpp_1a238c0be581bdb9a7c0a3ed5b75dd1cd3" compoundref="hmac__tests_8cpp" startline="106" endline="123">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a252e477655e0e6373143178d65e7a931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMAC_SHA512_Update</definition>
        <argsstring>(HMAC_SHA512_CTX *pctx, const void *pdata, size_t len)</argsstring>
        <name>HMAC_SHA512_Update</name>
        <param>
          <type><ref refid="struct_h_m_a_c___s_h_a512___c_t_x" kindref="compound">HMAC_SHA512_CTX</ref> *</type>
          <declname>pctx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pdata</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="268" column="1" bodyfile="/home/dev/ds-160209/src/hash.cpp" bodystart="31" bodyend="34"/>
        <references refid="struct_h_m_a_c___s_h_a512___c_t_x_1a3120d5087218a30088b409605ac63afb" compoundref="hash_8h" startline="263">HMAC_SHA512_CTX::ctxInner</references>
        <referencedby refid="hash_8h_1af81a4d88d7eaba27c63313aec22b01a4" compoundref="hash_8cpp" startline="44" endline="56">BIP32Hash</referencedby>
        <referencedby refid="struct_c_ext_key_1a8cd6ecafdd649082601d7eebbec79688" compoundref="key_8cpp" startline="268" endline="282">CExtKey::SetMaster</referencedby>
        <referencedby refid="hmac__tests_8cpp_1a238c0be581bdb9a7c0a3ed5b75dd1cd3" compoundref="hmac__tests_8cpp" startline="106" endline="123">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a3e0fccfdb4599881e52d5fe8497f961f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMAC_SHA512_Final</definition>
        <argsstring>(unsigned char *pmd, HMAC_SHA512_CTX *pctx)</argsstring>
        <name>HMAC_SHA512_Final</name>
        <param>
          <type>unsigned char *</type>
          <declname>pmd</declname>
        </param>
        <param>
          <type><ref refid="struct_h_m_a_c___s_h_a512___c_t_x" kindref="compound">HMAC_SHA512_CTX</ref> *</type>
          <declname>pctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="269" column="1" bodyfile="/home/dev/ds-160209/src/hash.cpp" bodystart="36" bodyend="42"/>
        <references refid="struct_h_m_a_c___s_h_a512___c_t_x_1a3120d5087218a30088b409605ac63afb" compoundref="hash_8h" startline="263">HMAC_SHA512_CTX::ctxInner</references>
        <references refid="struct_h_m_a_c___s_h_a512___c_t_x_1aaed38b9a2310e97f4d516b40d7ac2f9f" compoundref="hash_8h" startline="264">HMAC_SHA512_CTX::ctxOuter</references>
        <referencedby refid="hash_8h_1af81a4d88d7eaba27c63313aec22b01a4" compoundref="hash_8cpp" startline="44" endline="56">BIP32Hash</referencedby>
        <referencedby refid="struct_c_ext_key_1a8cd6ecafdd649082601d7eebbec79688" compoundref="key_8cpp" startline="268" endline="282">CExtKey::SetMaster</referencedby>
        <referencedby refid="hmac__tests_8cpp_1a238c0be581bdb9a7c0a3ed5b75dd1cd3" compoundref="hmac__tests_8cpp" startline="106" endline="123">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1af81a4d88d7eaba27c63313aec22b01a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BIP32Hash</definition>
        <argsstring>(const unsigned char chainCode[32], unsigned int nChild, unsigned char header, const unsigned char data[32], unsigned char output[64])</argsstring>
        <name>BIP32Hash</name>
        <param>
          <type>const unsigned char</type>
          <declname>chainCode</declname>
          <array>[32]</array>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nChild</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>header</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>data</declname>
          <array>[32]</array>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>output</declname>
          <array>[64]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="271" column="1" bodyfile="/home/dev/ds-160209/src/hash.cpp" bodystart="44" bodyend="56"/>
        <references refid="hash_8cpp_1a4b8c72838f26539d69f31e256fd6dc5c" compoundref="hash_8cpp" startline="3" endline="29">HMAC_SHA512_Init</references>
        <references refid="hash_8cpp_1a252e477655e0e6373143178d65e7a931" compoundref="hash_8cpp" startline="31" endline="34">HMAC_SHA512_Update</references>
        <references refid="hash_8cpp_1a3e0fccfdb4599881e52d5fe8497f961f" compoundref="hash_8cpp" startline="36" endline="42">HMAC_SHA512_Final</references>
        <referencedby refid="class_c_key_1abb0091d4390dcece3c56ea4c1fdd6036" compoundref="key_8cpp" startline="238" endline="258">CKey::Derive</referencedby>
        <referencedby refid="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" compoundref="pubkey_8cpp" startline="228" endline="247">CPubKey::Derive</referencedby>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a73c05dfb31fbc5ea4875887ac6692f5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
          <param>
            <type>typename T3</type>
          </param>
          <param>
            <type>typename T4</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 Hash</definition>
        <argsstring>(const T1 p1begin, const T1 p1end, const T2 p2begin, const T2 p2end, const T3 p3begin, const T3 p3end, const T4 p4begin, const T4 p4end)</argsstring>
        <name>Hash</name>
        <param>
          <type>const T1</type>
          <declname>p1begin</declname>
        </param>
        <param>
          <type>const T1</type>
          <declname>p1end</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2begin</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2end</declname>
        </param>
        <param>
          <type>const T3</type>
          <declname>p3begin</declname>
        </param>
        <param>
          <type>const T3</type>
          <declname>p3end</declname>
        </param>
        <param>
          <type>const T4</type>
          <declname>p4begin</declname>
        </param>
        <param>
          <type>const T4</type>
          <declname>p4end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the 256-bit hash of the concatenation of three objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="275" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="275" bodyend="287"/>
        <references refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" compoundref="hash_8h" startline="41" endline="44">CHash256::Write</references>
        <references refid="class_c_hash256_1aa8a70c1b7cf24ce7d00240a1131cf4e7" compoundref="hash_8h" startline="35" endline="39">CHash256::Finalize</references>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1a53cf60ed8d837a927de6d24e9aae31da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
          <param>
            <type>typename T3</type>
          </param>
          <param>
            <type>typename T4</type>
          </param>
          <param>
            <type>typename T5</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 Hash</definition>
        <argsstring>(const T1 p1begin, const T1 p1end, const T2 p2begin, const T2 p2end, const T3 p3begin, const T3 p3end, const T4 p4begin, const T4 p4end, const T5 p5begin, const T5 p5end)</argsstring>
        <name>Hash</name>
        <param>
          <type>const T1</type>
          <declname>p1begin</declname>
        </param>
        <param>
          <type>const T1</type>
          <declname>p1end</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2begin</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2end</declname>
        </param>
        <param>
          <type>const T3</type>
          <declname>p3begin</declname>
        </param>
        <param>
          <type>const T3</type>
          <declname>p3end</declname>
        </param>
        <param>
          <type>const T4</type>
          <declname>p4begin</declname>
        </param>
        <param>
          <type>const T4</type>
          <declname>p4end</declname>
        </param>
        <param>
          <type>const T5</type>
          <declname>p5begin</declname>
        </param>
        <param>
          <type>const T5</type>
          <declname>p5end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the 256-bit hash of the concatenation of three objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="291" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="291" bodyend="305"/>
        <references refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" compoundref="hash_8h" startline="41" endline="44">CHash256::Write</references>
        <references refid="class_c_hash256_1aa8a70c1b7cf24ce7d00240a1131cf4e7" compoundref="hash_8h" startline="35" endline="39">CHash256::Finalize</references>
      </memberdef>
      <memberdef kind="function" id="hash_8h_1ae9498055eab5d7a259cf3c13b86f1f33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
          <param>
            <type>typename T3</type>
          </param>
          <param>
            <type>typename T4</type>
          </param>
          <param>
            <type>typename T5</type>
          </param>
          <param>
            <type>typename T6</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 Hash</definition>
        <argsstring>(const T1 p1begin, const T1 p1end, const T2 p2begin, const T2 p2end, const T3 p3begin, const T3 p3end, const T4 p4begin, const T4 p4end, const T5 p5begin, const T5 p5end, const T6 p6begin, const T6 p6end)</argsstring>
        <name>Hash</name>
        <param>
          <type>const T1</type>
          <declname>p1begin</declname>
        </param>
        <param>
          <type>const T1</type>
          <declname>p1end</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2begin</declname>
        </param>
        <param>
          <type>const T2</type>
          <declname>p2end</declname>
        </param>
        <param>
          <type>const T3</type>
          <declname>p3begin</declname>
        </param>
        <param>
          <type>const T3</type>
          <declname>p3end</declname>
        </param>
        <param>
          <type>const T4</type>
          <declname>p4begin</declname>
        </param>
        <param>
          <type>const T4</type>
          <declname>p4end</declname>
        </param>
        <param>
          <type>const T5</type>
          <declname>p5begin</declname>
        </param>
        <param>
          <type>const T5</type>
          <declname>p5end</declname>
        </param>
        <param>
          <type>const T6</type>
          <declname>p6begin</declname>
        </param>
        <param>
          <type>const T6</type>
          <declname>p6end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the 256-bit hash of the concatenation of three objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/hash.h" line="309" column="1" bodyfile="/home/dev/ds-160209/src/hash.h" bodystart="309" bodyend="325"/>
        <references refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" compoundref="hash_8h" startline="41" endline="44">CHash256::Write</references>
        <references refid="class_c_hash256_1aa8a70c1b7cf24ce7d00240a1131cf4e7" compoundref="hash_8h" startline="35" endline="39">CHash256::Finalize</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DARKSILK_HASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DARKSILK_HASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="uint256_8h" kindref="compound">uint256.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serialize_8h" kindref="compound">serialize.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/sha.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ripemd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ripemd160_8h" kindref="compound">crypto/ripemd160.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sha256_8h" kindref="compound">crypto/sha256.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blake2_8h" kindref="compound">crypto/argon2/blake2/blake2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="argon2_8h" kindref="compound">crypto/argon2/argon2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OUTPUT_BYTES<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_MAX<sp/>0xffffffff<sp/><sp/></highlight><highlight class="comment">/*<sp/>4294967295U<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_c_hash256" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_hash256" kindref="compound">CHash256</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_s_h_a256" kindref="compound">CSHA256</ref><sp/>sha;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33" refid="class_c_hash256_1a6812a40441acb1c3b7f10c7e38c7d467" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_c_hash256_1a6812a40441acb1c3b7f10c7e38c7d467" kindref="member">OUTPUT_SIZE</ref><sp/>=<sp/><ref refid="class_c_s_h_a256_1a3d7ef512c0ceb0008396e62f5c4771fc" kindref="member">CSHA256::OUTPUT_SIZE</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_c_hash256_1aa8a70c1b7cf24ce7d00240a1131cf4e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_hash256_1aa8a70c1b7cf24ce7d00240a1131cf4e7" kindref="member">Finalize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>[OUTPUT_SIZE])<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[sha.<ref refid="class_c_s_h_a256_1a3d7ef512c0ceb0008396e62f5c4771fc" kindref="member">OUTPUT_SIZE</ref>];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sha.<ref refid="class_c_s_h_a256_1a4259230be0caefa590bc324fc12b9b90" kindref="member">Finalize</ref>(buf);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sha.<ref refid="class_c_s_h_a256_1a2122395dd5604990eaa0077b43a0e8d4" kindref="member">Reset</ref>().<ref refid="class_c_s_h_a256_1a9d7de520a562655da85349372820c883" kindref="member">Write</ref>(buf,<sp/>sha.<ref refid="class_c_s_h_a256_1a3d7ef512c0ceb0008396e62f5c4771fc" kindref="member">OUTPUT_SIZE</ref>).<ref refid="class_c_s_h_a256_1a4259230be0caefa590bc324fc12b9b90" kindref="member">Finalize</ref>(<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash256" kindref="compound">CHash256</ref>&amp;<sp/><ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sha.<ref refid="class_c_s_h_a256_1a9d7de520a562655da85349372820c883" kindref="member">Write</ref>(data,<sp/>len);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_c_hash256_1ab25b00e4cda7e209173f2ce90475953d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash256" kindref="compound">CHash256</ref>&amp;<sp/><ref refid="class_c_hash256_1ab25b00e4cda7e209173f2ce90475953d" kindref="member">Reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sha.<ref refid="class_c_s_h_a256_1a2122395dd5604990eaa0077b43a0e8d4" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_c_hash160" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_hash160" kindref="compound">CHash160</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_s_h_a256" kindref="compound">CSHA256</ref><sp/>sha;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57" refid="class_c_hash160_1a1a5618e17d91ea96e86d779f575211eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_c_hash160_1a1a5618e17d91ea96e86d779f575211eb" kindref="member">OUTPUT_SIZE</ref><sp/>=<sp/><ref refid="class_c_r_i_p_e_m_d160_1aa43ca990046f81de5473975e5ef71922" kindref="member">CRIPEMD160::OUTPUT_SIZE</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_c_hash160_1a9bb08e1772002ae1a5d85017ba7952ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_hash160_1a9bb08e1772002ae1a5d85017ba7952ee" kindref="member">Finalize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>[OUTPUT_SIZE])<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[sha.<ref refid="class_c_s_h_a256_1a3d7ef512c0ceb0008396e62f5c4771fc" kindref="member">OUTPUT_SIZE</ref>];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sha.<ref refid="class_c_s_h_a256_1a4259230be0caefa590bc324fc12b9b90" kindref="member">Finalize</ref>(buf);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_r_i_p_e_m_d160" kindref="compound">CRIPEMD160</ref>().<ref refid="class_c_r_i_p_e_m_d160_1a221143b9d94af623d07c4f4ba1bf6007" kindref="member">Write</ref>(buf,<sp/>sha.<ref refid="class_c_s_h_a256_1a3d7ef512c0ceb0008396e62f5c4771fc" kindref="member">OUTPUT_SIZE</ref>).<ref refid="class_c_r_i_p_e_m_d160_1a2a11566fbf9d1339b819833313fc4e51" kindref="member">Finalize</ref>(<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_c_hash160_1af56cdd9443013eb68b246aa8450217f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash160" kindref="compound">CHash160</ref>&amp;<sp/><ref refid="class_c_hash160_1af56cdd9443013eb68b246aa8450217f2" kindref="member">Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sha.<ref refid="class_c_s_h_a256_1a9d7de520a562655da85349372820c883" kindref="member">Write</ref>(data,<sp/>len);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_c_hash160_1a971a8d59073455b1ef0ac0f65e964772" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash160" kindref="compound">CHash160</ref>&amp;<sp/><ref refid="class_c_hash160_1a971a8d59073455b1ef0ac0f65e964772" kindref="member">Reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sha.<ref refid="class_c_s_h_a256_1a2122395dd5604990eaa0077b43a0e8d4" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1&gt;</highlight></codeline>
<codeline lineno="77" refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>pbegin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>pend)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pblank[1];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256((pbegin<sp/>==<sp/>pend<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;pbegin[0]),<sp/>(pend<sp/>-<sp/>pbegin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pbegin[0]),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash2;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hash1),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash2);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash2;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1&gt;</highlight></codeline>
<codeline lineno="88" refid="hash_8h_1a52050dfad4b22ccef10e459e5ffc284b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="hash_8h_1a52050dfad4b22ccef10e459e5ffc284b" kindref="member">HashBlake2b</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>pbegin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>pend)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pblank[1];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct____blake2b__state" kindref="compound">blake2b_state</ref><sp/>S[1];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blake2_8h_1a7cefd211bfec58d37d8b67741955ce8a" kindref="member">blake2b_init</ref>(<sp/>S,<sp/>OUTPUT_BYTES<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blake2_8h_1a1ee160fb796e342c9ee8a99ea0ffab0a" kindref="member">blake2b_update</ref>(<sp/>S,<sp/>(pbegin<sp/>==<sp/>pend<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;pbegin[0]),<sp/>(pend<sp/>-<sp/>pbegin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pbegin[0])<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blake2_8h_1ae3265f4a4ba468da48c850ad815bed2d" kindref="member">blake2b_final</ref>(<sp/>S,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1,<sp/>OUTPUT_BYTES<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="hash_8h_1af436e83e55018b521de4f912cf4b91ef" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hash_8h_1af436e83e55018b521de4f912cf4b91ef" kindref="member">Argon2d_Hash</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*salt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>saltlen,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_cost,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_cost)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_argon2___context" kindref="compound">argon2_context</ref><sp/>context;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inlen<sp/>&gt;<sp/>UINT32_MAX)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a5a7ef47de184c148345256b7a5234c7f" kindref="member">ARGON2_PWD_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outlen<sp/>&gt;<sp/>UINT32_MAX)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a8517282911ba40c46e4e7718be3b841c" kindref="member">ARGON2_OUTPUT_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(saltlen<sp/>&gt;<sp/>UINT32_MAX)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a90732265191dbd3ff3fd743cd6cca138" kindref="member">ARGON2_SALT_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a53bc334f5ca86d2ff639abddb9b08177" kindref="member">out</ref><sp/>=<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*)out;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a11cb0932b2a6fd6fa0e6f5f5148f3ba9" kindref="member">outlen</ref><sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)outlen;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a0ddb2c07c361a668e1f925f9a2eb6523" kindref="member">pwd</ref><sp/>=<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*)in;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a734b6a24aa48806715a5b81d7dfa98c3" kindref="member">pwdlen</ref><sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)inlen;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a36bfd9d93195daafa0d7e4afdbbee1dc" kindref="member">salt</ref><sp/>=<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*)salt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a1f151741022a0b25c66c704408522cca" kindref="member">saltlen</ref><sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)saltlen;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a7c35fd8bd296f776a9db6278c9bdacb6" kindref="member">secret</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a9530abd766c77aba4e841445e5c70a08" kindref="member">secretlen</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a20329e319449d710c4f5bf591690b4c4" kindref="member">ad</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a27f944c49530b5a43d754c1a5ec30918" kindref="member">adlen</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1adffe97f0527779835c511385dfc5d63d" kindref="member">t_cost</ref><sp/>=<sp/>t_cost;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a78b6d500cdb208f3b09a10c07716d6ab" kindref="member">m_cost</ref><sp/>=<sp/>m_cost;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a8ab1ecf163c039d8db1d9eeb119b6112" kindref="member">lanes</ref><sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a1efec02e4fd164068c7e77ec5f8b5b01" kindref="member">threads</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1aee437e28f004ff3e4a0ea15a7526bf63" kindref="member">allocate_cbk</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a496ae30b7ad3db25e1a1ef1fbf98ce0b" kindref="member">free_cbk</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="struct_argon2___context_1a17f2c93463a2d9c0f6017b2d843c6d0c" kindref="member">flags</ref><sp/>=<sp/><ref refid="argon2_8h_1a9b76119494a1a329506f420f6d47905d" kindref="member">ARGON2_DEFAULT_FLAGS</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="argon2_8c_1a46052a12b5448759fa3b5de616cb783a" kindref="member">argon2_core</ref>(&amp;context,<sp/><ref refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695a48ce300350099ad17bb3d5fe7da1c1cc" kindref="member">Argon2_d</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1&gt;</highlight></codeline>
<codeline lineno="151" refid="hash_8h_1a56d12e978cb15670e334b04e9ee22059" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="hash_8h_1a56d12e978cb15670e334b04e9ee22059" kindref="member">hashArgon2d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>pbegin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>pend)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_costs<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_costs<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/><ref refid="hash_8h_1a52050dfad4b22ccef10e459e5ffc284b" kindref="member">HashBlake2b</ref>(pbegin,<sp/>pend);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash_8h_1af436e83e55018b521de4f912cf4b91ef" kindref="member">Argon2d_Hash</ref>(static_cast&lt;void*&gt;(&amp;hash),<sp/>32,<sp/>static_cast&lt;void*&gt;(&amp;hash),<sp/>80,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;void*&gt;(&amp;hash),<sp/>80,<sp/><sp/>t_costs,<sp/>m_costs);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_c_hash_writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref></highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_CTX<sp/>ctx;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169" refid="class_c_hash_writer_1ae8fe02b05db26a2647a7aeee035f022f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_hash_writer_1ae8fe02b05db26a2647a7aeee035f022f" kindref="member">nType</ref>;</highlight></codeline>
<codeline lineno="170" refid="class_c_hash_writer_1ad7d3642addab58385476dc0f9d55fa58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_hash_writer_1ad7d3642addab58385476dc0f9d55fa58" kindref="member">nVersion</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_c_hash_writer_1a941361586006cbb4c8eca534bb4bce4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_hash_writer_1a941361586006cbb4c8eca534bb4bce4c" kindref="member">Init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHA256_Init(&amp;ctx);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_c_hash_writer_1a81ce9a497a72fcb6b2612efdc20efbc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer_1a81ce9a497a72fcb6b2612efdc20efbc9" kindref="member">CHashWriter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTypeIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersionIn)<sp/>:<sp/>nType(nTypeIn),<sp/>nVersion(nVersionIn)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer_1a941361586006cbb4c8eca534bb4bce4c" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_c_hash_writer_1a779360281eeeb4cc7485c8acae649bc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref>&amp;<sp/><ref refid="class_c_hash_writer_1a779360281eeeb4cc7485c8acae649bc9" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pch,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx,<sp/>pch,<sp/>size);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalidates<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" kindref="member">GetHash</ref>()<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash1;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHA256_Final((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1,<sp/>&amp;ctx);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash2;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHA256((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hash1),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash2);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash2;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="195" refid="class_c_hash_writer_1a6551aed7315be5ba750680df18562f3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref>&amp;<sp/><ref refid="class_c_hash_writer_1a6551aed7315be5ba750680df18562f3a" kindref="member">operator&lt;&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serialize<sp/>to<sp/>this<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">::Serialize</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>obj,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="204" refid="hash_8h_1aea8943bbdf28dfc2030d00b330f4cdd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1end,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2end)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pblank[1];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash1;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_CTX<sp/>ctx;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Init(&amp;ctx);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx,<sp/>(p1begin<sp/>==<sp/>p1end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p1begin[0]),<sp/>(p1end<sp/>-<sp/>p1begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p1begin[0]));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx,<sp/>(p2begin<sp/>==<sp/>p2end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p2begin[0]),<sp/>(p2end<sp/>-<sp/>p2begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p2begin[0]));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Final((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1,<sp/>&amp;ctx);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash2;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hash1),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash2);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash2;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;</highlight></codeline>
<codeline lineno="220" refid="hash_8h_1aba727a7a2611f58d8c64b1ab2b80f611" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1end,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2end,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3<sp/>p3begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3<sp/>p3end)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pblank[1];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_CTX<sp/>ctx;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Init(&amp;ctx);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx,<sp/>(p1begin<sp/>==<sp/>p1end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p1begin[0]),<sp/>(p1end<sp/>-<sp/>p1begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p1begin[0]));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx,<sp/>(p2begin<sp/>==<sp/>p2end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p2begin[0]),<sp/>(p2end<sp/>-<sp/>p2begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p2begin[0]));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;ctx,<sp/>(p3begin<sp/>==<sp/>p3end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p3begin[0]),<sp/>(p3end<sp/>-<sp/>p3begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p3begin[0]));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Final((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1,<sp/>&amp;ctx);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash2;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hash1),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash2);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash2;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="238" refid="hash_8h_1a6de694e43f17c62025c6883965b65e63" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="hash_8h_1a6de694e43f17c62025c6883965b65e63" kindref="member">SerializeHash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType=<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion=PROTOCOL_VERSION)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref><sp/>ss(nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>obj;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.<ref refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1&gt;</highlight></codeline>
<codeline lineno="246" refid="hash_8h_1a4490f70ddae16e9e48460a0416a48a6b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint160" kindref="compound">uint160</ref><sp/><ref refid="hash_8h_1a4490f70ddae16e9e48460a0416a48a6b" kindref="member">Hash160</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>pbegin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>pend)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pblank[1];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash1;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256((pbegin<sp/>==<sp/>pend<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;pbegin[0]),<sp/>(pend<sp/>-<sp/>pbegin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pbegin[0]),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint160" kindref="compound">uint160</ref><sp/>hash2;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>RIPEMD160((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hash1),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;hash2);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash2;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="hash_8h_1a78eccd4352c5377b614ad3f5a1b5b223" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint160" kindref="compound">uint160</ref><sp/><ref refid="hash_8h_1a4490f70ddae16e9e48460a0416a48a6b" kindref="member">Hash160</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>vch)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hash_8h_1a4490f70ddae16e9e48460a0416a48a6b" kindref="member">Hash160</ref>(vch.begin(),<sp/>vch.end());</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="struct_h_m_a_c___s_h_a512___c_t_x" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263" refid="struct_h_m_a_c___s_h_a512___c_t_x_1a3120d5087218a30088b409605ac63afb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA512_CTX<sp/><ref refid="struct_h_m_a_c___s_h_a512___c_t_x_1a3120d5087218a30088b409605ac63afb" kindref="member">ctxInner</ref>;</highlight></codeline>
<codeline lineno="264" refid="struct_h_m_a_c___s_h_a512___c_t_x_1aaed38b9a2310e97f4d516b40d7ac2f9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA512_CTX<sp/><ref refid="struct_h_m_a_c___s_h_a512___c_t_x_1aaed38b9a2310e97f4d516b40d7ac2f9f" kindref="member">ctxOuter</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}<sp/><ref refid="struct_h_m_a_c___s_h_a512___c_t_x" kindref="compound">HMAC_SHA512_CTX</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hash_8h_1a4b8c72838f26539d69f31e256fd6dc5c" kindref="member">HMAC_SHA512_Init</ref>(<ref refid="struct_h_m_a_c___s_h_a512___c_t_x" kindref="compound">HMAC_SHA512_CTX</ref><sp/>*pctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pkey,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hash_8h_1a252e477655e0e6373143178d65e7a931" kindref="member">HMAC_SHA512_Update</ref>(<ref refid="struct_h_m_a_c___s_h_a512___c_t_x" kindref="compound">HMAC_SHA512_CTX</ref><sp/>*pctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pdata,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hash_8h_1a3e0fccfdb4599881e52d5fe8497f961f" kindref="member">HMAC_SHA512_Final</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pmd,<sp/><ref refid="struct_h_m_a_c___s_h_a512___c_t_x" kindref="compound">HMAC_SHA512_CTX</ref><sp/>*pctx);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hash_8h_1af81a4d88d7eaba27c63313aec22b01a4" kindref="member">BIP32Hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chainCode[32],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChild,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>header,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[32],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>output[64]);<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4&gt;</highlight></codeline>
<codeline lineno="275" refid="hash_8h_1a73c05dfb31fbc5ea4875887ac6692f5a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1end,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2end,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3<sp/>p3begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3<sp/>p3end,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4<sp/>p4begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4<sp/>p4end)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pblank[1]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>result;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash256" kindref="compound">CHash256</ref>().<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p1begin<sp/>==<sp/>p1end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p1begin[0],<sp/>(p1end<sp/>-<sp/>p1begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p1begin[0]))</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p2begin<sp/>==<sp/>p2end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p2begin[0],<sp/>(p2end<sp/>-<sp/>p2begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p2begin[0]))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p3begin<sp/>==<sp/>p3end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p3begin[0],<sp/>(p3end<sp/>-<sp/>p3begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p3begin[0]))</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p4begin<sp/>==<sp/>p4end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p4begin[0],<sp/>(p4end<sp/>-<sp/>p4begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p4begin[0]))</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1aa8a70c1b7cf24ce7d00240a1131cf4e7" kindref="member">Finalize</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;result);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5&gt;</highlight></codeline>
<codeline lineno="291" refid="hash_8h_1a53cf60ed8d837a927de6d24e9aae31da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1end,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2end,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3<sp/>p3begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3<sp/>p3end,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4<sp/>p4begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4<sp/>p4end,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5<sp/>p5begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5<sp/>p5end)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pblank[1]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>result;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash256" kindref="compound">CHash256</ref>().<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p1begin<sp/>==<sp/>p1end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p1begin[0],<sp/>(p1end<sp/>-<sp/>p1begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p1begin[0]))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p2begin<sp/>==<sp/>p2end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p2begin[0],<sp/>(p2end<sp/>-<sp/>p2begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p2begin[0]))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p3begin<sp/>==<sp/>p3end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p3begin[0],<sp/>(p3end<sp/>-<sp/>p3begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p3begin[0]))</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p4begin<sp/>==<sp/>p4end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p4begin[0],<sp/>(p4end<sp/>-<sp/>p4begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p4begin[0]))</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p5begin<sp/>==<sp/>p5end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p5begin[0],<sp/>(p5end<sp/>-<sp/>p5begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p5begin[0]))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1aa8a70c1b7cf24ce7d00240a1131cf4e7" kindref="member">Finalize</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;result);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6&gt;</highlight></codeline>
<codeline lineno="309" refid="hash_8h_1ae9498055eab5d7a259cf3c13b86f1f33" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>p1end,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>p2end,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3<sp/>p3begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3<sp/>p3end,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4<sp/>p4begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4<sp/>p4end,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5<sp/>p5begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5<sp/>p5end,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6<sp/>p6begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6<sp/>p6end)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pblank[1]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>result;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash256" kindref="compound">CHash256</ref>().<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p1begin<sp/>==<sp/>p1end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p1begin[0],<sp/>(p1end<sp/>-<sp/>p1begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p1begin[0]))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p2begin<sp/>==<sp/>p2end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p2begin[0],<sp/>(p2end<sp/>-<sp/>p2begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p2begin[0]))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p3begin<sp/>==<sp/>p3end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p3begin[0],<sp/>(p3end<sp/>-<sp/>p3begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p3begin[0]))</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p4begin<sp/>==<sp/>p4end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p4begin[0],<sp/>(p4end<sp/>-<sp/>p4begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p4begin[0]))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p5begin<sp/>==<sp/>p5end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p5begin[0],<sp/>(p5end<sp/>-<sp/>p5begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p5begin[0]))</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1a9cc25033c6435cb28e2e8e377c949a7a" kindref="member">Write</ref>(p6begin<sp/>==<sp/>p6end<sp/>?<sp/>pblank<sp/>:<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p6begin[0],<sp/>(p6end<sp/>-<sp/>p6begin)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p6begin[0]))</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_hash256_1aa8a70c1b7cf24ce7d00240a1131cf4e7" kindref="member">Finalize</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;result);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/hash.h"/>
  </compounddef>
</doxygen>
