<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="db__test_8cc" kind="file" language="C++">
    <compoundname>db_test.cc</compoundname>
    <includes refid="leveldb_2include_2leveldb_2db_8h" local="yes">leveldb/db.h</includes>
    <includes refid="filter__policy_8h" local="yes">leveldb/filter_policy.h</includes>
    <includes refid="db__impl_8h" local="yes">db/db_impl.h</includes>
    <includes refid="filename_8h" local="yes">db/filename.h</includes>
    <includes refid="version__set_8h" local="yes">db/version_set.h</includes>
    <includes refid="write__batch__internal_8h" local="yes">db/write_batch_internal.h</includes>
    <includes refid="cache_8h" local="yes">leveldb/cache.h</includes>
    <includes refid="env_8h" local="yes">leveldb/env.h</includes>
    <includes refid="table_8h" local="yes">leveldb/table.h</includes>
    <includes refid="leveldb_2util_2hash_8h" local="yes">util/hash.h</includes>
    <includes refid="logging_8h" local="yes">util/logging.h</includes>
    <includes refid="mutexlock_8h" local="yes">util/mutexlock.h</includes>
    <includes refid="testharness_8h" local="yes">util/testharness.h</includes>
    <includes refid="testutil_8h" local="yes">util/testutil.h</includes>
    <incdepgraph>
      <node id="7006">
        <label>leveldb/table.h</label>
        <link refid="table_8h"/>
        <childnode refid="6971" relation="include">
        </childnode>
        <childnode refid="6973" relation="include">
        </childnode>
      </node>
      <node id="7004">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="6978" relation="include">
        </childnode>
        <childnode refid="6979" relation="include">
        </childnode>
      </node>
      <node id="6996">
        <label>stdarg.h</label>
      </node>
      <node id="7008">
        <label>util/mutexlock.h</label>
        <link refid="mutexlock_8h"/>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="6997" relation="include">
        </childnode>
      </node>
      <node id="7012">
        <label>util/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="6971" relation="include">
        </childnode>
      </node>
      <node id="6990">
        <label>util/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="6972" relation="include">
        </childnode>
        <childnode refid="6971" relation="include">
        </childnode>
        <childnode refid="6978" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
      </node>
      <node id="6975">
        <label>assert.h</label>
      </node>
      <node id="6980">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="6976" relation="include">
        </childnode>
      </node>
      <node id="7001">
        <label>db/version_edit.h</label>
        <link refid="version__edit_8h"/>
        <childnode refid="6984" relation="include">
        </childnode>
        <childnode refid="7002" relation="include">
        </childnode>
        <childnode refid="6995" relation="include">
        </childnode>
        <childnode refid="6985" relation="include">
        </childnode>
      </node>
      <node id="7010">
        <label>stdlib.h</label>
      </node>
      <node id="6985">
        <label>db/dbformat.h</label>
        <link refid="dbformat_8h"/>
        <childnode refid="6972" relation="include">
        </childnode>
        <childnode refid="6986" relation="include">
        </childnode>
        <childnode refid="6970" relation="include">
        </childnode>
        <childnode refid="6981" relation="include">
        </childnode>
        <childnode refid="6974" relation="include">
        </childnode>
        <childnode refid="6987" relation="include">
        </childnode>
        <childnode refid="6988" relation="include">
        </childnode>
        <childnode refid="6990" relation="include">
        </childnode>
      </node>
      <node id="6970">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="6971" relation="include">
        </childnode>
        <childnode refid="6972" relation="include">
        </childnode>
        <childnode refid="6973" relation="include">
        </childnode>
        <childnode refid="6980" relation="include">
        </childnode>
      </node>
      <node id="6978">
        <label>string</label>
      </node>
      <node id="7000">
        <label>map</label>
      </node>
      <node id="7013">
        <label>util/testutil.h</label>
        <link refid="testutil_8h"/>
        <childnode refid="6994" relation="include">
        </childnode>
        <childnode refid="6974" relation="include">
        </childnode>
        <childnode refid="7012" relation="include">
        </childnode>
      </node>
      <node id="6976">
        <label>stddef.h</label>
      </node>
      <node id="7005">
        <label>leveldb/cache.h</label>
        <link refid="cache_8h"/>
        <childnode refid="6971" relation="include">
        </childnode>
        <childnode refid="6974" relation="include">
        </childnode>
      </node>
      <node id="6979">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="6978" relation="include">
        </childnode>
        <childnode refid="6974" relation="include">
        </childnode>
      </node>
      <node id="6999">
        <label>db/version_set.h</label>
        <link refid="version__set_8h"/>
        <childnode refid="7000" relation="include">
        </childnode>
        <childnode refid="6984" relation="include">
        </childnode>
        <childnode refid="6995" relation="include">
        </childnode>
        <childnode refid="6985" relation="include">
        </childnode>
        <childnode refid="7001" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="6997" relation="include">
        </childnode>
      </node>
      <node id="6988">
        <label>util/coding.h</label>
        <link refid="coding_8h"/>
        <childnode refid="6971" relation="include">
        </childnode>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="6978" relation="include">
        </childnode>
        <childnode refid="6974" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
      </node>
      <node id="6998">
        <label>db/filename.h</label>
        <link refid="filename_8h"/>
        <childnode refid="6971" relation="include">
        </childnode>
        <childnode refid="6978" relation="include">
        </childnode>
        <childnode refid="6974" relation="include">
        </childnode>
        <childnode refid="6979" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
      </node>
      <node id="6977">
        <label>string.h</label>
      </node>
      <node id="6991">
        <label>db/log_writer.h</label>
        <link refid="log__writer_8h"/>
        <childnode refid="6971" relation="include">
        </childnode>
        <childnode refid="6992" relation="include">
        </childnode>
        <childnode refid="6974" relation="include">
        </childnode>
        <childnode refid="6979" relation="include">
        </childnode>
      </node>
      <node id="6982">
        <label>db/db_impl.h</label>
        <link refid="db__impl_8h"/>
        <childnode refid="6983" relation="include">
        </childnode>
        <childnode refid="6984" relation="include">
        </childnode>
        <childnode refid="6985" relation="include">
        </childnode>
        <childnode refid="6991" relation="include">
        </childnode>
        <childnode refid="6993" relation="include">
        </childnode>
        <childnode refid="6970" relation="include">
        </childnode>
        <childnode refid="6994" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="6997" relation="include">
        </childnode>
      </node>
      <node id="6995">
        <label>vector</label>
      </node>
      <node id="7002">
        <label>utility</label>
      </node>
      <node id="7011">
        <label>sstream</label>
      </node>
      <node id="6992">
        <label>db/log_format.h</label>
        <link refid="log__format_8h"/>
      </node>
      <node id="7003">
        <label>db/write_batch_internal.h</label>
        <link refid="write__batch__internal_8h"/>
        <childnode refid="7004" relation="include">
        </childnode>
      </node>
      <node id="6989">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="6977" relation="include">
        </childnode>
      </node>
      <node id="6971">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="6983">
        <label>deque</label>
      </node>
      <node id="6987">
        <label>leveldb/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="6971" relation="include">
        </childnode>
        <childnode refid="6980" relation="include">
        </childnode>
        <childnode refid="6979" relation="include">
        </childnode>
      </node>
      <node id="7009">
        <label>util/testharness.h</label>
        <link refid="testharness_8h"/>
        <childnode refid="6972" relation="include">
        </childnode>
        <childnode refid="7010" relation="include">
        </childnode>
        <childnode refid="7011" relation="include">
        </childnode>
        <childnode refid="6994" relation="include">
        </childnode>
        <childnode refid="6974" relation="include">
        </childnode>
        <childnode refid="7012" relation="include">
        </childnode>
      </node>
      <node id="6993">
        <label>db/snapshot.h</label>
        <link refid="snapshot_8h"/>
        <childnode refid="6970" relation="include">
        </childnode>
      </node>
      <node id="6969">
        <label>/home/dev/ds-160209/src/leveldb/db/db_test.cc</label>
        <link refid="db_test.cc"/>
        <childnode refid="6970" relation="include">
        </childnode>
        <childnode refid="6981" relation="include">
        </childnode>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="6998" relation="include">
        </childnode>
        <childnode refid="6999" relation="include">
        </childnode>
        <childnode refid="7003" relation="include">
        </childnode>
        <childnode refid="7005" relation="include">
        </childnode>
        <childnode refid="6994" relation="include">
        </childnode>
        <childnode refid="7006" relation="include">
        </childnode>
        <childnode refid="7007" relation="include">
        </childnode>
        <childnode refid="6990" relation="include">
        </childnode>
        <childnode refid="7008" relation="include">
        </childnode>
        <childnode refid="7009" relation="include">
        </childnode>
        <childnode refid="7013" relation="include">
        </childnode>
      </node>
      <node id="6974">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="6975" relation="include">
        </childnode>
        <childnode refid="6976" relation="include">
        </childnode>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="6978" relation="include">
        </childnode>
      </node>
      <node id="6994">
        <label>leveldb/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="6978" relation="include">
        </childnode>
        <childnode refid="6995" relation="include">
        </childnode>
        <childnode refid="6996" relation="include">
        </childnode>
        <childnode refid="6971" relation="include">
        </childnode>
        <childnode refid="6979" relation="include">
        </childnode>
      </node>
      <node id="6984">
        <label>set</label>
      </node>
      <node id="6997">
        <label>port/thread_annotations.h</label>
        <link refid="thread__annotations_8h"/>
      </node>
      <node id="6972">
        <label>stdio.h</label>
      </node>
      <node id="7007">
        <label>util/hash.h</label>
        <link refid="leveldb_2util_2hash_8h"/>
        <childnode refid="6976" relation="include">
        </childnode>
        <childnode refid="6971" relation="include">
        </childnode>
      </node>
      <node id="6981">
        <label>leveldb/filter_policy.h</label>
        <link refid="filter__policy_8h"/>
        <childnode refid="6978" relation="include">
        </childnode>
      </node>
      <node id="6986">
        <label>leveldb/comparator.h</label>
        <link refid="comparator_8h"/>
        <childnode refid="6978" relation="include">
        </childnode>
      </node>
      <node id="6973">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="6974" relation="include">
        </childnode>
        <childnode refid="6979" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classleveldb_1_1_special_env" prot="public">leveldb::SpecialEnv</innerclass>
    <innerclass refid="classleveldb_1_1_d_b_test" prot="public">leveldb::DBTest</innerclass>
    <innerclass refid="classleveldb_1_1_model_d_b" prot="public">leveldb::ModelDB</innerclass>
    <innerclass refid="classleveldb_1_1_model_d_b_1_1_model_snapshot" prot="public">leveldb::ModelDB::ModelSnapshot</innerclass>
    <innerclass refid="classleveldb_1_1_model_d_b_1_1_model_iter" prot="private">leveldb::ModelDB::ModelIter</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="db__test_8cc_1a7409a2fd2bde9ec649030b2513a568b8" prot="public" static="no" mutable="no">
        <type>port::Mutex</type>
        <definition>port::Mutex mu_</definition>
        <argsstring></argsstring>
        <name>mu_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="31" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db__test_8cc_1a9acf5084c965a76d24ec228412256bc3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int count_</definition>
        <argsstring></argsstring>
        <name>count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="32" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db__test_8cc_1a9cc668c18debdbcad21b45fdd8158648" prot="public" static="no" mutable="no">
        <type>DBTest *</type>
        <definition>DBTest* test</definition>
        <argsstring></argsstring>
        <name>test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1737" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1737" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db__test_8cc_1af6130d1029661dab14372467f0453ffa" prot="public" static="no" mutable="no">
        <type>port::AtomicPointer</type>
        <definition>port::AtomicPointer stop</definition>
        <argsstring></argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1738" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db__test_8cc_1a62ffeaac8bdc204faeb004239f7c04be" prot="public" static="no" mutable="no">
        <type>port::AtomicPointer</type>
        <definition>port::AtomicPointer counter[kNumThreads]</definition>
        <argsstring>[kNumThreads]</argsstring>
        <name>counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1739" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db__test_8cc_1a3eb5ea5acdb558ac205ffb1c56790fd3" prot="public" static="no" mutable="no">
        <type>port::AtomicPointer</type>
        <definition>port::AtomicPointer thread_done[kNumThreads]</definition>
        <argsstring>[kNumThreads]</argsstring>
        <name>thread_done</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1740" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" prot="public" static="no" mutable="no">
        <type>MTState *</type>
        <definition>MTState* state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1744" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1745" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1745" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="db__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="2118" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="2118" bodyend="2128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="leveldb_2include_2leveldb_2db_8h" kindref="compound">leveldb/db.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filter__policy_8h" kindref="compound">leveldb/filter_policy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db__impl_8h" kindref="compound">db/db_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filename_8h" kindref="compound">db/filename.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="version__set_8h" kindref="compound">db/version_set.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="write__batch__internal_8h" kindref="compound">db/write_batch_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cache_8h" kindref="compound">leveldb/cache.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="env_8h" kindref="compound">leveldb/env.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table_8h" kindref="compound">leveldb/table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="leveldb_2util_2hash_8h" kindref="compound">util/hash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logging_8h" kindref="compound">util/logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mutexlock_8h" kindref="compound">util/mutexlock.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testharness_8h" kindref="compound">util/testharness.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testutil_8h" kindref="compound">util/testutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>RandomString(Random*<sp/>rnd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>std::string<sp/>r;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1_1test_1a2132c5f28cd21dcea4348246fa32b673" kindref="member">test::RandomString</ref>(rnd,<sp/>len,<sp/>&amp;r);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AtomicCounter<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="db__test_8cc_1a7409a2fd2bde9ec649030b2513a568b8" refkind="member"><highlight class="normal"><sp/><sp/>port::Mutex<sp/><ref refid="db__test_8cc_1a7409a2fd2bde9ec649030b2513a568b8" kindref="member">mu_</ref>;</highlight></codeline>
<codeline lineno="32" refid="db__test_8cc_1a9acf5084c965a76d24ec228412256bc3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="db__test_8cc_1a9acf5084c965a76d24ec228412256bc3" kindref="member">count_</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>AtomicCounter()<sp/>:<sp/>count_(0)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Increment()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>IncrementBy(1);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IncrementBy(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexLock<sp/>l(&amp;mu_);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>count_<sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Read()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexLock<sp/>l(&amp;mu_);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db__test_8cc_1a9acf5084c965a76d24ec228412256bc3" kindref="member">count_</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexLock<sp/>l(&amp;mu_);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>count_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DelayMilliseconds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>millis)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" kindref="member">Env::Default</ref>()-&gt;<ref refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312" kindref="member">SleepForMicroseconds</ref>(millis<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Special<sp/>Env<sp/>used<sp/>to<sp/>delay<sp/>background<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classleveldb_1_1_special_env" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_special_env" kindref="compound">SpecialEnv</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_wrapper" kindref="compound">EnvWrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sstable/log<sp/>Sync()<sp/>calls<sp/>are<sp/>blocked<sp/>while<sp/>this<sp/>pointer<sp/>is<sp/>non-NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classleveldb_1_1_special_env_1af8a6a4d77f11f6986cb1d00f3cf9d37a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref><sp/><ref refid="classleveldb_1_1_special_env_1af8a6a4d77f11f6986cb1d00f3cf9d37a" kindref="member">delay_data_sync_</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sstable/log<sp/>Sync()<sp/>calls<sp/>return<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classleveldb_1_1_special_env_1ae468cdabd36e0b9fde534bb25a47499f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref><sp/><ref refid="classleveldb_1_1_special_env_1ae468cdabd36e0b9fde534bb25a47499f" kindref="member">data_sync_error_</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>no-space<sp/>errors<sp/>while<sp/>this<sp/>pointer<sp/>is<sp/>non-NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classleveldb_1_1_special_env_1a21c9400bf22bd43f75349677b4d3413b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref><sp/><ref refid="classleveldb_1_1_special_env_1a21c9400bf22bd43f75349677b4d3413b" kindref="member">no_space_</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>non-writable<sp/>file<sp/>system<sp/>while<sp/>this<sp/>pointer<sp/>is<sp/>non-NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classleveldb_1_1_special_env_1a3ecf4339c101366198febb32cfe938f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref><sp/><ref refid="classleveldb_1_1_special_env_1a3ecf4339c101366198febb32cfe938f0" kindref="member">non_writable_</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>sync<sp/>of<sp/>manifest<sp/>files<sp/>to<sp/>fail<sp/>while<sp/>this<sp/>pointer<sp/>is<sp/>non-NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classleveldb_1_1_special_env_1a354d87bbdeb456c36877e506872bcc04" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref><sp/><ref refid="classleveldb_1_1_special_env_1a354d87bbdeb456c36877e506872bcc04" kindref="member">manifest_sync_error_</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>write<sp/>to<sp/>manifest<sp/>files<sp/>to<sp/>fail<sp/>while<sp/>this<sp/>pointer<sp/>is<sp/>non-NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classleveldb_1_1_special_env_1a7a6fafc967db1ba7594676d372b7fbec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref><sp/><ref refid="classleveldb_1_1_special_env_1a7a6fafc967db1ba7594676d372b7fbec" kindref="member">manifest_write_error_</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classleveldb_1_1_special_env_1aaf50860248689bda9993dfdcfb53855a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_special_env_1aaf50860248689bda9993dfdcfb53855a" kindref="member">count_random_reads_</ref>;</highlight></codeline>
<codeline lineno="79" refid="classleveldb_1_1_special_env_1a7cf0b2e4dcd63460e8776ae3a2c70bee" refkind="member"><highlight class="normal"><sp/><sp/>AtomicCounter<sp/><ref refid="classleveldb_1_1_special_env_1a7cf0b2e4dcd63460e8776ae3a2c70bee" kindref="member">random_read_counter_</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classleveldb_1_1_special_env_1a29fed9502e35a1f9374e0f46f4bd1181" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_special_env_1a29fed9502e35a1f9374e0f46f4bd1181" kindref="member">SpecialEnv</ref>(<ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>*<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>)<sp/>:<sp/><ref refid="classleveldb_1_1_env_wrapper" kindref="compound">EnvWrapper</ref>(base)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>delay_data_sync_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(NULL);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>data_sync_error_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(NULL);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>no_space_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(NULL);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>non_writable_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(NULL);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>count_random_reads_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>manifest_sync_error_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(NULL);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>manifest_write_error_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(NULL);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classleveldb_1_1_special_env_1a2a8b88051ccc5f957321d47af0dae5ed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_special_env_1a2a8b88051ccc5f957321d47af0dae5ed" kindref="member">NewWritableFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>f,<sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>**<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DataFile<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_special_env" kindref="compound">SpecialEnv</ref>*<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>*<sp/>base_;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataFile(<ref refid="classleveldb_1_1_special_env" kindref="compound">SpecialEnv</ref>*<sp/>env,<sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>*<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>(env),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_(base)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~DataFile()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>base_;<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>Append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_-&gt;<ref refid="classleveldb_1_1_special_env_1a21c9400bf22bd43f75349677b4d3413b" kindref="member">no_space_</ref>.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drop<sp/>writes<sp/>on<sp/>the<sp/>floor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_-&gt;<ref refid="classleveldb_1_1_writable_file_1a53b41841d9577d28f65d4d90e1660de8" kindref="member">Append</ref>(data);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>Close()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_-&gt;<ref refid="classleveldb_1_1_writable_file_1a2efbf9c02a26028b5002df73b4393915" kindref="member">Close</ref>();<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>Flush()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_-&gt;<ref refid="classleveldb_1_1_writable_file_1ab95759ad32f6a05b0ee4266969fa265e" kindref="member">Flush</ref>();<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>Sync()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_-&gt;<ref refid="classleveldb_1_1_special_env_1ae468cdabd36e0b9fde534bb25a47499f" kindref="member">data_sync_error_</ref>.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1ada6143081d41803808f77287153f96b7" kindref="member">Status::IOError</ref>(</highlight><highlight class="stringliteral">&quot;simulated<sp/>data<sp/>sync<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(env_-&gt;<ref refid="classleveldb_1_1_special_env_1af8a6a4d77f11f6986cb1d00f3cf9d37a" kindref="member">delay_data_sync_</ref>.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DelayMilliseconds(100);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_-&gt;<ref refid="classleveldb_1_1_writable_file_1a2d2dcef02a2c9e71f3d39125bcd5a606" kindref="member">Sync</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ManifestFile<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_special_env" kindref="compound">SpecialEnv</ref>*<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>*<sp/>base_;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ManifestFile(<ref refid="classleveldb_1_1_special_env" kindref="compound">SpecialEnv</ref>*<sp/>env,<sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>*<sp/>b)<sp/>:<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>(env),<sp/>base_(b)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~ManifestFile()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>base_;<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>Append(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_-&gt;<ref refid="classleveldb_1_1_special_env_1a7a6fafc967db1ba7594676d372b7fbec" kindref="member">manifest_write_error_</ref>.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1ada6143081d41803808f77287153f96b7" kindref="member">Status::IOError</ref>(</highlight><highlight class="stringliteral">&quot;simulated<sp/>writer<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_-&gt;<ref refid="classleveldb_1_1_writable_file_1a53b41841d9577d28f65d4d90e1660de8" kindref="member">Append</ref>(data);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>Close()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_-&gt;<ref refid="classleveldb_1_1_writable_file_1a2efbf9c02a26028b5002df73b4393915" kindref="member">Close</ref>();<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>Flush()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_-&gt;<ref refid="classleveldb_1_1_writable_file_1ab95759ad32f6a05b0ee4266969fa265e" kindref="member">Flush</ref>();<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>Sync()<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_-&gt;<ref refid="classleveldb_1_1_special_env_1a354d87bbdeb456c36877e506872bcc04" kindref="member">manifest_sync_error_</ref>.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1ada6143081d41803808f77287153f96b7" kindref="member">Status::IOError</ref>(</highlight><highlight class="stringliteral">&quot;simulated<sp/>sync<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_-&gt;<ref refid="classleveldb_1_1_writable_file_1a2d2dcef02a2c9e71f3d39125bcd5a606" kindref="member">Sync</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(non_writable_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1ada6143081d41803808f77287153f96b7" kindref="member">Status::IOError</ref>(</highlight><highlight class="stringliteral">&quot;simulated<sp/>write<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_env_wrapper_1a7b147ba21760b3545e757abcdc6dd9c5" kindref="member">target</ref>()-&gt;<ref refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de" kindref="member">NewWritableFile</ref>(f,<sp/>r);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(f.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;.ldb&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstr(f.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;.log&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DataFile(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*r);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(f.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;MANIFEST&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ManifestFile(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*r);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classleveldb_1_1_special_env_1ae04ba2b7b94753d805e316dbda74ec00" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_special_env_1ae04ba2b7b94753d805e316dbda74ec00" kindref="member">NewRandomAccessFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>f,<sp/><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref>**<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CountingFile<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref>*<sp/>target_;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AtomicCounter*<sp/>counter_;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CountingFile(<ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref>*<sp/><ref refid="classleveldb_1_1_env_wrapper_1a7b147ba21760b3545e757abcdc6dd9c5" kindref="member">target</ref>,<sp/>AtomicCounter*<sp/><ref refid="db__test_8cc_1a62ffeaac8bdc204faeb004239f7c04be" kindref="member">counter</ref>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>target_(target),<sp/>counter_(counter)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~CountingFile()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>target_;<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>Read(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>result,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>scratch)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter_-&gt;Increment();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_random_access_file_1a1a09fadcec904d9791a968acabca98d0" kindref="member">Read</ref>(offset,<sp/>n,<sp/>result,<sp/>scratch);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_env_wrapper_1a7b147ba21760b3545e757abcdc6dd9c5" kindref="member">target</ref>()-&gt;<ref refid="classleveldb_1_1_env_1a1df3e0bb2d47ee914448df9bb9ca0734" kindref="member">NewRandomAccessFile</ref>(f,<sp/>r);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>()<sp/>&amp;&amp;<sp/><ref refid="classleveldb_1_1_special_env_1aaf50860248689bda9993dfdcfb53855a" kindref="member">count_random_reads_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CountingFile(*r,<sp/>&amp;random_read_counter_);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classleveldb_1_1_d_b_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_filter_policy" kindref="compound">FilterPolicy</ref>*<sp/>filter_policy_;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sequence<sp/>of<sp/>option<sp/>configurations<sp/>to<sp/>try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>OptionConfig<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>kDefault,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>kFilter,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>kUncompressed,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>kEnd</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option_config_;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203" refid="classleveldb_1_1_d_b_test_1ab7eb9815f522ad154816d72d1cc23a86" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_d_b_test_1ab7eb9815f522ad154816d72d1cc23a86" kindref="member">dbname_</ref>;</highlight></codeline>
<codeline lineno="204" refid="classleveldb_1_1_d_b_test_1ae6bb66675fe5419ed647efd1bfd332f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_special_env" kindref="compound">SpecialEnv</ref>*<sp/><ref refid="classleveldb_1_1_d_b_test_1ae6bb66675fe5419ed647efd1bfd332f8" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="205" refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref>*<sp/><ref refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" kindref="member">db_</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classleveldb_1_1_d_b_test_1adc05df912917d8de411d0672af04330f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/><ref refid="classleveldb_1_1_d_b_test_1adc05df912917d8de411d0672af04330f" kindref="member">last_options_</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classleveldb_1_1_d_b_test_1afc6fc9512e900de6ee10c5db15b22930" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b_test_1afc6fc9512e900de6ee10c5db15b22930" kindref="member">DBTest</ref>()<sp/>:<sp/>option_config_(kDefault),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env_(new<sp/><ref refid="classleveldb_1_1_special_env" kindref="compound">SpecialEnv</ref>(<ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>::Default()))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_policy_<sp/>=<sp/><ref refid="namespaceleveldb_1ae6b34bf2331983721554f284b1eaa1a1" kindref="member">NewBloomFilterPolicy</ref>(10);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>dbname_<sp/>=<sp/><ref refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" kindref="member">test::TmpDir</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/db_test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" kindref="member">DestroyDB</ref>(dbname_,<sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>db_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" kindref="member">Reopen</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classleveldb_1_1_d_b_test_1a2268045d59c3a74bba03877819e36b55" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b_test_1a2268045d59c3a74bba03877819e36b55" kindref="member">~DBTest</ref>()<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" kindref="member">db_</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" kindref="member">DestroyDB</ref>(dbname_,<sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1ae6bb66675fe5419ed647efd1bfd332f8" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>filter_policy_;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>a<sp/>fresh<sp/>database<sp/>with<sp/>the<sp/>next<sp/>option<sp/>configuration<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>test.<sp/><sp/>Return<sp/>false<sp/>if<sp/>there<sp/>are<sp/>no<sp/>more<sp/>configurations<sp/>to<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="classleveldb_1_1_d_b_test_1a587534fe403016f15cf1997ef7a40836" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a587534fe403016f15cf1997ef7a40836" kindref="member">ChangeOptions</ref>()<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>option_config_++;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option_config_<sp/>&gt;=<sp/>kEnd)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" kindref="member">DestroyAndReopen</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>current<sp/>option<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classleveldb_1_1_d_b_test_1a68db410e16195a3b67822bec05c06547" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/><ref refid="classleveldb_1_1_d_b_test_1a68db410e16195a3b67822bec05c06547" kindref="member">CurrentOptions</ref>()<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(option_config_)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kFilter:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" kindref="member">filter_policy</ref><sp/>=<sp/>filter_policy_;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kUncompressed:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" kindref="member">compression</ref><sp/>=<sp/><ref refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" kindref="member">kNoCompression</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b_impl" kindref="compound">DBImpl</ref>*<sp/><ref refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" kindref="member">dbfull</ref>()<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="classleveldb_1_1_d_b_impl" kindref="compound">DBImpl</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" kindref="member">db_</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" kindref="member">Reopen</ref>(<ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>*<sp/>options<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" kindref="member">TryReopen</ref>(options));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classleveldb_1_1_d_b_test_1aee76446bbb9c34cdb1ae00318689aead" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1aee76446bbb9c34cdb1ae00318689aead" kindref="member">Close</ref>()<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" kindref="member">db_</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>db_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" kindref="member">DestroyAndReopen</ref>(<ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>*<sp/>options<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" kindref="member">db_</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>db_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" kindref="member">DestroyDB</ref>(dbname_,<sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" kindref="member">TryReopen</ref>(options));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" kindref="member">TryReopen</ref>(<ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>*<sp/>options)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" kindref="member">db_</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>db_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>opts;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opts<sp/>=<sp/>*options;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opts<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_test_1a68db410e16195a3b67822bec05c06547" kindref="member">CurrentOptions</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opts.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>last_options_<sp/>=<sp/>opts;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">DB::Open</ref>(opts,<sp/>dbname_,<sp/>&amp;db_);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" kindref="member">Put</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>k,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>db_-&gt;<ref refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" kindref="member">Put</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>k,<sp/>v);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classleveldb_1_1_d_b_test_1a25716ec93d525adbeea8ff71e8f3a9f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_test_1a25716ec93d525adbeea8ff71e8f3a9f4" kindref="member">Delete</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>db_-&gt;<ref refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" kindref="member">Delete</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>k);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classleveldb_1_1_d_b_test_1a6af558e1fca4a9f1bbf86d72d3d4aa6c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_d_b_test_1a6af558e1fca4a9f1bbf86d72d3d4aa6c" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>k,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>snapshot<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref><sp/>options;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_read_options_1a1fa3fffc267dff89fce7c39d7c7b5b50" kindref="member">snapshot</ref><sp/>=<sp/>snapshot;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/>db_-&gt;<ref refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911" kindref="member">Get</ref>(options,<sp/>k,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ad5462f26196fc04d72221d2fdf1872ca" kindref="member">IsNotFound</ref>())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>string<sp/>that<sp/>contains<sp/>all<sp/>key,value<sp/>pairs<sp/>in<sp/>order,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>formatted<sp/>like<sp/>&quot;(k1-&gt;v1)(k2-&gt;v2)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" kindref="member">Contents</ref>()<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>forward;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/>db_-&gt;<ref refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>();<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_test_1ad162fa0f5a31e61ee94ba9f45af716f8" kindref="member">IterStatus</ref>(iter);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(</highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(s);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(</highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>forward.push_back(s);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>reverse<sp/>iteration<sp/>results<sp/>are<sp/>the<sp/>reverse<sp/>of<sp/>forward<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>matched<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>();<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>())<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6058af464aa1533b961936d5f6c5aea0" kindref="member">ASSERT_LT</ref>(matched,<sp/>forward.size());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="classleveldb_1_1_d_b_test_1ad162fa0f5a31e61ee94ba9f45af716f8" kindref="member">IterStatus</ref>(iter),<sp/>forward[forward.size()<sp/>-<sp/>matched<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>matched++;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(matched,<sp/>forward.size());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classleveldb_1_1_d_b_test_1adaf171601eaaf2cd24edaa394752f733" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_d_b_test_1adaf171601eaaf2cd24edaa394752f733" kindref="member">AllEntriesFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/><ref refid="version__set_8cc_1afced2118ae0bf03db7c7e75a21cfd004" kindref="member">user_key</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" kindref="member">dbfull</ref>()-&gt;<ref refid="classleveldb_1_1_d_b_impl_1adba5bf4252bd94f7db50e62921b7ba53" kindref="member">TEST_NewInternalIterator</ref>();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>target(user_key,<sp/>kMaxSequenceNumber,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(target.<ref refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" kindref="member">Encode</ref>());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1ac84f34623a031b7eeb23409320f76376" kindref="member">status</ref>().<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1ac84f34623a031b7eeb23409320f76376" kindref="member">status</ref>().<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_parsed_internal_key" kindref="compound">ParsedInternalKey</ref><sp/>ikey;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceleveldb_1a5a173b622e86c7a2f9beae3ac8818ac3" kindref="member">ParseInternalKey</ref>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>(),<sp/>&amp;ikey))<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;CORRUPTED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_options_.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref>-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(ikey.<ref refid="structleveldb_1_1_parsed_internal_key_1aa6e30fcf3c95fc1485d60fa08efe2b9d" kindref="member">user_key</ref>,<sp/>user_key)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ikey.<ref refid="structleveldb_1_1_parsed_internal_key_1ac7c10a6f60f93982b886ad1fbbafd6c2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref>:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c" kindref="member">value</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" kindref="member">kTypeDeletion</ref>:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;DEL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" kindref="member">NumTableFilesAtLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>property;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db_-&gt;<ref refid="classleveldb_1_1_d_b_1afcd557d80bac6668f20372c9e737d807" kindref="member">GetProperty</ref>(</highlight><highlight class="stringliteral">&quot;leveldb.num-files-at-level&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespaceleveldb_1a0a19109e7a2c8855c7565bd331d955b4" kindref="member">NumberToString</ref>(level),</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;property));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(property.c_str());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="classleveldb_1_1_d_b_test_1a05fa745351a41ecc0165b391a605b79e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a05fa745351a41ecc0165b391a605b79e" kindref="member">TotalTableFiles</ref>()<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" kindref="member">NumTableFilesAtLevel</ref>(level);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>spread<sp/>of<sp/>files<sp/>per<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="classleveldb_1_1_d_b_test_1a0e4d6292bcbe450d34b558d48a51a331" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_d_b_test_1a0e4d6292bcbe450d34b558d48a51a331" kindref="member">FilesPerLevel</ref>()<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_non_zero_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" kindref="member">NumTableFilesAtLevel</ref>(level);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[100];</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%s%d&quot;</highlight><highlight class="normal">,<sp/>(level<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>f);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>buf;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_non_zero_offset<sp/>=<sp/>result.size();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>result.resize(last_non_zero_offset);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classleveldb_1_1_d_b_test_1a0c6c0c1d470a50fdcb6cdbc54977e907" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a0c6c0c1d470a50fdcb6cdbc54977e907" kindref="member">CountFiles</ref>()<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>files;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>env_-&gt;<ref refid="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" kindref="member">GetChildren</ref>(dbname_,<sp/>&amp;files);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(files.size());</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classleveldb_1_1_d_b_test_1a2b16106ccbd302127b5c0575e74e6be1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_d_b_test_1a2b16106ccbd302127b5c0575e74e6be1" kindref="member">Size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/><ref refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" kindref="member">start</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>limit)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_range" kindref="compound">Range</ref><sp/>r(start,<sp/>limit);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>size;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>db_-&gt;<ref refid="classleveldb_1_1_d_b_1ad4d54aa1dbcecc8583b013ab2d67aeff" kindref="member">GetApproximateSizes</ref>(&amp;r,<sp/>1,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="classleveldb_1_1_d_b_test_1a9b6cd10fd7c8fc54127b0c40c0ac7db5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a9b6cd10fd7c8fc54127b0c40c0ac7db5" kindref="member">Compact</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/><ref refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" kindref="member">start</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>limit)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>db_-&gt;<ref refid="classleveldb_1_1_d_b_1aeea500cbc6704454b3be6908d5da8b3a" kindref="member">CompactRange</ref>(&amp;start,<sp/>&amp;limit);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>n<sp/>memtable<sp/>compactions,<sp/>each<sp/>of<sp/>which<sp/>produces<sp/>an<sp/>sstable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>covering<sp/>the<sp/>range<sp/>[small,large].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" kindref="member">MakeTables</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>small,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>large)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" kindref="member">Put</ref>(small,<sp/></highlight><highlight class="stringliteral">&quot;begin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" kindref="member">Put</ref>(large,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" kindref="member">dbfull</ref>()-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" kindref="member">TEST_CompactMemTable</ref>();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>pushing<sp/>of<sp/>new<sp/>sstables<sp/>into<sp/>deeper<sp/>levels<sp/>by<sp/>adding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tables<sp/>that<sp/>cover<sp/>a<sp/>specified<sp/>range<sp/>to<sp/>all<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classleveldb_1_1_d_b_test_1ac291d06db907f5fee7caf04f44f65493" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1ac291d06db907f5fee7caf04f44f65493" kindref="member">FillLevels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>smallest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>largest)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" kindref="member">MakeTables</ref>(config::kNumLevels,<sp/>smallest,<sp/>largest);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="classleveldb_1_1_d_b_test_1ad045c5203b4ea785ab335ffc3ea833b3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1ad045c5203b4ea785ab335ffc3ea833b3" kindref="member">DumpFileCounts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;---\n%s:\n&quot;</highlight><highlight class="normal">,<sp/>label);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;maxoverlap:<sp/>%lld\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;long<sp/>long&gt;(</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" kindref="member">dbfull</ref>()-&gt;TEST_MaxNextLevelOverlappingBytes()));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" kindref="member">NumTableFilesAtLevel</ref>(level);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>level<sp/>%3d<sp/>:<sp/>%d<sp/>files\n&quot;</highlight><highlight class="normal">,<sp/>level,<sp/>num);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="classleveldb_1_1_d_b_test_1afdfc077be555dea7eac220623f6d4deb" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_d_b_test_1afdfc077be555dea7eac220623f6d4deb" kindref="member">DumpSSTableList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>property;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>db_-&gt;<ref refid="classleveldb_1_1_d_b_1afcd557d80bac6668f20372c9e737d807" kindref="member">GetProperty</ref>(</highlight><highlight class="stringliteral">&quot;leveldb.sstables&quot;</highlight><highlight class="normal">,<sp/>&amp;property);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>property;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="classleveldb_1_1_d_b_test_1ad162fa0f5a31e61ee94ba9f45af716f8" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_d_b_test_1ad162fa0f5a31e61ee94ba9f45af716f8" kindref="member">IterStatus</ref>(<ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c" kindref="member">value</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="classleveldb_1_1_d_b_test_1abcb2ebeb0733670d7634079c587426d2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1abcb2ebeb0733670d7634079c587426d2" kindref="member">DeleteAnSSTFile</ref>()<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>filenames;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(env_-&gt;<ref refid="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" kindref="member">GetChildren</ref>(dbname_,<sp/>&amp;filenames));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>number;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1" kindref="member">FileType</ref><sp/>type;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>filenames.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" kindref="member">ParseFileName</ref>(filenames[i],<sp/>&amp;number,<sp/>&amp;type)<sp/>&amp;&amp;<sp/>type<sp/>==<sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" kindref="member">kTableFile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(env_-&gt;<ref refid="classleveldb_1_1_env_wrapper_1af99d37829c3806a0e05979f5a7eb35af" kindref="member">DeleteFile</ref>(<ref refid="namespaceleveldb_1ac9107e52d0ead114d749dc4b06dfd3ec" kindref="member">TableFileName</ref>(dbname_,<sp/>number)));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>number<sp/>of<sp/>files<sp/>renamed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" kindref="member">RenameLDBToSST</ref>()<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>filenames;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(env_-&gt;<ref refid="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" kindref="member">GetChildren</ref>(dbname_,<sp/>&amp;filenames));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>number;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1" kindref="member">FileType</ref><sp/>type;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>files_renamed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>filenames.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" kindref="member">ParseFileName</ref>(filenames[i],<sp/>&amp;number,<sp/>&amp;type)<sp/>&amp;&amp;<sp/>type<sp/>==<sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" kindref="member">kTableFile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>from<sp/>=<sp/><ref refid="namespaceleveldb_1ac9107e52d0ead114d749dc4b06dfd3ec" kindref="member">TableFileName</ref>(dbname_,<sp/>number);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>to<sp/>=<sp/><ref refid="namespaceleveldb_1aa3f12c506ffc9bf556b6cc2185313c1a" kindref="member">SSTTableFileName</ref>(dbname_,<sp/>number);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(env_-&gt;<ref refid="classleveldb_1_1_env_wrapper_1afbd271f58ef0f0db8f2973f0c947fdec" kindref="member">RenameFile</ref>(from,<sp/>to));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>files_renamed++;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>files_renamed;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal">};</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="namespaceleveldb_1a5cdb2a977033415260acc09b4b1b7171" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>Empty)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="namespaceleveldb_1a2d427ecc9d7b712d8c5dd7ec8b6343fc" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>ReadWrite)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="namespaceleveldb_1a4d273f5f0d313440832363179e28e010" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>PutDeleteGet)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" kindref="member">Put</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" kindref="member">Put</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1af050f77e8c22bd6638fed5a46a59399d" kindref="member">Delete</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="namespaceleveldb_1a21cac1755bd447df075909132bb964d4" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>GetFromImmutableLayer)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref><sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>100000;<sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>write<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;delay_data_sync_.Release_Store(<ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>sync<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;k1&quot;</highlight><highlight class="normal">,<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>memtable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;k2&quot;</highlight><highlight class="normal">,<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;delay_data_sync_.Release_Store(NULL);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>sync<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="namespaceleveldb_1affd937ddc8c138fd0b5d020a396310c8" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>GetFromVersions)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="namespaceleveldb_1ad6fac95495278565df640d4055b9c9f0" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>GetSnapshot)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>with<sp/>both<sp/>a<sp/>short<sp/>key<sp/>and<sp/>a<sp/>long<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/>(i<sp/>==<sp/>0)<sp/>?<sp/>std::string(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">)<sp/>:<sp/>std::string(200,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(key,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>s1<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" kindref="member">GetSnapshot</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(key,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(key));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(key,<sp/>s1));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(key));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(key,<sp/>s1));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" kindref="member">ReleaseSnapshot</ref>(s1);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579" refid="namespaceleveldb_1a2b333e6a496f74899c808279627f11a0" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>GetLevel0Ordering)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>we<sp/>process<sp/>level-0<sp/>files<sp/>in<sp/>correct<sp/>order.<sp/><sp/>The<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>below<sp/>generates<sp/>two<sp/>level-0<sp/>files<sp/>where<sp/>the<sp/>earlier<sp/>one<sp/>comes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>the<sp/>later<sp/>one<sp/>in<sp/>the<sp/>level-0<sp/>file<sp/>list<sp/>since<sp/>the<sp/>earlier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>has<sp/>a<sp/>smaller<sp/>&quot;smallest&quot;<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="namespaceleveldb_1a8f54952904ed501131060691eb1b6970" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>GetOrderedByLevels)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="namespaceleveldb_1ac3d2a0e1b8553c3106c45ead7d6804bb" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>GetPicksCorrectFile)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arrange<sp/>to<sp/>have<sp/>multiple<sp/>files<sp/>in<sp/>a<sp/>non-level-0<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;va&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;va&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;vf&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;vx&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="namespaceleveldb_1a0cec95f588ef6c5c121ac0d63eb4238f" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>GetEncountersEmptyLevel)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arrange<sp/>for<sp/>the<sp/>following<sp/>to<sp/>happen:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>sstable<sp/>A<sp/>in<sp/>level<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>nothing<sp/>in<sp/>level<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>sstable<sp/>B<sp/>in<sp/>level<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>do<sp/>enough<sp/>Get()<sp/>calls<sp/>to<sp/>arrange<sp/>for<sp/>an<sp/>automatic<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>sstable<sp/>A.<sp/><sp/>A<sp/>bug<sp/>would<sp/>cause<sp/>the<sp/>compaction<sp/>to<sp/>be<sp/>marked<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>occurring<sp/>at<sp/>level<sp/>1<sp/>(instead<sp/>of<sp/>the<sp/>correct<sp/>level<sp/>0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1:<sp/>First<sp/>place<sp/>sstables<sp/>in<sp/>levels<sp/>0<sp/>and<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compaction_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(NumTableFilesAtLevel(0)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumTableFilesAtLevel(2)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" kindref="member">ASSERT_LE</ref>(compaction_count,<sp/>100)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>fill<sp/>levels<sp/>0<sp/>and<sp/>2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compaction_count++;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;begin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/>clear<sp/>level<sp/>1<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactRange(1,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(0),<sp/>1);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(1),<sp/>0);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(2),<sp/>1);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>3:<sp/>read<sp/>a<sp/>bunch<sp/>of<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;missing&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>4:<sp/>Wait<sp/>for<sp/>compaction<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>DelayMilliseconds(1000);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(0),<sp/>0);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="namespaceleveldb_1a5ad106e9bbfcb5520b7dc344525f7cd2" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>IterEmpty)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>());</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="namespaceleveldb_1a8a6d5f729259c0f357f4dee533a5ce6a" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>IterSingle)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;va&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>());</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="namespaceleveldb_1a683bc77ccfd830fbe21a91c26ac91347" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>IterMulti)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;va&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>());</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;vb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;c-&gt;vc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;c-&gt;vc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;vb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;c-&gt;vc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;ax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;vb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;vb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>from<sp/>reverse<sp/>to<sp/>forward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;vb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>from<sp/>forward<sp/>to<sp/>reverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;vb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>iter<sp/>stays<sp/>at<sp/>snapshot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;va2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;a2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;va3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;vb2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;vc2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Delete(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;vb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;c-&gt;vc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;c-&gt;vc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;vb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="namespaceleveldb_1a4044ccda7237640864995a0885ea6710" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>IterSmallAndLargeMix)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;va&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">,<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>());</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;c-&gt;vc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;d-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;e-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;e-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;d-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;c-&gt;vc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;b-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;(invalid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834" refid="namespaceleveldb_1a3e41cdc91355438f57b9497b01c66e24" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>IterMultiWithDelete)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;va&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Delete(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>());</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;c-&gt;vc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(IterStatus(iter),<sp/></highlight><highlight class="stringliteral">&quot;a-&gt;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="namespaceleveldb_1ab1872cabf2fb215814f9a6f1bacacc80" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>Recover)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;baz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v5&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v5&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;baz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v4&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v4&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v5&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;baz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873" refid="namespaceleveldb_1a890ebffd31d77bc8acb760088d70ee8c" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>RecoveryWithEmptyLog)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>writes<sp/>done<sp/>during<sp/>a<sp/>memtable<sp/>compaction<sp/>are<sp/>recovered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>database<sp/>is<sp/>shutdown<sp/>during<sp/>the<sp/>memtable<sp/>compaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887" refid="namespaceleveldb_1a2e24806457c57e7dec22e3c05e46a82c" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>RecoverDuringMemtableCompaction)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref><sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>a<sp/>long<sp/>memtable<sp/>compaction<sp/>and<sp/>reopen<sp/>the<sp/>database<sp/>during<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Goes<sp/>to<sp/>1st<sp/>log<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;big1&quot;</highlight><highlight class="normal">,<sp/>std::string(10000000,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)));<sp/><sp/></highlight><highlight class="comment">//<sp/>Fills<sp/>memtable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;big2&quot;</highlight><highlight class="normal">,<sp/>std::string(1000,<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">)));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Triggers<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Goes<sp/>to<sp/>new<sp/>log<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(std::string(10000000,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">),<sp/>Get(</highlight><highlight class="stringliteral">&quot;big1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(std::string(1000,<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">),<sp/>Get(</highlight><highlight class="stringliteral">&quot;big2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[100];</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;key%06d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(buf);</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914" refid="namespaceleveldb_1a1ff90ae7b19ecf46c5efb6e5af00fa0a" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>MinorCompactionsHappen)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starting_num_tables<sp/>=<sp/>TotalTableFiles();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i),<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)<sp/>+<sp/>std::string(1000,<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ending_num_tables<sp/>=<sp/>TotalTableFiles();</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" kindref="member">ASSERT_GT</ref>(ending_num_tables,<sp/>starting_num_tables);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)<sp/>+<sp/>std::string(1000,<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">),<sp/>Get(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)));</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)<sp/>+<sp/>std::string(1000,<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">),<sp/>Get(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)));</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939" refid="namespaceleveldb_1a01bbbae1753711e8b7740ed8faa9efd6" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>RecoverWithLargeLog)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;big1&quot;</highlight><highlight class="normal">,<sp/>std::string(200000,<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;big2&quot;</highlight><highlight class="normal">,<sp/>std::string(200000,<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;small3&quot;</highlight><highlight class="normal">,<sp/>std::string(10,<sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;small4&quot;</highlight><highlight class="normal">,<sp/>std::string(10,<sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(0),<sp/>0);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>if<sp/>we<sp/>re-open<sp/>with<sp/>a<sp/>small<sp/>write<sp/>buffer<sp/>size<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>flush<sp/>table<sp/>files<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>a<sp/>large<sp/>log<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(0),<sp/>3);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(std::string(200000,<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">),<sp/>Get(</highlight><highlight class="stringliteral">&quot;big1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(std::string(200000,<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">),<sp/>Get(</highlight><highlight class="stringliteral">&quot;big2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(std::string(10,<sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">),<sp/>Get(</highlight><highlight class="stringliteral">&quot;small3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(std::string(10,<sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">),<sp/>Get(</highlight><highlight class="stringliteral">&quot;small4&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" kindref="member">ASSERT_GT</ref>(NumTableFilesAtLevel(0),<sp/>1);</highlight></codeline>
<codeline lineno="961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963" refid="namespaceleveldb_1acd61524dbc544e8f1ca63fbdfac59791" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>CompactionsGenerateMultipleFiles)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>100000000;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Large<sp/>write<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(301);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>8MB<sp/>(80<sp/>values,<sp/>each<sp/>100K)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(0),<sp/>0);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>values;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>80;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>values.push_back(RandomString(&amp;rnd,<sp/>100000));</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i),<sp/>values[i]));</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reopening<sp/>moves<sp/>updates<sp/>to<sp/>level-0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactRange(0,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(0),<sp/>0);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" kindref="member">ASSERT_GT</ref>(NumTableFilesAtLevel(1),<sp/>1);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>80;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(Get(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)),<sp/>values[i]);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989" refid="namespaceleveldb_1acb51ac2eb77bd1af22372748f9fb44da" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>RepeatedWritesToSameKey)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref><sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>100000;<sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>write<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>have<sp/>at<sp/>most<sp/>one<sp/>file<sp/>per<sp/>level<sp/>except<sp/>for<sp/>level-0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>may<sp/>have<sp/>up<sp/>to<sp/>kL0_StopWritesTrigger<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kMaxFiles<sp/>=<sp/>config::kNumLevels<sp/>+<sp/>config::kL0_StopWritesTrigger;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(301);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>=<sp/>RandomString(&amp;rnd,<sp/>2<sp/>*<sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref>);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5<sp/>*<sp/>kMaxFiles;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" kindref="member">ASSERT_LE</ref>(TotalTableFiles(),<sp/>kMaxFiles);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;after<sp/>%d:<sp/>%d<sp/>files\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(i+1),<sp/>TotalTableFiles());</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008" refid="namespaceleveldb_1a0ed510b8c03c1ca0216ffee81199d79e" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>SparseMerge)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" kindref="member">compression</ref><sp/>=<sp/><ref refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" kindref="member">kNoCompression</ref>;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>FillLevels(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Suppose<sp/>there<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>small<sp/>amount<sp/>of<sp/>data<sp/>with<sp/>prefix<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>large<sp/>amount<sp/>of<sp/>data<sp/>with<sp/>prefix<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>small<sp/>amount<sp/>of<sp/>data<sp/>with<sp/>prefix<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>that<sp/>recent<sp/>updates<sp/>have<sp/>made<sp/>small<sp/>changes<sp/>to<sp/>all<sp/>three<sp/>prefixes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>we<sp/>do<sp/>not<sp/>do<sp/>a<sp/>compaction<sp/>that<sp/>merges<sp/>all<sp/>of<sp/>B<sp/>in<sp/>one<sp/>shot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>(1000,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;va&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>approximately<sp/>100MB<sp/>of<sp/>&quot;B&quot;<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>key[100];</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(key),<sp/></highlight><highlight class="stringliteral">&quot;B%010d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(key,<sp/>value);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactRange(0,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sparse<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;va2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;B100&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bvalue2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vc2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compactions<sp/>should<sp/>not<sp/>cause<sp/>us<sp/>to<sp/>create<sp/>a<sp/>situation<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>file<sp/>overlaps<sp/>too<sp/>much<sp/>data<sp/>at<sp/>the<sp/>next<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" kindref="member">ASSERT_LE</ref>(dbfull()-&gt;TEST_MaxNextLevelOverlappingBytes(),<sp/>20*1048576);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactRange(0,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" kindref="member">ASSERT_LE</ref>(dbfull()-&gt;TEST_MaxNextLevelOverlappingBytes(),<sp/>20*1048576);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactRange(1,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" kindref="member">ASSERT_LE</ref>(dbfull()-&gt;TEST_MaxNextLevelOverlappingBytes(),<sp/>20*1048576);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Between(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>val,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>low,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(val<sp/>&gt;=<sp/>low)<sp/>&amp;&amp;<sp/>(val<sp/>&lt;=<sp/>high);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Value<sp/>%llu<sp/>is<sp/>not<sp/>in<sp/>range<sp/>[%llu,<sp/>%llu]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(val),</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(low),</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(high));</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059" refid="namespaceleveldb_1a6b3f1122dc9d727f0c699ed3da2d6474" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>ApproximateSizes)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>100000000;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Large<sp/>write<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" kindref="member">compression</ref><sp/>=<sp/><ref refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" kindref="member">kNoCompression</ref>;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>DestroyAndReopen();</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>8MB<sp/>(80<sp/>values,<sp/>each<sp/>100K)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(0),<sp/>0);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>S1<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>S2<sp/>=<sp/>105000;<sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>some<sp/>expansion<sp/>from<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(301);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i),<sp/>RandomString(&amp;rnd,<sp/>S1)));</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>because<sp/>GetApproximateSizes()<sp/>does<sp/>not<sp/>account<sp/>for<sp/>memtable<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(50)),<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>sizes<sp/>across<sp/>recovery<sp/>by<sp/>reopening<sp/>a<sp/>few<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>0;<sp/>run<sp/>&lt;<sp/>3;<sp/>run++)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compact_start<sp/>=<sp/>0;<sp/>compact_start<sp/>&lt;<sp/>N;<sp/>compact_start<sp/>+=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i<sp/>+=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)),<sp/>S1*i,<sp/>S2*i));</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)+</highlight><highlight class="stringliteral">&quot;.suffix&quot;</highlight><highlight class="normal">),<sp/>S1*(i+1),<sp/>S2*(i+1)));</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i),<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i+10)),<sp/>S1*10,<sp/>S2*10));</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(50)),<sp/>S1*50,<sp/>S2*50));</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(50)+</highlight><highlight class="stringliteral">&quot;.suffix&quot;</highlight><highlight class="normal">),<sp/>S1*50,<sp/>S2*50));</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cstart_str<sp/>=<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(compact_start);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cend_str<sp/>=<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(compact_start<sp/>+<sp/>9);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>cstart<sp/>=<sp/>cstart_str;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>cend<sp/>=<sp/>cend_str;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactRange(0,<sp/>&amp;cstart,<sp/>&amp;cend);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(0),<sp/>0);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" kindref="member">ASSERT_GT</ref>(NumTableFilesAtLevel(1),<sp/>0);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109" refid="namespaceleveldb_1a5c41c70ccd20279235316b8627f419da" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>ApproximateSizes_MixOfSmallAndLarge)<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" kindref="member">compression</ref><sp/>=<sp/><ref refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" kindref="member">kNoCompression</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(301);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>big1<sp/>=<sp/>RandomString(&amp;rnd,<sp/>100000);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(0),<sp/>RandomString(&amp;rnd,<sp/>10000)));</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(1),<sp/>RandomString(&amp;rnd,<sp/>10000)));</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(2),<sp/>big1));</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(3),<sp/>RandomString(&amp;rnd,<sp/>10000)));</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(4),<sp/>big1));</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(5),<sp/>RandomString(&amp;rnd,<sp/>10000)));</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(6),<sp/>RandomString(&amp;rnd,<sp/>300000)));</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(7),<sp/>RandomString(&amp;rnd,<sp/>10000)));</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>sizes<sp/>across<sp/>recovery<sp/>by<sp/>reopening<sp/>a<sp/>few<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>0;<sp/>run<sp/>&lt;<sp/>3;<sp/>run++)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(0)),<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(1)),<sp/>10000,<sp/>11000));</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(2)),<sp/>20000,<sp/>21000));</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(3)),<sp/>120000,<sp/>121000));</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(4)),<sp/>130000,<sp/>131000));</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(5)),<sp/>230000,<sp/>231000));</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(6)),<sp/>240000,<sp/>241000));</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(7)),<sp/>540000,<sp/>541000));</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(8)),<sp/>550000,<sp/>560000));</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(3),<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(5)),<sp/>110000,<sp/>111000));</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactRange(0,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147" refid="namespaceleveldb_1a899f7415195fa4d25d801246cdec721d" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>IteratorPinsRef)<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>iterator<sp/>that<sp/>will<sp/>yield<sp/>the<sp/>current<sp/>contents<sp/>of<sp/>the<sp/>DB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>());</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>force<sp/>compactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;newvalue1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i),<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)<sp/>+<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">)));<sp/></highlight><highlight class="comment">//<sp/>100K<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;newvalue2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">,<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c" kindref="member">value</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169" refid="namespaceleveldb_1ab09998970d1ace06b8082f49da0444f5" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>s1<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" kindref="member">GetSnapshot</ref>();</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>s2<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" kindref="member">GetSnapshot</ref>();</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>s3<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" kindref="member">GetSnapshot</ref>();</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>s1));</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>s2));</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>s3));</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v4&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" kindref="member">ReleaseSnapshot</ref>(s3);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>s1));</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>s2));</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v4&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" kindref="member">ReleaseSnapshot</ref>(s1);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>s2));</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v4&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" kindref="member">ReleaseSnapshot</ref>(s2);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v4&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198" refid="namespaceleveldb_1a94214aebbf6328e7ad9ba735c5e42f68" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>HiddenValuesAreRemoved)<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(301);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>FillLevels(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>big<sp/>=<sp/>RandomString(&amp;rnd,<sp/>50000);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>big);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;pastfoo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>snapshot<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" kindref="member">GetSnapshot</ref>();</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tiny&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;pastfoo2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advance<sp/>sequence<sp/>number<sp/>one<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(dbfull()-&gt;TEST_CompactMemTable());</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" kindref="member">ASSERT_GT</ref>(NumTableFilesAtLevel(0),<sp/>0);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(big,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>snapshot));</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pastfoo&quot;</highlight><highlight class="normal">),<sp/>50000,<sp/>60000));</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" kindref="member">ReleaseSnapshot</ref>(snapshot);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>tiny,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>big<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>x(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactRange(0,<sp/>NULL,<sp/>&amp;x);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>tiny<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(0),<sp/>0);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a82e45a6098aa7dbbfbcb250fc4722a0a" kindref="member">ASSERT_GE</ref>(NumTableFilesAtLevel(1),<sp/>1);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactRange(1,<sp/>NULL,<sp/>&amp;x);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>tiny<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(Size(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pastfoo&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>1000));</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="namespaceleveldb_1a216168df3713bb71f35038d91b5224f0" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>DeletionMarkers1)<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(dbfull()-&gt;TEST_CompactMemTable());</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last<sp/>=<sp/>config::kMaxMemCompactLevel;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(last),<sp/>1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>foo<sp/>=&gt;<sp/>v1<sp/>is<sp/>now<sp/>in<sp/>last<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>a<sp/>table<sp/>at<sp/>level<sp/>last-1<sp/>to<sp/>prevent<sp/>merging<sp/>with<sp/>preceding<sp/>mutation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;begin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(last),<sp/>1);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(last-1),<sp/>1);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>Delete(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>v2,<sp/>DEL,<sp/>v1<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(dbfull()-&gt;TEST_CompactMemTable());<sp/><sp/></highlight><highlight class="comment">//<sp/>Moves<sp/>to<sp/>level<sp/>last-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>v2,<sp/>DEL,<sp/>v1<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>z(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactRange(last-2,<sp/>NULL,<sp/>&amp;z);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DEL<sp/>eliminated,<sp/>but<sp/>v1<sp/>remains<sp/>because<sp/>we<sp/>aren&apos;t<sp/>compacting<sp/>that<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(DEL<sp/>can<sp/>be<sp/>eliminated<sp/>because<sp/>v2<sp/>hides<sp/>v1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>v2,<sp/>v1<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactRange(last-1,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merging<sp/>last-1<sp/>w/<sp/>last,<sp/>so<sp/>we<sp/>are<sp/>the<sp/>base<sp/>level<sp/>for<sp/>&quot;foo&quot;,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DEL<sp/>is<sp/>removed.<sp/><sp/>(as<sp/>is<sp/>v1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>v2<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258" refid="namespaceleveldb_1a4188787b0b1e1e25475a2983374065b6" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>DeletionMarkers2)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(dbfull()-&gt;TEST_CompactMemTable());</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last<sp/>=<sp/>config::kMaxMemCompactLevel;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(last),<sp/>1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>foo<sp/>=&gt;<sp/>v1<sp/>is<sp/>now<sp/>in<sp/>last<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>a<sp/>table<sp/>at<sp/>level<sp/>last-1<sp/>to<sp/>prevent<sp/>merging<sp/>with<sp/>preceding<sp/>mutation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;begin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(last),<sp/>1);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(last-1),<sp/>1);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>Delete(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>DEL,<sp/>v1<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(dbfull()-&gt;TEST_CompactMemTable());<sp/><sp/></highlight><highlight class="comment">//<sp/>Moves<sp/>to<sp/>level<sp/>last-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>DEL,<sp/>v1<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactRange(last-2,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DEL<sp/>kept:<sp/>&quot;last&quot;<sp/>file<sp/>overlaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>DEL,<sp/>v1<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactRange(last-1,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merging<sp/>last-1<sp/>w/<sp/>last,<sp/>so<sp/>we<sp/>are<sp/>the<sp/>base<sp/>level<sp/>for<sp/>&quot;foo&quot;,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DEL<sp/>is<sp/>removed.<sp/><sp/>(as<sp/>is<sp/>v1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(AllEntriesFor(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284" refid="namespaceleveldb_1a4fa4ffaab998ba44a1745937c1e9c55c" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>OverlapInLevel0)<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(config::kMaxMemCompactLevel,<sp/>2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fix<sp/>test<sp/>to<sp/>match<sp/>config&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>levels<sp/>1<sp/>and<sp/>2<sp/>to<sp/>disable<sp/>the<sp/>pushing<sp/>of<sp/>new<sp/>memtables<sp/>to<sp/>levels<sp/>&gt;<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v100&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;999&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v999&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Delete(</highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Delete(</highlight><highlight class="stringliteral">&quot;999&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;0,1,1&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>files<sp/>spanning<sp/>the<sp/>following<sp/>ranges<sp/>in<sp/>level-0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>files[0]<sp/><sp/>200<sp/>..<sp/>900</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>files[1]<sp/><sp/>300<sp/>..<sp/>500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>files<sp/>are<sp/>sorted<sp/>by<sp/>smallest<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;300&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v300&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;500&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v500&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;200&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v200&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;600&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v600&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;900&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v900&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;2,1,1&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compact<sp/>away<sp/>the<sp/>placeholder<sp/>files<sp/>we<sp/>created<sp/>initially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactRange(1,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactRange(2,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>memtable<sp/>compaction.<sp/><sp/>Before<sp/>bug-fix,<sp/>the<sp/>compaction<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>detect<sp/>the<sp/>overlap<sp/>with<sp/>level-0<sp/>files<sp/>and<sp/>would<sp/>incorrectly<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>deletion<sp/>in<sp/>a<sp/>deeper<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Delete(</highlight><highlight class="stringliteral">&quot;600&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;600&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="1323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325" refid="namespaceleveldb_1a46665ff2f4f9bd25167f82d3be16f8b2" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>L0_CompactionBug_Issue44_a)<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Delete(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Delete(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Delete(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;(a-&gt;v)&quot;</highlight><highlight class="normal">,<sp/>Contents());</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>DelayMilliseconds(1000);<sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>compaction<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;(a-&gt;v)&quot;</highlight><highlight class="normal">,<sp/>Contents());</highlight></codeline>
<codeline lineno="1340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342" refid="namespaceleveldb_1a727df67090c63a0ca4b2effdc90a3da1" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>L0_CompactionBug_Issue44_b)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/>Delete(</highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>DelayMilliseconds(1000);<sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>compaction<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;dv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>Put(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/>Delete(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>Delete(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;(-&gt;)(c-&gt;cv)&quot;</highlight><highlight class="normal">,<sp/>Contents());</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>DelayMilliseconds(1000);<sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>compaction<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;(-&gt;)(c-&gt;cv)&quot;</highlight><highlight class="normal">,<sp/>Contents());</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368" refid="namespaceleveldb_1a5cd6c2754610c66f4dd998874482c80b" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>ComparatorCheck)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NewComparator<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;leveldb.NewComparator&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>()-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindShortestSeparator(std::string*<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>l)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>()-&gt;<ref refid="structleveldb_1_1_comparator_1abdfe6076225e95b91ffd94f646063115" kindref="member">FindShortestSeparator</ref>(s,<sp/>l);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindShortSuccessor(std::string*<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>()-&gt;<ref refid="structleveldb_1_1_comparator_1a49751dd906595633161dfad943d24b3b" kindref="member">FindShortSuccessor</ref>(key);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/>NewComparator<sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>new_options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>new_options.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref><sp/>=<sp/>&amp;<ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/>TryReopen(&amp;new_options);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>());</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().find(</highlight><highlight class="stringliteral">&quot;comparator&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391" refid="namespaceleveldb_1a38772a8b86ea7658430b1fa2f1a5d83e" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>CustomComparator)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NumberComparator<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref><sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;test.NumberComparator&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ToNumber(a)<sp/>-<sp/>ToNumber(b);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindShortestSeparator(std::string*<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>l)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ToNumber(*s);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ToNumber(l);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindShortSuccessor(std::string*<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ToNumber(*key);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ToNumber(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>there<sp/>are<sp/>no<sp/>extra<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(x.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>()<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>x[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>x[x.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>()-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" kindref="member">EscapeString</ref>(x);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ignored;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(sscanf(x.<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;[%i]%c&quot;</highlight><highlight class="normal">,<sp/>&amp;val,<sp/>&amp;ignored)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" kindref="member">EscapeString</ref>(x);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/>NumberComparator<sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>new_options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>new_options.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>new_options.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref><sp/>=<sp/>&amp;<ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>new_options.<ref refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" kindref="member">filter_policy</ref><sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cannot<sp/>use<sp/>bloom<sp/>filters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>new_options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>1000;<sp/><sp/></highlight><highlight class="comment">//<sp/>Compact<sp/>more<sp/>often</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/>DestroyAndReopen(&amp;new_options);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;[10]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ten&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;[0x14]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;twenty&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;ten&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;[10]&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;ten&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;[0xa]&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;twenty&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;[20]&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;twenty&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;[0x14]&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;[15]&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;[0xf]&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;[0]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[9999]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>0;<sp/>run<sp/>&lt;<sp/>2;<sp/>run++)<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[100];</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;[%d]&quot;</highlight><highlight class="normal">,<sp/>i*10);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(buf,<sp/>buf));</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;[0]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[1000000]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446" refid="namespaceleveldb_1a34a511836c47efe81202280115290934" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>ManualCompaction)<sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(config::kMaxMemCompactLevel,<sp/>2)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Need<sp/>to<sp/>update<sp/>this<sp/>test<sp/>to<sp/>match<sp/>kMaxMemCompactLevel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>MakeTables(3,<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;1,1,1&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compaction<sp/>range<sp/>falls<sp/>before<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;1,1,1&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compaction<sp/>range<sp/>falls<sp/>after<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;1,1,1&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compaction<sp/>range<sp/>overlaps<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;p1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;p9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;0,0,1&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>a<sp/>different<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>MakeTables(3,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;1,1,2&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compact<sp/>just<sp/>the<sp/>new<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;0,0,2&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compact<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>MakeTables(1,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;0,1,2&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1aa6df0739fc0b49380c284347e411b8ed" kindref="member">CompactRange</ref>(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;0,0,1&quot;</highlight><highlight class="normal">,<sp/>FilesPerLevel());</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480" refid="namespaceleveldb_1a88d6fdcb16ed4edc65da40f383e6f23b" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>DBOpen_Options)<sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>std::string<sp/>dbname<sp/>=<sp/><ref refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" kindref="member">test::TmpDir</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/db_options_test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" kindref="member">DestroyDB</ref>(dbname,<sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>());</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>exist,<sp/>and<sp/>create_if_missing<sp/>==<sp/>false:<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref>*<sp/>db<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>opts;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>opts.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">DB::Open</ref>(opts,<sp/>dbname,<sp/>&amp;db);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(strstr(s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(db<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>exist,<sp/>and<sp/>create_if_missing<sp/>==<sp/>true:<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/>opts.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">DB::Open</ref>(opts,<sp/>dbname,<sp/>&amp;db);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(s);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(db<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>db;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>db<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>exist,<sp/>and<sp/>error_if_exists<sp/>==<sp/>true:<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>opts.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>opts.<ref refid="structleveldb_1_1_options_1aff3b99b1b30a2dba9642adc6c912d5b7" kindref="member">error_if_exists</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">DB::Open</ref>(opts,<sp/>dbname,<sp/>&amp;db);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(strstr(s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;exists&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(db<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>exist,<sp/>and<sp/>error_if_exists<sp/>==<sp/>false:<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/>opts.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>opts.<ref refid="structleveldb_1_1_options_1aff3b99b1b30a2dba9642adc6c912d5b7" kindref="member">error_if_exists</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">DB::Open</ref>(opts,<sp/>dbname,<sp/>&amp;db);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(s);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(db<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>db;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/>db<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519" refid="namespaceleveldb_1a8470163c7e8b292085a5b60f989dc828" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>Locking)<sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref>*<sp/>db2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">DB::Open</ref>(CurrentOptions(),<sp/><ref refid="repair_8cc_1a2661128a4b7cbc28cec2dfc2fa13816f" kindref="member">dbname_</ref>,<sp/>&amp;db2);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Locking<sp/>did<sp/>not<sp/>prevent<sp/>re-opening<sp/>db&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>number<sp/>of<sp/>files<sp/>does<sp/>not<sp/>grow<sp/>when<sp/>we<sp/>are<sp/>out<sp/>of<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526" refid="namespaceleveldb_1a11f56de4abca34391c0e60f311262b65" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>NoSpace)<sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref><sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_files<sp/>=<sp/>CountFiles();</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;no_space_.Release_Store(<ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>out-of-space<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels-1;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactRange(level,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;no_space_.Release_Store(NULL);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6058af464aa1533b961936d5f6c5aea0" kindref="member">ASSERT_LT</ref>(CountFiles(),<sp/>num_files<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545" refid="namespaceleveldb_1a9d69b380c464519a1b946fb1faa21cbd" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>NonWritableFileSystem)<sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref><sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;non_writable_.Release_Store(<ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>errors<sp/>for<sp/>new<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/>std::string<sp/>big(100000,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errors<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;iter<sp/>%d;<sp/>errors<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>errors);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>big).ok())<sp/>{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errors++;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DelayMilliseconds(100);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" kindref="member">ASSERT_GT</ref>(errors,<sp/>0);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;non_writable_.Release_Store(NULL);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565" refid="namespaceleveldb_1ab30f3608fe480a765f28f713415b7fe4" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>WriteSyncError)<sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>log<sp/>sync<sp/>errors<sp/>cause<sp/>the<sp/>DB<sp/>to<sp/>disallow<sp/>future<sp/>writes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(a)<sp/>Cause<sp/>log<sp/>sync<sp/>calls<sp/>to<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref><sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;data_sync_error_.Release_Store(<ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(b)<sp/>Normal<sp/>write<sp/>should<sp/>succeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref><sp/>w;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" kindref="member">Put</ref>(w,<sp/></highlight><highlight class="stringliteral">&quot;k1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;k1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(c)<sp/>Do<sp/>a<sp/>sync<sp/>write;<sp/>should<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/>w.<ref refid="structleveldb_1_1_write_options_1a07cd165ae5ed59a763001286e14ba47e" kindref="member">sync</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" kindref="member">Put</ref>(w,<sp/></highlight><highlight class="stringliteral">&quot;k2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">).<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>());</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;k1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;k2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(d)<sp/>make<sp/>sync<sp/>behave<sp/>normally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;data_sync_error_.Release_Store(NULL);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(e)<sp/>Do<sp/>a<sp/>non-sync<sp/>write;<sp/>should<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/>w.<ref refid="structleveldb_1_1_write_options_1a07cd165ae5ed59a763001286e14ba47e" kindref="member">sync</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" kindref="member">Put</ref>(w,<sp/></highlight><highlight class="stringliteral">&quot;k3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">).<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>());</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;k1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;k2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;k3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596" refid="namespaceleveldb_1a071c4940c40a4eed0d3e4e4044a227a6" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>ManifestWriteError)<sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>the<sp/>following<sp/>problem:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(a)<sp/>Compaction<sp/>produces<sp/>file<sp/>F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(b)<sp/>Log<sp/>record<sp/>containing<sp/>F<sp/>is<sp/>written<sp/>to<sp/>MANIFEST<sp/>file,<sp/>but<sp/>Sync()<sp/>fails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(c)<sp/>GC<sp/>deletes<sp/>F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(d)<sp/>After<sp/>reopening<sp/>DB,<sp/>reads<sp/>fail<sp/>since<sp/>deleted<sp/>F<sp/>is<sp/>named<sp/>in<sp/>log<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>iterate<sp/>twice.<sp/><sp/>In<sp/>the<sp/>second<sp/>iteration,<sp/>everything<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>except<sp/>the<sp/>log<sp/>record<sp/>never<sp/>makes<sp/>it<sp/>to<sp/>the<sp/>MANIFEST<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>0;<sp/>iter<sp/>&lt;<sp/>2;<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref>*<sp/>error_type<sp/>=<sp/>(iter<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>&amp;<ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;manifest_sync_error_</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&amp;<ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;manifest_write_error_;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>foo=&gt;bar<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref><sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/>options.create_if_missing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>options.error_if_exists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>DestroyAndReopen(&amp;options);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Memtable<sp/>compaction<sp/>(will<sp/>succeed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last<sp/>=<sp/>config::kMaxMemCompactLevel;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(NumTableFilesAtLevel(last),<sp/>1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>foo=&gt;bar<sp/>is<sp/>now<sp/>in<sp/>last<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merging<sp/>compaction<sp/>(will<sp/>fail)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>error_type-&gt;<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(<ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>dbfull()-&gt;TEST_CompactRange(last,<sp/>NULL,<sp/>NULL);<sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recovery:<sp/>should<sp/>not<sp/>lose<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>error_type-&gt;<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(NULL);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637" refid="namespaceleveldb_1a8e750f4502e214132281fd755d26c175" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>MissingSSTFile)<sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>the<sp/>memtable<sp/>to<sp/>disk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>Close();</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(DeleteAnSSTFile());</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" kindref="member">paranoid_checks</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/>TryReopen(&amp;options);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>());</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>().find(</highlight><highlight class="stringliteral">&quot;issing&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="1653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655" refid="namespaceleveldb_1ab4a8284a6c982c710e6e84af0d6040a9" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>StillReadSST)<sp/>{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>the<sp/>memtable<sp/>to<sp/>disk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/>Close();</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" kindref="member">ASSERT_GT</ref>(RenameLDBToSST(),<sp/>0);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" kindref="member">paranoid_checks</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/>TryReopen(&amp;options);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>());</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>Get(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671" refid="namespaceleveldb_1a47755684dc15db851e0174ea9475e97c" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>FilesDeletedAfterCompaction)<sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_files<sp/>=<sp/>CountFiles();</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(CountFiles(),<sp/>num_files);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682" refid="namespaceleveldb_1a6d54978f51e046c170696cbb320f23f1" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>BloomFilter)<sp/>{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;count_random_reads_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options<sp/>=<sp/>CurrentOptions();</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref><sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a4e87749ebac1ba28dff6bb63eb2059e5" kindref="member">block_cache</ref><sp/>=<sp/><ref refid="namespaceleveldb_1a231e1b41322a8b342c91a15a78e425d4" kindref="member">NewLRUCache</ref>(0);<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>cache<sp/>hits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" kindref="member">filter_policy</ref><sp/>=<sp/><ref refid="namespaceleveldb_1ae6b34bf2331983721554f284b1eaa1a1" kindref="member">NewBloomFilterPolicy</ref>(10);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/>Reopen(&amp;options);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>multiple<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i),<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)));</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>Compact(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i<sp/>+=<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(Put(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i),<sp/><ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)));</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/>dbfull()-&gt;TEST_CompactMemTable();</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>auto<sp/>compactions<sp/>triggered<sp/>by<sp/>seeks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;delay_data_sync_.Release_Store(<ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lookup<sp/>present<sp/>keys.<sp/><sp/>Should<sp/>rarely<sp/>read<sp/>from<sp/>small<sp/>sstable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;random_read_counter_.Reset();</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i),<sp/>Get(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)));</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reads<sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;random_read_counter_.Read();</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>present<sp/>=&gt;<sp/>%d<sp/>reads\n&quot;</highlight><highlight class="normal">,<sp/>N,<sp/>reads);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a82e45a6098aa7dbbfbcb250fc4722a0a" kindref="member">ASSERT_GE</ref>(reads,<sp/>N);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" kindref="member">ASSERT_LE</ref>(reads,<sp/>N<sp/>+<sp/>2*N/100);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lookup<sp/>present<sp/>keys.<sp/><sp/>Should<sp/>rarely<sp/>read<sp/>from<sp/>either<sp/>sstable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;random_read_counter_.Reset();</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(</highlight><highlight class="stringliteral">&quot;NOT_FOUND&quot;</highlight><highlight class="normal">,<sp/>Get(<ref refid="namespaceleveldb_1a7e9a9725b13fa0bd922d885280dfab95" kindref="member">Key</ref>(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.missing&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>reads<sp/>=<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;random_read_counter_.Read();</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>missing<sp/>=&gt;<sp/>%d<sp/>reads\n&quot;</highlight><highlight class="normal">,<sp/>N,<sp/>reads);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" kindref="member">ASSERT_LE</ref>(reads,<sp/>3*N/100);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;delay_data_sync_.Release_Store(NULL);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/>Close();</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>options.<ref refid="structleveldb_1_1_options_1a4e87749ebac1ba28dff6bb63eb2059e5" kindref="member">block_cache</ref>;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>options.<ref refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" kindref="member">filter_policy</ref>;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multi-threaded<sp/>test:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumThreads<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kTestSeconds<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumKeys<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MTState<sp/>{</highlight></codeline>
<codeline lineno="1737" refid="db__test_8cc_1a9cc668c18debdbcad21b45fdd8158648" refkind="member"><highlight class="normal"><sp/><sp/>DBTest*<sp/><ref refid="db__test_8cc_1a9cc668c18debdbcad21b45fdd8158648" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="1738" refid="db__test_8cc_1af6130d1029661dab14372467f0453ffa" refkind="member"><highlight class="normal"><sp/><sp/>port::AtomicPointer<sp/><ref refid="db__test_8cc_1af6130d1029661dab14372467f0453ffa" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="1739" refid="db__test_8cc_1a62ffeaac8bdc204faeb004239f7c04be" refkind="member"><highlight class="normal"><sp/><sp/>port::AtomicPointer<sp/><ref refid="db__test_8cc_1a62ffeaac8bdc204faeb004239f7c04be" kindref="member">counter</ref>[kNumThreads];</highlight></codeline>
<codeline lineno="1740" refid="db__test_8cc_1a3eb5ea5acdb558ac205ffb1c56790fd3" refkind="member"><highlight class="normal"><sp/><sp/>port::AtomicPointer<sp/><ref refid="db__test_8cc_1a3eb5ea5acdb558ac205ffb1c56790fd3" kindref="member">thread_done</ref>[kNumThreads];</highlight></codeline>
<codeline lineno="1741"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MTThread<sp/>{</highlight></codeline>
<codeline lineno="1744" refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" refkind="member"><highlight class="normal"><sp/><sp/>MTState*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="1745" refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MTThreadBody(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>MTThread*<sp/>t<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">MTThread*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>t-&gt;id;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/>DB*<sp/>db<sp/>=<sp/>t-&gt;state-&gt;test-&gt;db_;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/>uintptr_t<sp/><ref refid="db__test_8cc_1a62ffeaac8bdc204faeb004239f7c04be" kindref="member">counter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;...<sp/>starting<sp/>thread<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/>Random<sp/>rnd(1000<sp/>+<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valbuf[1500];</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t-&gt;state-&gt;stop.Acquire_Load()<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;state-&gt;counter[<ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>].Release_Store(reinterpret_cast&lt;void*&gt;(counter));</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key<sp/>=<sp/>rnd.Uniform(kNumKeys);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>keybuf[20];</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(keybuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(keybuf),<sp/></highlight><highlight class="stringliteral">&quot;%016d&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rnd.OneIn(2))<sp/>{</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>values<sp/>of<sp/>the<sp/>form<sp/>&lt;key,<sp/>my<sp/>id,<sp/>counter&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>add<sp/>some<sp/>padding<sp/>for<sp/>force<sp/>compactions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(valbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valbuf),<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%-1000d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>static_cast&lt;int&gt;(counter));</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(db-&gt;Put(WriteOptions(),<sp/>Slice(keybuf),<sp/>Slice(valbuf)));</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>value<sp/>and<sp/>verify<sp/>that<sp/>it<sp/>matches<sp/>the<sp/>pattern<sp/>written<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>s<sp/>=<sp/>db-&gt;Get(ReadOptions(),<sp/>Slice(keybuf),<sp/>&amp;value);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.IsNotFound())<sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Key<sp/>has<sp/>not<sp/>yet<sp/>been<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>writer<sp/>thread<sp/>counter<sp/>is<sp/>&gt;=<sp/>the<sp/>counter<sp/>in<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(s);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/>w,<sp/>c;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(3,<sp/>sscanf(value.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/>&amp;k,<sp/>&amp;w,<sp/>&amp;c))<sp/>&lt;&lt;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(k,<sp/>key);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a82e45a6098aa7dbbfbcb250fc4722a0a" kindref="member">ASSERT_GE</ref>(w,<sp/>0);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6058af464aa1533b961936d5f6c5aea0" kindref="member">ASSERT_LT</ref>(w,<sp/>kNumThreads);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ad71f56861528c854666f15f4bad921c2" kindref="member">ASSERT_LE</ref>(static_cast&lt;uintptr_t&gt;(c),<sp/>reinterpret_cast&lt;uintptr_t&gt;(</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;state-&gt;counter[w].Acquire_Load()));</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/>t-&gt;state-&gt;thread_done[<ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>].Release_Store(t);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;...<sp/>stopping<sp/>thread<sp/>%d<sp/>after<sp/>%d<sp/>ops\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(counter));</highlight></codeline>
<codeline lineno="1791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795" refid="namespaceleveldb_1a9bee47c386abe6004d884f2552bd8184" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>MultiThreaded)<sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>MTState<sp/>mt;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>mt.test<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>mt.stop.Release_Store(0);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>kNumThreads;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++)<sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mt.counter[<ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>].Release_Store(0);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mt.thread_done[<ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>].Release_Store(0);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/>MTThread<sp/>thread[kNumThreads];</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>kNumThreads;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++)<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thread[<ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>].state<sp/>=<sp/>&amp;mt;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thread[<ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>].id<sp/>=<sp/><ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;<ref refid="classleveldb_1_1_env_1a25eafd1622a2cf2a415ee8b2325bc808" kindref="member">StartThread</ref>(MTThreadBody,<sp/>&amp;thread[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>them<sp/>run<sp/>for<sp/>a<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>DelayMilliseconds(kTestSeconds<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>the<sp/>threads<sp/>and<sp/>wait<sp/>for<sp/>them<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>mt.stop.Release_Store(&amp;mt);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>kNumThreads;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++)<sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mt.thread_done[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].Acquire_Load()<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DelayMilliseconds(100);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="1825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref>;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831" refid="classleveldb_1_1_model_d_b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_model_d_b" kindref="compound">ModelDB</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref><sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1833" refid="classleveldb_1_1_model_d_b_1_1_model_snapshot" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_model_d_b_1_1_model_snapshot" kindref="compound">ModelSnapshot</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref><sp/>{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1835" refid="classleveldb_1_1_model_d_b_1_1_model_snapshot_1a7ae02397c293072b78874d0c073a10c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref><sp/><ref refid="classleveldb_1_1_model_d_b_1_1_model_snapshot_1a7ae02397c293072b78874d0c073a10c5" kindref="member">map_</ref>;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838" refid="classleveldb_1_1_model_d_b_1ac0117ce964631ff7977b465de053a282" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_model_d_b_1ac0117ce964631ff7977b465de053a282" kindref="member">ModelDB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options):<sp/>options_(options)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="1839" refid="classleveldb_1_1_model_d_b_1a35e9042c7ed06e8324d5e40318771825" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_model_d_b_1a35e9042c7ed06e8324d5e40318771825" kindref="member">~ModelDB</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="1840" refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253" kindref="member">Put</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>&amp;<sp/>o,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>k,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" kindref="member">DB::Put</ref>(o,<sp/>k,<sp/>v);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843" refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6" kindref="member">Delete</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>&amp;<sp/>o,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" kindref="member">DB::Delete</ref>(o,<sp/>key);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846" refid="classleveldb_1_1_model_d_b_1ab7744a74b5c0d2cd812dd87e83ca561b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_model_d_b_1ab7744a74b5c0d2cd812dd87e83ca561b" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key,<sp/>std::string*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>implemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a9e5beb5b2e758f041e0c012426e7b1b8" kindref="member">Status::NotFound</ref>(key);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1851" refid="classleveldb_1_1_model_d_b_1a5acf23bae313f2e2f3ea9f0ab95450cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_model_d_b_1a5acf23bae313f2e2f3ea9f0ab95450cf" kindref="member">NewIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;<sp/>options)<sp/>{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="structleveldb_1_1_read_options_1a1fa3fffc267dff89fce7c39d7c7b5b50" kindref="member">snapshot</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref>*<sp/>saved<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref>;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*saved<sp/>=<sp/>map_;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ModelIter(saved,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref>*<sp/>snapshot_state<sp/>=</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_model_d_b_1_1_model_snapshot" kindref="compound">ModelSnapshot</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(options.<ref refid="structleveldb_1_1_read_options_1a1fa3fffc267dff89fce7c39d7c7b5b50" kindref="member">snapshot</ref>)-&gt;map_);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ModelIter(snapshot_state,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1862" refid="classleveldb_1_1_model_d_b_1aa82849af6a149d122e65a4aac412903f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/><ref refid="classleveldb_1_1_model_d_b_1aa82849af6a149d122e65a4aac412903f" kindref="member">GetSnapshot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_model_d_b_1_1_model_snapshot" kindref="compound">ModelSnapshot</ref>*<sp/>snapshot<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_model_d_b_1_1_model_snapshot" kindref="compound">ModelSnapshot</ref>;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>snapshot-&gt;<ref refid="classleveldb_1_1_model_d_b_1_1_model_snapshot_1a7ae02397c293072b78874d0c073a10c5" kindref="member">map_</ref><sp/>=<sp/>map_;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snapshot;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868" refid="classleveldb_1_1_model_d_b_1a3f5d86ce612baaa88c11601c9a59df12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_model_d_b_1a3f5d86ce612baaa88c11601c9a59df12" kindref="member">ReleaseSnapshot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>snapshot)<sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_model_d_b_1_1_model_snapshot" kindref="compound">ModelSnapshot</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(snapshot);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1871" refid="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be" kindref="member">Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>&amp;<sp/>options,<sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref>*<sp/>batch)<sp/>{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Handler<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_write_batch_1_1_handler" kindref="compound">WriteBatch::Handler</ref><sp/>{</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref>*<sp/>map_;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253" kindref="member">Put</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*map_)[key.<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>()]<sp/>=<sp/>value.<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6" kindref="member">Delete</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_-&gt;erase(key.<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>Handler<sp/>handler;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/>handler.map_<sp/>=<sp/>&amp;map_;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>batch-&gt;<ref refid="classleveldb_1_1_write_batch_1ac6cb5a360bb095f4e9a6e817c4322a9d" kindref="member">Iterate</ref>(&amp;handler);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887" refid="classleveldb_1_1_model_d_b_1a5c83a50a08e45c2564c39a650ea55b86" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_model_d_b_1a5c83a50a08e45c2564c39a650ea55b86" kindref="member">GetProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>property,<sp/>std::string*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1890" refid="classleveldb_1_1_model_d_b_1aeb5502077fae602c5ca3c1153f29b693" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_model_d_b_1aeb5502077fae602c5ca3c1153f29b693" kindref="member">GetApproximateSizes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_range" kindref="compound">Range</ref>*<sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>*<sp/>sizes)<sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizes[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1895" refid="classleveldb_1_1_model_d_b_1a7a04a6e5227079f861c26b920df6b833" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_model_d_b_1a7a04a6e5227079f861c26b920df6b833" kindref="member">CompactRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/><ref refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" kindref="member">start</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ModelIter:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref><sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/>ModelIter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref>*<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>owned)</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>map_(map),<sp/>owned_(owned),<sp/><ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref>(map_-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>~ModelIter()<sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(owned_)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>map_;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Valid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref><sp/>!=<sp/>map_-&gt;end();<sp/>}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SeekToFirst()<sp/>{<sp/><ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref><sp/>=<sp/>map_-&gt;begin();<sp/>}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SeekToLast()<sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map_-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref><sp/>=<sp/>map_-&gt;end();</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref><sp/>=<sp/>map_-&gt;find(map_-&gt;rbegin()-&gt;first);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Seek(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref><sp/>=<sp/>map_-&gt;lower_bound(k.ToString());</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Next()<sp/>{<sp/>++<ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Prev()<sp/>{<sp/>--<ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Slice<sp/>key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref>-&gt;first;<sp/>}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Slice<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref>-&gt;second;<sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Status<sp/>status()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>map_;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>owned_;<sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>we<sp/>own<sp/>map_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/>KVMap::const_iterator<sp/><ref refid="db__iter_8cc_1adcd6787cae081feb1d6a04d18a1ed50f" kindref="member">iter_</ref>;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Options<sp/>options_;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref><sp/>map_;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>RandomKey(Random*<sp/>rnd)<sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>(rnd-&gt;OneIn(3)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Short<sp/>sometimes<sp/>to<sp/>encourage<sp/>collisions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(rnd-&gt;OneIn(100)<sp/>?<sp/>rnd-&gt;Skewed(10)<sp/>:<sp/>rnd-&gt;Uniform(10)));</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1test_1ae6faec2042472bb9c3da124a677c4b96" kindref="member">test::RandomKey</ref>(rnd,<sp/>len);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CompareIterators(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DB*<sp/>model,</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DB*<sp/>db,</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Snapshot*<sp/>model_snap,</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Snapshot*<sp/>db_snap)<sp/>{</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/>ReadOptions<sp/>options;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/>options.snapshot<sp/>=<sp/>model_snap;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/>Iterator*<sp/>miter<sp/>=<sp/>model-&gt;NewIterator(options);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/>options.snapshot<sp/>=<sp/>db_snap;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/>Iterator*<sp/>dbiter<sp/>=<sp/>db-&gt;NewIterator(options);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(miter-&gt;SeekToFirst(),<sp/>dbiter-&gt;SeekToFirst();</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>&amp;&amp;<sp/>miter-&gt;Valid()<sp/>&amp;&amp;<sp/>dbiter-&gt;Valid();</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>miter-&gt;Next(),<sp/>dbiter-&gt;Next())<sp/>{</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(miter-&gt;key().compare(dbiter-&gt;key())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;step<sp/>%d:<sp/>Key<sp/>mismatch:<sp/>&apos;%s&apos;<sp/>vs.<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step,</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" kindref="member">EscapeString</ref>(miter-&gt;key()).c_str(),</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" kindref="member">EscapeString</ref>(dbiter-&gt;key()).c_str());</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(miter-&gt;value().compare(dbiter-&gt;value())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;step<sp/>%d:<sp/>Value<sp/>mismatch<sp/>for<sp/>key<sp/>&apos;%s&apos;:<sp/>&apos;%s&apos;<sp/>vs.<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step,</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" kindref="member">EscapeString</ref>(miter-&gt;key()).c_str(),</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" kindref="member">EscapeString</ref>(miter-&gt;value()).c_str(),</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" kindref="member">EscapeString</ref>(miter-&gt;value()).c_str());</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)<sp/>{</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(miter-&gt;Valid()<sp/>!=<sp/>dbiter-&gt;Valid())<sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;step<sp/>%d:<sp/>Mismatch<sp/>at<sp/>end<sp/>of<sp/>iterators:<sp/>%d<sp/>vs.<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step,<sp/>miter-&gt;Valid(),<sp/>dbiter-&gt;Valid());</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>entries<sp/>compared:<sp/>ok=%d\n&quot;</highlight><highlight class="normal">,<sp/>count,<sp/>ok);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>miter;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dbiter;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988" refid="namespaceleveldb_1a028ed215c12e1998d7073b18fce4c24c" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_d_b_test" kindref="compound">DBTest</ref>,<sp/>Randomized)<sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(<ref refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" kindref="member">test::RandomSeed</ref>());</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_model_d_b" kindref="compound">ModelDB</ref><sp/>model(CurrentOptions());</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>model_snap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>db_snap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>k,<sp/>v;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>0;<sp/>step<sp/>&lt;<sp/>N;<sp/>step++)<sp/>{</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>%<sp/>100<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>%d<sp/>of<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>step,<sp/>N);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(sanjay):<sp/>Test<sp/>Get()<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>rnd.<ref refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" kindref="member">Uniform</ref>(100);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&lt;<sp/>45)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>RandomKey(&amp;rnd);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>RandomString(&amp;rnd,</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnd.<ref refid="classleveldb_1_1_random_1abed35e25c0e08c2c4cb6d06b62cd1b73" kindref="member">OneIn</ref>(20)</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>100<sp/>+<sp/>rnd.<ref refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" kindref="member">Uniform</ref>(100)</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rnd.<ref refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" kindref="member">Uniform</ref>(8));</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(model.<ref refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253" kindref="member">Put</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>k,<sp/>v));</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" kindref="member">Put</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>k,<sp/>v));</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&lt;<sp/>90)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>RandomKey(&amp;rnd);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(model.<ref refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6" kindref="member">Delete</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>k));</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1af050f77e8c22bd6638fed5a46a59399d" kindref="member">Delete</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>k));</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multi-element<sp/>batch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref><sp/>b;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>rnd.<ref refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" kindref="member">Uniform</ref>(8);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0<sp/>||<sp/>!rnd.<ref refid="classleveldb_1_1_random_1abed35e25c0e08c2c4cb6d06b62cd1b73" kindref="member">OneIn</ref>(10))<sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>RandomKey(&amp;rnd);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Periodically<sp/>re-use<sp/>the<sp/>same<sp/>key<sp/>from<sp/>the<sp/>previous<sp/>iter,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>multiple<sp/>entries<sp/>in<sp/>the<sp/>write<sp/>batch<sp/>for<sp/>the<sp/>same<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rnd.<ref refid="classleveldb_1_1_random_1abed35e25c0e08c2c4cb6d06b62cd1b73" kindref="member">OneIn</ref>(2))<sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>RandomString(&amp;rnd,<sp/>rnd.<ref refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" kindref="member">Uniform</ref>(10));</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(k,<sp/>v);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" kindref="member">Delete</ref>(k);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(model.<ref refid="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be" kindref="member">Write</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>&amp;b));</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(<ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1ac0d0b472717099d6a02ad9dace4e8ef4" kindref="member">Write</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>&amp;b));</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((step<sp/>%<sp/>100)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(CompareIterators(step,<sp/>&amp;model,<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>,<sp/>NULL,<sp/>NULL));</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(CompareIterators(step,<sp/>&amp;model,<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>,<sp/>model_snap,<sp/>db_snap));</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>a<sp/>snapshot<sp/>from<sp/>each<sp/>DB<sp/>this<sp/>time<sp/>that<sp/>we&apos;ll<sp/>use<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>we<sp/>compare<sp/>things,<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>current<sp/>state<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preserved<sp/>with<sp/>the<sp/>snapshot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model_snap<sp/>!=<sp/>NULL)<sp/>model.<ref refid="classleveldb_1_1_model_d_b_1a3f5d86ce612baaa88c11601c9a59df12" kindref="member">ReleaseSnapshot</ref>(model_snap);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(db_snap<sp/>!=<sp/>NULL)<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" kindref="member">ReleaseSnapshot</ref>(db_snap);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reopen();</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(CompareIterators(step,<sp/>&amp;model,<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>,<sp/>NULL,<sp/>NULL));</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_snap<sp/>=<sp/>model.<ref refid="classleveldb_1_1_model_d_b_1aa82849af6a149d122e65a4aac412903f" kindref="member">GetSnapshot</ref>();</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db_snap<sp/>=<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" kindref="member">GetSnapshot</ref>();</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model_snap<sp/>!=<sp/>NULL)<sp/>model.<ref refid="classleveldb_1_1_model_d_b_1a3f5d86ce612baaa88c11601c9a59df12" kindref="member">ReleaseSnapshot</ref>(model_snap);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(db_snap<sp/>!=<sp/>NULL)<sp/><ref refid="db__iter_8cc_1a800a4b7944923551d5251c8a5ab7e12d" kindref="member">db_</ref>-&gt;<ref refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" kindref="member">ReleaseSnapshot</ref>(db_snap);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ChangeOptions());</highlight></codeline>
<codeline lineno="2057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059" refid="namespaceleveldb_1a706c78e756ff2dcd2185cdf2265c0b8a" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespaceleveldb_1a706c78e756ff2dcd2185cdf2265c0b8a" kindref="member">MakeKey</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[30];</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%016u&quot;</highlight><highlight class="normal">,<sp/>num);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(buf);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065" refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" kindref="member">BM_LogAndApply</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iters,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_base_files)<sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/>std::string<sp/>dbname<sp/>=<sp/><ref refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" kindref="member">test::TmpDir</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/leveldb_test_benchmark&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" kindref="member">DestroyDB</ref>(dbname,<sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>());</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref>*<sp/>db<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>opts;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/>opts.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">DB::Open</ref>(opts,<sp/>dbname,<sp/>&amp;db);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(s);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(db<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>db;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/>db<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>*<sp/>env<sp/>=<sp/><ref refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" kindref="member">Env::Default</ref>();</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_mutex" kindref="compound">port::Mutex</ref><sp/><ref refid="db__bench_8cc_1a1a5c2f3b52d2dec1d9896cec4b02d17e" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mu);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref><sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>(<ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>());</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref><sp/>vset(dbname,<sp/>&amp;options,<sp/>NULL,<sp/>&amp;cmp);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(vset.<ref refid="classleveldb_1_1_version_set_1a955ff8620ec56742cdc48da0e74ab40b" kindref="member">Recover</ref>());</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref><sp/>vbase;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>fnum<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_base_files;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/><ref refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" kindref="member">start</ref>(<ref refid="namespaceleveldb_1a706c78e756ff2dcd2185cdf2265c0b8a" kindref="member">MakeKey</ref>(2*fnum),<sp/>1,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref>);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>limit(<ref refid="namespaceleveldb_1a706c78e756ff2dcd2185cdf2265c0b8a" kindref="member">MakeKey</ref>(2*fnum+1),<sp/>1,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" kindref="member">kTypeDeletion</ref>);</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>vbase.AddFile(2,<sp/>fnum++,<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>file<sp/>size<sp/>*/</highlight><highlight class="normal">,<sp/>start,<sp/>limit);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" kindref="member">ASSERT_OK</ref>(vset.<ref refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" kindref="member">LogAndApply</ref>(&amp;vbase,<sp/>&amp;mu));</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>start_micros<sp/>=<sp/>env-&gt;<ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>();</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>iters;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref><sp/>vedit;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>vedit.<ref refid="classleveldb_1_1_version_edit_1ac222bfd1055114d57aadbd124f24ad0c" kindref="member">DeleteFile</ref>(2,<sp/>fnum);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/><ref refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" kindref="member">start</ref>(<ref refid="namespaceleveldb_1a706c78e756ff2dcd2185cdf2265c0b8a" kindref="member">MakeKey</ref>(2*fnum),<sp/>1,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref>);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>limit(<ref refid="namespaceleveldb_1a706c78e756ff2dcd2185cdf2265c0b8a" kindref="member">MakeKey</ref>(2*fnum+1),<sp/>1,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" kindref="member">kTypeDeletion</ref>);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>vedit.<ref refid="classleveldb_1_1_version_edit_1a4cd5cc92761b7ae5b5f9cff46cb88263" kindref="member">AddFile</ref>(2,<sp/>fnum++,<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>file<sp/>size<sp/>*/</highlight><highlight class="normal">,<sp/>start,<sp/>limit);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>vset.<ref refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" kindref="member">LogAndApply</ref>(&amp;vedit,<sp/>&amp;mu);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>stop_micros<sp/>=<sp/>env-&gt;<ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>();</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>us<sp/>=<sp/>stop_micros<sp/>-<sp/>start_micros;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[16];</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>num_base_files);</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BM_LogAndApply/%-6s<sp/><sp/><sp/>%8d<sp/>iters<sp/>:<sp/>%9u<sp/>us<sp/>(%7.0f<sp/>us<sp/>/<sp/>iter)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf,<sp/>iters,<sp/>us,<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)us)<sp/>/<sp/>iters);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118" refid="db__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="db__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>std::string(argv[1])<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;--benchmark&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" kindref="member">leveldb::BM_LogAndApply</ref>(1000,<sp/>1);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" kindref="member">leveldb::BM_LogAndApply</ref>(1000,<sp/>100);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" kindref="member">leveldb::BM_LogAndApply</ref>(1000,<sp/>10000);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" kindref="member">leveldb::BM_LogAndApply</ref>(100,<sp/>100000);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1test_1a3329162c54a0bff42d41c2ac86b2580a" kindref="member">leveldb::test::RunAllTests</ref>();</highlight></codeline>
<codeline lineno="2128"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc"/>
  </compounddef>
</doxygen>
