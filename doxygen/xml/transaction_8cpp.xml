<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="transaction_8cpp" kind="file" language="C++">
    <compoundname>transaction.cpp</compoundname>
    <includes refid="transaction_8h" local="yes">transaction.h</includes>
    <incdepgraph>
      <node id="41774">
        <label>list</label>
      </node>
      <node id="41743">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="41726">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41741" relation="include">
        </childnode>
        <childnode refid="41728" relation="include">
        </childnode>
      </node>
      <node id="41733">
        <label>limits</label>
      </node>
      <node id="41761">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="41734" relation="include">
        </childnode>
        <childnode refid="41741" relation="include">
        </childnode>
      </node>
      <node id="41762">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="41763" relation="include">
        </childnode>
        <childnode refid="41734" relation="include">
        </childnode>
        <childnode refid="41745" relation="include">
        </childnode>
      </node>
      <node id="41725">
        <label>transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="41726" relation="include">
        </childnode>
        <childnode refid="41749" relation="include">
        </childnode>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41752" relation="include">
        </childnode>
        <childnode refid="41753" relation="include">
        </childnode>
        <childnode refid="41789" relation="include">
        </childnode>
        <childnode refid="41787" relation="include">
        </childnode>
      </node>
      <node id="41753">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="41728" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
        <childnode refid="41734" relation="include">
        </childnode>
        <childnode refid="41754" relation="include">
        </childnode>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41756" relation="include">
        </childnode>
        <childnode refid="41765" relation="include">
        </childnode>
        <childnode refid="41767" relation="include">
        </childnode>
        <childnode refid="41786" relation="include">
        </childnode>
      </node>
      <node id="41785">
        <label>openssl/rand.h</label>
      </node>
      <node id="41750">
        <label>assert.h</label>
      </node>
      <node id="41738">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="41747">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="41748" relation="include">
        </childnode>
        <childnode refid="41728" relation="include">
        </childnode>
      </node>
      <node id="41744">
        <label>sys/mman.h</label>
      </node>
      <node id="41741">
        <label>stdlib.h</label>
      </node>
      <node id="41754">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="41724">
        <label>/home/dev/ds-160209/src/primitives/transaction.cpp</label>
        <link refid="transaction.cpp"/>
        <childnode refid="41725" relation="include">
        </childnode>
      </node>
      <node id="41784">
        <label>openssl/crypto.h</label>
      </node>
      <node id="41780">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="41758">
        <label>openssl/sha.h</label>
      </node>
      <node id="41732">
        <label>cassert</label>
      </node>
      <node id="41751">
        <label>stdexcept</label>
      </node>
      <node id="41767">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41769" relation="include">
        </childnode>
        <childnode refid="41770" relation="include">
        </childnode>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41771" relation="include">
        </childnode>
        <childnode refid="41726" relation="include">
        </childnode>
        <childnode refid="41730" relation="include">
        </childnode>
        <childnode refid="41774" relation="include">
        </childnode>
        <childnode refid="41775" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
        <childnode refid="41728" relation="include">
        </childnode>
        <childnode refid="41776" relation="include">
        </childnode>
        <childnode refid="41777" relation="include">
        </childnode>
        <childnode refid="41778" relation="include">
        </childnode>
        <childnode refid="41779" relation="include">
        </childnode>
        <childnode refid="41780" relation="include">
        </childnode>
        <childnode refid="41781" relation="include">
        </childnode>
        <childnode refid="41782" relation="include">
        </childnode>
        <childnode refid="41783" relation="include">
        </childnode>
        <childnode refid="41784" relation="include">
        </childnode>
        <childnode refid="41785" relation="include">
        </childnode>
        <childnode refid="41766" relation="include">
        </childnode>
        <childnode refid="41734" relation="include">
        </childnode>
      </node>
      <node id="41779">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="41728">
        <label>string</label>
      </node>
      <node id="41730">
        <label>map</label>
      </node>
      <node id="41776">
        <label>boost/thread.hpp</label>
      </node>
      <node id="41763">
        <label>stddef.h</label>
      </node>
      <node id="41755">
        <label>boost/variant.hpp</label>
      </node>
      <node id="41727">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="41728" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
        <childnode refid="41730" relation="include">
        </childnode>
        <childnode refid="41731" relation="include">
        </childnode>
        <childnode refid="41732" relation="include">
        </childnode>
        <childnode refid="41733" relation="include">
        </childnode>
        <childnode refid="41734" relation="include">
        </childnode>
        <childnode refid="41735" relation="include">
        </childnode>
        <childnode refid="41736" relation="include">
        </childnode>
        <childnode refid="41737" relation="include">
        </childnode>
        <childnode refid="41738" relation="include">
        </childnode>
        <childnode refid="41739" relation="include">
        </childnode>
        <childnode refid="41747" relation="include">
        </childnode>
      </node>
      <node id="41745">
        <label>limits.h</label>
      </node>
      <node id="41770">
        <label>sys/resource.h</label>
      </node>
      <node id="41781">
        <label>openssl/bio.h</label>
      </node>
      <node id="41757">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="41749" relation="include">
        </childnode>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41759" relation="include">
        </childnode>
        <childnode refid="41760" relation="include">
        </childnode>
        <childnode refid="41761" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41764" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
      </node>
      <node id="41786">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="41767" relation="include">
        </childnode>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41741" relation="include">
        </childnode>
        <childnode refid="41787" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
        <childnode refid="41788" relation="include">
        </childnode>
      </node>
      <node id="41768">
        <label>sys/types.h</label>
      </node>
      <node id="41742">
        <label>string.h</label>
      </node>
      <node id="41748">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="41736">
        <label>cstdio</label>
      </node>
      <node id="41783">
        <label>openssl/buffer.h</label>
      </node>
      <node id="41737">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="41778">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="41756">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41749" relation="include">
        </childnode>
        <childnode refid="41751" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
      </node>
      <node id="41746">
        <label>unistd.h</label>
      </node>
      <node id="41729">
        <label>vector</label>
      </node>
      <node id="41765">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41749" relation="include">
        </childnode>
        <childnode refid="41766" relation="include">
        </childnode>
        <childnode refid="41751" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
        <childnode refid="41734" relation="include">
        </childnode>
      </node>
      <node id="41759">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="41777">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="41775">
        <label>utility</label>
      </node>
      <node id="41773">
        <label>sstream</label>
      </node>
      <node id="41782">
        <label>openssl/evp.h</label>
      </node>
      <node id="41771">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="41732" relation="include">
        </childnode>
        <childnode refid="41772" relation="include">
        </childnode>
        <childnode refid="41773" relation="include">
        </childnode>
        <childnode refid="41751" relation="include">
        </childnode>
      </node>
      <node id="41734">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="41764">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="41734" relation="include">
        </childnode>
        <childnode refid="41763" relation="include">
        </childnode>
        <childnode refid="41745" relation="include">
        </childnode>
      </node>
      <node id="41769">
        <label>sys/time.h</label>
      </node>
      <node id="41772">
        <label>iostream</label>
      </node>
      <node id="41749">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="41750" relation="include">
        </childnode>
        <childnode refid="41735" relation="include">
        </childnode>
        <childnode refid="41751" relation="include">
        </childnode>
        <childnode refid="41734" relation="include">
        </childnode>
        <childnode refid="41728" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
      </node>
      <node id="41766">
        <label>openssl/bn.h</label>
      </node>
      <node id="41789">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="41734" relation="include">
        </childnode>
      </node>
      <node id="41739">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="41740" relation="include">
        </childnode>
        <childnode refid="41742" relation="include">
        </childnode>
        <childnode refid="41728" relation="include">
        </childnode>
        <childnode refid="41743" relation="include">
        </childnode>
        <childnode refid="41730" relation="include">
        </childnode>
        <childnode refid="41744" relation="include">
        </childnode>
        <childnode refid="41745" relation="include">
        </childnode>
        <childnode refid="41746" relation="include">
        </childnode>
      </node>
      <node id="41731">
        <label>set</label>
      </node>
      <node id="41760">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="41734" relation="include">
        </childnode>
        <childnode refid="41741" relation="include">
        </childnode>
      </node>
      <node id="41752">
        <label>util.h</label>
      </node>
      <node id="41787">
        <label>stdio.h</label>
      </node>
      <node id="41740">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="41741" relation="include">
        </childnode>
      </node>
      <node id="41735">
        <label>cstring</label>
      </node>
      <node id="41788">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="transaction_8cpp_1a746fd004a62173bb42801259780a3336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 SignatureHash</definition>
        <argsstring>(const CScript &amp;scriptCode, const CTransaction &amp;txTo, unsigned int nIn, int nHashType)</argsstring>
        <name>SignatureHash</name>
        <param>
          <type>const <ref refid="class_c_script" kindref="compound">CScript</ref> &amp;</type>
          <declname>scriptCode</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txTo</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nHashType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/transaction.cpp" line="152" column="1" bodyfile="/home/dev/ds-160209/src/primitives/transaction.cpp" bodystart="152" bodyend="175"/>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="script_8h_1aaf105ae5beaca1dee30ae54530691fcead9bb96e76cf9f1b6ebbf50373f4f9ca5" compoundref="script_8h" startline="94">SIGHASH_SINGLE</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <referencedby refid="class_transaction_signature_checker_1a6d9044dff84be9a2c2233fdf1508f9ab" compoundref="transaction_8cpp" startline="177" endline="196">TransactionSignatureChecker::CheckSig</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="transaction_8h" kindref="compound">transaction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_c_transaction_1a6607e95af3e2851ee3b7fe335a05eb4c" refkind="member"><highlight class="normal"><ref refid="class_c_transaction_1a41717180530fca69eb0163c1024ae286" kindref="member">CTransaction::CTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_mutable_transaction" kindref="compound">CMutableTransaction</ref><sp/>&amp;tx)<sp/>:<sp/>nVersion(tx.nVersion),<sp/>nTime(tx.nTime),<sp/>vin(tx.vin),<sp/>vout(tx.vout),<sp/>nLockTime(tx.nLockTime)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">CTransaction::ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>+=<sp/><ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()?<sp/></highlight><highlight class="stringliteral">&quot;Coinbase&quot;</highlight><highlight class="normal"><sp/>:<sp/>(<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>()?<sp/></highlight><highlight class="stringliteral">&quot;Coinstake&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;CTransaction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>+=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;(hash=%s,<sp/>nTime=%d,<sp/>ver=%d,<sp/>vin.size=%u,<sp/>vout.size=%u,<sp/>nLockTime=%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>(),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref>,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_1a6c29bdd822859c7b21b7b6c22dca6825" kindref="member">nVersion</ref>,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.size(),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size(),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_1ab01e4e451d2f3f84b01380979c8fdacc" kindref="member">nLockTime</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[i].<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_c_transaction_1ad2452fe2ae424f43e5fd767c28517b3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1ad2452fe2ae424f43e5fd767c28517b3b" kindref="member">CTransaction::ComputePriority</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPriorityInputs,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTxSize)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="31"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>order<sp/>to<sp/>avoid<sp/>disincentivizing<sp/>cleaning<sp/>up<sp/>the<sp/>UTXO<sp/>set<sp/>we<sp/>don&apos;t<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>constant<sp/>overhead<sp/>for<sp/>each<sp/>txin<sp/>and<sp/>up<sp/>to<sp/>110<sp/>bytes<sp/>of<sp/>scriptSig<sp/>(which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>enough<sp/>to<sp/>cover<sp/>a<sp/>compressed<sp/>pubkey<sp/>p2sh<sp/>redemption)<sp/>for<sp/>priority.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Providing<sp/>any<sp/>more<sp/>cleanup<sp/>incentive<sp/>than<sp/>making<sp/>additional<sp/>inputs<sp/>free<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>risk<sp/>encouraging<sp/>people<sp/>to<sp/>create<sp/>junk<sp/>outputs<sp/>to<sp/>redeem<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTxSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTxSize<sp/>=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">::GetSerializeSize</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/><ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>41U<sp/>+<sp/>std::min(110U,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)txin.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref>.size());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTxSize<sp/>&gt;<sp/>offset)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTxSize<sp/>-=<sp/>offset;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTxSize<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dPriorityInputs<sp/>/<sp/>nTxSize;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_c_transaction_1afa2875bea30d31900a30baf7fd56b96b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1afa2875bea30d31900a30baf7fd56b96b" kindref="member">CTransaction::CheckTransaction</ref>(<ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/>&amp;<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>checks<sp/>that<sp/>don&apos;t<sp/>depend<sp/>on<sp/>any<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.empty())</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(10,<sp/>error(</highlight><highlight class="stringliteral">&quot;CTransaction::CheckTransaction()<sp/>:<sp/>vin<sp/>empty&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.empty())</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(10,<sp/>error(</highlight><highlight class="stringliteral">&quot;CTransaction::CheckTransaction()<sp/>:<sp/>vout<sp/>empty&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::<ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION)<sp/>&gt;<sp/>MAX_BLOCK_SIZE)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(100,<sp/>error(</highlight><highlight class="stringliteral">&quot;CTransaction::CheckTransaction()<sp/>:<sp/>size<sp/>limits<sp/>failed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>negative<sp/>or<sp/>overflow<sp/>output<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueOut<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>txout<sp/>=<sp/><ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txout.<ref refid="class_c_tx_out_1ad755fbfcb5c816e21533cc062fcf6ee8" kindref="member">IsEmpty</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>())</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(100,<sp/>error(</highlight><highlight class="stringliteral">&quot;CTransaction::CheckTransaction()<sp/>:<sp/>txout<sp/>empty<sp/>for<sp/>user<sp/>transaction&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txout.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(100,<sp/>error(</highlight><highlight class="stringliteral">&quot;CTransaction::CheckTransaction()<sp/>:<sp/>txout.nValue<sp/>negative&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txout.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref><sp/>&gt;<sp/>MAX_MONEY)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(100,<sp/>error(</highlight><highlight class="stringliteral">&quot;CTransaction::CheckTransaction()<sp/>:<sp/>txout.nValue<sp/>too<sp/>high&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueOut<sp/>+=<sp/>txout.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="amount_8h_1a12db56a9a1c931941f0943ecbb278aae" kindref="member">MoneyRange</ref>(nValueOut))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(100,<sp/>error(</highlight><highlight class="stringliteral">&quot;CTransaction::CheckTransaction()<sp/>:<sp/>txout<sp/>total<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>duplicate<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;COutPoint&gt;<sp/>vInOutPoints;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/><ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vInOutPoints.count(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>))</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vInOutPoints.insert(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>())</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[0].scriptSig.size()<sp/>&lt;<sp/>2<sp/>||<sp/><ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[0].scriptSig.size()<sp/>&gt;<sp/>100)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(100,<sp/>error(</highlight><highlight class="stringliteral">&quot;CTransaction::CheckTransaction()<sp/>:<sp/>coinbase<sp/>script<sp/>size<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/><ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1acd3225f1bb5550af0b900cd0dd7112d9" kindref="member">IsNull</ref>())</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" kindref="member">DoS</ref>(10,<sp/>error(</highlight><highlight class="stringliteral">&quot;CTransaction::CheckTransaction()<sp/>:<sp/>prevout<sp/>is<sp/>null&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_c_transaction_1aef472df5cb11c53281d975ee9e7cf133" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_transaction_1aef472df5cb11c53281d975ee9e7cf133" kindref="member">CTransaction::GetValueOut</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="101"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueOut<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;CTxOut&gt;::const_iterator<sp/>it(<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.begin());<sp/>it<sp/>!=<sp/><ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueOut<sp/>+=<sp/>it-&gt;nValue;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="amount_8h_1a12db56a9a1c931941f0943ecbb278aae" kindref="member">MoneyRange</ref>(it-&gt;nValue)<sp/>||<sp/>!<ref refid="amount_8h_1a12db56a9a1c931941f0943ecbb278aae" kindref="member">MoneyRange</ref>(nValueOut))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;CTransaction::GetValueOut()<sp/>:<sp/>value<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nValueOut;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="struct_c_mutable_transaction_1a496bf823977ef8b178f5128b0f28dcb5" refkind="member"><highlight class="normal"><ref refid="struct_c_mutable_transaction_1a496bf823977ef8b178f5128b0f28dcb5" kindref="member">CMutableTransaction::CMutableTransaction</ref>()<sp/>:<sp/>nVersion(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>::CURRENT_VERSION),<sp/>nLockTime(0)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1a23d7f377dce887f5b37539b0bf51733e" kindref="member">nVersion</ref><sp/>=<sp/><ref refid="struct_c_mutable_transaction_1acd08f5ca3f1ffa5c65750e6b4594a1e7" kindref="member">CMutableTransaction::CURRENT_VERSION</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1a7638f0f1222fac9b3a258cd4bf7bc13e" kindref="member">nTime</ref><sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>.resize(0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" kindref="member">vout</ref>.resize(0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1ae9685a37d424cd00e3badda28260c848" kindref="member">nLockTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1a08262710c3dfcc221c48df31dc7f963e" kindref="member">nDoS</ref><sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Denial-of-service<sp/>prevention</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="struct_c_mutable_transaction_1abb693b3e8d26fa6ecabc93d0f089e995" refkind="member"><highlight class="normal"><ref refid="struct_c_mutable_transaction_1a496bf823977ef8b178f5128b0f28dcb5" kindref="member">CMutableTransaction::CMutableTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx)<sp/>:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>nVersion(tx.nVersion),<sp/>nTime(tx.nTime),<sp/>vin(tx.vin),<sp/>vout(tx.vout),<sp/>nLockTime(tx.nLockTime),<sp/>nDoS(tx.nDoS)<sp/>{}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="struct_c_mutable_transaction_1af57dc15618f64c9ae3a4c0e06850e382" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="struct_c_mutable_transaction_1af57dc15618f64c9ae3a4c0e06850e382" kindref="member">CMutableTransaction::GetHash</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="126"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hash_8h_1a6de694e43f17c62025c6883965b65e63" kindref="member">SerializeHash</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="struct_c_mutable_transaction_1a235803da94d1cb222d51b6f81146de18" refkind="member"><highlight class="normal">std::string<sp/><ref refid="struct_c_mutable_transaction_1a235803da94d1cb222d51b6f81146de18" kindref="member">CMutableTransaction::ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="131"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>+=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;CMutableTransaction(hash=%s,<sp/>ver=%d,<sp/>nTime=&amp;u,<sp/>vin.size=%u,<sp/>vout.size=%u,<sp/>nLockTime=%u)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1af57dc15618f64c9ae3a4c0e06850e382" kindref="member">GetHash</ref>().<ref refid="struct_c_mutable_transaction_1a235803da94d1cb222d51b6f81146de18" kindref="member">ToString</ref>(),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1a23d7f377dce887f5b37539b0bf51733e" kindref="member">nVersion</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1a7638f0f1222fac9b3a258cd4bf7bc13e" kindref="member">nTime</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>.size(),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" kindref="member">vout</ref>.size(),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_mutable_transaction_1ae9685a37d424cd00e3badda28260c848" kindref="member">nLockTime</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>[i].<ref refid="struct_c_mutable_transaction_1a235803da94d1cb222d51b6f81146de18" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" kindref="member">vout</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" kindref="member">vout</ref>[i].<ref refid="struct_c_mutable_transaction_1a235803da94d1cb222d51b6f81146de18" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="class_transaction_signature_checker_1a59179724477a42488a70a2828f51093d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_transaction_signature_checker_1a59179724477a42488a70a2828f51093d" kindref="member">TransactionSignatureChecker::VerifySignature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>vchSig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>sighash)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="148"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pubkey.<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(sighash,<sp/>vchSig);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="transaction_8cpp_1a746fd004a62173bb42801259780a3336" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="transaction_8cpp_1a746fd004a62173bb42801259780a3336" kindref="member">SignatureHash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>scriptCode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txTo,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHashType)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIn<sp/>&gt;=<sp/>txTo.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nIn<sp/>out<sp/>of<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>invalid<sp/>use<sp/>of<sp/>SIGHASH_SINGLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nHashType<sp/>&amp;<sp/>0x1f)<sp/>==<sp/><ref refid="script_8h_1aaf105ae5beaca1dee30ae54530691fcead9bb96e76cf9f1b6ebbf50373f4f9ca5" kindref="member">SIGHASH_SINGLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIn<sp/>&gt;=<sp/>txTo.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nOut<sp/>out<sp/>of<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrapper<sp/>to<sp/>serialize<sp/>only<sp/>the<sp/>necessary<sp/>parts<sp/>of<sp/>the<sp/>transaction<sp/>being<sp/>signed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>(Amir)<sp/>implement<sp/>this????</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CTransactionSignatureSerializer<sp/>txTmp(txTo,<sp/>scriptCode,<sp/>nIn,<sp/>nHashType);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serialize<sp/>and<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CHashWriter<sp/>ss(SER_GETHASH,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ss<sp/>&lt;&lt;<sp/>txTmp<sp/>&lt;&lt;<sp/>nHashType;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//ss.GetHash();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_transaction_signature_checker_1a6d9044dff84be9a2c2233fdf1508f9ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_transaction_signature_checker_1a6d9044dff84be9a2c2233fdf1508f9ab" kindref="member">TransactionSignatureChecker::CheckSig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;unsigned<sp/>char&gt;&amp;<sp/>vchSigIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;unsigned<sp/>char&gt;&amp;<sp/>vchPubKey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>scriptCode)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="178"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey(vchPubKey);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pubkey.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hash<sp/>type<sp/>is<sp/>one<sp/>byte<sp/>tacked<sp/>on<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>vchSig(vchSigIn);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchSig.empty())</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHashType<sp/>=<sp/>vchSig.back();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>vchSig.pop_back();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>sighash<sp/>=<sp/><ref refid="transaction_8cpp_1a746fd004a62173bb42801259780a3336" kindref="member">SignatureHash</ref>(scriptCode,<sp/>*txTo,<sp/>nIn,<sp/>nHashType);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_transaction_signature_checker_1a59179724477a42488a70a2828f51093d" kindref="member">VerifySignature</ref>(vchSig,<sp/>pubkey,<sp/>sighash))</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/primitives/transaction.cpp"/>
  </compounddef>
</doxygen>
