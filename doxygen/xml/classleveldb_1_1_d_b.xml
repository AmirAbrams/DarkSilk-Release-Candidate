<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classleveldb_1_1_d_b" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>leveldb::DB</compoundname>
    <derivedcompoundref refid="classleveldb_1_1_d_b_impl" prot="public" virt="non-virtual">leveldb::DBImpl</derivedcompoundref>
    <derivedcompoundref refid="classleveldb_1_1_model_d_b" prot="public" virt="non-virtual">leveldb::ModelDB</derivedcompoundref>
    <includes refid="leveldb_2include_2leveldb_2db_8h" local="no">db.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DB::Open</definition>
        <argsstring>(const Options &amp;options, const std::string &amp;name, DB **dbptr)</argsstring>
        <name>Open</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> **</type>
          <declname>dbptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1445" bodyend="1477"/>
        <references refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" compoundref="port__posix_8cc" startline="26" endline="26">leveldb::port::Mutex::Lock</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_version_set_1ac4086c848479e74c1d9eb95e250e7167" compoundref="version__set_8h" startline="191" endline="191">leveldb::VersionSet::NewFileNumber</references>
        <references refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" compoundref="options_8h" startline="62">leveldb::Options::env</references>
        <references refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de">leveldb::Env::NewWritableFile</references>
        <references refid="namespaceleveldb_1ae5aadcd574cc5186e7821177d44f4c6c" compoundref="filename_8cc" startline="27" endline="30">leveldb::LogFileName</references>
        <references refid="classleveldb_1_1_version_edit_1a47e5c58d34b0e27dc8990687e0c5477a" compoundref="version__edit_8h" startline="39" endline="42">leveldb::VersionEdit::SetLogNumber</references>
        <references refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" compoundref="version__set_8cc" startline="811" endline="894">leveldb::VersionSet::LogAndApply</references>
        <references refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" compoundref="port__posix_8cc" startline="28" endline="28">leveldb::port::Mutex::Unlock</references>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a31fe0ded855f188fac1650c70849760c" compoundref="autocompact__test_8cc" startline="20" endline="28">leveldb::AutoCompactTest::AutoCompactTest</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1aaba7c05f06400ef45d1af5cb95f66a57" compoundref="corruption__test_8cc" startline="54" endline="58">leveldb::CorruptionTest::TryReopen</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" compoundref="db__test_8cc" startline="273" endline="286">leveldb::DBTest::TryReopen</referencedby>
        <referencedby refid="namespaceleveldb_1a88d6fdcb16ed4edc65da40f383e6f23b" compoundref="db__test_8cc" startline="1480" endline="1517">leveldb::TEST</referencedby>
        <referencedby refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" compoundref="db__test_8cc" startline="2065" endline="2114">leveldb::BM_LogAndApply</referencedby>
        <referencedby refid="class_c_level_d_b_wrapper_1ae796b1190c072df6275e0ada4d187943" compoundref="leveldbwrapper_8cpp" startline="44" endline="67">CLevelDBWrapper::CLevelDBWrapper</referencedby>
        <referencedby refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a6b275339ff6194c598daf7091ad8d5c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::DB::DB</definition>
        <argsstring>()</argsstring>
        <name>DB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="55" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a15f516eb9ec41812419a7160b4740a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>leveldb::DB::~DB</definition>
        <argsstring>()</argsstring>
        <name>~DB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="56" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1443" bodyend="1443"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DB::Put</definition>
        <argsstring>(const WriteOptions &amp;options, const Slice &amp;key, const Slice &amp;value)=0</argsstring>
        <name>Put</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5">Put</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253">Put</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1431" bodyend="1435"/>
        <references refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" compoundref="write__batch_8cc" startline="98" endline="103">leveldb::WriteBatch::Put</references>
        <references refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c">Write</references>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a1d1feea1aef1257e461c35eb5b51fa52" compoundref="autocompact__test_8cc" startline="58" endline="104">leveldb::AutoCompactTest::DoReads</referencedby>
        <referencedby refid="c_8h_1aacd7bf338f41054f34825b3669ace2f8" compoundref="c_8cc" startline="170" endline="178">leveldb_put</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" compoundref="db__impl_8cc" startline="1154" endline="1156">leveldb::DBImpl::Put</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" compoundref="db__test_8cc" startline="288" endline="290">leveldb::DBTest::Put</referencedby>
        <referencedby refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253" compoundref="db__test_8cc" startline="1840" endline="1842">leveldb::ModelDB::Put</referencedby>
        <referencedby refid="namespaceleveldb_1a2f341cbac955029d39ecb25107434a0c" compoundref="memenv__test_8cc" startline="185" endline="226">leveldb::TEST</referencedby>
        <referencedby refid="class_sec_msg_d_b_1a77131fcd232e503a57ab8569d3ab9fd8" compoundref="smessage_8cpp" startline="359" endline="389">SecMsgDB::WritePK</referencedby>
        <referencedby refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" compoundref="smessage_8cpp" startline="507" endline="533">SecMsgDB::WriteSmesg</referencedby>
        <referencedby refid="class_c_tx_d_b_1a58885f67364829a8e0957a5dc810886d" compoundref="txdb-leveldb_8h" startline="108" endline="130">CTxDB::Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DB::Delete</definition>
        <argsstring>(const WriteOptions &amp;options, const Slice &amp;key)=0</argsstring>
        <name>Delete</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1af050f77e8c22bd6638fed5a46a59399d">Delete</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6">Delete</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="69" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1437" bodyend="1441"/>
        <references refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" compoundref="write__batch_8cc" startline="105" endline="109">leveldb::WriteBatch::Delete</references>
        <references refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c">Write</references>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a1d1feea1aef1257e461c35eb5b51fa52" compoundref="autocompact__test_8cc" startline="58" endline="104">leveldb::AutoCompactTest::DoReads</referencedby>
        <referencedby refid="c_8h_1a3878ffaf68a4addb31266ac81ce8c36f" compoundref="c_8cc" startline="180" endline="186">leveldb_delete</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_impl_1af050f77e8c22bd6638fed5a46a59399d" compoundref="db__impl_8cc" startline="1158" endline="1160">leveldb::DBImpl::Delete</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a25716ec93d525adbeea8ff71e8f3a9f4" compoundref="db__test_8cc" startline="292" endline="294">leveldb::DBTest::Delete</referencedby>
        <referencedby refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6" compoundref="db__test_8cc" startline="1843" endline="1845">leveldb::ModelDB::Delete</referencedby>
        <referencedby refid="class_sec_msg_d_b_1a7d00fef57cf02d33e0b076ca114f7af5" compoundref="smessage_8cpp" startline="558" endline="577">SecMsgDB::EraseSmesg</referencedby>
        <referencedby refid="class_c_tx_d_b_1a57ccf71e92f654e6db68be530d43a837" compoundref="txdb-leveldb_8h" startline="133" endline="149">CTxDB::Erase</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::DB::Write</definition>
        <argsstring>(const WriteOptions &amp;options, WriteBatch *updates)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1ac0d0b472717099d6a02ad9dace4e8ef4">Write</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be">Write</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref> *</type>
          <declname>updates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="74" column="1"/>
        <referencedby refid="c_8h_1a7315a488fc8ddcfd9a58295f7d0bb636" compoundref="c_8cc" startline="189" endline="195">leveldb_write</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1a54d2114311c61356e879b5ccfc3cda18" compoundref="corruption__test_8cc" startline="70" endline="86">leveldb::CorruptionTest::Build</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" compoundref="db__impl_8cc" startline="1431" endline="1435">Put</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" compoundref="db__impl_8cc" startline="1437" endline="1441">Delete</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_constructor_1a554d8e348d9135ff72a43a03c647c261" compoundref="table__test_8cc" startline="360" endline="372">leveldb::DBConstructor::FinishImpl</referencedby>
        <referencedby refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" compoundref="smessage_8cpp" startline="287" endline="305">SecMsgDB::TxnCommit</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::DB::Get</definition>
        <argsstring>(const ReadOptions &amp;options, const Slice &amp;key, std::string *value)=0</argsstring>
        <name>Get</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1a089964ddcd1f5dc85e73499ae57be508">Get</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1ab7744a74b5c0d2cd812dd87e83ca561b">Get</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="83" column="1"/>
        <referencedby refid="c_8h_1af9b485534674367c01521a8192a74091" compoundref="c_8cc" startline="197" endline="216">leveldb_get</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a6af558e1fca4a9f1bbf86d72d3d4aa6c" compoundref="db__test_8cc" startline="296" endline="307">leveldb::DBTest::Get</referencedby>
        <referencedby refid="namespaceleveldb_1a2f341cbac955029d39ecb25107434a0c" compoundref="memenv__test_8cc" startline="185" endline="226">leveldb::TEST</referencedby>
        <referencedby refid="class_c_level_d_b_wrapper_1aa3b816ae43c930b4bf1f85461bff4b5b" compoundref="leveldbwrapper_8h" startline="91" endline="113">CLevelDBWrapper::Read</referencedby>
        <referencedby refid="class_c_level_d_b_wrapper_1a9c9d2e1c06c45c5d6883f33136f6718b" compoundref="leveldbwrapper_8h" startline="124" endline="140">CLevelDBWrapper::Exists</referencedby>
        <referencedby refid="class_sec_msg_d_b_1aabce57e714b562302cee71bcea5e340f" compoundref="smessage_8cpp" startline="314" endline="357">SecMsgDB::ReadPK</referencedby>
        <referencedby refid="class_sec_msg_d_b_1ad039b1d29fc0e82695d3bd30087765b9" compoundref="smessage_8cpp" startline="391" endline="414">SecMsgDB::ExistsPK</referencedby>
        <referencedby refid="class_sec_msg_d_b_1a35c86d596ed6c60f4d62cc3e551356d2" compoundref="smessage_8cpp" startline="465" endline="505">SecMsgDB::ReadSmesg</referencedby>
        <referencedby refid="class_sec_msg_d_b_1ad9869377019ded94b70a3c4a9ba2afb0" compoundref="smessage_8cpp" startline="535" endline="556">SecMsgDB::ExistsSmesg</referencedby>
        <referencedby refid="class_c_tx_d_b_1a9e223a10434f8a73002e84cc75c682de" compoundref="txdb-leveldb_8h" startline="67" endline="105">CTxDB::Read</referencedby>
        <referencedby refid="class_c_tx_d_b_1a36002f063f6fef483226362a1350e22d" compoundref="txdb-leveldb_8h" startline="152" endline="169">CTxDB::Exists</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>virtual Iterator* leveldb::DB::NewIterator</definition>
        <argsstring>(const ReadOptions &amp;options)=0</argsstring>
        <name>NewIterator</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58">NewIterator</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a5acf23bae313f2e2f3ea9f0ab95450cf">NewIterator</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="92" column="1"/>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a1d1feea1aef1257e461c35eb5b51fa52" compoundref="autocompact__test_8cc" startline="58" endline="104">leveldb::AutoCompactTest::DoReads</referencedby>
        <referencedby refid="c_8h_1a8b9d419b6e0753a1d6158605c821354a" compoundref="c_8cc" startline="218" endline="224">leveldb_create_iterator</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1aa03dcde1d0771ebbcf7d6ac8bda9c725" compoundref="corruption__test_8cc" startline="88" endline="124">leveldb::CorruptionTest::Check</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" compoundref="db__test_8cc" startline="311" endline="334">leveldb::DBTest::Contents</referencedby>
        <referencedby refid="namespaceleveldb_1a2f341cbac955029d39ecb25107434a0c" compoundref="memenv__test_8cc" startline="185" endline="226">leveldb::TEST</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_constructor_1a51936c1c2cb31fe26f5fb2a237cfdeec" compoundref="table__test_8cc" startline="373" endline="375">leveldb::DBConstructor::NewIterator</referencedby>
        <referencedby refid="class_c_level_d_b_wrapper_1a5f43d01a8a6b26464b875d190e002d74" compoundref="leveldbwrapper_8h" startline="165" endline="168">CLevelDBWrapper::NewIterator</referencedby>
        <referencedby refid="class_message_table_priv_1a0c420e61982703babe27416089ff2bd3" compoundref="messagemodel_8cpp" startline="47" endline="132">MessageTablePriv::refreshMessageTable</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a09f153f6fb0e6094919452744ef58ded" compoundref="rpcsmessage_8cpp" startline="679" endline="770">smsgoutbox</referencedby>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a7d13f6336c7c5f0bf79578d57c45568c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
        <definition>virtual const Snapshot* leveldb::DB::GetSnapshot</definition>
        <argsstring>()=0</argsstring>
        <name>GetSnapshot</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137">GetSnapshot</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1aa82849af6a149d122e65a4aac412903f">GetSnapshot</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="98" column="1"/>
        <referencedby refid="c_8h_1af999ba27285e482f34df3821f9a04214" compoundref="c_8cc" startline="226" endline="231">leveldb_create_snapshot</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1aa46de65e990bd179db0aee770af89144" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void leveldb::DB::ReleaseSnapshot</definition>
        <argsstring>(const Snapshot *snapshot)=0</argsstring>
        <name>ReleaseSnapshot</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886">ReleaseSnapshot</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a3f5d86ce612baaa88c11601c9a59df12">ReleaseSnapshot</reimplementedby>
        <param>
          <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="102" column="1"/>
        <referencedby refid="c_8h_1ab1e5d825506969f12fcaff2bf824b6e5" compoundref="c_8cc" startline="233" endline="238">leveldb_release_snapshot</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1afcd557d80bac6668f20372c9e737d807" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool leveldb::DB::GetProperty</definition>
        <argsstring>(const Slice &amp;property, std::string *value)=0</argsstring>
        <name>GetProperty</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1ad1a2023ce171c8f8476664f5b1cbab4d">GetProperty</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a5c83a50a08e45c2564c39a650ea55b86">GetProperty</reimplementedby>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="118" column="1"/>
        <referencedby refid="c_8h_1ad4ce08534d9ce95b4a7ddb0cf1796209" compoundref="c_8cc" startline="240" endline="250">leveldb_property_value</referencedby>
        <referencedby refid="classleveldb_1_1_corruption_test_1aab1ed767d1cdac7e95a32ccf6defc709" compoundref="corruption__test_8cc" startline="176" endline="185">leveldb::CorruptionTest::Property</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" compoundref="db__test_8cc" startline="378" endline="384">leveldb::DBTest::NumTableFilesAtLevel</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1afdfc077be555dea7eac220623f6d4deb" compoundref="db__test_8cc" startline="457" endline="461">leveldb::DBTest::DumpSSTableList</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ad4d54aa1dbcecc8583b013ab2d67aeff" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void leveldb::DB::GetApproximateSizes</definition>
        <argsstring>(const Range *range, int n, uint64_t *sizes)=0</argsstring>
        <name>GetApproximateSizes</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1af08e218d92064699942c195ce0f06010">GetApproximateSizes</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1aeb5502077fae602c5ca3c1153f29b693">GetApproximateSizes</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_range" kindref="compound">Range</ref> *</type>
          <declname>range</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> *</type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="128" column="1"/>
        <referencedby refid="classleveldb_1_1_auto_compact_test_1a4be489ee1b3868f61d9976935e9b2bc4" compoundref="autocompact__test_8cc" startline="42" endline="47">leveldb::AutoCompactTest::Size</referencedby>
        <referencedby refid="c_8h_1a876ad4220f0dbd55fbbe91714e271e98" compoundref="c_8cc" startline="252" endline="265">leveldb_approximate_sizes</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a2b16106ccbd302127b5c0575e74e6be1" compoundref="db__test_8cc" startline="417" endline="422">leveldb::DBTest::Size</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1aeea500cbc6704454b3be6908d5da8b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void leveldb::DB::CompactRange</definition>
        <argsstring>(const Slice *begin, const Slice *end)=0</argsstring>
        <name>CompactRange</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1aa6df0739fc0b49380c284347e411b8ed">CompactRange</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a7a04a6e5227079f861c26b920df6b833">CompactRange</reimplementedby>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="141" column="1"/>
        <referencedby refid="c_8h_1a2e579ef1579016b83b3fcb4038939517" compoundref="c_8cc" startline="267" endline="276">leveldb_compact_range</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a9b6cd10fd7c8fc54127b0c40c0ac7db5" compoundref="db__test_8cc" startline="424" endline="426">leveldb::DBTest::Compact</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a6997c4b6731ad3946f2ebde601cee6fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::DB::DB</definition>
        <argsstring>(const DB &amp;)</argsstring>
        <name>DB</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a40453450c2e45d58a8e8dc8e00ada17c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DB::operator=</definition>
        <argsstring>(const DB &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="146" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2972">
        <label>leveldb::DB</label>
        <link refid="classleveldb_1_1_d_b"/>
      </node>
      <node id="2974">
        <label>leveldb::ModelDB</label>
        <link refid="classleveldb_1_1_model_d_b"/>
        <childnode refid="2972" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2973">
        <label>leveldb::DBImpl</label>
        <link refid="classleveldb_1_1_d_b_impl"/>
        <childnode refid="2972" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" bodystart="44" bodyend="147"/>
    <listofallmembers>
      <member refid="classleveldb_1_1_d_b_1aeea500cbc6704454b3be6908d5da8b3a" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>CompactRange</name></member>
      <member refid="classleveldb_1_1_d_b_1a6b275339ff6194c598daf7091ad8d5c1" prot="public" virt="non-virtual"><scope>leveldb::DB</scope><name>DB</name></member>
      <member refid="classleveldb_1_1_d_b_1a6997c4b6731ad3946f2ebde601cee6fe" prot="private" virt="non-virtual"><scope>leveldb::DB</scope><name>DB</name></member>
      <member refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>Delete</name></member>
      <member refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>Get</name></member>
      <member refid="classleveldb_1_1_d_b_1ad4d54aa1dbcecc8583b013ab2d67aeff" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>GetApproximateSizes</name></member>
      <member refid="classleveldb_1_1_d_b_1afcd557d80bac6668f20372c9e737d807" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>GetProperty</name></member>
      <member refid="classleveldb_1_1_d_b_1a7d13f6336c7c5f0bf79578d57c45568c" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>GetSnapshot</name></member>
      <member refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>NewIterator</name></member>
      <member refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" prot="public" virt="non-virtual"><scope>leveldb::DB</scope><name>Open</name></member>
      <member refid="classleveldb_1_1_d_b_1a40453450c2e45d58a8e8dc8e00ada17c" prot="private" virt="non-virtual"><scope>leveldb::DB</scope><name>operator=</name></member>
      <member refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>Put</name></member>
      <member refid="classleveldb_1_1_d_b_1aa46de65e990bd179db0aee770af89144" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>ReleaseSnapshot</name></member>
      <member refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>Write</name></member>
      <member refid="classleveldb_1_1_d_b_1a15f516eb9ec41812419a7160b4740a22" prot="public" virt="virtual"><scope>leveldb::DB</scope><name>~DB</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
