<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classleveldb_1_1_d_b" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>leveldb::DB</compoundname>
    <derivedcompoundref refid="classleveldb_1_1_d_b_impl" prot="public" virt="non-virtual">leveldb::DBImpl</derivedcompoundref>
    <derivedcompoundref refid="classleveldb_1_1_model_d_b" prot="public" virt="non-virtual">leveldb::ModelDB</derivedcompoundref>
    <includes refid="leveldb_2include_2leveldb_2db_8h" local="no">db.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DB::Open</definition>
        <argsstring>(const Options &amp;options, const std::string &amp;name, DB **dbptr)</argsstring>
        <name>Open</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> **</type>
          <declname>dbptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1445" bodyend="1477"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a6b275339ff6194c598daf7091ad8d5c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::DB::DB</definition>
        <argsstring>()</argsstring>
        <name>DB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="55" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a15f516eb9ec41812419a7160b4740a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>leveldb::DB::~DB</definition>
        <argsstring>()</argsstring>
        <name>~DB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="56" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1443" bodyend="1443"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DB::Put</definition>
        <argsstring>(const WriteOptions &amp;options, const Slice &amp;key, const Slice &amp;value)=0</argsstring>
        <name>Put</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5">Put</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253">Put</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1431" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DB::Delete</definition>
        <argsstring>(const WriteOptions &amp;options, const Slice &amp;key)=0</argsstring>
        <name>Delete</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1af050f77e8c22bd6638fed5a46a59399d">Delete</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6">Delete</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="69" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1437" bodyend="1441"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::DB::Write</definition>
        <argsstring>(const WriteOptions &amp;options, WriteBatch *updates)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1ac0d0b472717099d6a02ad9dace4e8ef4">Write</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be">Write</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref> *</type>
          <declname>updates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::DB::Get</definition>
        <argsstring>(const ReadOptions &amp;options, const Slice &amp;key, std::string *value)=0</argsstring>
        <name>Get</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1a089964ddcd1f5dc85e73499ae57be508">Get</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1ab7744a74b5c0d2cd812dd87e83ca561b">Get</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>virtual Iterator* leveldb::DB::NewIterator</definition>
        <argsstring>(const ReadOptions &amp;options)=0</argsstring>
        <name>NewIterator</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58">NewIterator</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a5acf23bae313f2e2f3ea9f0ab95450cf">NewIterator</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a7d13f6336c7c5f0bf79578d57c45568c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
        <definition>virtual const Snapshot* leveldb::DB::GetSnapshot</definition>
        <argsstring>()=0</argsstring>
        <name>GetSnapshot</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137">GetSnapshot</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1aa82849af6a149d122e65a4aac412903f">GetSnapshot</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1aa46de65e990bd179db0aee770af89144" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void leveldb::DB::ReleaseSnapshot</definition>
        <argsstring>(const Snapshot *snapshot)=0</argsstring>
        <name>ReleaseSnapshot</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886">ReleaseSnapshot</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a3f5d86ce612baaa88c11601c9a59df12">ReleaseSnapshot</reimplementedby>
        <param>
          <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1afcd557d80bac6668f20372c9e737d807" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool leveldb::DB::GetProperty</definition>
        <argsstring>(const Slice &amp;property, std::string *value)=0</argsstring>
        <name>GetProperty</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1ad1a2023ce171c8f8476664f5b1cbab4d">GetProperty</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a5c83a50a08e45c2564c39a650ea55b86">GetProperty</reimplementedby>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1ad4d54aa1dbcecc8583b013ab2d67aeff" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void leveldb::DB::GetApproximateSizes</definition>
        <argsstring>(const Range *range, int n, uint64_t *sizes)=0</argsstring>
        <name>GetApproximateSizes</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1af08e218d92064699942c195ce0f06010">GetApproximateSizes</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1aeb5502077fae602c5ca3c1153f29b693">GetApproximateSizes</reimplementedby>
        <param>
          <type>const <ref refid="structleveldb_1_1_range" kindref="compound">Range</ref> *</type>
          <declname>range</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> *</type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1aeea500cbc6704454b3be6908d5da8b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void leveldb::DB::CompactRange</definition>
        <argsstring>(const Slice *begin, const Slice *end)=0</argsstring>
        <name>CompactRange</name>
        <reimplementedby refid="classleveldb_1_1_d_b_impl_1aa6df0739fc0b49380c284347e411b8ed">CompactRange</reimplementedby>
        <reimplementedby refid="classleveldb_1_1_model_d_b_1a7a04a6e5227079f861c26b920df6b833">CompactRange</reimplementedby>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a6997c4b6731ad3946f2ebde601cee6fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::DB::DB</definition>
        <argsstring>(const DB &amp;)</argsstring>
        <name>DB</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_1a40453450c2e45d58a8e8dc8e00ada17c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DB::operator=</definition>
        <argsstring>(const DB &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="146" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1059">
        <label>leveldb::DB</label>
        <link refid="classleveldb_1_1_d_b"/>
      </node>
      <node id="1061">
        <label>leveldb::ModelDB</label>
        <link refid="classleveldb_1_1_model_d_b"/>
        <childnode refid="1059" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1060">
        <label>leveldb::DBImpl</label>
        <link refid="classleveldb_1_1_d_b_impl"/>
        <childnode refid="1059" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/db.h" bodystart="44" bodyend="147"/>
    <listofallmembers>
      <member refid="classleveldb_1_1_d_b_1aeea500cbc6704454b3be6908d5da8b3a" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>CompactRange</name></member>
      <member refid="classleveldb_1_1_d_b_1a6b275339ff6194c598daf7091ad8d5c1" prot="public" virt="non-virtual"><scope>leveldb::DB</scope><name>DB</name></member>
      <member refid="classleveldb_1_1_d_b_1a6997c4b6731ad3946f2ebde601cee6fe" prot="private" virt="non-virtual"><scope>leveldb::DB</scope><name>DB</name></member>
      <member refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>Delete</name></member>
      <member refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>Get</name></member>
      <member refid="classleveldb_1_1_d_b_1ad4d54aa1dbcecc8583b013ab2d67aeff" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>GetApproximateSizes</name></member>
      <member refid="classleveldb_1_1_d_b_1afcd557d80bac6668f20372c9e737d807" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>GetProperty</name></member>
      <member refid="classleveldb_1_1_d_b_1a7d13f6336c7c5f0bf79578d57c45568c" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>GetSnapshot</name></member>
      <member refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>NewIterator</name></member>
      <member refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" prot="public" virt="non-virtual"><scope>leveldb::DB</scope><name>Open</name></member>
      <member refid="classleveldb_1_1_d_b_1a40453450c2e45d58a8e8dc8e00ada17c" prot="private" virt="non-virtual"><scope>leveldb::DB</scope><name>operator=</name></member>
      <member refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>Put</name></member>
      <member refid="classleveldb_1_1_d_b_1aa46de65e990bd179db0aee770af89144" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>ReleaseSnapshot</name></member>
      <member refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" prot="public" virt="pure-virtual"><scope>leveldb::DB</scope><name>Write</name></member>
      <member refid="classleveldb_1_1_d_b_1a15f516eb9ec41812419a7160b4740a22" prot="public" virt="virtual"><scope>leveldb::DB</scope><name>~DB</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
