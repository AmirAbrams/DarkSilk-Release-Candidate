<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="rpcclient_8cpp" kind="file" language="C++">
    <compoundname>rpcclient.cpp</compoundname>
    <includes local="no">set</includes>
    <includes refid="rpcclient_8h" local="yes">rpcclient.h</includes>
    <includes refid="rpcprotocol_8h" local="yes">rpcprotocol.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="ui__interface_8h" local="yes">ui_interface.h</includes>
    <includes refid="chainparams_8h" local="yes">chainparams.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes local="no">boost/asio.hpp</includes>
    <includes local="no">boost/asio/ssl.hpp</includes>
    <includes local="no">boost/bind.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">boost/foreach.hpp</includes>
    <includes local="no">boost/iostreams/concepts.hpp</includes>
    <includes local="no">boost/iostreams/stream.hpp</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <incdepgraph>
      <node id="19246">
        <label>list</label>
      </node>
      <node id="19264">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="19289">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="19239">
        <label>netinet/in.h</label>
      </node>
      <node id="19269">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="19254" relation="include">
        </childnode>
        <childnode refid="19262" relation="include">
        </childnode>
        <childnode refid="19212" relation="include">
        </childnode>
      </node>
      <node id="19205">
        <label>/home/dev/ds-160209/src/rpcclient.cpp</label>
        <link refid="rpcclient.cpp"/>
        <childnode refid="19206" relation="include">
        </childnode>
        <childnode refid="19207" relation="include">
        </childnode>
        <childnode refid="19232" relation="include">
        </childnode>
        <childnode refid="19251" relation="include">
        </childnode>
        <childnode refid="19282" relation="include">
        </childnode>
        <childnode refid="19285" relation="include">
        </childnode>
        <childnode refid="19216" relation="include">
        </childnode>
        <childnode refid="19289" relation="include">
        </childnode>
        <childnode refid="19249" relation="include">
        </childnode>
        <childnode refid="19250" relation="include">
        </childnode>
        <childnode refid="19221" relation="include">
        </childnode>
        <childnode refid="19272" relation="include">
        </childnode>
        <childnode refid="19290" relation="include">
        </childnode>
        <childnode refid="19247" relation="include">
        </childnode>
        <childnode refid="19248" relation="include">
        </childnode>
        <childnode refid="19291" relation="include">
        </childnode>
        <childnode refid="19218" relation="include">
        </childnode>
      </node>
      <node id="19240">
        <label>arpa/inet.h</label>
      </node>
      <node id="19231">
        <label>iomanip</label>
      </node>
      <node id="19223">
        <label>boost/version.hpp</label>
      </node>
      <node id="19218">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="19255">
        <label>limits</label>
      </node>
      <node id="19280">
        <label>openssl/rand.h</label>
      </node>
      <node id="19224">
        <label>boost/spirit/core.hpp</label>
      </node>
      <node id="19288">
        <label>assert.h</label>
      </node>
      <node id="19259">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="19238">
        <label>net/if.h</label>
      </node>
      <node id="19291">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="19265">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="19266" relation="include">
        </childnode>
        <childnode refid="19212" relation="include">
        </childnode>
      </node>
      <node id="19262">
        <label>stdlib.h</label>
      </node>
      <node id="19235">
        <label>sys/mman.h</label>
      </node>
      <node id="19290">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="19279">
        <label>openssl/crypto.h</label>
      </node>
      <node id="19220">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="19212" relation="include">
        </childnode>
      </node>
      <node id="19233">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="19234" relation="include">
        </childnode>
        <childnode refid="19235" relation="include">
        </childnode>
        <childnode refid="19236" relation="include">
        </childnode>
        <childnode refid="19237" relation="include">
        </childnode>
        <childnode refid="19238" relation="include">
        </childnode>
        <childnode refid="19239" relation="include">
        </childnode>
        <childnode refid="19240" relation="include">
        </childnode>
        <childnode refid="19241" relation="include">
        </childnode>
        <childnode refid="19242" relation="include">
        </childnode>
        <childnode refid="19243" relation="include">
        </childnode>
        <childnode refid="19244" relation="include">
        </childnode>
        <childnode refid="19245" relation="include">
        </childnode>
      </node>
      <node id="19228">
        <label>boost/spirit/iterator/position_iterator.hpp</label>
      </node>
      <node id="19275">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="19245">
        <label>errno.h</label>
      </node>
      <node id="19213">
        <label>cassert</label>
      </node>
      <node id="19215">
        <label>stdexcept</label>
      </node>
      <node id="19251">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="19237" relation="include">
        </childnode>
        <childnode refid="19252" relation="include">
        </childnode>
        <childnode refid="19253" relation="include">
        </childnode>
        <childnode refid="19254" relation="include">
        </childnode>
        <childnode refid="19267" relation="include">
        </childnode>
        <childnode refid="19269" relation="include">
        </childnode>
        <childnode refid="19211" relation="include">
        </childnode>
        <childnode refid="19246" relation="include">
        </childnode>
        <childnode refid="19270" relation="include">
        </childnode>
        <childnode refid="19210" relation="include">
        </childnode>
        <childnode refid="19212" relation="include">
        </childnode>
        <childnode refid="19271" relation="include">
        </childnode>
        <childnode refid="19272" relation="include">
        </childnode>
        <childnode refid="19273" relation="include">
        </childnode>
        <childnode refid="19274" relation="include">
        </childnode>
        <childnode refid="19275" relation="include">
        </childnode>
        <childnode refid="19276" relation="include">
        </childnode>
        <childnode refid="19277" relation="include">
        </childnode>
        <childnode refid="19278" relation="include">
        </childnode>
        <childnode refid="19279" relation="include">
        </childnode>
        <childnode refid="19280" relation="include">
        </childnode>
        <childnode refid="19281" relation="include">
        </childnode>
        <childnode refid="19216" relation="include">
        </childnode>
      </node>
      <node id="19229">
        <label>json/json_spirit_utils.h</label>
        <link refid="json__spirit__utils_8h"/>
        <childnode refid="19209" relation="include">
        </childnode>
        <childnode refid="19211" relation="include">
        </childnode>
      </node>
      <node id="19274">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="19212">
        <label>string</label>
      </node>
      <node id="19207">
        <label>rpcclient.h</label>
        <link refid="rpcclient_8h"/>
        <childnode refid="19208" relation="include">
        </childnode>
        <childnode refid="19229" relation="include">
        </childnode>
        <childnode refid="19230" relation="include">
        </childnode>
      </node>
      <node id="19211">
        <label>map</label>
      </node>
      <node id="19248">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="19271">
        <label>boost/thread.hpp</label>
      </node>
      <node id="19208">
        <label>json/json_spirit_reader_template.h</label>
        <link refid="json__spirit__reader__template_8h"/>
        <childnode refid="19209" relation="include">
        </childnode>
        <childnode refid="19220" relation="include">
        </childnode>
        <childnode refid="19221" relation="include">
        </childnode>
        <childnode refid="19222" relation="include">
        </childnode>
        <childnode refid="19223" relation="include">
        </childnode>
        <childnode refid="19224" relation="include">
        </childnode>
        <childnode refid="19225" relation="include">
        </childnode>
        <childnode refid="19226" relation="include">
        </childnode>
        <childnode refid="19227" relation="include">
        </childnode>
        <childnode refid="19228" relation="include">
        </childnode>
      </node>
      <node id="19282">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="19269" relation="include">
        </childnode>
        <childnode refid="19283" relation="include">
        </childnode>
        <childnode refid="19284" relation="include">
        </childnode>
        <childnode refid="19212" relation="include">
        </childnode>
        <childnode refid="19216" relation="include">
        </childnode>
      </node>
      <node id="19219">
        <label>boost/variant.hpp</label>
      </node>
      <node id="19247">
        <label>boost/iostreams/concepts.hpp</label>
      </node>
      <node id="19243">
        <label>netdb.h</label>
      </node>
      <node id="19234">
        <label>sys/fcntl.h</label>
      </node>
      <node id="19222">
        <label>boost/function.hpp</label>
      </node>
      <node id="19254">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="19212" relation="include">
        </childnode>
        <childnode refid="19210" relation="include">
        </childnode>
        <childnode refid="19211" relation="include">
        </childnode>
        <childnode refid="19206" relation="include">
        </childnode>
        <childnode refid="19213" relation="include">
        </childnode>
        <childnode refid="19255" relation="include">
        </childnode>
        <childnode refid="19216" relation="include">
        </childnode>
        <childnode refid="19256" relation="include">
        </childnode>
        <childnode refid="19257" relation="include">
        </childnode>
        <childnode refid="19258" relation="include">
        </childnode>
        <childnode refid="19259" relation="include">
        </childnode>
        <childnode refid="19260" relation="include">
        </childnode>
        <childnode refid="19265" relation="include">
        </childnode>
      </node>
      <node id="19242">
        <label>limits.h</label>
      </node>
      <node id="19253">
        <label>sys/resource.h</label>
      </node>
      <node id="19276">
        <label>openssl/bio.h</label>
      </node>
      <node id="19284">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="19249">
        <label>boost/asio.hpp</label>
      </node>
      <node id="19250">
        <label>boost/asio/ssl.hpp</label>
      </node>
      <node id="19241">
        <label>ifaddrs.h</label>
      </node>
      <node id="19237">
        <label>sys/types.h</label>
      </node>
      <node id="19263">
        <label>string.h</label>
      </node>
      <node id="19266">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="19257">
        <label>cstdio</label>
      </node>
      <node id="19278">
        <label>openssl/buffer.h</label>
      </node>
      <node id="19258">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="19273">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="19244">
        <label>unistd.h</label>
      </node>
      <node id="19210">
        <label>vector</label>
      </node>
      <node id="19286">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="19254" relation="include">
        </childnode>
        <childnode refid="19287" relation="include">
        </childnode>
        <childnode refid="19281" relation="include">
        </childnode>
        <childnode refid="19215" relation="include">
        </childnode>
        <childnode refid="19210" relation="include">
        </childnode>
        <childnode refid="19216" relation="include">
        </childnode>
      </node>
      <node id="19232">
        <label>rpcprotocol.h</label>
        <link refid="rpcprotocol_8h"/>
        <childnode refid="19233" relation="include">
        </childnode>
        <childnode refid="19246" relation="include">
        </childnode>
        <childnode refid="19211" relation="include">
        </childnode>
        <childnode refid="19216" relation="include">
        </childnode>
        <childnode refid="19212" relation="include">
        </childnode>
        <childnode refid="19247" relation="include">
        </childnode>
        <childnode refid="19248" relation="include">
        </childnode>
        <childnode refid="19249" relation="include">
        </childnode>
        <childnode refid="19250" relation="include">
        </childnode>
        <childnode refid="19208" relation="include">
        </childnode>
        <childnode refid="19229" relation="include">
        </childnode>
        <childnode refid="19230" relation="include">
        </childnode>
      </node>
      <node id="19230">
        <label>json/json_spirit_writer_template.h</label>
        <link refid="json__spirit__writer__template_8h"/>
        <childnode refid="19209" relation="include">
        </childnode>
        <childnode refid="19213" relation="include">
        </childnode>
        <childnode refid="19214" relation="include">
        </childnode>
        <childnode refid="19231" relation="include">
        </childnode>
      </node>
      <node id="19272">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="19226">
        <label>boost/spirit/utility/escape_char.hpp</label>
      </node>
      <node id="19270">
        <label>utility</label>
      </node>
      <node id="19214">
        <label>sstream</label>
      </node>
      <node id="19283">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="19277">
        <label>openssl/evp.h</label>
      </node>
      <node id="19267">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="19213" relation="include">
        </childnode>
        <childnode refid="19268" relation="include">
        </childnode>
        <childnode refid="19214" relation="include">
        </childnode>
        <childnode refid="19215" relation="include">
        </childnode>
      </node>
      <node id="19216">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="19252">
        <label>sys/time.h</label>
      </node>
      <node id="19268">
        <label>iostream</label>
      </node>
      <node id="19287">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="19288" relation="include">
        </childnode>
        <childnode refid="19256" relation="include">
        </childnode>
        <childnode refid="19215" relation="include">
        </childnode>
        <childnode refid="19216" relation="include">
        </childnode>
        <childnode refid="19212" relation="include">
        </childnode>
        <childnode refid="19210" relation="include">
        </childnode>
      </node>
      <node id="19221">
        <label>boost/bind.hpp</label>
      </node>
      <node id="19217">
        <label>boost/config.hpp</label>
      </node>
      <node id="19236">
        <label>sys/socket.h</label>
      </node>
      <node id="19209">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="19210" relation="include">
        </childnode>
        <childnode refid="19211" relation="include">
        </childnode>
        <childnode refid="19212" relation="include">
        </childnode>
        <childnode refid="19213" relation="include">
        </childnode>
        <childnode refid="19214" relation="include">
        </childnode>
        <childnode refid="19215" relation="include">
        </childnode>
        <childnode refid="19216" relation="include">
        </childnode>
        <childnode refid="19217" relation="include">
        </childnode>
        <childnode refid="19218" relation="include">
        </childnode>
        <childnode refid="19219" relation="include">
        </childnode>
      </node>
      <node id="19281">
        <label>openssl/bn.h</label>
      </node>
      <node id="19260">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="19261" relation="include">
        </childnode>
        <childnode refid="19263" relation="include">
        </childnode>
        <childnode refid="19212" relation="include">
        </childnode>
        <childnode refid="19264" relation="include">
        </childnode>
        <childnode refid="19211" relation="include">
        </childnode>
        <childnode refid="19235" relation="include">
        </childnode>
        <childnode refid="19242" relation="include">
        </childnode>
        <childnode refid="19244" relation="include">
        </childnode>
      </node>
      <node id="19227">
        <label>boost/spirit/iterator/multi_pass.hpp</label>
      </node>
      <node id="19285">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="19286" relation="include">
        </childnode>
        <childnode refid="19287" relation="include">
        </childnode>
        <childnode refid="19210" relation="include">
        </childnode>
      </node>
      <node id="19206">
        <label>set</label>
      </node>
      <node id="19261">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="19262" relation="include">
        </childnode>
      </node>
      <node id="19256">
        <label>cstring</label>
      </node>
      <node id="19225">
        <label>boost/spirit/utility/confix.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_c_r_p_c_convert_param" prot="public">CRPCConvertParam</innerclass>
    <innerclass refid="class_c_r_p_c_convert_table" prot="public">CRPCConvertTable</innerclass>
    <innernamespace refid="namespaceboost_1_1asio">boost::asio</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rpcclient_8cpp_1ab8025703c00d9e9afa3966d2b996b8af" prot="public" static="yes" mutable="no">
        <type>const <ref refid="class_c_r_p_c_convert_param" kindref="compound">CRPCConvertParam</ref></type>
        <definition>const CRPCConvertParam vRPCConvertParams[]</definition>
        <argsstring>[]</argsstring>
        <name>vRPCConvertParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcclient.cpp" line="104" column="1" bodyfile="/home/dev/ds-160209/src/rpcclient.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rpcclient_8cpp_1a6d60660afcf768f1d1c866f0469da76a" prot="public" static="yes" mutable="no">
        <type><ref refid="class_c_r_p_c_convert_table" kindref="compound">CRPCConvertTable</ref></type>
        <definition>CRPCConvertTable rpcCvtTable</definition>
        <argsstring></argsstring>
        <name>rpcCvtTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcclient.cpp" line="204" column="1" bodyfile="/home/dev/ds-160209/src/rpcclient.cpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref></type>
        <definition>Object CallRPC</definition>
        <argsstring>(const string &amp;strMethod, const Array &amp;params)</argsstring>
        <name>CallRPC</name>
        <param>
          <type>const string &amp;</type>
          <declname>strMethod</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcclient.cpp" line="33" column="1" bodyfile="/home/dev/ds-160209/src/rpcclient.cpp" bodystart="33" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="rpcclient_8cpp_1a21bbebd932d31a5b92fae7f504a7b37e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref></type>
        <definition>Array RPCConvertValues</definition>
        <argsstring>(const std::string &amp;strMethod, const std::vector&lt; std::string &gt; &amp;strParams)</argsstring>
        <name>RPCConvertValues</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strMethod</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>strParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcclient.cpp" line="207" column="1" bodyfile="/home/dev/ds-160209/src/rpcclient.cpp" bodystart="207" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="rpcclient_8cpp_1a4ee23259648a971c9c05aeff8b545a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CommandLineRPC</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>CommandLineRPC</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcclient.cpp" line="232" column="1" bodyfile="/home/dev/ds-160209/src/rpcclient.cpp" bodystart="232" bodyend="295"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rpcclient_8h" kindref="compound">rpcclient.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rpcprotocol_8h" kindref="compound">rpcprotocol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui__interface_8h" kindref="compound">ui_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chainparams_8h" kindref="compound">chainparams.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>Params().RPCPort()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio/ssl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/foreach.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iostreams/concepts.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iostreams/stream.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost" kindref="compound">boost</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost_1_1asio" kindref="compound">boost::asio</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacejson__spirit" kindref="compound">json_spirit</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" refkind="member"><highlight class="normal"><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/><ref refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" kindref="member">CallRPC</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>strMethod,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-rpcuser&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-rpcpassword&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>set<sp/>rpcpassword=&lt;password&gt;<sp/>in<sp/>the<sp/>configuration<sp/>file:\n%s\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>the<sp/>file<sp/>does<sp/>not<sp/>exist,<sp/>create<sp/>it<sp/>with<sp/>owner-readable-only<sp/>file<sp/>permissions.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a7d86fadf98dfaba55f80b9be0ab0f978" kindref="member">GetConfigFile</ref>().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>to<sp/>localhost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUseSSL<sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-rpcssl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>asio::io_service<sp/>io_service;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ssl::context<sp/>context(io_service,<sp/>ssl::context::sslv23);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>context.set_options(ssl::context::no_sslv2);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>asio::ssl::stream&lt;asio::ip::tcp::socket&gt;<sp/>sslStream(io_service,<sp/>context);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_s_l_i_o_stream_device" kindref="compound">SSLIOStreamDevice&lt;asio::ip::tcp&gt;</ref><sp/>d(sslStream,<sp/>fUseSSL);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>iostreams::stream&lt;<sp/>SSLIOStreamDevice&lt;asio::ip::tcp&gt;<sp/>&gt;<sp/>stream(d);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fWait<sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-rpcwait&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>-rpcwait<sp/>means<sp/>try<sp/>until<sp/>server<sp/>has<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fConnected<sp/>=<sp/>d.<ref refid="class_s_s_l_i_o_stream_device_1acdded14a6c79e263989ebf8aea392405" kindref="member">connect</ref>(<ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-rpcconnect&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;127.0.0.1&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-rpcport&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a565b3ea015b133d01dc52b4ec6e45f07" kindref="member">itostr</ref>(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().RPCPort())));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fConnected)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fWait)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(1000);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;couldn&apos;t<sp/>connect<sp/>to<sp/>server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fWait);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HTTP<sp/>basic<sp/>authentication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strUserPass64<sp/>=<sp/><ref refid="util_8cpp_1a5e074135870a6fdfae4ac02047bc0432" kindref="member">EncodeBase64</ref>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-rpcuser&quot;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>[</highlight><highlight class="stringliteral">&quot;-rpcpassword&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;string,<sp/>string&gt;<sp/>mapRequestHeaders;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>mapRequestHeaders[</highlight><highlight class="stringliteral">&quot;Authorization&quot;</highlight><highlight class="normal">]<sp/>=<sp/>string(</highlight><highlight class="stringliteral">&quot;Basic<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>strUserPass64;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strRequest<sp/>=<sp/><ref refid="rpcprotocol_8cpp_1ab409c39d9d803bb50fecd4f0ff9970a4" kindref="member">JSONRPCRequest</ref>(strMethod,<sp/>params,<sp/>1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strPost<sp/>=<sp/><ref refid="rpcprotocol_8cpp_1af2d91e7026366657a021311ecc188262" kindref="member">HTTPPost</ref>(strRequest,<sp/>mapRequestHeaders);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>strPost<sp/>&lt;&lt;<sp/>std::flush;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Receive<sp/>HTTP<sp/>reply<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nProto<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStatus<sp/>=<sp/><ref refid="rpcprotocol_8cpp_1af615c564cc7794d255e5adfacade4066" kindref="member">ReadHTTPStatus</ref>(stream,<sp/>nProto);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Receive<sp/>HTTP<sp/>reply<sp/>message<sp/>headers<sp/>and<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;string,<sp/>string&gt;<sp/>mapHeaders;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strReply;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8cpp_1a04ef20cccddfd1505806982c3c232325" kindref="member">ReadHTTPMessage</ref>(stream,<sp/>mapHeaders,<sp/>strReply,<sp/>nProto,<sp/><ref refid="mruset__tests_8cpp_1a0592dba56693fad79136250c11e5a7fe" kindref="member">MAX_SIZE</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStatus<sp/>==<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a74677f364201a3d068bc6b9db7359288" kindref="member">HTTP_UNAUTHORIZED</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;incorrect<sp/>rpcuser<sp/>or<sp/>rpcpassword<sp/>(authorization<sp/>failed)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStatus<sp/>&gt;=<sp/>400<sp/>&amp;&amp;<sp/>nStatus<sp/>!=<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a173b2a55d636fe537b9069a4fb3388f2" kindref="member">HTTP_BAD_REQUEST</ref><sp/>&amp;&amp;<sp/>nStatus<sp/>!=<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7a2f2a109c030ee9d2d5afe761232451" kindref="member">HTTP_NOT_FOUND</ref><sp/>&amp;&amp;<sp/>nStatus<sp/>!=<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" kindref="member">HTTP_INTERNAL_SERVER_ERROR</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;server<sp/>returned<sp/>HTTP<sp/>error<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>nStatus));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strReply.empty())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;no<sp/>response<sp/>from<sp/>server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/>valReply;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacejson__spirit_1ad3468273008e225785eda58e04f534fe" kindref="member">read_string</ref>(strReply,<sp/>valReply))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;couldn&apos;t<sp/>parse<sp/>reply<sp/>from<sp/>server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref>&amp;<sp/>reply<sp/>=<sp/>valReply.<ref refid="classjson__spirit_1_1_value__impl_1a85bcead33b915d62f83bb95ad824da4f" kindref="member">get_obj</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply.empty())</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;expected<sp/>reply<sp/>to<sp/>have<sp/>result,<sp/>error<sp/>and<sp/>id<sp/>properties&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reply;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_c_r_p_c_convert_param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_r_p_c_convert_param" kindref="compound">CRPCConvertParam</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100" refid="class_c_r_p_c_convert_param_1a072d6cde94ea57223445dee927ee1527" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_r_p_c_convert_param_1a072d6cde94ea57223445dee927ee1527" kindref="member">methodName</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>method<sp/>whose<sp/>params<sp/>want<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_c_r_p_c_convert_param_1a3bd464f8d5db060616e7be8fbacb58f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_r_p_c_convert_param_1a3bd464f8d5db060616e7be8fbacb58f8" kindref="member">paramIdx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0-based<sp/>idx<sp/>of<sp/>param<sp/>to<sp/>convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_r_p_c_convert_param" kindref="compound">CRPCConvertParam</ref><sp/>vRPCConvertParams[]<sp/>=</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;stop&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getaddednodeinfo&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendtoaddress&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendtoaddress&quot;</highlight><highlight class="normal">,<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendtoaddress&quot;</highlight><highlight class="normal">,<sp/>5<sp/>},</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;settxfee&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getreceivedbyaddress&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getreceivedbyaccount&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listreceivedbyaddress&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listreceivedbyaddress&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listreceivedbyaddress&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listreceivedbyaccount&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listreceivedbyaccount&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listreceivedbyaccount&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getbalance&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getbalance&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getblock&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getblockbynumber&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getblockbynumber&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getblockhash&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;move&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;move&quot;</highlight><highlight class="normal">,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendfrom&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendfrom&quot;</highlight><highlight class="normal">,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listtransactions&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listtransactions&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listtransactions&quot;</highlight><highlight class="normal">,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listaccounts&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listaccounts&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;walletpassphrase&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;walletpassphrase&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getblocktemplate&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listsinceblock&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listsinceblock&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendalert&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendalert&quot;</highlight><highlight class="normal">,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendalert&quot;</highlight><highlight class="normal">,<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendalert&quot;</highlight><highlight class="normal">,<sp/>5<sp/>},</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendalert&quot;</highlight><highlight class="normal">,<sp/>6<sp/>},</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendmany&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendmany&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendmany&quot;</highlight><highlight class="normal">,<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendmany&quot;</highlight><highlight class="normal">,<sp/>5<sp/>},</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;reservebalance&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;reservebalance&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;createmultisig&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;createmultisig&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;addmultisigaddress&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;addmultisigaddress&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listunspent&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listunspent&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;listunspent&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;getrawtransaction&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;createrawtransaction&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;createrawtransaction&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;signrawtransaction&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;signrawtransaction&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;keypoolrefill&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;importprivkey&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;importaddress&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;checkkernel&quot;</highlight><highlight class="normal">,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;checkkernel&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;submitblock&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sendtostealthaddress&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;searchrawtransactions&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;searchrawtransactions&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;searchrawtransactions&quot;</highlight><highlight class="normal">,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;snbudget&quot;</highlight><highlight class="normal">,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;snbudget&quot;</highlight><highlight class="normal">,<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;snbudget&quot;</highlight><highlight class="normal">,<sp/>6<sp/>},</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;snbudgetvoteraw&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;snbudgetvoteraw&quot;</highlight><highlight class="normal">,<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_c_r_p_c_convert_table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_r_p_c_convert_table" kindref="compound">CRPCConvertTable</ref></highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;std::pair&lt;std::string,<sp/>int&gt;<sp/>&gt;<sp/>members;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_r_p_c_convert_table" kindref="compound">CRPCConvertTable</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_c_r_p_c_convert_table_1a034b770cb03e79074111b85eba889e58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_r_p_c_convert_table_1a034b770cb03e79074111b85eba889e58" kindref="member">convert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>method,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(members.count(std::make_pair(method,<sp/>idx))<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_c_r_p_c_convert_table_1a7f79dde2002bd2bc2178bd38f213922d" refkind="member"><highlight class="normal"><ref refid="class_c_r_p_c_convert_table_1a7f79dde2002bd2bc2178bd38f213922d" kindref="member">CRPCConvertTable::CRPCConvertTable</ref>()</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_elem<sp/>=</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vRPCConvertParams)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vRPCConvertParams[0]));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_elem;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>members.insert(std::make_pair(vRPCConvertParams[i].methodName,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRPCConvertParams[i].paramIdx));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_r_p_c_convert_table" kindref="compound">CRPCConvertTable</ref><sp/>rpcCvtTable;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>strings<sp/>to<sp/>command-specific<sp/>RPC<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="rpcclient_8h_1af57174bf8d1b389517a8ab58bf5c6a3d" refkind="member"><highlight class="normal"><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/><ref refid="rpcclient_8cpp_1a21bbebd932d31a5b92fae7f504a7b37e" kindref="member">RPCConvertValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;strMethod,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;strParams)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>params;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>strParams.size();<sp/>idx++)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strVal<sp/>=<sp/>strParams[idx];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>string<sp/>value<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rpcCvtTable.<ref refid="class_c_r_p_c_convert_table_1a034b770cb03e79074111b85eba889e58" kindref="member">convert</ref>(strMethod,<sp/>idx))<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.push_back(strVal);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>string<sp/>as<sp/>JSON,<sp/>insert<sp/>bool/number/object/etc.<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/>jVal;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacejson__spirit_1ad3468273008e225785eda58e04f534fe" kindref="member">read_string</ref>(strVal,<sp/>jVal))</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Error<sp/>parsing<sp/>JSON:&quot;</highlight><highlight class="normal">)+strVal);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.push_back(jVal);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>params;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="rpcclient_8h_1a4ee23259648a971c9c05aeff8b545a6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rpcclient_8cpp_1a4ee23259648a971c9c05aeff8b545a6d" kindref="member">CommandLineRPC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strPrint;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>switches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/><ref refid="util_8h_1ac0165e18ce3be89a2e0731e27d54b478" kindref="member">IsSwitchChar</ref>(argv[1][0]))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argc--;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv++;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;too<sp/>few<sp/>parameters&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strMethod<sp/>=<sp/>argv[1];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameters<sp/>default<sp/>to<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>strParams(&amp;argv[2],<sp/>&amp;argv[argc]);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>params<sp/>=<sp/><ref refid="rpcclient_8cpp_1a21bbebd932d31a5b92fae7f504a7b37e" kindref="member">RPCConvertValues</ref>(strMethod,<sp/>strParams);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Execute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>reply<sp/>=<sp/><ref refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" kindref="member">CallRPC</ref>(strMethod,<sp/>params);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>result<sp/>=<sp/><ref refid="namespacejson__spirit_1a74f681114641f2ca6250370280ee1089" kindref="member">find_value</ref>(reply,<sp/></highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>error<sp/><sp/>=<sp/><ref refid="namespacejson__spirit_1a74f681114641f2ca6250370280ee1089" kindref="member">find_value</ref>(reply,<sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error.<ref refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" kindref="member">type</ref>()<sp/>!=<sp/><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a38ef470443cb345064758efff2e303fc" kindref="member">null_type</ref>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strPrint<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacejson__spirit_1ad4b51f460af6cdec5b128f53f233b0c6" kindref="member">write_string</ref>(error,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/><ref refid="namespacejson__spirit_1a74f681114641f2ca6250370280ee1089" kindref="member">find_value</ref>(error.<ref refid="classjson__spirit_1_1_value__impl_1a85bcead33b915d62f83bb95ad824da4f" kindref="member">get_obj</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;code&quot;</highlight><highlight class="normal">).get_int();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRet<sp/>=<sp/>abs(code);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" kindref="member">type</ref>()<sp/>==<sp/><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a38ef470443cb345064758efff2e303fc" kindref="member">null_type</ref>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strPrint<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" kindref="member">type</ref>()<sp/>==<sp/><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74aa7f3c0ef07c91049418fc6ac24ff1c1f" kindref="member">str_type</ref>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strPrint<sp/>=<sp/>result.<ref refid="classjson__spirit_1_1_value__impl_1a0e02b3a4e65ae45f069ee938fee40f80" kindref="member">get_str</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strPrint<sp/>=<sp/><ref refid="namespacejson__spirit_1ad4b51f460af6cdec5b128f53f233b0c6" kindref="member">write_string</ref>(result,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(boost::thread_interrupted)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strPrint<sp/>=<sp/>string(</highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>e.what();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRet<sp/>=<sp/>87;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(NULL,<sp/></highlight><highlight class="stringliteral">&quot;CommandLineRPC()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strPrint<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf((nRet<sp/>==<sp/>0<sp/>?<sp/>stdout<sp/>:<sp/>stderr),<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>strPrint.c_str());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nRet;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/rpcclient.cpp"/>
  </compounddef>
</doxygen>
