<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_pub_key" kind="class" language="C++" prot="public">
    <compoundname>CPubKey</compoundname>
    <includes refid="pubkey_8h" local="no">pubkey.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_pub_key_1a4146dd2d136567d5a4a7b8f1ca2c4b59" prot="private" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char CPubKey::vch[65]</definition>
        <argsstring>[65]</argsstring>
        <name>vch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="47" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_c_pub_key_1a7dc71b3f037c84268dc22de97d7b65fb" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned static int</type>
        <definition>unsigned static int CPubKey::GetLen</definition>
        <argsstring>(unsigned char chHeader)</argsstring>
        <name>GetLen</name>
        <param>
          <type>unsigned char</type>
          <declname>chHeader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="50" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="50" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_c_pub_key_1a99917e80a362af54a3677ea9cf1328ee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CPubKey::Invalidate</definition>
        <argsstring>()</argsstring>
        <name>Invalidate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="59" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="59" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_pub_key_1a468f3aef3555d12ede19c0d8dc88c13a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CPubKey::CPubKey</definition>
        <argsstring>()</argsstring>
        <name>CPubKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1af59bc1d3be119c1f8b49d3c1e2c0797b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CPubKey::Set</definition>
        <argsstring>(const T pbegin, const T pend)</argsstring>
        <name>Set</name>
        <param>
          <type>const T</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>pend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="71" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="71" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a8c7527b40c96bfb8f48b669764301df8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CPubKey::CPubKey</definition>
        <argsstring>(const T pbegin, const T pend)</argsstring>
        <name>CPubKey</name>
        <param>
          <type>const T</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>pend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="81" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a31307d0318ebda95c7e34ef1554fe2d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CPubKey::CPubKey</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>CPubKey</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="86" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CPubKey::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="91" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* CPubKey::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="92" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* CPubKey::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a70df86158a27670eb4566ca0c587cdec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char &amp;</type>
        <definition>const unsigned char&amp; CPubKey::operator[]</definition>
        <argsstring>(unsigned int pos) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>unsigned int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="94" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a71ca590df9b99faaf1604f826d2c8807" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CPubKey::GetSerializeSize</definition>
        <argsstring>(int nType, int nVersion) const </argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="110" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a315865ee4c45726c01fae44d53b180a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CPubKey::Serialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="113" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a1cfd8e3c711f5298eecdacd5979f6e6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CPubKey::Unserialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="118" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="118" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref></type>
        <definition>CKeyID CPubKey::GetID</definition>
        <argsstring>() const </argsstring>
        <name>GetID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a85b5eaf92b26cb4a230586050285c3f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CPubKey::GetHash</definition>
        <argsstring>() const </argsstring>
        <name>GetHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="137" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::IsValid</definition>
        <argsstring>() const </argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="144" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a2533ec5fc9a1c3d2ef39d0faa3ad6cdd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::IsFullyValid</definition>
        <argsstring>() const </argsstring>
        <name>IsFullyValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="149" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="207" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::IsCompressed</definition>
        <argsstring>() const </argsstring>
        <name>IsCompressed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="152" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::Verify</definition>
        <argsstring>(const uint256 &amp;hash, const std::vector&lt; unsigned char &gt; &amp;vchSig) const </argsstring>
        <name>Verify</name>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="158" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="167" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a169505e735a02db385486b0affeb565c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::RecoverCompact</definition>
        <argsstring>(const uint256 &amp;hash, const std::vector&lt; unsigned char &gt; &amp;vchSig)</argsstring>
        <name>RecoverCompact</name>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="166" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="187" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a572689418fecf47b300a11519bc3da36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::Decompress</definition>
        <argsstring>()</argsstring>
        <name>Decompress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="169" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="214" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::Derive</definition>
        <argsstring>(CPubKey &amp;pubkeyChild, unsigned char ccChild[32], unsigned int nChild, const unsigned char cc[32]) const </argsstring>
        <name>Derive</name>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubkeyChild</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ccChild</declname>
          <array>[32]</array>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nChild</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>cc</declname>
          <array>[32]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="172" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="228" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a84463c7b02b9fa123c11470865180402" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CPubKey::Raw</definition>
        <argsstring>() const </argsstring>
        <name>Raw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="175" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="175" bodyend="179"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_pub_key_1a864b3cdcb46fb85c1fc07e0686cc3a31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CPubKey &amp;a, const CPubKey &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="97" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_pub_key_1af660fd5a8d213211dfff37a2296d09e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const CPubKey &amp;a, const CPubKey &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="101" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_pub_key_1af814095b2c92bedd96a83a0811d52da9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const CPubKey &amp;a, const CPubKey &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="104" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="104" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_c_pub_key_1a4ada230ef593456ef9088c28fd5ca34e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::CheckLowS</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vchSig)</argsstring>
        <name>CheckLowS</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether a signature is normalized (lower-S). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="163" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="275" bodyend="281"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An encapsulated public key. </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/pubkey.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="43" bodyend="180"/>
    <listofallmembers>
      <member refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>begin</name></member>
      <member refid="class_c_pub_key_1a4ada230ef593456ef9088c28fd5ca34e" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>CheckLowS</name></member>
      <member refid="class_c_pub_key_1a468f3aef3555d12ede19c0d8dc88c13a" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>CPubKey</name></member>
      <member refid="class_c_pub_key_1a8c7527b40c96bfb8f48b669764301df8" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>CPubKey</name></member>
      <member refid="class_c_pub_key_1a31307d0318ebda95c7e34ef1554fe2d2" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>CPubKey</name></member>
      <member refid="class_c_pub_key_1a572689418fecf47b300a11519bc3da36" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Decompress</name></member>
      <member refid="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Derive</name></member>
      <member refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>end</name></member>
      <member refid="class_c_pub_key_1a85b5eaf92b26cb4a230586050285c3f4" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>GetHash</name></member>
      <member refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>GetID</name></member>
      <member refid="class_c_pub_key_1a7dc71b3f037c84268dc22de97d7b65fb" prot="private" virt="non-virtual"><scope>CPubKey</scope><name>GetLen</name></member>
      <member refid="class_c_pub_key_1a71ca590df9b99faaf1604f826d2c8807" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>GetSerializeSize</name></member>
      <member refid="class_c_pub_key_1a99917e80a362af54a3677ea9cf1328ee" prot="private" virt="non-virtual"><scope>CPubKey</scope><name>Invalidate</name></member>
      <member refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>IsCompressed</name></member>
      <member refid="class_c_pub_key_1a2533ec5fc9a1c3d2ef39d0faa3ad6cdd" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>IsFullyValid</name></member>
      <member refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>IsValid</name></member>
      <member refid="class_c_pub_key_1af660fd5a8d213211dfff37a2296d09e1" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>operator!=</name></member>
      <member refid="class_c_pub_key_1af814095b2c92bedd96a83a0811d52da9" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>operator&lt;</name></member>
      <member refid="class_c_pub_key_1a864b3cdcb46fb85c1fc07e0686cc3a31" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>operator==</name></member>
      <member refid="class_c_pub_key_1a70df86158a27670eb4566ca0c587cdec" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>operator[]</name></member>
      <member refid="class_c_pub_key_1a84463c7b02b9fa123c11470865180402" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Raw</name></member>
      <member refid="class_c_pub_key_1a169505e735a02db385486b0affeb565c" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>RecoverCompact</name></member>
      <member refid="class_c_pub_key_1a315865ee4c45726c01fae44d53b180a1" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Serialize</name></member>
      <member refid="class_c_pub_key_1af59bc1d3be119c1f8b49d3c1e2c0797b" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Set</name></member>
      <member refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>size</name></member>
      <member refid="class_c_pub_key_1a1cfd8e3c711f5298eecdacd5979f6e6c" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Unserialize</name></member>
      <member refid="class_c_pub_key_1a4146dd2d136567d5a4a7b8f1ca2c4b59" prot="private" virt="non-virtual"><scope>CPubKey</scope><name>vch</name></member>
      <member refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Verify</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
