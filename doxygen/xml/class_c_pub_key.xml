<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_pub_key" kind="class" language="C++" prot="public">
    <compoundname>CPubKey</compoundname>
    <includes refid="pubkey_8h" local="no">pubkey.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_pub_key_1a4146dd2d136567d5a4a7b8f1ca2c4b59" prot="private" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char CPubKey::vch[65]</definition>
        <argsstring>[65]</argsstring>
        <name>vch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="47" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_c_pub_key_1a7dc71b3f037c84268dc22de97d7b65fb" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned static int</type>
        <definition>unsigned static int CPubKey::GetLen</definition>
        <argsstring>(unsigned char chHeader)</argsstring>
        <name>GetLen</name>
        <param>
          <type>unsigned char</type>
          <declname>chHeader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="50" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="50" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_c_pub_key_1a99917e80a362af54a3677ea9cf1328ee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CPubKey::Invalidate</definition>
        <argsstring>()</argsstring>
        <name>Invalidate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="59" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="59" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_pub_key_1a468f3aef3555d12ede19c0d8dc88c13a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CPubKey::CPubKey</definition>
        <argsstring>()</argsstring>
        <name>CPubKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1af59bc1d3be119c1f8b49d3c1e2c0797b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CPubKey::Set</definition>
        <argsstring>(const T pbegin, const T pend)</argsstring>
        <name>Set</name>
        <param>
          <type>const T</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>pend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="71" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="71" bodyend="77"/>
        <referencedby refid="class_c_script_compressor_1a4cec58b09c4ab7873b5884ed690ed0f9" compoundref="compressor_8cpp" startline="32" endline="45">CScriptCompressor::IsToPubKey</referencedby>
        <referencedby refid="class_c_pub_key_1a169505e735a02db385486b0affeb565c" compoundref="pubkey_8cpp" startline="187" endline="205">RecoverCompact</referencedby>
        <referencedby refid="class_c_pub_key_1a572689418fecf47b300a11519bc3da36" compoundref="pubkey_8cpp" startline="214" endline="226">Decompress</referencedby>
        <referencedby refid="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" compoundref="pubkey_8cpp" startline="228" endline="247">Derive</referencedby>
        <referencedby refid="struct_c_ext_pub_key_1aa3ca44410ecfa765962d3b97aef61ab5" compoundref="pubkey_8cpp" startline="259" endline="265">CExtPubKey::Decode</referencedby>
        <referencedby refid="class_c_pub_key_1a8c7527b40c96bfb8f48b669764301df8" compoundref="pubkey_8h" startline="81" endline="83">CPubKey</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a8c7527b40c96bfb8f48b669764301df8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CPubKey::CPubKey</definition>
        <argsstring>(const T pbegin, const T pend)</argsstring>
        <name>CPubKey</name>
        <param>
          <type>const T</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>pend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="81" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="81" bodyend="83"/>
        <references refid="class_c_pub_key_1af59bc1d3be119c1f8b49d3c1e2c0797b" compoundref="pubkey_8h" startline="71" endline="77">Set</references>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a31307d0318ebda95c7e34ef1554fe2d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CPubKey::CPubKey</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>CPubKey</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="86" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="86" bodyend="88"/>
        <references refid="class_c_pub_key_1af59bc1d3be119c1f8b49d3c1e2c0797b" compoundref="pubkey_8h" startline="71" endline="77">Set</references>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CPubKey::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="91" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="91" bodyend="91"/>
        <referencedby refid="class_c_script_compressor_1a1feb663ddab3a45218c7cb02f2a25717" compoundref="compressor_8cpp" startline="87" endline="130">CScriptCompressor::Decompress</referencedby>
        <referencedby refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" compoundref="key_8cpp" startline="169" endline="180">CKey::GetPubKey</referencedby>
        <referencedby refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" compoundref="pubkey_8cpp" startline="167" endline="185">Verify</referencedby>
        <referencedby refid="class_c_pub_key_1a2533ec5fc9a1c3d2ef39d0faa3ad6cdd" compoundref="pubkey_8cpp" startline="207" endline="212">IsFullyValid</referencedby>
        <referencedby refid="class_c_pub_key_1a572689418fecf47b300a11519bc3da36" compoundref="pubkey_8cpp" startline="214" endline="226">Decompress</referencedby>
        <referencedby refid="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" compoundref="pubkey_8cpp" startline="228" endline="247">Derive</referencedby>
        <referencedby refid="struct_c_ext_pub_key_1af197553c91c690fc436421fe00d55f8e" compoundref="pubkey_8cpp" startline="249" endline="257">CExtPubKey::Encode</referencedby>
        <referencedby refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" compoundref="pubkey_8h" startline="93" endline="93">end</referencedby>
        <referencedby refid="class_c_pub_key_1a71ca590df9b99faaf1604f826d2c8807" compoundref="pubkey_8h" startline="110" endline="112">GetSerializeSize</referencedby>
        <referencedby refid="class_c_pub_key_1a315865ee4c45726c01fae44d53b180a1" compoundref="pubkey_8h" startline="113" endline="117">Serialize</referencedby>
        <referencedby refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">GetID</referencedby>
        <referencedby refid="class_c_pub_key_1a85b5eaf92b26cb4a230586050285c3f4" compoundref="pubkey_8h" startline="137" endline="139">GetHash</referencedby>
        <referencedby refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">IsValid</referencedby>
        <referencedby refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" compoundref="pubkey_8h" startline="152" endline="154">IsCompressed</referencedby>
        <referencedby refid="class_c_pub_key_1a84463c7b02b9fa123c11470865180402" compoundref="pubkey_8h" startline="175" endline="179">Raw</referencedby>
        <referencedby refid="class_c_script_1a90ca62e4cd7e8c6e90a397f42d6b0564" compoundref="script_8h" startline="652" endline="658">CScript::operator&lt;&lt;</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
        <referencedby refid="class_c_wallet_d_b_1a7ebef5e0c7f604aa2159ba96d527e3a2" compoundref="walletdb_8cpp" startline="80" endline="95">CWalletDB::WriteKey</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* CPubKey::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="92" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="92" bodyend="92"/>
        <referencedby refid="class_c_script_compressor_1a1feb663ddab3a45218c7cb02f2a25717" compoundref="compressor_8cpp" startline="87" endline="130">CScriptCompressor::Decompress</referencedby>
        <referencedby refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" compoundref="key_8cpp" startline="169" endline="180">CKey::GetPubKey</referencedby>
        <referencedby refid="class_c_key_1abb0091d4390dcece3c56ea4c1fdd6036" compoundref="key_8cpp" startline="238" endline="258">CKey::Derive</referencedby>
        <referencedby refid="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" compoundref="pubkey_8cpp" startline="228" endline="247">Derive</referencedby>
        <referencedby refid="struct_c_ext_pub_key_1af197553c91c690fc436421fe00d55f8e" compoundref="pubkey_8cpp" startline="249" endline="257">CExtPubKey::Encode</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a3f3bb4d519074126a20dd609a6886a72" compoundref="rpcwallet_8cpp" startline="187" endline="211">getnewpubkey</referencedby>
        <referencedby refid="class_c_script_1a90ca62e4cd7e8c6e90a397f42d6b0564" compoundref="script_8h" startline="652" endline="658">CScript::operator&lt;&lt;</referencedby>
        <referencedby refid="smessage_8h_1a6dadcd107f4196325fd1b0841dbffd2a" compoundref="smessage_8cpp" startline="2619" endline="2647">SecureMsgGetLocalPublicKey</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_wallet_d_b_1a7ebef5e0c7f604aa2159ba96d527e3a2" compoundref="walletdb_8cpp" startline="80" endline="95">CWalletDB::WriteKey</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* CPubKey::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="93" bodyend="93"/>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <referencedby refid="class_c_key_1abb0091d4390dcece3c56ea4c1fdd6036" compoundref="key_8cpp" startline="238" endline="258">CKey::Derive</referencedby>
        <referencedby refid="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" compoundref="pubkey_8cpp" startline="228" endline="247">Derive</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a3f3bb4d519074126a20dd609a6886a72" compoundref="rpcwallet_8cpp" startline="187" endline="211">getnewpubkey</referencedby>
        <referencedby refid="class_c_script_1a90ca62e4cd7e8c6e90a397f42d6b0564" compoundref="script_8h" startline="652" endline="658">CScript::operator&lt;&lt;</referencedby>
        <referencedby refid="smessage_8h_1a6dadcd107f4196325fd1b0841dbffd2a" compoundref="smessage_8cpp" startline="2619" endline="2647">SecureMsgGetLocalPublicKey</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_wallet_d_b_1a7ebef5e0c7f604aa2159ba96d527e3a2" compoundref="walletdb_8cpp" startline="80" endline="95">CWalletDB::WriteKey</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a70df86158a27670eb4566ca0c587cdec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char &amp;</type>
        <definition>const unsigned char&amp; CPubKey::operator[]</definition>
        <argsstring>(unsigned int pos) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>unsigned int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="94" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a71ca590df9b99faaf1604f826d2c8807" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CPubKey::GetSerializeSize</definition>
        <argsstring>(int nType, int nVersion) const </argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="110" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="110" bodyend="112"/>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a315865ee4c45726c01fae44d53b180a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CPubKey::Serialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="113" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="113" bodyend="117"/>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <references refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" compoundref="serialize_8h" startline="192" endline="221">WriteCompactSize</references>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a1cfd8e3c711f5298eecdacd5979f6e6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CPubKey::Unserialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="118" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="118" bodyend="129"/>
        <references refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" compoundref="serialize_8h" startline="224" endline="260">ReadCompactSize</references>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref></type>
        <definition>CKeyID CPubKey::GetID</definition>
        <argsstring>() const </argsstring>
        <name>GetID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="132" bodyend="134"/>
        <references refid="hash_8h_1a4490f70ddae16e9e48460a0416a48a6b" compoundref="hash_8h" startline="246" endline="254">Hash160</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <referencedby refid="class_c_crypto_key_store_1a9f4d2df95008205b2b9784c5f0e8e12b" compoundref="crypter_8cpp" startline="289" endline="299">CCryptoKeyStore::AddCryptedKey</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="struct_c_ext_key_1a2fa3a39434ae09efbbd4058d1d081aa2" compoundref="key_8cpp" startline="260" endline="266">CExtKey::Derive</referencedby>
        <referencedby refid="class_c_basic_key_store_1acc2e33f319de88e88f86b0dc79bdcb65" compoundref="keystore_8cpp" startline="22" endline="27">CBasicKeyStore::AddKeyPubKey</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="struct_c_ext_pub_key_1a404798f7d800ffb539cf97431025597f" compoundref="pubkey_8cpp" startline="267" endline="273">CExtPubKey::Derive</referencedby>
        <referencedby refid="class_address_table_model_1a08ab9ae401a18d193f0e39551de81280" compoundref="addresstablemodel_8cpp" startline="349" endline="447">AddressTableModel::addRow</referencedby>
        <referencedby refid="class_wallet_model_1a497418d4a8566b881bab45dec7ad8fd8" compoundref="walletmodel_8cpp" startline="213" endline="488">WalletModel::sendCoins</referencedby>
        <referencedby refid="rpcdump_8cpp_1a3a6fdb974fce01220a895393d444e981" compoundref="rpcdump_8cpp" startline="106" endline="159">importprivkey</referencedby>
        <referencedby refid="rpcdump_8cpp_1a2566d5c9dd1938b74e70398cdb3ac5c1" compoundref="rpcdump_8cpp" startline="232" endline="318">importwallet</referencedby>
        <referencedby refid="rpcmisc_8cpp_1a32620752527477f4bac811a7db5ab35b" compoundref="rpcmisc_8cpp" startline="167" endline="205">validatepubkey</referencedby>
        <referencedby refid="rpcmisc_8cpp_1ad8fce781dfd9dfd4866bba2a4589141a" compoundref="rpcmisc_8cpp" startline="207" endline="241">verifymessage</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a3f3bb4d519074126a20dd609a6886a72" compoundref="rpcwallet_8cpp" startline="187" endline="211">getnewpubkey</referencedby>
        <referencedby refid="rpcwallet_8cpp_1aead824d845d670fbd8f187ebd4f9a535" compoundref="rpcwallet_8cpp" startline="214" endline="250">getnewaddress</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a19f70769435acea67b97050309dde6eb" compoundref="rpcwallet_8cpp" startline="253" endline="289">GetAccountAddress</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1af0d8155078c47c07ea80ce65f317940a" compoundref="sandstorm_8cpp" startline="1651" endline="1704">CSandstormPool::MakeCollateralAmounts</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ab7fac1067376f91b53aaf6862c15e914" compoundref="sandstorm_8cpp" startline="1707" endline="1798">CSandstormPool::CreateDenominated</referencedby>
        <referencedby refid="class_c_sand_storm_signer_1a21af58bfa950441f5d61e789a876ddda" compoundref="sandstorm_8cpp" startline="2027" endline="2042">CSandStormSigner::IsVinAssociatedWithPubkey</referencedby>
        <referencedby refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" compoundref="sandstorm_8cpp" startline="2073" endline="2089">CSandStormSigner::VerifyMessage</referencedby>
        <referencedby refid="script_8cpp_1a2230b054e152c344e60125bf7f994473" compoundref="script_8cpp" startline="2478" endline="2490">SignN</referencedby>
        <referencedby refid="script_8h_1a8e31b29d5a654a570c493f7aa9c3abd9" compoundref="script_8cpp" startline="2498" endline="2535">Solver</referencedby>
        <referencedby refid="script_8cpp_1a825478fbb9e96130529467ab5e16047e" compoundref="script_8cpp" startline="2579" endline="2589">HaveKeys</referencedby>
        <referencedby refid="script_8h_1ae1531a999ac1bfa59d70cfc984f1266b" compoundref="script_8cpp" startline="2614" endline="2668">IsMine</referencedby>
        <referencedby refid="script_8h_1a951f7e601746ae076afdf3169ecca2fc" compoundref="script_8cpp" startline="2670" endline="2694">ExtractDestination</referencedby>
        <referencedby refid="script_8h_1a49e36ddce090cc66aba405c0755c8be7" compoundref="script_8cpp" startline="2738" endline="2769">ExtractDestinations</referencedby>
        <referencedby refid="smessage_8h_1a7d84ccbc16eb3d679638ba37b822a5e2" compoundref="smessage_8cpp" startline="2676" endline="2729">SecureMsgAddAddress</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
        <referencedby refid="class_c_stormnode_payments_1accaeb923fe36e73d4228fc043771c4ad" compoundref="stormnode-payments_8cpp" startline="294" endline="346">CStormnodePayments::FillBlockPayee</referencedby>
        <referencedby refid="class_c_stormnode_payments_1ac2a8e2a9bef3c4c68c1e464903a1988f" compoundref="stormnode-payments_8cpp" startline="465" endline="488">CStormnodePayments::IsScheduled</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" compoundref="stormnode-payments_8cpp" startline="683" endline="762">CStormnodePayments::ProcessBlock</referencedby>
        <referencedby refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" compoundref="stormnode_8cpp" startline="228" endline="244">CStormnode::SecondsSincePayment</referencedby>
        <referencedby refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" compoundref="stormnode_8cpp" startline="246" endline="289">CStormnode::GetLastPaid</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" compoundref="stormnodeman_8cpp" startline="400" endline="412">CStormnodeMan::Find</referencedby>
        <referencedby refid="key__tests_8cpp_1add8f8fb6aeee707149cdf29db2eca2b2" compoundref="key__tests_8cpp" startline="56" endline="139">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="class_c_wallet_1a061fe7f54f80ec40f856b3e6365c2f4a" compoundref="wallet_8cpp" startline="77" endline="101">CWallet::GenerateNewKey</referencedby>
        <referencedby refid="class_c_wallet_1a3240da36cd717146296969227a3e0bd5" compoundref="wallet_8cpp" startline="103" endline="121">CWallet::AddKeyPubKey</referencedby>
        <referencedby refid="class_c_wallet_1a3e90096a903d49cd751f05fcdb7692ce" compoundref="wallet_8cpp" startline="123" endline="137">CWallet::AddCryptedKey</referencedby>
        <referencedby refid="class_c_wallet_1a21e6580474514f838dfe1446890085a4" compoundref="wallet_8cpp" startline="139" endline="147">CWallet::LoadKeyMetadata</referencedby>
        <referencedby refid="class_c_wallet_1a7fce7ef2029f265caf93d4db3bdb70c3" compoundref="wallet_8cpp" startline="2624" endline="2675">CWallet::CreateCollateralTransaction</referencedby>
        <referencedby refid="class_c_wallet_1ac45af0632ea59c56295d3158b7387f33" compoundref="wallet_8cpp" startline="3090" endline="3240">CWallet::UnlockStealthAddresses</referencedby>
        <referencedby refid="class_c_wallet_1afce932bf3aa678046ab75eccff004858" compoundref="wallet_8cpp" startline="3385" endline="3468">CWallet::SendStealthMoneyToDestination</referencedby>
        <referencedby refid="class_c_wallet_1a5d0e2025dc7a87a0406be272b80509ee" compoundref="wallet_8cpp" startline="3470" endline="3697">CWallet::FindStealthTransactions</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
        <referencedby refid="class_c_wallet_1a9921854840668a1856998f041177dd2b" compoundref="wallet_8cpp" startline="4366" endline="4391">CWallet::ReserveKeyFromKeyPool</referencedby>
        <referencedby refid="class_c_wallet_1afb9667058b54ae153b0897684ddb9f20" compoundref="wallet_8cpp" startline="4703" endline="4721">CWallet::GetAllReserveKeys</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a85b5eaf92b26cb4a230586050285c3f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CPubKey::GetHash</definition>
        <argsstring>() const </argsstring>
        <name>GetHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="137" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="137" bodyend="139"/>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <referencedby refid="class_c_crypto_key_store_1a81bd70e18aa75f566526620a74f9cd88" compoundref="crypter_8cpp" startline="238" endline="265">CCryptoKeyStore::Unlock</referencedby>
        <referencedby refid="class_c_crypto_key_store_1a340109b8673267676a34664a76ed3274" compoundref="crypter_8cpp" startline="267" endline="286">CCryptoKeyStore::AddKeyPubKey</referencedby>
        <referencedby refid="class_c_crypto_key_store_1a58cfb3c490318ef82de8fc9be6637269" compoundref="crypter_8cpp" startline="301" endline="323">CCryptoKeyStore::GetKey</referencedby>
        <referencedby refid="class_c_crypto_key_store_1a8c0f6b63fb04193df16243c4459b7c61" compoundref="crypter_8cpp" startline="342" endline="364">CCryptoKeyStore::EncryptKeys</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::IsValid</definition>
        <argsstring>() const </argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="144" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="144" bodyend="146"/>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <referencedby refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" compoundref="key_8cpp" startline="169" endline="180">CKey::GetPubKey</referencedby>
        <referencedby refid="class_transaction_signature_checker_1a6d9044dff84be9a2c2233fdf1508f9ab" compoundref="transaction_8cpp" startline="177" endline="196">TransactionSignatureChecker::CheckSig</referencedby>
        <referencedby refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" compoundref="pubkey_8cpp" startline="167" endline="185">Verify</referencedby>
        <referencedby refid="class_c_pub_key_1a2533ec5fc9a1c3d2ef39d0faa3ad6cdd" compoundref="pubkey_8cpp" startline="207" endline="212">IsFullyValid</referencedby>
        <referencedby refid="class_c_pub_key_1a572689418fecf47b300a11519bc3da36" compoundref="pubkey_8cpp" startline="214" endline="226">Decompress</referencedby>
        <referencedby refid="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" compoundref="pubkey_8cpp" startline="228" endline="247">Derive</referencedby>
        <referencedby refid="class_wallet_model_1a497418d4a8566b881bab45dec7ad8fd8" compoundref="walletmodel_8cpp" startline="213" endline="488">WalletModel::sendCoins</referencedby>
        <referencedby refid="rpcmisc_8cpp_1a32620752527477f4bac811a7db5ab35b" compoundref="rpcmisc_8cpp" startline="167" endline="205">validatepubkey</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1af9835f898bc619ef6f9a39a5a8a9f2f1" compoundref="rpcsmessage_8cpp" startline="140" endline="346">smsglocalkeys</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a7cf2eaa93f14ecaa9d8ac72fd3dc02a2" compoundref="rpcsmessage_8cpp" startline="427" endline="509">smsggetpubkey</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a19f70769435acea67b97050309dde6eb" compoundref="rpcwallet_8cpp" startline="253" endline="289">GetAccountAddress</referencedby>
        <referencedby refid="script_8cpp_1af1a7eb0123f11ad1154249f4a4c1a9d1" compoundref="script_8cpp" startline="2299" endline="2329">CheckSig</referencedby>
        <referencedby refid="class_signature_checker_1a174607620e5510a69f9083ed68e01776" compoundref="script_8cpp" startline="2800" endline="2819">SignatureChecker::CheckSig</referencedby>
        <referencedby refid="smessage_8h_1a430258e823bdead36f823a51fd6a4510" compoundref="smessage_8cpp" startline="2601" endline="2617">SecureMsgGetLocalKey</referencedby>
        <referencedby refid="smessage_8h_1a7d84ccbc16eb3d679638ba37b822a5e2" compoundref="smessage_8cpp" startline="2676" endline="2729">SecureMsgAddAddress</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
        <referencedby refid="class_c_wallet_1ac45af0632ea59c56295d3158b7387f33" compoundref="wallet_8cpp" startline="3090" endline="3240">CWallet::UnlockStealthAddresses</referencedby>
        <referencedby refid="class_c_wallet_1afce932bf3aa678046ab75eccff004858" compoundref="wallet_8cpp" startline="3385" endline="3468">CWallet::SendStealthMoneyToDestination</referencedby>
        <referencedby refid="class_c_wallet_1a5d0e2025dc7a87a0406be272b80509ee" compoundref="wallet_8cpp" startline="3470" endline="3697">CWallet::FindStealthTransactions</referencedby>
        <referencedby refid="class_c_wallet_1a9921854840668a1856998f041177dd2b" compoundref="wallet_8cpp" startline="4366" endline="4391">CWallet::ReserveKeyFromKeyPool</referencedby>
        <referencedby refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" compoundref="wallet_8cpp" startline="4666" endline="4685">CReserveKey::GetReservedKey</referencedby>
        <referencedby refid="class_c_wallet_1afb9667058b54ae153b0897684ddb9f20" compoundref="wallet_8cpp" startline="4703" endline="4721">CWallet::GetAllReserveKeys</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a2533ec5fc9a1c3d2ef39d0faa3ad6cdd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::IsFullyValid</definition>
        <argsstring>() const </argsstring>
        <name>IsFullyValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="149" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="207" bodyend="212"/>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">IsValid</references>
        <references refid="secp256k1_8h_1a4e5dc8952c9a7e791376505ef2023ca1" compoundref="secp256k1_8c" startline="152" endline="166">secp256k1_ec_pubkey_parse</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <referencedby refid="class_c_script_compressor_1a4cec58b09c4ab7873b5884ed690ed0f9" compoundref="compressor_8cpp" startline="32" endline="45">CScriptCompressor::IsToPubKey</referencedby>
        <referencedby refid="rpcwallet_8cpp_1aca53a9372c92e81fc665cbdeb8fcdbc5" compoundref="rpcwallet_8cpp" startline="89" endline="142">_createmultisig</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a01e8a83cbd4209f10c71719383d7ca2d" compoundref="rpcwallet_8cpp" startline="1091" endline="1180">addmultisigaddress</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::IsCompressed</definition>
        <argsstring>() const </argsstring>
        <name>IsCompressed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="152" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="152" bodyend="154"/>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <referencedby refid="class_c_crypto_key_store_1a81bd70e18aa75f566526620a74f9cd88" compoundref="crypter_8cpp" startline="238" endline="265">CCryptoKeyStore::Unlock</referencedby>
        <referencedby refid="class_c_crypto_key_store_1a58cfb3c490318ef82de8fc9be6637269" compoundref="crypter_8cpp" startline="301" endline="323">CCryptoKeyStore::GetKey</referencedby>
        <referencedby refid="class_c_key_1a3890764f7a2e5d9cdeffb3e102e4545d" compoundref="key_8cpp" startline="197" endline="209">CKey::VerifyPubKey</referencedby>
        <referencedby refid="class_c_key_1a141751588f8bfe5f1b6fc27f4e64b63f" compoundref="key_8cpp" startline="226" endline="236">CKey::Load</referencedby>
        <referencedby refid="class_coin_control_dialog_1a4fc60e89b097952ff22dc0f9c58c87d9" compoundref="coincontroldialog_8cpp" startline="451" endline="631">CoinControlDialog::updateLabels</referencedby>
        <referencedby refid="rpcmisc_8cpp_1a32620752527477f4bac811a7db5ab35b" compoundref="rpcmisc_8cpp" startline="167" endline="205">validatepubkey</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1af9835f898bc619ef6f9a39a5a8a9f2f1" compoundref="rpcsmessage_8cpp" startline="140" endline="346">smsglocalkeys</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a7cf2eaa93f14ecaa9d8ac72fd3dc02a2" compoundref="rpcsmessage_8cpp" startline="427" endline="509">smsggetpubkey</referencedby>
        <referencedby refid="smessage_8h_1a430258e823bdead36f823a51fd6a4510" compoundref="smessage_8cpp" startline="2601" endline="2617">SecureMsgGetLocalKey</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::Verify</definition>
        <argsstring>(const uint256 &amp;hash, const std::vector&lt; unsigned char &gt; &amp;vchSig) const </argsstring>
        <name>Verify</name>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="158" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="167" bodyend="185"/>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">IsValid</references>
        <references refid="secp256k1_8h_1a4e5dc8952c9a7e791376505ef2023ca1" compoundref="secp256k1_8c" startline="152" endline="166">secp256k1_ec_pubkey_parse</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <references refid="secp256k1_8h_1a93ec36a19229f08acc5ff1ca613ab3a1" compoundref="secp256k1_8c" startline="278" endline="295">secp256k1_ecdsa_signature_normalize</references>
        <references refid="secp256k1_8h_1a41065390f9039c4140ec04999724987d" compoundref="secp256k1_8c" startline="297" endline="312">secp256k1_ecdsa_verify</references>
        <references refid="classbase__uint_1aaa32054bf4e8fbb31d54a75f6065174d" compoundref="uint256_8h" startline="241" endline="244">base_uint&lt; BITS &gt;::begin</references>
        <referencedby refid="class_c_alert_1a40b71fc58ec056e3e539663152092030" compoundref="alert_8cpp" startline="150" endline="160">CAlert::CheckSignature</referencedby>
        <referencedby refid="class_c_key_1a3890764f7a2e5d9cdeffb3e102e4545d" compoundref="key_8cpp" startline="197" endline="209">CKey::VerifyPubKey</referencedby>
        <referencedby refid="class_c_block_1a7e0103e7a0117173cb9c975702e06392" compoundref="block_8cpp" startline="10" endline="50">CBlock::CheckBlockSignature</referencedby>
        <referencedby refid="class_transaction_signature_checker_1a59179724477a42488a70a2828f51093d" compoundref="transaction_8cpp" startline="147" endline="150">TransactionSignatureChecker::VerifySignature</referencedby>
        <referencedby refid="script_8cpp_1af1a7eb0123f11ad1154249f4a4c1a9d1" compoundref="script_8cpp" startline="2299" endline="2329">CheckSig</referencedby>
        <referencedby refid="class_signature_checker_1a93e6518f83ea215af9c3266de43b5df1" compoundref="script_8cpp" startline="2795" endline="2798">SignatureChecker::VerifySignature</referencedby>
        <referencedby refid="key__tests_8cpp_1add8f8fb6aeee707149cdf29db2eca2b2" compoundref="key__tests_8cpp" startline="56" endline="139">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a169505e735a02db385486b0affeb565c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::RecoverCompact</definition>
        <argsstring>(const uint256 &amp;hash, const std::vector&lt; unsigned char &gt; &amp;vchSig)</argsstring>
        <name>RecoverCompact</name>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="166" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="187" bodyend="205"/>
        <references refid="secp256k1__recovery_8h_1a6699b45dc75be70f028ac7d8ffaba46e" compoundref="recovery_2main__impl_8h" startline="38" endline="58">secp256k1_ecdsa_recoverable_signature_parse_compact</references>
        <references refid="secp256k1__recovery_8h_1a7e156c6f4be24b07f4a563210dcb1a2e" compoundref="recovery_2main__impl_8h" startline="170" endline="191">secp256k1_ecdsa_recover</references>
        <references refid="classbase__uint_1aaa32054bf4e8fbb31d54a75f6065174d" compoundref="uint256_8h" startline="241" endline="244">base_uint&lt; BITS &gt;::begin</references>
        <references refid="secp256k1_8h_1a34977bf00322e510e881160c421836d7" compoundref="secp256k1_8c" startline="168" endline="190">secp256k1_ec_pubkey_serialize</references>
        <references refid="secp256k1_8h_1a7b8f642c65e8b5c81fa4421b7c42ab57" compoundref="secp256k1_8h" startline="165">SECP256K1_EC_COMPRESSED</references>
        <references refid="secp256k1_8h_1ab8e25dc58843e83926f95795f9e8a6e2" compoundref="secp256k1_8h" startline="166">SECP256K1_EC_UNCOMPRESSED</references>
        <references refid="class_c_pub_key_1af59bc1d3be119c1f8b49d3c1e2c0797b" compoundref="pubkey_8h" startline="71" endline="77">Set</references>
        <referencedby refid="rpcmisc_8cpp_1ad8fce781dfd9dfd4866bba2a4589141a" compoundref="rpcmisc_8cpp" startline="207" endline="241">verifymessage</referencedby>
        <referencedby refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" compoundref="sandstorm_8cpp" startline="2073" endline="2089">CSandStormSigner::VerifyMessage</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a572689418fecf47b300a11519bc3da36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::Decompress</definition>
        <argsstring>()</argsstring>
        <name>Decompress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="169" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="214" bodyend="226"/>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">IsValid</references>
        <references refid="secp256k1_8h_1a4e5dc8952c9a7e791376505ef2023ca1" compoundref="secp256k1_8c" startline="152" endline="166">secp256k1_ec_pubkey_parse</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <references refid="secp256k1_8h_1a34977bf00322e510e881160c421836d7" compoundref="secp256k1_8c" startline="168" endline="190">secp256k1_ec_pubkey_serialize</references>
        <references refid="secp256k1_8h_1ab8e25dc58843e83926f95795f9e8a6e2" compoundref="secp256k1_8h" startline="166">SECP256K1_EC_UNCOMPRESSED</references>
        <references refid="class_c_pub_key_1af59bc1d3be119c1f8b49d3c1e2c0797b" compoundref="pubkey_8h" startline="71" endline="77">Set</references>
        <referencedby refid="class_c_script_compressor_1a1feb663ddab3a45218c7cb02f2a25717" compoundref="compressor_8cpp" startline="87" endline="130">CScriptCompressor::Decompress</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::Derive</definition>
        <argsstring>(CPubKey &amp;pubkeyChild, unsigned char ccChild[32], unsigned int nChild, const unsigned char cc[32]) const </argsstring>
        <name>Derive</name>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubkeyChild</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ccChild</declname>
          <array>[32]</array>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nChild</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>cc</declname>
          <array>[32]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="172" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="228" bodyend="247"/>
        <references refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" compoundref="pubkey_8h" startline="144" endline="146">IsValid</references>
        <references refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" compoundref="pubkey_8h" startline="92" endline="92">begin</references>
        <references refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" compoundref="pubkey_8h" startline="93" endline="93">end</references>
        <references refid="hash_8cpp_1af81a4d88d7eaba27c63313aec22b01a4" compoundref="hash_8cpp" startline="44" endline="56">BIP32Hash</references>
        <references refid="secp256k1_8h_1a4e5dc8952c9a7e791376505ef2023ca1" compoundref="secp256k1_8c" startline="152" endline="166">secp256k1_ec_pubkey_parse</references>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <references refid="secp256k1_8h_1a2381cde2a0ee44d90dcfa77e28b5eb79" compoundref="secp256k1_8c" startline="456" endline="478">secp256k1_ec_pubkey_tweak_add</references>
        <references refid="secp256k1_8h_1a34977bf00322e510e881160c421836d7" compoundref="secp256k1_8c" startline="168" endline="190">secp256k1_ec_pubkey_serialize</references>
        <references refid="secp256k1_8h_1a7b8f642c65e8b5c81fa4421b7c42ab57" compoundref="secp256k1_8h" startline="165">SECP256K1_EC_COMPRESSED</references>
        <references refid="class_c_pub_key_1af59bc1d3be119c1f8b49d3c1e2c0797b" compoundref="pubkey_8h" startline="71" endline="77">Set</references>
        <referencedby refid="struct_c_ext_pub_key_1a404798f7d800ffb539cf97431025597f" compoundref="pubkey_8cpp" startline="267" endline="273">CExtPubKey::Derive</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_pub_key_1a84463c7b02b9fa123c11470865180402" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CPubKey::Raw</definition>
        <argsstring>() const </argsstring>
        <name>Raw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="175" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="175" bodyend="179"/>
        <references refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" compoundref="pubkey_8h" startline="91" endline="91">size</references>
        <referencedby refid="class_message_model_1a272e7ceeba4664046472e6f7c4d49d23" compoundref="messagemodel_8cpp" startline="331" endline="352">MessageModel::getAddressOrPubkey</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1af9835f898bc619ef6f9a39a5a8a9f2f1" compoundref="rpcsmessage_8cpp" startline="140" endline="346">smsglocalkeys</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a7cf2eaa93f14ecaa9d8ac72fd3dc02a2" compoundref="rpcsmessage_8cpp" startline="427" endline="509">smsggetpubkey</referencedby>
        <referencedby refid="class_c_wallet_1ac45af0632ea59c56295d3158b7387f33" compoundref="wallet_8cpp" startline="3090" endline="3240">CWallet::UnlockStealthAddresses</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_pub_key_1a864b3cdcb46fb85c1fc07e0686cc3a31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CPubKey &amp;a, const CPubKey &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="97" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_pub_key_1af660fd5a8d213211dfff37a2296d09e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const CPubKey &amp;a, const CPubKey &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="101" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_pub_key_1af814095b2c92bedd96a83a0811d52da9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const CPubKey &amp;a, const CPubKey &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="104" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="104" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_c_pub_key_1a4ada230ef593456ef9088c28fd5ca34e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPubKey::CheckLowS</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vchSig)</argsstring>
        <name>CheckLowS</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether a signature is normalized (lower-S). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/pubkey.h" line="163" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.cpp" bodystart="275" bodyend="281"/>
        <references refid="secp256k1_8h_1a93ec36a19229f08acc5ff1ca613ab3a1" compoundref="secp256k1_8c" startline="278" endline="295">secp256k1_ecdsa_signature_normalize</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An encapsulated public key. </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/pubkey.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/pubkey.h" bodystart="43" bodyend="180"/>
    <listofallmembers>
      <member refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>begin</name></member>
      <member refid="class_c_pub_key_1a4ada230ef593456ef9088c28fd5ca34e" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>CheckLowS</name></member>
      <member refid="class_c_pub_key_1a468f3aef3555d12ede19c0d8dc88c13a" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>CPubKey</name></member>
      <member refid="class_c_pub_key_1a8c7527b40c96bfb8f48b669764301df8" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>CPubKey</name></member>
      <member refid="class_c_pub_key_1a31307d0318ebda95c7e34ef1554fe2d2" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>CPubKey</name></member>
      <member refid="class_c_pub_key_1a572689418fecf47b300a11519bc3da36" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Decompress</name></member>
      <member refid="class_c_pub_key_1a182298237bb189abfe006e2ff3350acc" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Derive</name></member>
      <member refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>end</name></member>
      <member refid="class_c_pub_key_1a85b5eaf92b26cb4a230586050285c3f4" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>GetHash</name></member>
      <member refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>GetID</name></member>
      <member refid="class_c_pub_key_1a7dc71b3f037c84268dc22de97d7b65fb" prot="private" virt="non-virtual"><scope>CPubKey</scope><name>GetLen</name></member>
      <member refid="class_c_pub_key_1a71ca590df9b99faaf1604f826d2c8807" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>GetSerializeSize</name></member>
      <member refid="class_c_pub_key_1a99917e80a362af54a3677ea9cf1328ee" prot="private" virt="non-virtual"><scope>CPubKey</scope><name>Invalidate</name></member>
      <member refid="class_c_pub_key_1a397e437d9d0a008e2641892147b0931a" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>IsCompressed</name></member>
      <member refid="class_c_pub_key_1a2533ec5fc9a1c3d2ef39d0faa3ad6cdd" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>IsFullyValid</name></member>
      <member refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>IsValid</name></member>
      <member refid="class_c_pub_key_1af660fd5a8d213211dfff37a2296d09e1" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>operator!=</name></member>
      <member refid="class_c_pub_key_1af814095b2c92bedd96a83a0811d52da9" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>operator&lt;</name></member>
      <member refid="class_c_pub_key_1a864b3cdcb46fb85c1fc07e0686cc3a31" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>operator==</name></member>
      <member refid="class_c_pub_key_1a70df86158a27670eb4566ca0c587cdec" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>operator[]</name></member>
      <member refid="class_c_pub_key_1a84463c7b02b9fa123c11470865180402" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Raw</name></member>
      <member refid="class_c_pub_key_1a169505e735a02db385486b0affeb565c" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>RecoverCompact</name></member>
      <member refid="class_c_pub_key_1a315865ee4c45726c01fae44d53b180a1" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Serialize</name></member>
      <member refid="class_c_pub_key_1af59bc1d3be119c1f8b49d3c1e2c0797b" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Set</name></member>
      <member refid="class_c_pub_key_1a9d7129b65b6dee792b4f3923cd64ed59" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>size</name></member>
      <member refid="class_c_pub_key_1a1cfd8e3c711f5298eecdacd5979f6e6c" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Unserialize</name></member>
      <member refid="class_c_pub_key_1a4146dd2d136567d5a4a7b8f1ca2c4b59" prot="private" virt="non-virtual"><scope>CPubKey</scope><name>vch</name></member>
      <member refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" prot="public" virt="non-virtual"><scope>CPubKey</scope><name>Verify</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
