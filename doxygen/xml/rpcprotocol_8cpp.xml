<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="rpcprotocol_8cpp" kind="file" language="C++">
    <compoundname>rpcprotocol.cpp</compoundname>
    <includes refid="rpcprotocol_8h" local="yes">rpcprotocol.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes local="no">boost/asio.hpp</includes>
    <includes local="no">boost/asio/ssl.hpp</includes>
    <includes local="no">boost/bind.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">boost/foreach.hpp</includes>
    <includes local="no">boost/iostreams/concepts.hpp</includes>
    <includes local="no">boost/iostreams/stream.hpp</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <incdepgraph>
      <node id="49346">
        <label>list</label>
      </node>
      <node id="49389">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="49407">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="49339">
        <label>netinet/in.h</label>
      </node>
      <node id="49394">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="49378" relation="include">
        </childnode>
        <childnode refid="49387" relation="include">
        </childnode>
        <childnode refid="49349" relation="include">
        </childnode>
      </node>
      <node id="49340">
        <label>arpa/inet.h</label>
      </node>
      <node id="49374">
        <label>iomanip</label>
      </node>
      <node id="49366">
        <label>boost/version.hpp</label>
      </node>
      <node id="49361">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="49380">
        <label>limits</label>
      </node>
      <node id="49405">
        <label>openssl/rand.h</label>
      </node>
      <node id="49367">
        <label>boost/spirit/core.hpp</label>
      </node>
      <node id="49384">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="49338">
        <label>net/if.h</label>
      </node>
      <node id="49409">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="49390">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="49391" relation="include">
        </childnode>
        <childnode refid="49349" relation="include">
        </childnode>
      </node>
      <node id="49387">
        <label>stdlib.h</label>
      </node>
      <node id="49335">
        <label>sys/mman.h</label>
      </node>
      <node id="49408">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="49404">
        <label>openssl/crypto.h</label>
      </node>
      <node id="49363">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="49349" relation="include">
        </childnode>
      </node>
      <node id="49371">
        <label>boost/spirit/iterator/position_iterator.hpp</label>
      </node>
      <node id="49333">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="49334" relation="include">
        </childnode>
        <childnode refid="49335" relation="include">
        </childnode>
        <childnode refid="49336" relation="include">
        </childnode>
        <childnode refid="49337" relation="include">
        </childnode>
        <childnode refid="49338" relation="include">
        </childnode>
        <childnode refid="49339" relation="include">
        </childnode>
        <childnode refid="49340" relation="include">
        </childnode>
        <childnode refid="49341" relation="include">
        </childnode>
        <childnode refid="49342" relation="include">
        </childnode>
        <childnode refid="49343" relation="include">
        </childnode>
        <childnode refid="49344" relation="include">
        </childnode>
        <childnode refid="49345" relation="include">
        </childnode>
      </node>
      <node id="49400">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="49345">
        <label>errno.h</label>
      </node>
      <node id="49357">
        <label>cassert</label>
      </node>
      <node id="49359">
        <label>stdexcept</label>
      </node>
      <node id="49375">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="49337" relation="include">
        </childnode>
        <childnode refid="49376" relation="include">
        </childnode>
        <childnode refid="49377" relation="include">
        </childnode>
        <childnode refid="49378" relation="include">
        </childnode>
        <childnode refid="49392" relation="include">
        </childnode>
        <childnode refid="49394" relation="include">
        </childnode>
        <childnode refid="49347" relation="include">
        </childnode>
        <childnode refid="49346" relation="include">
        </childnode>
        <childnode refid="49395" relation="include">
        </childnode>
        <childnode refid="49356" relation="include">
        </childnode>
        <childnode refid="49349" relation="include">
        </childnode>
        <childnode refid="49396" relation="include">
        </childnode>
        <childnode refid="49397" relation="include">
        </childnode>
        <childnode refid="49398" relation="include">
        </childnode>
        <childnode refid="49399" relation="include">
        </childnode>
        <childnode refid="49400" relation="include">
        </childnode>
        <childnode refid="49401" relation="include">
        </childnode>
        <childnode refid="49402" relation="include">
        </childnode>
        <childnode refid="49403" relation="include">
        </childnode>
        <childnode refid="49404" relation="include">
        </childnode>
        <childnode refid="49405" relation="include">
        </childnode>
        <childnode refid="49406" relation="include">
        </childnode>
        <childnode refid="49348" relation="include">
        </childnode>
      </node>
      <node id="49372">
        <label>json/json_spirit_utils.h</label>
        <link refid="json__spirit__utils_8h"/>
        <childnode refid="49355" relation="include">
        </childnode>
        <childnode refid="49347" relation="include">
        </childnode>
      </node>
      <node id="49399">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="49349">
        <label>string</label>
      </node>
      <node id="49347">
        <label>map</label>
      </node>
      <node id="49351">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="49396">
        <label>boost/thread.hpp</label>
      </node>
      <node id="49354">
        <label>json/json_spirit_reader_template.h</label>
        <link refid="json__spirit__reader__template_8h"/>
        <childnode refid="49355" relation="include">
        </childnode>
        <childnode refid="49363" relation="include">
        </childnode>
        <childnode refid="49364" relation="include">
        </childnode>
        <childnode refid="49365" relation="include">
        </childnode>
        <childnode refid="49366" relation="include">
        </childnode>
        <childnode refid="49367" relation="include">
        </childnode>
        <childnode refid="49368" relation="include">
        </childnode>
        <childnode refid="49369" relation="include">
        </childnode>
        <childnode refid="49370" relation="include">
        </childnode>
        <childnode refid="49371" relation="include">
        </childnode>
      </node>
      <node id="49362">
        <label>boost/variant.hpp</label>
      </node>
      <node id="49350">
        <label>boost/iostreams/concepts.hpp</label>
      </node>
      <node id="49343">
        <label>netdb.h</label>
      </node>
      <node id="49334">
        <label>sys/fcntl.h</label>
      </node>
      <node id="49365">
        <label>boost/function.hpp</label>
      </node>
      <node id="49378">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="49349" relation="include">
        </childnode>
        <childnode refid="49356" relation="include">
        </childnode>
        <childnode refid="49347" relation="include">
        </childnode>
        <childnode refid="49379" relation="include">
        </childnode>
        <childnode refid="49357" relation="include">
        </childnode>
        <childnode refid="49380" relation="include">
        </childnode>
        <childnode refid="49348" relation="include">
        </childnode>
        <childnode refid="49381" relation="include">
        </childnode>
        <childnode refid="49382" relation="include">
        </childnode>
        <childnode refid="49383" relation="include">
        </childnode>
        <childnode refid="49384" relation="include">
        </childnode>
        <childnode refid="49385" relation="include">
        </childnode>
        <childnode refid="49390" relation="include">
        </childnode>
      </node>
      <node id="49342">
        <label>limits.h</label>
      </node>
      <node id="49377">
        <label>sys/resource.h</label>
      </node>
      <node id="49401">
        <label>openssl/bio.h</label>
      </node>
      <node id="49352">
        <label>boost/asio.hpp</label>
      </node>
      <node id="49353">
        <label>boost/asio/ssl.hpp</label>
      </node>
      <node id="49341">
        <label>ifaddrs.h</label>
      </node>
      <node id="49337">
        <label>sys/types.h</label>
      </node>
      <node id="49388">
        <label>string.h</label>
      </node>
      <node id="49391">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="49382">
        <label>cstdio</label>
      </node>
      <node id="49403">
        <label>openssl/buffer.h</label>
      </node>
      <node id="49383">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="49398">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="49344">
        <label>unistd.h</label>
      </node>
      <node id="49356">
        <label>vector</label>
      </node>
      <node id="49332">
        <label>rpcprotocol.h</label>
        <link refid="rpcprotocol_8h"/>
        <childnode refid="49333" relation="include">
        </childnode>
        <childnode refid="49346" relation="include">
        </childnode>
        <childnode refid="49347" relation="include">
        </childnode>
        <childnode refid="49348" relation="include">
        </childnode>
        <childnode refid="49349" relation="include">
        </childnode>
        <childnode refid="49350" relation="include">
        </childnode>
        <childnode refid="49351" relation="include">
        </childnode>
        <childnode refid="49352" relation="include">
        </childnode>
        <childnode refid="49353" relation="include">
        </childnode>
        <childnode refid="49354" relation="include">
        </childnode>
        <childnode refid="49372" relation="include">
        </childnode>
        <childnode refid="49373" relation="include">
        </childnode>
      </node>
      <node id="49373">
        <label>json/json_spirit_writer_template.h</label>
        <link refid="json__spirit__writer__template_8h"/>
        <childnode refid="49355" relation="include">
        </childnode>
        <childnode refid="49357" relation="include">
        </childnode>
        <childnode refid="49358" relation="include">
        </childnode>
        <childnode refid="49374" relation="include">
        </childnode>
      </node>
      <node id="49397">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="49369">
        <label>boost/spirit/utility/escape_char.hpp</label>
      </node>
      <node id="49395">
        <label>utility</label>
      </node>
      <node id="49358">
        <label>sstream</label>
      </node>
      <node id="49331">
        <label>/home/dev/ds-160209/src/rpcprotocol.cpp</label>
        <link refid="rpcprotocol.cpp"/>
        <childnode refid="49332" relation="include">
        </childnode>
        <childnode refid="49375" relation="include">
        </childnode>
        <childnode refid="49348" relation="include">
        </childnode>
        <childnode refid="49407" relation="include">
        </childnode>
        <childnode refid="49352" relation="include">
        </childnode>
        <childnode refid="49353" relation="include">
        </childnode>
        <childnode refid="49364" relation="include">
        </childnode>
        <childnode refid="49397" relation="include">
        </childnode>
        <childnode refid="49408" relation="include">
        </childnode>
        <childnode refid="49350" relation="include">
        </childnode>
        <childnode refid="49351" relation="include">
        </childnode>
        <childnode refid="49409" relation="include">
        </childnode>
        <childnode refid="49361" relation="include">
        </childnode>
      </node>
      <node id="49402">
        <label>openssl/evp.h</label>
      </node>
      <node id="49392">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="49357" relation="include">
        </childnode>
        <childnode refid="49393" relation="include">
        </childnode>
        <childnode refid="49358" relation="include">
        </childnode>
        <childnode refid="49359" relation="include">
        </childnode>
      </node>
      <node id="49348">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="49376">
        <label>sys/time.h</label>
      </node>
      <node id="49393">
        <label>iostream</label>
      </node>
      <node id="49364">
        <label>boost/bind.hpp</label>
      </node>
      <node id="49360">
        <label>boost/config.hpp</label>
      </node>
      <node id="49336">
        <label>sys/socket.h</label>
      </node>
      <node id="49355">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="49356" relation="include">
        </childnode>
        <childnode refid="49347" relation="include">
        </childnode>
        <childnode refid="49349" relation="include">
        </childnode>
        <childnode refid="49357" relation="include">
        </childnode>
        <childnode refid="49358" relation="include">
        </childnode>
        <childnode refid="49359" relation="include">
        </childnode>
        <childnode refid="49348" relation="include">
        </childnode>
        <childnode refid="49360" relation="include">
        </childnode>
        <childnode refid="49361" relation="include">
        </childnode>
        <childnode refid="49362" relation="include">
        </childnode>
      </node>
      <node id="49406">
        <label>openssl/bn.h</label>
      </node>
      <node id="49385">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="49386" relation="include">
        </childnode>
        <childnode refid="49388" relation="include">
        </childnode>
        <childnode refid="49349" relation="include">
        </childnode>
        <childnode refid="49389" relation="include">
        </childnode>
        <childnode refid="49347" relation="include">
        </childnode>
        <childnode refid="49335" relation="include">
        </childnode>
        <childnode refid="49342" relation="include">
        </childnode>
        <childnode refid="49344" relation="include">
        </childnode>
      </node>
      <node id="49370">
        <label>boost/spirit/iterator/multi_pass.hpp</label>
      </node>
      <node id="49379">
        <label>set</label>
      </node>
      <node id="49386">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="49387" relation="include">
        </childnode>
      </node>
      <node id="49381">
        <label>cstring</label>
      </node>
      <node id="49368">
        <label>boost/spirit/utility/confix.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rpcprotocol_8cpp_1a86279189e9b67af153a80f6ca5ef5d1c" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t POST_READ_SIZE</definition>
        <argsstring></argsstring>
        <name>POST_READ_SIZE</name>
        <initializer>= 256 * 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="30" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="30" bodyend="-1"/>
        <referencedby refid="rpcprotocol_8cpp_1a04ef20cccddfd1505806982c3c232325" compoundref="rpcprotocol_8cpp" startline="181" endline="221">ReadHTTPMessage</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rpcprotocol_8cpp_1af2d91e7026366657a021311ecc188262" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string HTTPPost</definition>
        <argsstring>(const string &amp;strMsg, const map&lt; string, string &gt; &amp;mapRequestHeaders)</argsstring>
        <name>HTTPPost</name>
        <param>
          <type>const string &amp;</type>
          <declname>strMsg</declname>
        </param>
        <param>
          <type>const map&lt; string, string &gt; &amp;</type>
          <declname>mapRequestHeaders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="39" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="39" bodyend="54"/>
        <references refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" compoundref="util_8cpp" startline="1393" endline="1396">FormatFullVersion</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1ad5c2a0d44659f8cd91839821b68b5224" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string rfc1123Time</definition>
        <argsstring>()</argsstring>
        <name>rfc1123Time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="56" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1afa39f57077df4d88ad60373f58d793e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string HTTPReply</definition>
        <argsstring>(int nStatus, const string &amp;strMsg, bool keepalive)</argsstring>
        <name>HTTPReply</name>
        <param>
          <type>int</type>
          <declname>nStatus</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>strMsg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepalive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="61" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="61" bodyend="103"/>
        <references refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a74677f364201a3d068bc6b9db7359288" compoundref="rpcprotocol_8h" startline="30">HTTP_UNAUTHORIZED</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" compoundref="util_8cpp" startline="1393" endline="1396">FormatFullVersion</references>
        <references refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a43f8027764325bbcad2f773511156d0a" compoundref="rpcprotocol_8h" startline="28">HTTP_OK</references>
        <references refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a173b2a55d636fe537b9069a4fb3388f2" compoundref="rpcprotocol_8h" startline="29">HTTP_BAD_REQUEST</references>
        <references refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7aec6e8ecb79ff84830a69e52ff01d17" compoundref="rpcprotocol_8h" startline="31">HTTP_FORBIDDEN</references>
        <references refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7a2f2a109c030ee9d2d5afe761232451" compoundref="rpcprotocol_8h" startline="32">HTTP_NOT_FOUND</references>
        <references refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" compoundref="rpcprotocol_8h" startline="33">HTTP_INTERNAL_SERVER_ERROR</references>
        <referencedby refid="rpcserver_8cpp_1a01dbd901fe882171ef907f64ce31db00" compoundref="rpcserver_8cpp" startline="364" endline="373">ErrorReply</referencedby>
        <referencedby refid="rpcserver_8cpp_1adda5af922ba2f27c9f6219394d3c4f4c" compoundref="rpcserver_8cpp" startline="743" endline="823">ServiceConnection</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1add578b3fb095706a7a78d265fa97d8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReadHTTPRequestLine</definition>
        <argsstring>(std::basic_istream&lt; char &gt; &amp;stream, int &amp;proto, string &amp;http_method, string &amp;http_uri)</argsstring>
        <name>ReadHTTPRequestLine</name>
        <param>
          <type>std::basic_istream&lt; char &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>proto</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>http_method</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>http_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="105" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="105" bodyend="138"/>
        <references refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" compoundref="util_8h" startline="315" endline="318">atoi</references>
        <referencedby refid="rpcserver_8cpp_1adda5af922ba2f27c9f6219394d3c4f4c" compoundref="rpcserver_8cpp" startline="743" endline="823">ServiceConnection</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1af615c564cc7794d255e5adfacade4066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ReadHTTPStatus</definition>
        <argsstring>(std::basic_istream&lt; char &gt; &amp;stream, int &amp;proto)</argsstring>
        <name>ReadHTTPStatus</name>
        <param>
          <type>std::basic_istream&lt; char &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="140" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="140" bodyend="153"/>
        <references refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" compoundref="rpcprotocol_8h" startline="33">HTTP_INTERNAL_SERVER_ERROR</references>
        <references refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" compoundref="util_8h" startline="315" endline="318">atoi</references>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1adfa1ef30dd1e00dcbecff15e1161e369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ReadHTTPHeaders</definition>
        <argsstring>(std::basic_istream&lt; char &gt; &amp;stream, map&lt; string, string &gt; &amp;mapHeadersRet)</argsstring>
        <name>ReadHTTPHeaders</name>
        <param>
          <type>std::basic_istream&lt; char &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>map&lt; string, string &gt; &amp;</type>
          <declname>mapHeadersRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="155" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="155" bodyend="178"/>
        <references refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" compoundref="util_8h" startline="315" endline="318">atoi</references>
        <referencedby refid="rpcprotocol_8cpp_1a04ef20cccddfd1505806982c3c232325" compoundref="rpcprotocol_8cpp" startline="181" endline="221">ReadHTTPMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1a04ef20cccddfd1505806982c3c232325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ReadHTTPMessage</definition>
        <argsstring>(std::basic_istream&lt; char &gt; &amp;stream, map&lt; string, string &gt; &amp;mapHeadersRet, string &amp;strMessageRet, int nProto, size_t max_size)</argsstring>
        <name>ReadHTTPMessage</name>
        <param>
          <type>std::basic_istream&lt; char &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>map&lt; string, string &gt; &amp;</type>
          <declname>mapHeadersRet</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>strMessageRet</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nProto</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="181" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="181" bodyend="221"/>
        <references refid="rpcprotocol_8cpp_1adfa1ef30dd1e00dcbecff15e1161e369" compoundref="rpcprotocol_8cpp" startline="155" endline="178">ReadHTTPHeaders</references>
        <references refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" compoundref="rpcprotocol_8h" startline="33">HTTP_INTERNAL_SERVER_ERROR</references>
        <references refid="rpcprotocol_8cpp_1a86279189e9b67af153a80f6ca5ef5d1c" compoundref="rpcprotocol_8cpp" startline="30">POST_READ_SIZE</references>
        <references refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a43f8027764325bbcad2f773511156d0a" compoundref="rpcprotocol_8h" startline="28">HTTP_OK</references>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
        <referencedby refid="rpcserver_8cpp_1adda5af922ba2f27c9f6219394d3c4f4c" compoundref="rpcserver_8cpp" startline="743" endline="823">ServiceConnection</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1ab409c39d9d803bb50fecd4f0ff9970a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string JSONRPCRequest</definition>
        <argsstring>(const string &amp;strMethod, const Array &amp;params, const Value &amp;id)</argsstring>
        <name>JSONRPCRequest</name>
        <param>
          <type>const string &amp;</type>
          <declname>strMethod</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="233" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="233" bodyend="240"/>
        <references refid="namespacejson__spirit_1ad4b51f460af6cdec5b128f53f233b0c6" compoundref="json__spirit__writer__template_8h" startline="237" endline="246">json_spirit::write_string</references>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1a48add16ec902386cc873c5cf0b40b2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref></type>
        <definition>Object JSONRPCReplyObj</definition>
        <argsstring>(const Value &amp;result, const Value &amp;error, const Value &amp;id)</argsstring>
        <name>JSONRPCReplyObj</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="242" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="242" bodyend="252"/>
        <references refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" compoundref="json__spirit__value_8h" startline="321" endline="324">json_spirit::Value_impl&lt; Config &gt;::type</references>
        <references refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a38ef470443cb345064758efff2e303fc" compoundref="json__spirit__value_8h" startline="26">json_spirit::null_type</references>
        <referencedby refid="rpcprotocol_8h_1a0684e3796b75355730f1657a05ea6bcc" compoundref="rpcprotocol_8cpp" startline="254" endline="258">JSONRPCReply</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1a091e4839a15f5f6d569a97c709d80374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string JSONRPCReply</definition>
        <argsstring>(const Value &amp;result, const Value &amp;error, const Value &amp;id)</argsstring>
        <name>JSONRPCReply</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="254" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="254" bodyend="258"/>
        <references refid="rpcprotocol_8cpp_1a48add16ec902386cc873c5cf0b40b2dd" compoundref="rpcprotocol_8cpp" startline="242" endline="252">JSONRPCReplyObj</references>
        <references refid="namespacejson__spirit_1ad4b51f460af6cdec5b128f53f233b0c6" compoundref="json__spirit__writer__template_8h" startline="237" endline="246">json_spirit::write_string</references>
        <referencedby refid="rpcserver_8cpp_1a01dbd901fe882171ef907f64ce31db00" compoundref="rpcserver_8cpp" startline="364" endline="373">ErrorReply</referencedby>
        <referencedby refid="rpcserver_8cpp_1adda5af922ba2f27c9f6219394d3c4f4c" compoundref="rpcserver_8cpp" startline="743" endline="823">ServiceConnection</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref></type>
        <definition>Object JSONRPCError</definition>
        <argsstring>(int code, const string &amp;message)</argsstring>
        <name>JSONRPCError</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.cpp" line="260" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="260" bodyend="266"/>
        <referencedby refid="rpcblockchain_8cpp_1a63608cf1bb275120194c3b4e070af3d7" compoundref="rpcblockchain_8cpp" startline="229" endline="248">getblock</referencedby>
        <referencedby refid="rpcdump_8cpp_1a3a6fdb974fce01220a895393d444e981" compoundref="rpcdump_8cpp" startline="106" endline="159">importprivkey</referencedby>
        <referencedby refid="rpcdump_8cpp_1a457bc572859c8265c72a0afd1a6db56c" compoundref="rpcdump_8cpp" startline="161" endline="230">importaddress</referencedby>
        <referencedby refid="rpcdump_8cpp_1a2566d5c9dd1938b74e70398cdb3ac5c1" compoundref="rpcdump_8cpp" startline="232" endline="318">importwallet</referencedby>
        <referencedby refid="rpcdump_8cpp_1a4010fb238298e15c540d3e5ecd60f858" compoundref="rpcdump_8cpp" startline="321" endline="343">dumpprivkey</referencedby>
        <referencedby refid="rpcdump_8cpp_1a831ddf746d4f2500ba6f6c07f63445cd" compoundref="rpcdump_8cpp" startline="345" endline="401">dumpwallet</referencedby>
        <referencedby refid="rpcmining_8cpp_1a389f62bd448bb24933a1ea8920411d7e" compoundref="rpcmining_8cpp" startline="56" endline="76">getstakesubsidy</referencedby>
        <referencedby refid="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" compoundref="rpcmining_8cpp" startline="150" endline="234">checkkernel</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="rpcmining_8cpp_1a6fc1aa077add8cb1c74207056616134d" compoundref="rpcmining_8cpp" startline="655" endline="679">submitblock</referencedby>
        <referencedby refid="rpcmisc_8cpp_1ad8fce781dfd9dfd4866bba2a4589141a" compoundref="rpcmisc_8cpp" startline="207" endline="241">verifymessage</referencedby>
        <referencedby refid="rpcnet_8cpp_1ab455bfd729ba34d3bb55b716e62405a3" compoundref="rpcnet_8cpp" startline="106" endline="146">addnode</referencedby>
        <referencedby refid="rpcnet_8cpp_1a2a6994d3b180c8e9ce81e0da65a41bb3" compoundref="rpcnet_8cpp" startline="148" endline="238">getaddednodeinfo</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1a12e1b8a05d99d1544e5343c2282cc55a" compoundref="rpcrawtransaction_8cpp" startline="111" endline="144">getrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1a7924d2aa3d68d890b82773445e0d949e" compoundref="rpcrawtransaction_8cpp" startline="236" endline="299">createrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1a6775c600b1bfdbb22f38e5f1cd27cfea" compoundref="rpcrawtransaction_8cpp" startline="301" endline="324">decoderawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1aa0d151e35c0ad5ec82df451a833aeadb" compoundref="rpcrawtransaction_8cpp" startline="349" endline="555">signrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1ad5aad44f890060f42efb49acf349511e" compoundref="rpcrawtransaction_8cpp" startline="558" endline="602">sendrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1ae119520f4c7a75fcaf31fbfaf8dff482" compoundref="rpcrawtransaction_8cpp" startline="605" endline="670">searchrawtransactions</referencedby>
        <referencedby refid="rpcserver_8cpp_1a6f9782b3c0efdb472b355c60bd90f2b6" compoundref="rpcserver_8cpp" startline="47" endline="66">RPCTypeCheck</referencedby>
        <referencedby refid="rpcserver_8h_1adc8974c0b60608b5af5ca7f04c484bef" compoundref="rpcserver_8cpp" startline="87" endline="96">AmountFromValue</referencedby>
        <referencedby refid="rpcserver_8cpp_1ae00da5fd5abdf11d125f98190e599194" compoundref="rpcserver_8cpp" startline="108" endline="118">ParseHashV</referencedby>
        <referencedby refid="rpcserver_8cpp_1a6912ee7b40ffee24ad6d599b3667d4c8" compoundref="rpcserver_8cpp" startline="125" endline="133">ParseHexV</referencedby>
        <referencedby refid="class_j_s_o_n_request_1a5c68b21e7f1bead9fd39f27208446add" compoundref="rpcserver_8cpp" startline="679" endline="707">JSONRequest::parse</referencedby>
        <referencedby refid="rpcserver_8cpp_1adda5af922ba2f27c9f6219394d3c4f4c" compoundref="rpcserver_8cpp" startline="743" endline="823">ServiceConnection</referencedby>
        <referencedby refid="class_c_r_p_c_table_1aebba8d5a8f62089d1aa63278dbaf30a2" compoundref="rpcserver_8cpp" startline="825" endline="870">CRPCTable::execute</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aae19bf2ba52f3b864bfaf70206bcb29a" compoundref="rpcstormnode-budget_8cpp" startline="22" endline="515">snbudget</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1a0ed276908ef20f9b0ed87c3ed4c26d25" compoundref="rpcstormnode-budget_8cpp" startline="517" endline="567">snbudgetvoteraw</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" compoundref="rpcstormnode_8cpp" startline="20" endline="62">sandstorm</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a8f837f6d506b9719cef93188db00fd3c" compoundref="rpcwallet_8cpp" startline="44" endline="50">EnsureWalletIsUnlocked</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a3039648e370837eb1e7b4dc669f3ef0f" compoundref="rpcwallet_8cpp" startline="78" endline="84">AccountFromValue</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a3f3bb4d519074126a20dd609a6886a72" compoundref="rpcwallet_8cpp" startline="187" endline="211">getnewpubkey</referencedby>
        <referencedby refid="rpcwallet_8cpp_1aead824d845d670fbd8f187ebd4f9a535" compoundref="rpcwallet_8cpp" startline="214" endline="250">getnewaddress</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a19f70769435acea67b97050309dde6eb" compoundref="rpcwallet_8cpp" startline="253" endline="289">GetAccountAddress</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a6bf0dc200554f841a4549a2e5087f699" compoundref="rpcwallet_8cpp" startline="320" endline="359">setaccount</referencedby>
        <referencedby refid="rpcwallet_8cpp_1ae8b2f525d311992d732a971b6333c8ea" compoundref="rpcwallet_8cpp" startline="362" endline="386">getaccount</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a33a914aa20f1ded289040800898a0e79" compoundref="rpcwallet_8cpp" startline="421" endline="454">SendMoney</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a134064858f9cfa4775a6ae34cac2b133" compoundref="rpcwallet_8cpp" startline="456" endline="526">sendtoaddress</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a315b42a2c859c4b50a54c1b05984928c" compoundref="rpcwallet_8cpp" startline="575" endline="624">signmessage</referencedby>
        <referencedby refid="rpcwallet_8cpp_1abbb6475509aa2e69844f0b3a8bcb422a" compoundref="rpcwallet_8cpp" startline="626" endline="677">getreceivedbyaddress</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a7dcb5aa63b46944bc4874719c8e1db15" compoundref="rpcwallet_8cpp" startline="854" endline="919">movecmd</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a845eaefd9ec7752b1145c183205524d0" compoundref="rpcwallet_8cpp" startline="922" endline="989">sendfrom</referencedby>
        <referencedby refid="rpcwallet_8cpp_1adeb5f23f20fb4e589dab23cadf75c92d" compoundref="rpcwallet_8cpp" startline="992" endline="1086">sendmany</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a3247ccfc52f810122e28895d423e13fd" compoundref="rpcwallet_8cpp" startline="1518" endline="1630">listtransactions</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a53cf4975a89f414ef3bd180f6b4773cd" compoundref="rpcwallet_8cpp" startline="1709" endline="1806">listsinceblock</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a845c15a1402787fcf2cc021111ea89f5" compoundref="rpcwallet_8cpp" startline="1808" endline="1906">gettransaction</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a7813bcc93d80c6c4ad0ae846f80cff3e" compoundref="rpcwallet_8cpp" startline="1909" endline="1927">backupwallet</referencedby>
        <referencedby refid="rpcwallet_8cpp_1afe8615fcf2c8e5319166c2fa8c638e08" compoundref="rpcwallet_8cpp" startline="1930" endline="1959">keypoolrefill</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a733f7c70e7c18783935e6de9643c0086" compoundref="rpcwallet_8cpp" startline="1969" endline="2032">walletpassphrase</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a84ad884957e24688433be32a9ca70933" compoundref="rpcwallet_8cpp" startline="2035" endline="2073">walletpassphrasechange</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a387555bfc9c8d51759001ec4e3be3e83" compoundref="rpcwallet_8cpp" startline="2076" endline="2107">walletlock</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a5fb49bac2748015a256c63e9f8ccc539" compoundref="rpcwallet_8cpp" startline="2110" endline="2160">encryptwallet</referencedby>
        <referencedby refid="rpcwallet_8cpp_1ad901105908c7eea072067a49643a906e" compoundref="rpcwallet_8cpp" startline="2490" endline="2536">sendtostealthaddress</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rpcprotocol_8h" kindref="compound">rpcprotocol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio/ssl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/foreach.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iostreams/concepts.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iostreams/stream.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost" kindref="compound">boost</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost_1_1asio" kindref="compound">boost::asio</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacejson__spirit" kindref="compound">json_spirit</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>bytes<sp/>to<sp/>allocate<sp/>and<sp/>read<sp/>at<sp/>most<sp/>at<sp/>once<sp/>in<sp/>post<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="rpcprotocol_8cpp_1a86279189e9b67af153a80f6ca5ef5d1c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a86279189e9b67af153a80f6ca5ef5d1c" kindref="member">POST_READ_SIZE</ref><sp/>=<sp/>256<sp/>*<sp/>1024;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HTTP<sp/>protocol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>ain&apos;t<sp/>Apache.<sp/><sp/>We&apos;re<sp/>just<sp/>using<sp/>HTTP<sp/>header<sp/>for<sp/>the<sp/>length<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>to<sp/>be<sp/>compatible<sp/>with<sp/>other<sp/>JSON-RPC<sp/>implementations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="rpcprotocol_8cpp_1af2d91e7026366657a021311ecc188262" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1af2d91e7026366657a021311ecc188262" kindref="member">HTTPPost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>strMsg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>map&lt;string,string&gt;&amp;<sp/>mapRequestHeaders)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>s;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;POST<sp/>/<sp/>HTTP/1.1\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;User-Agent:<sp/>darksilk-json-rpc/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" kindref="member">FormatFullVersion</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Host:<sp/>127.0.0.1\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Content-Type:<sp/>application/json\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Content-Length:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strMsg.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Connection:<sp/>close\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Accept:<sp/>application/json\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)&amp;<sp/>item,<sp/>mapRequestHeaders)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>item.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item.second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strMsg;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.str();</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>rfc1123Time()</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(</highlight><highlight class="stringliteral">&quot;%a,<sp/>%d<sp/>%b<sp/>%Y<sp/>%H:%M:%S<sp/>+0000&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>());</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="rpcprotocol_8cpp_1afa39f57077df4d88ad60373f58d793e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1afa39f57077df4d88ad60373f58d793e1" kindref="member">HTTPReply</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStatus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>strMsg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepalive)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStatus<sp/>==<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a74677f364201a3d068bc6b9db7359288" kindref="member">HTTP_UNAUTHORIZED</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;HTTP/1.0<sp/>401<sp/>Authorization<sp/>Required\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Date:<sp/>%s\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Server:<sp/>darksilk-json-rpc/%s\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WWW-Authenticate:<sp/>Basic<sp/>realm=\&quot;jsonrpc\&quot;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Content-Type:<sp/>text/html\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Content-Length:<sp/>296\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;!DOCTYPE<sp/>HTML<sp/>PUBLIC<sp/>\&quot;-//W3C//DTD<sp/>HTML<sp/>4.01<sp/>Transitional//EN\&quot;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;http://www.w3.org/TR/1999/REC-html401-19991224/loose.dtd\&quot;&gt;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;HTML&gt;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;HEAD&gt;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;TITLE&gt;Error&lt;/TITLE&gt;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;META<sp/>HTTP-EQUIV=&apos;Content-Type&apos;<sp/>CONTENT=&apos;text/html;<sp/>charset=ISO-8859-1&apos;&gt;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;/HEAD&gt;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;BODY&gt;&lt;H1&gt;401<sp/>Unauthorized.&lt;/H1&gt;&lt;/BODY&gt;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;/HTML&gt;\r\n&quot;</highlight><highlight class="normal">,<sp/>rfc1123Time(),<sp/><ref refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" kindref="member">FormatFullVersion</ref>());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cStatus;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStatus<sp/>==<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a43f8027764325bbcad2f773511156d0a" kindref="member">HTTP_OK</ref>)<sp/>cStatus<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStatus<sp/>==<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a173b2a55d636fe537b9069a4fb3388f2" kindref="member">HTTP_BAD_REQUEST</ref>)<sp/>cStatus<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>Request&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStatus<sp/>==<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7aec6e8ecb79ff84830a69e52ff01d17" kindref="member">HTTP_FORBIDDEN</ref>)<sp/>cStatus<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Forbidden&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStatus<sp/>==<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7a2f2a109c030ee9d2d5afe761232451" kindref="member">HTTP_NOT_FOUND</ref>)<sp/>cStatus<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>Found&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStatus<sp/>==<sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" kindref="member">HTTP_INTERNAL_SERVER_ERROR</ref>)<sp/>cStatus<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>Server<sp/>Error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>cStatus<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HTTP/1.1<sp/>%d<sp/>%s\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Date:<sp/>%s\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Connection:<sp/>%s\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Content-Length:<sp/>%u\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Content-Type:<sp/>application/json\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Server:<sp/>darksilk-json-rpc/%s\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStatus,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cStatus,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rfc1123Time(),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepalive<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;keep-alive&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strMsg.size(),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" kindref="member">FormatFullVersion</ref>(),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strMsg);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="rpcprotocol_8cpp_1add578b3fb095706a7a78d265fa97d8d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1add578b3fb095706a7a78d265fa97d8d0" kindref="member">ReadHTTPRequestLine</ref>(std::basic_istream&lt;char&gt;&amp;<sp/>stream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;proto,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>http_method,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>http_uri)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>getline(stream,<sp/>str);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HTTP<sp/>request<sp/>line<sp/>is<sp/>space-delimited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>vWords;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::split(vWords,<sp/>str,<sp/>boost::is_any_of(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vWords.size()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HTTP<sp/>methods<sp/>permitted:<sp/>GET,<sp/>POST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>http_method<sp/>=<sp/>vWords[0];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(http_method<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;GET&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>http_method<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;POST&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HTTP<sp/>URI<sp/>must<sp/>be<sp/>an<sp/>absolute<sp/>path,<sp/>relative<sp/>to<sp/>current<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>http_uri<sp/>=<sp/>vWords[1];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(http_uri.size()<sp/>==<sp/>0<sp/>||<sp/>http_uri[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>proto,<sp/>if<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strProto<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vWords.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strProto<sp/>=<sp/>vWords[2];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>proto<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ver<sp/>=<sp/>strstr(strProto.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;HTTP/1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ver<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto<sp/>=<sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(ver+7);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="rpcprotocol_8h_1af615c564cc7794d255e5adfacade4066" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1af615c564cc7794d255e5adfacade4066" kindref="member">ReadHTTPStatus</ref>(std::basic_istream&lt;char&gt;&amp;<sp/>stream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;proto)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>getline(stream,<sp/>str);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>vWords;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::split(vWords,<sp/>str,<sp/>boost::is_any_of(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vWords.size()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" kindref="member">HTTP_INTERNAL_SERVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>proto<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ver<sp/>=<sp/>strstr(str.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;HTTP/1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ver<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto<sp/>=<sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(ver+7);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(vWords[1].c_str());</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="rpcprotocol_8cpp_1adfa1ef30dd1e00dcbecff15e1161e369" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1adfa1ef30dd1e00dcbecff15e1161e369" kindref="member">ReadHTTPHeaders</ref>(std::basic_istream&lt;char&gt;&amp;<sp/>stream,<sp/>map&lt;string,<sp/>string&gt;&amp;<sp/>mapHeadersRet)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(stream,<sp/>str);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.empty()<sp/>||<sp/>str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string::size_type<sp/>nColon<sp/>=<sp/>str.find(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nColon<sp/>!=<sp/>string::npos)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strHeader<sp/>=<sp/>str.substr(0,<sp/>nColon);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::trim(strHeader);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::to_lower(strHeader);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strValue<sp/>=<sp/>str.substr(nColon+1);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::trim(strValue);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapHeadersRet[strHeader]<sp/>=<sp/>strValue;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strHeader<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;content-length&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLen<sp/>=<sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(strValue.c_str());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nLen;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="rpcprotocol_8cpp_1a04ef20cccddfd1505806982c3c232325" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a04ef20cccddfd1505806982c3c232325" kindref="member">ReadHTTPMessage</ref>(std::basic_istream&lt;char&gt;&amp;<sp/>stream,<sp/>map&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;&amp;<sp/>mapHeadersRet,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>strMessageRet,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nProto,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_size)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>mapHeadersRet.clear();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>strMessageRet<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLen<sp/>=<sp/><ref refid="rpcprotocol_8cpp_1adfa1ef30dd1e00dcbecff15e1161e369" kindref="member">ReadHTTPHeaders</ref>(stream,<sp/>mapHeadersRet);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLen<sp/>&lt;<sp/>0<sp/>||<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)nLen<sp/>&gt;<sp/>max_size)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" kindref="member">HTTP_INTERNAL_SERVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLen<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;char&gt;<sp/>vch;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)nLen)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_to_read<sp/>=<sp/>std::min((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)nLen<sp/>-<sp/>ptr,<sp/><ref refid="rpcprotocol_8cpp_1a86279189e9b67af153a80f6ca5ef5d1c" kindref="member">POST_READ_SIZE</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vch.resize(ptr<sp/>+<sp/>bytes_to_read);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.read(&amp;vch[ptr],<sp/>bytes_to_read);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream)<sp/></highlight><highlight class="comment">//<sp/>Connection<sp/>lost<sp/>while<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" kindref="member">HTTP_INTERNAL_SERVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>bytes_to_read;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strMessageRet<sp/>=<sp/>string(vch.begin(),<sp/>vch.end());</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sConHdr<sp/>=<sp/>mapHeadersRet[</highlight><highlight class="stringliteral">&quot;connection&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sConHdr<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(sConHdr<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;keep-alive&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nProto<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapHeadersRet[</highlight><highlight class="stringliteral">&quot;connection&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;keep-alive&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapHeadersRet[</highlight><highlight class="stringliteral">&quot;connection&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a43f8027764325bbcad2f773511156d0a" kindref="member">HTTP_OK</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JSON-RPC<sp/>protocol.<sp/><sp/>DarkSilk<sp/>speaks<sp/>version<sp/>1.0<sp/>for<sp/>maximum<sp/>compatibility,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>uses<sp/>JSON-RPC<sp/>1.1/2.0<sp/>standards<sp/>for<sp/>parts<sp/>of<sp/>the<sp/>1.0<sp/>standard<sp/>that<sp/>were</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unspecified<sp/>(HTTP<sp/>errors<sp/>and<sp/>contents<sp/>of<sp/>&apos;error&apos;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.0<sp/>spec:<sp/>http://json-rpc.org/wiki/specification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.2<sp/>spec:<sp/>http://groups.google.com/group/json-rpc/web/json-rpc-over-http</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.codeproject.com/KB/recipes/JSON_Spirit.aspx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="rpcprotocol_8cpp_1ab409c39d9d803bb50fecd4f0ff9970a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1ab409c39d9d803bb50fecd4f0ff9970a4" kindref="member">JSONRPCRequest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>strMethod,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>request;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>request.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;method&quot;</highlight><highlight class="normal">,<sp/>strMethod));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>request.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;params&quot;</highlight><highlight class="normal">,<sp/>params));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>request.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1ad4b51f460af6cdec5b128f53f233b0c6" kindref="member">write_string</ref>(<ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref>(request),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="rpcprotocol_8h_1aebdc56873bd962e1d9b310c34e7dde0a" refkind="member"><highlight class="normal"><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/><ref refid="rpcprotocol_8cpp_1a48add16ec902386cc873c5cf0b40b2dd" kindref="member">JSONRPCReplyObj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>reply;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error.<ref refid="classjson__spirit_1_1_value__impl_1a1ba338778c3415bf0c740e965790d439" kindref="member">type</ref>()<sp/>!=<sp/><ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74a38ef470443cb345064758efff2e303fc" kindref="member">null_type</ref>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply.push_back(<ref refid="structjson__spirit_1_1_pair__impl" kindref="compound">Pair</ref>(</highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">,<sp/>Value::null));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">,<sp/>result));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>reply.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">,<sp/>error));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>reply.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reply;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="rpcprotocol_8h_1a0684e3796b75355730f1657a05ea6bcc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a091e4839a15f5f6d569a97c709d80374" kindref="member">JSONRPCReply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/>error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>reply<sp/>=<sp/><ref refid="rpcprotocol_8cpp_1a48add16ec902386cc873c5cf0b40b2dd" kindref="member">JSONRPCReplyObj</ref>(result,<sp/>error,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1ad4b51f460af6cdec5b128f53f233b0c6" kindref="member">write_string</ref>(<ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref>(reply),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" refkind="member"><highlight class="normal"><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>message)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>error;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>error.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;code&quot;</highlight><highlight class="normal">,<sp/>code));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>error.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">,<sp/>message));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/rpcprotocol.cpp"/>
  </compounddef>
</doxygen>
