<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="wallet_8cpp" kind="file" language="C++">
    <compoundname>wallet.cpp</compoundname>
    <includes refid="wallet_8h" local="yes">wallet.h</includes>
    <includes refid="base58_8h" local="yes">base58.h</includes>
    <includes refid="checkpoints_8h" local="yes">checkpoints.h</includes>
    <includes refid="coincontrol_8h" local="yes">coincontrol.h</includes>
    <includes refid="kernel_8h" local="yes">kernel.h</includes>
    <includes refid="net_8h" local="yes">net.h</includes>
    <includes refid="stormnode-budget_8h" local="yes">stormnode-budget.h</includes>
    <includes refid="timedata_8h" local="yes">timedata.h</includes>
    <includes refid="txdb_8h" local="yes">txdb.h</includes>
    <includes refid="ui__interface_8h" local="yes">ui_interface.h</includes>
    <includes refid="walletdb_8h" local="yes">walletdb.h</includes>
    <includes refid="crypter_8h" local="yes">crypter.h</includes>
    <includes refid="key_8h" local="yes">key.h</includes>
    <includes refid="spork_8h" local="yes">spork.h</includes>
    <includes refid="sandstorm_8h" local="yes">sandstorm.h</includes>
    <includes refid="instantx_8h" local="yes">instantx.h</includes>
    <includes refid="stormnode_8h" local="yes">stormnode.h</includes>
    <includes refid="stormnode-payments_8h" local="yes">stormnode-payments.h</includes>
    <includes refid="chainparams_8h" local="yes">chainparams.h</includes>
    <includes refid="smessage_8h" local="yes">smessage.h</includes>
    <includes refid="txdb-leveldb_8h" local="yes">txdb-leveldb.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">boost/algorithm/string/replace.hpp</includes>
    <includes local="no">boost/range/algorithm.hpp</includes>
    <includes local="no">boost/numeric/ublas/matrix.hpp</includes>
    <includes local="no">boost/thread.hpp</includes>
    <incdepgraph>
      <node id="28934">
        <label>list</label>
      </node>
      <node id="28890">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="28983">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28981" relation="include">
        </childnode>
      </node>
      <node id="28963">
        <label>netinet/in.h</label>
      </node>
      <node id="28933">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28888" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
      </node>
      <node id="28956">
        <label>arpa/inet.h</label>
      </node>
      <node id="28898">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="28870">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet.cpp"/>
        <childnode refid="28871" relation="include">
        </childnode>
        <childnode refid="28989" relation="include">
        </childnode>
        <childnode refid="28990" relation="include">
        </childnode>
        <childnode refid="28991" relation="include">
        </childnode>
        <childnode refid="28992" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28993" relation="include">
        </childnode>
        <childnode refid="28951" relation="include">
        </childnode>
        <childnode refid="28976" relation="include">
        </childnode>
        <childnode refid="28987" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28970" relation="include">
        </childnode>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28997" relation="include">
        </childnode>
        <childnode refid="28998" relation="include">
        </childnode>
        <childnode refid="29001" relation="include">
        </childnode>
        <childnode refid="28994" relation="include">
        </childnode>
        <childnode refid="29002" relation="include">
        </childnode>
        <childnode refid="28968" relation="include">
        </childnode>
        <childnode refid="29003" relation="include">
        </childnode>
        <childnode refid="29005" relation="include">
        </childnode>
        <childnode refid="28903" relation="include">
        </childnode>
        <childnode refid="29006" relation="include">
        </childnode>
        <childnode refid="29007" relation="include">
        </childnode>
        <childnode refid="29008" relation="include">
        </childnode>
        <childnode refid="28935" relation="include">
        </childnode>
      </node>
      <node id="28880">
        <label>limits</label>
      </node>
      <node id="28996">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="28917">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28888" relation="include">
        </childnode>
      </node>
      <node id="28993">
        <label>stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="28971" relation="include">
        </childnode>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28989" relation="include">
        </childnode>
        <childnode refid="28994" relation="include">
        </childnode>
        <childnode refid="28995" relation="include">
        </childnode>
        <childnode refid="28996" relation="include">
        </childnode>
      </node>
      <node id="28949">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="28933" relation="include">
        </childnode>
        <childnode refid="28912" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28950" relation="include">
        </childnode>
        <childnode refid="28921" relation="include">
        </childnode>
        <childnode refid="28951" relation="include">
        </childnode>
        <childnode refid="28945" relation="include">
        </childnode>
      </node>
      <node id="28918">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="28919" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28892" relation="include">
        </childnode>
      </node>
      <node id="28921">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28922" relation="include">
        </childnode>
        <childnode refid="28923" relation="include">
        </childnode>
        <childnode refid="28910" relation="include">
        </childnode>
        <childnode refid="28924" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28944" relation="include">
        </childnode>
      </node>
      <node id="28943">
        <label>openssl/rand.h</label>
      </node>
      <node id="28872">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28908" relation="include">
        </childnode>
        <childnode refid="28944" relation="include">
        </childnode>
        <childnode refid="28933" relation="include">
        </childnode>
        <childnode refid="28934" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28905" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28903">
        <label>assert.h</label>
      </node>
      <node id="28885">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="28962">
        <label>net/if.h</label>
      </node>
      <node id="28998">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28999" relation="include">
        </childnode>
        <childnode refid="29000" relation="include">
        </childnode>
      </node>
      <node id="28990">
        <label>checkpoints.h</label>
        <link refid="checkpoints_8h"/>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28912" relation="include">
        </childnode>
      </node>
      <node id="28972">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="28949" relation="include">
        </childnode>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28973" relation="include">
        </childnode>
        <childnode refid="28933" relation="include">
        </childnode>
        <childnode refid="28985" relation="include">
        </childnode>
      </node>
      <node id="28995">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="28982">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="28919" relation="include">
        </childnode>
      </node>
      <node id="28900">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="28989">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="28968" relation="include">
        </childnode>
        <childnode refid="28910" relation="include">
        </childnode>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28921" relation="include">
        </childnode>
        <childnode refid="28886" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28894">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="28895" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
      </node>
      <node id="29004">
        <label>lz4/lz4.h</label>
        <link refid="lz4_8h"/>
      </node>
      <node id="28973">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="28974" relation="include">
        </childnode>
        <childnode refid="28972" relation="include">
        </childnode>
        <childnode refid="28903" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28922" relation="include">
        </childnode>
        <childnode refid="28984" relation="include">
        </childnode>
      </node>
      <node id="28891">
        <label>sys/mman.h</label>
      </node>
      <node id="28888">
        <label>stdlib.h</label>
      </node>
      <node id="28986">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="28948" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28968" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28922" relation="include">
        </childnode>
      </node>
      <node id="29003">
        <label>smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="28978" relation="include">
        </childnode>
        <childnode refid="28983" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
        <childnode refid="28989" relation="include">
        </childnode>
        <childnode refid="29004" relation="include">
        </childnode>
      </node>
      <node id="28922">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="28942">
        <label>openssl/crypto.h</label>
      </node>
      <node id="29002">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28971" relation="include">
        </childnode>
        <childnode refid="28994" relation="include">
        </childnode>
        <childnode refid="28995" relation="include">
        </childnode>
      </node>
      <node id="28959">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="28960" relation="include">
        </childnode>
        <childnode refid="28891" relation="include">
        </childnode>
        <childnode refid="28961" relation="include">
        </childnode>
        <childnode refid="28927" relation="include">
        </childnode>
        <childnode refid="28962" relation="include">
        </childnode>
        <childnode refid="28963" relation="include">
        </childnode>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28964" relation="include">
        </childnode>
        <childnode refid="28892" relation="include">
        </childnode>
        <childnode refid="28965" relation="include">
        </childnode>
        <childnode refid="28893" relation="include">
        </childnode>
        <childnode refid="28966" relation="include">
        </childnode>
      </node>
      <node id="28938">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="28914">
        <label>openssl/sha.h</label>
      </node>
      <node id="28966">
        <label>errno.h</label>
      </node>
      <node id="28879">
        <label>cassert</label>
      </node>
      <node id="28913">
        <label>stdexcept</label>
      </node>
      <node id="28926">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="28927" relation="include">
        </childnode>
        <childnode refid="28928" relation="include">
        </childnode>
        <childnode refid="28929" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28930" relation="include">
        </childnode>
        <childnode refid="28933" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28934" relation="include">
        </childnode>
        <childnode refid="28905" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28935" relation="include">
        </childnode>
        <childnode refid="28936" relation="include">
        </childnode>
        <childnode refid="28906" relation="include">
        </childnode>
        <childnode refid="28937" relation="include">
        </childnode>
        <childnode refid="28938" relation="include">
        </childnode>
        <childnode refid="28939" relation="include">
        </childnode>
        <childnode refid="28940" relation="include">
        </childnode>
        <childnode refid="28941" relation="include">
        </childnode>
        <childnode refid="28942" relation="include">
        </childnode>
        <childnode refid="28943" relation="include">
        </childnode>
        <childnode refid="28925" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
      </node>
      <node id="28967">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="28968" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28958" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
      </node>
      <node id="28937">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="28978">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28945" relation="include">
        </childnode>
        <childnode refid="28979" relation="include">
        </childnode>
        <childnode refid="28982" relation="include">
        </childnode>
      </node>
      <node id="28875">
        <label>string</label>
      </node>
      <node id="28871">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28888" relation="include">
        </childnode>
        <childnode refid="28948" relation="include">
        </childnode>
        <childnode refid="28949" relation="include">
        </childnode>
        <childnode refid="28970" relation="include">
        </childnode>
        <childnode refid="28971" relation="include">
        </childnode>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28908" relation="include">
        </childnode>
        <childnode refid="28921" relation="include">
        </childnode>
        <childnode refid="28987" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28944" relation="include">
        </childnode>
      </node>
      <node id="28952">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28888" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
      </node>
      <node id="28877">
        <label>map</label>
      </node>
      <node id="28935">
        <label>boost/thread.hpp</label>
      </node>
      <node id="28969">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="28958" relation="include">
        </childnode>
        <childnode refid="28967" relation="include">
        </childnode>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28951" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28994">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28989" relation="include">
        </childnode>
        <childnode refid="28971" relation="include">
        </childnode>
        <childnode refid="28951" relation="include">
        </childnode>
      </node>
      <node id="28987">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="28933" relation="include">
        </childnode>
        <childnode refid="28988" relation="include">
        </childnode>
        <childnode refid="28947" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
      </node>
      <node id="28977">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28901" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28906" relation="include">
        </childnode>
        <childnode refid="28978" relation="include">
        </childnode>
        <childnode refid="28983" relation="include">
        </childnode>
      </node>
      <node id="28919">
        <label>stddef.h</label>
      </node>
      <node id="28923">
        <label>boost/variant.hpp</label>
      </node>
      <node id="29001">
        <label>instantx.h</label>
        <link refid="instantx_8h"/>
        <childnode refid="28949" relation="include">
        </childnode>
      </node>
      <node id="28965">
        <label>netdb.h</label>
      </node>
      <node id="28960">
        <label>sys/fcntl.h</label>
      </node>
      <node id="28974">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="28975" relation="include">
        </childnode>
      </node>
      <node id="28981">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28980" relation="include">
        </childnode>
      </node>
      <node id="28985">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="28991">
        <label>coincontrol.h</label>
        <link refid="coincontrol_8h"/>
        <childnode refid="28949" relation="include">
        </childnode>
      </node>
      <node id="28874">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28878" relation="include">
        </childnode>
        <childnode refid="28879" relation="include">
        </childnode>
        <childnode refid="28880" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28882" relation="include">
        </childnode>
        <childnode refid="28883" relation="include">
        </childnode>
        <childnode refid="28884" relation="include">
        </childnode>
        <childnode refid="28885" relation="include">
        </childnode>
        <childnode refid="28886" relation="include">
        </childnode>
        <childnode refid="28894" relation="include">
        </childnode>
      </node>
      <node id="28892">
        <label>limits.h</label>
      </node>
      <node id="28897">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="28957">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="28878" relation="include">
        </childnode>
        <childnode refid="28954" relation="include">
        </childnode>
      </node>
      <node id="28929">
        <label>sys/resource.h</label>
      </node>
      <node id="28939">
        <label>openssl/bio.h</label>
      </node>
      <node id="28970">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="28886" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28908" relation="include">
        </childnode>
      </node>
      <node id="28947">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="28958">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28959" relation="include">
        </childnode>
      </node>
      <node id="28908">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28910" relation="include">
        </childnode>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28921" relation="include">
        </childnode>
        <childnode refid="28947" relation="include">
        </childnode>
        <childnode refid="28923" relation="include">
        </childnode>
      </node>
      <node id="28911">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="28912" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28914" relation="include">
        </childnode>
        <childnode refid="28915" relation="include">
        </childnode>
        <childnode refid="28916" relation="include">
        </childnode>
        <childnode refid="28917" relation="include">
        </childnode>
        <childnode refid="28918" relation="include">
        </childnode>
        <childnode refid="28920" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28964">
        <label>ifaddrs.h</label>
      </node>
      <node id="28944">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28888" relation="include">
        </childnode>
        <childnode refid="28945" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28946" relation="include">
        </childnode>
      </node>
      <node id="28992">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="28986" relation="include">
        </childnode>
      </node>
      <node id="28927">
        <label>sys/types.h</label>
      </node>
      <node id="28904">
        <label>ios</label>
      </node>
      <node id="28889">
        <label>string.h</label>
      </node>
      <node id="28895">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="28883">
        <label>cstdio</label>
      </node>
      <node id="28899">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="28941">
        <label>openssl/buffer.h</label>
      </node>
      <node id="28884">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="29007">
        <label>boost/range/algorithm.hpp</label>
      </node>
      <node id="28971">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="28972" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28921" relation="include">
        </childnode>
        <childnode refid="28901" relation="include">
        </childnode>
        <childnode refid="28976" relation="include">
        </childnode>
        <childnode refid="28986" relation="include">
        </childnode>
        <childnode refid="28934" relation="include">
        </childnode>
        <childnode refid="28984" relation="include">
        </childnode>
      </node>
      <node id="28906">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="29000">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28989" relation="include">
        </childnode>
        <childnode refid="28971" relation="include">
        </childnode>
        <childnode refid="28994" relation="include">
        </childnode>
      </node>
      <node id="28984">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="28910">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="28911" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28912" relation="include">
        </childnode>
        <childnode refid="28913" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28893">
        <label>unistd.h</label>
      </node>
      <node id="28907">
        <label>db_cxx.h</label>
      </node>
      <node id="28876">
        <label>vector</label>
      </node>
      <node id="28924">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28912" relation="include">
        </childnode>
        <childnode refid="28925" relation="include">
        </childnode>
        <childnode refid="28913" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
      </node>
      <node id="28953">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="28954" relation="include">
        </childnode>
        <childnode refid="28955" relation="include">
        </childnode>
        <childnode refid="28922" relation="include">
        </childnode>
        <childnode refid="28947" relation="include">
        </childnode>
        <childnode refid="28943" relation="include">
        </childnode>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28957" relation="include">
        </childnode>
        <childnode refid="28958" relation="include">
        </childnode>
        <childnode refid="28967" relation="include">
        </childnode>
        <childnode refid="28969" relation="include">
        </childnode>
        <childnode refid="28911" relation="include">
        </childnode>
        <childnode refid="28901" relation="include">
        </childnode>
      </node>
      <node id="28915">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="28936">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="28905">
        <label>utility</label>
      </node>
      <node id="28975">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="28949" relation="include">
        </childnode>
        <childnode refid="28976" relation="include">
        </childnode>
      </node>
      <node id="28932">
        <label>sstream</label>
      </node>
      <node id="28988">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="29005">
        <label>txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="28971" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28978" relation="include">
        </childnode>
        <childnode refid="28983" relation="include">
        </childnode>
        <childnode refid="28901" relation="include">
        </childnode>
      </node>
      <node id="28909">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="28886" relation="include">
        </childnode>
        <childnode refid="28910" relation="include">
        </childnode>
        <childnode refid="28913" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28940">
        <label>openssl/evp.h</label>
      </node>
      <node id="28930">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="28879" relation="include">
        </childnode>
        <childnode refid="28931" relation="include">
        </childnode>
        <childnode refid="28932" relation="include">
        </childnode>
        <childnode refid="28913" relation="include">
        </childnode>
      </node>
      <node id="28881">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="29008">
        <label>boost/numeric/ublas/matrix.hpp</label>
      </node>
      <node id="28873">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28901" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28906" relation="include">
        </childnode>
        <childnode refid="28907" relation="include">
        </childnode>
      </node>
      <node id="28920">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28919" relation="include">
        </childnode>
        <childnode refid="28892" relation="include">
        </childnode>
      </node>
      <node id="28901">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="28886" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28902" relation="include">
        </childnode>
        <childnode refid="28903" relation="include">
        </childnode>
        <childnode refid="28904" relation="include">
        </childnode>
        <childnode refid="28880" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28878" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28889" relation="include">
        </childnode>
        <childnode refid="28905" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28997">
        <label>spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="28924" relation="include">
        </childnode>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28926" relation="include">
        </childnode>
        <childnode refid="28921" relation="include">
        </childnode>
        <childnode refid="28989" relation="include">
        </childnode>
        <childnode refid="28971" relation="include">
        </childnode>
        <childnode refid="28967" relation="include">
        </childnode>
        <childnode refid="28998" relation="include">
        </childnode>
        <childnode refid="28995" relation="include">
        </childnode>
      </node>
      <node id="28928">
        <label>sys/time.h</label>
      </node>
      <node id="28931">
        <label>iostream</label>
      </node>
      <node id="28954">
        <label>deque</label>
      </node>
      <node id="28912">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="28903" relation="include">
        </childnode>
        <childnode refid="28882" relation="include">
        </childnode>
        <childnode refid="28913" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28961">
        <label>sys/socket.h</label>
      </node>
      <node id="28980">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="28903" relation="include">
        </childnode>
        <childnode refid="28919" relation="include">
        </childnode>
        <childnode refid="28889" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
      </node>
      <node id="28955">
        <label>boost/array.hpp</label>
      </node>
      <node id="28925">
        <label>openssl/bn.h</label>
      </node>
      <node id="28976">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="28977" relation="include">
        </childnode>
        <childnode refid="28971" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28905" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28951">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="28881" relation="include">
        </childnode>
      </node>
      <node id="28886">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="28887" relation="include">
        </childnode>
        <childnode refid="28889" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28890" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28891" relation="include">
        </childnode>
        <childnode refid="28892" relation="include">
        </childnode>
        <childnode refid="28893" relation="include">
        </childnode>
      </node>
      <node id="28968">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="28924" relation="include">
        </childnode>
        <childnode refid="28912" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28878">
        <label>set</label>
      </node>
      <node id="28902">
        <label>algorithm</label>
      </node>
      <node id="29006">
        <label>boost/algorithm/string/replace.hpp</label>
      </node>
      <node id="28999">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
      </node>
      <node id="28916">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="28881" relation="include">
        </childnode>
        <childnode refid="28888" relation="include">
        </childnode>
      </node>
      <node id="28950">
        <label>util.h</label>
      </node>
      <node id="28945">
        <label>stdio.h</label>
      </node>
      <node id="28887">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="28888" relation="include">
        </childnode>
      </node>
      <node id="28882">
        <label>cstring</label>
      </node>
      <node id="28896">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="28897" relation="include">
        </childnode>
        <childnode refid="28898" relation="include">
        </childnode>
        <childnode refid="28899" relation="include">
        </childnode>
        <childnode refid="28890" relation="include">
        </childnode>
        <childnode refid="28900" relation="include">
        </childnode>
      </node>
      <node id="28946">
        <label>inttypes.h</label>
      </node>
      <node id="28979">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="28980" relation="include">
        </childnode>
        <childnode refid="28981" relation="include">
        </childnode>
      </node>
      <node id="28948">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="28949" relation="include">
        </childnode>
        <childnode refid="28920" relation="include">
        </childnode>
        <childnode refid="28952" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_compare_value_only" prot="public">CompareValueOnly</innerclass>
    <innerclass refid="struct_larger_or_equal_than_threshold" prot="public">LargerOrEqualThanThreshold</innerclass>
    <innerclass refid="struct_compare_by_priority" prot="public">CompareByPriority</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" prot="public" static="no" mutable="no">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount nTransactionFee</definition>
        <argsstring></argsstring>
        <name>nTransactionFee</name>
        <initializer>= <ref refid="wallet_8h_1add67e95cd66a980b74a7a2f434d9cf1c" kindref="member">MIN_TX_FEE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="40" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" prot="public" static="no" mutable="no">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount nReserveBalance</definition>
        <argsstring></argsstring>
        <name>nReserveBalance</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="41" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wallet_8cpp_1a6161012435f37404c65527606c4e0c3d" prot="public" static="no" mutable="no">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount nMinimumInputValue</definition>
        <argsstring></argsstring>
        <name>nMinimumInputValue</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="42" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wallet_8cpp_1a0bc784e958b92854437f2238d4249da0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fWalletUnlockStakingOnly</definition>
        <argsstring></argsstring>
        <name>fWalletUnlockStakingOnly</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="166" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wallet_8cpp_1a4250c8c7805aa2bd34a227abe70288f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount gcd</definition>
        <argsstring>(CAmount n, CAmount m)</argsstring>
        <name>gcd</name>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="44" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="wallet_8cpp_1a420bb126a4c58278cd08d576d6ad0f1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>static CAmount GetStakeCombineThreshold</definition>
        <argsstring>()</argsstring>
        <name>GetStakeCombineThreshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="46" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="wallet_8cpp_1a9bfb96740b00f0936de55be5c969c1a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>static CAmount GetStakeSplitThreshold</definition>
        <argsstring>()</argsstring>
        <name>GetStakeSplitThreshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="47" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="wallet_8cpp_1aa38522c1a14e7a0cff5c79ee5b6f0872" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t CoinWeightCost</definition>
        <argsstring>(const COutput &amp;out)</argsstring>
        <name>CoinWeightCost</name>
        <param>
          <type>const <ref refid="class_c_output" kindref="compound">COutput</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="54" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="wallet_8cpp_1ad3539fa1f9eff41a60abad189be1f96d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ApproximateBestSubset</definition>
        <argsstring>(vector&lt; pair&lt; CAmount, pair&lt; const CWalletTx *, unsigned int &gt; &gt; &gt;vValue, const CAmount &amp;nTotalLower, const CAmount &amp;nTargetValue, vector&lt; char &gt; &amp;vfBest, CAmount &amp;nBest, int iterations=1000)</argsstring>
        <name>ApproximateBestSubset</name>
        <param>
          <type>vector&lt; pair&lt; <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>, pair&lt; const <ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref> *, unsigned int &gt; &gt; &gt;</type>
          <declname>vValue</declname>
        </param>
        <param>
          <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nTotalLower</declname>
        </param>
        <param>
          <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nTargetValue</declname>
        </param>
        <param>
          <type>vector&lt; char &gt; &amp;</type>
          <declname>vfBest</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nBest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iterations</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="1829" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="1829" bodyend="1873"/>
      </memberdef>
      <memberdef kind="function" id="wallet_8cpp_1a502a73c6cf145be4a420a8bc75c6a69e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool less_then_denom</definition>
        <argsstring>(const COutput &amp;out1, const COutput &amp;out2)</argsstring>
        <name>less_then_denom</name>
        <param>
          <type>const <ref refid="class_c_output" kindref="compound">COutput</ref> &amp;</type>
          <declname>out1</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_output" kindref="compound">COutput</ref> &amp;</type>
          <declname>out2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/wallet.cpp" line="2143" column="1" bodyfile="/home/dev/ds-160209/src/wallet.cpp" bodystart="2143" bodyend="2156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wallet_8h" kindref="compound">wallet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base58_8h" kindref="compound">base58.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="checkpoints_8h" kindref="compound">checkpoints.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coincontrol_8h" kindref="compound">coincontrol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel_8h" kindref="compound">kernel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="net_8h" kindref="compound">net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-budget_8h" kindref="compound">stormnode-budget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timedata_8h" kindref="compound">timedata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb_8h" kindref="compound">txdb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui__interface_8h" kindref="compound">ui_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="walletdb_8h" kindref="compound">walletdb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="crypter_8h" kindref="compound">crypter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key_8h" kindref="compound">key.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spork_8h" kindref="compound">spork.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sandstorm_8h" kindref="compound">sandstorm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="instantx_8h" kindref="compound">instantx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode_8h" kindref="compound">stormnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-budget_8h" kindref="compound">stormnode-budget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-payments_8h" kindref="compound">stormnode-payments.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chainparams_8h" kindref="compound">chainparams.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="smessage_8h" kindref="compound">smessage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb-leveldb_8h" kindref="compound">txdb-leveldb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string/replace.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/range/algorithm.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/numeric/ublas/matrix.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="wallet_8h_1ab2e46203b8d90f87b0a32524045bef60" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref><sp/>=<sp/><ref refid="wallet_8h_1add67e95cd66a980b74a7a2f434d9cf1c" kindref="member">MIN_TX_FEE</ref>;</highlight></codeline>
<codeline lineno="41" refid="wallet_8h_1a1927c8af76b81444b99a9185af6adae2" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" kindref="member">nReserveBalance</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42" refid="wallet_8h_1a6161012435f37404c65527606c4e0c3d" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="wallet_8cpp_1a6161012435f37404c65527606c4e0c3d" kindref="member">nMinimumInputValue</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="wallet_8cpp_1a4250c8c7805aa2bd34a227abe70288f7" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="wallet_8cpp_1a4250c8c7805aa2bd34a227abe70288f7" kindref="member">gcd</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>n,<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>m)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m<sp/>==<sp/>0<sp/>?<sp/>n<sp/>:<sp/><ref refid="wallet_8cpp_1a4250c8c7805aa2bd34a227abe70288f7" kindref="member">gcd</ref>(m,<sp/>n<sp/>%<sp/>m);<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>GetStakeCombineThreshold()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>500<sp/>*<sp/>COIN;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>GetStakeSplitThreshold()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2<sp/>*<sp/>GetStakeCombineThreshold();<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mapWallet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>CoinWeightCost(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref><sp/>&amp;out)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTimeWeight<sp/>=<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)<ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>-<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref><sp/>bnCoinDayWeight<sp/>=<sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue)<sp/>*<sp/>nTimeWeight<sp/>/<sp/>(24<sp/>*<sp/>60<sp/>*<sp/>60);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bnCoinDayWeight.<ref refid="class_c_big_num_1a2cc30d131f0ef727d0ba21f964158b2b" kindref="member">getuint64</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="struct_compare_value_only" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_compare_value_only" kindref="compound">CompareValueOnly</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63" refid="struct_compare_value_only_1a73596b59eec5556429a995e11f2522ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_compare_value_only_1a73596b59eec5556429a995e11f2522ba" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair&lt;<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>,<sp/>pair&lt;const<sp/>CWalletTx*,<sp/>unsigned<sp/>int&gt;<sp/>&gt;&amp;<sp/>t1,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair&lt;<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>,<sp/>pair&lt;const<sp/>CWalletTx*,<sp/>unsigned<sp/>int&gt;<sp/>&gt;&amp;<sp/>t2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1.first<sp/>&lt;<sp/>t2.first;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="struct_larger_or_equal_than_threshold" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_larger_or_equal_than_threshold" kindref="compound">LargerOrEqualThanThreshold</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72" refid="struct_larger_or_equal_than_threshold_1a719c9b4c0f65d5bd7b4f5d3b97f88550" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="struct_larger_or_equal_than_threshold_1a719c9b4c0f65d5bd7b4f5d3b97f88550" kindref="member">threshold</ref>;</highlight></codeline>
<codeline lineno="73" refid="struct_larger_or_equal_than_threshold_1aa61771bc8292eaef60bfc9bc16ad2248" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_larger_or_equal_than_threshold_1aa61771bc8292eaef60bfc9bc16ad2248" kindref="member">LargerOrEqualThanThreshold</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>threshold)<sp/>:<sp/>threshold(threshold)<sp/>{}</highlight></codeline>
<codeline lineno="74" refid="struct_larger_or_equal_than_threshold_1a9f80c5f48a47ff4f2e630926a3f22919" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_larger_or_equal_than_threshold_1a9f80c5f48a47ff4f2e630926a3f22919" kindref="member">operator()</ref>(pair&lt;pair&lt;CAmount,CAmount&gt;,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.first.first<sp/>&gt;=<sp/>threshold;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_c_wallet_1a061fe7f54f80ec40f856b3e6365c2f4a" refkind="member"><highlight class="normal"><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/><ref refid="class_c_wallet_1a061fe7f54f80ec40f856b3e6365c2f4a" kindref="member">CWallet::GenerateNewKey</ref>()</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>mapKeyMetadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCompressed<sp/>=<sp/>CanSupportFeature(<ref refid="wallet_8h_1a39a6b71da3eb95cddc0836d3b27ac7c9a9b917e6922fd5de60c0b9fc95a3bf0e4" kindref="member">FEATURE_COMPRPUBKEY</ref>);<sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>compressed<sp/>public<sp/>keys<sp/>if<sp/>we<sp/>want<sp/>0.6.0<sp/>wallets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>secret;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>secret.<ref refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" kindref="member">MakeNewKey</ref>(fCompressed);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compressed<sp/>public<sp/>keys<sp/>were<sp/>introduced<sp/>in<sp/>version<sp/>0.6.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fCompressed)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetMinVersion(<ref refid="wallet_8h_1a39a6b71da3eb95cddc0836d3b27ac7c9a9b917e6922fd5de60c0b9fc95a3bf0e4" kindref="member">FEATURE_COMPRPUBKEY</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubkey<sp/>=<sp/>secret.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(secret.<ref refid="class_c_key_1a3890764f7a2e5d9cdeffb3e102e4545d" kindref="member">VerifyPubKey</ref>(pubkey));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nCreationTime<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>mapKeyMetadata[pubkey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()]<sp/>=<sp/><ref refid="class_c_key_metadata" kindref="compound">CKeyMetadata</ref>(nCreationTime);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nTimeFirstKey<sp/>||<sp/>nCreationTime<sp/>&lt;<sp/>nTimeFirstKey)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeFirstKey<sp/>=<sp/>nCreationTime;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AddKeyPubKey(secret,<sp/>pubkey))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;CWallet::GenerateNewKey()<sp/>:<sp/>AddKey<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pubkey;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_c_wallet_1a3240da36cd717146296969227a3e0bd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a3240da36cd717146296969227a3e0bd5" kindref="member">CWallet::AddKeyPubKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>secret,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;pubkey)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>mapKeyMetadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_crypto_key_store_1a340109b8673267676a34664a76ed3274" kindref="member">CCryptoKeyStore::AddKeyPubKey</ref>(secret,<sp/>pubkey))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>remove<sp/>from<sp/>watch-only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>script;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>script<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(pubkey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HaveWatchOnly(script))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveWatchOnly(script);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fFileBacked)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsCrypted())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a7ebef5e0c7f604aa2159ba96d527e3a2" kindref="member">WriteKey</ref>(pubkey,<sp/>secret.<ref refid="class_c_key_1ab38813e7091f658612dfb14f17c9e317" kindref="member">GetPrivKey</ref>(),<sp/>mapKeyMetadata[pubkey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()]);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_c_wallet_1a3e90096a903d49cd751f05fcdb7692ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a3e90096a903d49cd751f05fcdb7692ce" kindref="member">CWallet::AddCryptedKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;vchPubKey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>&amp;vchCryptedSecret)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_crypto_key_store_1a9f4d2df95008205b2b9784c5f0e8e12b" kindref="member">CCryptoKeyStore::AddCryptedKey</ref>(vchPubKey,<sp/>vchCryptedSecret))</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fFileBacked)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwalletdbEncryption)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pwalletdbEncryption-&gt;WriteCryptedKey(vchPubKey,<sp/>vchCryptedSecret,<sp/>mapKeyMetadata[vchPubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()]);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a914fb53d1731daf9b486f164dd325210" kindref="member">WriteCryptedKey</ref>(vchPubKey,<sp/>vchCryptedSecret,<sp/>mapKeyMetadata[vchPubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_c_wallet_1a21e6580474514f838dfe1446890085a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a21e6580474514f838dfe1446890085a4" kindref="member">CWallet::LoadKeyMetadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;pubkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key_metadata" kindref="compound">CKeyMetadata</ref><sp/>&amp;<ref refid="repair_8cc_1a6b8f1f5fc8f36aa1678fff8fa5aecd0b" kindref="member">meta</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>mapKeyMetadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meta.<ref refid="class_c_key_metadata_1accfd31222aefcbdcba1fb0214e546e6d" kindref="member">nCreateTime</ref><sp/>&amp;&amp;<sp/>(!nTimeFirstKey<sp/>||<sp/>meta.<ref refid="class_c_key_metadata_1accfd31222aefcbdcba1fb0214e546e6d" kindref="member">nCreateTime</ref><sp/>&lt;<sp/>nTimeFirstKey))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeFirstKey<sp/>=<sp/>meta.<ref refid="class_c_key_metadata_1accfd31222aefcbdcba1fb0214e546e6d" kindref="member">nCreateTime</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>mapKeyMetadata[pubkey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()]<sp/>=<sp/><ref refid="repair_8cc_1a6b8f1f5fc8f36aa1678fff8fa5aecd0b" kindref="member">meta</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_c_wallet_1a01fbd78238d4ef833d059f12a7e8ac9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a01fbd78238d4ef833d059f12a7e8ac9f" kindref="member">CWallet::LoadCryptedKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;vchPubKey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>&amp;vchCryptedSecret)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_crypto_key_store_1a9f4d2df95008205b2b9784c5f0e8e12b" kindref="member">CCryptoKeyStore::AddCryptedKey</ref>(vchPubKey,<sp/>vchCryptedSecret);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_c_wallet_1ad7edacad1c926bc4b7fe0dc1be95ce31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ad7edacad1c926bc4b7fe0dc1be95ce31" kindref="member">CWallet::AddCScript</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>redeemScript)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_basic_key_store_1a56249ce3540398999cd397eeb662e836" kindref="member">CCryptoKeyStore::AddCScript</ref>(redeemScript))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fFileBacked)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a8c69e48e2305775898658e0a4f4616c9" kindref="member">WriteCScript</ref>(<ref refid="hash_8h_1a4490f70ddae16e9e48460a0416a48a6b" kindref="member">Hash160</ref>(redeemScript),<sp/>redeemScript);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>optional<sp/>setting<sp/>to<sp/>unlock<sp/>wallet<sp/>for<sp/>staking<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>serves<sp/>to<sp/>disable<sp/>the<sp/>trivial<sp/>sendmoney<sp/>when<sp/>OS<sp/>account<sp/>compromised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provides<sp/>no<sp/>real<sp/>security</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="walletdb_8cpp_1a0bc784e958b92854437f2238d4249da0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="wallet_8cpp_1a0bc784e958b92854437f2238d4249da0" kindref="member">fWalletUnlockStakingOnly</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_c_wallet_1adbf0abef9da8102f000d4afd5cec5bbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1adbf0abef9da8102f000d4afd5cec5bbc" kindref="member">CWallet::LoadCScript</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>redeemScript)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>sanity<sp/>check<sp/>was<sp/>added<sp/>in<sp/>pull<sp/>#3843<sp/>to<sp/>avoid<sp/>adding<sp/>redeemScripts</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>never<sp/>can<sp/>be<sp/>redeemed.<sp/>However,<sp/>old<sp/>wallets<sp/>may<sp/>still<sp/>contain</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>these.<sp/>Do<sp/>not<sp/>add<sp/>them<sp/>to<sp/>the<sp/>wallet<sp/>and<sp/>warn.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(redeemScript.size()<sp/>&gt;<sp/>MAX_SCRIPT_ELEMENT_SIZE)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strAddr<sp/>=<sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref>(redeemScript.<ref refid="class_c_script_1a59fd961e1b74202a0951a077b576c0ba" kindref="member">GetID</ref>()).ToString();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>Warning:<sp/>This<sp/>wallet<sp/>contains<sp/>a<sp/>redeemScript<sp/>of<sp/>size<sp/>%u<sp/>which<sp/>exceeds<sp/>maximum<sp/>size<sp/>%i<sp/>thus<sp/>can<sp/>never<sp/>be<sp/>redeemed.<sp/>Do<sp/>not<sp/>use<sp/>address<sp/>%s.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__func__,<sp/>redeemScript.size(),<sp/>MAX_SCRIPT_ELEMENT_SIZE,<sp/>strAddr);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1a56249ce3540398999cd397eeb662e836" kindref="member">CCryptoKeyStore::AddCScript</ref>(redeemScript);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_c_wallet_1a022f12d5f56bbe831136388e2ac19969" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a022f12d5f56bbe831136388e2ac19969" kindref="member">CWallet::AddWatchOnly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>&amp;dest)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_basic_key_store_1a2417d0ae4e654c88cf47a1ba5f71b5a3" kindref="member">CCryptoKeyStore::AddWatchOnly</ref>(dest))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>nTimeFirstKey<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>birthday<sp/>information<sp/>for<sp/>watch-only<sp/>keys.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>NotifyWatchonlyChanged(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fFileBacked)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a05e5a277f66010d12071a5d72cb4dfb0" kindref="member">WriteWatchOnly</ref>(dest);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_c_wallet_1a5be12b9afcf63079b8c009038843b5a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a5be12b9afcf63079b8c009038843b5a2" kindref="member">CWallet::RemoveWatchOnly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>&amp;dest)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_basic_key_store_1a20c0eccf943d6d16e24c6e2fb63fb527" kindref="member">CCryptoKeyStore::RemoveWatchOnly</ref>(dest))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HaveWatchOnly())</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NotifyWatchonlyChanged(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFileBacked)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).EraseWatchOnly(dest))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_c_wallet_1ad6580f1844fc639389e1c6a1e2787ee6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ad6580f1844fc639389e1c6a1e2787ee6" kindref="member">CWallet::LoadWatchOnly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>&amp;dest)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_basic_key_store_1a2417d0ae4e654c88cf47a1ba5f71b5a3" kindref="member">CCryptoKeyStore::AddWatchOnly</ref>(dest);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_c_wallet_1a0404b6bc1cb804aadc69b9902b52282a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a0404b6bc1cb804aadc69b9902b52282a" kindref="member">CWallet::Lock</ref>()</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLocked())</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Locking<sp/>wallet.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>wdb(strWalletFile);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>load<sp/>encrypted<sp/>spend_secret<sp/>of<sp/>stealth<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref><sp/>sxAddrTemp;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;CStealthAddress&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>stealthAddresses.begin();<sp/>it<sp/>!=<sp/>stealthAddresses.end();<sp/>++it)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;scan_secret.size()<sp/>&lt;<sp/>32)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>stealth<sp/>address<sp/>is<sp/>not<sp/>owned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>CStealthAddress<sp/>are<sp/>only<sp/>sorted<sp/>on<sp/>spend_pubkey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref><sp/>&amp;sxAddr<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*it);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Recrypting<sp/>stealth<sp/>key<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a7d331c1fb6e9479b31d35a50c4bb0f0c" kindref="member">Encoded</ref>().c_str());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxAddrTemp.<ref refid="class_c_stealth_address_1ae695d1d4c649d3f78b253de7d273b1d9" kindref="member">scan_pubkey</ref><sp/>=<sp/>sxAddr.<ref refid="class_c_stealth_address_1ae695d1d4c649d3f78b253de7d273b1d9" kindref="member">scan_pubkey</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wdb.<ref refid="class_c_wallet_d_b_1aebcc02069f91916c652d4e3e13be0f0b" kindref="member">ReadStealthAddress</ref>(sxAddrTemp))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>to<sp/>read<sp/>stealth<sp/>key<sp/>from<sp/>db<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a7d331c1fb6e9479b31d35a50c4bb0f0c" kindref="member">Encoded</ref>().c_str());</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref><sp/>=<sp/>sxAddrTemp.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LockKeyStore();</highlight></codeline>
<codeline lineno="248"><highlight class="normal">};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="class_c_wallet_1a654ae5a3a7c4c7c7bfd271f108781b40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a654ae5a3a7c4c7c7bfd271f108781b40" kindref="member">CWallet::Unlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref>&amp;<sp/>strWalletPassphrase,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>anonymizeOnly)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref><sp/>strWalletPassphraseFinal;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsLocked())</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>fWalletUnlockAnonymizeOnly<sp/>=<sp/>anonymizeOnly;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>strWalletPassphraseFinal<sp/>=<sp/>strWalletPassphrase;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_crypter" kindref="compound">CCrypter</ref><sp/>crypter;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="crypter_8h_1a64709c9a3acc8f5694515789a183ad7b" kindref="member">CKeyingMaterial</ref><sp/>vMasterKey;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MasterKeyMap::value_type&amp;<sp/>pMasterKey,<sp/>mapMasterKeys)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!crypter.<ref refid="class_c_crypter_1a5368279e4a1549d3c1d15d8aa2179708" kindref="member">SetKeyFromPassphrase</ref>(strWalletPassphraseFinal,<sp/>pMasterKey.second.vchSalt,<sp/>pMasterKey.second.nDeriveIterations,<sp/>pMasterKey.second.nDerivationMethod))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_c_crypter_1a4dbabed4975d4435d22c76deac43df7f" kindref="member">Decrypt</ref>(pMasterKey.second.vchCryptedKey,<sp/>vMasterKey))</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>try<sp/>another<sp/>master<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_crypto_key_store_1a81bd70e18aa75f566526620a74f9cd88" kindref="member">CCryptoKeyStore::Unlock</ref>(vMasterKey))</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fWalletUnlockAnonymizeOnly<sp/>=<sp/>anonymizeOnly;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockStealthAddresses(vMasterKey);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smessage_8cpp_1adf0fa2a06615363dc3ea6360be0939ec" kindref="member">SecureMsgWalletUnlocked</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_c_wallet_1a4abcec3066e7c462f4564c159fc15031" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a4abcec3066e7c462f4564c159fc15031" kindref="member">CWallet::ChangeWalletPassphrase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref>&amp;<sp/>strOldWalletPassphrase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref>&amp;<sp/>strNewWalletPassphrase)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fWasLocked<sp/>=<sp/>IsLocked();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref><sp/>strOldWalletPassphraseFinal;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>strOldWalletPassphraseFinal<sp/>=<sp/>strOldWalletPassphrase;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lock();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_crypter" kindref="compound">CCrypter</ref><sp/>crypter;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="crypter_8h_1a64709c9a3acc8f5694515789a183ad7b" kindref="member">CKeyingMaterial</ref><sp/>vMasterKey;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(MasterKeyMap::value_type&amp;<sp/>pMasterKey,<sp/>mapMasterKeys)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!crypter.<ref refid="class_c_crypter_1a5368279e4a1549d3c1d15d8aa2179708" kindref="member">SetKeyFromPassphrase</ref>(strOldWalletPassphrase,<sp/>pMasterKey.second.vchSalt,<sp/>pMasterKey.second.nDeriveIterations,<sp/>pMasterKey.second.nDerivationMethod))</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_c_crypter_1a4dbabed4975d4435d22c76deac43df7f" kindref="member">Decrypt</ref>(pMasterKey.second.vchCryptedKey,<sp/>vMasterKey))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_crypto_key_store_1a81bd70e18aa75f566526620a74f9cd88" kindref="member">CCryptoKeyStore::Unlock</ref>(vMasterKey)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>UnlockStealthAddresses(vMasterKey))</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStartTime<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypter.<ref refid="class_c_crypter_1a5368279e4a1549d3c1d15d8aa2179708" kindref="member">SetKeyFromPassphrase</ref>(strNewWalletPassphrase,<sp/>pMasterKey.second.vchSalt,<sp/>pMasterKey.second.nDeriveIterations,<sp/>pMasterKey.second.nDerivationMethod);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMasterKey.second.nDeriveIterations<sp/>=<sp/>pMasterKey.second.nDeriveIterations<sp/>*<sp/>(100<sp/>/<sp/>((double)(<ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStartTime)));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStartTime<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypter.<ref refid="class_c_crypter_1a5368279e4a1549d3c1d15d8aa2179708" kindref="member">SetKeyFromPassphrase</ref>(strNewWalletPassphrase,<sp/>pMasterKey.second.vchSalt,<sp/>pMasterKey.second.nDeriveIterations,<sp/>pMasterKey.second.nDerivationMethod);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMasterKey.second.nDeriveIterations<sp/>=<sp/>(pMasterKey.second.nDeriveIterations<sp/>+<sp/>pMasterKey.second.nDeriveIterations<sp/>*<sp/>100<sp/>/<sp/>((double)(<ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStartTime)))<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMasterKey.second.nDeriveIterations<sp/>&lt;<sp/>25000)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMasterKey.second.nDeriveIterations<sp/>=<sp/>25000;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Wallet<sp/>passphrase<sp/>changed<sp/>to<sp/>an<sp/>nDeriveIterations<sp/>of<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>pMasterKey.second.nDeriveIterations);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_c_crypter_1a5368279e4a1549d3c1d15d8aa2179708" kindref="member">SetKeyFromPassphrase</ref>(strNewWalletPassphrase,<sp/>pMasterKey.second.vchSalt,<sp/>pMasterKey.second.nDeriveIterations,<sp/>pMasterKey.second.nDerivationMethod))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_c_crypter_1a124fcd3021569a660ce2daa3391c8ea4" kindref="member">Encrypt</ref>(vMasterKey,<sp/>pMasterKey.second.vchCryptedKey))</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a507690da431ef61244941ad39c308aeb" kindref="member">WriteMasterKey</ref>(pMasterKey.first,<sp/>pMasterKey.second);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fWasLocked)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lock();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="class_c_wallet_1a1697a92171b4359f49b38aed643cf92b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a1697a92171b4359f49b38aed643cf92b" kindref="member">CWallet::SetBestChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_locator" kindref="compound">CBlockLocator</ref>&amp;<sp/>loc)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>walletdb(strWalletFile);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>walletdb.<ref refid="class_c_wallet_d_b_1a5660d366fee16ab81f3e7d3a97892486" kindref="member">WriteBestBlock</ref>(loc);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="class_c_wallet_1afa48a3ee3096681650c8b9589579e9cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1afa48a3ee3096681650c8b9589579e9cb" kindref="member">CWallet::SetMinVersion</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wallet_8h_1a39a6b71da3eb95cddc0836d3b27ac7c9" kindref="member">WalletFeature</ref><sp/>nVersion,<sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>*<sp/>pwalletdbIn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fExplicit)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>nWalletVersion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nWalletVersion<sp/>&gt;=<sp/>nVersion)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>doing<sp/>an<sp/>explicit<sp/>upgrade,<sp/>if<sp/>we<sp/>pass<sp/>the<sp/>max<sp/>version<sp/>permitted,<sp/>upgrade<sp/>all<sp/>the<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fExplicit<sp/>&amp;&amp;<sp/>nVersion<sp/>&gt;<sp/>nWalletMaxVersion)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nVersion<sp/>=<sp/><ref refid="wallet_8h_1a39a6b71da3eb95cddc0836d3b27ac7c9a867e17547f858859f558244dc96ac2f3" kindref="member">FEATURE_LATEST</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>nWalletVersion<sp/>=<sp/>nVersion;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nVersion<sp/>&gt;<sp/>nWalletMaxVersion)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nWalletMaxVersion<sp/>=<sp/>nVersion;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFileBacked)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>*<sp/>pwalletdb<sp/>=<sp/>pwalletdbIn<sp/>?<sp/>pwalletdbIn<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nWalletVersion<sp/>&gt;<sp/>40000)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletdb-&gt;<ref refid="class_c_wallet_d_b_1ab008b6c6e09a60a988cac6e1a9e11886" kindref="member">WriteMinVersion</ref>(nWalletVersion);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pwalletdbIn)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pwalletdb;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="class_c_wallet_1a1bb7c19e7dd483f231f8077fb7fb942b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a1bb7c19e7dd483f231f8077fb7fb942b" kindref="member">CWallet::SetMaxVersion</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>nWalletVersion,<sp/>nWalletMaxVersion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>downgrade<sp/>below<sp/>current<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nWalletVersion<sp/>&gt;<sp/>nVersion)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>nWalletMaxVersion<sp/>=<sp/>nVersion;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="class_c_wallet_1ad336f9b3359fd9ded9007bc6803340fa" refkind="member"><highlight class="normal">set&lt;uint256&gt;<sp/><ref refid="class_c_wallet_1ad336f9b3359fd9ded9007bc6803340fa" kindref="member">CWallet::GetConflicts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>txid)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="381"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;uint256&gt;<sp/>result;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.find(txid);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>mapWallet.end())</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtx<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;TxSpends::const_iterator,<sp/>TxSpends::const_iterator&gt;<sp/>range;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>wtx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapTxSpends.count(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>)<sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>conflict<sp/>if<sp/>zero<sp/>or<sp/>one<sp/>spends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range<sp/>=<sp/>mapTxSpends.equal_range(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TxSpends::const_iterator<sp/>it<sp/>=<sp/>range.first;<sp/>it<sp/>!=<sp/>range.second;<sp/>++it)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.insert(it-&gt;second);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CWallet::SyncMetaData(pair&lt;TxSpends::iterator,<sp/>TxSpends::iterator&gt;<sp/>range)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>all<sp/>the<sp/>wallet<sp/>transactions<sp/>in<sp/>range<sp/>to<sp/>have<sp/>the<sp/>same<sp/>metadata<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>oldest<sp/>(smallest<sp/>nOrderPos).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So:<sp/>find<sp/>smallest<sp/>nOrderPos:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMinOrderPos<sp/>=<sp/>std::numeric_limits&lt;int&gt;::max();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>copyFrom<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TxSpends::iterator<sp/>it<sp/>=<sp/>range.first;<sp/>it<sp/>!=<sp/>range.second;<sp/>++it)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>mapWallet[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].nOrderPos;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>nMinOrderPos)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMinOrderPos<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyFrom<sp/>=<sp/>&amp;mapWallet[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>copy<sp/>data<sp/>from<sp/>copyFrom<sp/>to<sp/>rest:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TxSpends::iterator<sp/>it<sp/>=<sp/>range.first;<sp/>it<sp/>!=<sp/>range.second;<sp/>++it)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hash<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>copyTo<sp/>=<sp/>&amp;mapWallet[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copyFrom<sp/>==<sp/>copyTo)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyTo-&gt;<ref refid="class_c_wallet_tx_1a17229eca0c81245312115a9c333203d8" kindref="member">mapValue</ref><sp/>=<sp/>copyFrom-&gt;<ref refid="class_c_wallet_tx_1a17229eca0c81245312115a9c333203d8" kindref="member">mapValue</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyTo-&gt;<ref refid="class_c_wallet_tx_1a923dbbba343b8f4d1c3d89ae73bdcea0" kindref="member">vOrderForm</ref><sp/>=<sp/>copyFrom-&gt;<ref refid="class_c_wallet_tx_1a923dbbba343b8f4d1c3d89ae73bdcea0" kindref="member">vOrderForm</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fTimeReceivedIsTxTime<sp/>not<sp/>copied<sp/>on<sp/>purpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nTimeReceived<sp/>not<sp/>copied<sp/>on<sp/>purpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyTo-&gt;<ref refid="class_c_wallet_tx_1a3c9ba52ce7203b9f16235785a09c383c" kindref="member">nTimeSmart</ref><sp/>=<sp/>copyFrom-&gt;<ref refid="class_c_wallet_tx_1a3c9ba52ce7203b9f16235785a09c383c" kindref="member">nTimeSmart</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyTo-&gt;<ref refid="class_c_wallet_tx_1a1598bf4a18fd05ce5eaaa0c3eb58ff28" kindref="member">fFromMe</ref><sp/>=<sp/>copyFrom-&gt;<ref refid="class_c_wallet_tx_1a1598bf4a18fd05ce5eaaa0c3eb58ff28" kindref="member">fFromMe</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyTo-&gt;<ref refid="class_c_wallet_tx_1a099b5ca562f8a8378124b345b9123f25" kindref="member">strFromAccount</ref><sp/>=<sp/>copyFrom-&gt;<ref refid="class_c_wallet_tx_1a099b5ca562f8a8378124b345b9123f25" kindref="member">strFromAccount</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nOrderPos<sp/>not<sp/>copied<sp/>on<sp/>purpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cached<sp/>members<sp/>not<sp/>copied<sp/>on<sp/>purpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Outpoint<sp/>is<sp/>spent<sp/>if<sp/>any<sp/>non-conflicted<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spends<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="class_c_wallet_1a7d77e683a0f10403fe2b67385895d497" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a7d77e683a0f10403fe2b67385895d497" kindref="member">CWallet::IsSpent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hash,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="442"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>outpoint(hash,<sp/>n);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;TxSpends::const_iterator,<sp/>TxSpends::const_iterator&gt;<sp/>range;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>range<sp/>=<sp/>mapTxSpends.equal_range(outpoint);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TxSpends::const_iterator<sp/>it<sp/>=<sp/>range.first;<sp/>it<sp/>!=<sp/>range.second;<sp/>++it)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>wtxid<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>mit<sp/>=<sp/>mapWallet.find(wtxid);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mit<sp/>!=<sp/>mapWallet.end()<sp/>&amp;&amp;<sp/>mit-&gt;second.GetDepthInMainChain()<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Spent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CWallet::AddToSpends(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>&amp;<sp/>outpoint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>wtxid)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>mapTxSpends.insert(make_pair(outpoint,<sp/>wtxid));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;TxSpends::iterator,<sp/>TxSpends::iterator&gt;<sp/>range;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>range<sp/>=<sp/>mapTxSpends.equal_range(outpoint);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>SyncMetaData(range);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CWallet::AddToSpends(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>wtxid)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mapWallet.count(wtxid));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>thisTx<sp/>=<sp/>mapWallet[wtxid];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thisTx.IsCoinBase())<sp/></highlight><highlight class="comment">//<sp/>Coinbases<sp/>don&apos;t<sp/>spend<sp/>anything!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>thisTx.vin)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddToSpends(txin.prevout,<sp/>wtxid);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="class_c_wallet_1ab34fe5bf771619dcbe22a65f013e5469" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet" kindref="compound">CWallet</ref>::EncryptWallet(const<sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref>&amp;<sp/>strWalletPassphrase)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsCrypted())</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="crypter_8h_1a64709c9a3acc8f5694515789a183ad7b" kindref="member">CKeyingMaterial</ref><sp/>vMasterKey;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a786af12a87491f8dc24351d93b9833b6" kindref="member">RandAddSeedPerfmon</ref>();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>vMasterKey.resize(<ref refid="crypter_8h_1abf8d5f4eb0b3c828d9fbedb9b2e10b2a" kindref="member">WALLET_CRYPTO_KEY_SIZE</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1acf52c2aa8213c7b15e26594a2264ed8a" kindref="member">GetRandBytes</ref>(&amp;vMasterKey[0],<sp/><ref refid="crypter_8h_1abf8d5f4eb0b3c828d9fbedb9b2e10b2a" kindref="member">WALLET_CRYPTO_KEY_SIZE</ref>))</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_master_key" kindref="compound">CMasterKey</ref><sp/>kMasterKey(<ref refid="init_8cpp_1a3e3a4daba510b75f09387695c6c8a11f" kindref="member">nDerivationMethodIndex</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a786af12a87491f8dc24351d93b9833b6" kindref="member">RandAddSeedPerfmon</ref>();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>kMasterKey.<ref refid="class_c_master_key_1a00009f4b4feaa2ebe630a0d7cc854d3a" kindref="member">vchSalt</ref>.resize(<ref refid="crypter_8h_1aa42a9547c4738b8f92fd88016c5184a0" kindref="member">WALLET_CRYPTO_SALT_SIZE</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8cpp_1acf52c2aa8213c7b15e26594a2264ed8a" kindref="member">GetRandBytes</ref>(&amp;kMasterKey.<ref refid="class_c_master_key_1a00009f4b4feaa2ebe630a0d7cc854d3a" kindref="member">vchSalt</ref>[0],<sp/><ref refid="crypter_8h_1aa42a9547c4738b8f92fd88016c5184a0" kindref="member">WALLET_CRYPTO_SALT_SIZE</ref>))</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_crypter" kindref="compound">CCrypter</ref><sp/>crypter;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStartTime<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>crypter.<ref refid="class_c_crypter_1a5368279e4a1549d3c1d15d8aa2179708" kindref="member">SetKeyFromPassphrase</ref>(strWalletPassphrase,<sp/>kMasterKey.<ref refid="class_c_master_key_1a00009f4b4feaa2ebe630a0d7cc854d3a" kindref="member">vchSalt</ref>,<sp/>25000,<sp/>kMasterKey.<ref refid="class_c_master_key_1a7a4b1e432a30011297f496441769957f" kindref="member">nDerivationMethod</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>kMasterKey.<ref refid="class_c_master_key_1aec53e0be82d1053cf5a70a67fd4cc25d" kindref="member">nDeriveIterations</ref><sp/>=<sp/>2500000<sp/>/<sp/>((double)(<ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStartTime));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>nStartTime<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>crypter.<ref refid="class_c_crypter_1a5368279e4a1549d3c1d15d8aa2179708" kindref="member">SetKeyFromPassphrase</ref>(strWalletPassphrase,<sp/>kMasterKey.<ref refid="class_c_master_key_1a00009f4b4feaa2ebe630a0d7cc854d3a" kindref="member">vchSalt</ref>,<sp/>kMasterKey.<ref refid="class_c_master_key_1aec53e0be82d1053cf5a70a67fd4cc25d" kindref="member">nDeriveIterations</ref>,<sp/>kMasterKey.<ref refid="class_c_master_key_1a7a4b1e432a30011297f496441769957f" kindref="member">nDerivationMethod</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>kMasterKey.<ref refid="class_c_master_key_1aec53e0be82d1053cf5a70a67fd4cc25d" kindref="member">nDeriveIterations</ref><sp/>=<sp/>(kMasterKey.<ref refid="class_c_master_key_1aec53e0be82d1053cf5a70a67fd4cc25d" kindref="member">nDeriveIterations</ref><sp/>+<sp/>kMasterKey.<ref refid="class_c_master_key_1aec53e0be82d1053cf5a70a67fd4cc25d" kindref="member">nDeriveIterations</ref><sp/>*<sp/>100<sp/>/<sp/>((double)(<ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStartTime)))<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kMasterKey.<ref refid="class_c_master_key_1aec53e0be82d1053cf5a70a67fd4cc25d" kindref="member">nDeriveIterations</ref><sp/>&lt;<sp/>25000)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kMasterKey.<ref refid="class_c_master_key_1aec53e0be82d1053cf5a70a67fd4cc25d" kindref="member">nDeriveIterations</ref><sp/>=<sp/>25000;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Encrypting<sp/>Wallet<sp/>with<sp/>an<sp/>nDeriveIterations<sp/>of<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>kMasterKey.<ref refid="class_c_master_key_1aec53e0be82d1053cf5a70a67fd4cc25d" kindref="member">nDeriveIterations</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_c_crypter_1a5368279e4a1549d3c1d15d8aa2179708" kindref="member">SetKeyFromPassphrase</ref>(strWalletPassphrase,<sp/>kMasterKey.<ref refid="class_c_master_key_1a00009f4b4feaa2ebe630a0d7cc854d3a" kindref="member">vchSalt</ref>,<sp/>kMasterKey.<ref refid="class_c_master_key_1aec53e0be82d1053cf5a70a67fd4cc25d" kindref="member">nDeriveIterations</ref>,<sp/>kMasterKey.<ref refid="class_c_master_key_1a7a4b1e432a30011297f496441769957f" kindref="member">nDerivationMethod</ref>))</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_c_crypter_1a124fcd3021569a660ce2daa3391c8ea4" kindref="member">Encrypt</ref>(vMasterKey,<sp/>kMasterKey.<ref refid="class_c_master_key_1ab52e0eaabb0eb3af78fc4879c192e163" kindref="member">vchCryptedKey</ref>))</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapMasterKeys[++nMasterKeyMaxID]<sp/>=<sp/>kMasterKey;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFileBacked)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!pwalletdbEncryption);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletdbEncryption<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pwalletdbEncryption-&gt;TxnBegin())<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pwalletdbEncryption;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletdbEncryption<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletdbEncryption-&gt;WriteMasterKey(nMasterKeyMaxID,<sp/>kMasterKey);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EncryptKeys(vMasterKey))</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFileBacked)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletdbEncryption-&gt;TxnAbort();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pwalletdbEncryption;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>now<sp/>probably<sp/>have<sp/>half<sp/>of<sp/>our<sp/>keys<sp/>encrypted<sp/>in<sp/>memory,<sp/>and<sp/>half<sp/>not...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>die<sp/>and<sp/>let<sp/>the<sp/>user<sp/>reload<sp/>their<sp/>unencrypted<sp/>wallet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;CStealthAddress&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>stealthAddresses.begin();<sp/>it<sp/>!=<sp/>stealthAddresses.end();<sp/>++it)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;scan_secret.size()<sp/>&lt;<sp/>32)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>stealth<sp/>address<sp/>is<sp/>not<sp/>owned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>CStealthAddress<sp/>is<sp/>only<sp/>sorted<sp/>on<sp/>spend_pubkey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref><sp/>&amp;sxAddr<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*it);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Encrypting<sp/>stealth<sp/>key<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a7d331c1fb6e9479b31d35a50c4bb0f0c" kindref="member">Encoded</ref>().c_str());</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>vchCryptedSecret;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="key_8h_1aa678d1d0bc7d2a1cac70cd046906d799" kindref="member">CSecret</ref><sp/>vchSecret;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchSecret.resize(32);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchSecret[0],<sp/>&amp;sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref>[0],<sp/>32);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>iv<sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(sxAddr.<ref refid="class_c_stealth_address_1ac66ac2e04abb7ee90555c702dfa3049c" kindref="member">spend_pubkey</ref>.begin(),<sp/>sxAddr.<ref refid="class_c_stealth_address_1ac66ac2e04abb7ee90555c702dfa3049c" kindref="member">spend_pubkey</ref>.end());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="crypter_8cpp_1a4fa4e3134d2b6e4913b9ce6369820697" kindref="member">EncryptSecret</ref>(vMasterKey,<sp/>vchSecret,<sp/>iv,<sp/>vchCryptedSecret))</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>encrypting<sp/>stealth<sp/>key<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a7d331c1fb6e9479b31d35a50c4bb0f0c" kindref="member">Encoded</ref>().c_str());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref><sp/>=<sp/>vchCryptedSecret;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletdbEncryption-&gt;WriteStealthAddress(sxAddr);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFileBacked)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pwalletdbEncryption-&gt;TxnCommit())<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pwalletdbEncryption;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>now<sp/>have<sp/>keys<sp/>encrypted<sp/>in<sp/>memory,<sp/>but<sp/>not<sp/>on<sp/>disk...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>die<sp/>to<sp/>avoid<sp/>confusion<sp/>and<sp/>let<sp/>the<sp/>user<sp/>reload<sp/>their<sp/>unencrypted<sp/>wallet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pwalletdbEncryption;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletdbEncryption<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lock();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unlock(strWalletPassphrase);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewKeyPool();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lock();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>completely<sp/>rewrite<sp/>the<sp/>wallet<sp/>file;<sp/>if<sp/>we<sp/>don&apos;t,<sp/>bdb<sp/>might<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bits<sp/>of<sp/>the<sp/>unencrypted<sp/>private<sp/>key<sp/>in<sp/>slack<sp/>space<sp/>in<sp/>the<sp/>database<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_d_b_1acfb8a373edb9c4cfab780fb7578b277e" kindref="member">CDB::Rewrite</ref>(strWalletFile);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>NotifyStatusChanged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="class_c_wallet_1a7a76d68661e6879651ac0b11f2893e58" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="class_c_wallet_1a7a76d68661e6879651ac0b11f2893e58" kindref="member">CWallet::IncOrderPosNext</ref>(<ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>*pwalletdb)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>nOrderPosNext</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nRet<sp/>=<sp/>nOrderPosNext++;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwalletdb)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwalletdb-&gt;<ref refid="class_c_wallet_d_b_1a6a1f671e6376b38a1f73c8a023abdd38" kindref="member">WriteOrderPosNext</ref>(nOrderPosNext);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a6a1f671e6376b38a1f73c8a023abdd38" kindref="member">WriteOrderPosNext</ref>(nOrderPosNext);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nRet;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610" refid="class_c_wallet_1a740572131004d77fbdb4617ec1aafb4a" refkind="member"><highlight class="normal"><ref refid="class_c_wallet_1ac35fb148c0967ad24db292435b54ad85" kindref="member">CWallet::TxItems</ref><sp/><ref refid="class_c_wallet_1a740572131004d77fbdb4617ec1aafb4a" kindref="member">CWallet::OrderedTxItems</ref>(std::list&lt;CAccountingEntry&gt;&amp;<sp/>acentries,<sp/>std::string<sp/>strAccount)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>mapWallet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>walletdb(strWalletFile);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First:<sp/>get<sp/>all<sp/>CWalletTx<sp/>and<sp/>CAccountingEntry<sp/>into<sp/>a<sp/>sorted-by-order<sp/>multimap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_1ac35fb148c0967ad24db292435b54ad85" kindref="member">TxItems</ref><sp/>txOrdered;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>maintaining<sp/>indices<sp/>in<sp/>the<sp/>database<sp/>of<sp/>(account,time)<sp/>--&gt;<sp/>txid<sp/>and<sp/>(account,<sp/>time)<sp/>--&gt;<sp/>acentry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>make<sp/>this<sp/>much<sp/>faster<sp/>for<sp/>applications<sp/>that<sp/>do<sp/>this<sp/>a<sp/>lot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>wtx<sp/>=<sp/>&amp;((*it).second);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txOrdered.insert(make_pair(wtx-&gt;<ref refid="class_c_wallet_tx_1af51e160ff1d9d78986e9f239c7ac7a35" kindref="member">nOrderPos</ref>,<sp/><ref refid="class_c_wallet_1ad1557a7d200f70bc97319376a24c98a7" kindref="member">TxPair</ref>(wtx,<sp/>(<ref refid="class_c_accounting_entry" kindref="compound">CAccountingEntry</ref>*)0)));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>acentries.clear();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>walletdb.<ref refid="class_c_wallet_d_b_1a51555c82291fe16081880110541e207f" kindref="member">ListAccountCreditDebit</ref>(strAccount,<sp/>acentries);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_accounting_entry" kindref="compound">CAccountingEntry</ref>&amp;<sp/>entry,<sp/>acentries)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txOrdered.insert(make_pair(entry.<ref refid="class_c_accounting_entry_1a9c5f78f13a657c1f1fc860a70ef072d5" kindref="member">nOrderPos</ref>,<sp/><ref refid="class_c_wallet_1ad1557a7d200f70bc97319376a24c98a7" kindref="member">TxPair</ref>((<ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*)0,<sp/>&amp;entry)));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>txOrdered;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="class_c_wallet_1a26fd9a9f48230daf346500d2afb6115e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a26fd9a9f48230daf346500d2afb6115e" kindref="member">CWallet::MarkDirty</ref>()</highlight></codeline>
<codeline lineno="636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>)&amp;<sp/>item,<sp/>mapWallet)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.second.<ref refid="class_c_wallet_tx_1ac8a376bcb955e437489504dc596b43cf" kindref="member">MarkDirty</ref>();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="class_c_wallet_1adf34c789fd6eab1eeed22ef16837f558" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1adf34c789fd6eab1eeed22ef16837f558" kindref="member">CWallet::AddToWallet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtxIn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFromLoadWallet)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash<sp/>=<sp/>wtxIn.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFromLoadWallet)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapWallet[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>]<sp/>=<sp/>wtxIn;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapWallet[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].<ref refid="class_c_wallet_tx_1ab0ee7347584bff886dc24b9f63ff023c" kindref="member">BindWallet</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddToSpends(hash);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserts<sp/>only<sp/>if<sp/>not<sp/>already<sp/>there,<sp/>returns<sp/>tx<sp/>inserted<sp/>or<sp/>tx<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;map&lt;uint256,<sp/>CWalletTx&gt;::iterator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>ret<sp/>=<sp/>mapWallet.insert(make_pair(hash,<sp/>wtxIn));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtx<sp/>=<sp/>(*ret.first).second;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1ab0ee7347584bff886dc24b9f63ff023c" kindref="member">BindWallet</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fInsertedNew<sp/>=<sp/>ret.second;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fInsertedNew)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1af4f4b58875061467026da7b259532b69" kindref="member">nTimeReceived</ref><sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1af51e160ff1d9d78986e9f239c7ac7a35" kindref="member">nOrderPos</ref><sp/>=<sp/>IncOrderPosNext();</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1a3c9ba52ce7203b9f16235785a09c383c" kindref="member">nTimeSmart</ref><sp/>=<sp/>wtx.<ref refid="class_c_wallet_tx_1af4f4b58875061467026da7b259532b69" kindref="member">nTimeReceived</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wtxIn.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.count(wtxIn.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref>))</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>latestNow<sp/>=<sp/>wtx.<ref refid="class_c_wallet_tx_1af4f4b58875061467026da7b259532b69" kindref="member">nTimeReceived</ref>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>latestEntry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tolerate<sp/>times<sp/>up<sp/>to<sp/>the<sp/>last<sp/>timestamp<sp/>in<sp/>the<sp/>wallet<sp/>not<sp/>more<sp/>than<sp/>5<sp/>minutes<sp/>into<sp/>the<sp/>future</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>latestTolerated<sp/>=<sp/>latestNow<sp/>+<sp/>300;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::list&lt;CAccountingEntry&gt;<sp/>acentries;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_1ac35fb148c0967ad24db292435b54ad85" kindref="member">TxItems</ref><sp/>txOrdered<sp/>=<sp/>OrderedTxItems(acentries);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TxItems::reverse_iterator<sp/>it<sp/>=<sp/>txOrdered.rbegin();<sp/>it<sp/>!=<sp/>txOrdered.rend();<sp/>++it)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pwtx<sp/>=<sp/>(*it).second.first;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwtx<sp/>==<sp/>&amp;wtx)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_accounting_entry" kindref="compound">CAccountingEntry</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pacentry<sp/>=<sp/>(*it).second.second;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nSmartTime;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwtx)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSmartTime<sp/>=<sp/>pwtx-&gt;<ref refid="class_c_wallet_tx_1a3c9ba52ce7203b9f16235785a09c383c" kindref="member">nTimeSmart</ref>;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nSmartTime)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSmartTime<sp/>=<sp/>pwtx-&gt;<ref refid="class_c_wallet_tx_1af4f4b58875061467026da7b259532b69" kindref="member">nTimeReceived</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSmartTime<sp/>=<sp/>pacentry-&gt;<ref refid="class_c_accounting_entry_1a416a4eb8d47e4c4cfdfc366d9d777ae6" kindref="member">nTime</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSmartTime<sp/>&lt;=<sp/>latestTolerated)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latestEntry<sp/>=<sp/>nSmartTime;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSmartTime<sp/>&gt;<sp/>latestNow)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latestNow<sp/>=<sp/>nSmartTime;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>blocktime<sp/>=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>[wtxIn.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref>]-&gt;nTime;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1a3c9ba52ce7203b9f16235785a09c383c" kindref="member">nTimeSmart</ref><sp/>=<sp/>std::max(latestEntry,<sp/>std::min(blocktime,<sp/>latestNow));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AddToWallet()<sp/>:<sp/>found<sp/>%s<sp/>in<sp/>block<sp/>%s<sp/>not<sp/>in<sp/>index\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxIn.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxIn.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUpdated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fInsertedNew)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wtxIn.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>wtxIn.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref><sp/>!=<sp/>wtx.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref>)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref><sp/>=<sp/>wtxIn.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUpdated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wtxIn.<ref refid="class_c_merkle_tx_1a829655e70702fdf97b6e534dd3227b0b" kindref="member">nIndex</ref><sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>(wtxIn.<ref refid="class_c_merkle_tx_1a9ae6a408be914f486ebbb4161879ee69" kindref="member">vMerkleBranch</ref><sp/>!=<sp/>wtx.<ref refid="class_c_merkle_tx_1a9ae6a408be914f486ebbb4161879ee69" kindref="member">vMerkleBranch</ref><sp/>||<sp/>wtxIn.<ref refid="class_c_merkle_tx_1a829655e70702fdf97b6e534dd3227b0b" kindref="member">nIndex</ref><sp/>!=<sp/>wtx.<ref refid="class_c_merkle_tx_1a829655e70702fdf97b6e534dd3227b0b" kindref="member">nIndex</ref>))</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_merkle_tx_1a9ae6a408be914f486ebbb4161879ee69" kindref="member">vMerkleBranch</ref><sp/>=<sp/>wtxIn.<ref refid="class_c_merkle_tx_1a9ae6a408be914f486ebbb4161879ee69" kindref="member">vMerkleBranch</ref>;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_merkle_tx_1a829655e70702fdf97b6e534dd3227b0b" kindref="member">nIndex</ref><sp/>=<sp/>wtxIn.<ref refid="class_c_merkle_tx_1a829655e70702fdf97b6e534dd3227b0b" kindref="member">nIndex</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUpdated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wtxIn.<ref refid="class_c_wallet_tx_1a1598bf4a18fd05ce5eaaa0c3eb58ff28" kindref="member">fFromMe</ref><sp/>&amp;&amp;<sp/>wtxIn.<ref refid="class_c_wallet_tx_1a1598bf4a18fd05ce5eaaa0c3eb58ff28" kindref="member">fFromMe</ref><sp/>!=<sp/>wtx.<ref refid="class_c_wallet_tx_1a1598bf4a18fd05ce5eaaa0c3eb58ff28" kindref="member">fFromMe</ref>)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1a1598bf4a18fd05ce5eaaa0c3eb58ff28" kindref="member">fFromMe</ref><sp/>=<sp/>wtxIn.<ref refid="class_c_wallet_tx_1a1598bf4a18fd05ce5eaaa0c3eb58ff28" kindref="member">fFromMe</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUpdated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUpdated<sp/>|=<sp/>wtx.<ref refid="class_c_wallet_tx_1a49a5151af721410bfb3cf84d241e3228" kindref="member">UpdateSpent</ref>(wtxIn.<ref refid="class_c_wallet_tx_1a32c09e049302518c81f80c4f1f85583b" kindref="member">vfSpent</ref>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;AddToWallet<sp/>%s<sp/><sp/>%s%s\n&quot;</highlight><highlight class="normal">,<sp/>wtxIn.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>(fInsertedNew<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;new&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>(fUpdated<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;update&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fInsertedNew<sp/>||<sp/>fUpdated)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wtx.<ref refid="class_c_wallet_tx_1ada0e71d717dd360faf047de54eef4942" kindref="member">WriteToDisk</ref>())</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Break<sp/>debit/credit<sp/>balance<sp/>caches:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1ac8a376bcb955e437489504dc596b43cf" kindref="member">MarkDirty</ref>();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>UI<sp/>of<sp/>new<sp/>or<sp/>updated<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NotifyTransactionChanged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>hash,<sp/>fInsertedNew<sp/>?<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969ae975c67c7f3a5386de0bbde38221b32f" kindref="member">CT_NEW</ref><sp/>:<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969a5ab4035117df6ed11f4f5cd2f2d732e5" kindref="member">CT_UPDATED</ref>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>notify<sp/>an<sp/>external<sp/>script<sp/>when<sp/>a<sp/>wallet<sp/>transaction<sp/>comes<sp/>in<sp/>or<sp/>is<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strCmd<sp/>=<sp/><ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-walletnotify&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!strCmd.empty())</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::replace_all(strCmd,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wtxIn.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>());</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::thread<sp/>t(<ref refid="util_8cpp_1adf94c00a5ac719c92a2f1bb2f8b2167f" kindref="member">runCommand</ref>,<sp/>strCmd);<sp/></highlight><highlight class="comment">//<sp/>thread<sp/>runs<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>transaction<sp/>to<sp/>the<sp/>wallet,<sp/>or<sp/>update<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pblock<sp/>is<sp/>optional,<sp/>but<sp/>should<sp/>be<sp/>provided<sp/>if<sp/>the<sp/>transaction<sp/>is<sp/>known<sp/>to<sp/>be<sp/>in<sp/>a<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>fUpdate<sp/>is<sp/>true,<sp/>existing<sp/>transactions<sp/>will<sp/>be<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="class_c_wallet_1a487f7cba517d37d24e5fa422711574d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a487f7cba517d37d24e5fa422711574d9" kindref="member">CWallet::AddToWalletIfInvolvingMe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUpdate)</highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fExisted<sp/>=<sp/>mapWallet.count(tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>())<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fExisted<sp/>&amp;&amp;<sp/>!fUpdate)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wallet_8h_1ab1e69952accb0e7c635e4d7f2b19802b" kindref="member">mapValue_t</ref><sp/>mapNarr;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindStealthTransactions(tx,<sp/>mapNarr);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fExisted<sp/>||<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(tx)<sp/>||<sp/>IsFromMe(tx))</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>wtx(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,tx);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mapNarr.empty())</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1a17229eca0c81245312115a9c333203d8" kindref="member">mapValue</ref>.insert(mapNarr.begin(),<sp/>mapNarr.end());</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>merkle<sp/>branch<sp/>if<sp/>transaction<sp/>was<sp/>found<sp/>in<sp/>a<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pblock)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_merkle_tx_1a7286c83e09ddaebc6bba39ee38a5a012" kindref="member">SetMerkleBranch</ref>(pblock);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddToWallet(wtx);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="class_c_wallet_1ac18895d63adb58d85558f0efd6addb3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ac18895d63adb58d85558f0efd6addb3f" kindref="member">CWallet::SyncTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fConnect)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AddToWalletIfInvolvingMe(tx,<sp/>pblock,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>one<sp/>of<sp/>ours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>transaction<sp/>changes<sp/>&apos;conflicted&apos;<sp/>state,<sp/>that<sp/>changes<sp/>the<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>available<sp/>of<sp/>the<sp/>outputs<sp/>it<sp/>spends.<sp/>So<sp/>force<sp/>those<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recomputed,<sp/>also:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapWallet.count(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>))</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapWallet[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>].MarkDirty();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fConnect)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wallets<sp/>need<sp/>to<sp/>refund<sp/>inputs<sp/>when<sp/>disconnecting<sp/>coinstake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx.<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>())</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsFromMe(tx))</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisableTransaction(tx);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818" refid="class_c_wallet_1a43dc1cf73c622cca29e530130e648470" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a43dc1cf73c622cca29e530130e648470" kindref="member">CWallet::EraseFromWallet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hash)</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fFileBacked)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapWallet.erase(hash))</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a498e00c693cacc4b558e6f5295ea32f2" kindref="member">EraseTx</ref>(hash);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="class_c_wallet_1ab7cc8fd8859fecc6ed768dacb5642c5e" refkind="member"><highlight class="normal"><ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20d" kindref="member">isminetype</ref><sp/><ref refid="class_c_wallet_1ab7cc8fd8859fecc6ed768dacb5642c5e" kindref="member">CWallet::IsMine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>&amp;txin)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="831"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>mi<sp/>=<sp/>mapWallet.find(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>mapWallet.end())</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/><ref refid="cache_8cc_1aabbd2f01bb8ec4a7a0128bce5f8cdb1b" kindref="member">prev</ref><sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref><sp/>&lt;<sp/>prev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size())</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(prev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>]);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20dabd6dd5ba8963fe559dda755950f29baf" kindref="member">ISMINE_NO</ref>;</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="class_c_wallet_1a41642840b6efb255876460758eaaa2af" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1a41642840b6efb255876460758eaaa2af" kindref="member">CWallet::GetDebit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>&amp;txin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="script_8h_1aaa5e1639d76aef50f70532acc3302c4b" kindref="member">isminefilter</ref>&amp;<sp/>filter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="846"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>mi<sp/>=<sp/>mapWallet.find(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>mapWallet.end())</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/><ref refid="cache_8cc_1aabbd2f01bb8ec4a7a0128bce5f8cdb1b" kindref="member">prev</ref><sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref><sp/>&lt;<sp/>prev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size())</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(prev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>])<sp/>&amp;<sp/>filter)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].nValue;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="class_c_wallet_1aa5918d83031eb5df530bf8c129581ef3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1aa5918d83031eb5df530bf8c129581ef3" kindref="member">CWallet::IsDenominated</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>&amp;txin)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="862"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>mi<sp/>=<sp/>mapWallet.find(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>mapWallet.end())</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/><ref refid="cache_8cc_1aabbd2f01bb8ec4a7a0128bce5f8cdb1b" kindref="member">prev</ref><sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref><sp/>&lt;<sp/>prev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsDenominatedAmount(prev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].nValue);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="class_c_wallet_1aecc541d4905526a112beb1b66d8d2aca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1aa5918d83031eb5df530bf8c129581ef3" kindref="member">CWallet::IsDenominated</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="876"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>false<sp/>if<sp/>ANY<sp/>inputs<sp/>are<sp/>non-denom</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsDenominated(txin))<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891" refid="class_c_wallet_1accb0e427b9b9d2e1ddc200feb2a35e68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1accb0e427b9b9d2e1ddc200feb2a35e68" kindref="member">CWallet::IsDenominatedAmount</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nInputAmount)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="892"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>d,<sp/><ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nInputAmount<sp/>==<sp/>d)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900" refid="class_c_wallet_1a0864e64299906f8ba499510d12125a23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a0864e64299906f8ba499510d12125a23" kindref="member">CWallet::IsChange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>txout)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="901"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>fix<sp/>handling<sp/>of<sp/>&apos;change&apos;<sp/>outputs.<sp/>The<sp/>assumption<sp/>is<sp/>that<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>payment<sp/>to<sp/>a<sp/>TX_PUBKEYHASH<sp/>that<sp/>is<sp/>mine<sp/>but<sp/>isn&apos;t<sp/>in<sp/>the<sp/>address<sp/>book</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>change.<sp/>That<sp/>assumption<sp/>is<sp/>likely<sp/>to<sp/>break<sp/>when<sp/>we<sp/>implement<sp/>multisignature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wallets<sp/>that<sp/>return<sp/>change<sp/>back<sp/>into<sp/>a<sp/>multi-signature-protected<sp/>address;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>better<sp/>way<sp/>of<sp/>identifying<sp/>which<sp/>outputs<sp/>are<sp/>&apos;the<sp/>send&apos;<sp/>and<sp/>which<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;the<sp/>change&apos;<sp/>will<sp/>need<sp/>to<sp/>be<sp/>implemented<sp/>(maybe<sp/>extend<sp/>CWalletTx<sp/>to<sp/>remember</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>output,<sp/>if<sp/>any,<sp/>was<sp/>change).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>))</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>,<sp/>address))</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mapAddressBook.count(address))</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922" refid="class_c_wallet_tx_1a25fdd940fcdd2ea9d05547c5c789fc0d" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="class_c_wallet_tx_1a25fdd940fcdd2ea9d05547c5c789fc0d" kindref="member">CWalletTx::GetTxTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="923"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n<sp/>=<sp/>nTimeSmart;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n<sp/>?<sp/>n<sp/>:<sp/>nTimeReceived;</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="class_c_wallet_tx_1a78d48485ea1680bdc3e2ffc03a500164" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx_1a78d48485ea1680bdc3e2ffc03a500164" kindref="member">CWalletTx::GetRequestCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="929"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>-1<sp/>if<sp/>it<sp/>wasn&apos;t<sp/>being<sp/>tracked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRequests<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pwallet-&gt;cs_wallet);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsCoinBase()<sp/>||<sp/>IsCoinStake())</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generated<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hashBlock<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>int&gt;::const_iterator<sp/>mi<sp/>=<sp/>pwallet-&gt;mapRequestCount.find(hashBlock);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>pwallet-&gt;mapRequestCount.end())</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRequests<sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Did<sp/>anyone<sp/>request<sp/>this<sp/>transaction?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>int&gt;::const_iterator<sp/>mi<sp/>=<sp/>pwallet-&gt;mapRequestCount.find(GetHash());</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>pwallet-&gt;mapRequestCount.end())</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRequests<sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>about<sp/>the<sp/>block<sp/>it&apos;s<sp/>in?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nRequests<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>hashBlock<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>int&gt;::const_iterator<sp/>mi<sp/>=<sp/>pwallet-&gt;mapRequestCount.find(hashBlock);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>pwallet-&gt;mapRequestCount.end())</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRequests<sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRequests<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>in<sp/>someone<sp/>else&apos;s<sp/>block<sp/>it<sp/>must<sp/>have<sp/>got<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nRequests;</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967" refid="class_c_wallet_tx_1af46d43266d668fe7152a086f5446d529" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx_1af46d43266d668fe7152a086f5446d529" kindref="member">CWalletTx::GetAmounts</ref>(list&lt;pair&lt;CTxDestination,<sp/>CAmount&gt;<sp/>&gt;&amp;<sp/>listReceived,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;pair&lt;CTxDestination,<sp/>CAmount&gt;<sp/>&gt;&amp;<sp/>listSent,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nFee,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>strSentAccount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="script_8h_1aaa5e1639d76aef50f70532acc3302c4b" kindref="member">isminefilter</ref>&amp;<sp/>filter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="969"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>nFee<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>listReceived.clear();</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>listSent.clear();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>strSentAccount<sp/>=<sp/>strFromAccount;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>fee:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nDebit<sp/>=<sp/>GetDebit(filter);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDebit<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>debit&gt;0<sp/>means<sp/>we<sp/>signed/sent<sp/>this<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueOut<sp/>=<sp/>GetValueOut();</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFee<sp/>=<sp/>nDebit<sp/>-<sp/>nValueOut;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sent/received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vout.size();<sp/>++i)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>txout<sp/>=<sp/>vout[i];</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20d" kindref="member">isminetype</ref><sp/>fIsMine<sp/>=<sp/>pwallet-&gt;IsMine(txout);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>need<sp/>to<sp/>handle<sp/>txouts<sp/>if<sp/>AT<sp/>LEAST<sp/>one<sp/>of<sp/>these<sp/>is<sp/>true:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>1)<sp/>they<sp/>debit<sp/>from<sp/>us<sp/>(sent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>2)<sp/>the<sp/>output<sp/>is<sp/>to<sp/>us<sp/>(received)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDebit<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>report<sp/>&apos;change&apos;<sp/>txouts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwallet-&gt;IsChange(txout))</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fIsMine<sp/>&amp;<sp/>filter))</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>either<sp/>case,<sp/>we<sp/>need<sp/>to<sp/>get<sp/>the<sp/>destination<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>,<sp/>address))</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CWalletTx::GetAmounts:<sp/>Unknown<sp/>transaction<sp/>type<sp/>found,<sp/>txid<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;GetHash().ToString());</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="class_c_no_destination" kindref="compound">CNoDestination</ref>();</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>debited<sp/>by<sp/>the<sp/>transaction,<sp/>add<sp/>the<sp/>output<sp/>as<sp/>a<sp/>&quot;sent&quot;<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDebit<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listSent.push_back(make_pair(address,<sp/>txout.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>));</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>receiving<sp/>the<sp/>output,<sp/>add<sp/>it<sp/>as<sp/>a<sp/>&quot;received&quot;<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fIsMine<sp/>&amp;<sp/>filter)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listReceived.push_back(make_pair(address,<sp/>txout.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>));</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020" refid="class_c_wallet_tx_1ae8179fbe6db1204884f0bb7bac4e8fc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx_1ae8179fbe6db1204884f0bb7bac4e8fc1" kindref="member">CWalletTx::GetAccountAmounts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>strAccount,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nReceived,</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nSent,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nFee,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="script_8h_1aaa5e1639d76aef50f70532acc3302c4b" kindref="member">isminefilter</ref>&amp;<sp/>filter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1022"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>nReceived<sp/>=<sp/>nSent<sp/>=<sp/>nFee<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>allFee;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strSentAccount;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;pair&lt;CTxDestination,<sp/>CAmount&gt;<sp/>&gt;<sp/>listReceived;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;pair&lt;CTxDestination,<sp/>CAmount&gt;<sp/>&gt;<sp/>listSent;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>GetAmounts(listReceived,<sp/>listSent,<sp/>allFee,<sp/>strSentAccount,<sp/>filter);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strAccount<sp/>==<sp/>strSentAccount)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>)&amp;<sp/>s,<sp/>listSent)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSent<sp/>+=<sp/>s.second;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFee<sp/>=<sp/>allFee;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pwallet-&gt;cs_wallet);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>)&amp;<sp/>r,<sp/>listReceived)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwallet-&gt;mapAddressBook.count(r.first))</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;CTxDestination,<sp/>string&gt;::const_iterator<sp/>mi<sp/>=<sp/>pwallet-&gt;mapAddressBook.find(r.first);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>pwallet-&gt;mapAddressBook.end()<sp/>&amp;&amp;<sp/>(*mi).second<sp/>==<sp/>strAccount)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nReceived<sp/>+=<sp/>r.second;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strAccount.empty())</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nReceived<sp/>+=<sp/>r.second;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056" refid="class_c_wallet_tx_1a3594f3eabada273c1eb9ab25da38d204" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx_1a3594f3eabada273c1eb9ab25da38d204" kindref="member">CWalletTx::AddSupportingTransactions</ref>(<ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>vtxPrev.clear();</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COPY_DEPTH<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SetMerkleBranch()<sp/>&lt;<sp/>COPY_DEPTH)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;uint256&gt;<sp/>vWorkQueue;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>vin)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vWorkQueue.push_back(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>critsect<sp/>is<sp/>OK<sp/>because<sp/>txdb<sp/>is<sp/>already<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(pwallet-&gt;cs_wallet);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>const<sp/>CMerkleTx*&gt;<sp/>mapWalletPrev;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;uint256&gt;<sp/>setAlreadyDone;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vWorkQueue.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash<sp/>=<sp/>vWorkQueue[i];</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setAlreadyDone.count(hash))</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAlreadyDone.insert(hash);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_merkle_tx" kindref="compound">CMerkleTx</ref><sp/>tx;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>mi<sp/>=<sp/>pwallet-&gt;mapWallet.find(hash);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>pwallet-&gt;mapWallet.end())</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx<sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx" kindref="compound">CMerkleTx</ref>&amp;<sp/>txWalletPrev,<sp/>(*mi).second.vtxPrev)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapWalletPrev[txWalletPrev.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>()]<sp/>=<sp/>&amp;txWalletPrev;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapWalletPrev.count(hash))</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx<sp/>=<sp/>*mapWalletPrev[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>];</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txdb.<ref refid="class_c_tx_d_b_1a32d0e546eee99724776352dd4bf0ae79" kindref="member">ReadDiskTx</ref>(hash,<sp/>tx))</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>AddSupportingTransactions()<sp/>:<sp/>unsupported<sp/>transaction\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>tx.<ref refid="class_c_merkle_tx_1a7286c83e09ddaebc6bba39ee38a5a012" kindref="member">SetMerkleBranch</ref>();</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtxPrev.push_back(tx);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDepth<sp/>&lt;<sp/>COPY_DEPTH)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vWorkQueue.push_back(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>reverse(vtxPrev.begin(),<sp/>vtxPrev.end());</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116" refid="class_c_wallet_tx_1ada0e71d717dd360faf047de54eef4942" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx_1ada0e71d717dd360faf047de54eef4942" kindref="member">CWalletTx::WriteToDisk</ref>()</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(pwallet-&gt;strWalletFile).<ref refid="class_c_wallet_d_b_1a76d2ca02898221ab66df5d5f7491164e" kindref="member">WriteTx</ref>(GetHash(),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scan<sp/>the<sp/>block<sp/>chain<sp/>(starting<sp/>in<sp/>pindexStart)<sp/>for<sp/>transactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>or<sp/>to<sp/>us.<sp/>If<sp/>fUpdate<sp/>is<sp/>true,<sp/>found<sp/>transactions<sp/>that<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exist<sp/>in<sp/>the<sp/>wallet<sp/>will<sp/>be<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124" refid="class_c_wallet_1a979a17e80e4897ed1f4ae9a4be7c493c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a979a17e80e4897ed1f4ae9a4be7c493c" kindref="member">CWallet::ScanForWalletTransactions</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexStart,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUpdate)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex<sp/>=<sp/>pindexStart;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pindex)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>read<sp/>and<sp/>scan<sp/>block,<sp/>if<sp/>block<sp/>was<sp/>created<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>wallet<sp/>birthday<sp/>(as<sp/>adjusted<sp/>for<sp/>block<sp/>time<sp/>variability)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTimeFirstKey<sp/>&amp;&amp;<sp/>(pindex-&gt;<ref refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" kindref="member">nTime</ref><sp/>&lt;<sp/>(nTimeFirstKey<sp/>-<sp/>7200)))<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindex<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" kindref="member">pnext</ref>;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.<ref refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" kindref="member">ReadFromDisk</ref>(pindex,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/>block.<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AddToWalletIfInvolvingMe(tx,<sp/>&amp;block,<sp/>fUpdate))</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret++;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindex<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" kindref="member">pnext</ref>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153" refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" kindref="member">CWallet::ReacceptWalletTransactions</ref>()</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fRepeat<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fRepeat)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRepeat<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;CDiskTxPos&gt;<sp/>vMissingTx;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>)&amp;<sp/>item,<sp/>mapWallet)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>wtxid<sp/>=<sp/>item.first;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtx<sp/>=<sp/>item.second;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(wtx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>()<sp/>==<sp/>wtxid);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>wtx.<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>();</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wtx.<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()<sp/>&amp;&amp;<sp/>nDepth<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>add<sp/>to<sp/>memory<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" kindref="member">cs</ref>);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" kindref="member">AcceptToMemoryPool</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((wtx.<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()<sp/>&amp;&amp;<sp/>wtx.<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(0))<sp/>||<sp/>(wtx.<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>()<sp/>&amp;&amp;<sp/>wtx.<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(1)))</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref><sp/>txindex;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUpdated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txdb.<ref refid="class_c_tx_d_b_1a8a138e5dcc3ef98991abaa16eaa8ddeb" kindref="member">ReadTxIndex</ref>(wtx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),<sp/>txindex))</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>fSpent<sp/>if<sp/>a<sp/>tx<sp/>got<sp/>spent<sp/>somewhere<sp/>else<sp/>by<sp/>a<sp/>copy<sp/>of<sp/>wallet.dat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txindex.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>.size()<sp/>!=<sp/>wtx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size())</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>ReacceptWalletTransactions()<sp/>:<sp/>txindex.vSpent.size()<sp/>%u<sp/>!=<sp/>wtx.vout.size()<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>txindex.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>.size(),<sp/>wtx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size());</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>txindex.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wtx.<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(i))</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!txindex.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>[i].IsNull()<sp/>&amp;&amp;<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(wtx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]))</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1af2fc13459e324ad2b3f7c9914d86e7c8" kindref="member">MarkSpent</ref>(i);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUpdated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vMissingTx.push_back(txindex.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>[i]);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fUpdated)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ReacceptWalletTransactions<sp/>found<sp/>spent<sp/>coin<sp/>%s<sp/>DRKSLK<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(wtx.<ref refid="class_c_wallet_tx_1a6712fa5cd5831f4a8828b807852d32d0" kindref="member">GetCredit</ref>(<ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20da1fe9e47b4c162fd9a1779e59a11dd067" kindref="member">ISMINE_ALL</ref>)),<sp/>wtx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1ac8a376bcb955e437489504dc596b43cf" kindref="member">MarkDirty</ref>();</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1ada0e71d717dd360faf047de54eef4942" kindref="member">WriteToDisk</ref>();</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-accept<sp/>any<sp/>txes<sp/>of<sp/>ours<sp/>that<sp/>aren&apos;t<sp/>already<sp/>in<sp/>a<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(wtx.<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()<sp/>||<sp/>wtx.<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>()))</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1af6d1a5a731bb69e1d94de84eb6fd15a5" kindref="member">AcceptWalletTransaction</ref>(txdb);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vMissingTx.empty())</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>optimize<sp/>this<sp/>to<sp/>scan<sp/>just<sp/>part<sp/>of<sp/>the<sp/>block<sp/>chain?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ScanForWalletTransactions(<ref refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" kindref="member">pindexGenesisBlock</ref>))</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRepeat<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>missing<sp/>transactions:<sp/>re-do<sp/>re-accept.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225" refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" kindref="member">CWalletTx::RelayWalletTransaction</ref>(<ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>,<sp/>std::string<sp/>strCommand)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(IsCoinBase()<sp/>||<sp/>IsCoinStake()))</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetDepthInMainChain()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash<sp/>=<sp/>GetHash();</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;txlreq&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Relaying<sp/>txlreq<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1acc1c1f8ae02ec2b4c621b64291033927" kindref="member">mapTxLockReq</ref>.insert(make_pair(hash,<sp/>((<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>)*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="instantx_8cpp_1a3774b6dae3dfa0a6c85e3604e742150c" kindref="member">CreateNewLock</ref>(((<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>)*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1acd641309ae7f63d62c89ea2d912eec08" kindref="member">RelayTransactionLockReq</ref>((<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>)*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Relaying<sp/>wtx<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1abe329205a15b55df86608f5f1964bdb1" kindref="member">RelayTransaction</ref>((<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>)*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>hash);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244" refid="class_c_wallet_tx_1a1eac2a5eea87ed88b73777bea5c733b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" kindref="member">CWalletTx::RelayWalletTransaction</ref>(std::string<sp/>strCommand)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/>RelayWalletTransaction(txdb,<sp/>strCommand);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250" refid="class_c_wallet_tx_1ab1820e97b0ed6b80763d61e232d0afaa" refkind="member"><highlight class="normal">set&lt;uint256&gt;<sp/><ref refid="class_c_wallet_tx_1ab1820e97b0ed6b80763d61e232d0afaa" kindref="member">CWalletTx::GetConflicts</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1251"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;uint256&gt;<sp/>result;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwallet<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>myHash<sp/>=<sp/>GetHash();</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>pwallet-&gt;GetConflicts(myHash);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.erase(myHash);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262" refid="class_c_wallet_1ace33dcf23623d2036a38696bc3a94553" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ace33dcf23623d2036a38696bc3a94553" kindref="member">CWallet::ResendWalletTransactions</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fForce)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fForce)</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>this<sp/>infrequently<sp/>and<sp/>randomly<sp/>to<sp/>avoid<sp/>giving<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>these<sp/>are<sp/>our<sp/>transactions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nNextTime;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>&lt;<sp/>nNextTime)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFirst<sp/>=<sp/>(nNextTime<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNextTime<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>+<sp/><ref refid="util_8cpp_1a27d9149d522b1fa87d84e5e9ca902aef" kindref="member">GetRand</ref>(30<sp/>*<sp/>60);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFirst)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>do<sp/>it<sp/>if<sp/>there&apos;s<sp/>been<sp/>a<sp/>new<sp/>block<sp/>since<sp/>last<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nLastTime;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1ab319f7e88eb0d2d3b9f9f98bea0f9896" kindref="member">nTimeBestReceived</ref><sp/>&lt;<sp/>nLastTime)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLastTime<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rebroadcast<sp/>any<sp/>of<sp/>our<sp/>txes<sp/>that<sp/>aren&apos;t<sp/>in<sp/>a<sp/>block<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ResendWalletTransactions()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>them<sp/>in<sp/>chronological<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multimap&lt;unsigned<sp/>int,<sp/>CWalletTx*&gt;<sp/>mapSorted;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>)&amp;<sp/>item,<sp/>mapWallet)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtx<sp/>=<sp/>item.second;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>rebroadcast<sp/>until<sp/>it&apos;s<sp/>had<sp/>plenty<sp/>of<sp/>time<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>have<sp/>gotten<sp/>in<sp/>already<sp/>by<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fForce<sp/>||<sp/><ref refid="main_8cpp_1ab319f7e88eb0d2d3b9f9f98bea0f9896" kindref="member">nTimeBestReceived</ref><sp/>-<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)wtx.<ref refid="class_c_wallet_tx_1af4f4b58875061467026da7b259532b69" kindref="member">nTimeReceived</ref><sp/>&gt;<sp/>5<sp/>*<sp/>60)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapSorted.insert(make_pair(wtx.<ref refid="class_c_wallet_tx_1af4f4b58875061467026da7b259532b69" kindref="member">nTimeReceived</ref>,<sp/>&amp;wtx));</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*)&amp;<sp/>item,<sp/>mapSorted)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtx<sp/>=<sp/>*item.second;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx.<ref refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" kindref="member">RelayWalletTransaction</ref>(txdb);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318" refid="class_c_wallet_1afb8dee3ffdf2bc5e7499b10bb65efdaf" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1afb8dee3ffdf2bc5e7499b10bb65efdaf" kindref="member">CWallet::GetBalance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1319"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>())</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1afc5a3b08c3e48e176e389cf172ae79b7" kindref="member">GetAvailableCredit</ref>();</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334" refid="class_c_wallet_1a842f8ca0ec3e6879c7f95f1420c7932f" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1a842f8ca0ec3e6879c7f95f1420c7932f" kindref="member">CWallet::GetAnonymizableBalance</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeAlreadyAnonymized)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1335"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>())</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash<sp/>=<sp/>(*it).first;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(hash,<sp/>i);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsSpent(hash,<sp/>i)<sp/>||<sp/>!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a8bd25cf06de6a443d0925ec8ba66c949" kindref="member">GetBlocksToMaturity</ref>()<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>count<sp/>immature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue<sp/>==<sp/>10000*COIN)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>count<sp/>SN-like<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds<sp/>=<sp/>GetInputSandstormRounds(vin);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rounds<sp/>&gt;=-2<sp/>&amp;&amp;<sp/>(rounds<sp/>&lt;<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref><sp/>||<sp/>(includeAlreadyAnonymized<sp/>&amp;&amp;<sp/>rounds<sp/>&gt;=<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368" refid="class_c_wallet_1af5b8987016e90d66fe1d3a475dfe03b4" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1af5b8987016e90d66fe1d3a475dfe03b4" kindref="member">CWallet::GetAnonymizedBalance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1369"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>())</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>();</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//isminetype<sp/>mine<sp/>=<sp/>IsMine(pcoin-&gt;vout[i]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mine<sp/>=<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//COutput<sp/>out<sp/>=<sp/>COutput(pcoin,<sp/>i,<sp/>nDepth,<sp/>(mine<sp/>&amp;<sp/>ISMINE_SPENDABLE)<sp/>!=<sp/>ISMINE_NO);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_output" kindref="compound">COutput</ref><sp/>out<sp/>=<sp/><ref refid="class_c_output" kindref="compound">COutput</ref>(pcoin,<sp/>i,<sp/>nDepth,<sp/>mine);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(IsSpent(out.tx-&gt;GetHash(),<sp/>i)<sp/>||<sp/>!IsMine(pcoin-&gt;vout[i])<sp/>||<sp/>!IsDenominated(vin))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcoin-&gt;<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(i)<sp/>||<sp/>!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i])<sp/>||<sp/>!IsDenominated(vin))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds<sp/>=<sp/>GetInputSandstormRounds(vin);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rounds<sp/>&gt;=<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>){</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404" refid="class_c_wallet_1abdffee587c00bc1ebea53ea26f3efa61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/><ref refid="class_c_wallet_1abdffee587c00bc1ebea53ea26f3efa61" kindref="member">CWallet::GetWalletTx</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hash)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1405"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.find(hash);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>mapWallet.end())</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(it-&gt;second);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recursively<sp/>determine<sp/>the<sp/>rounds<sp/>of<sp/>a<sp/>given<sp/>input<sp/>(How<sp/>deep<sp/>is<sp/>the<sp/>Sandstorm<sp/>chain<sp/>for<sp/>a<sp/>given<sp/>input)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CWallet::GetRealInputSandstormRounds(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1415"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;uint256,<sp/>CMutableTransaction&gt;<sp/>mDenomWtxes;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rounds<sp/>&gt;=<sp/>100)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>99;<sp/></highlight><highlight class="comment">//<sp/>100<sp/>rounds<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash<sp/>=<sp/>in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nout<sp/>=<sp/>in.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>wtx<sp/>=<sp/>GetWalletTx(hash);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wtx<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CMutableTransaction&gt;::const_iterator<sp/>mdwi<sp/>=<sp/>mDenomWtxes.find(hash);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>known<sp/>yet,<sp/>let&apos;s<sp/>add<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mdwi<sp/>==<sp/>mDenomWtxes.end())</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GetInputSandstormRounds<sp/>INSERTING<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>]<sp/>=<sp/><ref refid="struct_c_mutable_transaction" kindref="compound">CMutableTransaction</ref>(*wtx);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>and<sp/>it&apos;s<sp/>not<sp/>an<sp/>initial<sp/>value,<sp/>just<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mDenomWtxes[hash].vout[nout].nRounds<sp/>!=<sp/>-10)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounds<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nout<sp/>&gt;=<sp/>wtx-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size())</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>actually<sp/>hit<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GetInputSandstormRounds<sp/>UPDATED<sp/><sp/><sp/>%s<sp/>%3d<sp/>%3d\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>nout,<sp/>-4);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-4;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>-&gt;<ref refid="class_c_wallet_1a97dd6ac6a62ff915a42dacbd0fe9337d" kindref="member">IsCollateralAmount</ref>(wtx-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[nout].nValue))</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds<sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GetInputSandstormRounds<sp/>UPDATED<sp/><sp/><sp/>%s<sp/>%3d<sp/>%3d\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>nout,<sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>the<sp/>final<sp/>output<sp/>is<sp/>non-denominate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="comment">/*rounds<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>*/</highlight><highlight class="normal">!IsDenominatedAmount(wtx-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[nout].nValue))<sp/></highlight><highlight class="comment">//NOT<sp/>DENOM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds<sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GetInputSandstormRounds<sp/>UPDATED<sp/><sp/><sp/>%s<sp/>%3d<sp/>%3d\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>nout,<sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAllDenoms<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>out,<sp/>wtx-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>)</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fAllDenoms<sp/>=<sp/>fAllDenoms<sp/>&amp;&amp;<sp/>IsDenominatedAmount(out.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>one<sp/>is<sp/>denominated<sp/>but<sp/>there<sp/>is<sp/>another<sp/>non-denominated<sp/>output<sp/>found<sp/>in<sp/>the<sp/>same<sp/>tx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fAllDenoms)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GetInputSandstormRounds<sp/>UPDATED<sp/><sp/><sp/>%s<sp/>%3d<sp/>%3d\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>nout,<sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nShortest<sp/>=<sp/>-10;<sp/></highlight><highlight class="comment">//<sp/>an<sp/>initial<sp/>value,<sp/>should<sp/>be<sp/>no<sp/>way<sp/>to<sp/>get<sp/>this<sp/>by<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDenomFound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>denoms<sp/>here<sp/>so<sp/>let&apos;s<sp/>look<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>in2,<sp/>wtx-&gt;<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(in2))</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>GetRealInputSandstormRounds(in2,<sp/>rounds+1);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>denom<sp/>found,<sp/>find<sp/>the<sp/>shortest<sp/>chain<sp/>or<sp/>initially<sp/>assign<sp/>nShortest<sp/>with<sp/>the<sp/>first<sp/>found<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(n<sp/>&lt;<sp/>nShortest<sp/>||<sp/>nShortest<sp/>==<sp/>-10))</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nShortest<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDenomFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds<sp/>=<sp/>fDenomFound</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(nShortest<sp/>&gt;=<sp/>99<sp/>?<sp/>100<sp/>:<sp/>nShortest<sp/>+<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>good,<sp/>we<sp/>a<sp/>+1<sp/>to<sp/>the<sp/>shortest<sp/>one<sp/>but<sp/>only<sp/>100<sp/>rounds<sp/>max<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>bad,<sp/>we<sp/>are<sp/>the<sp/>fist<sp/>one<sp/>in<sp/>that<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;sandstorm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GetInputSandstormRounds<sp/>UPDATED<sp/><sp/><sp/>%s<sp/>%3d<sp/>%3d\n&quot;</highlight><highlight class="normal">,<sp/>hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>nout,<sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDenomWtxes[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].vout[nout].nRounds;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rounds-1;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>respect<sp/>current<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502" refid="class_c_wallet_1ac0780b1a8f4092d5a01cf1fa615514a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ac0780b1a8f4092d5a01cf1fa615514a4" kindref="member">CWallet::GetInputSandstormRounds</ref>(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>in)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>realSandstormRounds<sp/>=<sp/>GetRealInputSandstormRounds(in,<sp/>0);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>realSandstormRounds<sp/>&gt;<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref><sp/>?<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref><sp/>:<sp/>realSandstormRounds;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508" refid="class_c_wallet_1ab2440e827d25edcd5a98d6113601088c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ab2440e827d25edcd5a98d6113601088c" kindref="member">CWallet::GetAverageAnonymizedRounds</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1509"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>())</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>();</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//isminetype<sp/>mine<sp/>=<sp/>IsMine(pcoin-&gt;vout[i]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mine<sp/>=<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//COutput<sp/>out<sp/>=<sp/>COutput(pcoin,<sp/>i,<sp/>nDepth,<sp/>(mine<sp/>&amp;<sp/>ISMINE_SPENDABLE)<sp/>!=<sp/>ISMINE_NO);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_output" kindref="compound">COutput</ref><sp/>out<sp/>=<sp/><ref refid="class_c_output" kindref="compound">COutput</ref>(pcoin,<sp/>i,<sp/>nDepth,<sp/>mine);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(IsSpent(out.tx-&gt;GetHash(),<sp/>i)<sp/>||<sp/>!IsMine(pcoin-&gt;vout[i])<sp/>||<sp/>!IsDenominated(vin))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcoin-&gt;<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(i)<sp/>||<sp/>!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i])<sp/>||<sp/>!IsDenominated(vin))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds<sp/>=<sp/>GetInputSandstormRounds(vin);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fTotal<sp/>+=<sp/>(float)rounds;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fCount<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fCount<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fTotal/fCount;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548" refid="class_c_wallet_1aef7643cab406b179cdddb615cd5f26cf" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1aef7643cab406b179cdddb615cd5f26cf" kindref="member">CWallet::GetNormalizedAnonymizedBalance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1549"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>())</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>();</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//isminetype<sp/>mine<sp/>=<sp/>IsMine(pcoin-&gt;vout[i]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mine<sp/>=<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//COutput<sp/>out<sp/>=<sp/>COutput(pcoin,<sp/>i,<sp/>nDepth,<sp/>(mine<sp/>&amp;<sp/>ISMINE_SPENDABLE)<sp/>!=<sp/>ISMINE_NO);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_output" kindref="compound">COutput</ref><sp/>out<sp/>=<sp/><ref refid="class_c_output" kindref="compound">COutput</ref>(pcoin,<sp/>i,<sp/>nDepth,<sp/>mine);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(IsSpent(out.tx-&gt;GetHash(),<sp/>i)<sp/>||<sp/>!IsMine(pcoin-&gt;vout[i])<sp/>||<sp/>!IsDenominated(vin))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcoin-&gt;<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(i)<sp/>||<sp/>!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i])<sp/>||<sp/>!IsDenominated(vin))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds<sp/>=<sp/>GetInputSandstormRounds(vin);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue<sp/>*<sp/>rounds<sp/>/<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584" refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" kindref="member">CWallet::GetDenominatedBalance</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyDenom,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyUnconfirmed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeAlreadyAnonymized)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1585"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>conflicted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDepth<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unconfirmed<sp/>=<sp/>(!<ref refid="main_8cpp_1adc332cd7ac94e639bb4239618341be19" kindref="member">IsFinalTx</ref>(*pcoin)<sp/>||<sp/>(!pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>()<sp/>&amp;&amp;<sp/>nDepth<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(onlyUnconfirmed<sp/>!=<sp/>unconfirmed)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash<sp/>=<sp/>(*it).first;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsSpent(hash,<sp/>i))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(onlyDenom<sp/>!=<sp/>IsDenominatedAmount(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(hash,<sp/>i);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds<sp/>=<sp/>GetInputSandstormRounds(vin);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!includeAlreadyAnonymized<sp/>&amp;&amp;<sp/>rounds<sp/>&gt;=<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623" refid="class_c_wallet_1a7dbe4899ff7d8562376d803b02481228" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1a7dbe4899ff7d8562376d803b02481228" kindref="member">CWallet::GetUnconfirmedBalance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1624"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="main_8cpp_1adc332cd7ac94e639bb4239618341be19" kindref="member">IsFinalTx</ref>(*pcoin)<sp/>||<sp/>(!pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>()<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>()<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1afc5a3b08c3e48e176e389cf172ae79b7" kindref="member">GetAvailableCredit</ref>();</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638" refid="class_c_wallet_1ad91469884e16fc85665f27e29161ee34" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1ad91469884e16fc85665f27e29161ee34" kindref="member">CWallet::GetImmatureBalance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1639"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1a7c192ae2f84392150c1157e04913bd76" kindref="member">GetImmatureCredit</ref>();</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652" refid="class_c_wallet_1a4e1047525a8f418485ce3a84057265d3" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1a4e1047525a8f418485ce3a84057265d3" kindref="member">CWallet::GetWatchOnlyBalance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1653"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>())</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1abfe5cf87f8a2704e526506d9680659c9" kindref="member">GetAvailableWatchOnlyCredit</ref>();</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668" refid="class_c_wallet_1a63579a8e709da9ffe6bb9e1fa7de7ce3" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1a63579a8e709da9ffe6bb9e1fa7de7ce3" kindref="member">CWallet::GetWatchOnlyStake</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1669"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>()<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a8bd25cf06de6a443d0925ec8ba66c949" kindref="member">GetBlocksToMaturity</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/><ref refid="class_c_wallet_1a9a8ab6f6af8354783f96034e9223e0f2" kindref="member">CWallet::GetCredit</ref>(*pcoin,<sp/><ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20dac8c855baf258588de5f5d7508d243e29" kindref="member">ISMINE_WATCH_ONLY</ref>);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681" refid="class_c_wallet_1a639be9d778aeeb8b71aa653f0089cdff" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1a639be9d778aeeb8b71aa653f0089cdff" kindref="member">CWallet::GetUnconfirmedWatchOnlyBalance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1682"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="main_8cpp_1adc332cd7ac94e639bb4239618341be19" kindref="member">IsFinalTx</ref>(*pcoin)<sp/>||<sp/>(!pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>()<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>()<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1abfe5cf87f8a2704e526506d9680659c9" kindref="member">GetAvailableWatchOnlyCredit</ref>();</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696" refid="class_c_wallet_1a9ab28b6ff93197c89af4a69dc1117e44" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1a9ab28b6ff93197c89af4a69dc1117e44" kindref="member">CWallet::GetImmatureWatchOnlyBalance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1697"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1af6f81048bbda5a788376e9d965da3030" kindref="member">GetImmatureWatchOnlyCredit</ref>();</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="comment">//<sp/>populate<sp/>vCoins<sp/>with<sp/>vector<sp/>of<sp/>spendable<sp/>COutputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711" refid="class_c_wallet_1ad165e7a24c95ff9a5816933d7ca23c9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ad165e7a24c95ff9a5816933d7ca23c9b" kindref="member">CWallet::AvailableCoins</ref>(vector&lt;COutput&gt;&amp;<sp/>vCoins,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOnlyConfirmed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref><sp/>*coinControl,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ce" kindref="member">AvailableCoinsType</ref><sp/>coin_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useIX)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1712"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>vCoins.clear();</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="main_8cpp_1adc332cd7ac94e639bb4239618341be19" kindref="member">IsFinalTx</ref>(*pcoin))</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fOnlyConfirmed<sp/>&amp;&amp;<sp/>!pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>())</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a8bd25cf06de6a443d0925ec8ba66c949" kindref="member">GetBlocksToMaturity</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcoin-&gt;<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>()<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a8bd25cf06de6a443d0925ec8ba66c949" kindref="member">GetBlocksToMaturity</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>();</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDepth<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>DARKSILKNOTE:<sp/>coincontrol<sp/>fix<sp/>/<sp/>ignore<sp/>0<sp/>confirm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>use<sp/>IX<sp/>for<sp/>inputs<sp/>that<sp/>have<sp/>less<sp/>then<sp/>10<sp/>blockchain<sp/>confirmations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useIX<sp/>&amp;&amp;<sp/>nDepth<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceaab4c4a7abab40ebdb2706c1708fff22e" kindref="member">ONLY_DENOMINATED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>make<sp/>this<sp/>a<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>IsDenominatedAmount(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea009b510e2a783d13c11717045cb06fe2" kindref="member">ONLY_NONDENOMINATED</ref><sp/>||<sp/>coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceab446331eecce8e7c33f941400bbe566a" kindref="member">ONLY_NONDENOMINATED_NOTSN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsCollateralAmount(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>use<sp/>collateral<sp/>amounts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>!IsDenominatedAmount(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(found<sp/>&amp;&amp;<sp/>coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceab446331eecce8e7c33f941400bbe566a" kindref="member">ONLY_NONDENOMINATED_NOTSN</ref>)<sp/>found<sp/>=<sp/>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue<sp/>!=<sp/>10000*COIN);<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>use<sp/>SN<sp/>funds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!found)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mine<sp/>=<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pcoin-&gt;<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(i))<sp/>&amp;&amp;<sp/>mine<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!IsLockedCoin((*it).first,<sp/>i)<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!coinControl<sp/>||<sp/>!coinControl-&gt;<ref refid="class_c_coin_control_1a8c8b06e183e7a30c646bdec793b30e89" kindref="member">HasSelected</ref>()<sp/>||<sp/>coinControl-&gt;<ref refid="class_c_coin_control_1a8cbb071e0eb4ff34ba0209b3708c8142" kindref="member">IsSelected</ref>((*it).first,<sp/>i)))</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoins.push_back(<ref refid="class_c_output" kindref="compound">COutput</ref>(pcoin,<sp/>i,<sp/>nDepth,<sp/><ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20daaf93acf4732907100f55dc017b6daf58" kindref="member">ISMINE_SPENDABLE</ref>));</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770" refid="class_c_wallet_1a4b9d5939e15cbb0cae162224beb35fc8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a4b9d5939e15cbb0cae162224beb35fc8" kindref="member">CWallet::AvailableCoinsForStaking</ref>(vector&lt;COutput&gt;&amp;<sp/>vCoins,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpendTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1771"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>vCoins.clear();</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>();</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDepth<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDepth<sp/>&lt;<sp/><ref refid="main_8cpp_1a6d3cd49df21f4264ed1489ea304dbcb8" kindref="member">nStakeMinConfirmations</ref>)</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filtering<sp/>by<sp/>tx<sp/>timestamp<sp/>instead<sp/>of<sp/>block<sp/>timestamp<sp/>may<sp/>give<sp/>false<sp/>positives<sp/>but<sp/>never<sp/>false<sp/>negatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref><sp/>+<sp/><ref refid="main_8cpp_1a621f4f63be83358641eb78f48d2f49c2" kindref="member">nStakeMinAge</ref><sp/>&gt;<sp/>nSpendTime)</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_merkle_tx_1a8bd25cf06de6a443d0925ec8ba66c949" kindref="member">GetBlocksToMaturity</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++){</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsDenominatedAmount(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue)){</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;CWallet::AvailableCoinsForStaking<sp/>-<sp/>Found<sp/>denominated<sp/>amounts.\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue<sp/>==<sp/>10000*COIN){</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;CWallet::AvailableCoinsForStaking<sp/>-<sp/>Found<sp/>Stormnode<sp/>collateral.\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsCollateralAmount(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue)){</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LogPrintf(&quot;CWallet::AvailableCoinsForStaking<sp/>-<sp/>Found<sp/>Collateral<sp/>amount.\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(found)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pcoin-&gt;<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(i))<sp/>&amp;&amp;<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i])<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue<sp/>&gt;=<sp/><ref refid="wallet_8cpp_1a6161012435f37404c65527606c4e0c3d" kindref="member">nMinimumInputValue</ref>)</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoins.push_back(<ref refid="class_c_output" kindref="compound">COutput</ref>(pcoin,<sp/>i,<sp/>nDepth,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApproximateBestSubset(vector&lt;pair&lt;<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>,<sp/>pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;vValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nTotalLower,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nTargetValue,</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;char&gt;&amp;<sp/>vfBest,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nBest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations<sp/>=<sp/>1000)</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;char&gt;<sp/>vfIncluded;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>vfBest.assign(vValue.size(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>nBest<sp/>=<sp/>nTotalLower;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1aacea702dc3d4d2bcbbd5eb96d410417c" kindref="member">seed_insecure_rand</ref>();</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRep<sp/>=<sp/>0;<sp/>nRep<sp/>&lt;<sp/>iterations<sp/>&amp;&amp;<sp/>nBest<sp/>!=<sp/>nTargetValue;<sp/>nRep++)</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfIncluded.assign(vValue.size(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fReachedTarget<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPass<sp/>=<sp/>0;<sp/>nPass<sp/>&lt;<sp/>2<sp/>&amp;&amp;<sp/>!fReachedTarget;<sp/>nPass++)</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vValue.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>solver<sp/>here<sp/>uses<sp/>a<sp/>randomized<sp/>algorithm,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>randomness<sp/>serves<sp/>no<sp/>real<sp/>security<sp/>purpose<sp/>but<sp/>is<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//needed<sp/>to<sp/>prevent<sp/>degenerate<sp/>behavior<sp/>and<sp/>it<sp/>is<sp/>important</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//that<sp/>the<sp/>rng<sp/>fast.<sp/>We<sp/>do<sp/>not<sp/>use<sp/>a<sp/>constant<sp/>random<sp/>sequence,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//because<sp/>there<sp/>may<sp/>be<sp/>some<sp/>privacy<sp/>improvement<sp/>by<sp/>making</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>selection<sp/>random.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPass<sp/>==<sp/>0<sp/>?<sp/>insecure_rand()&amp;1<sp/>:<sp/>!vfIncluded[i])</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/>vValue[i].first;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfIncluded[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTotal<sp/>&gt;=<sp/>nTargetValue)</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fReachedTarget<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTotal<sp/>&lt;<sp/>nBest)</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBest<sp/>=<sp/>nTotal;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfBest<sp/>=<sp/>vfIncluded;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>-=<sp/>vValue[i].first;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfIncluded[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ppcoin:<sp/>total<sp/>coins<sp/>staked<sp/>(non-spendable<sp/>until<sp/>maturity)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876" refid="class_c_wallet_1a07a9f015e0272a9de79fb34311086b84" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1a07a9f015e0272a9de79fb34311086b84" kindref="member">CWallet::GetStake</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1877"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>()<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a8bd25cf06de6a443d0925ec8ba66c949" kindref="member">GetBlocksToMaturity</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/><ref refid="class_c_wallet_1a9a8ab6f6af8354783f96034e9223e0f2" kindref="member">CWallet::GetCredit</ref>(*pcoin,<sp/><ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20da1fe9e47b4c162fd9a1779e59a11dd067" kindref="member">ISMINE_ALL</ref>);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889" refid="class_c_wallet_1aa614dc28d5940048c6d5b672ca5d8a22" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1aa614dc28d5940048c6d5b672ca5d8a22" kindref="member">CWallet::GetNewMint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1890"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a8bd25cf06de6a443d0925ec8ba66c949" kindref="member">GetBlocksToMaturity</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal<sp/>+=<sp/><ref refid="class_c_wallet_1a9a8ab6f6af8354783f96034e9223e0f2" kindref="member">CWallet::GetCredit</ref>(*pcoin,<sp/><ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20da1fe9e47b4c162fd9a1779e59a11dd067" kindref="member">ISMINE_ALL</ref>);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902" refid="class_c_wallet_1a119e378349dcbcada447b4343805326d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a119e378349dcbcada447b4343805326d" kindref="member">CWallet::SelectCoinsMinConfByCoinAge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nTargetValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpendTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nConfMine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nConfTheirs,<sp/>vector&lt;COutput&gt;<sp/>vCoins,<sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;&amp;<sp/>setCoinsRet,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nValueRet)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1903"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>setCoinsRet.clear();</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>nValueRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;pair&lt;COutput,<sp/>uint64_t&gt;<sp/>&gt;<sp/>mCoins;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>vCoins)</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out.<ref refid="class_c_output_1ab8fa647313fbc2cda12f8b064031dd11" kindref="member">fSpendable</ref>)</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCoins.push_back(std::make_pair(out,<sp/>CoinWeightCost(out)));</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>values<sp/>less<sp/>than<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;pair&lt;CAmount,CAmount&gt;,<sp/>pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>coinLowestLarger;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>coinLowestLarger.first.second<sp/>=<sp/>std::numeric_limits&lt;CAmount&gt;::max();</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>coinLowestLarger.second.first<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;pair&lt;pair&lt;CAmount,CAmount&gt;,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;<sp/>vValue;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotalLower<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::sort(mCoins,<sp/>boost::bind(&amp;std::pair&lt;COutput,<sp/>uint64_t&gt;::second,<sp/>_1)<sp/>&lt;<sp/>boost::bind(&amp;std::pair&lt;COutput,<sp/>uint64_t&gt;::second,<sp/>_2));</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="class_c_output" kindref="compound">COutput</ref>,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)&amp;<sp/>output,<sp/>mCoins)</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>*pcoin<sp/>=<sp/>output.first.tx;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output.first.nDepth<sp/>&lt;<sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1a5eab277896d1b553676316b862e2014b" kindref="member">IsFromMe</ref>(<ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20da1fe9e47b4c162fd9a1779e59a11dd067" kindref="member">ISMINE_ALL</ref>)<sp/>?<sp/>nConfMine<sp/>:<sp/>nConfTheirs))</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>output.first.i;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Follow<sp/>the<sp/>timestamp<sp/>rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref><sp/>&gt;<sp/>nSpendTime)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>n<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;pair&lt;CAmount,CAmount&gt;,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>coin<sp/>=<sp/>make_pair(make_pair(n,output.second),make_pair(pcoin,<sp/>i));</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>nTargetValue<sp/>+<sp/>CENT)</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValue.push_back(coin);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalLower<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output.second<sp/>&lt;<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)coinLowestLarger.first.second)</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coinLowestLarger<sp/>=<sp/>coin;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTotalLower<sp/>&lt;<sp/>nTargetValue)</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coinLowestLarger.second.first<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(coinLowestLarger.second);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>coinLowestLarger.first.first;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>dynamic<sp/>programming<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotalValue<sp/>=<sp/>vValue[0].first.first;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nGCD<sp/>=<sp/>vValue[0].first.first;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>vValue.size();<sp/>++i)</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nGCD<sp/>=<sp/><ref refid="wallet_8cpp_1a4250c8c7805aa2bd34a227abe70288f7" kindref="member">gcd</ref>(vValue[i].first.first,<sp/>nGCD);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalValue<sp/>+=<sp/>vValue[i].first.first;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>nGCD<sp/>=<sp/><ref refid="wallet_8cpp_1a4250c8c7805aa2bd34a227abe70288f7" kindref="member">gcd</ref>(nTargetValue,<sp/>nGCD);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>denom<sp/>=<sp/>nGCD;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>k<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>approx<sp/>=<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>(vValue.size()<sp/>*<sp/>(nTotalValue<sp/>-<sp/>nTargetValue))<sp/>/<sp/>k;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(approx<sp/>&gt;<sp/>nGCD)</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denom<sp/>=<sp/>approx;<sp/></highlight><highlight class="comment">//<sp/>apply<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;nGCD<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nGCD<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>denom<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>denom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>k<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTotalValue<sp/>==<sp/>nTargetValue)</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vValue.size();<sp/>++i)</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(vValue[i].second);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>=<sp/>nTotalValue;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBeginBundles<sp/>=<sp/>vValue.size();</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nTotalCoinValues<sp/>=<sp/>vValue.size();</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBeginCoinValues<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>costsum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;vector&lt;pair&lt;pair&lt;CAmount,CAmount&gt;,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;::iterator&gt;<sp/>vZeroValueBundles;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denom<sp/>!=<sp/>nGCD)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>coin<sp/>outputs<sp/>that<sp/>with<sp/>zero<sp/>value<sp/>will<sp/>always<sp/>be<sp/>added<sp/>by<sp/>the<sp/>dynamic<sp/>programming<sp/>routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>collect<sp/>them<sp/>into<sp/>bundles<sp/>of<sp/>value<sp/>denom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;pair&lt;pair&lt;CAmount,CAmount&gt;,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;::iterator<sp/>itZeroValue<sp/>=<sp/>std::stable_partition(vValue.begin(),<sp/>vValue.end(),<sp/><ref refid="struct_larger_or_equal_than_threshold" kindref="compound">LargerOrEqualThanThreshold</ref>(denom));</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vZeroValueBundles.push_back(itZeroValue);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;CAmount,<sp/>CAmount&gt;<sp/>pBundle<sp/>=<sp/>make_pair(0,<sp/>0);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBeginBundles<sp/>=<sp/>itZeroValue<sp/>-<sp/>vValue.begin();</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalCoinValues<sp/>=<sp/>nBeginBundles;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(itZeroValue<sp/>!=<sp/>vValue.end())</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBundle.first<sp/>+=<sp/>itZeroValue-&gt;first.first;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBundle.second<sp/>+=<sp/>itZeroValue-&gt;first.second;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itZeroValue++;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBundle.first<sp/>&gt;=<sp/>denom)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vZeroValueBundles.push_back(itZeroValue);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValue[nTotalCoinValues].first<sp/>=<sp/>pBundle;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBundle<sp/>=<sp/>make_pair(0,<sp/>0);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalCoinValues++;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>recalculate<sp/>the<sp/>total<sp/>coin<sp/>value<sp/>due<sp/>to<sp/>truncation<sp/>of<sp/>integer<sp/>division</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nTotalCoinValues;<sp/>++i)</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalValue<sp/>+=<sp/>vValue[i].first.first<sp/>/<sp/>denom;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>dynamic<sp/>programming<sp/>is<sp/>still<sp/>applicable<sp/>with<sp/>the<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTargetValue/denom<sp/>&gt;=<sp/>nTotalValue)</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>lose<sp/>too<sp/>much<sp/>coin<sp/>value<sp/>through<sp/>the<sp/>approximation,<sp/>i.e.<sp/>the<sp/>residual<sp/>of<sp/>the<sp/>previous<sp/>recalculation<sp/>is<sp/>too<sp/>large</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>partitioning<sp/>of<sp/>the<sp/>previously<sp/>sorted<sp/>list<sp/>is<sp/>stable,<sp/>we<sp/>can<sp/>just<sp/>pick<sp/>the<sp/>first<sp/>coin<sp/>outputs<sp/>in<sp/>the<sp/>list<sp/>until<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>target<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>nBeginCoinValues<sp/>&lt;<sp/>nTotalCoinValues<sp/>&amp;&amp;<sp/>(nTargetValue<sp/>-<sp/>nValueRet)/denom<sp/>&gt;=<sp/>nTotalValue;<sp/>++nBeginCoinValues)</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBeginCoinValues<sp/>&gt;=<sp/>nBeginBundles)</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;prepick<sp/>bundle<sp/>item<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(vValue[nBeginCoinValues].first.first)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>normalized<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vValue[nBeginCoinValues].first.first<sp/>/<sp/>denom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cost<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vValue[nBeginCoinValues].first.second<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBundle<sp/>=<sp/>nBeginCoinValues<sp/>-<sp/>nBeginBundles;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;pair&lt;pair&lt;CAmount,CAmount&gt;,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;::iterator<sp/>it<sp/>=<sp/>vZeroValueBundles[nBundle];<sp/>it<sp/>!=<sp/>vZeroValueBundles[nBundle<sp/>+<sp/>1];<sp/>++it)</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(it-&gt;second);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;prepicking<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(vValue[nBeginCoinValues].first.first)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>normalized<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vValue[nBeginCoinValues].first.first<sp/>/<sp/>denom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cost<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vValue[nBeginCoinValues].first.second<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(vValue[nBeginCoinValues].second);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalValue<sp/>-=<sp/>vValue[nBeginCoinValues].first.first<sp/>/<sp/>denom;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>vValue[nBeginCoinValues].first.first;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>costsum<sp/>+=<sp/>vValue[nBeginCoinValues].first.second;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValueRet<sp/>&gt;=<sp/>nTargetValue)</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Done<sp/>without<sp/>dynprog:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;requested<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(nTargetValue)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tnormalized<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nTargetValue/denom<sp/>+<sp/>(nTargetValue<sp/>%<sp/>denom<sp/>!=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tgot<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(nValueRet)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tcost<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>costsum<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalValue<sp/>/=<sp/>denom;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nAppend<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nTargetValue<sp/>-<sp/>nValueRet)<sp/>%<sp/>denom<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>decrease<sp/>the<sp/>capacity<sp/>because<sp/>of<sp/>integer<sp/>truncation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAppend--;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>capacity<sp/>(number<sp/>of<sp/>columns)<sp/>corresponds<sp/>to<sp/>the<sp/>amount<sp/>of<sp/>coin<sp/>value<sp/>we<sp/>are<sp/>allowed<sp/>to<sp/>discard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::numeric::ublas::matrix&lt;uint64_t&gt;<sp/>M((nTotalCoinValues<sp/>-<sp/>nBeginCoinValues)<sp/>+<sp/>1,<sp/>(nTotalValue<sp/>-<sp/>(nTargetValue<sp/>-<sp/>nValueRet)/denom)<sp/>+<sp/>nAppend,<sp/>std::numeric_limits&lt;int64_t&gt;::max());</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::numeric::ublas::matrix&lt;unsigned<sp/>int&gt;<sp/>B((nTotalCoinValues<sp/>-<sp/>nBeginCoinValues)<sp/>+<sp/>1,<sp/>(nTotalValue<sp/>-<sp/>(nTargetValue<sp/>-<sp/>nValueRet)/denom)<sp/>+<sp/>nAppend);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>M.size2();<sp/>++j)</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M(0,j)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>M.size1();<sp/>++i)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nWeight<sp/>=<sp/>vValue[nBeginCoinValues<sp/>+<sp/>i<sp/>-<sp/>1].first.first<sp/>/<sp/>denom;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nValue<sp/>=<sp/>vValue[nBeginCoinValues<sp/>+<sp/>i<sp/>-<sp/>1].first.second;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cerr<sp/>&lt;&lt;<sp/>&quot;Weight<sp/>&quot;<sp/>&lt;&lt;<sp/>nWeight<sp/>&lt;&lt;<sp/>&quot;<sp/>Value<sp/>&quot;<sp/>&lt;&lt;<sp/>nValue<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>M.size2();<sp/>++j)</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B(i,<sp/>j)<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nWeight<sp/>&lt;=<sp/>j)</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nStep<sp/>=<sp/>M(i<sp/>-<sp/>1,<sp/>j<sp/>-<sp/>nWeight)<sp/>+<sp/>nValue;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(M(i<sp/>-<sp/>1,<sp/>j)<sp/>&gt;=<sp/>nStep)</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M(i,<sp/>j)<sp/>=<sp/>M(i<sp/>-<sp/>1,<sp/>j);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M(i,<sp/>j)<sp/>=<sp/>nStep;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B(i,<sp/>j)<sp/>=<sp/>j<sp/>-<sp/>nWeight;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M(i,<sp/>j)<sp/>=<sp/>M(i<sp/>-<sp/>1,<sp/>j);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trace<sp/>back<sp/>optimal<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nPrev<sp/>=<sp/>M.size2()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>M.size1()<sp/>-<sp/>1;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cerr<sp/>&lt;&lt;<sp/>i<sp/>-<sp/>1<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>vValue[i<sp/>-<sp/>1].second.second<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>vValue[i<sp/>-<sp/>1].first.first<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>vValue[i<sp/>-<sp/>1].first.second<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>nTargetValue<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>nPrev<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>(nPrev<sp/>==<sp/>B(i,<sp/>nPrev)<sp/>?<sp/>&quot;XXXXXXXXXXXXXXX&quot;<sp/>:<sp/>&quot;&quot;)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPrev<sp/>==<sp/>B(i,<sp/>nPrev))</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nValue<sp/>=<sp/>nBeginCoinValues<sp/>+<sp/>i<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>a<sp/>bundle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValue<sp/>&gt;=<sp/>nBeginBundles)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pick<sp/>bundle<sp/>item<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(vValue[nValue].first.first)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>normalized<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vValue[nValue].first.first<sp/>/<sp/>denom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cost<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vValue[nValue].first.second<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBundle<sp/>=<sp/>nValue<sp/>-<sp/>nBeginBundles;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;pair&lt;pair&lt;CAmount,CAmount&gt;,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;::iterator<sp/>it<sp/>=<sp/>vZeroValueBundles[nBundle];<sp/>it<sp/>!=<sp/>vZeroValueBundles[nBundle<sp/>+<sp/>1];<sp/>++it)</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(it-&gt;second);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pick<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nValue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>value<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(vValue[nValue].first.first)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>normalized<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vValue[nValue].first.first<sp/>/<sp/>denom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cost<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vValue[nValue].first.second<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(vValue[nValue].second);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>vValue[nValue].first.first;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>costsum<sp/>+=<sp/>vValue[nValue].first.second;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nPrev<sp/>=<sp/>B(i,<sp/>nPrev);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValueRet<sp/>&lt;<sp/>nTargetValue<sp/>&amp;&amp;<sp/>!vZeroValueBundles.empty())</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>get<sp/>here<sp/>it<sp/>means<sp/>that<sp/>there<sp/>are<sp/>either<sp/>not<sp/>sufficient<sp/>funds<sp/>to<sp/>pay<sp/>the<sp/>transaction<sp/>or<sp/>that<sp/>there<sp/>are<sp/>small<sp/>coin<sp/>outputs<sp/>left<sp/>that<sp/>couldn&apos;t<sp/>be<sp/>bundled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>try<sp/>to<sp/>fulfill<sp/>the<sp/>request<sp/>by<sp/>adding<sp/>these<sp/>small<sp/>coin<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;pair&lt;pair&lt;CAmount,CAmount&gt;,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;::iterator<sp/>it<sp/>=<sp/>vZeroValueBundles.back();<sp/>it<sp/>!=<sp/>vValue.end()<sp/>&amp;&amp;<sp/>nValueRet<sp/>&lt;<sp/>nTargetValue;<sp/>++it)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(it-&gt;second);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>it-&gt;first.first;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;requested<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(nTargetValue)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tnormalized<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nTargetValue/denom<sp/>+<sp/>(nTargetValue<sp/>%<sp/>denom<sp/>!=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tgot<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(nValueRet)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tcost<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>costsum<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>M.size1()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>M.size2()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>vValue.size()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vValue.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143" refid="wallet_8cpp_1a502a73c6cf145be4a420a8bc75c6a69e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="wallet_8cpp_1a502a73c6cf145be4a420a8bc75c6a69e" kindref="member">less_then_denom</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out2)</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>*pcoin1<sp/>=<sp/>out1.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>*pcoin2<sp/>=<sp/>out2.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found1<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found2<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>d,<sp/><ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>)<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>predefined<sp/>denoms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcoin1-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out1.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>d)<sp/>found1<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcoin2-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out2.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>d)<sp/>found2<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!found1<sp/>&amp;&amp;<sp/>found2);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158" refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">CWallet::SelectCoinsMinConf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nTargetValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpendTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nConfMine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nConfTheirs,<sp/>vector&lt;COutput&gt;<sp/>vCoins,<sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;&amp;<sp/>setCoinsRet,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nValueRet)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>setCoinsRet.clear();</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>nValueRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>values<sp/>less<sp/>than<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;CAmount,<sp/>pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>coinLowestLarger;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>coinLowestLarger.first<sp/>=<sp/>std::numeric_limits&lt;CAmount&gt;::max();</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>coinLowestLarger.second.first<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;pair&lt;CAmount,<sp/>pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;<sp/>vValue;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotalLower<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>random_shuffle(vCoins.begin(),<sp/>vCoins.end(),<sp/><ref refid="util_8cpp_1a0e44e088732172da6662db2d5e37d4b2" kindref="member">GetRandInt</ref>);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>denoms<sp/>down<sp/>on<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(vCoins.begin(),<sp/>vCoins.end(),<sp/><ref refid="wallet_8cpp_1a502a73c6cf145be4a420a8bc75c6a69e" kindref="member">less_then_denom</ref>);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>find<sp/>nondenom<sp/>first<sp/>to<sp/>prevent<sp/>unneeded<sp/>spending<sp/>of<sp/>mixed<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tryDenom<sp/>=<sp/>0;<sp/>tryDenom<sp/>&lt;<sp/>2;<sp/>tryDenom++)</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;selectcoins&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tryDenom:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>tryDenom);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValue.clear();</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalLower<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref><sp/>&amp;output,<sp/>vCoins)</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output.<ref refid="class_c_output_1ab8fa647313fbc2cda12f8b064031dd11" kindref="member">fSpendable</ref>)</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>*pcoin<sp/>=<sp/>output.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fDebug)<sp/>LogPrint(&quot;selectcoins&quot;,<sp/>&quot;value<sp/>%s<sp/>confirms<sp/>%d\n&quot;,<sp/>FormatMoney(pcoin-&gt;vout[output.i].nValue),<sp/>output.nDepth);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output.<ref refid="class_c_output_1a2eb24fc73c35fcc551b736d68bd1c64a" kindref="member">nDepth</ref><sp/>&lt;<sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1a5eab277896d1b553676316b862e2014b" kindref="member">IsFromMe</ref>(<ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20da1fe9e47b4c162fd9a1779e59a11dd067" kindref="member">ISMINE_ALL</ref>)<sp/>?<sp/>nConfMine<sp/>:<sp/>nConfTheirs))</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>output.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>n<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tryDenom<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>IsDenominatedAmount(n))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>we<sp/>don&apos;t<sp/>want<sp/>denom<sp/>values<sp/>on<sp/>first<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;CAmount,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>coin<sp/>=<sp/>make_pair(n,make_pair(pcoin,<sp/>i));</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>nTargetValue)</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(coin.second);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>coin.first;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>nTargetValue<sp/>+<sp/>CENT)</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValue.push_back(coin);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalLower<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>coinLowestLarger.first)</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coinLowestLarger<sp/>=<sp/>coin;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTotalLower<sp/>==<sp/>nTargetValue)</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vValue.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(vValue[i].second);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>vValue[i].first;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTotalLower<sp/>&lt;<sp/>nTargetValue)</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coinLowestLarger.second.first<sp/>==<sp/>NULL)<sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>no<sp/>input<sp/>larger<sp/>than<sp/>nTargetValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tryDenom<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>didn&apos;t<sp/>look<sp/>at<sp/>denom<sp/>yet,<sp/>let&apos;s<sp/>do<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>looked<sp/>at<sp/>everything<sp/>possible<sp/>and<sp/>didn&apos;t<sp/>find<sp/>anything,<sp/>no<sp/>luck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(coinLowestLarger.second);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>coinLowestLarger.first;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nTotalLower<sp/>&gt;<sp/>nTargetValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Solve<sp/>subset<sp/>sum<sp/>by<sp/>stochastic<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(vValue.rbegin(),<sp/>vValue.rend(),<sp/><ref refid="struct_compare_value_only" kindref="compound">CompareValueOnly</ref>());</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;char&gt;<sp/>vfBest;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nBest;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>ApproximateBestSubset(vValue,<sp/>nTotalLower,<sp/>nTargetValue,<sp/>vfBest,<sp/>nBest,<sp/>1000);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBest<sp/>!=<sp/>nTargetValue<sp/>&amp;&amp;<sp/>nTotalLower<sp/>&gt;=<sp/>nTargetValue<sp/>+<sp/>CENT)</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApproximateBestSubset(vValue,<sp/>nTotalLower,<sp/>nTargetValue<sp/>+<sp/>CENT,<sp/>vfBest,<sp/>nBest,<sp/>1000);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>a<sp/>bigger<sp/>coin<sp/>and<sp/>(either<sp/>the<sp/>stochastic<sp/>approximation<sp/>didn&apos;t<sp/>find<sp/>a<sp/>good<sp/>solution,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>the<sp/>next<sp/>bigger<sp/>coin<sp/>is<sp/>closer),<sp/>return<sp/>the<sp/>bigger<sp/>coin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coinLowestLarger.second.first<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((nBest<sp/>!=<sp/>nTargetValue<sp/>&amp;&amp;<sp/>nBest<sp/>&lt;<sp/>nTargetValue<sp/>+<sp/>CENT)<sp/>||<sp/>coinLowestLarger.first<sp/>&lt;=<sp/>nBest))</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(coinLowestLarger.second);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>coinLowestLarger.first;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CWallet::SelectCoinsMinConf<sp/>best<sp/>subset:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vValue.size();<sp/>i++)</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vfBest[i])</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(vValue[i].second);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>vValue[i].first;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(vValue[i].first)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;selectcoins&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SelectCoins()<sp/>best<sp/>subset:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vValue.size();<sp/>i++)</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vfBest[i])</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;selectcoins&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(vValue[i].first));</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;selectcoins<sp/>%s<sp/>-<sp/>total<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(nBest));</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CWallet::SelectCoins(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nTargetValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpendTime,<sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;&amp;<sp/>setCoinsRet,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nValueRet,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref>*<sp/>coinControl,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ce" kindref="member">AvailableCoinsType</ref><sp/>coin_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useIX)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2290"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>this<sp/>function<sp/>should<sp/>never<sp/>be<sp/>used<sp/>for<sp/>&quot;always<sp/>free&quot;<sp/>tx<sp/>types<sp/>like<sp/>sstx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>AvailableCoins(vCoins,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>coinControl,<sp/>coin_type,<sp/>useIX);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coin<sp/>control<sp/>-&gt;<sp/>return<sp/>all<sp/>selected<sp/>outputs<sp/>(we<sp/>want<sp/>all<sp/>selected<sp/>to<sp/>go<sp/>into<sp/>the<sp/>transaction<sp/>for<sp/>sure)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coinControl<sp/>&amp;&amp;<sp/>coinControl-&gt;<ref refid="class_c_coin_control_1a8c8b06e183e7a30c646bdec793b30e89" kindref="member">HasSelected</ref>())</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>vCoins)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!out.<ref refid="class_c_output_1ab8fa647313fbc2cda12f8b064031dd11" kindref="member">fSpendable</ref>)</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceaab4c4a7abab40ebdb2706c1708fff22e" kindref="member">ONLY_DENOMINATED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds<sp/>=<sp/>GetInputSandstormRounds(vin);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>it&apos;s<sp/>actually<sp/>anonymized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rounds<sp/>&lt;<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(make_pair(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>,<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nValueRet<sp/>&gt;=<sp/>nTargetValue);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we&apos;re<sp/>doing<sp/>only<sp/>denominated,<sp/>we<sp/>need<sp/>to<sp/>round<sp/>up<sp/>to<sp/>the<sp/>nearest<sp/>.1DRKSLK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceaab4c4a7abab40ebdb2706c1708fff22e" kindref="member">ONLY_DENOMINATED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>outputs<sp/>by<sp/>looping<sp/>through<sp/>denominations,<sp/>from<sp/>large<sp/>to<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>v,<sp/><ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>)</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>vCoins)</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>it&apos;s<sp/>the<sp/>denom<sp/>we&apos;re<sp/>looking<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>nValueRet<sp/>+<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>&lt;<sp/>nTargetValue<sp/>+<sp/>(0.1*COIN)+100<sp/></highlight><highlight class="comment">//round<sp/>the<sp/>amount<sp/>up<sp/>to<sp/>.1DRKSLK<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds<sp/>=<sp/>GetInputSandstormRounds(vin);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>it&apos;s<sp/>actually<sp/>anonymized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rounds<sp/>&lt;<sp/><ref refid="util_8cpp_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(make_pair(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>,<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nValueRet<sp/>&gt;=<sp/>nTargetValue);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::function&lt;bool<sp/>(const<sp/>CWallet*,<sp/>const<sp/>CAmount&amp;,<sp/>unsigned<sp/>int,<sp/>int,<sp/>int,<sp/>std::vector&lt;COutput&gt;,<sp/>std::set&lt;std::pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;&amp;,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;)&gt;<sp/>f;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>f<sp/>uses<sp/>SelectCoinsMinConfByCoinAge<sp/>for<sp/>the<sp/>first<sp/>250<sp/>blocks<sp/>then<sp/>without<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>&lt;=<sp/>250)</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/><ref refid="init_8cpp_1ad32c5d94e1b12cb49fc73deca3f3068f" kindref="member">fMinimizeCoinAge</ref><sp/>?<sp/>&amp;<ref refid="class_c_wallet_1a119e378349dcbcada447b4343805326d" kindref="member">CWallet::SelectCoinsMinConfByCoinAge</ref><sp/>:<sp/>&amp;<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">CWallet::SelectCoinsMinConf</ref>;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>&amp;<ref refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" kindref="member">CWallet::SelectCoinsMinConf</ref>;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(f(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>nTargetValue,<sp/>nSpendTime,<sp/>1,<sp/>10,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet)<sp/>||</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>nTargetValue,<sp/>nSpendTime,<sp/>1,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet)<sp/>||</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>nTargetValue,<sp/>nSpendTime,<sp/>0,<sp/>1,<sp/>vCoins,<sp/>setCoinsRet,<sp/>nValueRet));</highlight></codeline>
<codeline lineno="2348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Select<sp/>some<sp/>coins<sp/>without<sp/>random<sp/>shuffle<sp/>or<sp/>best<sp/>subset<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CWallet::SelectCoinsForStaking(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nTargetValue,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpendTime,<sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;&amp;<sp/>setCoinsRet,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nValueRet)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2352"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>AvailableCoinsForStaking(vCoins,<sp/>nSpendTime);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>setCoinsRet.clear();</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/>nValueRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_output" kindref="compound">COutput</ref><sp/>output,<sp/>vCoins)</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output.<ref refid="class_c_output_1ab8fa647313fbc2cda12f8b064031dd11" kindref="member">fSpendable</ref>)</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>*pcoin<sp/>=<sp/>output.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>output.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>if<sp/>we&apos;ve<sp/>chosen<sp/>enough<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValueRet<sp/>&gt;=<sp/>nTargetValue)</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>n<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;CAmount,pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>coin<sp/>=<sp/>make_pair(n,make_pair(pcoin,<sp/>i));</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>nTargetValue)</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>input<sp/>value<sp/>is<sp/>greater<sp/>or<sp/>equal<sp/>to<sp/>target<sp/>then<sp/>simply<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>it<sp/>into<sp/>the<sp/>current<sp/>subset<sp/>and<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(coin.second);</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>coin.first;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>nTargetValue<sp/>+<sp/>CENT)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(coin.second);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>coin.first;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393" refid="struct_compare_by_priority" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_compare_by_priority" kindref="compound">CompareByPriority</ref></highlight></codeline>
<codeline lineno="2394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2395" refid="struct_compare_by_priority_1a618b52b400f85db2f30519011efdb311" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_compare_by_priority_1a618b52b400f85db2f30519011efdb311" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>t1,</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>t2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2397"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1.<ref refid="class_c_output_1a7b967787d636440d6b67930a436d5c8f" kindref="member">Priority</ref>()<sp/>&gt;<sp/>t2.<ref refid="class_c_output_1a7b967787d636440d6b67930a436d5c8f" kindref="member">Priority</ref>();</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2400"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402" refid="class_c_wallet_1aa7606e8da251a609bf5d89a138f5d12e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1aa7606e8da251a609bf5d89a138f5d12e" kindref="member">CWallet::SelectCoinsByDenominations</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDenom,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueMin,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueMax,<sp/>std::vector&lt;CTxIn&gt;&amp;<sp/>vCoinsRet,<sp/>std::vector&lt;COutput&gt;&amp;<sp/>vCoinsRet2,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nValueRet,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSandstormRoundsMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSandstormRoundsMax)</highlight></codeline>
<codeline lineno="2403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/>vCoinsRet.clear();</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/>nValueRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/>vCoinsRet2.clear();</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/>AvailableCoins(vCoins,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>NULL,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceaab4c4a7abab40ebdb2706c1708fff22e" kindref="member">ONLY_DENOMINATED</ref>);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/>std::random_shuffle(vCoins.rbegin(),<sp/>vCoins.rend());</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//keep<sp/>track<sp/>of<sp/>each<sp/>denomination<sp/>that<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFound10000<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFound1000<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFound100<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFound10<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFound1<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fFoundDot1<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>any<sp/>of<sp/>the<sp/>denomination<sp/>are<sp/>off,<sp/>in<sp/>that<sp/>case<sp/>mark<sp/>them<sp/>as<sp/>fulfilled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>0)))<sp/>fFound10000<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>1)))<sp/>fFound1000<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>2)))<sp/>fFound100<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>3)))<sp/>fFound10<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>4)))<sp/>fFound1<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>5)))<sp/>fFoundDot1<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>vCoins)</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stormnode-like<sp/>input<sp/>should<sp/>not<sp/>be<sp/>selected<sp/>by<sp/>AvailableCoins<sp/>now<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(out.tx-&gt;vout[out.i].nValue<sp/>==<sp/>10000*COIN)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueRet<sp/>+<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>&lt;=<sp/>nValueMax){</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAccepted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>returns<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>0<sp/>-<sp/>10000DRK+1<sp/>(<sp/>bit<sp/>on<sp/>if<sp/>present<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>1<sp/>-<sp/>1000DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>2<sp/>-<sp/>100DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>3<sp/>-<sp/>10DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>4<sp/>-<sp/>1DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>5<sp/>-<sp/>.1DRK+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds<sp/>=<sp/>GetInputSandstormRounds(vin);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rounds<sp/>&gt;=<sp/>nSandstormRoundsMax)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rounds<sp/>&lt;<sp/>nSandstormRoundsMin)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fFound10000<sp/>&amp;&amp;<sp/>fFound1000<sp/>&amp;&amp;<sp/>fFound100<sp/>&amp;&amp;<sp/>fFound10<sp/>&amp;&amp;<sp/>fFound1<sp/>&amp;&amp;<sp/>fFoundDot1){<sp/></highlight><highlight class="comment">//if<sp/>fulfilled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>can<sp/>return<sp/>this<sp/>for<sp/>submission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueRet<sp/>&gt;=<sp/>nValueMin){</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//random<sp/>reduce<sp/>the<sp/>max<sp/>amount<sp/>we&apos;ll<sp/>submit<sp/>for<sp/>anonymity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueMax<sp/>-=<sp/>(<ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()<sp/>%<sp/>(nValueMax/5));</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>average<sp/>use<sp/>50%<sp/>of<sp/>the<sp/>inputs<sp/>or<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(<ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()<sp/>%<sp/>(int)vCoins.size());</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)vCoinsRet.size()<sp/>&gt;<sp/>r)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Denomination<sp/>criterion<sp/>has<sp/>been<sp/>met,<sp/>we<sp/>can<sp/>take<sp/>any<sp/>matching<sp/>denominations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>0))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/><sp/><sp/><sp/><sp/><sp/>((10000*COIN)<sp/><sp/><sp/><sp/>+10000000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>1))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((1000*COIN)<sp/><sp/><sp/><sp/><sp/>+1000000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>2))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((100*COIN)<sp/><sp/><sp/><sp/><sp/><sp/>+100000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>3))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((10*COIN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+10000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>4))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((1*COIN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+1000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>5))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((.1*COIN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+100))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Criterion<sp/>has<sp/>not<sp/>been<sp/>satisfied,<sp/>we<sp/>will<sp/>only<sp/>take<sp/>1<sp/>of<sp/>each<sp/>until<sp/>it<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>0))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/><sp/><sp/><sp/><sp/><sp/>((10000*COIN)<sp/><sp/><sp/><sp/>+10000000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>fFound10000<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>1))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((1000*COIN)<sp/><sp/><sp/><sp/><sp/>+1000000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>fFound1000<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>2))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((100*COIN)<sp/><sp/><sp/><sp/><sp/><sp/>+100000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>fFound100<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>3))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((10*COIN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+10000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>fFound10<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>4))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((1*COIN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+1000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>fFound1<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nDenom<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>5))<sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>((.1*COIN)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+100))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>fFoundDot1<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fAccepted)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vin.<ref refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" kindref="member">prevPubKey</ref><sp/>=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].scriptPubKey;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>inputs<sp/>PubKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoinsRet.push_back(vin);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoinsRet2.push_back(out);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nValueRet<sp/>&gt;=<sp/>nValueMin<sp/>&amp;&amp;<sp/>fFound10000<sp/>&amp;&amp;<sp/>fFound1000<sp/>&amp;&amp;<sp/>fFound100<sp/>&amp;&amp;<sp/>fFound10<sp/>&amp;&amp;<sp/>fFound1<sp/>&amp;&amp;<sp/>fFoundDot1);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight></codeline>
<codeline lineno="2488" refid="class_c_wallet_1a260d40c79106bbaabbf3f4aaf328ffbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a260d40c79106bbaabbf3f4aaf328ffbc" kindref="member">CWallet::SelectCoinsDark</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueMin,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueMax,<sp/>std::vector&lt;CTxIn&gt;&amp;<sp/>setCoinsRet,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nValueRet,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSandstormRoundsMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSandstormRoundsMax)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2489"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref><sp/>*coinControl=NULL;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/>setCoinsRet.clear();</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>nValueRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/>AvailableCoins(vCoins,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>coinControl,<sp/>nSandstormRoundsMin<sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceab446331eecce8e7c33f941400bbe566a" kindref="member">ONLY_NONDENOMINATED_NOTSN</ref><sp/>:<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceaab4c4a7abab40ebdb2706c1708fff22e" kindref="member">ONLY_DENOMINATED</ref>);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>setCoinsRet2;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//order<sp/>the<sp/>array<sp/>so<sp/>fees<sp/>are<sp/>first,<sp/>then<sp/>denominated<sp/>money,<sp/>then<sp/>the<sp/>rest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(vCoins.rbegin(),<sp/>vCoins.rend(),<sp/><ref refid="struct_compare_by_priority" kindref="compound">CompareByPriority</ref>());</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>first<sp/>thing<sp/>we<sp/>get<sp/>is<sp/>a<sp/>fee<sp/>input,<sp/>then<sp/>we&apos;ll<sp/>use<sp/>as<sp/>many<sp/>denominated<sp/>as<sp/>possible.<sp/>then<sp/>the<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>vCoins)</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>not<sp/>allow<sp/>inputs<sp/>less<sp/>than<sp/>1<sp/>CENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>&lt;<sp/>CENT)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>not<sp/>allow<sp/>collaterals<sp/>to<sp/>be<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsCollateralAmount(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref><sp/>&amp;&amp;<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>==<sp/>10000*COIN)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//stormnode<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueRet<sp/>+<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>&lt;=<sp/>nValueMax){</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounds<sp/>=<sp/>GetInputSandstormRounds(vin);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rounds<sp/>&gt;=<sp/>nSandstormRoundsMax)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rounds<sp/>&lt;<sp/>nSandstormRoundsMin)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vin.<ref refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" kindref="member">prevPubKey</ref><sp/>=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].scriptPubKey;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>inputs<sp/>PubKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.push_back(vin);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet2.insert(make_pair(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>,<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>more<sp/>than<sp/>min,<sp/>we&apos;re<sp/>good<sp/>to<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueRet<sp/>&gt;=<sp/>nValueMin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532" refid="class_c_wallet_1a94a3b61e3a5749622b0afcff195a44ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a94a3b61e3a5749622b0afcff195a44ee" kindref="member">CWallet::SelectCoinsCollateral</ref>(std::vector&lt;CTxIn&gt;&amp;<sp/>setCoinsRet,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nValueRet)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2533"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/>selecting<sp/>coins<sp/>for<sp/>collateral\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/>AvailableCoins(vCoins);</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;found<sp/>coins<sp/>%d\n&quot;,<sp/>(int)vCoins.size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>setCoinsRet2;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>vCoins)</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>collateral<sp/>inputs<sp/>will<sp/>always<sp/>be<sp/>a<sp/>multiple<sp/>of<sp/>DARSEND_COLLATERAL,<sp/>up<sp/>to<sp/>five</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsCollateralAmount(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue))</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vin.<ref refid="class_c_tx_in_1a91732c5ffb13520a6989b162ff6683fc" kindref="member">prevPubKey</ref><sp/>=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].scriptPubKey;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>inputs<sp/>PubKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.push_back(vin);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet2.insert(make_pair(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>,<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561" refid="class_c_wallet_1a6ab79abf1aba845254fe5969731ba2ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a6ab79abf1aba845254fe5969731ba2ad" kindref="member">CWallet::CountInputsWithAmount</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nInputAmount)</highlight></codeline>
<codeline lineno="2562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin<sp/>=<sp/>&amp;(*it).second;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>()){</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>();</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//isminetype<sp/>mine<sp/>=<sp/>IsMine(pcoin-&gt;vout[i]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mine<sp/>=<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//COutput<sp/>out<sp/>=<sp/>COutput(pcoin,<sp/>i,<sp/>nDepth,<sp/>(mine<sp/>&amp;<sp/>ISMINE_SPENDABLE)<sp/>!=<sp/>ISMINE_NO);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_output" kindref="compound">COutput</ref><sp/>out<sp/>=<sp/><ref refid="class_c_output" kindref="compound">COutput</ref>(pcoin,<sp/>i,<sp/>nDepth,<sp/>mine);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin<sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue<sp/>!=<sp/>nInputAmount)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsDenominatedAmount(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(IsSpent(out.tx-&gt;GetHash(),<sp/>i)<sp/>||<sp/>!IsMine(pcoin-&gt;vout[i])<sp/>||<sp/>!IsDenominated(vin))<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcoin-&gt;<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(i)<sp/>||<sp/>!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i])<sp/>||<sp/>!IsDenominated(vin))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotal++;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotal;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592" refid="class_c_wallet_1a52e57716466339e8ba1159486b172734" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a52e57716466339e8ba1159486b172734" kindref="member">CWallet::HasCollateralInputs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2593"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/>AvailableCoins(vCoins);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFound<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>vCoins)</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsCollateralAmount(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue))<sp/>nFound++;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nFound<sp/>&gt;<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>should<sp/>check<sp/>only<sp/>for<sp/>at<sp/>least<sp/>1<sp/>collateral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604" refid="class_c_wallet_1a97dd6ac6a62ff915a42dacbd0fe9337d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a97dd6ac6a62ff915a42dacbd0fe9337d" kindref="member">CWallet::IsCollateralAmount</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nInputAmount)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2605"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>nInputAmount<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>nInputAmount<sp/>%<sp/>SANDSTORM_COLLATERAL<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>nInputAmount<sp/>&lt;<sp/>SANDSTORM_COLLATERAL<sp/>*<sp/>5<sp/>&amp;&amp;<sp/>nInputAmount<sp/>&gt;<sp/>SANDSTORM_COLLATERAL;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609" refid="class_c_wallet_1a1eedb3b9e0f2783b9405d27e373d0537" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a1eedb3b9e0f2783b9405d27e373d0537" kindref="member">CWallet::SelectCoinsWithoutDenomination</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nTargetValue,<sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;&amp;<sp/>setCoinsRet,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nValueRet)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2610"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref><sp/>*coinControl=NULL;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;COutput&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/>AvailableCoins(vCoins,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>coinControl,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea009b510e2a783d13c11717045cb06fe2" kindref="member">ONLY_NONDENOMINATED</ref>);</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_output" kindref="compound">COutput</ref>&amp;<sp/>out,<sp/>vCoins)</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueRet<sp/>+=<sp/>out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>].nValue;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoinsRet.insert(make_pair(out.<ref refid="class_c_output_1ad5c15e7a2dc48258127b8fd5db421ad5" kindref="member">tx</ref>,<sp/>out.<ref refid="class_c_output_1ae1b3534a41afb09bb04a499017f2821e" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nValueRet<sp/>&gt;=<sp/>nTargetValue);</highlight></codeline>
<codeline lineno="2622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624" refid="class_c_wallet_1a7fce7ef2029f265caf93d4db3bdb70c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a7fce7ef2029f265caf93d4db3bdb70c3" kindref="member">CWallet::CreateCollateralTransaction</ref>(<ref refid="struct_c_mutable_transaction" kindref="compound">CMutableTransaction</ref>&amp;<sp/>txCollateral,<sp/>std::string<sp/>strReason)</highlight></codeline>
<codeline lineno="2625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>doublespend<sp/>a<sp/>collateral<sp/>transaction,<sp/>it<sp/>will<sp/>require<sp/>a<sp/>fee<sp/>higher<sp/>than<sp/>this.<sp/>So<sp/>there&apos;s</highlight></codeline>
<codeline lineno="2628"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>still<sp/>a<sp/>significant<sp/>cost.</highlight></codeline>
<codeline lineno="2629"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFeeRet<sp/>=<sp/>0.001*COIN;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>txCollateral.<ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>.clear();</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/>txCollateral.<ref refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" kindref="member">vout</ref>.clear();</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekey(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueIn2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxIn&gt;<sp/>vCoinsCollateral;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SelectCoinsCollateral(vCoinsCollateral,<sp/>nValueIn2))</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strReason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Sandstorm<sp/>requires<sp/>a<sp/>collateral<sp/>transaction<sp/>and<sp/>could<sp/>not<sp/>locate<sp/>an<sp/>acceptable<sp/>input!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>our<sp/>change<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptChange;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>vchPubKey;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(reservekey.<ref refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" kindref="member">GetReservedKey</ref>(vchPubKey));<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>fail,<sp/>as<sp/>we<sp/>just<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptChange<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(vchPubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>reservekey.<ref refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" kindref="member">KeepKey</ref>();</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>v,<sp/>vCoinsCollateral)</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txCollateral.<ref refid="struct_c_mutable_transaction_1ad6b1a0a773293fd153a1d384923631da" kindref="member">vin</ref>.push_back(v);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueIn2<sp/>-<sp/>SANDSTORM_COLLATERAL<sp/>-<sp/>nFeeRet<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pay<sp/>collateral<sp/>charge<sp/>in<sp/>fees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>vout3<sp/>=<sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>(nValueIn2<sp/>-<sp/>SANDSTORM_COLLATERAL,<sp/>scriptChange);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txCollateral.<ref refid="struct_c_mutable_transaction_1aca14a252c78e4af2dfe68d7ea67a77dc" kindref="member">vout</ref>.push_back(vout3);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>vinNumber<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//BOOST_FOREACH(CTxIn<sp/>v,<sp/>txCollateral.vin)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(!SignSignature(*this,<sp/>v.prevPubKey,<sp/>txCollateral,<sp/>vinNumber,<sp/>int(SIGHASH_ALL|SIGHASH_ANYONECANPAY)))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>BOOST_FOREACH(CTxIn<sp/>v,<sp/>vCoinsCollateral)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoin(v.prevout);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>strReason<sp/>=<sp/>&quot;CSandstormPool::Sign<sp/>-<sp/>Unable<sp/>to<sp/>sign<sp/>collateral<sp/>transaction!<sp/>\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vinNumber++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677" refid="class_c_wallet_1a7e5345f36180c9133bbbac9b1e2c9fb6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a7e5345f36180c9133bbbac9b1e2c9fb6" kindref="member">CWallet::GetBudgetSystemCollateralTX</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useIX)</highlight></codeline>
<codeline lineno="2678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>wtx;</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetBudgetSystemCollateralTX(wtx,<sp/>hash,<sp/>useIX)){</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx<sp/>=<sp/>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>)wtx;</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight></codeline>
<codeline lineno="2687" refid="class_c_wallet_1ade832913e51777e2b25255d54ef3e583" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a7e5345f36180c9133bbbac9b1e2c9fb6" kindref="member">CWallet::GetBudgetSystemCollateralTX</ref>(<ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>tx,<sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useIX)</highlight></codeline>
<codeline lineno="2688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>our<sp/>change<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekey(<ref refid="darksilkgui_8cpp_1a8c747077ad84071cba8b87f34fe38920" kindref="member">pwalletMain</ref>);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptChange;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptChange<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" kindref="member">OP_RETURN</ref><sp/>&lt;&lt;<sp/><ref refid="script_8h_1a54e10bc63d490dd5d39d245102b81359" kindref="member">ToByteVector</ref>(hash);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFeeRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strFail<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;<sp/>pair&lt;CScript,<sp/>CAmount&gt;<sp/>&gt;<sp/>vecSend;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/>vecSend.push_back(make_pair(scriptChange,<sp/>BUDGET_FEE_TX));</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref><sp/>*coinControl=NULL;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChangePos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>success<sp/>=<sp/>CreateTransaction(vecSend,<sp/>tx,<sp/>keyChange,<sp/>nFeeRequired,<sp/>nChangePos,<sp/>strFailReason,<sp/>coinControl);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>CreateTransaction(vecSend,<sp/>tx,<sp/>reservekey,<sp/>nFeeRet,<sp/>nChangePos,<sp/>strFail,<sp/>coinControl,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea94cc8a0e81d9490cdbdfc3d3f215e9e7" kindref="member">ALL_COINS</ref>,<sp/>useIX,<sp/>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>)0);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!success){</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;GetBudgetSystemCollateralTX:<sp/>Error<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strFail);</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight></codeline>
<codeline lineno="2712" refid="class_c_wallet_1a8b3d2bb029430a437780037c5db7c0e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a8b3d2bb029430a437780037c5db7c0e0" kindref="member">CWallet::ConvertList</ref>(std::vector&lt;CTxIn&gt;<sp/>vCoins,<sp/>std::vector&lt;CAmount&gt;&amp;<sp/>vecAmounts)</highlight></codeline>
<codeline lineno="2713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>i,<sp/>vCoins){</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapWallet.count(i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>))</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtx<sp/>=<sp/>mapWallet[i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>];</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref><sp/>&lt;<sp/>wtx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()){</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecAmounts.push_back(wtx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].nValue);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ConvertList<sp/>--<sp/>Couldn&apos;t<sp/>find<sp/>transaction\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a98bcc563b7598ac652d39f091a38e418" kindref="member">CWallet::CreateTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;pair&lt;CScript,<sp/>CAmount&gt;<sp/>&gt;&amp;<sp/>vecSend,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtxNew,<sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref>&amp;<sp/>reservekey,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nFeeRet,<sp/><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref>&amp;<sp/>nChangePos,<sp/>std::string&amp;<sp/>strFailReason,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref>*<sp/>coinControl,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ce" kindref="member">AvailableCoinsType</ref><sp/>coin_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useIX,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFeePay)</highlight></codeline>
<codeline lineno="2730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(useIX<sp/>&amp;&amp;<sp/>nFeePay<sp/>&lt;<sp/>CENT)<sp/>nFeePay<sp/>=<sp/>CENT;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="class_c_script" kindref="compound">CScript</ref>,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>)&amp;<sp/>s,<sp/>vecSend)</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValue<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Transaction<sp/>amounts<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValue<sp/>+=<sp/>s.second;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vecSend.empty()<sp/>||<sp/>nValue<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Transaction<sp/>amounts<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_wallet_tx_1ac058c61be3a1c680a3ad384ff04d27eb" kindref="member">fTimeReceivedIsTxTime</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight><highlight class="comment">//TODO<sp/>(AA):<sp/>put<sp/>this<sp/>back??</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_wallet_tx_1ab0ee7347584bff886dc24b9f63ff023c" kindref="member">BindWallet</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFeeRet<sp/>=<sp/>MIN_FEE<sp/>*<sp/>COIN;</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFee<sp/>=<sp/>MIN_FEE<sp/>*<sp/>COIN;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(useIX)<sp/>nFeeRet<sp/>=<sp/>max(CENT,<sp/>nFeeRet);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.clear();</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.clear();</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_wallet_tx_1a1598bf4a18fd05ce5eaaa0c3eb58ff28" kindref="member">fFromMe</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotalValue<sp/>=<sp/>nValue<sp/>+<sp/>nFeeRet;</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPriority<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vouts<sp/>to<sp/>the<sp/>payees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="class_c_script" kindref="compound">CScript</ref>,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>)&amp;<sp/>s,<sp/>vecSend)</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>txout(s.second,<sp/>s.first);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOpReturn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(txout.IsNull()<sp/>||<sp/>(!txout.IsEmpty()<sp/>&amp;&amp;<sp/>txout.nValue<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09ad" kindref="member">txnouttype</ref><sp/>whichType;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;valtype&gt;<sp/>vSolutions;</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1a6ee6be50bff44464e905680c6fcee6dc" kindref="member">Solver</ref>(txout.scriptPubKey,<sp/>whichType,<sp/>vSolutions))</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>scriptPubKey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whichType<sp/>==<sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09adadb13d0a4c06b2bb59ac88215233370ed" kindref="member">TX_NONSTANDARD</ref>)</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>transaction<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whichType<sp/>==<sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09adacac155120bd826d44af0b2dc0fd2915a" kindref="member">TX_NULL_DATA</ref>)</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fOpReturn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fOpReturn<sp/>&amp;&amp;<sp/>txout.IsDust(::<ref refid="main_8cpp_1a5925a10baeee7d4bdce1982bdcbd3bd0" kindref="member">minRelayTxFee</ref>))</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Transaction<sp/>amount<sp/>too<sp/>small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.push_back(txout);</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>coins<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>setCoins;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SelectCoins(nTotalValue,<sp/>wtxNew.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref>,<sp/>setCoins,<sp/>nValueIn,<sp/>coinControl,<sp/>coin_type,<sp/>useIX))</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea94cc8a0e81d9490cdbdfc3d3f215e9e7" kindref="member">ALL_COINS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>funds.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566cea009b510e2a783d13c11717045cb06fe2" kindref="member">ONLY_NONDENOMINATED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>locate<sp/>enough<sp/>Sandstorm<sp/>non-denominated<sp/>funds<sp/>for<sp/>this<sp/>transaction.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceab446331eecce8e7c33f941400bbe566a" kindref="member">ONLY_NONDENOMINATED_NOTSN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>locate<sp/>enough<sp/>Sandstorm<sp/>non-denominated<sp/>funds<sp/>for<sp/>this<sp/>transaction<sp/>that<sp/>are<sp/>not<sp/>equal<sp/>1000<sp/>DRKSLK.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>locate<sp/>enough<sp/>Sandstorm<sp/>denominated<sp/>funds<sp/>for<sp/>this<sp/>transaction.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>+=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Sandstorm<sp/>uses<sp/>exact<sp/>denominated<sp/>amounts<sp/>to<sp/>send<sp/>funds,<sp/>you<sp/>might<sp/>simply<sp/>need<sp/>to<sp/>anonymize<sp/>some<sp/>more<sp/>coins.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(useIX){</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>+=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;InstantX<sp/>requires<sp/>inputs<sp/>with<sp/>at<sp/>least<sp/>10<sp/>confirmations,<sp/>you<sp/>might<sp/>need<sp/>to<sp/>wait<sp/>a<sp/>few<sp/>minutes<sp/>and<sp/>try<sp/>again.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>pcoin,<sp/>setCoins)</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nCredit<sp/>=<sp/>pcoin.first-&gt;vout[pcoin.second].nValue;</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>coin<sp/>age<sp/>after<sp/>the<sp/>next<sp/>block<sp/>(depth+1)<sp/>is<sp/>used<sp/>instead<sp/>of<sp/>the<sp/>current,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reflecting<sp/>an<sp/>assumption<sp/>the<sp/>user<sp/>would<sp/>accept<sp/>a<sp/>bit<sp/>more<sp/>delay<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//a<sp/>chance<sp/>at<sp/>a<sp/>free<sp/>transaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//But<sp/>mempool<sp/>inputs<sp/>might<sp/>still<sp/>be<sp/>in<sp/>the<sp/>mempool,<sp/>so<sp/>their<sp/>age<sp/>stays<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>age<sp/>=<sp/>pcoin.first-&gt;GetDepthInMainChain();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age<sp/>=<sp/>pcoin.first-&gt;GetDepthInMainChain();</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(age<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>age<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dPriority<sp/>+=<sp/>(double)nCredit<sp/>*<sp/>age;</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nChange<sp/>=<sp/>nValueIn<sp/>-<sp/>nValue<sp/>-<sp/>nFeeRet;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>if<sp/>statement<sp/>should<sp/>be<sp/>removed<sp/>once<sp/>enough<sp/>miners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>upgraded<sp/>to<sp/>the<sp/>0.9<sp/>GetMinFee()<sp/>rules.<sp/>Until<sp/>then,<sp/>this<sp/>avoids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>creating<sp/>free<sp/>transactions<sp/>that<sp/>have<sp/>change<sp/>outputs<sp/>less<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CENT<sp/>darksilks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nFeeRet<sp/>&lt;<sp/>nFee<sp/>&amp;&amp;<sp/>nChange<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>nChange<sp/>&lt;<sp/>CENT)</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nMoveToFee<sp/>=<sp/>min(nChange,<sp/>nFee<sp/>-<sp/>nFeeRet);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nChange<sp/>-=<sp/>nMoveToFee;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFeeRet<sp/>+=<sp/>nMoveToFee;</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//over<sp/>pay<sp/>for<sp/>denominated<sp/>transactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coin_type<sp/>==<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ceaab4c4a7abab40ebdb2706c1708fff22e" kindref="member">ONLY_DENOMINATED</ref>)</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFeeRet<sp/>+=<sp/>nChange;</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nChange<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_wallet_tx_1a17229eca0c81245312115a9c333203d8" kindref="member">mapValue</ref>[</highlight><highlight class="stringliteral">&quot;SS&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recheck<sp/>skipped<sp/>denominations<sp/>during<sp/>next<sp/>mixing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1afb0b7758e737f014c8a78557cea0e5ea" kindref="member">ClearSkippedDenominations</ref>();</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nChange<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>a<sp/>vout<sp/>to<sp/>ourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>pass<sp/>in<sp/>scriptChange<sp/>instead<sp/>of<sp/>reservekey<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>transaction<sp/>isn&apos;t<sp/>always<sp/>pay-to-darksilk-address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptChange;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coin<sp/>control:<sp/>send<sp/>change<sp/>to<sp/>custom<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coinControl<sp/>&amp;&amp;<sp/>!boost::get&lt;CNoDestination&gt;(&amp;coinControl-&gt;<ref refid="class_c_coin_control_1aa991ffd830267f6c2103fa7e03213f41" kindref="member">destChange</ref>))</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptChange.<ref refid="class_c_script_1ad1b5a9077241aa06116040c4f1b7c31e" kindref="member">SetDestination</ref>(coinControl-&gt;<ref refid="class_c_coin_control_1aa991ffd830267f6c2103fa7e03213f41" kindref="member">destChange</ref>);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>coin<sp/>control:<sp/>send<sp/>change<sp/>to<sp/>newly<sp/>generated<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>We<sp/>use<sp/>a<sp/>new<sp/>key<sp/>here<sp/>to<sp/>keep<sp/>it<sp/>from<sp/>being<sp/>obvious<sp/>which<sp/>side<sp/>is<sp/>the<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>The<sp/>drawback<sp/>is<sp/>that<sp/>by<sp/>not<sp/>reusing<sp/>a<sp/>previous<sp/>key,<sp/>the<sp/>change<sp/>may<sp/>be<sp/>lost<sp/>if<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>backup<sp/>is<sp/>restored,<sp/>if<sp/>the<sp/>backup<sp/>doesn&apos;t<sp/>have<sp/>the<sp/>new<sp/>private<sp/>key<sp/>for<sp/>the<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>If<sp/>we<sp/>reused<sp/>the<sp/>old<sp/>key,<sp/>it<sp/>would<sp/>be<sp/>possible<sp/>to<sp/>add<sp/>code<sp/>to<sp/>look<sp/>for<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>rediscover<sp/>unknown<sp/>transactions<sp/>that<sp/>were<sp/>written<sp/>with<sp/>keys<sp/>of<sp/>ours<sp/>to<sp/>recover</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>post-backup<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>a<sp/>new<sp/>key<sp/>pair<sp/>from<sp/>key<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>vchPubKey;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>reservekey.<ref refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" kindref="member">GetReservedKey</ref>(vchPubKey);</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ret);<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>fail,<sp/>as<sp/>we<sp/>just<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptChange.<ref refid="class_c_script_1ad1b5a9077241aa06116040c4f1b7c31e" kindref="member">SetDestination</ref>(vchPubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>change<sp/>txn<sp/>at<sp/>random<sp/>position:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>newTxOut(nChange,<sp/>scriptChange);</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>create<sp/>dust<sp/>outputs;<sp/>if<sp/>we<sp/>would,<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>dust<sp/>to<sp/>the<sp/>fee.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newTxOut.IsDust(::<ref refid="main_8cpp_1a5925a10baeee7d4bdce1982bdcbd3bd0" kindref="member">minRelayTxFee</ref>))</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFeeRet<sp/>+=<sp/>nChange;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reservekey.<ref refid="class_c_reserve_key_1af7b0a61f8c70c8146e42e82b4e227204" kindref="member">ReturnKey</ref>();</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>change<sp/>txn<sp/>at<sp/>random<sp/>position:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;CTxOut&gt;::iterator<sp/>position<sp/>=<sp/>wtxNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.begin()+<ref refid="util_8cpp_1a0e44e088732172da6662db2d5e37d4b2" kindref="member">GetRandInt</ref>(wtxNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()+1);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.insert(position,<sp/>newTxOut);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reservekey.<ref refid="class_c_reserve_key_1af7b0a61f8c70c8146e42e82b4e227204" kindref="member">ReturnKey</ref>();</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>vin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>how<sp/>the<sp/>sequence<sp/>number<sp/>is<sp/>set<sp/>to<sp/>max()-1<sp/>so<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nLockTime<sp/>set<sp/>above<sp/>actually<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&amp;<sp/>coin,<sp/>setCoins)</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.vin.push_back(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(coin.first-&gt;GetHash(),coin.second));</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(const<sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(const<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&amp;<sp/>coin,<sp/>setCoins)</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!<ref refid="script_8cpp_1adb49c071f85f19a8a8cb4e97d9fe8b93" kindref="member">SignSignature</ref>(*this,<sp/>*coin.first,<sp/>wtxNew,<sp/>nIn++))</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Signing<sp/>transaction<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytes<sp/>=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">::GetSerializeSize</ref>(*(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>*)&amp;wtxNew,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBytes<sp/>&gt;=<sp/>MAX_STANDARD_TX_SIZE)</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strFailReason<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Transaction<sp/>too<sp/>large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dPriority<sp/>=<sp/>wtxNew.<ref refid="class_c_transaction_1ad2452fe2ae424f43e5fd767c28517b3b" kindref="member">ComputePriority</ref>(dPriority,<sp/>nBytes);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>enough<sp/>fee<sp/>is<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref><sp/>=<sp/><ref refid="wallet_8h_1add67e95cd66a980b74a7a2f434d9cf1c" kindref="member">MIN_TX_FEE</ref>;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nPayFee<sp/>=<sp/><ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref><sp/>*<sp/>(1<sp/>+<sp/>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>)nBytes<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAllowFree<sp/>=<sp/><ref refid="txmempool_8h_1ae6c67bac023a01f1ae29b7f2f4505bba" kindref="member">AllowFree</ref>(dPriority);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nMinFee<sp/>=<sp/><ref refid="main_8cpp_1a67d4c24facb2a0d89f92065581c486df" kindref="member">GetMinFee</ref>(wtxNew,<sp/>nBytes,<sp/>fAllowFree,<sp/><ref refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a146093898dd622fd76ca7ded2b6933ef" kindref="member">GMF_SEND</ref>);</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nFeeRet<sp/>&lt;<sp/>max(nPayFee,<sp/>nMinFee))</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFeeRet<sp/>=<sp/>max(nPayFee,<sp/>nMinFee);</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_wallet_tx_1a3594f3eabada273c1eb9ab25da38d204" kindref="member">AddSupportingTransactions</ref>(<ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>);</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_wallet_tx_1ac058c61be3a1c680a3ad384ff04d27eb" kindref="member">fTimeReceivedIsTxTime</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2952" refid="class_c_wallet_1a9fc87acaec36712ad1f5f01cf255984b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a98bcc563b7598ac652d39f091a38e418" kindref="member">CWallet::CreateTransaction</ref>(<ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptPubKey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nValue,<sp/>std::string&amp;<sp/>sNarr,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtxNew,<sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref>&amp;<sp/>reservekey,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nFeeRet,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref>*<sp/>coinControl,<sp/><ref refid="wallet_8h_1a90b09b05f289ac32704a6446a94566ce" kindref="member">AvailableCoinsType</ref><sp/>coin_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useIX,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFeePay)</highlight></codeline>
<codeline lineno="2953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;<sp/>pair&lt;CScript,<sp/>CAmount&gt;<sp/>&gt;<sp/>vecSend;</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/>vecSend.push_back(make_pair(scriptPubKey,<sp/>nValue));</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sNarr.length()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vNarr(sNarr.c_str(),<sp/>sNarr.c_str()<sp/>+<sp/>sNarr.length());</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vNDesc;</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vNDesc.resize(2);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vNDesc[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vNDesc[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptN<sp/>=<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>()<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" kindref="member">OP_RETURN</ref><sp/>&lt;&lt;<sp/>vNDesc<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" kindref="member">OP_RETURN</ref><sp/>&lt;&lt;<sp/>vNarr;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecSend.push_back(make_pair(scriptN,<sp/>0));</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>CreateTransaction<sp/>won&apos;t<sp/>place<sp/>change<sp/>between<sp/>value<sp/>and<sp/>narr<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>narration<sp/>output<sp/>will<sp/>be<sp/>for<sp/>preceding<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChangePos;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strFailReason;</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/>CreateTransaction(vecSend,<sp/>wtxNew,<sp/>reservekey,<sp/>nFeeRet,<sp/>nChangePos,<sp/>strFailReason,<sp/>coinControl);</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strFailReason.empty())</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateTransaction():<sp/>ERROR:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strFailReason);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>narration<sp/>will<sp/>be<sp/>added<sp/>to<sp/>mapValue<sp/>later<sp/>in<sp/>FindStealthTransactions<sp/>From<sp/>CommitTransaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="2984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight></codeline>
<codeline lineno="2987" refid="class_c_wallet_1ae3bb56ad5d165525e45e4a0c9ad034f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ae3bb56ad5d165525e45e4a0c9ad034f2" kindref="member">CWallet::NewStealthAddress</ref>(std::string&amp;<sp/>sError,<sp/>std::string&amp;<sp/>sLabel,<sp/><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref>&amp;<sp/>sxAddr)</highlight></codeline>
<codeline lineno="2988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>scan_secret;</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>spend_secret;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1ab09bf0ded4faa17a866c79087b0b20a8" kindref="member">GenerateRandomSecret</ref>(scan_secret)<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="stealth_8cpp_1ab09bf0ded4faa17a866c79087b0b20a8" kindref="member">GenerateRandomSecret</ref>(spend_secret)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GenerateRandomSecret<sp/>failed.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>CWallet::NewStealthAddress<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sError.c_str());</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stealth_8h_1ad3f41152eaa5a117a5e3f553c8aacec0" kindref="member">ec_point</ref><sp/>scan_pubkey,<sp/>spend_pubkey;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1a002000940ba18203d651e6d83164c0e7" kindref="member">SecretToPublicKey</ref>(scan_secret,<sp/>scan_pubkey)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>scan<sp/>public<sp/>key.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>CWallet::NewStealthAddress<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sError.c_str());</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1a002000940ba18203d651e6d83164c0e7" kindref="member">SecretToPublicKey</ref>(spend_secret,<sp/>spend_pubkey)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>spend<sp/>public<sp/>key.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>CWallet::NewStealthAddress<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sError.c_str());</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;getnewstealthaddress:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;scan_pubkey<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>scan_pubkey.size();<sp/>++i)</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>scan_pubkey[i]);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;spend_pubkey<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>spend_pubkey.size();<sp/>++i)</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>spend_pubkey[i]);</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/>sxAddr.<ref refid="class_c_stealth_address_1a55084bdf98f10d5d5451ca73cc3f2395" kindref="member">label</ref><sp/>=<sp/>sLabel;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>sxAddr.<ref refid="class_c_stealth_address_1ae695d1d4c649d3f78b253de7d273b1d9" kindref="member">scan_pubkey</ref><sp/>=<sp/>scan_pubkey;</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/>sxAddr.<ref refid="class_c_stealth_address_1ac66ac2e04abb7ee90555c702dfa3049c" kindref="member">spend_pubkey</ref><sp/>=<sp/>spend_pubkey;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/>sxAddr.<ref refid="class_c_stealth_address_1a0f2033aa89023f33da354a7652e128a3" kindref="member">scan_secret</ref>.resize(32);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;sxAddr.<ref refid="class_c_stealth_address_1a0f2033aa89023f33da354a7652e128a3" kindref="member">scan_secret</ref>[0],<sp/>&amp;scan_secret.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/>32);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/>sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref>.resize(32);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref>[0],<sp/>&amp;spend_secret.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/>32);</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight></codeline>
<codeline lineno="3042" refid="class_c_wallet_1a19d6a23e37ff619c741b7dfa9279b973" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a19d6a23e37ff619c741b7dfa9279b973" kindref="member">CWallet::AddStealthAddress</ref>(<ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref>&amp;<sp/>sxAddr)</highlight></codeline>
<codeline lineno="3043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>add<sp/>before<sp/>changing<sp/>spend_secret</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/>stealthAddresses.insert(sxAddr);</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOwned<sp/>=<sp/>sxAddr.<ref refid="class_c_stealth_address_1a0f2033aa89023f33da354a7652e128a3" kindref="member">scan_secret</ref>.size()<sp/>==<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>;</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fOwned)</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>owned<sp/>addresses<sp/>can<sp/>only<sp/>be<sp/>added<sp/>when<sp/>wallet<sp/>is<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLocked())</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>CWallet::AddStealthAddress<sp/>wallet<sp/>must<sp/>be<sp/>unlocked.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stealthAddresses.erase(sxAddr);</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsCrypted())</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>vchCryptedSecret;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="key_8h_1aa678d1d0bc7d2a1cac70cd046906d799" kindref="member">CSecret</ref><sp/>vchSecret;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchSecret.resize(32);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchSecret[0],<sp/>&amp;sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref>[0],<sp/>32);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>iv<sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(sxAddr.<ref refid="class_c_stealth_address_1ac66ac2e04abb7ee90555c702dfa3049c" kindref="member">spend_pubkey</ref>.begin(),<sp/>sxAddr.<ref refid="class_c_stealth_address_1ac66ac2e04abb7ee90555c702dfa3049c" kindref="member">spend_pubkey</ref>.end());</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="crypter_8cpp_1a4fa4e3134d2b6e4913b9ce6369820697" kindref="member">EncryptSecret</ref>(vMasterKey,<sp/>vchSecret,<sp/>iv,<sp/>vchCryptedSecret))</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>encrypting<sp/>stealth<sp/>key<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a7d331c1fb6e9479b31d35a50c4bb0f0c" kindref="member">Encoded</ref>().c_str());</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stealthAddresses.erase(sxAddr);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref><sp/>=<sp/>vchCryptedSecret;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a2bce6f7f050d6d14e2c025a7beba2cfc" kindref="member">WriteStealthAddress</ref>(sxAddr);</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv)</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NotifyAddressBookChanged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>sxAddr,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a55084bdf98f10d5d5451ca73cc3f2395" kindref="member">label</ref>,<sp/>fOwned,<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969ae975c67c7f3a5386de0bbde38221b32f" kindref="member">CT_NEW</ref>);</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"></highlight></codeline>
<codeline lineno="3090" refid="class_c_wallet_1ac45af0632ea59c56295d3158b7387f33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ac45af0632ea59c56295d3158b7387f33" kindref="member">CWallet::UnlockStealthAddresses</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="crypter_8h_1a64709c9a3acc8f5694515789a183ad7b" kindref="member">CKeyingMaterial</ref>&amp;<sp/>vMasterKeyIn)</highlight></codeline>
<codeline lineno="3091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>decrypt<sp/>spend_secret<sp/>of<sp/>stealth<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;CStealthAddress&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>stealthAddresses.begin();<sp/>it<sp/>!=<sp/>stealthAddresses.end();<sp/>++it)</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;scan_secret.size()<sp/>&lt;<sp/>32)</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>stealth<sp/>address<sp/>is<sp/>not<sp/>owned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"></highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>CStealthAddress<sp/>are<sp/>only<sp/>sorted<sp/>on<sp/>spend_pubkey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref><sp/>&amp;sxAddr<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*it);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Decrypting<sp/>stealth<sp/>key<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a7d331c1fb6e9479b31d35a50c4bb0f0c" kindref="member">Encoded</ref>().c_str());</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="key_8h_1aa678d1d0bc7d2a1cac70cd046906d799" kindref="member">CSecret</ref><sp/>vchSecret;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>iv<sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(sxAddr.<ref refid="class_c_stealth_address_1ac66ac2e04abb7ee90555c702dfa3049c" kindref="member">spend_pubkey</ref>.begin(),<sp/>sxAddr.<ref refid="class_c_stealth_address_1ac66ac2e04abb7ee90555c702dfa3049c" kindref="member">spend_pubkey</ref>.end());</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="crypter_8cpp_1aded00aa7498a7485a00e77a20856b3e4" kindref="member">DecryptSecret</ref>(vMasterKeyIn,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref>,<sp/>iv,<sp/>vchSecret)</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>vchSecret.size()<sp/>!=<sp/>32)</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>decrypting<sp/>stealth<sp/>key<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a7d331c1fb6e9479b31d35a50c4bb0f0c" kindref="member">Encoded</ref>().c_str());</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>testSecret;</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;testSecret.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/>&amp;vchSecret[0],<sp/>32);</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stealth_8h_1ad3f41152eaa5a117a5e3f553c8aacec0" kindref="member">ec_point</ref><sp/>pkSpendTest;</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1a002000940ba18203d651e6d83164c0e7" kindref="member">SecretToPublicKey</ref>(testSecret,<sp/>pkSpendTest)<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>pkSpendTest<sp/>!=<sp/>sxAddr.<ref refid="class_c_stealth_address_1ac66ac2e04abb7ee90555c702dfa3049c" kindref="member">spend_pubkey</ref>)</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>decrypting<sp/>stealth<sp/>key,<sp/>public<sp/>key<sp/>mismatch<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>sxAddr.<ref refid="class_c_stealth_address_1a7d331c1fb6e9479b31d35a50c4bb0f0c" kindref="member">Encoded</ref>().c_str());</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref>.resize(32);</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;sxAddr.<ref refid="class_c_stealth_address_1a20697e3fc4e92648a190755cd44ee2ea" kindref="member">spend_secret</ref>[0],<sp/>&amp;vchSecret[0],<sp/>32);</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/>CryptedKeyMap::iterator<sp/>mi<sp/>=<sp/>mapCryptedKeys.begin();</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>mi<sp/>!=<sp/>mapCryptedKeys.end();<sp/>++mi)</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;pubKey<sp/>=<sp/>(*mi).second.first;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>&amp;vchCryptedSecret<sp/>=<sp/>(*mi).second.second;</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchCryptedSecret.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>ckid<sp/>=<sp/>pubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>addr(ckid);</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StealthKeyMetaMap::iterator<sp/>mi<sp/>=<sp/>mapStealthKeyMeta.find(ckid);</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>==<sp/>mapStealthKeyMeta.end())</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>No<sp/>metadata<sp/>found<sp/>to<sp/>add<sp/>secret<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stealth_key_metadata" kindref="compound">CStealthKeyMetadata</ref>&amp;<sp/>sxKeyMeta<sp/>=<sp/>mi-&gt;second;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"></highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref><sp/>sxFind;</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxFind.<ref refid="class_c_stealth_address_1ae695d1d4c649d3f78b253de7d273b1d9" kindref="member">scan_pubkey</ref><sp/>=<sp/>sxKeyMeta.<ref refid="class_c_stealth_key_metadata_1a0444523e7274793bd69269c08f6925db" kindref="member">pkScan</ref>.<ref refid="class_c_pub_key_1a84463c7b02b9fa123c11470865180402" kindref="member">Raw</ref>();</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;CStealthAddress&gt;::iterator<sp/>si<sp/>=<sp/>stealthAddresses.find(sxFind);</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(si<sp/>==<sp/>stealthAddresses.end())</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>stealth<sp/>key<sp/>found<sp/>to<sp/>add<sp/>secret<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"></highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Expanding<sp/>secret<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>sSpendR;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>sSpend;</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>sScan;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(si-&gt;spend_secret.size()<sp/>!=<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>si-&gt;scan_secret.size()<sp/>!=<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>)</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Stealth<sp/>address<sp/>has<sp/>no<sp/>secret<sp/>key<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;sScan.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/>&amp;si-&gt;scan_secret[0],<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;sSpend.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/>&amp;si-&gt;spend_secret[0],<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>);</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stealth_8h_1ad3f41152eaa5a117a5e3f553c8aacec0" kindref="member">ec_point</ref><sp/>pkEphem<sp/>=<sp/>sxKeyMeta.<ref refid="class_c_stealth_key_metadata_1a109d244f532a6de7401e71256732da8e" kindref="member">pkEphem</ref>.<ref refid="class_c_pub_key_1a84463c7b02b9fa123c11470865180402" kindref="member">Raw</ref>();</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1affc748a85c8f88db9b08acf27f371053" kindref="member">StealthSecretSpend</ref>(sScan,<sp/>pkEphem,<sp/>sSpend,<sp/>sSpendR)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;StealthSecretSpend()<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stealth_8h_1ad3f41152eaa5a117a5e3f553c8aacec0" kindref="member">ec_point</ref><sp/>pkTestSpendR;</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1a002000940ba18203d651e6d83164c0e7" kindref="member">SecretToPublicKey</ref>(sSpendR,<sp/>pkTestSpendR)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;SecretToPublicKey()<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="key_8h_1aa678d1d0bc7d2a1cac70cd046906d799" kindref="member">CSecret</ref><sp/>vchSecret;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchSecret.resize(<ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchSecret[0],<sp/>&amp;sSpendR.e[0],<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>ckey;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckey.<ref refid="class_c_key_1aaa13d5f08456bba094210c5eeabf64c8" kindref="member">Set</ref>(vchSecret.begin(),<sp/>vchSecret.end(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ckey.SetSecret(vchSecret,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ckey.SetSecret()<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkT<sp/>=<sp/>ckey.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>();</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpkT.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;cpkT<sp/>is<sp/>invalid.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpkT<sp/>!=<sp/>pubKey)</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Generated<sp/>secret<sp/>does<sp/>not<sp/>match.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ckey.<ref refid="class_c_key_1a62094263b7422a45b45ac508396f19eb" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Reconstructed<sp/>key<sp/>is<sp/>invalid.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>keyID<sp/>=<sp/>cpkT.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddress(keyID);</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Adding<sp/>secret<sp/>to<sp/>key<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>coinAddress.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AddKey(ckey))</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;AddKey<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).EraseStealthKeyMeta(ckid))</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;EraseStealthKeyMeta<sp/>failed<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"></highlight></codeline>
<codeline lineno="3242" refid="class_c_wallet_1ae7ab98f84a9f05da46ca943b8f305c85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ae7ab98f84a9f05da46ca943b8f305c85" kindref="member">CWallet::UpdateStealthAddress</ref>(std::string<sp/>&amp;addr,<sp/>std::string<sp/>&amp;label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addIfNotExist)</highlight></codeline>
<codeline lineno="3243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;UpdateStealthAddress<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.c_str());</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref><sp/>sxAddr;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sxAddr.SetEncoded(addr))</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;CStealthAddress&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>stealthAddresses.find(sxAddr);</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969" kindref="member">ChangeType</ref><sp/>nMode<sp/>=<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969a5ab4035117df6ed11f4f5cd2f2d732e5" kindref="member">CT_UPDATED</ref>;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref><sp/>sxFound;</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>stealthAddresses.end())</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addIfNotExist)</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxFound<sp/>=<sp/>sxAddr;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxFound.<ref refid="class_c_stealth_address_1a55084bdf98f10d5d5451ca73cc3f2395" kindref="member">label</ref><sp/>=<sp/>label;</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stealthAddresses.insert(sxFound);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMode<sp/>=<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969ae975c67c7f3a5386de0bbde38221b32f" kindref="member">CT_NEW</ref>;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;UpdateStealthAddress<sp/>%s,<sp/>not<sp/>in<sp/>set\n&quot;</highlight><highlight class="normal">,<sp/>addr.c_str());</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxFound<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*it);</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sxFound.<ref refid="class_c_stealth_address_1a55084bdf98f10d5d5451ca73cc3f2395" kindref="member">label</ref><sp/>==<sp/>label)</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="class_c_stealth_address_1a55084bdf98f10d5d5451ca73cc3f2395" kindref="member">label</ref><sp/>=<sp/>label;<sp/></highlight><highlight class="comment">//<sp/>update<sp/>in<sp/>.stealthAddresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sxFound.<ref refid="class_c_stealth_address_1a0f2033aa89023f33da354a7652e128a3" kindref="member">scan_secret</ref>.size()<sp/>==<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>)</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;UpdateStealthAddress:<sp/>todo<sp/>-<sp/>update<sp/>owned<sp/>stealth<sp/>address.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/>sxFound.<ref refid="class_c_stealth_address_1a55084bdf98f10d5d5451ca73cc3f2395" kindref="member">label</ref><sp/>=<sp/>label;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).WriteStealthAddress(sxFound))</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;UpdateStealthAddress(%s)<sp/>Write<sp/>to<sp/>db<sp/>failed.\n&quot;</highlight><highlight class="normal">,<sp/>addr.c_str());</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fOwned<sp/>=<sp/>sxFound.<ref refid="class_c_stealth_address_1a0f2033aa89023f33da354a7652e128a3" kindref="member">scan_secret</ref>.size()<sp/>==<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>;</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/>NotifyAddressBookChanged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>sxFound,<sp/>sxFound.<ref refid="class_c_stealth_address_1a55084bdf98f10d5d5451ca73cc3f2395" kindref="member">label</ref>,<sp/>fOwned,<sp/>nMode);</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight></codeline>
<codeline lineno="3304" refid="class_c_wallet_1ac797b6473e72f0569afcf3f7445d9965" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ac797b6473e72f0569afcf3f7445d9965" kindref="member">CWallet::CreateStealthTransaction</ref>(<ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptPubKey,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValue,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>P,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>narr,<sp/>std::string&amp;<sp/>sNarr,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtxNew,<sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref>&amp;<sp/>reservekey,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nFeeRet,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_coin_control" kindref="compound">CCoinControl</ref>*<sp/>coinControl)</highlight></codeline>
<codeline lineno="3305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;<sp/>pair&lt;CScript,<sp/>CAmount&gt;<sp/>&gt;<sp/>vecSend;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/>vecSend.push_back(make_pair(scriptPubKey,<sp/>nValue));</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptP<sp/>=<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>()<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" kindref="member">OP_RETURN</ref><sp/>&lt;&lt;<sp/>P;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(narr.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptP<sp/>=<sp/>scriptP<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" kindref="member">OP_RETURN</ref><sp/>&lt;&lt;<sp/>narr;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/>vecSend.push_back(make_pair(scriptP,<sp/>0));</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>shuffle<sp/>inputs,<sp/>change<sp/>output<sp/>won&apos;t<sp/>mix<sp/>enough<sp/>as<sp/>it<sp/>must<sp/>be<sp/>not<sp/>fully<sp/>random<sp/>for<sp/>plantext<sp/>narrations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/>std::random_shuffle(vecSend.begin(),<sp/>vecSend.end());</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChangePos;</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strFailReason;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/>CreateTransaction(vecSend,<sp/>wtxNew,<sp/>reservekey,<sp/>nFeeRet,<sp/>nChangePos,<sp/>strFailReason,<sp/>coinControl);</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strFailReason.empty())</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateStealthTransaction():<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strFailReason);</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>the<sp/>change<sp/>txn<sp/>is<sp/>inserted<sp/>in<sp/>a<sp/>random<sp/>pos,<sp/>check<sp/>here<sp/>to<sp/>match<sp/>narr<sp/>to<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>&amp;&amp;<sp/>narr.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>wtxNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>++k)</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wtxNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[k].scriptPubKey<sp/>!=<sp/>scriptPubKey</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>wtxNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[k].nValue<sp/>!=<sp/>nValue)</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>key[64];</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snprintf(key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(key),<sp/></highlight><highlight class="stringliteral">&quot;n_%u&quot;</highlight><highlight class="normal">,<sp/>k)<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;CreateStealthTransaction():<sp/>Error<sp/>creating<sp/>narration<sp/>key.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_wallet_tx_1a17229eca0c81245312115a9c333203d8" kindref="member">mapValue</ref>[key]<sp/>=<sp/>sNarr;</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight></codeline>
<codeline lineno="3347" refid="class_c_wallet_1a509492fe45395af29a4a16045686c239" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a509492fe45395af29a4a16045686c239" kindref="member">CWallet::SendStealthMoney</ref>(<ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptPubKey,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValue,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>P,<sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>narr,<sp/>std::string&amp;<sp/>sNarr,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtxNew,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAskFee)</highlight></codeline>
<codeline lineno="3348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekey(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFeeRequired;</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLocked())</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strError<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Wallet<sp/>locked,<sp/>unable<sp/>to<sp/>create<sp/>transaction<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SendStealthMoney()<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strError.c_str());</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strError;</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fWalletUnlockStakingOnly)</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strError<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Wallet<sp/>unlocked<sp/>for<sp/>staking<sp/>only,<sp/>unable<sp/>to<sp/>create<sp/>transaction.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SendStealthMoney()<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strError.c_str());</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strError;</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CreateStealthTransaction(scriptPubKey,<sp/>nValue,<sp/>P,<sp/>narr,<sp/>sNarr,<sp/>wtxNew,<sp/>reservekey,<sp/>nFeeRequired))</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strError;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValue<sp/>+<sp/>nFeeRequired<sp/>&gt;<sp/>GetBalance())</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strError<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>This<sp/>transaction<sp/>requires<sp/>a<sp/>transaction<sp/>fee<sp/>of<sp/>at<sp/>least<sp/>%s<sp/>because<sp/>of<sp/>its<sp/>amount,<sp/>complexity,<sp/>or<sp/>use<sp/>of<sp/>recently<sp/>received<sp/>funds<sp/><sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(nFeeRequired).c_str());</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>Create<sp/>transaction&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SendStealthMoney()<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strError.c_str());</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strError;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fAskFee<sp/>&amp;&amp;<sp/>!<ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.<ref refid="class_c_client_u_i_interface_1a11db1bca5727c45f52714bc63108ce6a" kindref="member">ThreadSafeAskFee</ref>(nFeeRequired,<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Sending...&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ABORTED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CommitTransaction(wtxNew,<sp/>reservekey))</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>The<sp/>transaction<sp/>was<sp/>rejected.<sp/><sp/>This<sp/>might<sp/>happen<sp/>if<sp/>some<sp/>of<sp/>the<sp/>coins<sp/>in<sp/>your<sp/>wallet<sp/>were<sp/>already<sp/>spent,<sp/>such<sp/>as<sp/>if<sp/>you<sp/>used<sp/>a<sp/>copy<sp/>of<sp/>wallet.dat<sp/>and<sp/>coins<sp/>were<sp/>spent<sp/>in<sp/>the<sp/>copy<sp/>but<sp/>not<sp/>marked<sp/>as<sp/>spent<sp/>here.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"></highlight></codeline>
<codeline lineno="3385" refid="class_c_wallet_1afce932bf3aa678046ab75eccff004858" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1afce932bf3aa678046ab75eccff004858" kindref="member">CWallet::SendStealthMoneyToDestination</ref>(<ref refid="class_c_stealth_address" kindref="compound">CStealthAddress</ref>&amp;<sp/>sxAddress,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValue,<sp/>std::string&amp;<sp/>sNarr,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtxNew,<sp/>std::string&amp;<sp/>sError,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAskFee)</highlight></codeline>
<codeline lineno="3386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValue<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>amount&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValue<sp/>+<sp/><ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref><sp/>+<sp/>(1)<sp/>&gt;<sp/>GetBalance())</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Insufficient<sp/>funds&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>ephem_secret;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>secretShared;</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stealth_8h_1ad3f41152eaa5a117a5e3f553c8aacec0" kindref="member">ec_point</ref><sp/>pkSendTo;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stealth_8h_1ad3f41152eaa5a117a5e3f553c8aacec0" kindref="member">ec_point</ref><sp/>ephem_pubkey;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1ab09bf0ded4faa17a866c79087b0b20a8" kindref="member">GenerateRandomSecret</ref>(ephem_secret)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GenerateRandomSecret<sp/>failed.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1a855232bf5220ad0159c57e75887a60db" kindref="member">StealthSecret</ref>(ephem_secret,<sp/>sxAddress.<ref refid="class_c_stealth_address_1ae695d1d4c649d3f78b253de7d273b1d9" kindref="member">scan_pubkey</ref>,<sp/>sxAddress.<ref refid="class_c_stealth_address_1ac66ac2e04abb7ee90555c702dfa3049c" kindref="member">spend_pubkey</ref>,<sp/>secretShared,<sp/>pkSendTo)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>generate<sp/>receiving<sp/>public<sp/>key.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkTo(pkSendTo);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpkTo.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>public<sp/>key<sp/>generated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>ckidTo<sp/>=<sp/>cpkTo.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>addrTo(ckidTo);</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1a002000940ba18203d651e6d83164c0e7" kindref="member">SecretToPublicKey</ref>(ephem_secret,<sp/>ephem_pubkey)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>generate<sp/>ephem<sp/>public<sp/>key.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Stealth<sp/>send<sp/>to<sp/>generated<sp/>pubkey<sp/>%&quot;</highlight><highlight class="normal"><ref refid="util_8h_1a427f25ac1b36af6c08edcb5d7c481e3b" kindref="member">PRIszu</ref></highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pkSendTo.size(),<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(pkSendTo).c_str());</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;hash<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addrTo.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;ephem_pubkey<sp/>%&quot;</highlight><highlight class="normal"><ref refid="util_8h_1a427f25ac1b36af6c08edcb5d7c481e3b" kindref="member">PRIszu</ref></highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ephem_pubkey.size(),<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(ephem_pubkey).c_str());</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>vchNarr;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sNarr.length()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_crypter" kindref="compound">SecMsgCrypter</ref><sp/>crypter;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypter.<ref refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" kindref="member">SetKey</ref>(&amp;secretShared.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/>&amp;ephem_pubkey[0]);</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_sec_msg_crypter_1abcd38cca1e7e04486ea959d71465da09" kindref="member">Encrypt</ref>((<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)&amp;sNarr[0],<sp/>sNarr.length(),<sp/>vchNarr))</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Narration<sp/>encryption<sp/>failed.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchNarr.size()<sp/>&gt;<sp/>48)</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Encrypted<sp/>narration<sp/>is<sp/>too<sp/>long.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Parse<sp/>DarkSilk<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptPubKey;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptPubKey.<ref refid="class_c_script_1ad1b5a9077241aa06116040c4f1b7c31e" kindref="member">SetDestination</ref>(addrTo.<ref refid="class_c_dark_silk_address_1a907e63758c7914a246b5807f6babf97d" kindref="member">Get</ref>());</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sError<sp/>=<sp/>SendStealthMoney(scriptPubKey,<sp/>nValue,<sp/>ephem_pubkey,<sp/>vchNarr,<sp/>sNarr,<sp/>wtxNew,<sp/>fAskFee))<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"></highlight></codeline>
<codeline lineno="3470" refid="class_c_wallet_1a5d0e2025dc7a87a0406be272b80509ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a5d0e2025dc7a87a0406be272b80509ee" kindref="member">CWallet::FindStealthTransactions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="wallet_8h_1ab1e69952accb0e7c635e4d7f2b19802b" kindref="member">mapValue_t</ref>&amp;<sp/>mapNarr)</highlight></codeline>
<codeline lineno="3471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;FindStealthTransactions()<sp/>tx:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>().c_str());</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"></highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/>mapNarr.clear();</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>sSpendR;</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>sSpend;</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>sScan;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structec__secret" kindref="compound">ec_secret</ref><sp/>sShared;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stealth_8h_1ad3f41152eaa5a117a5e3f553c8aacec0" kindref="member">ec_point</ref><sp/>pkExtracted;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchEphemPK;</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchDataB;</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchENarr;</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bd" kindref="member">opcodetype</ref><sp/>opCode;</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cbuf[256];</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref><sp/>nOutputIdOuter<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>txout,<sp/>tx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>)</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nOutputIdOuter++;</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>for<sp/>each<sp/>OP_RETURN<sp/>need<sp/>to<sp/>check<sp/>all<sp/>other<sp/>valid<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3496"><highlight class="normal"></highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;txout<sp/>scriptPubKey<sp/>%s\n&quot;,<sp/><sp/>txout.scriptPubKey.ToString().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CScript::const_iterator<sp/>itTxA<sp/>=<sp/>txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.begin();</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(itTxA,<sp/>opCode,<sp/>vchEphemPK)</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>opCode<sp/>!=<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" kindref="member">OP_RETURN</ref>)</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(itTxA,<sp/>opCode,<sp/>vchEphemPK)</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>vchEphemPK.size()<sp/>!=<sp/>33)</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>look<sp/>for<sp/>plaintext<sp/>narrations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vchEphemPK.size()<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>vchEphemPK[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>vchEphemPK[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(itTxA,<sp/>opCode,<sp/>vchENarr)</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>opCode<sp/>==<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" kindref="member">OP_RETURN</ref></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(itTxA,<sp/>opCode,<sp/>vchENarr)</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>vchENarr.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sNarr<sp/>=<sp/>std::string(vchENarr.begin(),<sp/>vchENarr.end());</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"></highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(cbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cbuf),<sp/></highlight><highlight class="stringliteral">&quot;n_%d&quot;</highlight><highlight class="normal">,<sp/>nOutputIdOuter-1);<sp/></highlight><highlight class="comment">//<sp/>plaintext<sp/>narration<sp/>always<sp/>matches<sp/>preceding<sp/>value<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapNarr[cbuf]<sp/>=<sp/>sNarr;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>FindStealthTransactions()<sp/>tx:<sp/>%s,<sp/>Could<sp/>not<sp/>extract<sp/>plaintext<sp/>narration.\n&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>().c_str());</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref><sp/>nOutputId<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStealth++;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>txoutB,<sp/>tx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>)</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nOutputId++;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"></highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;txoutB<sp/>==<sp/>&amp;txout)</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>txnMatch<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>1<sp/>txn<sp/>will<sp/>match<sp/>an<sp/>ephem<sp/>pk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;txoutB<sp/>scriptPubKey<sp/>%s\n&quot;,<sp/><sp/>txoutB.scriptPubKey.ToString().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address;</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(txoutB.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>,<sp/>address))</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address.type()<sp/>!=<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref>))</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>ckidMatch<sp/>=<sp/>boost::get&lt;CKeyID&gt;(address);</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HaveKey(ckidMatch))<sp/></highlight><highlight class="comment">//<sp/>no<sp/>point<sp/>checking<sp/>if<sp/>already<sp/>have<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;CStealthAddress&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>stealthAddresses.begin();<sp/>it<sp/>!=<sp/>stealthAddresses.end();<sp/>++it)</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;scan_secret.size()<sp/>!=<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>)</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>stealth<sp/>address<sp/>is<sp/>not<sp/>owned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;it-&gt;Encodeded()<sp/>%s\n&quot;,<sp/><sp/>it-&gt;Encoded().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;sScan.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/>&amp;it-&gt;scan_secret[0],<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>);</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1a855232bf5220ad0159c57e75887a60db" kindref="member">StealthSecret</ref>(sScan,<sp/>vchEphemPK,<sp/>it-&gt;spend_pubkey,<sp/>sShared,<sp/>pkExtracted)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;StealthSecret<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;pkExtracted<sp/>%&quot;PRIszu&quot;:<sp/>%s\n&quot;,<sp/>pkExtracted.size(),<sp/>HexStr(pkExtracted).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"></highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkE(pkExtracted);</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpkE.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>ckidE<sp/>=<sp/>cpkE.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ckidMatch<sp/>!=<sp/>ckidE)</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Found<sp/>stealth<sp/>txn<sp/>to<sp/>address<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>it-&gt;Encoded().c_str());</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLocked())</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Wallet<sp/>is<sp/>locked,<sp/>adding<sp/>key<sp/>without<sp/>secret.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>add<sp/>key<sp/>without<sp/>secret</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchEmpty;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCryptedKey(cpkE,<sp/>vchEmpty);</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>keyId<sp/>=<sp/>cpkE.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddress(keyId);</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sLabel<sp/>=<sp/>it-&gt;Encoded();</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetAddressBookName(keyId,<sp/>sLabel);</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkEphem(vchEphemPK);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkScan(it-&gt;scan_pubkey);</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stealth_key_metadata" kindref="compound">CStealthKeyMetadata</ref><sp/>lockedSkMeta(cpkEphem,<sp/>cpkScan);</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).WriteStealthKeyMeta(keyId,<sp/>lockedSkMeta))</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;WriteStealthKeyMeta<sp/>failed<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>coinAddress.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapStealthKeyMeta[keyId]<sp/>=<sp/>lockedSkMeta;</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFoundStealth++;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;spend_secret.size()<sp/>!=<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>)</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;sSpend.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/>&amp;it-&gt;spend_secret[0],<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>);</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1a2ac1f28c3a2a9e8e9fd67fb6bbbd5325" kindref="member">StealthSharedToSecretSpend</ref>(sShared,<sp/>sSpend,<sp/>sSpendR)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;StealthSharedToSecretSpend()<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stealth_8h_1ad3f41152eaa5a117a5e3f553c8aacec0" kindref="member">ec_point</ref><sp/>pkTestSpendR;</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stealth_8cpp_1a002000940ba18203d651e6d83164c0e7" kindref="member">SecretToPublicKey</ref>(sSpendR,<sp/>pkTestSpendR)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;SecretToPublicKey()<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="key_8h_1aa678d1d0bc7d2a1cac70cd046906d799" kindref="member">CSecret</ref><sp/>vchSecret;</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchSecret.resize(<ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vchSecret[0],<sp/>&amp;sSpendR.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/><ref refid="stealth_8h_1a9ebf73ce7586af72448f2d5f3dd57c78" kindref="member">ec_secret_size</ref>);</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>ckey;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckey.<ref refid="class_c_key_1aaa13d5f08456bba094210c5eeabf64c8" kindref="member">Set</ref>(vchSecret.begin(),<sp/>vchSecret.end(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ckey.SetSecret(vchSecret,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ckey.SetSecret()<sp/>threw:<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>cpkT<sp/>=<sp/>ckey.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>();</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpkT.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;cpkT<sp/>is<sp/>invalid.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ckey.<ref refid="class_c_key_1a62094263b7422a45b45ac508396f19eb" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Reconstructed<sp/>key<sp/>is<sp/>invalid.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>keyID<sp/>=<sp/>cpkT.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>coinAddress(keyID);</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Adding<sp/>key<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>coinAddress.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AddKey(ckey))</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;AddKey<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sLabel<sp/>=<sp/>it-&gt;Encoded();</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetAddressBookName(keyID,<sp/>sLabel);</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFoundStealth++;</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(itTxA,<sp/>opCode,<sp/>vchENarr)</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>opCode<sp/>==<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" kindref="member">OP_RETURN</ref></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>.<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(itTxA,<sp/>opCode,<sp/>vchENarr)</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>vchENarr.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sec_msg_crypter" kindref="compound">SecMsgCrypter</ref><sp/>crypter;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypter.<ref refid="class_sec_msg_crypter_1a16056670b845c1e9fc28232feee9efd5" kindref="member">SetKey</ref>(&amp;sShared.<ref refid="structec__secret_1a67a32d917614aee8dc96e5e92c821e03" kindref="member">e</ref>[0],<sp/>&amp;vchEphemPK[0]);</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>vchNarr;</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crypter.<ref refid="class_sec_msg_crypter_1a7ede11e62c67b4c1b205f2ddc9402ddb" kindref="member">Decrypt</ref>(&amp;vchENarr[0],<sp/>vchENarr.size(),<sp/>vchNarr))</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Decrypt<sp/>narration<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sNarr<sp/>=<sp/>std::string(vchNarr.begin(),<sp/>vchNarr.end());</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(cbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cbuf),<sp/></highlight><highlight class="stringliteral">&quot;n_%d&quot;</highlight><highlight class="normal">,<sp/>nOutputId);</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapNarr[cbuf]<sp/>=<sp/>sNarr;</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txnMatch<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txnMatch)</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699" refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" kindref="member">CWallet::GetStakeWeight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3700"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>coins<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nBalance<sp/>=<sp/>GetBalance();</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBalance<sp/>&lt;=<sp/><ref refid="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" kindref="member">nReserveBalance</ref>)</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;const<sp/>CWalletTx*&gt;<sp/>vwtxPrev;</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>setCoins;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SelectCoinsForStaking(nBalance<sp/>-<sp/><ref refid="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" kindref="member">nReserveBalance</ref>,<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>(),<sp/>setCoins,<sp/>nValueIn))</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setCoins.empty())</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nWeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>pcoin,<sp/>setCoins)</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin.first-&gt;GetDepthInMainChain()<sp/>&gt;=<sp/><ref refid="main_8cpp_1a6d3cd49df21f4264ed1489ea304dbcb8" kindref="member">nStakeMinConfirmations</ref>)</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nWeight<sp/>+=<sp/>pcoin.first-&gt;vout[pcoin.second].nValue;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nWeight;</highlight></codeline>
<codeline lineno="3730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Use<sp/>CMutableTransaction...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733" refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" kindref="member">CWallet::CreateCoinStake</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key_store" kindref="compound">CKeyStore</ref>&amp;<sp/>keystore,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nSearchInterval,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFees,<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txNew,<sp/><ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>key)</highlight></codeline>
<codeline lineno="3734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref><sp/>bnTargetPerCoinDay;</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/>bnTargetPerCoinDay.<ref refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" kindref="member">SetCompact</ref>(nBits);</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.clear();</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.clear();</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>coin<sp/>stake<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptEmpty;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptEmpty.<ref refid="class_c_script_1a7b2baf842621f07c4939408acf63377c" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.push_back(<ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>(0,<sp/>scriptEmpty));</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>coins<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nBalance<sp/>=<sp/>GetBalance();</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBalance<sp/>&lt;=<sp/><ref refid="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" kindref="member">nReserveBalance</ref>)</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;const<sp/>CWalletTx*&gt;<sp/>vwtxPrev;</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;pair&lt;const<sp/>CWalletTx*,unsigned<sp/>int&gt;<sp/>&gt;<sp/>setCoins;</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>coins<sp/>with<sp/>suitable<sp/>depth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SelectCoinsForStaking(nBalance<sp/>-<sp/><ref refid="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" kindref="member">nReserveBalance</ref>,<sp/>txNew.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref>,<sp/>setCoins,<sp/>nValueIn))</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setCoins.empty())</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nCredit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptPubKeyKernel;</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>pcoin,<sp/>setCoins)</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaxStakeSearchInterval<sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fKernelFound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;<sp/>n&lt;min(nSearchInterval,(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)nMaxStakeSearchInterval)<sp/>&amp;&amp;<sp/>!fKernelFound<sp/>&amp;&amp;<sp/>pindexPrev<sp/>==<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::this_thread::interruption_point();</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>backward<sp/>in<sp/>time<sp/>from<sp/>the<sp/>given<sp/>txNew<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>nSearchInterval<sp/>seconds<sp/>back<sp/>up<sp/>to<sp/>nMaxStakeSearchInterval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>prevoutStake<sp/>=<sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>(pcoin.first-&gt;GetHash(),<sp/>pcoin.second);</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nBlockTime;</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="kernel_8cpp_1afda24c84e30a494d6b63c3a9651579ae" kindref="member">CheckKernel</ref>(pindexPrev,<sp/>nBits,<sp/>txNew.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref><sp/>-<sp/>n,<sp/>prevoutStake,<sp/>&amp;nBlockTime))</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>a<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;coinstake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>kernel<sp/>found\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;valtype&gt;<sp/>vSolutions;</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09ad" kindref="member">txnouttype</ref><sp/>whichType;</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptPubKeyOut;</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptPubKeyKernel<sp/>=<sp/>pcoin.first-&gt;vout[pcoin.second].scriptPubKey;</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1a6ee6be50bff44464e905680c6fcee6dc" kindref="member">Solver</ref>(scriptPubKeyKernel,<sp/>whichType,<sp/>vSolutions))</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;coinstake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>failed<sp/>to<sp/>parse<sp/>kernel\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;coinstake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>parsed<sp/>kernel<sp/>type=%d\n&quot;</highlight><highlight class="normal">,<sp/>whichType);</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whichType<sp/>!=<sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09adab6494d355b65e346dac2cc16f901e0d2" kindref="member">TX_PUBKEY</ref><sp/>&amp;&amp;<sp/>whichType<sp/>!=<sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09adab42b8bd302a06cd74d2afe31114f9365" kindref="member">TX_PUBKEYHASH</ref>)</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;coinstake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>no<sp/>support<sp/>for<sp/>kernel<sp/>type=%d\n&quot;</highlight><highlight class="normal">,<sp/>whichType);</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>support<sp/>pay<sp/>to<sp/>public<sp/>key<sp/>and<sp/>pay<sp/>to<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whichType<sp/>==<sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09adab42b8bd302a06cd74d2afe31114f9365" kindref="member">TX_PUBKEYHASH</ref>)<sp/></highlight><highlight class="comment">//<sp/>pay<sp/>to<sp/>address<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>pay<sp/>to<sp/>public<sp/>key<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keystore.<ref refid="class_c_key_store_1a2dffca468fef2e5da2e42a7c983d968a" kindref="member">GetKey</ref>(<ref refid="classuint160" kindref="compound">uint160</ref>(vSolutions[0]),<sp/>key))</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;coinstake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>failed<sp/>to<sp/>get<sp/>key<sp/>for<sp/>kernel<sp/>type=%d\n&quot;</highlight><highlight class="normal">,<sp/>whichType);</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>unable<sp/>to<sp/>find<sp/>corresponding<sp/>public<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptPubKeyOut<sp/>&lt;&lt;<sp/>key.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>()<sp/>&lt;&lt;<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bda2c190c5caf052f92d3d9ac31a0d96151" kindref="member">OP_CHECKSIG</ref>;</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whichType<sp/>==<sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09adab6494d355b65e346dac2cc16f901e0d2" kindref="member">TX_PUBKEY</ref>)</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8h_1a893ae190c4461e89b01441657f8975ed" kindref="member">valtype</ref>&amp;<sp/>vchPubKey<sp/>=<sp/>vSolutions[0];</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keystore.<ref refid="class_c_key_store_1a2dffca468fef2e5da2e42a7c983d968a" kindref="member">GetKey</ref>(<ref refid="hash_8h_1a4490f70ddae16e9e48460a0416a48a6b" kindref="member">Hash160</ref>(vchPubKey),<sp/>key))</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;coinstake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>failed<sp/>to<sp/>get<sp/>key<sp/>for<sp/>kernel<sp/>type=%d\n&quot;</highlight><highlight class="normal">,<sp/>whichType);</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>unable<sp/>to<sp/>find<sp/>corresponding<sp/>public<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.<ref refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" kindref="member">GetPubKey</ref>()<sp/>!=<sp/>vchPubKey)</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;coinstake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>invalid<sp/>key<sp/>for<sp/>kernel<sp/>type=%d\n&quot;</highlight><highlight class="normal">,<sp/>whichType);</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>keys<sp/>mismatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptPubKeyOut<sp/>=<sp/>scriptPubKeyKernel;</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref><sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.push_back(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(pcoin.first-&gt;GetHash(),<sp/>pcoin.second));</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCredit<sp/>+=<sp/>pcoin.first-&gt;vout[pcoin.second].nValue;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vwtxPrev.push_back(pcoin.first);</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.push_back(<ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>(0,<sp/>scriptPubKeyOut));</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCredit<sp/>&gt;=<sp/>GetStakeSplitThreshold())<sp/></highlight><highlight class="comment">//TODO<sp/>(AA):<sp/>Remove<sp/>this.<sp/><sp/>Test<sp/>if<sp/>affects<sp/>PoS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.push_back(<ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>(0,<sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1].scriptPubKey));<sp/></highlight><highlight class="comment">//split<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;coinstake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>added<sp/>kernel<sp/>type=%d\n&quot;</highlight><highlight class="normal">,<sp/>whichType);</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fKernelFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fKernelFound)</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>kernel<sp/>is<sp/>found<sp/>stop<sp/>searching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCredit<sp/>==<sp/>0<sp/>||<sp/>nCredit<sp/>&gt;<sp/>nBalance<sp/>-<sp/><ref refid="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" kindref="member">nReserveBalance</ref>)</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>pcoin,<sp/>setCoins)</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>add<sp/>more<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>add<sp/>coins<sp/>of<sp/>the<sp/>same<sp/>key/address<sp/>as<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>((pcoin.first-&gt;vout[pcoin.second].scriptPubKey<sp/>==<sp/>scriptPubKeyKernel<sp/>||<sp/>pcoin.first-&gt;vout[pcoin.second].scriptPubKey<sp/>==<sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1].scriptPubKey))</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>pcoin.first-&gt;GetHash()<sp/>!=<sp/>txNew.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[0].prevout.hash)</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTimeWeight<sp/>=<sp/><ref refid="kernel_8cpp_1a65c0eeb113370d36da64a679e184bc16" kindref="member">GetWeight</ref>((<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)pcoin.first-&gt;nTime,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)txNew.<ref refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" kindref="member">nTime</ref>);</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>adding<sp/>more<sp/>inputs<sp/>if<sp/>already<sp/>too<sp/>many<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txNew.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.size()<sp/>&gt;=<sp/>100)</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>adding<sp/>more<sp/>inputs<sp/>if<sp/>value<sp/>is<sp/>already<sp/>pretty<sp/>significant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCredit<sp/>&gt;=<sp/>GetStakeCombineThreshold())</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>adding<sp/>inputs<sp/>if<sp/>reached<sp/>reserve<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCredit<sp/>+<sp/>pcoin.first-&gt;vout[pcoin.second].nValue<sp/>&gt;<sp/>nBalance<sp/>-<sp/><ref refid="wallet_8cpp_1a1927c8af76b81444b99a9185af6adae2" kindref="member">nReserveBalance</ref>)</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>add<sp/>additional<sp/>significant<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin.first-&gt;vout[pcoin.second].nValue<sp/>&gt;=<sp/>GetStakeCombineThreshold())</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>add<sp/>input<sp/>that<sp/>is<sp/>still<sp/>too<sp/>young</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTimeWeight<sp/>&lt;<sp/><ref refid="main_8cpp_1a621f4f63be83358641eb78f48d2f49c2" kindref="member">nStakeMinAge</ref>)</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.push_back(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>(pcoin.first-&gt;GetHash(),<sp/>pcoin.second));</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCredit<sp/>+=<sp/>pcoin.first-&gt;vout[pcoin.second].nValue;</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vwtxPrev.push_back(pcoin.first);</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>coin<sp/>age<sp/>reward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nReward;</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nReward<sp/>=<sp/>STATIC_POS_REWARD<sp/>+<sp/>nFees;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nReward<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCredit<sp/>+=<sp/>nReward;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>stormnode<sp/>payments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bStormNodePayment<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().NetworkID()<sp/>==<sp/><ref refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176a7bfe4c44c13adffa9807917840050c60" kindref="member">CChainParams::TESTNET</ref><sp/>){</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1<sp/>&gt;=<sp/>TESTNET_STORMNODE_PAYMENT_START)<sp/>{</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bStormNodePayment<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().NetworkID()<sp/>==<sp/><ref refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" kindref="member">CChainParams::MAIN</ref><sp/>){</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1<sp/>&gt;=<sp/>STORMNODE_PAYMENT_START){</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bStormNodePayment<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"></highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>payee;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>vin;</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasPayment<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bStormNodePayment)<sp/>{</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//spork</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1a29c31e98d23f4a7f150bbccd4ef5a5cb" kindref="member">GetBlockPayee</ref>(pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1,<sp/>payee)){</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>winningNode<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" kindref="member">GetCurrentStormNode</ref>(1);</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(winningNode){</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payee<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(winningNode-&gt;<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasPayment<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateCoinStake:<sp/>Failed<sp/>to<sp/>detect<sp/>stormnode<sp/>to<sp/>pay\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasPayment<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stormnode<sp/>and<sp/>general<sp/>budget<sp/>payments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasPayment)<sp/>{</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-payments_8cpp_1a1c78c12ef9ef9becb2701ac56c3996ec" kindref="member">FillBlockPayee</ref>(txNew,<sp/>nFees);</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>blockValue<sp/>=<sp/>nCredit;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output<sp/>amount<sp/>for<sp/>PoS<sp/>without<sp/>stormnodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasPayment<sp/>&amp;&amp;<sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>==<sp/>3)<sp/></highlight><highlight class="comment">//<sp/>2<sp/>stake<sp/>outputs,<sp/>stake<sp/>was<sp/>split,<sp/>no<sp/>stormnode<sp/>payment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1].nValue<sp/>=<sp/>(blockValue<sp/>/<sp/>2<sp/>/<sp/>CENT)<sp/>*<sp/>CENT;</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[2].nValue<sp/>=<sp/>blockValue<sp/>-<sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1].nValue;</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hasPayment<sp/>&amp;&amp;<sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>==<sp/>2)<sp/></highlight><highlight class="comment">//<sp/>only<sp/>1<sp/>stake<sp/>output,<sp/>was<sp/>not<sp/>split,<sp/>no<sp/>stormnode<sp/>payment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1].nValue<sp/>=<sp/>blockValue;</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"></highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GetBlockValue<sp/>should<sp/>return<sp/>STATIC_POS_REWARD<sp/>+<sp/>nFees.<sp/>When<sp/>you<sp/>switched<sp/>to<sp/>GetBlockValue<sp/>from<sp/>nCredit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ncredit<sp/>is<sp/>no<sp/>longer<sp/>needed<sp/>past<sp/>this<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"></highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin,<sp/>vwtxPrev)</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1adb49c071f85f19a8a8cb4e97d9fe8b93" kindref="member">SignSignature</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*pcoin,<sp/>txNew,<sp/>nIn++))</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>failed<sp/>to<sp/>sign<sp/>coinstake&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytes<sp/>=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">::GetSerializeSize</ref>(txNew,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBytes<sp/>&gt;=<sp/>MAX_BLOCK_SIZE_GEN/5)</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CreateCoinStake<sp/>:<sp/>exceeded<sp/>coinstake<sp/>size<sp/>limit&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Successfully<sp/>generated<sp/>coinstake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>after<sp/>CreateTransaction<sp/>unless<sp/>you<sp/>want<sp/>to<sp/>abort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3959" refid="class_c_wallet_1aa13fbeaebd271f910a54cc5b82d73fde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1aa13fbeaebd271f910a54cc5b82d73fde" kindref="member">CWallet::CommitTransaction</ref>(<ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtxNew,<sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref>&amp;<sp/>reservekey,<sp/>std::string<sp/>strCommand)</highlight></codeline>
<codeline lineno="3960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wallet_8h_1ab1e69952accb0e7c635e4d7f2b19802b" kindref="member">mapValue_t</ref><sp/>mapNarr;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/>FindStealthTransactions(wtxNew,<sp/>mapNarr);</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"></highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mapNarr.empty())</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)&amp;<sp/>item,<sp/>mapNarr)</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_wallet_tx_1a17229eca0c81245312115a9c333203d8" kindref="member">mapValue</ref>[item.first]<sp/>=<sp/>item.second;</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CommitTransaction:\n%s&quot;</highlight><highlight class="normal">,<sp/>wtxNew.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>only<sp/>to<sp/>keep<sp/>the<sp/>database<sp/>open<sp/>to<sp/>defeat<sp/>the<sp/>auto-flush<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duration<sp/>of<sp/>this<sp/>scope.<sp/><sp/>This<sp/>is<sp/>the<sp/>only<sp/>place<sp/>where<sp/>this<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maybe<sp/>makes<sp/>sense;<sp/>please<sp/>don&apos;t<sp/>do<sp/>it<sp/>anywhere<sp/>else.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>*<sp/>pwalletdb<sp/>=<sp/>fFileBacked<sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile,</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>key<sp/>pair<sp/>from<sp/>key<sp/>pool<sp/>so<sp/>it<sp/>won&apos;t<sp/>be<sp/>used<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reservekey.<ref refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" kindref="member">KeepKey</ref>();</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"></highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>tx<sp/>to<sp/>wallet,<sp/>because<sp/>if<sp/>it<sp/>has<sp/>change<sp/>it&apos;s<sp/>also<sp/>ours,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>just<sp/>for<sp/>transaction<sp/>history.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddToWallet(wtxNew);</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>old<sp/>coins<sp/>as<sp/>spent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;CWalletTx*&gt;<sp/>setCoins;</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>wtxNew.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>&amp;coin<sp/>=<sp/>mapWallet[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>];</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coin.<ref refid="class_c_wallet_tx_1ab0ee7347584bff886dc24b9f63ff023c" kindref="member">BindWallet</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coin.<ref refid="class_c_wallet_tx_1af2fc13459e324ad2b3f7c9914d86e7c8" kindref="member">MarkSpent</ref>(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coin.<ref refid="class_c_wallet_tx_1ada0e71d717dd360faf047de54eef4942" kindref="member">WriteToDisk</ref>();</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NotifyTransactionChanged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>coin.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969a5ab4035117df6ed11f4f5cd2f2d732e5" kindref="member">CT_UPDATED</ref>);</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFileBacked)</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pwalletdb;</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"></highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>how<sp/>many<sp/>getdata<sp/>requests<sp/>our<sp/>transaction<sp/>gets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapRequestCount[wtxNew.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>()]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"></highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Broadcast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wtxNew.<ref refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" kindref="member">AcceptToMemoryPool</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>must<sp/>not<sp/>fail.<sp/>The<sp/>transaction<sp/>has<sp/>already<sp/>been<sp/>signed<sp/>and<sp/>recorded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CommitTransaction()<sp/>:<sp/>Error:<sp/>Transaction<sp/>not<sp/>valid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtxNew.<ref refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" kindref="member">RelayWalletTransaction</ref>(strCommand);</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"></highlight></codeline>
<codeline lineno="4018"><highlight class="normal"></highlight></codeline>
<codeline lineno="4019" refid="class_c_wallet_1a356d16f6df1f109674adf1d1dc577f2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a356d16f6df1f109674adf1d1dc577f2e" kindref="member">CWallet::SendMoney</ref>(<ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptPubKey,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValue,<sp/>std::string&amp;<sp/>sNarr,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtxNew,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAskFee)</highlight></codeline>
<codeline lineno="4020"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekey(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFeeRequired;</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"></highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLocked())</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strError<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Wallet<sp/>locked,<sp/>unable<sp/>to<sp/>create<sp/>transaction!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SendMoney()<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strError;</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fWalletUnlockStakingOnly)</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strError<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Wallet<sp/>unlocked<sp/>for<sp/>staking<sp/>only,<sp/>unable<sp/>to<sp/>create<sp/>transaction.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SendMoney()<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strError;</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"></highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>wtx;</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;CScript,<sp/>CAmount&gt;<sp/>&gt;<sp/>vecSend;</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/>vecSend.push_back(make_pair(scriptPubKey,<sp/>nValue));</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CreateTransaction(scriptPubKey,<sp/>nValue,<sp/>sNarr,<sp/>wtxNew,<sp/>reservekey,<sp/>nFeeRequired))</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strError;</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValue<sp/>+<sp/>nFeeRequired<sp/>&gt;<sp/>GetBalance())</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strError<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>This<sp/>transaction<sp/>requires<sp/>a<sp/>transaction<sp/>fee<sp/>of<sp/>at<sp/>least<sp/>%s<sp/>because<sp/>of<sp/>its<sp/>amount,<sp/>complexity,<sp/>or<sp/>use<sp/>of<sp/>recently<sp/>received<sp/>funds!&quot;</highlight><highlight class="normal">),<sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(nFeeRequired));</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>Create<sp/>transaction&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;SendMoney()<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strError;</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CommitTransaction(wtxNew,<sp/>reservekey))</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>The<sp/>transaction<sp/>was<sp/>rejected!<sp/>This<sp/>might<sp/>happen<sp/>if<sp/>some<sp/>of<sp/>the<sp/>coins<sp/>in<sp/>your<sp/>wallet<sp/>were<sp/>already<sp/>spent,<sp/>such<sp/>as<sp/>if<sp/>you<sp/>used<sp/>a<sp/>copy<sp/>of<sp/>wallet.dat<sp/>and<sp/>coins<sp/>were<sp/>spent<sp/>in<sp/>the<sp/>copy<sp/>but<sp/>not<sp/>marked<sp/>as<sp/>spent<sp/>here.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"></highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063" refid="class_c_wallet_1aad5d55fc472f6b9ccbec5af0a7246d60" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1aad5d55fc472f6b9ccbec5af0a7246d60" kindref="member">CWallet::SendMoneyToDestination</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>&amp;<sp/>address,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValue,<sp/>std::string&amp;<sp/>sNarr,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtxNew,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAskFee)</highlight></codeline>
<codeline lineno="4064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValue<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>amount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValue<sp/>+<sp/><ref refid="wallet_8cpp_1ab2e46203b8d90f87b0a32524045bef60" kindref="member">nTransactionFee</ref><sp/>&gt;<sp/>GetBalance())</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>funds&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"></highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>DarkSilk<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptPubKey;</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptPubKey.<ref refid="class_c_script_1ad1b5a9077241aa06116040c4f1b7c31e" kindref="member">SetDestination</ref>(address);</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"></highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rpcwallet_8cpp_1a33a914aa20f1ded289040800898a0e79" kindref="member">SendMoney</ref>(scriptPubKey,<sp/>nValue,<sp/>sNarr,<sp/>wtxNew,<sp/>fAskFee);</highlight></codeline>
<codeline lineno="4076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight></codeline>
<codeline lineno="4078" refid="class_c_wallet_1a00962341815bf1374067f8ea5520c709" refkind="member"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_wallet_1a00962341815bf1374067f8ea5520c709" kindref="member">CWallet::GetTotalValue</ref>(std::vector&lt;CTxIn&gt;<sp/>vCoins)<sp/>{</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotalValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>wtx;</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>i,<sp/>vCoins){</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapWallet.count(i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>))</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtx<sp/>=<sp/>mapWallet[i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>];</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref><sp/>&lt;<sp/>wtx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()){</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTotalValue<sp/>+=<sp/>wtx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].nValue;</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;GetTotalValue<sp/>--<sp/>Couldn&apos;t<sp/>find<sp/>transaction\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTotalValue;</highlight></codeline>
<codeline lineno="4093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"></highlight></codeline>
<codeline lineno="4096" refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" kindref="member">CWallet::PrepareSandstormDenominate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minRounds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxRounds)</highlight></codeline>
<codeline lineno="4097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLocked())</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Wallet<sp/>locked,<sp/>unable<sp/>to<sp/>create<sp/>transaction!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"></highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" kindref="member">GetState</ref>()<sp/>!=<sp/><ref refid="sandstorm_8h_1a962d9d23845f31ba35334e71ae98d7ee" kindref="member">POOL_STATUS_ERROR</ref><sp/>&amp;&amp;<sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1aeb0427103b962d173873ab793394a103" kindref="member">GetState</ref>()<sp/>!=<sp/><ref refid="sandstorm_8h_1ad4544a5ac57567db513f342ee8757790" kindref="member">POOL_STATUS_SUCCESS</ref>)</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1adb2e1bef95a98b65a8467fa0c7e8be4a" kindref="member">GetEntriesCount</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>You<sp/>already<sp/>have<sp/>pending<sp/>entries<sp/>in<sp/>the<sp/>Sandstorm<sp/>pool&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>**<sp/>find<sp/>the<sp/>coins<sp/>we&apos;ll<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxIn&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;COutput&gt;<sp/>vCoins2;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxIn&gt;<sp/>vCoinsResult;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_reserve_key" kindref="compound">CReserveKey</ref><sp/>reservekey(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select<sp/>the<sp/>coins<sp/>we&apos;ll<sp/>use</highlight></codeline>
<codeline lineno="4114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>minRounds<sp/>&gt;=<sp/>0<sp/>it<sp/>means<sp/>only<sp/>denominated<sp/>inputs<sp/>are<sp/>going<sp/>in<sp/>and<sp/>coming<sp/>out</highlight></codeline>
<codeline lineno="4115"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(minRounds<sp/>&gt;=<sp/>0){</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SelectCoinsByDenominations(<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" kindref="member">sessionDenom</ref>,<sp/>0.1*COIN,<sp/>SANDSTORM_POOL_MAX,<sp/>vCoins,<sp/>vCoins2,<sp/>nValueIn,<sp/>minRounds,<sp/>maxRounds))</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Can&apos;t<sp/>select<sp/>current<sp/>denominated<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"></highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;PrepareSandstormDenominate<sp/>-<sp/>preparing<sp/>sandstorm<sp/>denominate<sp/>.<sp/>Got:<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>nValueIn);</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>v,<sp/>vCoins)</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LockCoin(v.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"></highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>total<sp/>value<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nTotalValue<sp/>=<sp/>GetTotalValue(vCoins);</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>denominate<sp/>our<sp/>funds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nValueLeft<sp/>=<sp/>nTotalValue;</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CTxOut&gt;<sp/>vOut;</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CAmount&gt;<sp/>vDenoms;</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TODO:<sp/>Front<sp/>load<sp/>with<sp/>needed<sp/>denominations<sp/>(e.g.<sp/>.1,<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="4139"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4140"><highlight class="normal"></highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>outputs<sp/>by<sp/>looping<sp/>through<sp/>denominations:<sp/>try<sp/>to<sp/>add<sp/>every<sp/>needed<sp/>denomination,<sp/>repeat<sp/>up<sp/>to<sp/>5-10<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>way<sp/>we<sp/>can<sp/>be<sp/>pretty<sp/>sure<sp/>that<sp/>it<sp/>should<sp/>have<sp/>at<sp/>least<sp/>one<sp/>of<sp/>each<sp/>needed<sp/>denomination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>No<sp/>need<sp/>to<sp/>randomize<sp/>order<sp/>of<sp/>inputs<sp/>because<sp/>they<sp/>were</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initially<sp/>shuffled<sp/>in<sp/>CWallet::SelectCoinsByDenominations<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStepsMax<sp/>=<sp/>5<sp/>+<sp/><ref refid="util_8cpp_1a0e44e088732172da6662db2d5e37d4b2" kindref="member">GetRandInt</ref>(5);</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nStep<sp/>&lt;<sp/>nStepsMax)<sp/>{</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>v,<sp/><ref refid="util_8cpp_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>){</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>use<sp/>the<sp/>ones<sp/>that<sp/>are<sp/>approved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAccepted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" kindref="member">sessionDenom</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>0))<sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>v<sp/>==<sp/>((10000*COIN)<sp/>+10000000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" kindref="member">sessionDenom</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>1))<sp/>&amp;&amp;<sp/>v<sp/>==<sp/>((1000*COIN)<sp/><sp/>+1000000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" kindref="member">sessionDenom</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>2))<sp/>&amp;&amp;<sp/>v<sp/>==<sp/>((100*COIN)<sp/><sp/><sp/>+100000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" kindref="member">sessionDenom</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>3))<sp/>&amp;&amp;<sp/>v<sp/>==<sp/>((10*COIN)<sp/><sp/><sp/><sp/>+10000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" kindref="member">sessionDenom</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>4))<sp/>&amp;&amp;<sp/>v<sp/>==<sp/>((1*COIN)<sp/><sp/><sp/><sp/><sp/>+1000))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" kindref="member">sessionDenom</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>5))<sp/>&amp;&amp;<sp/>v<sp/>==<sp/>((.1*COIN)<sp/><sp/><sp/><sp/>+100))<sp/>{fAccepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fAccepted)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>add<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueLeft<sp/>-<sp/>v<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>this<sp/>relies<sp/>on<sp/>a<sp/>fact<sp/>that<sp/>both<sp/>vectors<sp/>MUST<sp/>have<sp/>same<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CTxIn&gt;::iterator<sp/>it<sp/>=<sp/>vCoins.begin();</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;COutput&gt;::iterator<sp/>it2<sp/>=<sp/>vCoins2.begin();</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it2<sp/>!=<sp/>vCoins2.end())<sp/>{</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>matching<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it2).tx-&gt;vout[(*it2).i].nValue<sp/>==<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>new<sp/>input<sp/>in<sp/>resulting<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoinsResult.push_back(*it);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>corresponting<sp/>items<sp/>from<sp/>initial<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoins.erase(it);</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoins2.erase(it2);</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>scriptChange;</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>vchPubKey;</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>a<sp/>unique<sp/>change<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(reservekey.<ref refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" kindref="member">GetReservedKey</ref>(vchPubKey));<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>fail,<sp/>as<sp/>we<sp/>just<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptChange<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(vchPubKey.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reservekey.<ref refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" kindref="member">KeepKey</ref>();</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>new<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>o(v,<sp/>scriptChange);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vOut.push_back(o);</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>denomination<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValueLeft<sp/>-=<sp/>v;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it2;</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"></highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStep++;</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nValueLeft<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"></highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unlock<sp/>unused<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>v,<sp/>vCoins)</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoin(v.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1aebbafc6e18044ba973b127787f9ff90b" kindref="member">GetDenominations</ref>(vOut)<sp/>!=<sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a29ef4f682594e010c8401617463fb57e" kindref="member">sessionDenom</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unlock<sp/>used<sp/>coins<sp/>on<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>v,<sp/>vCoinsResult)</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockCoin(v.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>);</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>can&apos;t<sp/>make<sp/>current<sp/>denominated<sp/>outputs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>also<sp/>do<sp/>not<sp/>care<sp/>about<sp/>full<sp/>amount<sp/>as<sp/>long<sp/>as<sp/>we<sp/>have<sp/>right<sp/>denominations,<sp/>just<sp/>pass<sp/>what<sp/>we<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" kindref="member">SendSandstormDenominate</ref>(vCoinsResult,<sp/>vOut,<sp/>nValueIn<sp/>-<sp/>nValueLeft);</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"></highlight></codeline>
<codeline lineno="4222" refid="class_c_wallet_1a5d7b244b8ed0cbe24233ee0b6ca3cae0" refkind="member"><highlight class="normal"><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944" kindref="member">DBErrors</ref><sp/><ref refid="class_c_wallet_1a5d7b244b8ed0cbe24233ee0b6ca3cae0" kindref="member">CWallet::LoadWallet</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>fFirstRunRet)</highlight></codeline>
<codeline lineno="4223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fFileBacked)</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944aa2367ec374804930406cea446fbb3fd2" kindref="member">DB_LOAD_OK</ref>;</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944" kindref="member">DBErrors</ref><sp/>nLoadWalletRet<sp/>=<sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile,</highlight><highlight class="stringliteral">&quot;cr+&quot;</highlight><highlight class="normal">).<ref refid="class_c_wallet_d_b_1a14f26e53502d1a60dd2b034f830acf03" kindref="member">LoadWallet</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLoadWalletRet<sp/>==<sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944aef89bee2c244fcd980d6cf7edc5bf2d6" kindref="member">DB_NEED_REWRITE</ref>)</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_d_b_1acfb8a373edb9c4cfab780fb7578b277e" kindref="member">CDB::Rewrite</ref>(strWalletFile,<sp/></highlight><highlight class="stringliteral">&quot;\x04pool&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setKeyPool.clear();</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>can&apos;t<sp/>top-up<sp/>keypool<sp/>here,<sp/>because<sp/>wallet<sp/>is<sp/>locked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>will<sp/>be<sp/>prompted<sp/>to<sp/>unlock<sp/>wallet<sp/>the<sp/>next<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>requires<sp/>a<sp/>new<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLoadWalletRet<sp/>!=<sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944aa2367ec374804930406cea446fbb3fd2" kindref="member">DB_LOAD_OK</ref>)</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nLoadWalletRet;</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="walletdb_8h_1a7558d92e9ea1d446075da1b514c4a944aa2367ec374804930406cea446fbb3fd2" kindref="member">DB_LOAD_OK</ref>;</highlight></codeline>
<codeline lineno="4243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"></highlight></codeline>
<codeline lineno="4245"><highlight class="normal"></highlight></codeline>
<codeline lineno="4246" refid="class_c_wallet_1a95d2dd3693db562aa11afbecf33e1276" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a95d2dd3693db562aa11afbecf33e1276" kindref="member">CWallet::SetAddressBookName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>&amp;<sp/>address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>strName)</highlight></codeline>
<codeline lineno="4247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUpdated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>mapAddressBook</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;CTxDestination,<sp/>std::string&gt;::iterator<sp/>mi<sp/>=<sp/>mapAddressBook.find(address);</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUpdated<sp/>=<sp/>mi<sp/>!=<sp/>mapAddressBook.end();</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapAddressBook[address]<sp/>=<sp/>strName;</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/>NotifyAddressBookChanged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>address,<sp/>strName,<sp/>::<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>address)<sp/>!=<sp/><ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20dabd6dd5ba8963fe559dda755950f29baf" kindref="member">ISMINE_NO</ref>,</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fUpdated<sp/>?<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969a5ab4035117df6ed11f4f5cd2f2d732e5" kindref="member">CT_UPDATED</ref><sp/>:<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969ae975c67c7f3a5386de0bbde38221b32f" kindref="member">CT_NEW</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fFileBacked)</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1ad1b3bce77e9dd6ddd8c668a469c38f0a" kindref="member">WriteName</ref>(<ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref>(address).ToString(),<sp/>strName);</highlight></codeline>
<codeline lineno="4260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"></highlight></codeline>
<codeline lineno="4262" refid="class_c_wallet_1ac21ad6cf1271b08f0392259643ef5804" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ac21ad6cf1271b08f0392259643ef5804" kindref="member">CWallet::DelAddressBookName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref>&amp;<sp/>address)</highlight></codeline>
<codeline lineno="4263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>mapAddressBook</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4266"><highlight class="normal"></highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapAddressBook.erase(address);</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"></highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/>NotifyAddressBookChanged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>address,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>::<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>address)<sp/>!=<sp/><ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20dabd6dd5ba8963fe559dda755950f29baf" kindref="member">ISMINE_NO</ref>,<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969a6aa8d1cd0da86fe8886e3a5c47f194ef" kindref="member">CT_DELETED</ref>);</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fFileBacked)</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a319209fcf90ea860b668b92c44a3fa7a" kindref="member">EraseName</ref>(<ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref>(address).ToString());</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).<ref refid="class_c_wallet_d_b_1a319209fcf90ea860b668b92c44a3fa7a" kindref="member">EraseName</ref>(<ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref>(address).ToString());</highlight></codeline>
<codeline lineno="4276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"></highlight></codeline>
<codeline lineno="4278" refid="class_c_wallet_1af11074b729403d68ee9e56f1a4654796" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1af11074b729403d68ee9e56f1a4654796" kindref="member">CWallet::GetTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hashTx,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/>wtx)</highlight></codeline>
<codeline lineno="4279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CWalletTx&gt;::iterator<sp/>mi<sp/>=<sp/>mapWallet.find(hashTx);</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>mapWallet.end())</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtx<sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"></highlight></codeline>
<codeline lineno="4292" refid="class_c_wallet_1ad54cca8f6e5e1d5535860f43ddb0246f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ad54cca8f6e5e1d5535860f43ddb0246f" kindref="member">CWallet::SetDefaultKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>&amp;vchPubKey)</highlight></codeline>
<codeline lineno="4293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFileBacked)</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref>(strWalletFile).WriteDefaultKey(vchPubKey))</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/>vchDefaultKey<sp/>=<sp/>vchPubKey;</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mark<sp/>old<sp/>keypool<sp/>keys<sp/>as<sp/>used,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>generate<sp/>all<sp/>new<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4307" refid="class_c_wallet_1a7353ba1e79fc4167fbfbe79b41698fa7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a7353ba1e79fc4167fbfbe79b41698fa7" kindref="member">CWallet::NewKeyPool</ref>()</highlight></codeline>
<codeline lineno="4308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>walletdb(strWalletFile);</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIndex,<sp/>setKeyPool)</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>walletdb.<ref refid="class_c_wallet_d_b_1ac78d839fbda5164c4134ab67911139ca" kindref="member">ErasePool</ref>(nIndex);</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setKeyPool.clear();</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLocked())</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"></highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nKeys<sp/>=<sp/>max(<ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-keypool&quot;</highlight><highlight class="normal">,<sp/>DEFAULT_KEYPOOL_SIZE),<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)<sp/>0);</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nKeys;<sp/>i++)</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIndex<sp/>=<sp/>i+1;</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>walletdb.<ref refid="class_c_wallet_d_b_1ad43630ad28a68c3e8b1a633f09aa0964" kindref="member">WritePool</ref>(nIndex,<sp/><ref refid="class_c_key_pool" kindref="compound">CKeyPool</ref>(GenerateNewKey()));</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setKeyPool.insert(nIndex);</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CWallet::NewKeyPool<sp/>wrote<sp/>%d<sp/>new<sp/>keys\n&quot;</highlight><highlight class="normal">,<sp/>nKeys);</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"></highlight></codeline>
<codeline lineno="4331" refid="class_c_wallet_1aeeeca131336b2ec20cede9a2fccc203a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1aeeeca131336b2ec20cede9a2fccc203a" kindref="member">CWallet::TopUpKeyPool</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize)</highlight></codeline>
<codeline lineno="4332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLocked())</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"></highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>walletdb(strWalletFile);</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Top<sp/>up<sp/>key<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTargetSize;</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTargetSize<sp/>=<sp/>nSize;</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTargetSize<sp/>=<sp/>max(<ref refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="stringliteral">&quot;-keypool&quot;</highlight><highlight class="normal">,<sp/>DEFAULT_KEYPOOL_SIZE),<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)<sp/>0);</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"></highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(setKeyPool.size()<sp/>&lt;<sp/>(nTargetSize<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nEnd<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!setKeyPool.empty())</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nEnd<sp/>=<sp/>*(--setKeyPool.end())<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!walletdb.<ref refid="class_c_wallet_d_b_1ad43630ad28a68c3e8b1a633f09aa0964" kindref="member">WritePool</ref>(nEnd,<sp/><ref refid="class_c_key_pool" kindref="compound">CKeyPool</ref>(GenerateNewKey())))</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;TopUpKeyPool()<sp/>:<sp/>writing<sp/>generated<sp/>key<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setKeyPool.insert(nEnd);</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;keypool<sp/>added<sp/>key<sp/>%d,<sp/>size=%u\n&quot;</highlight><highlight class="normal">,<sp/>nEnd,<sp/>setKeyPool.size());</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dProgress<sp/>=<sp/>100.f<sp/>*<sp/>nEnd<sp/>/<sp/>(nTargetSize<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strMsg<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(<ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>wallet...<sp/>(%3.2f<sp/>%%)&quot;</highlight><highlight class="normal">),<sp/>dProgress);</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.<ref refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" kindref="member">InitMessage</ref>(strMsg);</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"></highlight></codeline>
<codeline lineno="4365"><highlight class="normal"></highlight></codeline>
<codeline lineno="4366" refid="class_c_wallet_1a9921854840668a1856998f041177dd2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a9921854840668a1856998f041177dd2b" kindref="member">CWallet::ReserveKeyFromKeyPool</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>&amp;<sp/>nIndex,<sp/><ref refid="class_c_key_pool" kindref="compound">CKeyPool</ref>&amp;<sp/>keypool)</highlight></codeline>
<codeline lineno="4367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/>nIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/>keypool.<ref refid="class_c_key_pool_1a937080a4cec1f2b138ebd200557c82b5" kindref="member">vchPubKey</ref><sp/>=<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>();</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsLocked())</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TopUpKeyPool();</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>oldest<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setKeyPool.empty())</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>walletdb(strWalletFile);</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"></highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nIndex<sp/>=<sp/>*(setKeyPool.begin());</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setKeyPool.erase(setKeyPool.begin());</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!walletdb.<ref refid="class_c_wallet_d_b_1a6a03927cf247314ccd9b285139de0bd1" kindref="member">ReadPool</ref>(nIndex,<sp/>keypool))</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;ReserveKeyFromKeyPool()<sp/>:<sp/>read<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HaveKey(keypool.<ref refid="class_c_key_pool_1a937080a4cec1f2b138ebd200557c82b5" kindref="member">vchPubKey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>()))</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;ReserveKeyFromKeyPool()<sp/>:<sp/>unknown<sp/>key<sp/>in<sp/>key<sp/>pool&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(keypool.<ref refid="class_c_key_pool_1a937080a4cec1f2b138ebd200557c82b5" kindref="member">vchPubKey</ref>.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>());</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;keypool<sp/>reserve<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nIndex);</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"></highlight></codeline>
<codeline lineno="4393" refid="class_c_wallet_1afecefdad197b3b021139cef1fd0e7a9b" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="class_c_wallet_1afecefdad197b3b021139cef1fd0e7a9b" kindref="member">CWallet::AddReserveKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key_pool" kindref="compound">CKeyPool</ref>&amp;<sp/>keypool)</highlight></codeline>
<codeline lineno="4394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>walletdb(strWalletFile);</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIndex<sp/>=<sp/>1<sp/>+<sp/>*(--setKeyPool.end());</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!walletdb.<ref refid="class_c_wallet_d_b_1ad43630ad28a68c3e8b1a633f09aa0964" kindref="member">WritePool</ref>(nIndex,<sp/>keypool))</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;AddReserveKey()<sp/>:<sp/>writing<sp/>added<sp/>key<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setKeyPool.insert(nIndex);</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nIndex;</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"></highlight></codeline>
<codeline lineno="4408" refid="class_c_wallet_1ae460b8c824a1a6633615f95373e533f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ae460b8c824a1a6633615f95373e533f2" kindref="member">CWallet::KeepKey</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIndex)</highlight></codeline>
<codeline lineno="4409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>from<sp/>key<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fFileBacked)</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>walletdb(strWalletFile);</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>walletdb.<ref refid="class_c_wallet_d_b_1ac78d839fbda5164c4134ab67911139ca" kindref="member">ErasePool</ref>(nIndex);</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;keypool<sp/>keep<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nIndex);</highlight></codeline>
<codeline lineno="4417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"></highlight></codeline>
<codeline lineno="4419" refid="class_c_wallet_1a4ee5566c2b4c8f4ed5cec628573b9275" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a4ee5566c2b4c8f4ed5cec628573b9275" kindref="member">CWallet::ReturnKey</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIndex)</highlight></codeline>
<codeline lineno="4420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>to<sp/>key<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setKeyPool.insert(nIndex);</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;keypool<sp/>return<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nIndex);</highlight></codeline>
<codeline lineno="4427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"></highlight></codeline>
<codeline lineno="4429" refid="class_c_wallet_1a18549ec5c472c003afc4794daeb9adfd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a18549ec5c472c003afc4794daeb9adfd" kindref="member">CWallet::GetKeyFromPool</ref>(<ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="4430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_pool" kindref="compound">CKeyPool</ref><sp/>keypool;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReserveKeyFromKeyPool(nIndex,<sp/>keypool);</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLocked())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>GenerateNewKey();</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeepKey(nIndex);</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>keypool.<ref refid="class_c_key_pool_1a937080a4cec1f2b138ebd200557c82b5" kindref="member">vchPubKey</ref>;</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"></highlight></codeline>
<codeline lineno="4448" refid="class_c_wallet_1a2555a9442e58b3c5593fef21f1b39d2d" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="class_c_wallet_1a2555a9442e58b3c5593fef21f1b39d2d" kindref="member">CWallet::GetOldestKeyPoolTime</ref>()</highlight></codeline>
<codeline lineno="4449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key_pool" kindref="compound">CKeyPool</ref><sp/>keypool;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/>ReserveKeyFromKeyPool(nIndex,<sp/>keypool);</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/>ReturnKey(nIndex);</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keypool.<ref refid="class_c_key_pool_1aa2f8263f0baf732ad5b4e4b59b482209" kindref="member">nTime</ref>;</highlight></codeline>
<codeline lineno="4457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"></highlight></codeline>
<codeline lineno="4459" refid="class_c_wallet_1adf2b4ac337ddb271555985cec82e43e6" refkind="member"><highlight class="normal">std::map&lt;CTxDestination,<sp/>CAmount&gt;<sp/><ref refid="class_c_wallet_1adf2b4ac337ddb271555985cec82e43e6" kindref="member">CWallet::GetAddressBalances</ref>()</highlight></codeline>
<codeline lineno="4460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;CTxDestination,<sp/>CAmount&gt;<sp/>balances;</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="classuint256" kindref="compound">uint256</ref>,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>)<sp/>walletEntry,<sp/>mapWallet)</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>*pcoin<sp/>=<sp/>&amp;walletEntry.second;</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"></highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="main_8cpp_1adc332cd7ac94e639bb4239618341be19" kindref="member">IsFinalTx</ref>(*pcoin)<sp/>||<sp/>!pcoin-&gt;<ref refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" kindref="member">IsTrusted</ref>())</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pcoin-&gt;<ref refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" kindref="member">IsCoinBase</ref>()<sp/>||<sp/>pcoin-&gt;<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>())<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a8bd25cf06de6a443d0925ec8ba66c949" kindref="member">GetBlocksToMaturity</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"></highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>();</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDepth<sp/>&lt;<sp/>(pcoin-&gt;<ref refid="class_c_wallet_tx_1a5eab277896d1b553676316b862e2014b" kindref="member">IsFromMe</ref>(<ref refid="script_8h_1a66f67ca6dd4cabac4eea13042b18e20da1fe9e47b4c162fd9a1779e59a11dd067" kindref="member">ISMINE_ALL</ref>)<sp/>?<sp/>0<sp/>:<sp/>1))</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>addr;</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]))</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].scriptPubKey,<sp/>addr))</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"></highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>n<sp/>=<sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(i)<sp/>?<sp/>0<sp/>:<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].nValue;</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"></highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!balances.count(addr))</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balances[addr]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balances[addr]<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"></highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>balances;</highlight></codeline>
<codeline lineno="4497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"></highlight></codeline>
<codeline lineno="4499" refid="class_c_wallet_1a8eacbac6ad3697d90b98dfe02632f8ef" refkind="member"><highlight class="normal">set&lt;<sp/>set&lt;CTxDestination&gt;<sp/>&gt;<sp/><ref refid="class_c_wallet_1a8eacbac6ad3697d90b98dfe02632f8ef" kindref="member">CWallet::GetAddressGroupings</ref>()</highlight></codeline>
<codeline lineno="4500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>mapWallet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;<sp/>set&lt;CTxDestination&gt;<sp/>&gt;<sp/>groupings;</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;CTxDestination&gt;<sp/>grouping;</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"></highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" kindref="member">PAIRTYPE</ref>(<ref refid="classuint256" kindref="compound">uint256</ref>,<sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>)<sp/>walletEntry,<sp/>mapWallet)</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>*pcoin<sp/>=<sp/>&amp;walletEntry.second;</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"></highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcoin-&gt;<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[0]))</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_mine<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>group<sp/>all<sp/>input<sp/>addresses<sp/>with<sp/>each<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>txin,<sp/>pcoin-&gt;<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address;</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(txin))<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>input<sp/>isn&apos;t<sp/>mine,<sp/>ignore<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(mapWallet[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>].vout[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>].scriptPubKey,<sp/>address))</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grouping.insert(address);</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_mine<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>group<sp/>change<sp/>with<sp/>input<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(any_mine)</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>group<sp/>change<sp/>with<sp/>input<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>txout,<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>)</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsChange(txout))</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>tx<sp/>=<sp/>mapWallet[pcoin-&gt;<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>[0].prevout.hash];</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>txoutAddr;</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>,<sp/>txoutAddr))</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grouping.insert(txoutAddr);</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grouping.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>groupings.insert(grouping);</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grouping.clear();</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>group<sp/>lone<sp/>addrs<sp/>by<sp/>themselves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i]))</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address;</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[i].scriptPubKey,<sp/>address))</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grouping.insert(address);</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>groupings.insert(grouping);</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grouping.clear();</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;<sp/>set&lt;CTxDestination&gt;*<sp/>&gt;<sp/>uniqueGroupings;<sp/></highlight><highlight class="comment">//<sp/>a<sp/>set<sp/>of<sp/>pointers<sp/>to<sp/>groups<sp/>of<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;<sp/>CTxDestination,<sp/>set&lt;CTxDestination&gt;*<sp/>&gt;<sp/>setmap;<sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>addresses<sp/>to<sp/>the<sp/>unique<sp/>group<sp/>containing<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(set&lt;CTxDestination&gt;<sp/>grouping,<sp/>groupings)</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>a<sp/>set<sp/>of<sp/>all<sp/>the<sp/>groups<sp/>hit<sp/>by<sp/>this<sp/>new<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;<sp/>set&lt;CTxDestination&gt;*<sp/>&gt;<sp/>hits;</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;<sp/>CTxDestination,<sp/>set&lt;CTxDestination&gt;*<sp/>&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address,<sp/>grouping)</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((it<sp/>=<sp/>setmap.find(address))<sp/>!=<sp/>setmap.end())</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hits.insert((*it).second);</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"></highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merge<sp/>all<sp/>hit<sp/>groups<sp/>into<sp/>a<sp/>new<sp/>single<sp/>group<sp/>and<sp/>delete<sp/>old<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;CTxDestination&gt;*<sp/>merged<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>set&lt;CTxDestination&gt;(grouping);</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(set&lt;CTxDestination&gt;*<sp/>hit,<sp/>hits)</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged-&gt;insert(hit-&gt;begin(),<sp/>hit-&gt;end());</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniqueGroupings.erase(hit);</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>hit;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniqueGroupings.insert(merged);</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"></highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>setmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>element,<sp/>*merged)</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setmap[element]<sp/>=<sp/>merged;</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;<sp/>set&lt;CTxDestination&gt;<sp/>&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(set&lt;CTxDestination&gt;*<sp/>uniqueGrouping,<sp/>uniqueGroupings)</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.insert(*uniqueGrouping);</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>uniqueGrouping;</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"></highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="4592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"></highlight></codeline>
<codeline lineno="4594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ppcoin:<sp/>check<sp/>&apos;spent&apos;<sp/>consistency<sp/>between<sp/>wallet<sp/>and<sp/>txindex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4595"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ppcoin:<sp/>fix<sp/>wallet<sp/>spent<sp/>state<sp/>according<sp/>to<sp/>txindex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4596" refid="class_c_wallet_1aa1e6f8f54b36ae7ec11f567a59a99aa3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1aa1e6f8f54b36ae7ec11f567a59a99aa3" kindref="member">CWallet::FixSpentCoins</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nMismatchFound,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nBalanceInQuestion,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCheckOnly)</highlight></codeline>
<codeline lineno="4597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/>nMismatchFound<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>nBalanceInQuestion<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;CWalletTx*&gt;<sp/>vCoins;</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/>vCoins.reserve(mapWallet.size());</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;uint256,<sp/>CWalletTx&gt;::iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>++it)</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoins.push_back(&amp;(*it).second);</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"></highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref><sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>*<sp/>pcoin,<sp/>vCoins)</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>corresponding<sp/>transaction<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref><sp/>txindex;</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!txdb.<ref refid="class_c_tx_d_b_1a8a138e5dcc3ef98991abaa16eaa8ddeb" kindref="member">ReadTxIndex</ref>(pcoin-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>(),<sp/>txindex))</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;<sp/>n<sp/>&lt;<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size();<sp/>n++)</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[n])<sp/>&amp;&amp;<sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(n)<sp/>&amp;&amp;<sp/>(txindex.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>.size()<sp/>&lt;=<sp/>n<sp/>||<sp/>txindex.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>[n].IsNull()))</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;FixSpentCoins<sp/>found<sp/>lost<sp/>coin<sp/>%s<sp/>DRKSLK<sp/>%s[%d],<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[n].nValue),<sp/>pcoin-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>n,<sp/>fCheckOnly?<sp/></highlight><highlight class="stringliteral">&quot;repair<sp/>not<sp/>attempted&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;repairing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMismatchFound++;</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBalanceInQuestion<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[n].nValue;</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fCheckOnly)</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1a15588d9e12497ec4c10a53ab629fa244" kindref="member">MarkUnspent</ref>(n);</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1ada0e71d717dd360faf047de54eef4942" kindref="member">WriteToDisk</ref>();</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[n])<sp/>&amp;&amp;<sp/>!pcoin-&gt;<ref refid="class_c_wallet_tx_1a8873e2d46e0b130dea759af55b83a06c" kindref="member">IsSpent</ref>(n)<sp/>&amp;&amp;<sp/>(txindex.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>.size()<sp/>&gt;<sp/>n<sp/>&amp;&amp;<sp/>!txindex.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>[n].IsNull()))</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;FixSpentCoins<sp/>found<sp/>spent<sp/>coin<sp/>%s<sp/>DRKSLK<sp/>%s[%d],<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" kindref="member">FormatMoney</ref>(pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[n].nValue),<sp/>pcoin-&gt;<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/>n,<sp/>fCheckOnly?<sp/></highlight><highlight class="stringliteral">&quot;repair<sp/>not<sp/>attempted&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;repairing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMismatchFound++;</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBalanceInQuestion<sp/>+=<sp/>pcoin-&gt;<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[n].nValue;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fCheckOnly)</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1af2fc13459e324ad2b3f7c9914d86e7c8" kindref="member">MarkSpent</ref>(n);</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcoin-&gt;<ref refid="class_c_wallet_tx_1ada0e71d717dd360faf047de54eef4942" kindref="member">WriteToDisk</ref>();</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"></highlight></codeline>
<codeline lineno="4644"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ppcoin:<sp/>disable<sp/>transaction<sp/>(only<sp/>for<sp/>coinstake)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4645" refid="class_c_wallet_1a1782cbf0771e3c5dc440cbfd421a97b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a1782cbf0771e3c5dc440cbfd421a97b2" kindref="member">CWallet::DisableTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx)</highlight></codeline>
<codeline lineno="4646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tx.<ref refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" kindref="member">IsCoinStake</ref>()<sp/>||<sp/>!IsFromMe(tx))</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>disconnecting<sp/>coinstake<sp/>requires<sp/>marking<sp/>input<sp/>unspent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>txin,<sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>)</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CWalletTx&gt;::iterator<sp/>mi<sp/>=<sp/>mapWallet.find(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>mapWallet.end())</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref>&amp;<sp/><ref refid="cache_8cc_1aabbd2f01bb8ec4a7a0128bce5f8cdb1b" kindref="member">prev</ref><sp/>=<sp/>(*mi).second;</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref><sp/>&lt;<sp/>prev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>&amp;&amp;<sp/><ref refid="script_8cpp_1adc59cf67d903c1ba1ef225561b85bfce" kindref="member">IsMine</ref>(prev.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>]))</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="class_c_wallet_tx_1a15588d9e12497ec4c10a53ab629fa244" kindref="member">MarkUnspent</ref>(txin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="class_c_wallet_tx_1ada0e71d717dd360faf047de54eef4942" kindref="member">WriteToDisk</ref>();</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"></highlight></codeline>
<codeline lineno="4666" refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" kindref="member">CReserveKey::GetReservedKey</ref>(<ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubkey)</highlight></codeline>
<codeline lineno="4667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_pool" kindref="compound">CKeyPool</ref><sp/>keypool;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwallet-&gt;ReserveKeyFromKeyPool(nIndex,<sp/>keypool);</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchPubKey<sp/>=<sp/>keypool.<ref refid="class_c_key_pool_1a937080a4cec1f2b138ebd200557c82b5" kindref="member">vchPubKey</ref>;</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwallet-&gt;vchDefaultKey.IsValid())<sp/>{</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CReserveKey::GetReservedKey():<sp/>Warning:<sp/>Using<sp/>default<sp/>key<sp/>instead<sp/>of<sp/>a<sp/>new<sp/>key,<sp/>top<sp/>up<sp/>your<sp/>keypool!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vchPubKey<sp/>=<sp/>pwallet-&gt;vchDefaultKey;</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vchPubKey.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>());</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/>pubkey<sp/>=<sp/>vchPubKey;</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"></highlight></codeline>
<codeline lineno="4687" refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_reserve_key_1a493d06f41ca9571f2a42c8581a3952d8" kindref="member">CReserveKey::KeepKey</ref>()</highlight></codeline>
<codeline lineno="4688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwallet-&gt;KeepKey(nIndex);</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/>nIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/>vchPubKey<sp/>=<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>();</highlight></codeline>
<codeline lineno="4693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"></highlight></codeline>
<codeline lineno="4695" refid="class_c_reserve_key_1af7b0a61f8c70c8146e42e82b4e227204" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_reserve_key_1af7b0a61f8c70c8146e42e82b4e227204" kindref="member">CReserveKey::ReturnKey</ref>()</highlight></codeline>
<codeline lineno="4696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwallet-&gt;ReturnKey(nIndex);</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/>nIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/>vchPubKey<sp/>=<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>();</highlight></codeline>
<codeline lineno="4701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"></highlight></codeline>
<codeline lineno="4703" refid="class_c_wallet_1afb9667058b54ae153b0897684ddb9f20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1afb9667058b54ae153b0897684ddb9f20" kindref="member">CWallet::GetAllReserveKeys</ref>(set&lt;CKeyID&gt;&amp;<sp/>setAddress)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4704"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/>setAddress.clear();</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"></highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_wallet_d_b" kindref="compound">CWalletDB</ref><sp/>walletdb(strWalletFile);</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"></highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>cs_wallet);</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>setKeyPool)</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_pool" kindref="compound">CKeyPool</ref><sp/>keypool;</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!walletdb.<ref refid="class_c_wallet_d_b_1a6a03927cf247314ccd9b285139de0bd1" kindref="member">ReadPool</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>keypool))</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;GetAllReserveKeyHashes()<sp/>:<sp/>read<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(keypool.<ref refid="class_c_key_pool_1a937080a4cec1f2b138ebd200557c82b5" kindref="member">vchPubKey</ref>.<ref refid="class_c_pub_key_1aad6f369d7972f2244466ca6db900c2a4" kindref="member">IsValid</ref>());</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>keyID<sp/>=<sp/>keypool.<ref refid="class_c_key_pool_1a937080a4cec1f2b138ebd200557c82b5" kindref="member">vchPubKey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HaveKey(keyID))</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;GetAllReserveKeyHashes()<sp/>:<sp/>unknown<sp/>key<sp/>in<sp/>key<sp/>pool&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAddress.insert(keyID);</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"></highlight></codeline>
<codeline lineno="4723" refid="class_c_wallet_1a96a5b2321f27270c5959bc697cca9c9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a96a5b2321f27270c5959bc697cca9c9a" kindref="member">CWallet::UpdatedTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hashTx)</highlight></codeline>
<codeline lineno="4724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_wallet);</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>notify<sp/>UI<sp/>if<sp/>this<sp/>transaction<sp/>is<sp/>in<sp/>this<sp/>wallet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>mi<sp/>=<sp/>mapWallet.find(hashTx);</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mi<sp/>!=<sp/>mapWallet.end()){</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NotifyTransactionChanged(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>hashTx,<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969a5ab4035117df6ed11f4f5cd2f2d732e5" kindref="member">CT_UPDATED</ref>);</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"></highlight></codeline>
<codeline lineno="4737" refid="class_c_wallet_1a2be3aa26d84c79bdcabb41c6b3fe0e0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a2be3aa26d84c79bdcabb41c6b3fe0e0f" kindref="member">CWallet::LockCoin</ref>(<ref refid="class_c_out_point" kindref="compound">COutPoint</ref>&amp;<sp/>output)</highlight></codeline>
<codeline lineno="4738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>setLockedCoins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/>setLockedCoins.insert(output);</highlight></codeline>
<codeline lineno="4741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"></highlight></codeline>
<codeline lineno="4743" refid="class_c_wallet_1abd60f5b890e2c62c05c6a2de6322197f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1abd60f5b890e2c62c05c6a2de6322197f" kindref="member">CWallet::UnlockCoin</ref>(<ref refid="class_c_out_point" kindref="compound">COutPoint</ref>&amp;<sp/>output)</highlight></codeline>
<codeline lineno="4744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>setLockedCoins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/>setLockedCoins.erase(output);</highlight></codeline>
<codeline lineno="4747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"></highlight></codeline>
<codeline lineno="4749" refid="class_c_wallet_1ab51d80d53bc30799dd6888868a553963" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ab51d80d53bc30799dd6888868a553963" kindref="member">CWallet::UnlockAllCoins</ref>()</highlight></codeline>
<codeline lineno="4750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>setLockedCoins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/>setLockedCoins.clear();</highlight></codeline>
<codeline lineno="4753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"></highlight></codeline>
<codeline lineno="4755" refid="class_c_wallet_1ab85a2574c33ca0f19da06b065d7f1eb5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1ab85a2574c33ca0f19da06b065d7f1eb5" kindref="member">CWallet::IsLockedCoin</ref>(<ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4756"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>setLockedCoins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>outpt(hash,<sp/>n);</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"></highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(setLockedCoins.count(outpt)<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="4761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"></highlight></codeline>
<codeline lineno="4763" refid="class_c_wallet_1a41f4c77a0843692388f8b11d5fb88042" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a41f4c77a0843692388f8b11d5fb88042" kindref="member">CWallet::ListLockedCoins</ref>(std::vector&lt;COutPoint&gt;&amp;<sp/>vOutpts)</highlight></codeline>
<codeline lineno="4764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>setLockedCoins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::set&lt;COutPoint&gt;::iterator<sp/>it<sp/>=<sp/>setLockedCoins.begin();</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>setLockedCoins.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>outpt<sp/>=<sp/>(*it);</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vOutpts.push_back(outpt);</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"></highlight></codeline>
<codeline lineno="4773" refid="class_c_wallet_1a15a34ea53ce86d9f613693b09b74807f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_1a15a34ea53ce86d9f613693b09b74807f" kindref="member">CWallet::GetKeyBirthTimes</ref>(std::map&lt;CKeyID,<sp/>int64_t&gt;<sp/>&amp;mapKeyBirth)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" kindref="member">AssertLockHeld</ref>(cs_wallet);<sp/></highlight><highlight class="comment">//<sp/>mapKeyMetadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/>mapKeyBirth.clear();</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"></highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>birth<sp/>times<sp/>for<sp/>keys<sp/>with<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;CKeyID,<sp/>CKeyMetadata&gt;::const_iterator<sp/>it<sp/>=<sp/>mapKeyMetadata.begin();<sp/>it<sp/>!=<sp/>mapKeyMetadata.end();<sp/>it++)</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.nCreateTime)</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapKeyBirth[it-&gt;first]<sp/>=<sp/>it-&gt;second.nCreateTime;</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"></highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>in<sp/>which<sp/>we&apos;ll<sp/>infer<sp/>heights<sp/>of<sp/>other<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref><sp/>*pindexMax<sp/>=<sp/><ref refid="chain_8h_1ade250148b45238c340427a491d210d0a" kindref="member">FindBlockByHeight</ref>(std::max(0,<sp/><ref refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref><sp/>-<sp/>144));<sp/></highlight><highlight class="comment">//<sp/>the<sp/>tip<sp/>can<sp/>be<sp/>reorganised;<sp/>use<sp/>a<sp/>144-block<sp/>safety<sp/>margin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;CKeyID,<sp/>CBlockIndex*&gt;<sp/>mapKeyFirstBlock;</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;CKeyID&gt;<sp/>setKeys;</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/>GetKeys(setKeys);</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>&amp;keyid,<sp/>setKeys)<sp/>{</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapKeyBirth.count(keyid)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapKeyFirstBlock[keyid]<sp/>=<sp/>pindexMax;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/>setKeys.clear();</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>no<sp/>such<sp/>keys,<sp/>we&apos;re<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapKeyFirstBlock.empty())</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"></highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>first<sp/>block<sp/>that<sp/>affects<sp/>those<sp/>keys,<sp/>if<sp/>there<sp/>are<sp/>any<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CKeyID&gt;<sp/>vAffected;</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;uint256,<sp/>CWalletTx&gt;::const_iterator<sp/>it<sp/>=<sp/>mapWallet.begin();<sp/>it<sp/>!=<sp/>mapWallet.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>over<sp/>all<sp/>wallet<sp/>transactions...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_tx" kindref="compound">CWalletTx</ref><sp/>&amp;wtx<sp/>=<sp/>(*it).second;</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CBlockIndex*&gt;::const_iterator<sp/>blit<sp/>=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.find(wtx.<ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref>);</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blit<sp/>!=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.end()<sp/>&amp;&amp;<sp/>blit-&gt;second-&gt;IsInMainChain())<sp/>{</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>which<sp/>are<sp/>already<sp/>in<sp/>a<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight<sp/>=<sp/>blit-&gt;second-&gt;nHeight;</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>&amp;txout,<sp/>wtx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>over<sp/>all<sp/>their<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8cpp_1a6fdfbffeb1b228641e57ed316c0208cf" kindref="member">::ExtractAffectedKeys</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>,<sp/>vAffected);</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_key_i_d" kindref="compound">CKeyID</ref><sp/>&amp;keyid,<sp/>vAffected)<sp/>{</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>and<sp/>all<sp/>their<sp/>affected<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;CKeyID,<sp/>CBlockIndex*&gt;::iterator<sp/>rit<sp/>=<sp/>mapKeyFirstBlock.find(keyid);</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rit<sp/>!=<sp/>mapKeyFirstBlock.end()<sp/>&amp;&amp;<sp/>nHeight<sp/>&lt;<sp/>rit-&gt;second-&gt;nHeight)</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rit-&gt;second<sp/>=<sp/>blit-&gt;second;</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vAffected.clear();</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"></highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>block<sp/>timestamps<sp/>for<sp/>those<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;CKeyID,<sp/>CBlockIndex*&gt;::const_iterator<sp/>it<sp/>=<sp/>mapKeyFirstBlock.begin();<sp/>it<sp/>!=<sp/>mapKeyFirstBlock.end();<sp/>it++)</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapKeyBirth[it-&gt;first]<sp/>=<sp/>it-&gt;second-&gt;nTime<sp/>-<sp/>7200;<sp/></highlight><highlight class="comment">//<sp/>block<sp/>times<sp/>can<sp/>be<sp/>2h<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4823"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/wallet.cpp"/>
  </compounddef>
</doxygen>
