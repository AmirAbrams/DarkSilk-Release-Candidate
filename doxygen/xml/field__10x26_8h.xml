<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="field__10x26_8h" kind="file" language="C++">
    <compoundname>field_10x26.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <incdepgraph>
      <node id="22388">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="22387">
        <label>/home/dev/ds-160209/src/secp256k1/src/field_10x26.h</label>
        <link refid="field_10x26.h"/>
        <childnode refid="22388" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structsecp256k1__fe" prot="public">secp256k1_fe</innerclass>
    <innerclass refid="structsecp256k1__fe__storage" prot="public">secp256k1_fe_storage</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="field__10x26_8h_1ada11f3eca644a2310ab658a0146dbd5d" prot="public" static="no">
        <name>SECP256K1_FE_CONST_INNER</name>
        <param><defname>d7</defname></param>
        <param><defname>d6</defname></param>
        <param><defname>d5</defname></param>
        <param><defname>d4</defname></param>
        <param><defname>d3</defname></param>
        <param><defname>d2</defname></param>
        <param><defname>d1</defname></param>
        <param><defname>d0</defname></param>
        <initializer>{ \
    (d0) &amp; 0x3FFFFFFUL, \
    (((uint32_t)d0) &gt;&gt; 26) | (((uint32_t)(d1) &amp; 0xFFFFFUL) &lt;&lt; 6), \
    (((uint32_t)d1) &gt;&gt; 20) | (((uint32_t)(d2) &amp; 0x3FFFUL) &lt;&lt; 12), \
    (((uint32_t)d2) &gt;&gt; 14) | (((uint32_t)(d3) &amp; 0xFFUL) &lt;&lt; 18), \
    (((uint32_t)d3) &gt;&gt; 8) | (((uint32_t)(d4) &amp; 0x3UL) &lt;&lt; 24), \
    (((uint32_t)d4) &gt;&gt; 2) &amp; 0x3FFFFFFUL, \
    (((uint32_t)d4) &gt;&gt; 28) | (((uint32_t)(d5) &amp; 0x3FFFFFUL) &lt;&lt; 4), \
    (((uint32_t)d5) &gt;&gt; 22) | (((uint32_t)(d6) &amp; 0xFFFFUL) &lt;&lt; 10), \
    (((uint32_t)d6) &gt;&gt; 16) | (((uint32_t)(d7) &amp; 0x3FFUL) &lt;&lt; 16), \
    (((uint32_t)d7) &gt;&gt; 10) \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/field_10x26.h" line="22" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/field_10x26.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="field__10x26_8h_1a8c00ba3d97ea0d9b0d461463e890de15" prot="public" static="no">
        <name>SECP256K1_FE_CONST</name>
        <param><defname>d7</defname></param>
        <param><defname>d6</defname></param>
        <param><defname>d5</defname></param>
        <param><defname>d4</defname></param>
        <param><defname>d3</defname></param>
        <param><defname>d2</defname></param>
        <param><defname>d1</defname></param>
        <param><defname>d0</defname></param>
        <initializer>{<ref refid="field__5x52_8h_1ada11f3eca644a2310ab658a0146dbd5d" kindref="member">SECP256K1_FE_CONST_INNER</ref>((d7), (d6), (d5), (d4), (d3), (d2), (d1), (d0))}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/field_10x26.h" line="38" column="10" bodyfile="/home/dev/ds-160209/src/secp256k1/src/field_10x26.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="field__10x26_8h_1ae6927483c41044bd04e5f8efb42f53ba" prot="public" static="no">
        <name>SECP256K1_FE_STORAGE_CONST</name>
        <param><defname>d7</defname></param>
        <param><defname>d6</defname></param>
        <param><defname>d5</defname></param>
        <param><defname>d4</defname></param>
        <param><defname>d3</defname></param>
        <param><defname>d2</defname></param>
        <param><defname>d1</defname></param>
        <param><defname>d0</defname></param>
        <initializer>{{ (d0), (d1), (d2), (d3), (d4), (d5), (d6), (d7) }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/field_10x26.h" line="45" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/field_10x26.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="field__10x26_8h_1a07b67ff641d5db9df0691b14cdc29584" prot="public" static="no">
        <name>SECP256K1_FE_STORAGE_CONST_GET</name>
        <param><defname>d</defname></param>
        <initializer>d.n[7], d.n[6], d.n[5], d.n[4],d.n[3], d.n[2], d.n[1], d.n[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/field_10x26.h" line="46" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/field_10x26.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013,<sp/>2014<sp/>Pieter<sp/>Wuille<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SECP256K1_FIELD_REPR_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SECP256K1_FIELD_REPR_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structsecp256k1__fe" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>X<sp/>=<sp/>sum(i=0..9,<sp/>elem[i]*2^26)<sp/>mod<sp/>n<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="structsecp256k1__fe_1a4e7c00a989d1da635e7ffd33105d62df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>n[10];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>magnitude;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normalized;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">}<sp/><ref refid="structsecp256k1__fe" kindref="compound">secp256k1_fe</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Unpacks<sp/>a<sp/>constant<sp/>into<sp/>a<sp/>overlapping<sp/>multi-limbed<sp/>FE<sp/>element.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="field__10x26_8h_1ada11f3eca644a2310ab658a0146dbd5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_FE_CONST_INNER(d7,<sp/>d6,<sp/>d5,<sp/>d4,<sp/>d3,<sp/>d2,<sp/>d1,<sp/>d0)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(d0)<sp/>&amp;<sp/>0x3FFFFFFUL,<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((uint32_t)d0)<sp/>&gt;&gt;<sp/>26)<sp/>|<sp/>(((uint32_t)(d1)<sp/>&amp;<sp/>0xFFFFFUL)<sp/>&lt;&lt;<sp/>6),<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((uint32_t)d1)<sp/>&gt;&gt;<sp/>20)<sp/>|<sp/>(((uint32_t)(d2)<sp/>&amp;<sp/>0x3FFFUL)<sp/>&lt;&lt;<sp/>12),<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((uint32_t)d2)<sp/>&gt;&gt;<sp/>14)<sp/>|<sp/>(((uint32_t)(d3)<sp/>&amp;<sp/>0xFFUL)<sp/>&lt;&lt;<sp/>18),<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((uint32_t)d3)<sp/>&gt;&gt;<sp/>8)<sp/>|<sp/>(((uint32_t)(d4)<sp/>&amp;<sp/>0x3UL)<sp/>&lt;&lt;<sp/>24),<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((uint32_t)d4)<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0x3FFFFFFUL,<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((uint32_t)d4)<sp/>&gt;&gt;<sp/>28)<sp/>|<sp/>(((uint32_t)(d5)<sp/>&amp;<sp/>0x3FFFFFUL)<sp/>&lt;&lt;<sp/>4),<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((uint32_t)d5)<sp/>&gt;&gt;<sp/>22)<sp/>|<sp/>(((uint32_t)(d6)<sp/>&amp;<sp/>0xFFFFUL)<sp/>&lt;&lt;<sp/>10),<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((uint32_t)d6)<sp/>&gt;&gt;<sp/>16)<sp/>|<sp/>(((uint32_t)(d7)<sp/>&amp;<sp/>0x3FFUL)<sp/>&lt;&lt;<sp/>16),<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((uint32_t)d7)<sp/>&gt;&gt;<sp/>10)<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_FE_CONST(d7,<sp/>d6,<sp/>d5,<sp/>d4,<sp/>d3,<sp/>d2,<sp/>d1,<sp/>d0)<sp/>{SECP256K1_FE_CONST_INNER((d7),<sp/>(d6),<sp/>(d5),<sp/>(d4),<sp/>(d3),<sp/>(d2),<sp/>(d1),<sp/>(d0)),<sp/>1,<sp/>1}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="field__10x26_8h_1a8c00ba3d97ea0d9b0d461463e890de15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_FE_CONST(d7,<sp/>d6,<sp/>d5,<sp/>d4,<sp/>d3,<sp/>d2,<sp/>d1,<sp/>d0)<sp/>{SECP256K1_FE_CONST_INNER((d7),<sp/>(d6),<sp/>(d5),<sp/>(d4),<sp/>(d3),<sp/>(d2),<sp/>(d1),<sp/>(d0))}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structsecp256k1__fe__storage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42" refid="structsecp256k1__fe__storage_1a63f0548b6674a57ab1d2c6271008c037" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>n[8];</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/><ref refid="structsecp256k1__fe__storage" kindref="compound">secp256k1_fe_storage</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="field__10x26_8h_1ae6927483c41044bd04e5f8efb42f53ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_FE_STORAGE_CONST(d7,<sp/>d6,<sp/>d5,<sp/>d4,<sp/>d3,<sp/>d2,<sp/>d1,<sp/>d0)<sp/>{{<sp/>(d0),<sp/>(d1),<sp/>(d2),<sp/>(d3),<sp/>(d4),<sp/>(d5),<sp/>(d6),<sp/>(d7)<sp/>}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="field__10x26_8h_1a07b67ff641d5db9df0691b14cdc29584" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_FE_STORAGE_CONST_GET(d)<sp/>d.n[7],<sp/>d.n[6],<sp/>d.n[5],<sp/>d.n[4],d.n[3],<sp/>d.n[2],<sp/>d.n[1],<sp/>d.n[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/field_10x26.h"/>
  </compounddef>
</doxygen>
