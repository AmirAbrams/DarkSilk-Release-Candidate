<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="darksilkd_8cpp" kind="file" language="C++">
    <compoundname>darksilkd.cpp</compoundname>
    <includes refid="rpcserver_8h" local="yes">rpcserver.h</includes>
    <includes refid="rpcclient_8h" local="yes">rpcclient.h</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <includes local="no">boost/algorithm/string/predicate.hpp</includes>
    <incdepgraph>
      <node id="33975">
        <label>list</label>
      </node>
      <node id="33955">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="33970">
        <label>netinet/in.h</label>
      </node>
      <node id="33938">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="33939" relation="include">
        </childnode>
        <childnode refid="33953" relation="include">
        </childnode>
        <childnode refid="33940" relation="include">
        </childnode>
      </node>
      <node id="33971">
        <label>arpa/inet.h</label>
      </node>
      <node id="33997">
        <label>iomanip</label>
      </node>
      <node id="33989">
        <label>boost/version.hpp</label>
      </node>
      <node id="33984">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="33945">
        <label>limits</label>
      </node>
      <node id="33999">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="33990">
        <label>boost/spirit/core.hpp</label>
      </node>
      <node id="33962">
        <label>assert.h</label>
      </node>
      <node id="33950">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="33969">
        <label>net/if.h</label>
      </node>
      <node id="33936">
        <label>/home/dev/ds-160209/src/darksilkd.cpp</label>
        <link refid="darksilkd.cpp"/>
        <childnode refid="33937" relation="include">
        </childnode>
        <childnode refid="33998" relation="include">
        </childnode>
        <childnode refid="33999" relation="include">
        </childnode>
        <childnode refid="34000" relation="include">
        </childnode>
      </node>
      <node id="33959">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="33960" relation="include">
        </childnode>
        <childnode refid="33940" relation="include">
        </childnode>
      </node>
      <node id="33956">
        <label>sys/mman.h</label>
      </node>
      <node id="33953">
        <label>stdlib.h</label>
      </node>
      <node id="33986">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="33940" relation="include">
        </childnode>
      </node>
      <node id="33994">
        <label>boost/spirit/iterator/position_iterator.hpp</label>
      </node>
      <node id="33965">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="33966" relation="include">
        </childnode>
        <childnode refid="33956" relation="include">
        </childnode>
        <childnode refid="33967" relation="include">
        </childnode>
        <childnode refid="33968" relation="include">
        </childnode>
        <childnode refid="33969" relation="include">
        </childnode>
        <childnode refid="33970" relation="include">
        </childnode>
        <childnode refid="33971" relation="include">
        </childnode>
        <childnode refid="33972" relation="include">
        </childnode>
        <childnode refid="33957" relation="include">
        </childnode>
        <childnode refid="33973" relation="include">
        </childnode>
        <childnode refid="33958" relation="include">
        </childnode>
        <childnode refid="33974" relation="include">
        </childnode>
      </node>
      <node id="33974">
        <label>errno.h</label>
      </node>
      <node id="33944">
        <label>cassert</label>
      </node>
      <node id="33963">
        <label>stdexcept</label>
      </node>
      <node id="33995">
        <label>json/json_spirit_utils.h</label>
        <link refid="json__spirit__utils_8h"/>
        <childnode refid="33981" relation="include">
        </childnode>
        <childnode refid="33942" relation="include">
        </childnode>
      </node>
      <node id="33940">
        <label>string</label>
      </node>
      <node id="33998">
        <label>rpcclient.h</label>
        <link refid="rpcclient_8h"/>
        <childnode refid="33980" relation="include">
        </childnode>
        <childnode refid="33995" relation="include">
        </childnode>
        <childnode refid="33996" relation="include">
        </childnode>
      </node>
      <node id="33942">
        <label>map</label>
      </node>
      <node id="33977">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="33980">
        <label>json/json_spirit_reader_template.h</label>
        <link refid="json__spirit__reader__template_8h"/>
        <childnode refid="33981" relation="include">
        </childnode>
        <childnode refid="33986" relation="include">
        </childnode>
        <childnode refid="33987" relation="include">
        </childnode>
        <childnode refid="33988" relation="include">
        </childnode>
        <childnode refid="33989" relation="include">
        </childnode>
        <childnode refid="33990" relation="include">
        </childnode>
        <childnode refid="33991" relation="include">
        </childnode>
        <childnode refid="33992" relation="include">
        </childnode>
        <childnode refid="33993" relation="include">
        </childnode>
        <childnode refid="33994" relation="include">
        </childnode>
      </node>
      <node id="33985">
        <label>boost/variant.hpp</label>
      </node>
      <node id="33976">
        <label>boost/iostreams/concepts.hpp</label>
      </node>
      <node id="33973">
        <label>netdb.h</label>
      </node>
      <node id="33966">
        <label>sys/fcntl.h</label>
      </node>
      <node id="34000">
        <label>boost/algorithm/string/predicate.hpp</label>
      </node>
      <node id="33988">
        <label>boost/function.hpp</label>
      </node>
      <node id="33939">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="33940" relation="include">
        </childnode>
        <childnode refid="33941" relation="include">
        </childnode>
        <childnode refid="33942" relation="include">
        </childnode>
        <childnode refid="33943" relation="include">
        </childnode>
        <childnode refid="33944" relation="include">
        </childnode>
        <childnode refid="33945" relation="include">
        </childnode>
        <childnode refid="33946" relation="include">
        </childnode>
        <childnode refid="33947" relation="include">
        </childnode>
        <childnode refid="33948" relation="include">
        </childnode>
        <childnode refid="33949" relation="include">
        </childnode>
        <childnode refid="33950" relation="include">
        </childnode>
        <childnode refid="33951" relation="include">
        </childnode>
        <childnode refid="33959" relation="include">
        </childnode>
      </node>
      <node id="33957">
        <label>limits.h</label>
      </node>
      <node id="33978">
        <label>boost/asio.hpp</label>
      </node>
      <node id="33979">
        <label>boost/asio/ssl.hpp</label>
      </node>
      <node id="33972">
        <label>ifaddrs.h</label>
      </node>
      <node id="33968">
        <label>sys/types.h</label>
      </node>
      <node id="33954">
        <label>string.h</label>
      </node>
      <node id="33960">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="33948">
        <label>cstdio</label>
      </node>
      <node id="33949">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="33958">
        <label>unistd.h</label>
      </node>
      <node id="33941">
        <label>vector</label>
      </node>
      <node id="33964">
        <label>rpcprotocol.h</label>
        <link refid="rpcprotocol_8h"/>
        <childnode refid="33965" relation="include">
        </childnode>
        <childnode refid="33975" relation="include">
        </childnode>
        <childnode refid="33942" relation="include">
        </childnode>
        <childnode refid="33946" relation="include">
        </childnode>
        <childnode refid="33940" relation="include">
        </childnode>
        <childnode refid="33976" relation="include">
        </childnode>
        <childnode refid="33977" relation="include">
        </childnode>
        <childnode refid="33978" relation="include">
        </childnode>
        <childnode refid="33979" relation="include">
        </childnode>
        <childnode refid="33980" relation="include">
        </childnode>
        <childnode refid="33995" relation="include">
        </childnode>
        <childnode refid="33996" relation="include">
        </childnode>
      </node>
      <node id="33996">
        <label>json/json_spirit_writer_template.h</label>
        <link refid="json__spirit__writer__template_8h"/>
        <childnode refid="33981" relation="include">
        </childnode>
        <childnode refid="33944" relation="include">
        </childnode>
        <childnode refid="33982" relation="include">
        </childnode>
        <childnode refid="33997" relation="include">
        </childnode>
      </node>
      <node id="33992">
        <label>boost/spirit/utility/escape_char.hpp</label>
      </node>
      <node id="33982">
        <label>sstream</label>
      </node>
      <node id="33946">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="33937">
        <label>rpcserver.h</label>
        <link refid="rpcserver_8h"/>
        <childnode refid="33938" relation="include">
        </childnode>
        <childnode refid="33961" relation="include">
        </childnode>
        <childnode refid="33964" relation="include">
        </childnode>
        <childnode refid="33975" relation="include">
        </childnode>
        <childnode refid="33942" relation="include">
        </childnode>
      </node>
      <node id="33961">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="33962" relation="include">
        </childnode>
        <childnode refid="33947" relation="include">
        </childnode>
        <childnode refid="33963" relation="include">
        </childnode>
        <childnode refid="33946" relation="include">
        </childnode>
        <childnode refid="33940" relation="include">
        </childnode>
        <childnode refid="33941" relation="include">
        </childnode>
      </node>
      <node id="33987">
        <label>boost/bind.hpp</label>
      </node>
      <node id="33983">
        <label>boost/config.hpp</label>
      </node>
      <node id="33967">
        <label>sys/socket.h</label>
      </node>
      <node id="33981">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="33941" relation="include">
        </childnode>
        <childnode refid="33942" relation="include">
        </childnode>
        <childnode refid="33940" relation="include">
        </childnode>
        <childnode refid="33944" relation="include">
        </childnode>
        <childnode refid="33982" relation="include">
        </childnode>
        <childnode refid="33963" relation="include">
        </childnode>
        <childnode refid="33946" relation="include">
        </childnode>
        <childnode refid="33983" relation="include">
        </childnode>
        <childnode refid="33984" relation="include">
        </childnode>
        <childnode refid="33985" relation="include">
        </childnode>
      </node>
      <node id="33951">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="33952" relation="include">
        </childnode>
        <childnode refid="33954" relation="include">
        </childnode>
        <childnode refid="33940" relation="include">
        </childnode>
        <childnode refid="33955" relation="include">
        </childnode>
        <childnode refid="33942" relation="include">
        </childnode>
        <childnode refid="33956" relation="include">
        </childnode>
        <childnode refid="33957" relation="include">
        </childnode>
        <childnode refid="33958" relation="include">
        </childnode>
      </node>
      <node id="33993">
        <label>boost/spirit/iterator/multi_pass.hpp</label>
      </node>
      <node id="33943">
        <label>set</label>
      </node>
      <node id="33952">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="33953" relation="include">
        </childnode>
      </node>
      <node id="33947">
        <label>cstring</label>
      </node>
      <node id="33991">
        <label>boost/spirit/utility/confix.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="darksilkd_8cpp_1a5df2572fe4f34c55eef6c97762097f6f" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool fDaemon</definition>
        <argsstring></argsstring>
        <name>fDaemon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/darksilkd.cpp" line="12" column="1" bodyfile="/home/dev/ds-160209/src/darksilkd.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="darksilkd_8cpp_1ab68baad9d16aab4c1dcdda691a8bf18f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectShutdownThread</definition>
        <argsstring>(boost::thread_group *threadGroup)</argsstring>
        <name>DetectShutdownThread</name>
        <param>
          <type>boost::thread_group *</type>
          <declname>threadGroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/darksilkd.cpp" line="14" column="1" bodyfile="/home/dev/ds-160209/src/darksilkd.cpp" bodystart="14" bodyend="28"/>
        <references refid="init_8cpp_1a6f201ca9fe6b594f1985c12b4482ea5a" compoundref="init_8cpp" startline="125" endline="128">ShutdownRequested</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AppInit</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>AppInit</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/darksilkd.cpp" line="34" column="1" bodyfile="/home/dev/ds-160209/src/darksilkd.cpp" bodystart="34" bodyend="140"/>
        <references refid="util_8cpp_1a4cfc6f116964c12bc24442828c2da007" compoundref="util_8cpp" startline="491" endline="534">ParseParameters</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="init_8cpp_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</references>
        <references refid="util_8cpp_1a27ba417174a3ee63cb8ee1abb279a668" compoundref="util_8cpp" startline="1212" endline="1243">ReadConfigFile</references>
        <references refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" compoundref="util_8cpp" startline="94">mapArgs</references>
        <references refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" compoundref="util_8cpp" startline="95">mapMultiArgs</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" compoundref="util_8cpp" startline="1393" endline="1396">FormatFullVersion</references>
        <references refid="init_8cpp_1a60c54061faf43bd9cca8ab8bfa38055a" compoundref="init_8cpp" startline="243" endline="353">HelpMessage</references>
        <references refid="util_8h_1ac0165e18ce3be89a2e0731e27d54b478" compoundref="util_8h" startline="411" endline="418">IsSwitchChar</references>
        <references refid="util_8cpp_1a71f0a1c395c717d77bdf878cb6ced96e" compoundref="util_8cpp" startline="103">fCommandLine</references>
        <references refid="chainparams_8cpp_1a8b1e95814ad8f7fbcd9dead5cae3783d" compoundref="chainparams_8cpp" startline="204" endline="214">SelectParamsFromCommandLine</references>
        <references refid="rpcclient_8cpp_1a4ee23259648a971c9c05aeff8b545a6d" compoundref="rpcclient_8cpp" startline="232" endline="295">CommandLineRPC</references>
        <references refid="util_8cpp_1a5df2572fe4f34c55eef6c97762097f6f" compoundref="util_8cpp" startline="101">fDaemon</references>
        <references refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" compoundref="util_8cpp" startline="550" endline="559">GetBoolArg</references>
        <references refid="util_8cpp_1a0ec1d8fc76760232b016335fdcf7c539" compoundref="util_8cpp" startline="1253" endline="1261">CreatePidFile</references>
        <references refid="util_8cpp_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" compoundref="util_8cpp" startline="1245" endline="1250">GetPidFile</references>
        <references refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" compoundref="util_8cpp" startline="569" endline="575">SoftSetBoolArg</references>
        <references refid="darksilkd_8cpp_1ab68baad9d16aab4c1dcdda691a8bf18f" compoundref="darksilkd_8cpp" startline="14" endline="28">DetectShutdownThread</references>
        <references refid="init_8cpp_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</references>
        <references refid="util_8cpp_1a379b2307f40ae5dba4dd56a0156fa36e" compoundref="util_8cpp" startline="1060" endline="1067">PrintException</references>
        <referencedby refid="darksilkd_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilkd_8cpp" startline="143" endline="156">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="darksilkd_8cpp_1ad4eab1820a36fab7debaa999ca082f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void noui_connect</definition>
        <argsstring>()</argsstring>
        <name>noui_connect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/darksilkd.cpp" line="142" column="1" bodyfile="/home/dev/ds-160209/src/noui.cpp" bodystart="45" bodyend="51"/>
        <references refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" compoundref="init_8cpp" startline="52">uiInterface</references>
        <references refid="class_c_client_u_i_interface_1ab3f23c730300df11cf9ff369fbae0635" compoundref="ui__interface_8h" startline="78">CClientUIInterface::ThreadSafeMessageBox</references>
        <references refid="class_c_client_u_i_interface_1a11db1bca5727c45f52714bc63108ce6a" compoundref="ui__interface_8h" startline="81">CClientUIInterface::ThreadSafeAskFee</references>
        <references refid="class_c_client_u_i_interface_1abc63cc3f3e5e15632f713d859dbc6bc2" compoundref="ui__interface_8h" startline="93">CClientUIInterface::InitMessage</references>
        <referencedby refid="darksilkd_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilkd_8cpp" startline="143" endline="156">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="darksilkd_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/darksilkd.cpp" line="143" column="1" bodyfile="/home/dev/ds-160209/src/darksilkd.cpp" bodystart="143" bodyend="156"/>
        <references refid="darksilkd_8cpp_1ad4eab1820a36fab7debaa999ca082f9d" compoundref="noui_8cpp" startline="45" endline="51">noui_connect</references>
        <references refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</references>
        <references refid="util_8cpp_1a5df2572fe4f34c55eef6c97762097f6f" compoundref="util_8cpp" startline="101">fDaemon</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rpcserver_8h" kindref="compound">rpcserver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rpcclient_8h" kindref="compound">rpcclient.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string/predicate.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a5df2572fe4f34c55eef6c97762097f6f" kindref="member">fDaemon</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="darksilkd_8cpp_1ab68baad9d16aab4c1dcdda691a8bf18f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="darksilkd_8cpp_1ab68baad9d16aab4c1dcdda691a8bf18f" kindref="member">DetectShutdownThread</ref>(boost::thread_group*<sp/>threadGroup)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fShutdown<sp/>=<sp/><ref refid="init_8cpp_1a6f201ca9fe6b594f1985c12b4482ea5a" kindref="member">ShutdownRequested</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>main<sp/>threads<sp/>to<sp/>shutdown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!fShutdown)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(200);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fShutdown<sp/>=<sp/><ref refid="init_8cpp_1a6f201ca9fe6b594f1985c12b4482ea5a" kindref="member">ShutdownRequested</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadGroup)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadGroup-&gt;interrupt_all();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadGroup-&gt;join_all();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" kindref="member">AppInit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::thread_group<sp/>threadGroup;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::thread*<sp/>detectShutdownThread<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fRet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Qt<sp/>is<sp/>used,<sp/>parameters/darksilk.conf<sp/>are<sp/>parsed<sp/>in<sp/>qt/darksilk.cpp&apos;s<sp/>main()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a4cfc6f116964c12bc24442828c2da007" kindref="member">ParseParameters</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!boost::filesystem::is_directory(<ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Specified<sp/>directory<sp/>does<sp/>not<sp/>exist\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" kindref="member">Shutdown</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a27ba417174a3ee63cb8ee1abb279a668" kindref="member">ReadConfigFile</ref>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>,<sp/><ref refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" kindref="member">mapMultiArgs</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;-?&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" kindref="member">mapArgs</ref>.count(</highlight><highlight class="stringliteral">&quot;--help&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>part<sp/>of<sp/>help<sp/>message<sp/>is<sp/>specific<sp/>to<sp/>darksilkd<sp/>/<sp/>RPC<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strUsage<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>version&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" kindref="member">FormatFullVersion</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Usage:&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>darksilkd<sp/>[options]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>darksilkd<sp/>[options]<sp/>&lt;command&gt;<sp/>[params]<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Send<sp/>command<sp/>to<sp/>-server<sp/>or<sp/>darksilkd&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>darksilkd<sp/>[options]<sp/>help<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;List<sp/>commands&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>darksilkd<sp/>[options]<sp/>help<sp/>&lt;command&gt;<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Get<sp/>help<sp/>for<sp/>a<sp/>command&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strUsage<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="init_8cpp_1a60c54061faf43bd9cca8ab8bfa38055a" kindref="member">HelpMessage</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>strUsage.c_str());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Command-line<sp/>RPC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8h_1ac0165e18ce3be89a2e0731e27d54b478" kindref="member">IsSwitchChar</ref>(argv[i][0])<sp/>&amp;&amp;<sp/>!boost::algorithm::istarts_with(argv[i],<sp/></highlight><highlight class="stringliteral">&quot;darksilk:&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a71f0a1c395c717d77bdf878cb6ced96e" kindref="member">fCommandLine</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a71f0a1c395c717d77bdf878cb6ced96e" kindref="member">fCommandLine</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="chainparams_8cpp_1a8b1e95814ad8f7fbcd9dead5cae3783d" kindref="member">SelectParamsFromCommandLine</ref>())<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>invalid<sp/>use<sp/>of<sp/>-testnet.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="rpcclient_8cpp_1a4ee23259648a971c9c05aeff8b545a6d" kindref="member">CommandLineRPC</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(ret);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a5df2572fe4f34c55eef6c97762097f6f" kindref="member">fDaemon</ref><sp/>=<sp/><ref refid="util_8cpp_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-daemon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a5df2572fe4f34c55eef6c97762097f6f" kindref="member">fDaemon</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;DarkSilk<sp/>server<sp/>starting\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Daemonize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_t<sp/>pid<sp/>=<sp/>fork();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>fork()<sp/>returned<sp/>%d<sp/>errno<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pid,<sp/>errno);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>Parent<sp/>process,<sp/>pid<sp/>is<sp/>child<sp/>process<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a0ec1d8fc76760232b016335fdcf7c539" kindref="member">CreatePidFile</ref>(<ref refid="util_8cpp_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" kindref="member">GetPidFile</ref>(),<sp/>pid);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Child<sp/>process<sp/>falls<sp/>through<sp/>to<sp/>rest<sp/>of<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_t<sp/>sid<sp/>=<sp/>setsid();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sid<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>setsid()<sp/>returned<sp/>%d<sp/>errno<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sid,<sp/>errno);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="stringliteral">&quot;-server&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detectShutdownThread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>boost::thread(boost::bind(&amp;<ref refid="darksilkd_8cpp_1ab68baad9d16aab4c1dcdda691a8bf18f" kindref="member">DetectShutdownThread</ref>,<sp/>&amp;threadGroup));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRet<sp/>=<sp/><ref refid="init_8cpp_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" kindref="member">AppInit2</ref>(threadGroup);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(&amp;e,<sp/></highlight><highlight class="stringliteral">&quot;AppInit()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(NULL,<sp/></highlight><highlight class="stringliteral">&quot;AppInit()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fRet)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detectShutdownThread)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detectShutdownThread-&gt;interrupt();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadGroup.interrupt_all();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>threadGroup.join_all();<sp/>was<sp/>left<sp/>out<sp/>intentionally<sp/>here,<sp/>because<sp/>we<sp/>didn&apos;t<sp/>re-test<sp/>all<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>startup-failure<sp/>cases<sp/>to<sp/>make<sp/>sure<sp/>they<sp/>don&apos;t<sp/>result<sp/>in<sp/>a<sp/>hang<sp/>due<sp/>to<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thread-blocking-waiting-for-another-thread-during-startup<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detectShutdownThread)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detectShutdownThread-&gt;join();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>detectShutdownThread;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detectShutdownThread<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" kindref="member">Shutdown</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fRet;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="darksilkd_8cpp_1ad4eab1820a36fab7debaa999ca082f9d" kindref="member">noui_connect</ref>();</highlight></codeline>
<codeline lineno="143" refid="darksilkd_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="darksilkd_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fRet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>darksilkd<sp/>signal<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="darksilkd_8cpp_1ad4eab1820a36fab7debaa999ca082f9d" kindref="member">noui_connect</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>fRet<sp/>=<sp/><ref refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" kindref="member">AppInit</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fRet<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1a5df2572fe4f34c55eef6c97762097f6f" kindref="member">fDaemon</ref>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fRet<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/darksilkd.cpp"/>
  </compounddef>
</doxygen>
