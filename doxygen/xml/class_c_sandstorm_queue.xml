<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_sandstorm_queue" kind="class" language="C++" prot="public">
    <compoundname>CSandstormQueue</compoundname>
    <includes refid="sandstorm_8h" local="no">sandstorm.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref></type>
        <definition>CTxIn CSandstormQueue::vin</definition>
        <argsstring></argsstring>
        <name>vin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="153" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CSandstormQueue::time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="154" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CSandstormQueue::nDenom</definition>
        <argsstring></argsstring>
        <name>nDenom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="155" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_queue_1a3a372c1d7da3e28a15c8c9e459fed163" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CSandstormQueue::ready</definition>
        <argsstring></argsstring>
        <name>ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="156" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_queue_1a3c1c68afe6fe851da5f14d3fa557e249" prot="public" static="no" mutable="no">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CSandstormQueue::vchSig</definition>
        <argsstring></argsstring>
        <name>vchSig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="157" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sandstorm_queue_1a6d484de91ef721e9ad136d58fba94a41" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CSandstormQueue::ADD_SERIALIZE_METHODS</definition>
        <argsstring></argsstring>
        <name>ADD_SERIALIZE_METHODS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="168" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_sandstorm_queue_1ab5252e860c7a8050dbd44d32b892f131" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CSandstormQueue::CSandstormQueue</definition>
        <argsstring>()</argsstring>
        <name>CSandstormQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="159" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="159" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_queue_1a9179d7339eb373473bc79c2ac1eb5e9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CSandstormQueue::SerializationOp</definition>
        <argsstring>(Stream &amp;s, Operation ser_action, int nType, int nVersion)</argsstring>
        <name>SerializationOp</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>ser_action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="171" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_queue_1a0e1739e9a0c517f0de35807c92db1256" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormQueue::GetAddress</definition>
        <argsstring>(CService &amp;addr)</argsstring>
        <name>GetAddress</name>
        <param>
          <type><ref refid="class_c_service" kindref="compound">CService</ref> &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="179" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="179" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_queue_1acaa6374baeb707ed1726ec60c67c1624" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormQueue::GetProtocolVersion</definition>
        <argsstring>(int &amp;protocolVersion)</argsstring>
        <name>GetProtocolVersion</name>
        <param>
          <type>int &amp;</type>
          <declname>protocolVersion</declname>
        </param>
        <briefdescription>
<para>Get the protocol version. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="191" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="191" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormQueue::Sign</definition>
        <argsstring>()</argsstring>
        <name>Sign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sign this Sandstorm transaction <simplesect kind="return"><para>true if all conditions are met: 1) we have an active Stormnode, 2) we have a valid Stormnode private key, 3) we signed the message successfully, and 4) we verified the message successfully </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="209" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2091" bodyend="2118"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_queue_1af5d648df81c6159c92f20d88af3974d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormQueue::Relay</definition>
        <argsstring>()</argsstring>
        <name>Relay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="211" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2120" bodyend="2130"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_queue_1a2b509d89f0a6c0d858a5e28bab2e2017" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormQueue::IsExpired</definition>
        <argsstring>()</argsstring>
        <name>IsExpired</name>
        <briefdescription>
<para>Is this Sandstorm expired? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="214" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sandstorm_queue_1a8ef2f37969599d3b30bbe479eff56460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandstormQueue::CheckSignature</definition>
        <argsstring>()</argsstring>
        <name>CheckSignature</name>
        <briefdescription>
<para>Check if we have a valid Stormnode address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="220" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2132" bodyend="2149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A currently inprogress Sandstorm merge and denomination information </para>    </detaileddescription>
    <collaborationgraph>
      <node id="777">
        <label>base_uint&lt; 256 &gt;</label>
        <link refid="classbase__uint"/>
      </node>
      <node id="772">
        <label>CTxIn</label>
        <link refid="class_c_tx_in"/>
        <childnode refid="773" relation="usage">
          <edgelabel>scriptSig</edgelabel>
          <edgelabel>prevPubKey</edgelabel>
        </childnode>
        <childnode refid="775" relation="usage">
          <edgelabel>prevout</edgelabel>
        </childnode>
      </node>
      <node id="776">
        <label>uint256</label>
        <link refid="classuint256"/>
        <childnode refid="777" relation="public-inheritance">
        </childnode>
      </node>
      <node id="775">
        <label>COutPoint</label>
        <link refid="class_c_out_point"/>
        <childnode refid="776" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="773">
        <label>CScript</label>
        <link refid="class_c_script"/>
        <childnode refid="774" relation="public-inheritance">
        </childnode>
      </node>
      <node id="774">
        <label>std::vector&lt; unsigned char &gt;</label>
      </node>
      <node id="771">
        <label>CSandstormQueue</label>
        <link refid="class_c_sandstorm_queue"/>
        <childnode refid="772" relation="usage">
          <edgelabel>vin</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/sandstorm.h" line="151" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="150" bodyend="222"/>
    <listofallmembers>
      <member refid="class_c_sandstorm_queue_1a6d484de91ef721e9ad136d58fba94a41" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>ADD_SERIALIZE_METHODS</name></member>
      <member refid="class_c_sandstorm_queue_1a8ef2f37969599d3b30bbe479eff56460" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>CheckSignature</name></member>
      <member refid="class_c_sandstorm_queue_1ab5252e860c7a8050dbd44d32b892f131" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>CSandstormQueue</name></member>
      <member refid="class_c_sandstorm_queue_1a0e1739e9a0c517f0de35807c92db1256" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>GetAddress</name></member>
      <member refid="class_c_sandstorm_queue_1acaa6374baeb707ed1726ec60c67c1624" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>GetProtocolVersion</name></member>
      <member refid="class_c_sandstorm_queue_1a2b509d89f0a6c0d858a5e28bab2e2017" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>IsExpired</name></member>
      <member refid="class_c_sandstorm_queue_1ab309d93e75dc503f0d9c8f44bc7e490a" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>nDenom</name></member>
      <member refid="class_c_sandstorm_queue_1a3a372c1d7da3e28a15c8c9e459fed163" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>ready</name></member>
      <member refid="class_c_sandstorm_queue_1af5d648df81c6159c92f20d88af3974d3" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>Relay</name></member>
      <member refid="class_c_sandstorm_queue_1a9179d7339eb373473bc79c2ac1eb5e9e" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>SerializationOp</name></member>
      <member refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>Sign</name></member>
      <member refid="class_c_sandstorm_queue_1a46297b8931f426f3069822fb952c6566" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>time</name></member>
      <member refid="class_c_sandstorm_queue_1a3c1c68afe6fe851da5f14d3fa557e249" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>vchSig</name></member>
      <member refid="class_c_sandstorm_queue_1a4c2e9dc92126c22f8c095577d0f8782e" prot="public" virt="non-virtual"><scope>CSandstormQueue</scope><name>vin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
