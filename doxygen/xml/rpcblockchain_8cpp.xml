<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="rpcblockchain_8cpp" kind="file" language="C++">
    <compoundname>rpcblockchain.cpp</compoundname>
    <includes refid="rpcserver_8h" local="yes">rpcserver.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="kernel_8h" local="yes">kernel.h</includes>
    <includes refid="checkpoints_8h" local="yes">checkpoints.h</includes>
    <includedby refid="statisticspage_8cpp" local="yes">/home/dev/ds-160209/src/qt/statisticspage.cpp</includedby>
    <incdepgraph>
      <node id="48570">
        <label>list</label>
      </node>
      <node id="48550">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="48648">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48646" relation="include">
        </childnode>
      </node>
      <node id="48565">
        <label>netinet/in.h</label>
      </node>
      <node id="48533">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48548" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
      </node>
      <node id="48566">
        <label>arpa/inet.h</label>
      </node>
      <node id="48632">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="48592">
        <label>iomanip</label>
      </node>
      <node id="48584">
        <label>boost/version.hpp</label>
      </node>
      <node id="48579">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="48540">
        <label>limits</label>
      </node>
      <node id="48604">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48548" relation="include">
        </childnode>
      </node>
      <node id="48605">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="48606" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48552" relation="include">
        </childnode>
      </node>
      <node id="48595">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="48533" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48596" relation="include">
        </childnode>
        <childnode refid="48597" relation="include">
        </childnode>
        <childnode refid="48629" relation="include">
        </childnode>
        <childnode refid="48627" relation="include">
        </childnode>
      </node>
      <node id="48597">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48598" relation="include">
        </childnode>
        <childnode refid="48580" relation="include">
        </childnode>
        <childnode refid="48599" relation="include">
        </childnode>
        <childnode refid="48608" relation="include">
        </childnode>
        <childnode refid="48610" relation="include">
        </childnode>
        <childnode refid="48626" relation="include">
        </childnode>
      </node>
      <node id="48625">
        <label>openssl/rand.h</label>
      </node>
      <node id="48585">
        <label>boost/spirit/core.hpp</label>
      </node>
      <node id="48557">
        <label>assert.h</label>
      </node>
      <node id="48545">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="48564">
        <label>net/if.h</label>
      </node>
      <node id="48664">
        <label>checkpoints.h</label>
        <link refid="checkpoints_8h"/>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
      </node>
      <node id="48594">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="48595" relation="include">
        </childnode>
        <childnode refid="48630" relation="include">
        </childnode>
        <childnode refid="48635" relation="include">
        </childnode>
        <childnode refid="48533" relation="include">
        </childnode>
        <childnode refid="48650" relation="include">
        </childnode>
      </node>
      <node id="48647">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="48606" relation="include">
        </childnode>
      </node>
      <node id="48634">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="48554">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="48555" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
      </node>
      <node id="48635">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="48636" relation="include">
        </childnode>
        <childnode refid="48594" relation="include">
        </childnode>
        <childnode refid="48557" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48598" relation="include">
        </childnode>
        <childnode refid="48649" relation="include">
        </childnode>
      </node>
      <node id="48551">
        <label>sys/mman.h</label>
      </node>
      <node id="48548">
        <label>stdlib.h</label>
      </node>
      <node id="48660">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="48661" relation="include">
        </childnode>
        <childnode refid="48610" relation="include">
        </childnode>
        <childnode refid="48658" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
        <childnode refid="48598" relation="include">
        </childnode>
      </node>
      <node id="48598">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="48624">
        <label>openssl/crypto.h</label>
      </node>
      <node id="48531">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain.cpp"/>
        <childnode refid="48532" relation="include">
        </childnode>
        <childnode refid="48593" relation="include">
        </childnode>
        <childnode refid="48663" relation="include">
        </childnode>
        <childnode refid="48664" relation="include">
        </childnode>
      </node>
      <node id="48581">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="48535" relation="include">
        </childnode>
      </node>
      <node id="48589">
        <label>boost/spirit/iterator/position_iterator.hpp</label>
      </node>
      <node id="48560">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="48561" relation="include">
        </childnode>
        <childnode refid="48551" relation="include">
        </childnode>
        <childnode refid="48562" relation="include">
        </childnode>
        <childnode refid="48563" relation="include">
        </childnode>
        <childnode refid="48564" relation="include">
        </childnode>
        <childnode refid="48565" relation="include">
        </childnode>
        <childnode refid="48566" relation="include">
        </childnode>
        <childnode refid="48567" relation="include">
        </childnode>
        <childnode refid="48552" relation="include">
        </childnode>
        <childnode refid="48568" relation="include">
        </childnode>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
      </node>
      <node id="48620">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="48601">
        <label>openssl/sha.h</label>
      </node>
      <node id="48569">
        <label>errno.h</label>
      </node>
      <node id="48539">
        <label>cassert</label>
      </node>
      <node id="48558">
        <label>stdexcept</label>
      </node>
      <node id="48610">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="48563" relation="include">
        </childnode>
        <childnode refid="48611" relation="include">
        </childnode>
        <childnode refid="48612" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48613" relation="include">
        </childnode>
        <childnode refid="48533" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48615" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48616" relation="include">
        </childnode>
        <childnode refid="48617" relation="include">
        </childnode>
        <childnode refid="48618" relation="include">
        </childnode>
        <childnode refid="48619" relation="include">
        </childnode>
        <childnode refid="48620" relation="include">
        </childnode>
        <childnode refid="48621" relation="include">
        </childnode>
        <childnode refid="48622" relation="include">
        </childnode>
        <childnode refid="48623" relation="include">
        </childnode>
        <childnode refid="48624" relation="include">
        </childnode>
        <childnode refid="48625" relation="include">
        </childnode>
        <childnode refid="48609" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
      </node>
      <node id="48657">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="48658" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48656" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
      </node>
      <node id="48590">
        <label>json/json_spirit_utils.h</label>
        <link refid="json__spirit__utils_8h"/>
        <childnode refid="48576" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
      </node>
      <node id="48619">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="48643">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48627" relation="include">
        </childnode>
        <childnode refid="48644" relation="include">
        </childnode>
        <childnode refid="48647" relation="include">
        </childnode>
      </node>
      <node id="48535">
        <label>string</label>
      </node>
      <node id="48662">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48548" relation="include">
        </childnode>
        <childnode refid="48610" relation="include">
        </childnode>
        <childnode refid="48651" relation="include">
        </childnode>
      </node>
      <node id="48537">
        <label>map</label>
      </node>
      <node id="48572">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="48616">
        <label>boost/thread.hpp</label>
      </node>
      <node id="48659">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="48656" relation="include">
        </childnode>
        <childnode refid="48657" relation="include">
        </childnode>
        <childnode refid="48630" relation="include">
        </childnode>
        <childnode refid="48629" relation="include">
        </childnode>
        <childnode refid="48610" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
      </node>
      <node id="48575">
        <label>json/json_spirit_reader_template.h</label>
        <link refid="json__spirit__reader__template_8h"/>
        <childnode refid="48576" relation="include">
        </childnode>
        <childnode refid="48581" relation="include">
        </childnode>
        <childnode refid="48582" relation="include">
        </childnode>
        <childnode refid="48583" relation="include">
        </childnode>
        <childnode refid="48584" relation="include">
        </childnode>
        <childnode refid="48585" relation="include">
        </childnode>
        <childnode refid="48586" relation="include">
        </childnode>
        <childnode refid="48587" relation="include">
        </childnode>
        <childnode refid="48588" relation="include">
        </childnode>
        <childnode refid="48589" relation="include">
        </childnode>
      </node>
      <node id="48639">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48640" relation="include">
        </childnode>
        <childnode refid="48610" relation="include">
        </childnode>
        <childnode refid="48618" relation="include">
        </childnode>
        <childnode refid="48643" relation="include">
        </childnode>
        <childnode refid="48648" relation="include">
        </childnode>
      </node>
      <node id="48606">
        <label>stddef.h</label>
      </node>
      <node id="48580">
        <label>boost/variant.hpp</label>
      </node>
      <node id="48571">
        <label>boost/iostreams/concepts.hpp</label>
      </node>
      <node id="48568">
        <label>netdb.h</label>
      </node>
      <node id="48561">
        <label>sys/fcntl.h</label>
      </node>
      <node id="48636">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="48637" relation="include">
        </childnode>
      </node>
      <node id="48646">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48645" relation="include">
        </childnode>
      </node>
      <node id="48650">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="48583">
        <label>boost/function.hpp</label>
      </node>
      <node id="48534">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48538" relation="include">
        </childnode>
        <childnode refid="48539" relation="include">
        </childnode>
        <childnode refid="48540" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48542" relation="include">
        </childnode>
        <childnode refid="48543" relation="include">
        </childnode>
        <childnode refid="48544" relation="include">
        </childnode>
        <childnode refid="48545" relation="include">
        </childnode>
        <childnode refid="48546" relation="include">
        </childnode>
        <childnode refid="48554" relation="include">
        </childnode>
      </node>
      <node id="48552">
        <label>limits.h</label>
      </node>
      <node id="48631">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="48655">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="48538" relation="include">
        </childnode>
        <childnode refid="48652" relation="include">
        </childnode>
      </node>
      <node id="48612">
        <label>sys/resource.h</label>
      </node>
      <node id="48621">
        <label>openssl/bio.h</label>
      </node>
      <node id="48654">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="48656">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48560" relation="include">
        </childnode>
      </node>
      <node id="48573">
        <label>boost/asio.hpp</label>
      </node>
      <node id="48600">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="48556" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48601" relation="include">
        </childnode>
        <childnode refid="48602" relation="include">
        </childnode>
        <childnode refid="48603" relation="include">
        </childnode>
        <childnode refid="48604" relation="include">
        </childnode>
        <childnode refid="48605" relation="include">
        </childnode>
        <childnode refid="48607" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
      </node>
      <node id="48574">
        <label>boost/asio/ssl.hpp</label>
      </node>
      <node id="48567">
        <label>ifaddrs.h</label>
      </node>
      <node id="48626">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="48610" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48548" relation="include">
        </childnode>
        <childnode refid="48627" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
        <childnode refid="48628" relation="include">
        </childnode>
      </node>
      <node id="48663">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="48660" relation="include">
        </childnode>
      </node>
      <node id="48563">
        <label>sys/types.h</label>
      </node>
      <node id="48642">
        <label>ios</label>
      </node>
      <node id="48549">
        <label>string.h</label>
      </node>
      <node id="48555">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="48543">
        <label>cstdio</label>
      </node>
      <node id="48633">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="48623">
        <label>openssl/buffer.h</label>
      </node>
      <node id="48544">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="48593">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="48594" relation="include">
        </childnode>
        <childnode refid="48651" relation="include">
        </childnode>
        <childnode refid="48597" relation="include">
        </childnode>
        <childnode refid="48640" relation="include">
        </childnode>
        <childnode refid="48638" relation="include">
        </childnode>
        <childnode refid="48660" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48649" relation="include">
        </childnode>
      </node>
      <node id="48618">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="48649">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="48599">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="48600" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
      </node>
      <node id="48553">
        <label>unistd.h</label>
      </node>
      <node id="48536">
        <label>vector</label>
      </node>
      <node id="48608">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
        <childnode refid="48609" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
      </node>
      <node id="48651">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="48652" relation="include">
        </childnode>
        <childnode refid="48653" relation="include">
        </childnode>
        <childnode refid="48598" relation="include">
        </childnode>
        <childnode refid="48654" relation="include">
        </childnode>
        <childnode refid="48625" relation="include">
        </childnode>
        <childnode refid="48566" relation="include">
        </childnode>
        <childnode refid="48655" relation="include">
        </childnode>
        <childnode refid="48656" relation="include">
        </childnode>
        <childnode refid="48657" relation="include">
        </childnode>
        <childnode refid="48659" relation="include">
        </childnode>
        <childnode refid="48600" relation="include">
        </childnode>
        <childnode refid="48640" relation="include">
        </childnode>
      </node>
      <node id="48559">
        <label>rpcprotocol.h</label>
        <link refid="rpcprotocol_8h"/>
        <childnode refid="48560" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48571" relation="include">
        </childnode>
        <childnode refid="48572" relation="include">
        </childnode>
        <childnode refid="48573" relation="include">
        </childnode>
        <childnode refid="48574" relation="include">
        </childnode>
        <childnode refid="48575" relation="include">
        </childnode>
        <childnode refid="48590" relation="include">
        </childnode>
        <childnode refid="48591" relation="include">
        </childnode>
      </node>
      <node id="48591">
        <label>json/json_spirit_writer_template.h</label>
        <link refid="json__spirit__writer__template_8h"/>
        <childnode refid="48576" relation="include">
        </childnode>
        <childnode refid="48539" relation="include">
        </childnode>
        <childnode refid="48577" relation="include">
        </childnode>
        <childnode refid="48592" relation="include">
        </childnode>
      </node>
      <node id="48602">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="48617">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="48587">
        <label>boost/spirit/utility/escape_char.hpp</label>
      </node>
      <node id="48615">
        <label>utility</label>
      </node>
      <node id="48637">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="48595" relation="include">
        </childnode>
        <childnode refid="48638" relation="include">
        </childnode>
      </node>
      <node id="48577">
        <label>sstream</label>
      </node>
      <node id="48622">
        <label>openssl/evp.h</label>
      </node>
      <node id="48613">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="48539" relation="include">
        </childnode>
        <childnode refid="48614" relation="include">
        </childnode>
        <childnode refid="48577" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
      </node>
      <node id="48541">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="48640">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="48546" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48641" relation="include">
        </childnode>
        <childnode refid="48557" relation="include">
        </childnode>
        <childnode refid="48642" relation="include">
        </childnode>
        <childnode refid="48540" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48538" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48549" relation="include">
        </childnode>
        <childnode refid="48615" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
      </node>
      <node id="48607">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48606" relation="include">
        </childnode>
        <childnode refid="48552" relation="include">
        </childnode>
      </node>
      <node id="48611">
        <label>sys/time.h</label>
      </node>
      <node id="48614">
        <label>iostream</label>
      </node>
      <node id="48532">
        <label>rpcserver.h</label>
        <link refid="rpcserver_8h"/>
        <childnode refid="48533" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
        <childnode refid="48559" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
      </node>
      <node id="48652">
        <label>deque</label>
      </node>
      <node id="48556">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="48557" relation="include">
        </childnode>
        <childnode refid="48542" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
      </node>
      <node id="48582">
        <label>boost/bind.hpp</label>
      </node>
      <node id="48578">
        <label>boost/config.hpp</label>
      </node>
      <node id="48562">
        <label>sys/socket.h</label>
      </node>
      <node id="48645">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="48557" relation="include">
        </childnode>
        <childnode refid="48606" relation="include">
        </childnode>
        <childnode refid="48549" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
      </node>
      <node id="48576">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="48536" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48539" relation="include">
        </childnode>
        <childnode refid="48577" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48578" relation="include">
        </childnode>
        <childnode refid="48579" relation="include">
        </childnode>
        <childnode refid="48580" relation="include">
        </childnode>
      </node>
      <node id="48653">
        <label>boost/array.hpp</label>
      </node>
      <node id="48609">
        <label>openssl/bn.h</label>
      </node>
      <node id="48638">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="48639" relation="include">
        </childnode>
        <childnode refid="48593" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48615" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
      </node>
      <node id="48629">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="48541" relation="include">
        </childnode>
      </node>
      <node id="48546">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="48547" relation="include">
        </childnode>
        <childnode refid="48549" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48550" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48551" relation="include">
        </childnode>
        <childnode refid="48552" relation="include">
        </childnode>
        <childnode refid="48553" relation="include">
        </childnode>
      </node>
      <node id="48588">
        <label>boost/spirit/iterator/multi_pass.hpp</label>
      </node>
      <node id="48658">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="48608" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
      </node>
      <node id="48538">
        <label>set</label>
      </node>
      <node id="48641">
        <label>algorithm</label>
      </node>
      <node id="48603">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48548" relation="include">
        </childnode>
      </node>
      <node id="48596">
        <label>util.h</label>
      </node>
      <node id="48627">
        <label>stdio.h</label>
      </node>
      <node id="48547">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="48548" relation="include">
        </childnode>
      </node>
      <node id="48542">
        <label>cstring</label>
      </node>
      <node id="48630">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="48631" relation="include">
        </childnode>
        <childnode refid="48632" relation="include">
        </childnode>
        <childnode refid="48633" relation="include">
        </childnode>
        <childnode refid="48550" relation="include">
        </childnode>
        <childnode refid="48634" relation="include">
        </childnode>
      </node>
      <node id="48628">
        <label>inttypes.h</label>
      </node>
      <node id="48644">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="48645" relation="include">
        </childnode>
        <childnode refid="48646" relation="include">
        </childnode>
      </node>
      <node id="48586">
        <label>boost/spirit/utility/confix.hpp</label>
      </node>
      <node id="48661">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="48595" relation="include">
        </childnode>
        <childnode refid="48607" relation="include">
        </childnode>
        <childnode refid="48662" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48665">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain.cpp"/>
        <childnode refid="48666" relation="include">
        </childnode>
      </node>
      <node id="48666">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="rpcblockchain_8cpp_1aba644e892d0fe242879f44311747ec76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TxToJSON</definition>
        <argsstring>(const CTransaction &amp;tx, const uint256 hashBlock, json_spirit::Object &amp;entry)</argsstring>
        <name>TxToJSON</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref></type>
          <declname>hashBlock</declname>
        </param>
        <param>
          <type><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">json_spirit::Object</ref> &amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="15" column="1" bodyfile="/home/dev/ds-160209/src/rpcrawtransaction.cpp" bodystart="53" bodyend="109"/>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GetDifficulty</definition>
        <argsstring>(const CBlockIndex *blockindex)</argsstring>
        <name>GetDifficulty</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>blockindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="17" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="17" bodyend="46"/>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="main_8cpp_1a67a2382a391340c12c45961f3b8c66e8" compoundref="main_8cpp" startline="1678" endline="1683">GetLastBlockIndex</references>
        <references refid="class_c_block_index_1a3324894e6af612d1bd76f89378435713" compoundref="chain_8h" startline="142">CBlockIndex::nBits</references>
        <referencedby refid="class_statistics_page_1ae2defb5914f76600d9247b4d9c27258a" compoundref="statisticspage_8cpp" startline="34" endline="109">StatisticsPage::updateStatistics</referencedby>
        <referencedby refid="rpcserver_8h_1a3da60ebd3884dc09e7a20b0798b6cf36" compoundref="rpcblockchain_8cpp" startline="48" endline="71">GetPoWMHashPS</referencedby>
        <referencedby refid="rpcserver_8h_1a8de51dc4945be68c0581e328efb8c9ab" compoundref="rpcblockchain_8cpp" startline="73" endline="106">GetPoSKernelPS</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a273d24288c722f1ba2013cc5576b4321" compoundref="rpcblockchain_8cpp" startline="183" endline="194">getdifficulty</referencedby>
        <referencedby refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" compoundref="rpcmining_8cpp" startline="78" endline="112">getmininginfo</referencedby>
        <referencedby refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" compoundref="rpcmining_8cpp" startline="114" endline="148">getstakinginfo</referencedby>
        <referencedby refid="rpcmisc_8cpp_1a70335b93783d51e48d276a1e08bd721a" compoundref="rpcmisc_8cpp" startline="34" endline="81">getinfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a3da60ebd3884dc09e7a20b0798b6cf36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GetPoWMHashPS</definition>
        <argsstring>()</argsstring>
        <name>GetPoWMHashPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="48" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="48" bodyend="71"/>
        <references refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" compoundref="main_8cpp" startline="69">pindexGenesisBlock</references>
        <references refid="class_c_block_index_1ac49e7ad2d6a28e0add2f190cedc95c38" compoundref="chain_8h" startline="276" endline="279">CBlockIndex::IsProofOfWork</references>
        <references refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" compoundref="chain_8h" startline="238" endline="241">CBlockIndex::GetBlockTime</references>
        <references refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" compoundref="chain_8h" startline="112">CBlockIndex::pnext</references>
        <references refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" compoundref="rpcblockchain_8cpp" startline="17" endline="46">GetDifficulty</references>
        <referencedby refid="class_statistics_page_1ae2defb5914f76600d9247b4d9c27258a" compoundref="statisticspage_8cpp" startline="34" endline="109">StatisticsPage::updateStatistics</referencedby>
        <referencedby refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" compoundref="rpcmining_8cpp" startline="78" endline="112">getmininginfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a8de51dc4945be68c0581e328efb8c9ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GetPoSKernelPS</definition>
        <argsstring>()</argsstring>
        <name>GetPoSKernelPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="73" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="73" bodyend="106"/>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" compoundref="chain_8h" startline="281" endline="284">CBlockIndex::IsProofOfStake</references>
        <references refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" compoundref="rpcblockchain_8cpp" startline="17" endline="46">GetDifficulty</references>
        <references refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" compoundref="chain_8h" startline="141">CBlockIndex::nTime</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <referencedby refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" compoundref="rpcmining_8cpp" startline="78" endline="112">getmininginfo</referencedby>
        <referencedby refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" compoundref="rpcmining_8cpp" startline="114" endline="148">getstakinginfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref></type>
        <definition>Object blockToJSON</definition>
        <argsstring>(const CBlock &amp;block, const CBlockIndex *blockindex, bool fPrintTransactionDetail)</argsstring>
        <name>blockToJSON</name>
        <param>
          <type>const <ref refid="class_c_block" kindref="compound">CBlock</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>blockindex</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fPrintTransactionDetail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="108" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="108" bodyend="160"/>
        <references refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</references>
        <references refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" compoundref="uint256_8cpp" startline="154" endline="160">base_uint&lt; BITS &gt;::GetHex</references>
        <references refid="class_c_block_index_1ae75f87263a196d250cc2bf10d70aa510" compoundref="chain_8h" startline="245" endline="248">CBlockIndex::IsInMainChain</references>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" compoundref="serialize_8h" startline="89">SER_NETWORK</references>
        <references refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" compoundref="primitives_2block_8h" startline="39">CBlockHeader::nVersion</references>
        <references refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" compoundref="primitives_2block_8h" startline="41">CBlockHeader::hashMerkleRoot</references>
        <references refid="rpcserver_8cpp_1a0655c28ea826ddeb21e8079b6a0beb9e" compoundref="rpcserver_8cpp" startline="98" endline="101">ValueFromAmount</references>
        <references refid="class_c_block_index_1a6559fddea3401548ae144e870d150359" compoundref="chain_8h" startline="118">CBlockIndex::nMint</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" compoundref="primitives_2block_8h" startline="44">CBlockHeader::nNonce</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <references refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" compoundref="rpcblockchain_8cpp" startline="17" endline="46">GetDifficulty</references>
        <references refid="util_8h_1a8bd08fb413d92858692abb1ab182014c" compoundref="util_8h" startline="335" endline="343">leftTrim</references>
        <references refid="class_c_block_index_1ab8cb2abace4e5b6dd405e85f66f17f9a" compoundref="chain_8cpp" startline="615" endline="624">CBlockIndex::GetBlockTrust</references>
        <references refid="class_c_block_index_1aa11268e5a01c5a7d33fb313fb0494015" compoundref="chain_8h" startline="115">CBlockIndex::nChainTrust</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" compoundref="chain_8h" startline="233" endline="236">CBlockIndex::GetBlockHash</references>
        <references refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" compoundref="chain_8h" startline="112">CBlockIndex::pnext</references>
        <references refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" compoundref="chain_8h" startline="281" endline="284">CBlockIndex::IsProofOfStake</references>
        <references refid="class_c_block_index_1a9133ab4850ecece72a92b7203ead5954" compoundref="chain_8h" startline="304" endline="307">CBlockIndex::GeneratedStakeModifier</references>
        <references refid="class_c_block_index_1a553e6fc301e8130118d7ec68dce91ee9" compoundref="chain_8h" startline="136">CBlockIndex::hashProof</references>
        <references refid="class_c_block_index_1a54bbd7ae647d4097ac7915f1cefed2c7" compoundref="chain_8h" startline="291" endline="294">CBlockIndex::GetStakeEntropyBit</references>
        <references refid="class_c_block_index_1a2aa226c04d79a4d932ed6eb0abd02cbe" compoundref="chain_8h" startline="129">CBlockIndex::nStakeModifier</references>
        <references refid="class_c_block_index_1aa8c9b5c3316413a332d5dea243c2c2c9" compoundref="chain_8h" startline="130">CBlockIndex::bnStakeModifierV2</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">CBlock::vtx</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="rpcblockchain_8cpp_1aba644e892d0fe242879f44311747ec76" compoundref="rpcrawtransaction_8cpp" startline="53" endline="109">TxToJSON</references>
        <references refid="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" compoundref="primitives_2block_8h" startline="172" endline="175">CBlock::IsProofOfStake</references>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
        <references refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" compoundref="primitives_2block_8h" startline="110">CBlock::vchBlockSig</references>
        <referencedby refid="rpcblockchain_8cpp_1a63608cf1bb275120194c3b4e070af3d7" compoundref="rpcblockchain_8cpp" startline="229" endline="248">getblock</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a4039f7b3e313c63b81c98e3fc479a117" compoundref="rpcblockchain_8cpp" startline="250" endline="273">getblockbynumber</referencedby>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a76d9bad30031c6da5454ca8fdc99f8ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getbestblockhash</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getbestblockhash</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="162" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="162" bodyend="170"/>
        <references refid="main_8cpp_1ace9c3343567f488a96598abe61e1d309" compoundref="main_8cpp" startline="74">hashBestChain</references>
        <references refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" compoundref="uint256_8cpp" startline="154" endline="160">base_uint&lt; BITS &gt;::GetHex</references>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a2874a1c1a24cfa6b9f5f33755e4d5318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getblockcount</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getblockcount</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="172" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="172" bodyend="180"/>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a273d24288c722f1ba2013cc5576b4321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getdifficulty</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getdifficulty</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="183" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="183" bodyend="194"/>
        <references refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" compoundref="rpcblockchain_8cpp" startline="17" endline="46">GetDifficulty</references>
        <references refid="main_8cpp_1a67a2382a391340c12c45961f3b8c66e8" compoundref="main_8cpp" startline="1678" endline="1683">GetLastBlockIndex</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a6ba5d2c76833bd2f10be0e95ded53037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getrawmempool</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getrawmempool</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="197" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="197" bodyend="212"/>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_tx_mem_pool_1a42fa7d41a45562d02e356f2e7708bb02" compoundref="txmempool_8cpp" startline="107" endline="115">CTxMemPool::queryHashes</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a6aec96723852fde932c01159a66a9911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getblockhash</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getblockhash</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="214" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="214" bodyend="227"/>
        <references refid="classjson__spirit_1_1_value__impl_1ad437ac0c465adaeefda05eef57a99248" compoundref="json__spirit__value_8h" startline="385" endline="390">json_spirit::Value_impl&lt; Config &gt;::get_int</references>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
        <references refid="chain_8h_1ade250148b45238c340427a491d210d0a">FindBlockByHeight</references>
        <references refid="class_c_block_index_1afac8099e03ffda463c7153ca82d37b66" compoundref="chain_8h" startline="110">CBlockIndex::phashBlock</references>
        <references refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" compoundref="uint256_8cpp" startline="154" endline="160">base_uint&lt; BITS &gt;::GetHex</references>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a63608cf1bb275120194c3b4e070af3d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getblock</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getblock</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="229" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="229" bodyend="248"/>
        <references refid="classjson__spirit_1_1_value__impl_1a0e02b3a4e65ae45f069ee938fee40f80" compoundref="json__spirit__value_8h" startline="353" endline="358">json_spirit::Value_impl&lt; Config &gt;::get_str</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" compoundref="main_8cpp" startline="59">mapBlockIndex</references>
        <references refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" compoundref="rpcprotocol_8cpp" startline="260" endline="266">JSONRPCError</references>
        <references refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadafb8d27e000f4a668b66974c73256a576" compoundref="rpcprotocol_8h" startline="50">RPC_INVALID_ADDRESS_OR_KEY</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</references>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a4039f7b3e313c63b81c98e3fc479a117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getblockbynumber</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getblockbynumber</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="250" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="250" bodyend="273"/>
        <references refid="classjson__spirit_1_1_value__impl_1ad437ac0c465adaeefda05eef57a99248" compoundref="json__spirit__value_8h" startline="385" endline="390">json_spirit::Value_impl&lt; Config &gt;::get_int</references>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
        <references refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" compoundref="main_8cpp" startline="59">mapBlockIndex</references>
        <references refid="main_8cpp_1ace9c3343567f488a96598abe61e1d309" compoundref="main_8cpp" startline="74">hashBestChain</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="class_c_block_index_1afac8099e03ffda463c7153ca82d37b66" compoundref="chain_8h" startline="110">CBlockIndex::phashBlock</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</references>
      </memberdef>
      <memberdef kind="function" id="rpcblockchain_8cpp_1a18e0cd566c85cd589c2d687fa06d77e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">Value</ref></type>
        <definition>Value getcheckpoint</definition>
        <argsstring>(const Array &amp;params, bool fHelp)</argsstring>
        <name>getcheckpoint</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fHelp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcblockchain.cpp" line="276" column="1" bodyfile="/home/dev/ds-160209/src/rpcblockchain.cpp" bodystart="276" bodyend="293"/>
        <references refid="namespace_checkpoints_1aa1915d9b1ed1c988b8477c3cc7ed1416" compoundref="checkpoints_8cpp" startline="70" endline="77">Checkpoints::AutoSelectSyncCheckpoint</references>
        <references refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" compoundref="chain_8h" startline="233" endline="236">CBlockIndex::GetBlockHash</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
        <references refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" compoundref="chain_8h" startline="238" endline="241">CBlockIndex::GetBlockTime</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rpcserver_8h" kindref="compound">rpcserver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel_8h" kindref="compound">kernel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="checkpoints_8h" kindref="compound">checkpoints.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacejson__spirit" kindref="compound">json_spirit</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rpcblockchain_8cpp_1aba644e892d0fe242879f44311747ec76" kindref="member">TxToJSON</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashBlock,<sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">json_spirit::Object</ref>&amp;<sp/>entry);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="rpcserver_8h_1a8fcb55e3479716ded2b499e470bdc13a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" kindref="member">GetDifficulty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>blockindex)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Floating<sp/>point<sp/>number<sp/>that<sp/>is<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>minimum<sp/>difficulty,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>difficulty<sp/>=<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockindex<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockindex<sp/>=<sp/><ref refid="main_8cpp_1a67a2382a391340c12c45961f3b8c66e8" kindref="member">GetLastBlockIndex</ref>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nShift<sp/>=<sp/>(blockindex-&gt;<ref refid="class_c_block_index_1a3324894e6af612d1bd76f89378435713" kindref="member">nBits</ref><sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dDiff<sp/>=</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double)0x0000ffff<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(blockindex-&gt;<ref refid="class_c_block_index_1a3324894e6af612d1bd76f89378435713" kindref="member">nBits</ref><sp/>&amp;<sp/>0x00ffffff);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nShift<sp/>&lt;<sp/>29)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dDiff<sp/>*=<sp/>256.0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nShift++;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nShift<sp/>&gt;<sp/>29)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dDiff<sp/>/=<sp/>256.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nShift--;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dDiff;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="rpcserver_8h_1a3da60ebd3884dc09e7a20b0798b6cf36" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="rpcblockchain_8cpp_1a3da60ebd3884dc09e7a20b0798b6cf36" kindref="member">GetPoWMHashPS</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoWInterval<sp/>=<sp/>72;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTargetSpacingWorkMin<sp/>=<sp/>30,<sp/>nTargetSpacingWork<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex<sp/>=<sp/><ref refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" kindref="member">pindexGenesisBlock</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrevWork<sp/>=<sp/><ref refid="chain_8h_1a1e7c54b8b26730f52b5527163fc33d8f" kindref="member">pindexGenesisBlock</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pindex)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindex-&gt;<ref refid="class_c_block_index_1ac49e7ad2d6a28e0add2f190cedc95c38" kindref="member">IsProofOfWork</ref>())</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nActualSpacingWork<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>()<sp/>-<sp/>pindexPrevWork-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTargetSpacingWork<sp/>=<sp/>((nPoWInterval<sp/>-<sp/>1)<sp/>*<sp/>nTargetSpacingWork<sp/>+<sp/>nActualSpacingWork<sp/>+<sp/>nActualSpacingWork)<sp/>/<sp/>(nPoWInterval<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTargetSpacingWork<sp/>=<sp/>max(nTargetSpacingWork,<sp/>nTargetSpacingWorkMin);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexPrevWork<sp/>=<sp/>pindex;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindex<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" kindref="member">pnext</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" kindref="member">GetDifficulty</ref>()<sp/>*<sp/>4294.967296<sp/>/<sp/>nTargetSpacingWork;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="rpcserver_8h_1a8de51dc4945be68c0581e328efb8c9ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="rpcblockchain_8cpp_1a8de51dc4945be68c0581e328efb8c9ab" kindref="member">GetPoSKernelPS</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoSInterval<sp/>=<sp/>72;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dStakeKernelsTriedAvg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStakesHandled<sp/>=<sp/>0,<sp/>nStakesTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrevStake<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pindex<sp/>&amp;&amp;<sp/>nStakesHandled<sp/>&lt;<sp/>nPoSInterval)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindex-&gt;<ref refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" kindref="member">IsProofOfStake</ref>())</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pindexPrevStake)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dStakeKernelsTriedAvg<sp/>+=<sp/><ref refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" kindref="member">GetDifficulty</ref>(pindexPrevStake)<sp/>*<sp/>4294967296.0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStakesTime<sp/>+=<sp/>pindexPrevStake-&gt;<ref refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" kindref="member">nTime</ref><sp/>-<sp/>pindex-&gt;<ref refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" kindref="member">nTime</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nStakesHandled++;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindexPrevStake<sp/>=<sp/>pindex;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pindex<sp/>=<sp/>pindex-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStakesTime)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>dStakeKernelsTriedAvg<sp/>/<sp/>nStakesTime;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>*=<sp/>STAKE_TIMESTAMP_MASK<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" refkind="member"><highlight class="normal"><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/><ref refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" kindref="member">blockToJSON</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>&amp;<sp/><ref refid="structblock__" kindref="compound">block</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>blockindex,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fPrintTransactionDetail)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>result;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;hash&quot;</highlight><highlight class="normal">,<sp/>block.<ref refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>confirmations<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>report<sp/>confirmations<sp/>if<sp/>the<sp/>block<sp/>is<sp/>on<sp/>the<sp/>main<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockindex-&gt;<ref refid="class_c_block_index_1ae75f87263a196d250cc2bf10d70aa510" kindref="member">IsInMainChain</ref>())</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confirmations<sp/>=<sp/><ref refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref><sp/>-<sp/>blockindex-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="structjson__spirit_1_1_pair__impl" kindref="compound">Pair</ref>(</highlight><highlight class="stringliteral">&quot;confirmations&quot;</highlight><highlight class="normal">,<sp/>confirmations));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;size&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)::<ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(block,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref>,<sp/>PROTOCOL_VERSION)));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">,<sp/>blockindex-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/>block.<ref refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" kindref="member">nVersion</ref>));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;merkleroot&quot;</highlight><highlight class="normal">,<sp/>block.<ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;mint&quot;</highlight><highlight class="normal">,<sp/><ref refid="rpcserver_8cpp_1a0655c28ea826ddeb21e8079b6a0beb9e" kindref="member">ValueFromAmount</ref>(blockindex-&gt;<ref refid="class_c_block_index_1a6559fddea3401548ae144e870d150359" kindref="member">nMint</ref>)));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)block.<ref refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" kindref="member">GetBlockTime</ref>()));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;nonce&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)block.<ref refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" kindref="member">nNonce</ref>));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;bits&quot;</highlight><highlight class="normal">,<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%08x&quot;</highlight><highlight class="normal">,<sp/>block.<ref refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" kindref="member">nBits</ref>)));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;difficulty&quot;</highlight><highlight class="normal">,<sp/><ref refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" kindref="member">GetDifficulty</ref>(blockindex)));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;blocktrust&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a8bd08fb413d92858692abb1ab182014c" kindref="member">leftTrim</ref>(blockindex-&gt;<ref refid="class_c_block_index_1ab8cb2abace4e5b6dd405e85f66f17f9a" kindref="member">GetBlockTrust</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>(),<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;chaintrust&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a8bd08fb413d92858692abb1ab182014c" kindref="member">leftTrim</ref>(blockindex-&gt;<ref refid="class_c_block_index_1aa11268e5a01c5a7d33fb313fb0494015" kindref="member">nChainTrust</ref>.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>(),<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockindex-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;previousblockhash&quot;</highlight><highlight class="normal">,<sp/>blockindex-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>-&gt;<ref refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" kindref="member">GetBlockHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockindex-&gt;<ref refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" kindref="member">pnext</ref>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;nextblockhash&quot;</highlight><highlight class="normal">,<sp/>blockindex-&gt;<ref refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" kindref="member">pnext</ref>-&gt;<ref refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" kindref="member">GetBlockHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;flags&quot;</highlight><highlight class="normal">,<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal">,<sp/>blockindex-&gt;<ref refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" kindref="member">IsProofOfStake</ref>()?<sp/></highlight><highlight class="stringliteral">&quot;proof-of-stake&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;proof-of-work&quot;</highlight><highlight class="normal">,<sp/>blockindex-&gt;<ref refid="class_c_block_index_1a9133ab4850ecece72a92b7203ead5954" kindref="member">GeneratedStakeModifier</ref>()?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stake-modifier&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;proofhash&quot;</highlight><highlight class="normal">,<sp/>blockindex-&gt;<ref refid="class_c_block_index_1a553e6fc301e8130118d7ec68dce91ee9" kindref="member">hashProof</ref>.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;entropybit&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)blockindex-&gt;<ref refid="class_c_block_index_1a54bbd7ae647d4097ac7915f1cefed2c7" kindref="member">GetStakeEntropyBit</ref>()));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;modifier&quot;</highlight><highlight class="normal">,<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%016x&quot;</highlight><highlight class="normal">,<sp/>blockindex-&gt;<ref refid="class_c_block_index_1a2aa226c04d79a4d932ed6eb0abd02cbe" kindref="member">nStakeModifier</ref>)));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;modifierv2&quot;</highlight><highlight class="normal">,<sp/>blockindex-&gt;<ref refid="class_c_block_index_1aa8c9b5c3316413a332d5dea243c2c2c9" kindref="member">bnStakeModifierV2</ref>.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>txinfo;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/>block.<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fPrintTransactionDetail)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>entry;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;txid&quot;</highlight><highlight class="normal">,<sp/>tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>()));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpcblockchain_8cpp_1aba644e892d0fe242879f44311747ec76" kindref="member">TxToJSON</ref>(tx,<sp/>0,<sp/>entry);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txinfo.push_back(entry);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txinfo.push_back(tx.<ref refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" kindref="member">GetHash</ref>().<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;tx&quot;</highlight><highlight class="normal">,<sp/>txinfo));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block.<ref refid="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" kindref="member">IsProofOfStake</ref>())</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<ref refid="structjson__spirit_1_1_pair__impl" kindref="compound">Pair</ref>(</highlight><highlight class="stringliteral">&quot;signature&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(block.<ref refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" kindref="member">vchBlockSig</ref>.begin(),<sp/>block.<ref refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" kindref="member">vchBlockSig</ref>.end())));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="rpcblockchain_8cpp_1a76d9bad30031c6da5454ca8fdc99f8ea" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcblockchain_8cpp_1a76d9bad30031c6da5454ca8fdc99f8ea" kindref="member">getbestblockhash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getbestblockhash\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>the<sp/>hash<sp/>of<sp/>the<sp/>best<sp/>block<sp/>in<sp/>the<sp/>longest<sp/>block<sp/>chain.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ace9c3343567f488a96598abe61e1d309" kindref="member">hashBestChain</ref>.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="rpcblockchain_8cpp_1a2874a1c1a24cfa6b9f5f33755e4d5318" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcblockchain_8cpp_1a2874a1c1a24cfa6b9f5f33755e4d5318" kindref="member">getblockcount</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getblockcount\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>the<sp/>number<sp/>of<sp/>blocks<sp/>in<sp/>the<sp/>longest<sp/>block<sp/>chain.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="rpcblockchain_8cpp_1a273d24288c722f1ba2013cc5576b4321" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcblockchain_8cpp_1a273d24288c722f1ba2013cc5576b4321" kindref="member">getdifficulty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getdifficulty\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>the<sp/>difficulty<sp/>as<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>minimum<sp/>difficulty.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;proof-of-work&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" kindref="member">GetDifficulty</ref>()));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;proof-of-stake&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpcblockchain_8cpp_1a65a78b16d228932a6142656509a8bce4" kindref="member">GetDifficulty</ref>(<ref refid="main_8cpp_1a67a2382a391340c12c45961f3b8c66e8" kindref="member">GetLastBlockIndex</ref>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="rpcblockchain_8cpp_1a6ba5d2c76833bd2f10be0e95ded53037" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcblockchain_8cpp_1a6ba5d2c76833bd2f10be0e95ded53037" kindref="member">getrawmempool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getrawmempool\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>all<sp/>transaction<sp/>ids<sp/>in<sp/>memory<sp/>pool.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;uint256&gt;<sp/>vtxid;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>.<ref refid="class_c_tx_mem_pool_1a42fa7d41a45562d02e356f2e7708bb02" kindref="member">queryHashes</ref>(vtxid);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref><sp/>a;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/>vtxid)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.push_back(hash.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="rpcblockchain_8cpp_1a6aec96723852fde932c01159a66a9911" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcblockchain_8cpp_1a6aec96723852fde932c01159a66a9911" kindref="member">getblockhash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getblockhash<sp/>&lt;index&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>hash<sp/>of<sp/>block<sp/>in<sp/>best-block-chain<sp/>at<sp/>&lt;index&gt;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight<sp/>=<sp/>params[0].<ref refid="classjson__spirit_1_1_value__impl_1ad437ac0c465adaeefda05eef57a99248" kindref="member">get_int</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nHeight<sp/>&lt;<sp/>0<sp/>||<sp/>nHeight<sp/>&gt;<sp/><ref refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref>)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Block<sp/>number<sp/>out<sp/>of<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pblockindex<sp/>=<sp/><ref refid="chain_8h_1ade250148b45238c340427a491d210d0a" kindref="member">FindBlockByHeight</ref>(nHeight);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pblockindex-&gt;<ref refid="class_c_block_index_1afac8099e03ffda463c7153ca82d37b66" kindref="member">phashBlock</ref>-&gt;<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="rpcblockchain_8cpp_1a63608cf1bb275120194c3b4e070af3d7" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcblockchain_8cpp_1a63608cf1bb275120194c3b4e070af3d7" kindref="member">getblock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>&lt;<sp/>1<sp/>||<sp/>params.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getblock<sp/>&lt;hash&gt;<sp/>[txinfo]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;txinfo<sp/>optional<sp/>to<sp/>print<sp/>more<sp/>detailed<sp/>tx<sp/>info\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>details<sp/>of<sp/>a<sp/>block<sp/>with<sp/>given<sp/>block-hash.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strHash<sp/>=<sp/>params[0].<ref refid="classjson__spirit_1_1_value__impl_1a0e02b3a4e65ae45f069ee938fee40f80" kindref="member">get_str</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>(strHash);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>.count(hash)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8cpp_1a17b1bb111ab339efc951929834766039" kindref="member">JSONRPCError</ref>(<ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadafb8d27e000f4a668b66974c73256a576" kindref="member">RPC_INVALID_ADDRESS_OR_KEY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Block<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pblockindex<sp/>=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>block.<ref refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" kindref="member">ReadFromDisk</ref>(pblockindex,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" kindref="member">blockToJSON</ref>(block,<sp/>pblockindex,<sp/>params.size()<sp/>&gt;<sp/>1<sp/>?<sp/>params[1].get_bool()<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="rpcblockchain_8cpp_1a4039f7b3e313c63b81c98e3fc479a117" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcblockchain_8cpp_1a4039f7b3e313c63b81c98e3fc479a117" kindref="member">getblockbynumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>&lt;<sp/>1<sp/>||<sp/>params.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getblockbynumber<sp/>&lt;number&gt;<sp/>[txinfo]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;txinfo<sp/>optional<sp/>to<sp/>print<sp/>more<sp/>detailed<sp/>tx<sp/>info\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>details<sp/>of<sp/>a<sp/>block<sp/>with<sp/>given<sp/>block-number.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight<sp/>=<sp/>params[0].<ref refid="classjson__spirit_1_1_value__impl_1ad437ac0c465adaeefda05eef57a99248" kindref="member">get_int</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nHeight<sp/>&lt;<sp/>0<sp/>||<sp/>nHeight<sp/>&gt;<sp/><ref refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Block<sp/>number<sp/>out<sp/>of<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pblockindex<sp/>=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>[<ref refid="main_8cpp_1ace9c3343567f488a96598abe61e1d309" kindref="member">hashBestChain</ref>];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pblockindex-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>&gt;<sp/>nHeight)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pblockindex<sp/>=<sp/>pblockindex-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>*pblockindex-&gt;<ref refid="class_c_block_index_1afac8099e03ffda463c7153ca82d37b66" kindref="member">phashBlock</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>pblockindex<sp/>=<sp/><ref refid="chain_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>block.<ref refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" kindref="member">ReadFromDisk</ref>(pblockindex,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" kindref="member">blockToJSON</ref>(block,<sp/>pblockindex,<sp/>params.size()<sp/>&gt;<sp/>1<sp/>?<sp/>params[1].get_bool()<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ppcoin:<sp/>get<sp/>information<sp/>of<sp/>sync-checkpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="rpcblockchain_8cpp_1a18e0cd566c85cd589c2d687fa06d77e7" refkind="member"><highlight class="normal"><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref><sp/><ref refid="rpcblockchain_8cpp_1a18e0cd566c85cd589c2d687fa06d77e7" kindref="member">getcheckpoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fHelp)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fHelp<sp/>||<sp/>params.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getcheckpoint\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>info<sp/>of<sp/>synchronized<sp/>checkpoint.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">Object</ref><sp/>result;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexCheckpoint<sp/>=<sp/><ref refid="namespace_checkpoints_1aa1915d9b1ed1c988b8477c3cc7ed1416" kindref="member">Checkpoints::AutoSelectSyncCheckpoint</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;synccheckpoint&quot;</highlight><highlight class="normal">,<sp/>pindexCheckpoint-&gt;<ref refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" kindref="member">GetBlockHash</ref>().<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>().c_str()));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">,<sp/>pindexCheckpoint-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;timestamp&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(pindexCheckpoint-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>()).c_str()));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<ref refid="namespacejson__spirit_1a7200dfb0c24dea92f37dfd20c1a354c1" kindref="member">Pair</ref>(</highlight><highlight class="stringliteral">&quot;policy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rolling&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/rpcblockchain.cpp"/>
  </compounddef>
</doxygen>
