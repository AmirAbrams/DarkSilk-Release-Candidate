<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="trafficgraphwidget_8cpp" kind="file" language="C++">
    <compoundname>trafficgraphwidget.cpp</compoundname>
    <includes refid="trafficgraphwidget_8h" local="yes">trafficgraphwidget.h</includes>
    <includes refid="clientmodel_8h" local="yes">clientmodel.h</includes>
    <includes local="no">QPainter</includes>
    <includes local="no">QColor</includes>
    <includes local="no">QTimer</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="47527">
        <label>QObject</label>
      </node>
      <node id="47526">
        <label>clientmodel.h</label>
        <link refid="clientmodel_8h"/>
        <childnode refid="47527" relation="include">
        </childnode>
      </node>
      <node id="47531">
        <label>cmath</label>
      </node>
      <node id="47523">
        <label>trafficgraphwidget.h</label>
        <link refid="trafficgraphwidget_8h"/>
        <childnode refid="47524" relation="include">
        </childnode>
        <childnode refid="47525" relation="include">
        </childnode>
      </node>
      <node id="47528">
        <label>QPainter</label>
      </node>
      <node id="47530">
        <label>QTimer</label>
      </node>
      <node id="47524">
        <label>QWidget</label>
      </node>
      <node id="47525">
        <label>QQueue</label>
      </node>
      <node id="47529">
        <label>QColor</label>
      </node>
      <node id="47522">
        <label>/home/dev/ds-160209/src/qt/trafficgraphwidget.cpp</label>
        <link refid="trafficgraphwidget.cpp"/>
        <childnode refid="47523" relation="include">
        </childnode>
        <childnode refid="47526" relation="include">
        </childnode>
        <childnode refid="47528" relation="include">
        </childnode>
        <childnode refid="47529" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47531" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="trafficgraphwidget_8cpp_1ab3bc533037145aad5f84737153dd267f" prot="public" static="no">
        <name>DESIRED_SAMPLES</name>
        <initializer>800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/qt/trafficgraphwidget.cpp" line="10" column="9" bodyfile="/home/dev/ds-160209/src/qt/trafficgraphwidget.cpp" bodystart="10" bodyend="-1"/>
        <referencedby refid="class_traffic_graph_widget_1a5a1ae0d0a8cc43c67386de4aa1111340" compoundref="trafficgraphwidget_8cpp" startline="115" endline="144">TrafficGraphWidget::updateRates</referencedby>
        <referencedby refid="class_traffic_graph_widget_1aa08cb5ae735e58a79bdff42b933ec4c4" compoundref="trafficgraphwidget_8cpp" startline="146" endline="154">TrafficGraphWidget::setGraphRangeMins</referencedby>
      </memberdef>
      <memberdef kind="define" id="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" prot="public" static="no">
        <name>XMARGIN</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/qt/trafficgraphwidget.cpp" line="12" column="9" bodyfile="/home/dev/ds-160209/src/qt/trafficgraphwidget.cpp" bodystart="12" bodyend="-1"/>
        <referencedby refid="class_traffic_graph_widget_1a728112be94b731a17ff36136e48adcb2" compoundref="trafficgraphwidget_8cpp" startline="59" endline="113">TrafficGraphWidget::paintEvent</referencedby>
      </memberdef>
      <memberdef kind="define" id="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" prot="public" static="no">
        <name>YMARGIN</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/qt/trafficgraphwidget.cpp" line="13" column="9" bodyfile="/home/dev/ds-160209/src/qt/trafficgraphwidget.cpp" bodystart="13" bodyend="-1"/>
        <referencedby refid="class_traffic_graph_widget_1a728112be94b731a17ff36136e48adcb2" compoundref="trafficgraphwidget_8cpp" startline="59" endline="113">TrafficGraphWidget::paintEvent</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trafficgraphwidget_8h" kindref="compound">trafficgraphwidget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clientmodel_8h" kindref="compound">clientmodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPainter&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QColor&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="trafficgraphwidget_8cpp_1ab3bc533037145aad5f84737153dd267f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DESIRED_SAMPLES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMARGIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YMARGIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_traffic_graph_widget_1a99f4f3f14bab99bef8918cb4f5f69aa6" refkind="member"><highlight class="normal"><ref refid="class_traffic_graph_widget_1a99f4f3f14bab99bef8918cb4f5f69aa6" kindref="member">TrafficGraphWidget::TrafficGraphWidget</ref>(QWidget<sp/>*parent)<sp/>:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>QWidget(parent),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>timer(0),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>fMax(0.0f),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>nMins(0),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>vSamplesIn(),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>vSamplesOut(),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>nLastBytesIn(0),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>nLastBytesOut(0),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>clientModel(0)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>timer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QTimer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(timer,<sp/>SIGNAL(timeout()),<sp/>SLOT(<ref refid="class_traffic_graph_widget_1a5a1ae0d0a8cc43c67386de4aa1111340" kindref="member">updateRates</ref>()));</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_traffic_graph_widget_1a8f627aaf6171695d94a0e83b239fe1ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_traffic_graph_widget_1a8f627aaf6171695d94a0e83b239fe1ac" kindref="member">TrafficGraphWidget::setClientModel</ref>(<ref refid="class_client_model" kindref="compound">ClientModel</ref><sp/>*model)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>clientModel<sp/>=<sp/>model;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(model)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLastBytesIn<sp/>=<sp/>model-&gt;<ref refid="class_client_model_1a175c96ffc4d793777316e36c501a7f94" kindref="member">getTotalBytesRecv</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLastBytesOut<sp/>=<sp/>model-&gt;<ref refid="class_client_model_1a4229224bf8a2df52e44438a449da6ba3" kindref="member">getTotalBytesSent</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_traffic_graph_widget_1a5ce07b8f9c222d49bcc65703fbaf9be6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_traffic_graph_widget_1a5ce07b8f9c222d49bcc65703fbaf9be6" kindref="member">TrafficGraphWidget::getGraphRangeMins</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="40"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nMins;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrafficGraphWidget::paintPath(QPainterPath<sp/>&amp;path,<sp/>QQueue&lt;float&gt;<sp/>&amp;samples)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>height()<sp/>-<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>*<sp/>2,<sp/>w<sp/>=<sp/>width()<sp/>-<sp/><ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref><sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sampleCount<sp/>=<sp/>samples.size(),<sp/>x<sp/>=<sp/><ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref><sp/>+<sp/>w,<sp/>y;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sampleCount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.moveTo(x,<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>+<sp/>h);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sampleCount;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref><sp/>+<sp/>w<sp/>-<sp/>w<sp/>*<sp/>i<sp/>/<sp/><ref refid="trafficgraphwidget_8cpp_1ab3bc533037145aad5f84737153dd267f" kindref="member">DESIRED_SAMPLES</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>+<sp/>h<sp/>-<sp/>(int)(h<sp/>*<sp/>samples.at(i)<sp/>/<sp/>fMax);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.lineTo(x,<sp/>y);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.lineTo(x,<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>+<sp/>h);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_traffic_graph_widget_1a728112be94b731a17ff36136e48adcb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_traffic_graph_widget_1a728112be94b731a17ff36136e48adcb2" kindref="member">TrafficGraphWidget::paintEvent</ref>(QPaintEvent<sp/>*)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainter<sp/>painter(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.fillRect(rect(),<sp/>Qt::black);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fMax<sp/>&lt;=<sp/>0.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>QColor<sp/>axisCol(Qt::gray);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>height()<sp/>-<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setPen(axisCol);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.drawLine(<ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref>,<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>+<sp/>h,<sp/>width()<sp/>-<sp/><ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref>,<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>+<sp/>h);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decide<sp/>what<sp/>order<sp/>of<sp/>magnitude<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref><sp/>=<sp/>floor(log10(fMax));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>pow(10.0f,<sp/>base);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>units<sp/>=<sp/>tr(</highlight><highlight class="stringliteral">&quot;KB/s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setPen(axisCol);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.drawText(<ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref>,<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>+<sp/>h<sp/>-<sp/>h<sp/>*<sp/>val<sp/>/<sp/>fMax,<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1<sp/>%2&quot;</highlight><highlight class="normal">).<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>(val).<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>(units));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>val;<sp/>y<sp/>&lt;<sp/>fMax;<sp/>y<sp/>+=<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>+<sp/>h<sp/>-<sp/>h<sp/>*<sp/>y<sp/>/<sp/>fMax;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawLine(<ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref>,<sp/>yy,<sp/>width()<sp/>-<sp/><ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref>,<sp/>yy);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>drew<sp/>3<sp/>or<sp/>fewer<sp/>lines,<sp/>break<sp/>them<sp/>up<sp/>at<sp/>the<sp/>next<sp/>lower<sp/>order<sp/>of<sp/>magnitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fMax<sp/>/<sp/>val<sp/>&lt;=<sp/>3.0f)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axisCol<sp/>=<sp/>axisCol.darker();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>pow(10.0f,<sp/>base<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(axisCol);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawText(<ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref>,<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>+<sp/>h<sp/>-<sp/>h<sp/>*<sp/>val<sp/>/<sp/>fMax,<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1<sp/>%2&quot;</highlight><highlight class="normal">).<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>(val).<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>(units));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>val;<sp/>y<sp/>&lt;<sp/>fMax;<sp/>y<sp/>+=<sp/>val,<sp/>count++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>overwrite<sp/>lines<sp/>drawn<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(count<sp/>%<sp/>10<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/><ref refid="trafficgraphwidget_8cpp_1a04814f7e9804edde849f86e3b94dd572" kindref="member">YMARGIN</ref><sp/>+<sp/>h<sp/>-<sp/>h<sp/>*<sp/>y<sp/>/<sp/>fMax;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawLine(<ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref>,<sp/>yy,<sp/>width()<sp/>-<sp/><ref refid="trafficgraphwidget_8cpp_1a0a70bb3d7aecc8f2760b6911e4698e0f" kindref="member">XMARGIN</ref>,<sp/>yy);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vSamplesIn.empty())<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPainterPath<sp/>p;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paintPath(p,<sp/>vSamplesIn);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.fillPath(p,<sp/>QColor(0,<sp/>255,<sp/>0,<sp/>128));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(Qt::green);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPath(p);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vSamplesOut.empty())<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPainterPath<sp/>p;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paintPath(p,<sp/>vSamplesOut);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.fillPath(p,<sp/>QColor(255,<sp/>0,<sp/>0,<sp/>128));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(Qt::red);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPath(p);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_traffic_graph_widget_1a5a1ae0d0a8cc43c67386de4aa1111340" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_traffic_graph_widget_1a5a1ae0d0a8cc43c67386de4aa1111340" kindref="member">TrafficGraphWidget::updateRates</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!clientModel)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>quint64<sp/>bytesIn<sp/>=<sp/>clientModel-&gt;<ref refid="class_client_model_1a175c96ffc4d793777316e36c501a7f94" kindref="member">getTotalBytesRecv</ref>(),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytesOut<sp/>=<sp/>clientModel-&gt;<ref refid="class_client_model_1a4229224bf8a2df52e44438a449da6ba3" kindref="member">getTotalBytesSent</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inRate<sp/>=<sp/>(bytesIn<sp/>-<sp/>nLastBytesIn)<sp/>/<sp/>1024.0f<sp/>*<sp/>1000<sp/>/<sp/>timer-&gt;interval();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>outRate<sp/>=<sp/>(bytesOut<sp/>-<sp/>nLastBytesOut)<sp/>/<sp/>1024.0f<sp/>*<sp/>1000<sp/>/<sp/>timer-&gt;interval();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>vSamplesIn.push_front(inRate);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>vSamplesOut.push_front(outRate);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>nLastBytesIn<sp/>=<sp/>bytesIn;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>nLastBytesOut<sp/>=<sp/>bytesOut;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(vSamplesIn.size()<sp/>&gt;<sp/><ref refid="trafficgraphwidget_8cpp_1ab3bc533037145aad5f84737153dd267f" kindref="member">DESIRED_SAMPLES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSamplesIn.pop_back();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(vSamplesOut.size()<sp/>&gt;<sp/><ref refid="trafficgraphwidget_8cpp_1ab3bc533037145aad5f84737153dd267f" kindref="member">DESIRED_SAMPLES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSamplesOut.pop_back();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tmax<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/>vSamplesIn)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f<sp/>&gt;<sp/>tmax)<sp/>tmax<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/>vSamplesOut)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f<sp/>&gt;<sp/>tmax)<sp/>tmax<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>fMax<sp/>=<sp/>tmax;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>update();</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_traffic_graph_widget_1aa08cb5ae735e58a79bdff42b933ec4c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_traffic_graph_widget_1aa08cb5ae735e58a79bdff42b933ec4c4" kindref="member">TrafficGraphWidget::setGraphRangeMins</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mins)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>nMins<sp/>=<sp/>mins;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msecsPerSample<sp/>=<sp/>nMins<sp/>*<sp/>60<sp/>*<sp/>1000<sp/>/<sp/><ref refid="trafficgraphwidget_8cpp_1ab3bc533037145aad5f84737153dd267f" kindref="member">DESIRED_SAMPLES</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;stop();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;setInterval(msecsPerSample);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_traffic_graph_widget_1a71c23db2649ab8781fa9a294e540b7ee" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_traffic_graph_widget_1a71c23db2649ab8781fa9a294e540b7ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_traffic_graph_widget_1a71c23db2649ab8781fa9a294e540b7ee" kindref="member">TrafficGraphWidget::clear</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;stop();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>vSamplesOut.clear();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>vSamplesIn.clear();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>fMax<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clientModel)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLastBytesIn<sp/>=<sp/>clientModel-&gt;<ref refid="class_client_model_1a175c96ffc4d793777316e36c501a7f94" kindref="member">getTotalBytesRecv</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLastBytesOut<sp/>=<sp/>clientModel-&gt;<ref refid="class_client_model_1a4229224bf8a2df52e44438a449da6ba3" kindref="member">getTotalBytesSent</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;start();</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/qt/trafficgraphwidget.cpp"/>
  </compounddef>
</doxygen>
