<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="util_8h" kind="file" language="C++">
    <compoundname>util.h</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sys/resource.h</includes>
    <includes refid="serialize_8h" local="yes">serialize.h</includes>
    <includes refid="tinyformat_8h" local="yes">tinyformat.h</includes>
    <includes refid="amount_8h" local="yes">amount.h</includes>
    <includes local="no">map</includes>
    <includes local="no">list</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">boost/thread.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">boost/filesystem/path.hpp</includes>
    <includes local="no">boost/date_time/gregorian/gregorian_types.hpp</includes>
    <includes local="no">boost/date_time/posix_time/posix_time_types.hpp</includes>
    <includes local="no">openssl/bio.h</includes>
    <includes local="no">openssl/evp.h</includes>
    <includes local="no">openssl/buffer.h</includes>
    <includes local="no">openssl/crypto.h</includes>
    <includes local="no">openssl/rand.h</includes>
    <includes local="no">openssl/bn.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includedby refid="addrman_8h" local="yes">/home/dev/ds-160209/src/addrman.h</includedby>
    <includedby refid="script_8h" local="yes">/home/dev/ds-160209/src/script.h</includedby>
    <includedby refid="stealth_8h" local="yes">/home/dev/ds-160209/src/stealth.h</includedby>
    <includedby refid="transaction_8h" local="yes">/home/dev/ds-160209/src/primitives/transaction.h</includedby>
    <includedby refid="leveldbwrapper_8h" local="yes">/home/dev/ds-160209/src/leveldbwrapper.h</includedby>
    <includedby refid="chain_8h" local="yes">/home/dev/ds-160209/src/chain.h</includedby>
    <includedby refid="wallet_8h" local="yes">/home/dev/ds-160209/src/wallet.h</includedby>
    <includedby refid="stormnode_8h" local="yes">/home/dev/ds-160209/src/stormnode.h</includedby>
    <includedby refid="stormnodeman_8h" local="yes">/home/dev/ds-160209/src/stormnodeman.h</includedby>
    <includedby refid="spork_8h" local="yes">/home/dev/ds-160209/src/spork.h</includedby>
    <includedby refid="alert_8cpp" local="yes">/home/dev/ds-160209/src/alert.cpp</includedby>
    <includedby refid="coins_8cpp" local="yes">/home/dev/ds-160209/src/coins.cpp</includedby>
    <includedby refid="scrypt_8h" local="yes">/home/dev/ds-160209/src/scrypt.h</includedby>
    <includedby refid="db_8cpp" local="yes">/home/dev/ds-160209/src/db.cpp</includedby>
    <includedby refid="i2p_8cpp" local="yes">/home/dev/ds-160209/src/i2p.cpp</includedby>
    <includedby refid="init_8cpp" local="yes">/home/dev/ds-160209/src/init.cpp</includedby>
    <includedby refid="stormnode-budget_8h" local="yes">/home/dev/ds-160209/src/stormnode-budget.h</includedby>
    <includedby refid="instantx_8cpp" local="yes">/home/dev/ds-160209/src/instantx.cpp</includedby>
    <includedby refid="key_8cpp" local="yes">/home/dev/ds-160209/src/key.cpp</includedby>
    <includedby refid="netbase_8cpp" local="yes">/home/dev/ds-160209/src/netbase.cpp</includedby>
    <includedby refid="protocol_8cpp" local="yes">/home/dev/ds-160209/src/protocol.cpp</includedby>
    <includedby refid="stormnodemanager_8h" local="yes">/home/dev/ds-160209/src/qt/stormnodemanager.h</includedby>
    <includedby refid="addeditstormnode_8cpp" local="yes">/home/dev/ds-160209/src/qt/addeditstormnode.cpp</includedby>
    <includedby refid="darksilk_8cpp" local="yes">/home/dev/ds-160209/src/qt/darksilk.cpp</includedby>
    <includedby refid="guiutil_8cpp" local="yes">/home/dev/ds-160209/src/qt/guiutil.cpp</includedby>
    <includedby refid="i2poptionswidget_8cpp" local="yes">/home/dev/ds-160209/src/qt/i2poptionswidget.cpp</includedby>
    <includedby refid="paymentserver_8cpp" local="yes">/home/dev/ds-160209/src/qt/paymentserver.cpp</includedby>
    <includedby refid="rpcclient_8cpp" local="yes">/home/dev/ds-160209/src/rpcclient.cpp</includedby>
    <includedby refid="rpcmisc_8cpp" local="yes">/home/dev/ds-160209/src/rpcmisc.cpp</includedby>
    <includedby refid="rpcnet_8cpp" local="yes">/home/dev/ds-160209/src/rpcnet.cpp</includedby>
    <includedby refid="rpcprotocol_8cpp" local="yes">/home/dev/ds-160209/src/rpcprotocol.cpp</includedby>
    <includedby refid="rpcserver_8cpp" local="yes">/home/dev/ds-160209/src/rpcserver.cpp</includedby>
    <includedby refid="rpcstormnode-budget_8cpp" local="yes">/home/dev/ds-160209/src/rpcstormnode-budget.cpp</includedby>
    <includedby refid="rpcwallet_8cpp" local="yes">/home/dev/ds-160209/src/rpcwallet.cpp</includedby>
    <includedby refid="sandstorm_8cpp" local="yes">/home/dev/ds-160209/src/sandstorm.cpp</includedby>
    <includedby refid="scrypt_8cpp" local="yes">/home/dev/ds-160209/src/scrypt.cpp</includedby>
    <includedby refid="spork_8cpp" local="yes">/home/dev/ds-160209/src/spork.cpp</includedby>
    <includedby refid="stormnode-budget_8cpp" local="yes">/home/dev/ds-160209/src/stormnode-budget.cpp</includedby>
    <includedby refid="stormnode-payments_8cpp" local="yes">/home/dev/ds-160209/src/stormnode-payments.cpp</includedby>
    <includedby refid="stormnode-sync_8cpp" local="yes">/home/dev/ds-160209/src/stormnode-sync.cpp</includedby>
    <includedby refid="stormnode_8cpp" local="yes">/home/dev/ds-160209/src/stormnode.cpp</includedby>
    <includedby refid="stormnodeconfig_8cpp" local="yes">/home/dev/ds-160209/src/stormnodeconfig.cpp</includedby>
    <includedby refid="stormnodeman_8cpp" local="yes">/home/dev/ds-160209/src/stormnodeman.cpp</includedby>
    <includedby refid="sync_8cpp" local="yes">/home/dev/ds-160209/src/sync.cpp</includedby>
    <includedby refid="allocator__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/allocator_tests.cpp</includedby>
    <includedby refid="base32__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/base32_tests.cpp</includedby>
    <includedby refid="base58__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/base58_tests.cpp</includedby>
    <includedby refid="base64__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/base64_tests.cpp</includedby>
    <includedby refid="bignum__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/bignum_tests.cpp</includedby>
    <includedby refid="_checkpoints__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/Checkpoints_tests.cpp</includedby>
    <includedby refid="getarg__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/getarg_tests.cpp</includedby>
    <includedby refid="hmac__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/hmac_tests.cpp</includedby>
    <includedby refid="key__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/key_tests.cpp</includedby>
    <includedby refid="mruset__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/mruset_tests.cpp</includedby>
    <includedby refid="timedata_8cpp" local="yes">/home/dev/ds-160209/src/timedata.cpp</includedby>
    <includedby refid="txdb-leveldb_8cpp" local="yes">/home/dev/ds-160209/src/txdb-leveldb.cpp</includedby>
    <includedby refid="util_8cpp" local="yes">/home/dev/ds-160209/src/util.cpp</includedby>
    <incdepgraph>
      <node id="52249">
        <label>list</label>
      </node>
      <node id="52238">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="52248">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="52222" relation="include">
        </childnode>
        <childnode refid="52236" relation="include">
        </childnode>
        <childnode refid="52223" relation="include">
        </childnode>
      </node>
      <node id="52228">
        <label>limits</label>
      </node>
      <node id="52260">
        <label>openssl/rand.h</label>
      </node>
      <node id="52233">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="52242">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="52243" relation="include">
        </childnode>
        <childnode refid="52223" relation="include">
        </childnode>
      </node>
      <node id="52239">
        <label>sys/mman.h</label>
      </node>
      <node id="52236">
        <label>stdlib.h</label>
      </node>
      <node id="52259">
        <label>openssl/crypto.h</label>
      </node>
      <node id="52255">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="52227">
        <label>cassert</label>
      </node>
      <node id="52247">
        <label>stdexcept</label>
      </node>
      <node id="52218">
        <label>/home/dev/ds-160209/src/util.h</label>
        <link refid="util.h"/>
        <childnode refid="52219" relation="include">
        </childnode>
        <childnode refid="52220" relation="include">
        </childnode>
        <childnode refid="52221" relation="include">
        </childnode>
        <childnode refid="52222" relation="include">
        </childnode>
        <childnode refid="52244" relation="include">
        </childnode>
        <childnode refid="52248" relation="include">
        </childnode>
        <childnode refid="52225" relation="include">
        </childnode>
        <childnode refid="52249" relation="include">
        </childnode>
        <childnode refid="52250" relation="include">
        </childnode>
        <childnode refid="52224" relation="include">
        </childnode>
        <childnode refid="52223" relation="include">
        </childnode>
        <childnode refid="52251" relation="include">
        </childnode>
        <childnode refid="52252" relation="include">
        </childnode>
        <childnode refid="52253" relation="include">
        </childnode>
        <childnode refid="52254" relation="include">
        </childnode>
        <childnode refid="52255" relation="include">
        </childnode>
        <childnode refid="52256" relation="include">
        </childnode>
        <childnode refid="52257" relation="include">
        </childnode>
        <childnode refid="52258" relation="include">
        </childnode>
        <childnode refid="52259" relation="include">
        </childnode>
        <childnode refid="52260" relation="include">
        </childnode>
        <childnode refid="52261" relation="include">
        </childnode>
        <childnode refid="52229" relation="include">
        </childnode>
      </node>
      <node id="52254">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="52223">
        <label>string</label>
      </node>
      <node id="52225">
        <label>map</label>
      </node>
      <node id="52251">
        <label>boost/thread.hpp</label>
      </node>
      <node id="52222">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="52223" relation="include">
        </childnode>
        <childnode refid="52224" relation="include">
        </childnode>
        <childnode refid="52225" relation="include">
        </childnode>
        <childnode refid="52226" relation="include">
        </childnode>
        <childnode refid="52227" relation="include">
        </childnode>
        <childnode refid="52228" relation="include">
        </childnode>
        <childnode refid="52229" relation="include">
        </childnode>
        <childnode refid="52230" relation="include">
        </childnode>
        <childnode refid="52231" relation="include">
        </childnode>
        <childnode refid="52232" relation="include">
        </childnode>
        <childnode refid="52233" relation="include">
        </childnode>
        <childnode refid="52234" relation="include">
        </childnode>
        <childnode refid="52242" relation="include">
        </childnode>
      </node>
      <node id="52240">
        <label>limits.h</label>
      </node>
      <node id="52221">
        <label>sys/resource.h</label>
      </node>
      <node id="52256">
        <label>openssl/bio.h</label>
      </node>
      <node id="52219">
        <label>sys/types.h</label>
      </node>
      <node id="52237">
        <label>string.h</label>
      </node>
      <node id="52243">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="52231">
        <label>cstdio</label>
      </node>
      <node id="52258">
        <label>openssl/buffer.h</label>
      </node>
      <node id="52232">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="52253">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="52241">
        <label>unistd.h</label>
      </node>
      <node id="52224">
        <label>vector</label>
      </node>
      <node id="52252">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="52250">
        <label>utility</label>
      </node>
      <node id="52246">
        <label>sstream</label>
      </node>
      <node id="52257">
        <label>openssl/evp.h</label>
      </node>
      <node id="52244">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="52227" relation="include">
        </childnode>
        <childnode refid="52245" relation="include">
        </childnode>
        <childnode refid="52246" relation="include">
        </childnode>
        <childnode refid="52247" relation="include">
        </childnode>
      </node>
      <node id="52229">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="52220">
        <label>sys/time.h</label>
      </node>
      <node id="52245">
        <label>iostream</label>
      </node>
      <node id="52261">
        <label>openssl/bn.h</label>
      </node>
      <node id="52234">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="52235" relation="include">
        </childnode>
        <childnode refid="52237" relation="include">
        </childnode>
        <childnode refid="52223" relation="include">
        </childnode>
        <childnode refid="52238" relation="include">
        </childnode>
        <childnode refid="52225" relation="include">
        </childnode>
        <childnode refid="52239" relation="include">
        </childnode>
        <childnode refid="52240" relation="include">
        </childnode>
        <childnode refid="52241" relation="include">
        </childnode>
      </node>
      <node id="52226">
        <label>set</label>
      </node>
      <node id="52235">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="52236" relation="include">
        </childnode>
      </node>
      <node id="52230">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="52297">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="52402">
        <label>/home/dev/ds-160209/src/test/base32_tests.cpp</label>
        <link refid="base32__tests_8cpp"/>
      </node>
      <node id="52397">
        <label>/home/dev/ds-160209/src/qt/i2poptionswidget.cpp</label>
        <link refid="i2poptionswidget_8cpp"/>
      </node>
      <node id="52281">
        <label>/home/dev/ds-160209/src/stormnodeman.cpp</label>
        <link refid="stormnodeman_8cpp"/>
      </node>
      <node id="52302">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="52399">
        <label>/home/dev/ds-160209/src/rpcclient.cpp</label>
        <link refid="rpcclient_8cpp"/>
      </node>
      <node id="52384">
        <label>/home/dev/ds-160209/src/rpcserver.cpp</label>
        <link refid="rpcserver_8cpp"/>
      </node>
      <node id="52282">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="52310">
        <label>/home/dev/ds-160209/src/qt/guiutil.cpp</label>
        <link refid="guiutil_8cpp"/>
      </node>
      <node id="52349">
        <label>/home/dev/ds-160209/src/stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52288" relation="include">
        </childnode>
        <childnode refid="52289" relation="include">
        </childnode>
        <childnode refid="52278" relation="include">
        </childnode>
        <childnode refid="52292" relation="include">
        </childnode>
        <childnode refid="52279" relation="include">
        </childnode>
        <childnode refid="52280" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52376">
        <label>/home/dev/ds-160209/src/primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="52362" relation="include">
        </childnode>
        <childnode refid="52267" relation="include">
        </childnode>
        <childnode refid="52333" relation="include">
        </childnode>
        <childnode refid="52330" relation="include">
        </childnode>
        <childnode refid="52377" relation="include">
        </childnode>
        <childnode refid="52378" relation="include">
        </childnode>
        <childnode refid="52283" relation="include">
        </childnode>
        <childnode refid="52379" relation="include">
        </childnode>
        <childnode refid="52380" relation="include">
        </childnode>
        <childnode refid="52310" relation="include">
        </childnode>
        <childnode refid="52340" relation="include">
        </childnode>
      </node>
      <node id="52295">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="52296" relation="include">
        </childnode>
        <childnode refid="52297" relation="include">
        </childnode>
        <childnode refid="52298" relation="include">
        </childnode>
        <childnode refid="52299" relation="include">
        </childnode>
        <childnode refid="52300" relation="include">
        </childnode>
        <childnode refid="52301" relation="include">
        </childnode>
      </node>
      <node id="52371">
        <label>/home/dev/ds-160209/src/script.h</label>
        <link refid="script_8h"/>
        <childnode refid="52372" relation="include">
        </childnode>
        <childnode refid="52376" relation="include">
        </childnode>
        <childnode refid="52266" relation="include">
        </childnode>
        <childnode refid="52267" relation="include">
        </childnode>
        <childnode refid="52381" relation="include">
        </childnode>
        <childnode refid="52270" relation="include">
        </childnode>
        <childnode refid="52366" relation="include">
        </childnode>
        <childnode refid="52306" relation="include">
        </childnode>
        <childnode refid="52291" relation="include">
        </childnode>
        <childnode refid="52358" relation="include">
        </childnode>
        <childnode refid="52278" relation="include">
        </childnode>
        <childnode refid="52388" relation="include">
        </childnode>
      </node>
      <node id="52308">
        <label>/home/dev/ds-160209/src/qt/addresstablemodel.cpp</label>
        <link refid="addresstablemodel_8cpp"/>
      </node>
      <node id="52365">
        <label>/home/dev/ds-160209/src/primitives/block.cpp</label>
        <link refid="block_8cpp"/>
      </node>
      <node id="52283">
        <label>/home/dev/ds-160209/src/net.cpp</label>
        <link refid="net_8cpp"/>
      </node>
      <node id="52373">
        <label>/home/dev/ds-160209/src/walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="52267" relation="include">
        </childnode>
        <childnode refid="52306" relation="include">
        </childnode>
        <childnode refid="52322" relation="include">
        </childnode>
        <childnode refid="52286" relation="include">
        </childnode>
        <childnode refid="52276" relation="include">
        </childnode>
        <childnode refid="52324" relation="include">
        </childnode>
        <childnode refid="52325" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
        <childnode refid="52328" relation="include">
        </childnode>
      </node>
      <node id="52269">
        <label>/home/dev/ds-160209/src/sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="52270" relation="include">
        </childnode>
        <childnode refid="52273" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52283" relation="include">
        </childnode>
        <childnode refid="52284" relation="include">
        </childnode>
        <childnode refid="52285" relation="include">
        </childnode>
        <childnode refid="52286" relation="include">
        </childnode>
        <childnode refid="52287" relation="include">
        </childnode>
        <childnode refid="52288" relation="include">
        </childnode>
        <childnode refid="52289" relation="include">
        </childnode>
        <childnode refid="52290" relation="include">
        </childnode>
        <childnode refid="52291" relation="include">
        </childnode>
        <childnode refid="52292" relation="include">
        </childnode>
        <childnode refid="52279" relation="include">
        </childnode>
        <childnode refid="52293" relation="include">
        </childnode>
        <childnode refid="52281" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52344">
        <label>/home/dev/ds-160209/src/stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="52264" relation="include">
        </childnode>
        <childnode refid="52273" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52345" relation="include">
        </childnode>
        <childnode refid="52297" relation="include">
        </childnode>
        <childnode refid="52305" relation="include">
        </childnode>
        <childnode refid="52277" relation="include">
        </childnode>
        <childnode refid="52288" relation="include">
        </childnode>
        <childnode refid="52289" relation="include">
        </childnode>
        <childnode refid="52291" relation="include">
        </childnode>
        <childnode refid="52292" relation="include">
        </childnode>
        <childnode refid="52279" relation="include">
        </childnode>
        <childnode refid="52280" relation="include">
        </childnode>
        <childnode refid="52293" relation="include">
        </childnode>
        <childnode refid="52281" relation="include">
        </childnode>
      </node>
      <node id="52333">
        <label>/home/dev/ds-160209/src/txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="52266" relation="include">
        </childnode>
        <childnode refid="52332" relation="include">
        </childnode>
        <childnode refid="52334" relation="include">
        </childnode>
      </node>
      <node id="52278">
        <label>/home/dev/ds-160209/src/spork.cpp</label>
        <link refid="spork_8cpp"/>
      </node>
      <node id="52323">
        <label>/home/dev/ds-160209/src/qt/transactiondesc.cpp</label>
        <link refid="transactiondesc_8cpp"/>
      </node>
      <node id="52345">
        <label>/home/dev/ds-160209/src/qt/clientmodel.cpp</label>
        <link refid="clientmodel_8cpp"/>
      </node>
      <node id="52317">
        <label>/home/dev/ds-160209/src/qt/transactionview.cpp</label>
        <link refid="transactionview_8cpp"/>
      </node>
      <node id="52381">
        <label>/home/dev/ds-160209/src/base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="52346" relation="include">
        </childnode>
        <childnode refid="52347" relation="include">
        </childnode>
        <childnode refid="52270" relation="include">
        </childnode>
        <childnode refid="52382" relation="include">
        </childnode>
        <childnode refid="52349" relation="include">
        </childnode>
        <childnode refid="52294" relation="include">
        </childnode>
        <childnode refid="52273" relation="include">
        </childnode>
        <childnode refid="52306" relation="include">
        </childnode>
        <childnode refid="52308" relation="include">
        </childnode>
        <childnode refid="52318" relation="include">
        </childnode>
        <childnode refid="52319" relation="include">
        </childnode>
        <childnode refid="52284" relation="include">
        </childnode>
        <childnode refid="52320" relation="include">
        </childnode>
        <childnode refid="52298" relation="include">
        </childnode>
        <childnode refid="52312" relation="include">
        </childnode>
        <childnode refid="52314" relation="include">
        </childnode>
        <childnode refid="52321" relation="include">
        </childnode>
        <childnode refid="52323" relation="include">
        </childnode>
        <childnode refid="52287" relation="include">
        </childnode>
        <childnode refid="52276" relation="include">
        </childnode>
        <childnode refid="52383" relation="include">
        </childnode>
        <childnode refid="52305" relation="include">
        </childnode>
        <childnode refid="52277" relation="include">
        </childnode>
        <childnode refid="52340" relation="include">
        </childnode>
        <childnode refid="52384" relation="include">
        </childnode>
        <childnode refid="52324" relation="include">
        </childnode>
        <childnode refid="52303" relation="include">
        </childnode>
        <childnode refid="52278" relation="include">
        </childnode>
        <childnode refid="52385" relation="include">
        </childnode>
        <childnode refid="52368" relation="include">
        </childnode>
        <childnode refid="52386" relation="include">
        </childnode>
        <childnode refid="52387" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
        <childnode refid="52328" relation="include">
        </childnode>
      </node>
      <node id="52289">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode_8cpp"/>
      </node>
      <node id="52284">
        <label>/home/dev/ds-160209/src/qt/coincontroldialog.cpp</label>
        <link refid="coincontroldialog_8cpp"/>
      </node>
      <node id="52335">
        <label>/home/dev/ds-160209/src/coins.cpp</label>
        <link refid="coins_8cpp"/>
      </node>
      <node id="52298">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="52368">
        <label>/home/dev/ds-160209/src/stormnodeconfig.cpp</label>
        <link refid="stormnodeconfig_8cpp"/>
      </node>
      <node id="52332">
        <label>/home/dev/ds-160209/src/coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="52333" relation="include">
        </childnode>
        <childnode refid="52335" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
      </node>
      <node id="52363">
        <label>/home/dev/ds-160209/src/chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="52266" relation="include">
        </childnode>
        <childnode refid="52271" relation="include">
        </childnode>
        <childnode refid="52364" relation="include">
        </childnode>
      </node>
      <node id="52294">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52295" relation="include">
        </childnode>
        <childnode refid="52301" relation="include">
        </childnode>
        <childnode refid="52276" relation="include">
        </childnode>
        <childnode refid="52302" relation="include">
        </childnode>
        <childnode refid="52303" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52296">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="52379">
        <label>/home/dev/ds-160209/src/primitives/transaction.cpp</label>
        <link refid="transaction_8cpp"/>
      </node>
      <node id="52324">
        <label>/home/dev/ds-160209/src/rpcwallet.cpp</label>
        <link refid="rpcwallet_8cpp"/>
      </node>
      <node id="52356">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="52321" relation="include">
        </childnode>
      </node>
      <node id="52334">
        <label>/home/dev/ds-160209/src/txmempool.cpp</label>
        <link refid="txmempool_8cpp"/>
      </node>
      <node id="52343">
        <label>/home/dev/ds-160209/src/stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="52344" relation="include">
        </childnode>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52275" relation="include">
        </childnode>
        <childnode refid="52288" relation="include">
        </childnode>
        <childnode refid="52289" relation="include">
        </childnode>
        <childnode refid="52291" relation="include">
        </childnode>
        <childnode refid="52279" relation="include">
        </childnode>
        <childnode refid="52280" relation="include">
        </childnode>
        <childnode refid="52293" relation="include">
        </childnode>
        <childnode refid="52281" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52321">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="52313">
        <label>/home/dev/ds-160209/src/qt/sendcoinsentry.cpp</label>
        <link refid="sendcoinsentry_8cpp"/>
      </node>
      <node id="52353">
        <label>/home/dev/ds-160209/src/qt/debugconsole.h</label>
        <link refid="debugconsole_8h"/>
        <childnode refid="52297" relation="include">
        </childnode>
        <childnode refid="52354" relation="include">
        </childnode>
      </node>
      <node id="52262">
        <label>/home/dev/ds-160209/src/util.h</label>
        <link refid="util.h"/>
        <childnode refid="52263" relation="include">
        </childnode>
        <childnode refid="52371" relation="include">
        </childnode>
        <childnode refid="52389" relation="include">
        </childnode>
        <childnode refid="52376" relation="include">
        </childnode>
        <childnode refid="52390" relation="include">
        </childnode>
        <childnode refid="52363" relation="include">
        </childnode>
        <childnode refid="52267" relation="include">
        </childnode>
        <childnode refid="52346" relation="include">
        </childnode>
        <childnode refid="52347" relation="include">
        </childnode>
        <childnode refid="52270" relation="include">
        </childnode>
        <childnode refid="52360" relation="include">
        </childnode>
        <childnode refid="52335" relation="include">
        </childnode>
        <childnode refid="52361" relation="include">
        </childnode>
        <childnode refid="52370" relation="include">
        </childnode>
        <childnode refid="52392" relation="include">
        </childnode>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52349" relation="include">
        </childnode>
        <childnode refid="52273" relation="include">
        </childnode>
        <childnode refid="52393" relation="include">
        </childnode>
        <childnode refid="52394" relation="include">
        </childnode>
        <childnode refid="52395" relation="include">
        </childnode>
        <childnode refid="52396" relation="include">
        </childnode>
        <childnode refid="52306" relation="include">
        </childnode>
        <childnode refid="52296" relation="include">
        </childnode>
        <childnode refid="52310" relation="include">
        </childnode>
        <childnode refid="52397" relation="include">
        </childnode>
        <childnode refid="52398" relation="include">
        </childnode>
        <childnode refid="52399" relation="include">
        </childnode>
        <childnode refid="52277" relation="include">
        </childnode>
        <childnode refid="52357" relation="include">
        </childnode>
        <childnode refid="52400" relation="include">
        </childnode>
        <childnode refid="52384" relation="include">
        </childnode>
        <childnode refid="52288" relation="include">
        </childnode>
        <childnode refid="52324" relation="include">
        </childnode>
        <childnode refid="52291" relation="include">
        </childnode>
        <childnode refid="52367" relation="include">
        </childnode>
        <childnode refid="52278" relation="include">
        </childnode>
        <childnode refid="52292" relation="include">
        </childnode>
        <childnode refid="52279" relation="include">
        </childnode>
        <childnode refid="52280" relation="include">
        </childnode>
        <childnode refid="52293" relation="include">
        </childnode>
        <childnode refid="52368" relation="include">
        </childnode>
        <childnode refid="52281" relation="include">
        </childnode>
        <childnode refid="52401" relation="include">
        </childnode>
        <childnode refid="52359" relation="include">
        </childnode>
        <childnode refid="52402" relation="include">
        </childnode>
        <childnode refid="52386" relation="include">
        </childnode>
        <childnode refid="52326" relation="include">
        </childnode>
        <childnode refid="52403" relation="include">
        </childnode>
        <childnode refid="52404" relation="include">
        </childnode>
        <childnode refid="52405" relation="include">
        </childnode>
        <childnode refid="52406" relation="include">
        </childnode>
        <childnode refid="52387" relation="include">
        </childnode>
        <childnode refid="52407" relation="include">
        </childnode>
        <childnode refid="52408" relation="include">
        </childnode>
        <childnode refid="52341" relation="include">
        </childnode>
        <childnode refid="52409" relation="include">
        </childnode>
      </node>
      <node id="52351">
        <label>/home/dev/ds-160209/src/chainparams.cpp</label>
        <link refid="chainparams_8cpp"/>
      </node>
      <node id="52276">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="52337">
        <label>/home/dev/ds-160209/src/compressor.cpp</label>
        <link refid="compressor_8cpp"/>
      </node>
      <node id="52315">
        <label>/home/dev/ds-160209/src/qt/test/uritests.cpp</label>
        <link refid="uritests_8cpp"/>
      </node>
      <node id="52267">
        <label>/home/dev/ds-160209/src/wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="52268" relation="include">
        </childnode>
        <childnode refid="52271" relation="include">
        </childnode>
        <childnode refid="52294" relation="include">
        </childnode>
        <childnode refid="52304" relation="include">
        </childnode>
        <childnode refid="52283" relation="include">
        </childnode>
        <childnode refid="52306" relation="include">
        </childnode>
        <childnode refid="52307" relation="include">
        </childnode>
        <childnode refid="52308" relation="include">
        </childnode>
        <childnode refid="52318" relation="include">
        </childnode>
        <childnode refid="52319" relation="include">
        </childnode>
        <childnode refid="52284" relation="include">
        </childnode>
        <childnode refid="52296" relation="include">
        </childnode>
        <childnode refid="52297" relation="include">
        </childnode>
        <childnode refid="52320" relation="include">
        </childnode>
        <childnode refid="52322" relation="include">
        </childnode>
        <childnode refid="52314" relation="include">
        </childnode>
        <childnode refid="52321" relation="include">
        </childnode>
        <childnode refid="52286" relation="include">
        </childnode>
        <childnode refid="52323" relation="include">
        </childnode>
        <childnode refid="52287" relation="include">
        </childnode>
        <childnode refid="52316" relation="include">
        </childnode>
        <childnode refid="52276" relation="include">
        </childnode>
        <childnode refid="52324" relation="include">
        </childnode>
        <childnode refid="52325" relation="include">
        </childnode>
        <childnode refid="52326" relation="include">
        </childnode>
        <childnode refid="52327" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
        <childnode refid="52328" relation="include">
        </childnode>
      </node>
      <node id="52361">
        <label>/home/dev/ds-160209/src/scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="52362" relation="include">
        </childnode>
        <childnode refid="52366" relation="include">
        </childnode>
        <childnode refid="52367" relation="include">
        </childnode>
      </node>
      <node id="52357">
        <label>/home/dev/ds-160209/src/rpcnet.cpp</label>
        <link refid="rpcnet_8cpp"/>
      </node>
      <node id="52342">
        <label>/home/dev/ds-160209/src/txdb.cpp</label>
        <link refid="txdb_8cpp"/>
      </node>
      <node id="52314">
        <label>/home/dev/ds-160209/src/qt/signverifymessagedialog.cpp</label>
        <link refid="signverifymessagedialog_8cpp"/>
      </node>
      <node id="52275">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="52280">
        <label>/home/dev/ds-160209/src/stormnode-sync.cpp</label>
        <link refid="stormnode-sync_8cpp"/>
      </node>
      <node id="52398">
        <label>/home/dev/ds-160209/src/qt/paymentserver.cpp</label>
        <link refid="paymentserver_8cpp"/>
      </node>
      <node id="52305">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="52394">
        <label>/home/dev/ds-160209/src/netbase.cpp</label>
        <link refid="netbase_8cpp"/>
      </node>
      <node id="52392">
        <label>/home/dev/ds-160209/src/i2p.cpp</label>
        <link refid="i2p_8cpp"/>
      </node>
      <node id="52348">
        <label>/home/dev/ds-160209/src/sandstorm-relay.h</label>
        <link refid="sandstorm-relay_8h"/>
        <childnode refid="52290" relation="include">
        </childnode>
      </node>
      <node id="52263">
        <label>/home/dev/ds-160209/src/addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="52264" relation="include">
        </childnode>
        <childnode refid="52265" relation="include">
        </childnode>
        <childnode refid="52369" relation="include">
        </childnode>
        <childnode refid="52370" relation="include">
        </childnode>
        <childnode refid="52292" relation="include">
        </childnode>
        <childnode refid="52279" relation="include">
        </childnode>
        <childnode refid="52280" relation="include">
        </childnode>
        <childnode refid="52293" relation="include">
        </childnode>
        <childnode refid="52281" relation="include">
        </childnode>
      </node>
      <node id="52319">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.cpp</label>
        <link refid="blockbrowser_8cpp"/>
      </node>
      <node id="52346">
        <label>/home/dev/ds-160209/src/stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="52343" relation="include">
        </childnode>
        <childnode refid="52347" relation="include">
        </childnode>
        <childnode refid="52349" relation="include">
        </childnode>
        <childnode refid="52286" relation="include">
        </childnode>
        <childnode refid="52292" relation="include">
        </childnode>
        <childnode refid="52280" relation="include">
        </childnode>
        <childnode refid="52293" relation="include">
        </childnode>
        <childnode refid="52281" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52390">
        <label>/home/dev/ds-160209/src/leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="52329" relation="include">
        </childnode>
        <childnode refid="52391" relation="include">
        </childnode>
      </node>
      <node id="52383">
        <label>/home/dev/ds-160209/src/rpcdump.cpp</label>
        <link refid="rpcdump_8cpp"/>
      </node>
      <node id="52378">
        <label>/home/dev/ds-160209/src/instantx.h</label>
        <link refid="instantx_8h"/>
        <childnode refid="52273" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52307" relation="include">
        </childnode>
        <childnode refid="52287" relation="include">
        </childnode>
        <childnode refid="52291" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52369">
        <label>/home/dev/ds-160209/src/addrman.cpp</label>
        <link refid="addrman_8cpp"/>
      </node>
      <node id="52341">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="52287">
        <label>/home/dev/ds-160209/src/qt/transactionrecord.cpp</label>
        <link refid="transactionrecord_8cpp"/>
      </node>
      <node id="52331">
        <label>/home/dev/ds-160209/src/undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="52332" relation="include">
        </childnode>
        <childnode refid="52336" relation="include">
        </childnode>
      </node>
      <node id="52359">
        <label>/home/dev/ds-160209/src/test/allocator_tests.cpp</label>
        <link refid="allocator__tests_8cpp"/>
      </node>
      <node id="52382">
        <label>/home/dev/ds-160209/src/base58.cpp</label>
        <link refid="base58_8cpp"/>
      </node>
      <node id="52367">
        <label>/home/dev/ds-160209/src/scrypt.cpp</label>
        <link refid="scrypt_8cpp"/>
      </node>
      <node id="52377">
        <label>/home/dev/ds-160209/src/coincontrol.h</label>
        <link refid="coincontrol_8h"/>
        <childnode refid="52284" relation="include">
        </childnode>
        <childnode refid="52312" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52358">
        <label>/home/dev/ds-160209/src/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="52326">
        <label>/home/dev/ds-160209/src/test/base64_tests.cpp</label>
        <link refid="base64__tests_8cpp"/>
      </node>
      <node id="52286">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.cpp</label>
        <link refid="stormnodemanager_8cpp"/>
      </node>
      <node id="52408">
        <label>/home/dev/ds-160209/src/timedata.cpp</label>
        <link refid="timedata_8cpp"/>
      </node>
      <node id="52311">
        <label>/home/dev/ds-160209/src/qt/sandstormconfig.cpp</label>
        <link refid="sandstormconfig_8cpp"/>
      </node>
      <node id="52279">
        <label>/home/dev/ds-160209/src/stormnode-payments.cpp</label>
        <link refid="stormnode-payments_8cpp"/>
      </node>
      <node id="52360">
        <label>/home/dev/ds-160209/src/alert.cpp</label>
        <link refid="alert_8cpp"/>
      </node>
      <node id="52374">
        <label>/home/dev/ds-160209/src/crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="52267" relation="include">
        </childnode>
        <childnode refid="52366" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52327">
        <label>/home/dev/ds-160209/src/test/wallet_tests.cpp</label>
        <link refid="wallet__tests_8cpp"/>
      </node>
      <node id="52372">
        <label>/home/dev/ds-160209/src/keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="52373" relation="include">
        </childnode>
        <childnode refid="52374" relation="include">
        </childnode>
        <childnode refid="52267" relation="include">
        </childnode>
        <childnode refid="52375" relation="include">
        </childnode>
        <childnode refid="52340" relation="include">
        </childnode>
        <childnode refid="52358" relation="include">
        </childnode>
      </node>
      <node id="52322">
        <label>/home/dev/ds-160209/src/qt/optionsmodel.cpp</label>
        <link refid="optionsmodel_8cpp"/>
      </node>
      <node id="52370">
        <label>/home/dev/ds-160209/src/db.cpp</label>
        <link refid="db_8cpp"/>
      </node>
      <node id="52403">
        <label>/home/dev/ds-160209/src/test/bignum_tests.cpp</label>
        <link refid="bignum__tests_8cpp"/>
      </node>
      <node id="52389">
        <label>/home/dev/ds-160209/src/stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="52371" relation="include">
        </childnode>
        <childnode refid="52373" relation="include">
        </childnode>
        <childnode refid="52267" relation="include">
        </childnode>
        <childnode refid="52313" relation="include">
        </childnode>
        <childnode refid="52277" relation="include">
        </childnode>
        <childnode refid="52385" relation="include">
        </childnode>
      </node>
      <node id="52364">
        <label>/home/dev/ds-160209/src/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="52271" relation="include">
        </childnode>
        <childnode refid="52339" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52275" relation="include">
        </childnode>
        <childnode refid="52356" relation="include">
        </childnode>
        <childnode refid="52305" relation="include">
        </childnode>
        <childnode refid="52341" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52325">
        <label>/home/dev/ds-160209/src/test/accounting_tests.cpp</label>
        <link refid="accounting__tests_8cpp"/>
      </node>
      <node id="52385">
        <label>/home/dev/ds-160209/src/stealth.cpp</label>
        <link refid="stealth_8cpp"/>
      </node>
      <node id="52340">
        <label>/home/dev/ds-160209/src/rpcrawtransaction.cpp</label>
        <link refid="rpcrawtransaction_8cpp"/>
      </node>
      <node id="52266">
        <label>/home/dev/ds-160209/src/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="52267" relation="include">
        </childnode>
        <childnode refid="52329" relation="include">
        </childnode>
        <childnode refid="52343" relation="include">
        </childnode>
        <childnode refid="52346" relation="include">
        </childnode>
        <childnode refid="52344" relation="include">
        </childnode>
        <childnode refid="52347" relation="include">
        </childnode>
        <childnode refid="52270" relation="include">
        </childnode>
        <childnode refid="52350" relation="include">
        </childnode>
        <childnode refid="52351" relation="include">
        </childnode>
        <childnode refid="52338" relation="include">
        </childnode>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52349" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52283" relation="include">
        </childnode>
        <childnode refid="52318" relation="include">
        </childnode>
        <childnode refid="52319" relation="include">
        </childnode>
        <childnode refid="52352" relation="include">
        </childnode>
        <childnode refid="52345" relation="include">
        </childnode>
        <childnode refid="52320" relation="include">
        </childnode>
        <childnode refid="52314" relation="include">
        </childnode>
        <childnode refid="52321" relation="include">
        </childnode>
        <childnode refid="52323" relation="include">
        </childnode>
        <childnode refid="52356" relation="include">
        </childnode>
        <childnode refid="52305" relation="include">
        </childnode>
        <childnode refid="52277" relation="include">
        </childnode>
        <childnode refid="52357" relation="include">
        </childnode>
        <childnode refid="52340" relation="include">
        </childnode>
        <childnode refid="52302" relation="include">
        </childnode>
        <childnode refid="52288" relation="include">
        </childnode>
        <childnode refid="52289" relation="include">
        </childnode>
        <childnode refid="52358" relation="include">
        </childnode>
        <childnode refid="52278" relation="include">
        </childnode>
        <childnode refid="52292" relation="include">
        </childnode>
        <childnode refid="52359" relation="include">
        </childnode>
        <childnode refid="52326" relation="include">
        </childnode>
        <childnode refid="52327" relation="include">
        </childnode>
        <childnode refid="52341" relation="include">
        </childnode>
      </node>
      <node id="52290">
        <label>/home/dev/ds-160209/src/sandstorm-relay.cpp</label>
        <link refid="sandstorm-relay_8cpp"/>
      </node>
      <node id="52347">
        <label>/home/dev/ds-160209/src/stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="52264" relation="include">
        </childnode>
        <childnode refid="52269" relation="include">
        </childnode>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52273" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52275" relation="include">
        </childnode>
        <childnode refid="52345" relation="include">
        </childnode>
        <childnode refid="52286" relation="include">
        </childnode>
        <childnode refid="52288" relation="include">
        </childnode>
        <childnode refid="52289" relation="include">
        </childnode>
        <childnode refid="52348" relation="include">
        </childnode>
        <childnode refid="52292" relation="include">
        </childnode>
        <childnode refid="52279" relation="include">
        </childnode>
        <childnode refid="52280" relation="include">
        </childnode>
        <childnode refid="52293" relation="include">
        </childnode>
        <childnode refid="52281" relation="include">
        </childnode>
      </node>
      <node id="52388">
        <label>/home/dev/ds-160209/src/test/sigopcount_tests.cpp</label>
        <link refid="sigopcount__tests_8cpp"/>
      </node>
      <node id="52339">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
      </node>
      <node id="52309">
        <label>/home/dev/ds-160209/src/qt/askpassphrasedialog.cpp</label>
        <link refid="askpassphrasedialog_8cpp"/>
      </node>
      <node id="52265">
        <label>/home/dev/ds-160209/src/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="52266" relation="include">
        </childnode>
        <childnode refid="52346" relation="include">
        </childnode>
        <childnode refid="52347" relation="include">
        </childnode>
        <childnode refid="52270" relation="include">
        </childnode>
        <childnode refid="52360" relation="include">
        </childnode>
        <childnode refid="52361" relation="include">
        </childnode>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52349" relation="include">
        </childnode>
        <childnode refid="52294" relation="include">
        </childnode>
        <childnode refid="52273" relation="include">
        </childnode>
        <childnode refid="52283" relation="include">
        </childnode>
        <childnode refid="52352" relation="include">
        </childnode>
        <childnode refid="52355" relation="include">
        </childnode>
        <childnode refid="52277" relation="include">
        </childnode>
        <childnode refid="52357" relation="include">
        </childnode>
        <childnode refid="52340" relation="include">
        </childnode>
        <childnode refid="52324" relation="include">
        </childnode>
        <childnode refid="52367" relation="include">
        </childnode>
        <childnode refid="52278" relation="include">
        </childnode>
        <childnode refid="52368" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52406">
        <label>/home/dev/ds-160209/src/test/hmac_tests.cpp</label>
        <link refid="hmac__tests_8cpp"/>
      </node>
      <node id="52288">
        <label>/home/dev/ds-160209/src/rpcstormnode-budget.cpp</label>
        <link refid="rpcstormnode-budget_8cpp"/>
      </node>
      <node id="52391">
        <label>/home/dev/ds-160209/src/leveldbwrapper.cpp</label>
        <link refid="leveldbwrapper_8cpp"/>
      </node>
      <node id="52330">
        <label>/home/dev/ds-160209/src/compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="52331" relation="include">
        </childnode>
        <childnode refid="52337" relation="include">
        </childnode>
      </node>
      <node id="52264">
        <label>/home/dev/ds-160209/src/activestormnode.cpp</label>
        <link refid="activestormnode_8cpp"/>
      </node>
      <node id="52328">
        <label>/home/dev/ds-160209/src/walletdb.cpp</label>
        <link refid="walletdb_8cpp"/>
      </node>
      <node id="52396">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.h</label>
        <link refid="stormnodemanager_8h"/>
        <childnode refid="52306" relation="include">
        </childnode>
        <childnode refid="52297" relation="include">
        </childnode>
        <childnode refid="52286" relation="include">
        </childnode>
      </node>
      <node id="52271">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="52292">
        <label>/home/dev/ds-160209/src/stormnode-budget.cpp</label>
        <link refid="stormnode-budget_8cpp"/>
      </node>
      <node id="52336">
        <label>/home/dev/ds-160209/src/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="52350">
        <label>/home/dev/ds-160209/src/txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="52271" relation="include">
        </childnode>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52339" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52275" relation="include">
        </childnode>
        <childnode refid="52323" relation="include">
        </childnode>
        <childnode refid="52305" relation="include">
        </childnode>
        <childnode refid="52340" relation="include">
        </childnode>
        <childnode refid="52303" relation="include">
        </childnode>
        <childnode refid="52341" relation="include">
        </childnode>
        <childnode refid="52342" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52400">
        <label>/home/dev/ds-160209/src/rpcprotocol.cpp</label>
        <link refid="rpcprotocol_8cpp"/>
      </node>
      <node id="52306">
        <label>/home/dev/ds-160209/src/qt/addeditstormnode.cpp</label>
        <link refid="addeditstormnode_8cpp"/>
      </node>
      <node id="52273">
        <label>/home/dev/ds-160209/src/instantx.cpp</label>
        <link refid="instantx_8cpp"/>
      </node>
      <node id="52272">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="52352">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.h</label>
        <link refid="peertablemodel_8h"/>
        <childnode refid="52345" relation="include">
        </childnode>
        <childnode refid="52353" relation="include">
        </childnode>
        <childnode refid="52355" relation="include">
        </childnode>
      </node>
      <node id="52409">
        <label>/home/dev/ds-160209/src/util.cpp</label>
        <link refid="util_8cpp"/>
      </node>
      <node id="52299">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="52270">
        <label>/home/dev/ds-160209/src/spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="52264" relation="include">
        </childnode>
        <childnode refid="52271" relation="include">
        </childnode>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52273" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52275" relation="include">
        </childnode>
        <childnode refid="52276" relation="include">
        </childnode>
        <childnode refid="52277" relation="include">
        </childnode>
        <childnode refid="52278" relation="include">
        </childnode>
        <childnode refid="52279" relation="include">
        </childnode>
        <childnode refid="52280" relation="include">
        </childnode>
        <childnode refid="52281" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52404">
        <label>/home/dev/ds-160209/src/test/Checkpoints_tests.cpp</label>
        <link refid="_checkpoints__tests_8cpp"/>
      </node>
      <node id="52300">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="52401">
        <label>/home/dev/ds-160209/src/sync.cpp</label>
        <link refid="sync_8cpp"/>
      </node>
      <node id="52301">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="52387">
        <label>/home/dev/ds-160209/src/test/key_tests.cpp</label>
        <link refid="key__tests_8cpp"/>
      </node>
      <node id="52304">
        <label>/home/dev/ds-160209/src/miner.h</label>
        <link refid="miner_8h"/>
        <childnode refid="52275" relation="include">
        </childnode>
        <childnode refid="52305" relation="include">
        </childnode>
      </node>
      <node id="52303">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="52355">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.cpp</label>
        <link refid="peertablemodel_8cpp"/>
      </node>
      <node id="52320">
        <label>/home/dev/ds-160209/src/qt/statisticspage.h</label>
        <link refid="statisticspage_8h"/>
        <childnode refid="52297" relation="include">
        </childnode>
        <childnode refid="52321" relation="include">
        </childnode>
      </node>
      <node id="52405">
        <label>/home/dev/ds-160209/src/test/getarg_tests.cpp</label>
        <link refid="getarg__tests_8cpp"/>
      </node>
      <node id="52386">
        <label>/home/dev/ds-160209/src/test/base58_tests.cpp</label>
        <link refid="base58__tests_8cpp"/>
      </node>
      <node id="52380">
        <label>/home/dev/ds-160209/src/qt/darksilkunits.cpp</label>
        <link refid="darksilkunits_8cpp"/>
      </node>
      <node id="52329">
        <label>/home/dev/ds-160209/src/txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="52330" relation="include">
        </childnode>
        <childnode refid="52266" relation="include">
        </childnode>
        <childnode refid="52338" relation="include">
        </childnode>
        <childnode refid="52335" relation="include">
        </childnode>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52339" relation="include">
        </childnode>
        <childnode refid="52274" relation="include">
        </childnode>
        <childnode refid="52275" relation="include">
        </childnode>
        <childnode refid="52305" relation="include">
        </childnode>
        <childnode refid="52340" relation="include">
        </childnode>
        <childnode refid="52303" relation="include">
        </childnode>
        <childnode refid="52341" relation="include">
        </childnode>
        <childnode refid="52342" relation="include">
        </childnode>
        <childnode refid="52282" relation="include">
        </childnode>
      </node>
      <node id="52395">
        <label>/home/dev/ds-160209/src/protocol.cpp</label>
        <link refid="protocol_8cpp"/>
      </node>
      <node id="52316">
        <label>/home/dev/ds-160209/src/qt/transactiontablemodel.cpp</label>
        <link refid="transactiontablemodel_8cpp"/>
      </node>
      <node id="52407">
        <label>/home/dev/ds-160209/src/test/mruset_tests.cpp</label>
        <link refid="mruset__tests_8cpp"/>
      </node>
      <node id="52274">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="52277">
        <label>/home/dev/ds-160209/src/rpcmisc.cpp</label>
        <link refid="rpcmisc_8cpp"/>
      </node>
      <node id="52312">
        <label>/home/dev/ds-160209/src/qt/sendcoinsdialog.cpp</label>
        <link refid="sendcoinsdialog_8cpp"/>
      </node>
      <node id="52268">
        <label>/home/dev/ds-160209/src/activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="52264" relation="include">
        </childnode>
        <childnode refid="52269" relation="include">
        </childnode>
        <childnode refid="52272" relation="include">
        </childnode>
        <childnode refid="52273" relation="include">
        </childnode>
        <childnode refid="52286" relation="include">
        </childnode>
        <childnode refid="52288" relation="include">
        </childnode>
        <childnode refid="52289" relation="include">
        </childnode>
        <childnode refid="52280" relation="include">
        </childnode>
        <childnode refid="52281" relation="include">
        </childnode>
      </node>
      <node id="52375">
        <label>/home/dev/ds-160209/src/keystore.cpp</label>
        <link refid="keystore_8cpp"/>
      </node>
      <node id="52307">
        <label>/home/dev/ds-160209/src/qt/walletmodel.h</label>
        <link refid="walletmodel_8h"/>
        <childnode refid="52308" relation="include">
        </childnode>
        <childnode refid="52309" relation="include">
        </childnode>
        <childnode refid="52284" relation="include">
        </childnode>
        <childnode refid="52296" relation="include">
        </childnode>
        <childnode refid="52297" relation="include">
        </childnode>
        <childnode refid="52310" relation="include">
        </childnode>
        <childnode refid="52298" relation="include">
        </childnode>
        <childnode refid="52285" relation="include">
        </childnode>
        <childnode refid="52311" relation="include">
        </childnode>
        <childnode refid="52312" relation="include">
        </childnode>
        <childnode refid="52313" relation="include">
        </childnode>
        <childnode refid="52300" relation="include">
        </childnode>
        <childnode refid="52301" relation="include">
        </childnode>
        <childnode refid="52314" relation="include">
        </childnode>
        <childnode refid="52286" relation="include">
        </childnode>
        <childnode refid="52315" relation="include">
        </childnode>
        <childnode refid="52316" relation="include">
        </childnode>
        <childnode refid="52317" relation="include">
        </childnode>
        <childnode refid="52276" relation="include">
        </childnode>
      </node>
      <node id="52393">
        <label>/home/dev/ds-160209/src/key.cpp</label>
        <link refid="key_8cpp"/>
      </node>
      <node id="52291">
        <label>/home/dev/ds-160209/src/sandstorm.cpp</label>
        <link refid="sandstorm_8cpp"/>
      </node>
      <node id="52318">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.h</label>
        <link refid="blockbrowser_8h"/>
        <childnode refid="52319" relation="include">
        </childnode>
        <childnode refid="52297" relation="include">
        </childnode>
      </node>
      <node id="52285">
        <label>/home/dev/ds-160209/src/qt/overviewpage.cpp</label>
        <link refid="overviewpage_8cpp"/>
      </node>
      <node id="52338">
        <label>/home/dev/ds-160209/src/checkpoints.cpp</label>
        <link refid="checkpoints_8cpp"/>
      </node>
      <node id="52293">
        <label>/home/dev/ds-160209/src/stormnode.cpp</label>
        <link refid="stormnode_8cpp"/>
      </node>
      <node id="52362">
        <label>/home/dev/ds-160209/src/primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="52267" relation="include">
        </childnode>
        <childnode refid="52363" relation="include">
        </childnode>
        <childnode refid="52275" relation="include">
        </childnode>
        <childnode refid="52365" relation="include">
        </childnode>
      </node>
      <node id="52354">
        <label>/home/dev/ds-160209/src/qt/debugconsole.cpp</label>
        <link refid="debugconsole_8cpp"/>
      </node>
      <node id="52366">
        <label>/home/dev/ds-160209/src/crypter.cpp</label>
        <link refid="crypter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_median_filter" prot="public">CMedianFilter</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" prot="public" static="no">
        <name>BEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((char*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="45" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</referencedby>
        <referencedby refid="class_c_block_header_1a795e040a33329757f6b31dfbcabbb2a5" compoundref="primitives_2block_8h" startline="92" endline="95">CBlockHeader::GetPoWArgonHash</referencedby>
        <referencedby refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" compoundref="primitives_2block_8h" startline="196" endline="213">CBlock::BuildMerkleTree</referencedby>
        <referencedby refid="class_c_block_1ab0d596c51fb317e3cb6f444015a652a5" compoundref="primitives_2block_8h" startline="231" endline="244">CBlock::CheckMerkleBranch</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="class_c_spork_message_1aa71d5976465a8edb3f11901b14b9df65" compoundref="spork_8h" startline="79" endline="82">CSporkMessage::GetHash</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ac32457d3f041434e57a2924847796fda" prot="public" static="no">
        <name>END</name>
        <param><defname>a</defname></param>
        <initializer>((char*)&amp;((&amp;(a))[1]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="46" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</referencedby>
        <referencedby refid="class_c_block_header_1a795e040a33329757f6b31dfbcabbb2a5" compoundref="primitives_2block_8h" startline="92" endline="95">CBlockHeader::GetPoWArgonHash</referencedby>
        <referencedby refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" compoundref="primitives_2block_8h" startline="196" endline="213">CBlock::BuildMerkleTree</referencedby>
        <referencedby refid="class_c_block_1ab0d596c51fb317e3cb6f444015a652a5" compoundref="primitives_2block_8h" startline="231" endline="244">CBlock::CheckMerkleBranch</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="class_c_spork_message_1aa71d5976465a8edb3f11901b14b9df65" compoundref="spork_8h" startline="79" endline="82">CSporkMessage::GetHash</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a4a903229f3d520fdb700f1c82586368b" prot="public" static="no">
        <name>UBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((unsigned char*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="47" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1af0f53b3b9bd67803cd1efe42c7894aa3" prot="public" static="no">
        <name>UEND</name>
        <param><defname>a</defname></param>
        <initializer>((unsigned char*)&amp;((&amp;(a))[1]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="48" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a35bf72ac971bd331fba0b3e8117bcbf9" prot="public" static="no">
        <name>ARRAYLEN</name>
        <param><defname>array</defname></param>
        <initializer>(sizeof(array)/sizeof((array)[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="49" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="class_c_main_params_1ab7dfebf3c4dd5cc0ebdfabe1111056d6" compoundref="chainparams_8cpp" startline="54" endline="117">CMainParams::CMainParams</referencedby>
        <referencedby refid="class_c_test_net_params_1abbd5f6e3e94bc8abf99a5dfaff75374a" compoundref="chainparams_8cpp" startline="138" endline="178">CTestNetParams::CTestNetParams</referencedby>
        <referencedby refid="class_c_inv_1a412cb8fdd0bfe185f770fec91a3e13c4" compoundref="protocol_8cpp" startline="125" endline="139">CInv::CInv</referencedby>
        <referencedby refid="class_c_inv_1a9259d1e8d828c6b6ea729d36d16cd84f" compoundref="protocol_8cpp" startline="146" endline="149">CInv::IsKnownType</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a10cb3e86337283d57f5a44e8b7a78b83" prot="public" static="no">
        <name>UVOIDBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((void*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="51" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ac232a2a614f4296d5917c5701f80aca1" prot="public" static="no">
        <name>CVOIDBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((const void*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="52" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_c_block_header_1ace82f72f060caa4fd96759b4ff99a25e" compoundref="primitives_2block_8h" startline="87" endline="90">CBlockHeader::GetPoWHash</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ae0060367fc2c75d13e4502880dca1dd0" prot="public" static="no">
        <name>UINTBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="53" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ac34821051cc32c3a78b3586cd376194d" prot="public" static="no">
        <name>CUINTBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((const <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="54" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a19b7466198e5f58b580c34c12dff6b54" prot="public" static="no">
        <name>PRIszx</name>
        <initializer>&quot;zx&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="68" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a427f25ac1b36af6c08edcb5d7c481e3b" prot="public" static="no">
        <name>PRIszu</name>
        <initializer>&quot;zu&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="69" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="69" bodyend="-1"/>
        <referencedby refid="class_wallet_model_1a497418d4a8566b881bab45dec7ad8fd8" compoundref="walletmodel_8cpp" startline="213" endline="488">WalletModel::sendCoins</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
        <referencedby refid="rpcwallet_8cpp_1aca53a9372c92e81fc665cbdeb8fcdbc5" compoundref="rpcwallet_8cpp" startline="89" endline="142">_createmultisig</referencedby>
        <referencedby refid="class_c_wallet_1afce932bf3aa678046ab75eccff004858" compoundref="wallet_8cpp" startline="3385" endline="3468">CWallet::SendStealthMoneyToDestination</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aef104e42b5ef4e0fb2a5dca9fc82e4be" prot="public" static="no">
        <name>PRIszd</name>
        <initializer>&quot;zd&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="70" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ad31e724f13b58900c9cf4ff25464934f" prot="public" static="no">
        <name>PRIpdx</name>
        <initializer>&quot;tx&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="71" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a010705285dde1c273d566ffc1790e823" prot="public" static="no">
        <name>PRIpdu</name>
        <initializer>&quot;tu&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="72" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a633f3d742890fc7614de9bbcbe9d1a30" prot="public" static="no">
        <name>PRIpdd</name>
        <initializer>&quot;td&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="73" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" prot="public" static="no">
        <name>PAIRTYPE</name>
        <param><defname>t1</defname></param>
        <param><defname>t2</defname></param>
        <initializer>std::pair&lt;t1, t2&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="77" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="77" bodyend="-1"/>
        <referencedby refid="class_c_alert_1af3e6b2e5d3584f58c5d7be9dbd72b4cc" compoundref="alert_8cpp" startline="174" endline="263">CAlert::ProcessAlert</referencedby>
        <referencedby refid="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" compoundref="kernel_8cpp" startline="111" endline="189">ComputeNextStakeModifier</referencedby>
        <referencedby refid="main_8h_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</referencedby>
        <referencedby refid="main_8cpp_1a70b1d1b79f1c760e65c960713b87b732" compoundref="main_8cpp" startline="2327" endline="2368">GetWarnings</referencedby>
        <referencedby refid="class_address_table_priv_1af093c98444e8f734e08cfc2ce5b9b116" compoundref="addresstablemodel_8cpp" startline="59" endline="86">AddressTablePriv::refreshAddressTable</referencedby>
        <referencedby refid="rpcnet_8cpp_1a3a10a507386b9bbcc48ebd3004bfe58a" compoundref="rpcnet_8cpp" startline="338" endline="398">getnetworkinfo</referencedby>
        <referencedby refid="rpcprotocol_8cpp_1af2d91e7026366657a021311ecc188262" compoundref="rpcprotocol_8cpp" startline="39" endline="54">HTTPPost</referencedby>
        <referencedby refid="rpcserver_8cpp_1aff2b9c22bfd1c4668856656fb8f36f24" compoundref="rpcserver_8cpp" startline="68" endline="85">RPCTypeCheck</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1af9835f898bc619ef6f9a39a5a8a9f2f1" compoundref="rpcsmessage_8cpp" startline="140" endline="346">smsglocalkeys</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a28e51f3edfce43e075603e9e315f40c4" compoundref="rpcwallet_8cpp" startline="52" endline="76">WalletTxToJSON</referencedby>
        <referencedby refid="rpcwallet_8cpp_1af7f6462458033e5fcd024bc4fecf2da8" compoundref="rpcwallet_8cpp" startline="389" endline="419">getaddressesbyaccount</referencedby>
        <referencedby refid="rpcwallet_8cpp_1ab3b12a6a2aa18b0a0d9c12ed7c90ace9" compoundref="rpcwallet_8cpp" startline="680" endline="689">GetAccountAddresses</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a1fdcef480c78c033eb587bd442ec305f" compoundref="rpcwallet_8cpp" startline="776" endline="852">getbalance</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a0cc958f67a8d6d0002cb4fee19eddb5c" compoundref="rpcwallet_8cpp" startline="1223" endline="1348">ListReceived</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a460d931e7f098979bea783409c971d53" compoundref="rpcwallet_8cpp" startline="1423" endline="1499">ListTransactions</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a0cd5dc1112a6c6d5a29a381cd7967fc5" compoundref="rpcwallet_8cpp" startline="1632" endline="1707">listaccounts</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1aebbafc6e18044ba973b127787f9ff90b" compoundref="sandstorm_8cpp" startline="1913" endline="1950">CSandstormPool::GetDenominations</referencedby>
        <referencedby refid="script_8h_1a81899059ee66f695aaf96a07d5e2ebdc" compoundref="script_8cpp" startline="2342" endline="2461">Solver</referencedby>
        <referencedby refid="smessage_8h_1ab47945fac81152e28647920d324ec630" compoundref="smessage_8cpp" startline="911" endline="961">SecureMsgAddWalletAddresses</referencedby>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
        <referencedby refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" compoundref="stormnodeman_8cpp" startline="560" endline="592">CStormnodeMan::GetStormnodeRank</referencedby>
        <referencedby refid="class_c_stormnode_man_1a5337440744bbc51b2e7a9752c3613a26" compoundref="stormnodeman_8cpp" startline="594" endline="628">CStormnodeMan::GetStormnodeRanks</referencedby>
        <referencedby refid="class_c_stormnode_man_1af631f4c124f3022e4c388d759ca69605" compoundref="stormnodeman_8cpp" startline="630" endline="660">CStormnodeMan::GetStormnodeByRank</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
        <referencedby refid="util_8h_1a4cfc6f116964c12bc24442828c2da007" compoundref="util_8cpp" startline="491" endline="534">ParseParameters</referencedby>
        <referencedby refid="class_c_wallet_1a26fd9a9f48230daf346500d2afb6115e" compoundref="wallet_8cpp" startline="635" endline="642">CWallet::MarkDirty</referencedby>
        <referencedby refid="class_c_wallet_tx_1ae8179fbe6db1204884f0bb7bac4e8fc1" compoundref="wallet_8cpp" startline="1020" endline="1054">CWalletTx::GetAccountAmounts</referencedby>
        <referencedby refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" compoundref="wallet_8cpp" startline="1153" endline="1223">CWallet::ReacceptWalletTransactions</referencedby>
        <referencedby refid="class_c_wallet_1ace33dcf23623d2036a38696bc3a94553" compoundref="wallet_8cpp" startline="1262" endline="1304">CWallet::ResendWalletTransactions</referencedby>
        <referencedby refid="class_c_wallet_1a119e378349dcbcada447b4343805326d" compoundref="wallet_8cpp" startline="1902" endline="2141">CWallet::SelectCoinsMinConfByCoinAge</referencedby>
        <referencedby refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" compoundref="wallet_8cpp" startline="3699" endline="3730">CWallet::GetStakeWeight</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
        <referencedby refid="class_c_wallet_1aa13fbeaebd271f910a54cc5b82d73fde" compoundref="wallet_8cpp" startline="3959" endline="4014">CWallet::CommitTransaction</referencedby>
        <referencedby refid="class_c_wallet_1adf2b4ac337ddb271555985cec82e43e6" compoundref="wallet_8cpp" startline="4459" endline="4497">CWallet::GetAddressBalances</referencedby>
        <referencedby refid="class_c_wallet_1a8eacbac6ad3697d90b98dfe02632f8ef" compoundref="wallet_8cpp" startline="4499" endline="4592">CWallet::GetAddressGroupings</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ab99ded389af74001a6298fc9e44e74e5" prot="public" static="no">
        <name>MAX_PATH</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="104" column="10" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1afc02c0a4258fedfb316be612bb659ba8" prot="public" static="no">
        <name>LogPrintf</name>
        <param><defname>...</defname></param>
        <initializer>LogPrint(NULL, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="158" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="158" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" compoundref="activestormnode_8cpp" startline="209" endline="252">CActiveStormnode::Register</referencedby>
        <referencedby refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" compoundref="activestormnode_8cpp" startline="402" endline="415">CActiveStormnode::EnableHotColdStormNode</referencedby>
        <referencedby refid="class_c_addr_man_1a0c2677ae50ce0d680f0105b285d1f5d0" compoundref="addrman_8h" startline="401" endline="411">CAddrMan::Check</referencedby>
        <referencedby refid="class_c_unsigned_alert_1a289332e203d0e95ea8f27375f43e9955" compoundref="alert_8cpp" startline="82" endline="85">CUnsignedAlert::print</referencedby>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1aea2c77ad84cd7909720f75a0c3f7ddc2" compoundref="chain_8cpp" startline="250" endline="295">CBlock::RebuildAddressIndex</referencedby>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="chain_8h_1ae282007adebd031cdbfecdd0ad1feeb8" compoundref="chain_8cpp" startline="492" endline="512">InvalidChainFound</referencedby>
        <referencedby refid="chain_8h_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="crypter_8h_1a226a32c844661568e96a8e4facdb4804" compoundref="crypter_8cpp" startline="147" endline="179">EncryptAES256</referencedby>
        <referencedby refid="crypter_8h_1ae8eca4e4f0534b828d8a2a549536c762" compoundref="crypter_8cpp" startline="181" endline="209">DecryptAES256</referencedby>
        <referencedby refid="class_c_d_b_env_1a1a81be1585305e5cedd2bccd6c7570c3" compoundref="db_8cpp" startline="63" endline="114">CDBEnv::Open</referencedby>
        <referencedby refid="class_c_d_b_env_1a08726637bff0809ab9c7c493383a3914" compoundref="db_8cpp" startline="167" endline="219">CDBEnv::Salvage</referencedby>
        <referencedby refid="class_c_d_b_1acfb8a373edb9c4cfab780fb7578b277e" compoundref="db_8cpp" startline="343" endline="424">CDB::Rewrite</referencedby>
        <referencedby refid="class_c_coins_view_error_catcher_1a762969de31b62e55d01f1cdf0b178eb9" compoundref="init_8cpp" startline="102" endline="114">CCoinsViewErrorCatcher::GetCoins</referencedby>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="instantx_8h_1aa516cb499ead2691d8ab216a499db5d0" compoundref="instantx_8cpp" startline="38" endline="173">ProcessMessageInstantX</referencedby>
        <referencedby refid="instantx_8h_1a3774b6dae3dfa0a6c85e3604e742150c" compoundref="instantx_8cpp" startline="221" endline="256">CreateNewLock</referencedby>
        <referencedby refid="instantx_8h_1a0753801d6e6eb2cb230a85a6ba6fd371" compoundref="instantx_8cpp" startline="259" endline="299">DoConsensusVote</referencedby>
        <referencedby refid="instantx_8h_1a5d4434bfb70f64f95aa4de9286cbae94" compoundref="instantx_8cpp" startline="302" endline="394">ProcessConsensusVote</referencedby>
        <referencedby refid="instantx_8h_1aef32a1712071881d322fdb3740c07227" compoundref="instantx_8cpp" startline="396" endline="417">CheckForConflictingLocks</referencedby>
        <referencedby refid="instantx_8h_1afede7ddd9c324103f27d52a2a3b75b1c" compoundref="instantx_8cpp" startline="434" endline="463">CleanTransactionLocksList</referencedby>
        <referencedby refid="class_c_consensus_vote_1ac6550a89acee255e0035e189a42a6310" compoundref="instantx_8cpp" startline="471" endline="491">CConsensusVote::SignatureValid</referencedby>
        <referencedby refid="class_c_consensus_vote_1a687495887aa75f5d5bb70f93ecb820d0" compoundref="instantx_8cpp" startline="493" endline="520">CConsensusVote::Sign</referencedby>
        <referencedby refid="class_c_transaction_lock_1a71cb6705a8f0bfb4a8453d3b284e3cf7" compoundref="instantx_8cpp" startline="523" endline="549">CTransactionLock::SignaturesValid</referencedby>
        <referencedby refid="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" compoundref="kernel_8cpp" startline="111" endline="189">ComputeNextStakeModifier</referencedby>
        <referencedby refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</referencedby>
        <referencedby refid="leveldbwrapper_8h_1aea36eb5fddb6266b14ea8cb15e183486" compoundref="leveldbwrapper_8cpp" startline="14" endline="26">HandleError</referencedby>
        <referencedby refid="class_c_level_d_b_wrapper_1ae796b1190c072df6275e0ada4d187943" compoundref="leveldbwrapper_8cpp" startline="44" endline="67">CLevelDBWrapper::CLevelDBWrapper</referencedby>
        <referencedby refid="class_c_level_d_b_wrapper_1aa3b816ae43c930b4bf1f85461bff4b5b" compoundref="leveldbwrapper_8h" startline="91" endline="113">CLevelDBWrapper::Read</referencedby>
        <referencedby refid="class_c_level_d_b_wrapper_1a9c9d2e1c06c45c5d6883f33136f6718b" compoundref="leveldbwrapper_8h" startline="124" endline="140">CLevelDBWrapper::Exists</referencedby>
        <referencedby refid="main_8h_1af573b79d097a9ffe6503869f838ccf42" compoundref="main_8cpp" startline="478" endline="486">AbortNode</referencedby>
        <referencedby refid="class_c_merkle_tx_1a7286c83e09ddaebc6bba39ee38a5a012" compoundref="main_8cpp" startline="786" endline="829">CMerkleTx::SetMerkleBranch</referencedby>
        <referencedby refid="main_8h_1a4b04650c6aa3e5b02921ba992658d647" compoundref="main_8cpp" startline="1741" endline="1764">Misbehaving</referencedby>
        <referencedby refid="main_8h_1af2b1f603b58c5364716253a0711f0e91" compoundref="main_8cpp" startline="1779" endline="1790">DisconnectBlocksAndReprocess</referencedby>
        <referencedby refid="main_8h_1aca9eb09c80679cf7c85926f83c353075" compoundref="main_8cpp" startline="1792" endline="1816">FindTransactionsByDestination</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="main_8h_1a6df609da0bad1550cbb2cdc781ad2904" compoundref="main_8cpp" startline="2024" endline="2039">CheckDiskSpace</referencedby>
        <referencedby refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</referencedby>
        <referencedby refid="main_8cpp_1afbdbbb5a1b376748e5460cbcf644a9af" compoundref="main_8cpp" startline="2219" endline="2279">LoadExternalBlockFile</referencedby>
        <referencedby refid="main_8h_1a196f9318f02448b85b28d612698934fd" compoundref="main_8cpp" startline="3306" endline="3423">ProcessMessages</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="main_8h_1aadc60201fa05120c42011c2ca853ad15" compoundref="main_8cpp" startline="4013" endline="4034">OpenDiskFile</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
        <referencedby refid="class_c_verify_d_b_1a5d3e3ade35a14ddce2404e18e4b1df50" compoundref="main_8cpp" startline="4325" endline="4404">CVerifyDB::VerifyDB</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="net_8h_1a337d6af198a6b0d75f830e56da9b91e9" compoundref="net_8cpp" startline="247" endline="274">AddLocal</referencedby>
        <referencedby refid="net_8h_1a57ffc895ab641207e0eb30fd7e00a585" compoundref="net_8cpp" startline="378" endline="443">ConnectNode</referencedby>
        <referencedby refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" compoundref="net_8cpp" startline="505" endline="528">CNode::Misbehaving</referencedby>
        <referencedby refid="net_8h_1aff6b7f2f213ce1e8d3aea65c41c99cb8" compoundref="net_8cpp" startline="709" endline="750">SocketSendData</referencedby>
        <referencedby refid="net_8cpp_1aa1111c12121e039bbd8eedb556e4514a" compoundref="net_8cpp" startline="754" endline="1131">ThreadSocketHandler</referencedby>
        <referencedby refid="net_8cpp_1ab2d8883b5524ec7b80d3b9535e73a3ed" compoundref="net_8cpp" startline="1259" endline="1300">ThreadDNSAddressSeed</referencedby>
        <referencedby refid="net_8cpp_1a3b4720330e61127963a43df26b80f804" compoundref="net_8cpp" startline="1339" endline="1441">ThreadOpenConnections</referencedby>
        <referencedby refid="net_8cpp_1a0c8010ad96acff7cca6aca684ec42b71" compoundref="net_8cpp" startline="1702" endline="1805">BindListenPort</referencedby>
        <referencedby refid="net_8h_1a9396d8054e8f74959e9391871aaddde0" compoundref="net_8cpp" startline="1858" endline="1899">StartNode</referencedby>
        <referencedby refid="net_8h_1ac9110488f45c160d58f3c7ab7197bcea" compoundref="net_8cpp" startline="1901" endline="1911">StopNode</referencedby>
        <referencedby refid="class_c_net_cleanup_1a29b59094c7697b45ca6d13424012506b" compoundref="net_8cpp" startline="1919" endline="1941">CNetCleanup::~CNetCleanup</referencedby>
        <referencedby refid="class_c_message_header_1a21f5760d034d4a040b00d6c34e927be0" compoundref="protocol_8cpp" startline="63" endline="91">CMessageHeader::IsValid</referencedby>
        <referencedby refid="class_c_inv_1ac694be0201a6e5b34efa1c604498186c" compoundref="protocol_8cpp" startline="163" endline="166">CInv::print</referencedby>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="rpcdump_8cpp_1a2566d5c9dd1938b74e70398cdb3ac5c1" compoundref="rpcdump_8cpp" startline="232" endline="318">importwallet</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="rpcserver_8cpp_1adda5af922ba2f27c9f6219394d3c4f4c" compoundref="rpcserver_8cpp" startline="743" endline="823">ServiceConnection</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a33a914aa20f1ded289040800898a0e79" compoundref="rpcwallet_8cpp" startline="421" endline="454">SendMoney</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1a7263335082b2638b8eafc59e21e79baa" compoundref="sandstorm-relay_8cpp" startline="40" endline="65">CSandStormRelay::Sign</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1add9d29eac76800e8d07ced2e0b3eec4b" compoundref="sandstorm-relay_8cpp" startline="67" endline="87">CSandStormRelay::VerifyMessage</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ae46dad75c301205495960011d31242ba" compoundref="sandstorm_8cpp" startline="412" endline="421">CSandstormPool::SetCollateralAddress</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a76f820f131dbb15d80f826f0c788249a" compoundref="sandstorm_8cpp" startline="646" endline="746">CSandstormPool::ChargeFees</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ac01544d518171779e6a609dae48d4f75" compoundref="sandstorm_8cpp" startline="750" endline="782">CSandstormPool::ChargeRandomFees</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1aabecb7ff2cd77451de653fa23e01ccbe" compoundref="sandstorm_8cpp" startline="930" endline="983">CSandstormPool::IsCollateralValid</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a3a205b0af8f0b7d30c82c9b6f2f56573" compoundref="sandstorm_8cpp" startline="1038" endline="1074">CSandstormPool::AddScriptSig</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" compoundref="sandstorm_8cpp" startline="1090" endline="1176">CSandstormPool::SendSandstormDenominate</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1af272c7c4cb797a825b11d097da4cc59a" compoundref="sandstorm_8cpp" startline="1183" endline="1223">CSandstormPool::StatusUpdate</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1adfe5727cd162dff15a016de05494ba44" compoundref="sandstorm_8cpp" startline="1230" endline="1305">CSandstormPool::SignFinalTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a4a844b1153973243d27a5f0702a7245d" compoundref="sandstorm_8cpp" startline="1319" endline="1341">CSandstormPool::CompletedTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a0348c28d46ac4180e2984336df1b4d50" compoundref="sandstorm_8cpp" startline="1628" endline="1648">CSandstormPool::PrepareSandstormDenominate</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1af0d8155078c47c07ea80ce65f317940a" compoundref="sandstorm_8cpp" startline="1651" endline="1704">CSandstormPool::MakeCollateralAmounts</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ab7fac1067376f91b53aaf6862c15e914" compoundref="sandstorm_8cpp" startline="1707" endline="1798">CSandstormPool::CreateDenominated</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1aedb9e08d71363870b12ae5ffcf506b61" compoundref="sandstorm_8cpp" startline="1800" endline="1811">CSandstormPool::IsCompatibleWithEntries</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a6ca453bd284507a2d5b26e9d4491e00c" compoundref="sandstorm_8cpp" startline="1813" endline="1867">CSandstormPool::IsCompatibleWithSession</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1af7d1f51900ef204ed612fa27096181af" compoundref="sandstorm_8cpp" startline="1966" endline="1996">CSandstormPool::GetDenominationsByAmount</referencedby>
        <referencedby refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" compoundref="sandstorm_8cpp" startline="2073" endline="2089">CSandStormSigner::VerifyMessage</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" compoundref="sandstorm_8cpp" startline="2091" endline="2118">CSandstormQueue::Sign</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ade2ee9d0faa6598f90f672302d17eba8" compoundref="sandstorm_8cpp" startline="2161" endline="2179">CSandstormPool::RelayIn</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a4e48e06e3b981a9ac607a0df77428d42" compoundref="sandstorm_8h" startline="427" endline="442">CSandstormPool::UpdateState</referencedby>
        <referencedby refid="script_8cpp_1a4086161bb714485e7e3662d9b0ceed7d" compoundref="script_8cpp" startline="2092" endline="2151">SignatureHash</referencedby>
        <referencedby refid="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" compoundref="util_8h" startline="597" endline="621">LoopForever</referencedby>
        <referencedby refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" compoundref="util_8h" startline="623" endline="644">TraceThread</referencedby>
        <referencedby refid="class_sec_msg_bucket_1ae6e05a91141c7cacf593b90e8c082113" compoundref="smessage_8cpp" startline="165" endline="185">SecMsgBucket::hashBucket</referencedby>
        <referencedby refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</referencedby>
        <referencedby refid="class_sec_msg_d_b_1af26665a96e391711f4df702861d1557a" compoundref="smessage_8cpp" startline="259" endline="277">SecMsgDB::ScanBatch</referencedby>
        <referencedby refid="class_sec_msg_d_b_1accabf13445ca07b9d37f456a3db6fe2f" compoundref="smessage_8cpp" startline="287" endline="305">SecMsgDB::TxnCommit</referencedby>
        <referencedby refid="class_sec_msg_d_b_1aabce57e714b562302cee71bcea5e340f" compoundref="smessage_8cpp" startline="314" endline="357">SecMsgDB::ReadPK</referencedby>
        <referencedby refid="class_sec_msg_d_b_1a77131fcd232e503a57ab8569d3ab9fd8" compoundref="smessage_8cpp" startline="359" endline="389">SecMsgDB::WritePK</referencedby>
        <referencedby refid="class_sec_msg_d_b_1ac16426690cd634af83b90aa39a7a5d51" compoundref="smessage_8cpp" startline="417" endline="443">SecMsgDB::NextSmesg</referencedby>
        <referencedby refid="class_sec_msg_d_b_1a35c86d596ed6c60f4d62cc3e551356d2" compoundref="smessage_8cpp" startline="465" endline="505">SecMsgDB::ReadSmesg</referencedby>
        <referencedby refid="class_sec_msg_d_b_1af254b80ad938946841361c77cb09be0a" compoundref="smessage_8cpp" startline="507" endline="533">SecMsgDB::WriteSmesg</referencedby>
        <referencedby refid="class_sec_msg_d_b_1a7d00fef57cf02d33e0b076ca114f7af5" compoundref="smessage_8cpp" startline="558" endline="577">SecMsgDB::EraseSmesg</referencedby>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
        <referencedby refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</referencedby>
        <referencedby refid="smessage_8h_1ab47945fac81152e28647920d324ec630" compoundref="smessage_8cpp" startline="911" endline="961">SecureMsgAddWalletAddresses</referencedby>
        <referencedby refid="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</referencedby>
        <referencedby refid="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</referencedby>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a49c8b6520e51ba498f92accf33eb6c17" compoundref="smessage_8cpp" startline="1144" endline="1168">SecureMsgShutdown</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
        <referencedby refid="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" compoundref="smessage_8cpp" startline="1783" endline="1882">SecureMsgSendData</referencedby>
        <referencedby refid="smessage_8h_1a9bd026d2eb7c6dee89c539e99ecac49f" compoundref="smessage_8cpp" startline="2037" endline="2071">SecureMsgScanBlock</referencedby>
        <referencedby refid="smessage_8h_1a440b38f2f513f80283993a2d81e908b5" compoundref="smessage_8cpp" startline="2073" endline="2121">ScanChainForPublicKeys</referencedby>
        <referencedby refid="smessage_8h_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" compoundref="smessage_8cpp" startline="2123" endline="2151">SecureMsgScanBlockChain</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a2a1e22a7c3bbeb96983dc3f28407657e" compoundref="smessage_8cpp" startline="2446" endline="2480">SecureMsgWalletKeyChanged</referencedby>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
        <referencedby refid="smessage_8h_1a430258e823bdead36f823a51fd6a4510" compoundref="smessage_8cpp" startline="2601" endline="2617">SecureMsgGetLocalKey</referencedby>
        <referencedby refid="smessage_8h_1a1341706507a851babcff6ce436b8ce2d" compoundref="smessage_8cpp" startline="2649" endline="2674">SecureMsgGetStoredKey</referencedby>
        <referencedby refid="smessage_8h_1a7d84ccbc16eb3d679638ba37b822a5e2" compoundref="smessage_8cpp" startline="2676" endline="2729">SecureMsgAddAddress</referencedby>
        <referencedby refid="smessage_8h_1a9a34bfa72cc027350d71f9daaefb8fef" compoundref="smessage_8cpp" startline="2731" endline="2794">SecureMsgRetrieve</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
        <referencedby refid="smessage_8h_1ae4abbffb060bb486b9e15053f83cbcbf" compoundref="smessage_8cpp" startline="3099" endline="3166">SecureMsgValidate</referencedby>
        <referencedby refid="smessage_8h_1ac434a0295e161eb2ebdad951f4049dc6" compoundref="smessage_8cpp" startline="3168" endline="3274">SecureMsgSetHash</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
        <referencedby refid="spork_8h_1a3f9c24c1f4c012152fb4422ca981610a" compoundref="spork_8cpp" startline="30" endline="78">ProcessSpork</referencedby>
        <referencedby refid="spork_8h_1a3305663176e21e81c80dc951a7f8ea5e" compoundref="spork_8cpp" startline="82" endline="102">IsSporkActive</referencedby>
        <referencedby refid="spork_8h_1a8ae4e3d41526bf334ac3bb100db62146" compoundref="spork_8cpp" startline="105" endline="123">GetSporkValue</referencedby>
        <referencedby refid="spork_8h_1a6b20cdba297d137a4d7a91691cc4457b" compoundref="spork_8cpp" startline="125" endline="159">ReprocessBlocks</referencedby>
        <referencedby refid="spork_8h_1aa6bf94bc9d68d2931ea6cbf013e52f5a" compoundref="spork_8cpp" startline="161" endline="173">ExecuteSpork</referencedby>
        <referencedby refid="class_c_spork_manager_1adf1b5d40f378c4bd3a5ea31905b11f30" compoundref="spork_8cpp" startline="190" endline="215">CSporkManager::Sign</referencedby>
        <referencedby refid="class_c_spork_manager_1a599d088218de9d242e4dc5cb17dd310b" compoundref="spork_8cpp" startline="247" endline="262">CSporkManager::SetPrivKey</referencedby>
        <referencedby refid="stormnode-budget_8h_1af987fefd1417be5dcd356634986dbf83" compoundref="stormnode-budget_8cpp" startline="35" endline="90">IsBudgetCollateralValid</referencedby>
        <referencedby refid="class_c_budget_manager_1a73100cfcd156e567eab9e62eff332659" compoundref="stormnode-budget_8cpp" startline="92" endline="116">CBudgetManager::CheckOrphanVotes</referencedby>
        <referencedby refid="class_c_budget_manager_1af60a5c7536d47606f0efdd475e5d171a" compoundref="stormnode-budget_8cpp" startline="118" endline="198">CBudgetManager::SubmitFinalBudget</referencedby>
        <referencedby refid="class_c_budget_d_b_1a7c9bd15eefe04f87e822cc1bc0887b76" compoundref="stormnode-budget_8cpp" startline="210" endline="243">CBudgetDB::Write</referencedby>
        <referencedby refid="class_c_budget_d_b_1aecdde2af475070d9fafdcacf93f2e4f2" compoundref="stormnode-budget_8cpp" startline="245" endline="333">CBudgetDB::Read</referencedby>
        <referencedby refid="stormnode-budget_8h_1a277f8d83f6cfcfbe4ee3f622d38f8790" compoundref="stormnode-budget_8cpp" startline="335" endline="362">DumpBudgets</referencedby>
        <referencedby refid="class_c_budget_manager_1a0338c710edb15b7c1b0818a98d085ead" compoundref="stormnode-budget_8cpp" startline="377" endline="392">CBudgetManager::AddProposal</referencedby>
        <referencedby refid="class_c_budget_manager_1a6fcc03bb51d846ce2934d9f739080ba7" compoundref="stormnode-budget_8cpp" startline="394" endline="427">CBudgetManager::CheckAndRemove</referencedby>
        <referencedby refid="class_c_budget_manager_1a8109dee7a714a093d88d4a4457bc728a" compoundref="stormnode-budget_8cpp" startline="430" endline="491">CBudgetManager::FillBlockPayee</referencedby>
        <referencedby refid="class_c_budget_manager_1a6ec491bb3f9b9772144fff7c458e75a8" compoundref="stormnode-budget_8cpp" startline="557" endline="572">CBudgetManager::HasNextFinalizedBudget</referencedby>
        <referencedby refid="class_c_budget_manager_1aa7df3137c4b407fdbb474fcf602a67a5" compoundref="stormnode-budget_8cpp" startline="760" endline="788">CBudgetManager::GetRequiredPaymentsString</referencedby>
        <referencedby refid="class_c_budget_manager_1a9c62c8f18b6f101465415952349ce203" compoundref="stormnode-budget_8cpp" startline="799" endline="902">CBudgetManager::NewBlock</referencedby>
        <referencedby refid="class_c_budget_manager_1a3fc235d528e37ec1c66789f3bfed1878" compoundref="stormnode-budget_8cpp" startline="904" endline="1072">CBudgetManager::ProcessMessage</referencedby>
        <referencedby refid="class_c_budget_manager_1ab24ec088c09d18c03ae539f2bbe19743" compoundref="stormnode-budget_8cpp" startline="1160" endline="1229">CBudgetManager::Sync</referencedby>
        <referencedby refid="class_c_budget_manager_1a643d564d0232ed6f9e6ca025b8377c13" compoundref="stormnode-budget_8cpp" startline="1231" endline="1256">CBudgetManager::UpdateProposal</referencedby>
        <referencedby refid="class_c_budget_manager_1a4ac3207b673d7163a7d03005e35d6f8b" compoundref="stormnode-budget_8cpp" startline="1258" endline="1283">CBudgetManager::UpdateFinalizedBudget</referencedby>
        <referencedby refid="class_c_budget_vote_1a112c52bed648dd66fe2898e002fc3f09" compoundref="stormnode-budget_8cpp" startline="1601" endline="1621">CBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_budget_vote_1ab01d2ab30c3761318a7da919bff26697" compoundref="stormnode-budget_8cpp" startline="1623" endline="1644">CBudgetVote::SignatureValid</referencedby>
        <referencedby refid="class_c_finalized_budget_1a88614fdccb5cdf722403c11832df2ad0" compoundref="stormnode-budget_8cpp" startline="1699" endline="1775">CFinalizedBudget::AutoCheck</referencedby>
        <referencedby refid="class_c_finalized_budget_1a9a6fbb2d494342fb6d1c48a98d7cc856" compoundref="stormnode-budget_8cpp" startline="1816" endline="1851">CFinalizedBudget::GetStatus</referencedby>
        <referencedby refid="class_c_finalized_budget_1a32c98c7a24100e099093e7d33b9330f2" compoundref="stormnode-budget_8cpp" startline="1884" endline="1912">CFinalizedBudget::IsTransactionValid</referencedby>
        <referencedby refid="class_c_finalized_budget_1a8d5710eaf0fe541dcdce1d5f2ebee51c" compoundref="stormnode-budget_8cpp" startline="1914" endline="1940">CFinalizedBudget::SubmitVote</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1ac417b917ae18df17838b49371435c64a" compoundref="stormnode-budget_8cpp" startline="2002" endline="2022">CFinalizedBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1aadcc860c6efe5122388a372641297014" compoundref="stormnode-budget_8cpp" startline="2024" endline="2046">CFinalizedBudgetVote::SignatureValid</referencedby>
        <referencedby refid="class_c_budget_manager_1a3a9115af29a10e955c2e1d50fd697411" compoundref="stormnode-budget_8h" startline="145" endline="157">CBudgetManager::Clear</referencedby>
        <referencedby refid="class_c_stormnode_payment_d_b_1a6dc05426079d7bcf41f2587899e422fd" compoundref="stormnode-payments_8cpp" startline="34" endline="64">CStormnodePaymentDB::Write</referencedby>
        <referencedby refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" compoundref="stormnode-payments_8cpp" startline="66" endline="154">CStormnodePaymentDB::Read</referencedby>
        <referencedby refid="stormnode-payments_8h_1ae992438141f991b3ca132d11da230d1a" compoundref="stormnode-payments_8cpp" startline="156" endline="183">DumpStormnodePayments</referencedby>
        <referencedby refid="stormnode-payments_8h_1a775fd7f6eef6c395268172c278b9100b" compoundref="stormnode-payments_8cpp" startline="185" endline="228">IsBlockValueValid</referencedby>
        <referencedby refid="stormnode-payments_8h_1af9e474d79a12729ed3e96b0d1c0351b4" compoundref="stormnode-payments_8cpp" startline="230" endline="269">IsBlockPayeeValid</referencedby>
        <referencedby refid="class_c_stormnode_payments_1accaeb923fe36e73d4228fc043771c4ad" compoundref="stormnode-payments_8cpp" startline="294" endline="346">CStormnodePayments::FillBlockPayee</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a8dc55316a297daad51a03d4cf7b37d06" compoundref="stormnode-payments_8cpp" startline="354" endline="430">CStormnodePayments::ProcessMessageStormnodePayments</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1a2ee621a52030230a8e3307886f5f45be" compoundref="stormnode-payments_8cpp" startline="432" endline="452">CStormnodePaymentWinner::Sign</referencedby>
        <referencedby refid="class_c_stormnode_block_payees_1a83867efab0e90f70384a3c3354ea23d6" compoundref="stormnode-payments_8cpp" startline="519" endline="564">CStormnodeBlockPayees::IsTransactionValid</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1ae8e5cecfd1f95eed8fdd14f019360fa0" compoundref="stormnode-payments_8cpp" startline="644" endline="681">CStormnodePaymentWinner::IsValid</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" compoundref="stormnode-payments_8cpp" startline="683" endline="762">CStormnodePayments::ProcessBlock</referencedby>
        <referencedby refid="class_c_stormnode_sync_1a3c70130712267c3c100a69d35b97acf8" compoundref="stormnode-sync_8cpp" startline="132" endline="157">CStormnodeSync::GetNextAsset</referencedby>
        <referencedby refid="class_c_stormnode_sync_1aaca810ce9a48fed7e8608f73c0d5f29d" compoundref="stormnode-sync_8cpp" startline="173" endline="209">CStormnodeSync::ProcessMessage</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adaaeb592c3432c8a459560523c7be207" compoundref="stormnode-sync_8cpp" startline="225" endline="405">CStormnodeSync::Process</referencedby>
        <referencedby refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" compoundref="stormnode_8cpp" startline="152" endline="176">CStormnode::CalculateScore</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" compoundref="stormnode_8cpp" startline="557" endline="576">CStormnodePing::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" compoundref="stormnode_8cpp" startline="578" endline="664">CStormnodePing::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_d_b_1af60b25c3f72317d363fd6584045c6f5f" compoundref="stormnodeman_8cpp" startline="57" endline="89">CStormnodeDB::Write</referencedby>
        <referencedby refid="class_c_stormnode_d_b_1a574f76256d8032a4c4e437d800d3795b" compoundref="stormnodeman_8cpp" startline="91" endline="176">CStormnodeDB::Read</referencedby>
        <referencedby refid="stormnodeman_8h_1ab4bfbf67ff3a5463457d04b68610e18b" compoundref="stormnodeman_8cpp" startline="178" endline="205">DumpStormnodes</referencedby>
        <referencedby refid="class_c_stormnode_man_1a918a4ccb668808449809a77adc036301" compoundref="stormnodeman_8cpp" startline="229" endline="244">CStormnodeMan::AskForSN</referencedby>
        <referencedby refid="class_c_stormnode_man_1a3f8f9f86f01df701533b544903b55113" compoundref="stormnodeman_8cpp" startline="378" endline="398">CStormnodeMan::SsegUpdate</referencedby>
        <referencedby refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" compoundref="stormnodeman_8cpp" startline="504" endline="534">CStormnodeMan::FindRandomNotInVec</referencedby>
        <referencedby refid="class_c_stormnode_man_1a52708159ad91808d18a0b6082ed6daca" compoundref="stormnodeman_8cpp" startline="662" endline="672">CStormnodeMan::ProcessStormnodeConnections</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
        <referencedby refid="timedata_8h_1ad8af089fc8835e11c7d77f6b473fccae" compoundref="timedata_8cpp" startline="40" endline="111">AddTimeData</referencedby>
        <referencedby refid="class_c_tx_d_b_1a15efd656b7f86b0abf8d99183cae493a" compoundref="txdb-leveldb_8cpp" startline="77" endline="130">CTxDB::CTxDB</referencedby>
        <referencedby refid="class_c_tx_d_b_1aff04f078df2fc3640d559ce62fc9a6a2" compoundref="txdb-leveldb_8cpp" startline="151" endline="162">CTxDB::TxnCommit</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
        <referencedby refid="class_c_tx_d_b_1a9e223a10434f8a73002e84cc75c682de" compoundref="txdb-leveldb_8h" startline="67" endline="105">CTxDB::Read</referencedby>
        <referencedby refid="class_c_tx_d_b_1a58885f67364829a8e0957a5dc810886d" compoundref="txdb-leveldb_8h" startline="108" endline="130">CTxDB::Write</referencedby>
        <referencedby refid="class_c_tx_mem_pool_1a0a05d7b50b9c2a387182402e60475da6" compoundref="txmempool_8cpp" startline="126" endline="139">CTxMemPool::WriteFeeEstimates</referencedby>
        <referencedby refid="class_c_tx_mem_pool_1a0dbbcb6a3b7e1a6c564410668c12cd4f" compoundref="txmempool_8cpp" startline="141" endline="157">CTxMemPool::ReadFeeEstimates</referencedby>
        <referencedby refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" compoundref="util_8cpp" startline="1060" endline="1067">PrintException</referencedby>
        <referencedby refid="util_8h_1a477231880f761159de1567ad6fb98fac" compoundref="util_8cpp" startline="1069" endline="1075">PrintExceptionContinue</referencedby>
        <referencedby refid="util_8h_1adf94c00a5ac719c92a2f1bb2f8b2167f" compoundref="util_8cpp" startline="1434" endline="1439">runCommand</referencedby>
        <referencedby refid="class_c_wallet_1adbf0abef9da8102f000d4afd5cec5bbc" compoundref="wallet_8cpp" startline="168" endline="182">CWallet::LoadCScript</referencedby>
        <referencedby refid="class_c_wallet_1a4abcec3066e7c462f4564c159fc15031" compoundref="wallet_8cpp" startline="285" endline="333">CWallet::ChangeWalletPassphrase</referencedby>
        <referencedby refid="class_c_wallet_1ab34fe5bf771619dcbe22a65f013e5469" compoundref="wallet_8cpp" startline="479" endline="596">CWallet::EncryptWallet</referencedby>
        <referencedby refid="class_c_wallet_1adf34c789fd6eab1eeed22ef16837f558" compoundref="wallet_8cpp" startline="644" endline="761">CWallet::AddToWallet</referencedby>
        <referencedby refid="class_c_wallet_tx_1af46d43266d668fe7152a086f5446d529" compoundref="wallet_8cpp" startline="967" endline="1018">CWalletTx::GetAmounts</referencedby>
        <referencedby refid="class_c_wallet_tx_1a3594f3eabada273c1eb9ab25da38d204" compoundref="wallet_8cpp" startline="1056" endline="1114">CWalletTx::AddSupportingTransactions</referencedby>
        <referencedby refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" compoundref="wallet_8cpp" startline="1153" endline="1223">CWallet::ReacceptWalletTransactions</referencedby>
        <referencedby refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" compoundref="wallet_8cpp" startline="1225" endline="1242">CWalletTx::RelayWalletTransaction</referencedby>
        <referencedby refid="class_c_wallet_1ace33dcf23623d2036a38696bc3a94553" compoundref="wallet_8cpp" startline="1262" endline="1304">CWallet::ResendWalletTransactions</referencedby>
        <referencedby refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" compoundref="wallet_8cpp" startline="2158" endline="2287">CWallet::SelectCoinsMinConf</referencedby>
        <referencedby refid="class_c_wallet_1ade832913e51777e2b25255d54ef3e583" compoundref="wallet_8cpp" startline="2687" endline="2710">CWallet::GetBudgetSystemCollateralTX</referencedby>
        <referencedby refid="class_c_wallet_1a8b3d2bb029430a437780037c5db7c0e0" compoundref="wallet_8cpp" startline="2712" endline="2726">CWallet::ConvertList</referencedby>
        <referencedby refid="class_c_wallet_1a9fc87acaec36712ad1f5f01cf255984b" compoundref="wallet_8cpp" startline="2952" endline="2984">CWallet::CreateTransaction</referencedby>
        <referencedby refid="class_c_wallet_1ac797b6473e72f0569afcf3f7445d9965" compoundref="wallet_8cpp" startline="3304" endline="3345">CWallet::CreateStealthTransaction</referencedby>
        <referencedby refid="class_c_wallet_1a509492fe45395af29a4a16045686c239" compoundref="wallet_8cpp" startline="3347" endline="3383">CWallet::SendStealthMoney</referencedby>
        <referencedby refid="class_c_wallet_1afce932bf3aa678046ab75eccff004858" compoundref="wallet_8cpp" startline="3385" endline="3468">CWallet::SendStealthMoneyToDestination</referencedby>
        <referencedby refid="class_c_wallet_1a5d0e2025dc7a87a0406be272b80509ee" compoundref="wallet_8cpp" startline="3470" endline="3697">CWallet::FindStealthTransactions</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
        <referencedby refid="class_c_wallet_1aa13fbeaebd271f910a54cc5b82d73fde" compoundref="wallet_8cpp" startline="3959" endline="4014">CWallet::CommitTransaction</referencedby>
        <referencedby refid="class_c_wallet_1a356d16f6df1f109674adf1d1dc577f2e" compoundref="wallet_8cpp" startline="4019" endline="4059">CWallet::SendMoney</referencedby>
        <referencedby refid="class_c_wallet_1a00962341815bf1374067f8ea5520c709" compoundref="wallet_8cpp" startline="4078" endline="4093">CWallet::GetTotalValue</referencedby>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
        <referencedby refid="class_c_wallet_1a7353ba1e79fc4167fbfbe79b41698fa7" compoundref="wallet_8cpp" startline="4307" endline="4329">CWallet::NewKeyPool</referencedby>
        <referencedby refid="class_c_wallet_1aeeeca131336b2ec20cede9a2fccc203a" compoundref="wallet_8cpp" startline="4331" endline="4363">CWallet::TopUpKeyPool</referencedby>
        <referencedby refid="class_c_wallet_1a9921854840668a1856998f041177dd2b" compoundref="wallet_8cpp" startline="4366" endline="4391">CWallet::ReserveKeyFromKeyPool</referencedby>
        <referencedby refid="class_c_wallet_1ae460b8c824a1a6633615f95373e533f2" compoundref="wallet_8cpp" startline="4408" endline="4417">CWallet::KeepKey</referencedby>
        <referencedby refid="class_c_wallet_1a4ee5566c2b4c8f4ed5cec628573b9275" compoundref="wallet_8cpp" startline="4419" endline="4427">CWallet::ReturnKey</referencedby>
        <referencedby refid="class_c_wallet_1aa1e6f8f54b36ae7ec11f567a59a99aa3" compoundref="wallet_8cpp" startline="4596" endline="4642">CWallet::FixSpentCoins</referencedby>
        <referencedby refid="class_c_reserve_key_1ad198d2d7a54d315c60805ba1cb0caf7c" compoundref="wallet_8cpp" startline="4666" endline="4685">CReserveKey::GetReservedKey</referencedby>
        <referencedby refid="class_c_output_1af9f37df9eace0c8a58b8029a2c59366f" compoundref="wallet_8h" startline="1101" endline="1104">COutput::print</referencedby>
        <referencedby refid="class_c_wallet_d_b_1a14f26e53502d1a60dd2b034f830acf03" compoundref="walletdb_8cpp" startline="630" endline="730">CWalletDB::LoadWallet</referencedby>
        <referencedby refid="walletdb_8cpp_1a273c3692765c732c5f724cec93e6b62f" compoundref="walletdb_8cpp" startline="794" endline="832">BackupWallet</referencedby>
        <referencedby refid="class_c_wallet_d_b_1a3ebeb12f37d9c66512e2bc2903a6854a" compoundref="walletdb_8cpp" startline="837" endline="913">CWalletDB::Recover</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a0ffe181147a216a8a4f51d8ebf5bd1eb" prot="public" static="no">
        <name>MAKE_ERROR_AND_LOG_FUNC</name>
        <param><defname>n</defname></param>
        <initializer>/*   Print to debug.log if -debug=category switch is given OR category is NULL. */ \
    template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                          \
    static inline int LogPrint(const char* category, const char* format, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))  \
    {                                                                                \
        if(!<ref refid="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" kindref="member">LogAcceptCategory</ref>(category)) return 0;                                   \
        return <ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(tfm::format(format, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n)));             \
    }                                                                                \
    /*   Log error and return false */                                               \
    template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                                 \
    static inline bool error(const char* format, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))              \
    {                                                                                \
        <ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(&quot;ERROR: &quot; + tfm::format(format, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n)) + &quot;\n&quot;); \
        return false;                                                                \
    }                                                                                \
    /*   Log error and return n */                                                   \
    template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                                 \
    static inline int errorN(int rv, const char* format, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))      \
    {                                                                                \
        <ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(&quot;ERROR: &quot; + tfm::format(format, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n)) + &quot;\n&quot;); \
        return rv;                                                                   \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="163" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a59ca83deecce4e6c8b6139e7eb2870b4" prot="public" static="no">
        <name>THREAD_PRIORITY_LOWEST</name>
        <initializer>PRIO_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="565" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="565" bodyend="-1"/>
        <referencedby refid="miner_8cpp_1a31faece5ef0e403969b3d3debd79b352" compoundref="miner_8cpp" startline="536" endline="591">ThreadStakeMiner</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aff5dd15d0754df75650eb9c3bfa5f86f" prot="public" static="no">
        <name>THREAD_PRIORITY_BELOW_NORMAL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="566" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="566" bodyend="-1"/>
        <referencedby refid="net_8cpp_1a379b0d3521bdd62ac296f219d70c4e30" compoundref="net_8cpp" startline="1582" endline="1654">ThreadMessageHandler</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1af05a5c044382ba6895bcaad26325a693" prot="public" static="no">
        <name>THREAD_PRIORITY_NORMAL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="567" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="567" bodyend="-1"/>
        <referencedby refid="miner_8cpp_1a31faece5ef0e403969b3d3debd79b352" compoundref="miner_8cpp" startline="536" endline="591">ThreadStakeMiner</referencedby>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aa38e29b911337a6e5c70282f136473fa" prot="public" static="no">
        <name>THREAD_PRIORITY_ABOVE_NORMAL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="568" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="util_8h_1a21faa333f363bd74cf1931a355b85648" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int LISTING_DEFAULT_DURATION</definition>
        <argsstring></argsstring>
        <name>LISTING_DEFAULT_DURATION</name>
        <initializer>= 7 * 24 * 60 * 60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a9a7204234b904bf6a0374facf8477796" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fStormNode</definition>
        <argsstring></argsstring>
        <name>fStormNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="118" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="76" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" compoundref="activestormnode_8cpp" startline="402" endline="415">CActiveStormnode::EnableHotColdStormNode</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="instantx_8h_1a0753801d6e6eb2cb230a85a6ba6fd371" compoundref="instantx_8cpp" startline="259" endline="299">DoConsensusVote</referencedby>
        <referencedby refid="class_overview_page_1a18c1a29cab6b745b25e701b20f234932" compoundref="overviewpage_8cpp" startline="101" endline="172">OverviewPage::OverviewPage</referencedby>
        <referencedby refid="class_overview_page_1a7fd68a7bebc327e3bbef2226b41298aa" compoundref="overviewpage_8cpp" startline="180" endline="184">OverviewPage::~OverviewPage</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" compoundref="rpcstormnode_8cpp" startline="20" endline="62">sandstorm</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a36dae9a698814612d6658c86eeea65b5" compoundref="sandstorm_8cpp" startline="495" endline="557">CSandstormPool::Check</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a76f820f131dbb15d80f826f0c788249a" compoundref="sandstorm_8cpp" startline="646" endline="746">CSandstormPool::ChargeFees</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ac01544d518171779e6a609dae48d4f75" compoundref="sandstorm_8cpp" startline="750" endline="782">CSandstormPool::ChargeRandomFees</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" compoundref="sandstorm_8cpp" startline="787" endline="864">CSandstormPool::CheckTimeout</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" compoundref="sandstorm_8cpp" startline="869" endline="888">CSandstormPool::CheckForCompleteQueue</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1afeafad15214cd8599db468c2d9fc750e" compoundref="sandstorm_8cpp" startline="988" endline="1036">CSandstormPool::AddEntry</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" compoundref="sandstorm_8cpp" startline="1090" endline="1176">CSandstormPool::SendSandstormDenominate</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1af272c7c4cb797a825b11d097da4cc59a" compoundref="sandstorm_8cpp" startline="1183" endline="1223">CSandstormPool::StatusUpdate</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1adfe5727cd162dff15a016de05494ba44" compoundref="sandstorm_8cpp" startline="1230" endline="1305">CSandstormPool::SignFinalTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a4a844b1153973243d27a5f0702a7245d" compoundref="sandstorm_8cpp" startline="1319" endline="1341">CSandstormPool::CompletedTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" compoundref="sandstorm_8cpp" startline="2091" endline="2118">CSandstormQueue::Sign</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a4e48e06e3b981a9ac607a0df77428d42" compoundref="sandstorm_8h" startline="427" endline="442">CSandstormPool::UpdateState</referencedby>
        <referencedby refid="class_c_finalized_budget_1a88614fdccb5cdf722403c11832df2ad0" compoundref="stormnode-budget_8cpp" startline="1699" endline="1775">CFinalizedBudget::AutoCheck</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" compoundref="stormnode-payments_8cpp" startline="683" endline="762">CStormnodePayments::ProcessBlock</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_wallet_1a260d40c79106bbaabbf3f4aaf328ffbc" compoundref="wallet_8cpp" startline="2488" endline="2530">CWallet::SelectCoinsDark</referencedby>
        <referencedby refid="class_c_wallet_tx_1a8bb9ffa6758ee861cd65100242c90882" compoundref="wallet_8h" startline="876" endline="913">CWalletTx::GetAnonymizableCredit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aa2216c761101b28e38757c5cffea3dc5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fLiteMode</definition>
        <argsstring></argsstring>
        <name>fLiteMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="119" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="79" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="instantx_8h_1aa516cb499ead2691d8ab216a499db5d0" compoundref="instantx_8cpp" startline="38" endline="173">ProcessMessageInstantX</referencedby>
        <referencedby refid="class_overview_page_1a18c1a29cab6b745b25e701b20f234932" compoundref="overviewpage_8cpp" startline="101" endline="172">OverviewPage::OverviewPage</referencedby>
        <referencedby refid="class_overview_page_1a7fd68a7bebc327e3bbef2226b41298aa" compoundref="overviewpage_8cpp" startline="180" endline="184">OverviewPage::~OverviewPage</referencedby>
        <referencedby refid="class_send_coins_dialog_1a0df5bc29d1df68eda44826651afc595f" compoundref="sendcoinsdialog_8cpp" startline="25" endline="109">SendCoinsDialog::SendCoinsDialog</referencedby>
        <referencedby refid="rpcmisc_8cpp_1a70335b93783d51e48d276a1e08bd721a" compoundref="rpcmisc_8cpp" startline="34" endline="81">getinfo</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</referencedby>
        <referencedby refid="spork_8h_1a3f9c24c1f4c012152fb4422ca981610a" compoundref="spork_8cpp" startline="30" endline="78">ProcessSpork</referencedby>
        <referencedby refid="class_c_budget_manager_1a3fc235d528e37ec1c66789f3bfed1878" compoundref="stormnode-budget_8cpp" startline="904" endline="1072">CBudgetManager::ProcessMessage</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a8dc55316a297daad51a03d4cf7b37d06" compoundref="stormnode-payments_8cpp" startline="354" endline="430">CStormnodePayments::ProcessMessageStormnodePayments</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
        <referencedby refid="class_c_wallet_1a842f8ca0ec3e6879c7f95f1420c7932f" compoundref="wallet_8cpp" startline="1334" endline="1366">CWallet::GetAnonymizableBalance</referencedby>
        <referencedby refid="class_c_wallet_1af5b8987016e90d66fe1d3a475dfe03b4" compoundref="wallet_8cpp" startline="1368" endline="1402">CWallet::GetAnonymizedBalance</referencedby>
        <referencedby refid="class_c_wallet_1ab2440e827d25edcd5a98d6113601088c" compoundref="wallet_8cpp" startline="1508" endline="1546">CWallet::GetAverageAnonymizedRounds</referencedby>
        <referencedby refid="class_c_wallet_1aef7643cab406b179cdddb615cd5f26cf" compoundref="wallet_8cpp" startline="1548" endline="1582">CWallet::GetNormalizedAnonymizedBalance</referencedby>
        <referencedby refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" compoundref="wallet_8cpp" startline="1584" endline="1620">CWallet::GetDenominatedBalance</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1acb212e467afc6516452e15829eeb58d5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fEnableInstantX</definition>
        <argsstring></argsstring>
        <name>fEnableInstantX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="120" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="80" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_merkle_tx_1a6782c78aec9fd63e637dbf0668c8506e" compoundref="main_8cpp" startline="1403" endline="1415">CMerkleTx::GetTransactionLockSignatures</referencedby>
        <referencedby refid="class_c_merkle_tx_1a31b0765b267cab5f76b308d1fe5d9375" compoundref="main_8cpp" startline="1417" endline="1428">CMerkleTx::IsTransactionLockTimedOut</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aaebdfd83d8252d435dfa61f10e7b86e6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nInstantXDepth</definition>
        <argsstring></argsstring>
        <name>nInstantXDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="121" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="81" bodyend="-1"/>
        <referencedby refid="init_8h_1a60c54061faf43bd9cca8ab8bfa38055a" compoundref="init_8cpp" startline="243" endline="353">HelpMessage</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" compoundref="main_8cpp" startline="1430" endline="1447">CMerkleTx::GetDepthInMainChain</referencedby>
        <referencedby refid="main_8h_1a5c7b9ac7929375148311307df7e446d0" compoundref="main_8cpp" startline="1506" endline="1523">GetInputAgeIX</referencedby>
        <referencedby refid="main_8h_1afb9aef5806c13c7a81fda9854f852155" compoundref="main_8cpp" startline="1525" endline="1538">GetIXConfirmations</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a86ef86d561556a8f20848404f267e286" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nSandstormRounds</definition>
        <argsstring></argsstring>
        <name>nSandstormRounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="122" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="82" bodyend="-1"/>
        <referencedby refid="init_8h_1a60c54061faf43bd9cca8ab8bfa38055a" compoundref="init_8cpp" startline="243" endline="353">HelpMessage</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_options_model_1a0e02c341067bff7be262fede017fbea0" compoundref="optionsmodel_8cpp" startline="108" endline="199">OptionsModel::Init</referencedby>
        <referencedby refid="class_options_model_1a56d6c626e3315792c31f44754b2c8d73" compoundref="optionsmodel_8cpp" startline="206" endline="313">OptionsModel::data</referencedby>
        <referencedby refid="class_options_model_1a3102b457f4d46efac8ecb03b3d536b62" compoundref="optionsmodel_8cpp" startline="315" endline="526">OptionsModel::setData</referencedby>
        <referencedby refid="class_overview_page_1a788444cc3b3d9554505f2103a4e556b9" compoundref="overviewpage_8cpp" startline="299" endline="394">OverviewPage::updateSandstormProgress</referencedby>
        <referencedby refid="class_wallet_model_1a51469b2d95cfd4bc0a14ee456fca7b95" compoundref="walletmodel_8cpp" startline="113" endline="137">WalletModel::pollBalanceChanged</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a0348c28d46ac4180e2984336df1b4d50" compoundref="sandstorm_8cpp" startline="1628" endline="1648">CSandstormPool::PrepareSandstormDenominate</referencedby>
        <referencedby refid="class_c_wallet_1a842f8ca0ec3e6879c7f95f1420c7932f" compoundref="wallet_8cpp" startline="1334" endline="1366">CWallet::GetAnonymizableBalance</referencedby>
        <referencedby refid="class_c_wallet_1af5b8987016e90d66fe1d3a475dfe03b4" compoundref="wallet_8cpp" startline="1368" endline="1402">CWallet::GetAnonymizedBalance</referencedby>
        <referencedby refid="class_c_wallet_1ac0780b1a8f4092d5a01cf1fa615514a4" compoundref="wallet_8cpp" startline="1502" endline="1506">CWallet::GetInputSandstormRounds</referencedby>
        <referencedby refid="class_c_wallet_1aef7643cab406b179cdddb615cd5f26cf" compoundref="wallet_8cpp" startline="1548" endline="1582">CWallet::GetNormalizedAnonymizedBalance</referencedby>
        <referencedby refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" compoundref="wallet_8cpp" startline="1584" endline="1620">CWallet::GetDenominatedBalance</referencedby>
        <referencedby refid="class_c_wallet_tx_1a8bb9ffa6758ee861cd65100242c90882" compoundref="wallet_8h" startline="876" endline="913">CWalletTx::GetAnonymizableCredit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a8726b2c37267fdeae9fee074106be65b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nAnonymizeDarkSilkAmount</definition>
        <argsstring></argsstring>
        <name>nAnonymizeDarkSilkAmount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="123" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="83" bodyend="-1"/>
        <referencedby refid="init_8h_1a60c54061faf43bd9cca8ab8bfa38055a" compoundref="init_8cpp" startline="243" endline="353">HelpMessage</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_options_model_1a0e02c341067bff7be262fede017fbea0" compoundref="optionsmodel_8cpp" startline="108" endline="199">OptionsModel::Init</referencedby>
        <referencedby refid="class_options_model_1a56d6c626e3315792c31f44754b2c8d73" compoundref="optionsmodel_8cpp" startline="206" endline="313">OptionsModel::data</referencedby>
        <referencedby refid="class_options_model_1a3102b457f4d46efac8ecb03b3d536b62" compoundref="optionsmodel_8cpp" startline="315" endline="526">OptionsModel::setData</referencedby>
        <referencedby refid="class_overview_page_1a788444cc3b3d9554505f2103a4e556b9" compoundref="overviewpage_8cpp" startline="299" endline="394">OverviewPage::updateSandstormProgress</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a307df0d2e6f7c42eace3d972d4b3f845" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nLiquidityProvider</definition>
        <argsstring></argsstring>
        <name>nLiquidityProvider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="124" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="84" bodyend="-1"/>
        <referencedby refid="init_8h_1a60c54061faf43bd9cca8ab8bfa38055a" compoundref="init_8cpp" startline="243" endline="353">HelpMessage</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a79b2665bd3b764626eddad91b0bfe954" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fEnableSandstorm</definition>
        <argsstring></argsstring>
        <name>fEnableSandstorm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="125" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="89" bodyend="-1"/>
        <referencedby refid="init_8h_1a60c54061faf43bd9cca8ab8bfa38055a" compoundref="init_8cpp" startline="243" endline="353">HelpMessage</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_overview_page_1a18c1a29cab6b745b25e701b20f234932" compoundref="overviewpage_8cpp" startline="101" endline="172">OverviewPage::OverviewPage</referencedby>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1ad7a328af61b85ec0efc0226abc483cf9" compoundref="rpcstormnode_8cpp" startline="20" endline="62">sandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" compoundref="sandstorm_8cpp" startline="787" endline="864">CSandstormPool::CheckTimeout</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" compoundref="sandstorm_8cpp" startline="869" endline="888">CSandstormPool::CheckForCompleteQueue</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" compoundref="sandstorm_8cpp" startline="1090" endline="1176">CSandstormPool::SendSandstormDenominate</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aa6e1d8c03f1d46e89708f9c282181c47" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fSandstormMultiSession</definition>
        <argsstring></argsstring>
        <name>fSandstormMultiSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="126" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="92" bodyend="-1"/>
        <referencedby refid="init_8h_1a60c54061faf43bd9cca8ab8bfa38055a" compoundref="init_8cpp" startline="243" endline="353">HelpMessage</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aef1290adaaac08bd8da8b458c869554f" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t enforceStormnodePaymentsTime</definition>
        <argsstring></argsstring>
        <name>enforceStormnodePaymentsTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Spork enforcement enabled time </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="127" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="86" bodyend="-1"/>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a0143873cb7d76647f41ff47afe5a2255" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string strStormNodeAddr</definition>
        <argsstring></argsstring>
        <name>strStormNodeAddr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="128" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="78" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a87d1153c97b6c99fdad9a30af07fed6e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nStormnodeMinProtocol</definition>
        <argsstring></argsstring>
        <name>nStormnodeMinProtocol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="129" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="87" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a28422c9b2836d2d829f2b7fa9859cb0b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int keysLoaded</definition>
        <argsstring></argsstring>
        <name>keysLoaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ad5b9f1681377dd7cf6753df60c19f96e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fSucessfullyLoaded</definition>
        <argsstring></argsstring>
        <name>fSucessfullyLoaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="131" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a33994dff9c5a89fb40154e891eaae044" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &gt;</type>
        <definition>std::vector&lt;CAmount&gt; sandStormDenominations</definition>
        <argsstring></argsstring>
        <name>sandStormDenominations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>All denominations used by sandstorm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="91" bodyend="-1"/>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ab7fac1067376f91b53aaf6862c15e914" compoundref="sandstorm_8cpp" startline="1707" endline="1798">CSandstormPool::CreateDenominated</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1aebbafc6e18044ba973b127787f9ff90b" compoundref="sandstorm_8cpp" startline="1913" endline="1950">CSandstormPool::GetDenominations</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1af7d1f51900ef204ed612fa27096181af" compoundref="sandstorm_8cpp" startline="1966" endline="1996">CSandstormPool::GetDenominationsByAmount</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a1b40173d3fdd69fd20da1d01117a0970" compoundref="sandstorm_8h" startline="365" endline="384">CSandstormPool::InitDenominations</referencedby>
        <referencedby refid="class_c_wallet_1accb0e427b9b9d2e1ddc200feb2a35e68" compoundref="wallet_8cpp" startline="891" endline="897">CWallet::IsDenominatedAmount</referencedby>
        <referencedby refid="wallet_8cpp_1a502a73c6cf145be4a420a8bc75c6a69e" compoundref="wallet_8cpp" startline="2143" endline="2156">less_then_denom</referencedby>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
        <referencedby refid="class_c_wallet_tx_1a8bb9ffa6758ee861cd65100242c90882" compoundref="wallet_8h" startline="876" endline="913">CWalletTx::GetAnonymizableCredit</referencedby>
        <referencedby refid="class_c_output_1a7b967787d636440d6b67930a436d5c8f" compoundref="wallet_8h" startline="1091" endline="1099">COutput::Priority</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a4f8e018a639d7a5acd7275b15ff66bfa" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string strBudgetMode</definition>
        <argsstring></argsstring>
        <name>strBudgetMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="133" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="108" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_budget_manager_1a9c62c8f18b6f101465415952349ce203" compoundref="stormnode-budget_8cpp" startline="799" endline="902">CBudgetManager::NewBlock</referencedby>
        <referencedby refid="class_c_finalized_budget_1a88614fdccb5cdf722403c11832df2ad0" compoundref="stormnode-budget_8cpp" startline="1699" endline="1775">CFinalizedBudget::AutoCheck</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a2ba7badc843121dde40a6f109d224a42" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fDebug</definition>
        <argsstring></argsstring>
        <name>fDebug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="134" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="96" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</referencedby>
        <referencedby refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" compoundref="kernel_8cpp" startline="286" endline="320">CheckProofOfStake</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="class_transaction_desc_1ab7c9dbb2048aae121dd9d75df86e64f4" compoundref="transactiondesc_8cpp" startline="41" endline="272">TransactionDesc::toHTML</referencedby>
        <referencedby refid="class_wallet_model_1a497418d4a8566b881bab45dec7ad8fd8" compoundref="walletmodel_8cpp" startline="213" endline="488">WalletModel::sendCoins</referencedby>
        <referencedby refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" compoundref="sandstorm_8cpp" startline="2073" endline="2089">CSandStormSigner::VerifyMessage</referencedby>
        <referencedby refid="spork_8h_1a3f9c24c1f4c012152fb4422ca981610a" compoundref="spork_8cpp" startline="30" endline="78">ProcessSpork</referencedby>
        <referencedby refid="class_c_stealth_address_1aa3f4655dced125bf698c208b6e7ac4b8" compoundref="stealth_8cpp" startline="17" endline="64">CStealthAddress::SetEncoded</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adaaeb592c3432c8a459560523c7be207" compoundref="stormnode-sync_8cpp" startline="225" endline="405">CStormnodeSync::Process</referencedby>
        <referencedby refid="timedata_8h_1ad8af089fc8835e11c7d77f6b473fccae" compoundref="timedata_8cpp" startline="40" endline="111">AddTimeData</referencedby>
        <referencedby refid="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" compoundref="util_8cpp" startline="252" endline="278">LogAcceptCategory</referencedby>
        <referencedby refid="class_c_wallet_1a0404b6bc1cb804aadc69b9902b52282a" compoundref="wallet_8cpp" startline="214" endline="248">CWallet::Lock</referencedby>
        <referencedby refid="class_c_wallet_1ab34fe5bf771619dcbe22a65f013e5469" compoundref="wallet_8cpp" startline="479" endline="596">CWallet::EncryptWallet</referencedby>
        <referencedby refid="class_c_wallet_1a119e378349dcbcada447b4343805326d" compoundref="wallet_8cpp" startline="1902" endline="2141">CWallet::SelectCoinsMinConfByCoinAge</referencedby>
        <referencedby refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" compoundref="wallet_8cpp" startline="2158" endline="2287">CWallet::SelectCoinsMinConf</referencedby>
        <referencedby refid="class_c_wallet_1ae3bb56ad5d165525e45e4a0c9ad034f2" compoundref="wallet_8cpp" startline="2987" endline="3040">CWallet::NewStealthAddress</referencedby>
        <referencedby refid="class_c_wallet_1ac45af0632ea59c56295d3158b7387f33" compoundref="wallet_8cpp" startline="3090" endline="3240">CWallet::UnlockStealthAddresses</referencedby>
        <referencedby refid="class_c_wallet_1ae7ab98f84a9f05da46ca943b8f305c85" compoundref="wallet_8cpp" startline="3242" endline="3302">CWallet::UpdateStealthAddress</referencedby>
        <referencedby refid="class_c_wallet_1afce932bf3aa678046ab75eccff004858" compoundref="wallet_8cpp" startline="3385" endline="3468">CWallet::SendStealthMoneyToDestination</referencedby>
        <referencedby refid="class_c_wallet_1a5d0e2025dc7a87a0406be272b80509ee" compoundref="wallet_8cpp" startline="3470" endline="3697">CWallet::FindStealthTransactions</referencedby>
        <referencedby refid="walletdb_8cpp_1ad1f171cf096f5479805a06fc20480343" compoundref="walletdb_8cpp" startline="357" endline="622">ReadKeyValue</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aebbe7fc2f3e1ae3d840076985c9214fa" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fDebugSmsg</definition>
        <argsstring></argsstring>
        <name>fDebugSmsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="135" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="97" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_sec_msg_bucket_1ae6e05a91141c7cacf593b90e8c082113" compoundref="smessage_8cpp" startline="165" endline="185">SecMsgBucket::hashBucket</referencedby>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</referencedby>
        <referencedby refid="smessage_8h_1ab47945fac81152e28647920d324ec630" compoundref="smessage_8cpp" startline="911" endline="961">SecureMsgAddWalletAddresses</referencedby>
        <referencedby refid="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</referencedby>
        <referencedby refid="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</referencedby>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
        <referencedby refid="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" compoundref="smessage_8cpp" startline="1783" endline="1882">SecureMsgSendData</referencedby>
        <referencedby refid="smessage_8h_1a9bd026d2eb7c6dee89c539e99ecac49f" compoundref="smessage_8cpp" startline="2037" endline="2071">SecureMsgScanBlock</referencedby>
        <referencedby refid="smessage_8h_1a440b38f2f513f80283993a2d81e908b5" compoundref="smessage_8cpp" startline="2073" endline="2121">ScanChainForPublicKeys</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
        <referencedby refid="smessage_8h_1a430258e823bdead36f823a51fd6a4510" compoundref="smessage_8cpp" startline="2601" endline="2617">SecureMsgGetLocalKey</referencedby>
        <referencedby refid="smessage_8h_1a1341706507a851babcff6ce436b8ce2d" compoundref="smessage_8cpp" startline="2649" endline="2674">SecureMsgGetStoredKey</referencedby>
        <referencedby refid="smessage_8h_1a9a34bfa72cc027350d71f9daaefb8fef" compoundref="smessage_8cpp" startline="2731" endline="2794">SecureMsgRetrieve</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
        <referencedby refid="smessage_8h_1ae4abbffb060bb486b9e15053f83cbcbf" compoundref="smessage_8cpp" startline="3099" endline="3166">SecureMsgValidate</referencedby>
        <referencedby refid="smessage_8h_1ac434a0295e161eb2ebdad951f4049dc6" compoundref="smessage_8cpp" startline="3168" endline="3274">SecureMsgSetHash</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a49ade2b91028ff037557259b0729b049" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fNoSmsg</definition>
        <argsstring></argsstring>
        <name>fNoSmsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="136" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="98" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a9d6b03a0dcc515a84e620794e64b9547" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fPrintToConsole</definition>
        <argsstring></argsstring>
        <name>fPrintToConsole</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="137" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="99" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" compoundref="util_8cpp" startline="280" endline="318">LogPrintStr</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ae1c7830d95f75ba35fbc6bfa50509913" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fPrintToDebugLog</definition>
        <argsstring></argsstring>
        <name>fPrintToDebugLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="138" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="100" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" compoundref="util_8cpp" startline="280" endline="318">LogPrintStr</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a2839c7c01ad9d90fbd3ce55d32b50c6f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fServer</definition>
        <argsstring></argsstring>
        <name>fServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="139" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="102" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a733f7c70e7c18783935e6de9643c0086" compoundref="rpcwallet_8cpp" startline="1969" endline="2032">walletpassphrase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a71f0a1c395c717d77bdf878cb6ced96e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fCommandLine</definition>
        <argsstring></argsstring>
        <name>fCommandLine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="140" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="103" bodyend="-1"/>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a41393eb45547527ac7cdaede34ab701e" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string strMiscWarning</definition>
        <argsstring></argsstring>
        <name>strMiscWarning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="141" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="104" bodyend="-1"/>
        <referencedby refid="main_8h_1af573b79d097a9ffe6503869f838ccf42" compoundref="main_8cpp" startline="478" endline="486">AbortNode</referencedby>
        <referencedby refid="main_8h_1a6df609da0bad1550cbb2cdc781ad2904" compoundref="main_8cpp" startline="2024" endline="2039">CheckDiskSpace</referencedby>
        <referencedby refid="main_8cpp_1a70b1d1b79f1c760e65c960713b87b732" compoundref="main_8cpp" startline="2327" endline="2368">GetWarnings</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
        <referencedby refid="timedata_8h_1ad8af089fc8835e11c7d77f6b473fccae" compoundref="timedata_8cpp" startline="40" endline="111">AddTimeData</referencedby>
        <referencedby refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" compoundref="util_8cpp" startline="1060" endline="1067">PrintException</referencedby>
        <referencedby refid="util_8h_1a477231880f761159de1567ad6fb98fac" compoundref="util_8cpp" startline="1069" endline="1075">PrintExceptionContinue</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a53f30a9fc322fa65a5c4e3732e4ad410" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fNoListen</definition>
        <argsstring></argsstring>
        <name>fNoListen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="142" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="105" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="net_8h_1ac18517ca5500f0d8e1550ffd4ac56b77" compoundref="net_8cpp" startline="105" endline="127">GetLocal</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aa5e7caf6936a9a94eb088f04bcc62b97" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fLogTimestamps</definition>
        <argsstring></argsstring>
        <name>fLogTimestamps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="143" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="106" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" compoundref="util_8cpp" startline="280" endline="318">LogPrintStr</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aad5e5c200c78bd5bdec18c8707e63822" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool fReopenDebugLog</definition>
        <argsstring></argsstring>
        <name>fReopenDebugLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="144" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="107" bodyend="-1"/>
        <referencedby refid="init_8cpp_1a70b23efd8d46bc8c627e5c241f0d7716" compoundref="init_8cpp" startline="204" endline="207">HandleSIGHUP</referencedby>
        <referencedby refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" compoundref="util_8cpp" startline="280" endline="318">LogPrintStr</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ac6e877d09800ef2f6ed5b4ddee4a202c" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; mapArgs</definition>
        <argsstring></argsstring>
        <name>mapArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="207" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="94" bodyend="-1"/>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="net_8cpp_1a3b4720330e61127963a43df26b80f804" compoundref="net_8cpp" startline="1339" endline="1441">ThreadOpenConnections</referencedby>
        <referencedby refid="class_c_node_1af8d4b8c0f883afffcb62d906c31b2cdf" compoundref="net_8h" startline="544" endline="578">CNode::EndMessage</referencedby>
        <referencedby refid="darksilk_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilk_8cpp" startline="128" endline="350">main</referencedby>
        <referencedby refid="class_options_model_1a0e02c341067bff7be262fede017fbea0" compoundref="optionsmodel_8cpp" startline="108" endline="199">OptionsModel::Init</referencedby>
        <referencedby refid="class_options_model_1a56d6c626e3315792c31f44754b2c8d73" compoundref="optionsmodel_8cpp" startline="206" endline="313">OptionsModel::data</referencedby>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="rpcserver_8cpp_1adda5af922ba2f27c9f6219394d3c4f4c" compoundref="rpcserver_8cpp" startline="743" endline="823">ServiceConnection</referencedby>
        <referencedby refid="util_8h_1a4cfc6f116964c12bc24442828c2da007" compoundref="util_8cpp" startline="491" endline="534">ParseParameters</referencedby>
        <referencedby refid="util_8h_1a24f685720bf40370e5bd2a192ad50cd8" compoundref="util_8cpp" startline="536" endline="541">GetArg</referencedby>
        <referencedby refid="util_8h_1a64d956f1dda7f9a80ab5d594532b906d" compoundref="util_8cpp" startline="550" endline="559">GetBoolArg</referencedby>
        <referencedby refid="util_8h_1a9d94ca9f7c1496626992d1873e3f69df" compoundref="util_8cpp" startline="561" endline="567">SoftSetArg</referencedby>
        <referencedby refid="util_8h_1a0d247b470b387d7cd3f039bd26166007" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ad1aaac805f4fdc2da7dddf5aafaa8bac" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::vector&lt;std::string&gt; &gt; mapMultiArgs</definition>
        <argsstring></argsstring>
        <name>mapMultiArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="208" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="95" bodyend="-1"/>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="net_8cpp_1a3b4720330e61127963a43df26b80f804" compoundref="net_8cpp" startline="1339" endline="1441">ThreadOpenConnections</referencedby>
        <referencedby refid="net_8cpp_1a2d1ca95557ae336582b886a251e7fe94" compoundref="net_8cpp" startline="1443" endline="1513">ThreadOpenAddedConnections</referencedby>
        <referencedby refid="darksilk_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilk_8cpp" startline="128" endline="350">main</referencedby>
        <referencedby refid="class_options_model_1a0e02c341067bff7be262fede017fbea0" compoundref="optionsmodel_8cpp" startline="108" endline="199">OptionsModel::Init</referencedby>
        <referencedby refid="class_options_model_1a56d6c626e3315792c31f44754b2c8d73" compoundref="optionsmodel_8cpp" startline="206" endline="313">OptionsModel::data</referencedby>
        <referencedby refid="rpcserver_8cpp_1a9ec282be04e51f5fde86d5ba98467019" compoundref="rpcserver_8cpp" startline="375" endline="396">ClientAllowed</referencedby>
        <referencedby refid="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" compoundref="util_8cpp" startline="252" endline="278">LogAcceptCategory</referencedby>
        <referencedby refid="util_8h_1a4cfc6f116964c12bc24442828c2da007" compoundref="util_8cpp" startline="491" endline="534">ParseParameters</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a10e84effe90309add77c3b668f18c228" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string strTimestampFormat</definition>
        <argsstring></argsstring>
        <name>strTimestampFormat</name>
        <initializer>= &quot;%Y-%m-%d %H:%M:%S UTC&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="397" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ad679dcd7cb4960c49a8d400bcc23b0d0" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t insecure_rand_Rz</definition>
        <argsstring></argsstring>
        <name>insecure_rand_Rz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MWC RNG of George Marsaglia This is intended to be fast. It has a period of 2^59.3, though the least significant 16 bits only have a period of about 2^30.1.</para><para><simplesect kind="return"><para>random value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="472" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a45e4e024616db2e96c5ffc34928c553b" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t insecure_rand_Rw</definition>
        <argsstring></argsstring>
        <name>insecure_rand_Rw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="473" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1365" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="util_8h_1a1255e360d073f56da2f732abf9ce42d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>nBytes</declname>
            <defname>nBytes</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* alignup</definition>
        <argsstring>(T *p)</argsstring>
        <name>alignup</name>
        <param>
          <type>T *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="81" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="81" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a424ea7e15366f453189c6b977f14b420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::filesystem::path</type>
        <definition>boost::filesystem::path GetStormnodeConfigFile</definition>
        <argsstring>()</argsstring>
        <name>GetStormnodeConfigFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1155" bodyend="1160"/>
        <references refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" compoundref="util_8cpp" startline="536" endline="541">GetArg</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <referencedby refid="class_c_stormnode_config_1a6ad22bf283a95ac600d0e1d37fa41d54" compoundref="stormnodeconfig_8cpp" startline="21" endline="80">CStormnodeConfig::read</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac635182d3e845eda4af4fa5ab31609da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MilliSleep</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>MilliSleep</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="107" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="107" bodyend="114"/>
        <referencedby refid="darksilkd_8cpp_1ab68baad9d16aab4c1dcdda691a8bf18f" compoundref="darksilkd_8cpp" startline="14" endline="28">DetectShutdownThread</referencedby>
        <referencedby refid="class_c_d_b_1acfb8a373edb9c4cfab780fb7578b277e" compoundref="db_8cpp" startline="343" endline="424">CDB::Rewrite</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="main_8cpp_1a13555a2da794ce558ee767ce6632c02b" compoundref="main_8cpp" startline="488" endline="495">GetHeight</referencedby>
        <referencedby refid="miner_8cpp_1a31faece5ef0e403969b3d3debd79b352" compoundref="miner_8cpp" startline="536" endline="591">ThreadStakeMiner</referencedby>
        <referencedby refid="net_8cpp_1a1974b789f25e8ac412052f627488e0ad" compoundref="net_8cpp" startline="146" endline="194">RecvLine</referencedby>
        <referencedby refid="net_8cpp_1aa1111c12121e039bbd8eedb556e4514a" compoundref="net_8cpp" startline="754" endline="1131">ThreadSocketHandler</referencedby>
        <referencedby refid="net_8cpp_1ab2d8883b5524ec7b80d3b9535e73a3ed" compoundref="net_8cpp" startline="1259" endline="1300">ThreadDNSAddressSeed</referencedby>
        <referencedby refid="net_8cpp_1a3b4720330e61127963a43df26b80f804" compoundref="net_8cpp" startline="1339" endline="1441">ThreadOpenConnections</referencedby>
        <referencedby refid="net_8cpp_1a2d1ca95557ae336582b886a251e7fe94" compoundref="net_8cpp" startline="1443" endline="1513">ThreadOpenAddedConnections</referencedby>
        <referencedby refid="net_8cpp_1a379b0d3521bdd62ac296f219d70c4e30" compoundref="net_8cpp" startline="1582" endline="1654">ThreadMessageHandler</referencedby>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
        <referencedby refid="rpcserver_8cpp_1adda5af922ba2f27c9f6219394d3c4f4c" compoundref="rpcserver_8cpp" startline="743" endline="823">ServiceConnection</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a0a6a14d206122f938220b23eab5e8a70" compoundref="sandstorm_8cpp" startline="426" endline="436">CSandstormPool::UnlockCoins</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" compoundref="sandstorm_8cpp" startline="1090" endline="1176">CSandstormPool::SendSandstormDenominate</referencedby>
        <referencedby refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</referencedby>
        <referencedby refid="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" compoundref="util_8h" startline="597" endline="621">LoopForever</referencedby>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8cpp_1a204d88d2eba6d30ae7f9df2f44df7cb6" compoundref="smessage_8cpp" startline="687" endline="766">ThreadSecureMsgPow</referencedby>
        <referencedby refid="smessage_8h_1a37253b307b8569fe0d8c3548c15e8e20" compoundref="smessage_8cpp" startline="1231" endline="1289">SecureMsgDisable</referencedby>
        <referencedby refid="walletdb_8cpp_1a571e13707ba159c7c047875764ae5e2b" compoundref="walletdb_8cpp" startline="732" endline="792">ThreadFlushWalletDB</referencedby>
        <referencedby refid="walletdb_8cpp_1a273c3692765c732c5f724cec93e6b62f" compoundref="walletdb_8cpp" startline="794" endline="832">BackupWallet</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a053c038c846a1c5184ddfcf58dabfeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsLogOpen</definition>
        <argsstring>()</argsstring>
        <name>IsLogOpen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LogAcceptCategory</definition>
        <argsstring>(const char *category)</argsstring>
        <name>LogAcceptCategory</name>
        <param>
          <type>const char *</type>
          <declname>category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="149" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="252" bodyend="278"/>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <references refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" compoundref="util_8cpp" startline="95">mapMultiArgs</references>
        <referencedby refid="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" compoundref="kernel_8cpp" startline="111" endline="189">ComputeNextStakeModifier</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LogPrintStr</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>LogPrintStr</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="151" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="280" bodyend="318"/>
        <references refid="util_8cpp_1a9d6b03a0dcc515a84e620794e64b9547" compoundref="util_8cpp" startline="99">fPrintToConsole</references>
        <references refid="util_8cpp_1ae1c7830d95f75ba35fbc6bfa50509913" compoundref="util_8cpp" startline="100">fPrintToDebugLog</references>
        <references refid="util_8cpp_1aad5e5c200c78bd5bdec18c8707e63822" compoundref="util_8cpp" startline="107">fReopenDebugLog</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="util_8cpp_1aa5e7caf6936a9a94eb088f04bcc62b97" compoundref="util_8cpp" startline="106">fLogTimestamps</references>
        <references refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aa968b3d087118c9a4913566b31c7ae4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GenerateRandomString</definition>
        <argsstring>(unsigned int len=24)</argsstring>
        <name>GenerateRandomString</name>
        <param>
          <type>unsigned int</type>
          <declname>len</declname>
          <defval>24</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="153" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1162" bodyend="1180"/>
        <references refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" compoundref="db__bench_8cc" startline="290">rand</references>
        <referencedby refid="util_8h_1a22a2db2aea31bc8220b804147c1a82db" compoundref="util_8cpp" startline="1188" endline="1204">WriteConfigFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a22a2db2aea31bc8220b804147c1a82db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteConfigFile</definition>
        <argsstring>(FILE *configFile)</argsstring>
        <name>WriteConfigFile</name>
        <param>
          <type>FILE *</type>
          <declname>configFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="154" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1188" bodyend="1204"/>
        <references refid="util_8cpp_1a016054b32fbbc241353faf86a94eae9b" compoundref="util_8cpp" startline="1162" endline="1180">GenerateRandomString</references>
        <references refid="util_8cpp_1a680db3065fcd18a556ea6e1fc977e3b0" compoundref="util_8cpp" startline="1182" endline="1186">RandomIntegerRange</references>
        <referencedby refid="util_8cpp_1a27ba417174a3ee63cb8ee1abb279a668" compoundref="util_8cpp" startline="1212" endline="1243">ReadConfigFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a990b64b5cc5ec1ba733a834916f4c0a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FileExists</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>FileExists</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="155" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1206" bodyend="1210"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a680db3065fcd18a556ea6e1fc977e3b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int RandomIntegerRange</definition>
        <argsstring>(unsigned int nMin, unsigned int nMax)</argsstring>
        <name>RandomIntegerRange</name>
        <param>
          <type>unsigned int</type>
          <declname>nMin</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="156" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1182" bodyend="1186"/>
        <references refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" compoundref="db__bench_8cc" startline="290">rand</references>
        <referencedby refid="util_8h_1a22a2db2aea31bc8220b804147c1a82db" compoundref="util_8cpp" startline="1188" endline="1204">WriteConfigFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aab1f837a2366f424bdc996fdf6352171" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int LogPrint</definition>
        <argsstring>(const char *category, const char *format)</argsstring>
        <name>LogPrint</name>
        <param>
          <type>const char *</type>
          <declname>category</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="191" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1af8985880cf4ef26df0a5aa2ffcb76662" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool error</definition>
        <argsstring>(const char *format)</argsstring>
        <name>error</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="196" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0ab9cb0c182a29ed6e32f30769dc9964" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int errorN</definition>
        <argsstring>(int n, const char *format)</argsstring>
        <name>errorN</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="201" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab699fbdf803610a4e2060fd87787f7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RandAddSeed</definition>
        <argsstring>()</argsstring>
        <name>RandAddSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="210" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="163" bodyend="169"/>
        <references refid="util_8h_1acd4d9988b9bb3f31fddf72a34b2bc37f" compoundref="util_8h" startline="370" endline="381">GetPerformanceCounter</references>
        <referencedby refid="class_c_init_1a4be18861132e828f5f0101880d04b706" compoundref="util_8cpp" startline="127" endline="142">CInit::CInit</referencedby>
        <referencedby refid="util_8h_1a786af12a87491f8dc24351d93b9833b6" compoundref="util_8cpp" startline="171" endline="196">RandAddSeedPerfmon</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a786af12a87491f8dc24351d93b9833b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RandAddSeedPerfmon</definition>
        <argsstring>()</argsstring>
        <name>RandAddSeedPerfmon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="211" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="171" bodyend="196"/>
        <references refid="util_8cpp_1ab699fbdf803610a4e2060fd87787f7e0" compoundref="util_8cpp" startline="163" endline="169">RandAddSeed</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" compoundref="key_8cpp" startline="139" endline="146">CKey::MakeNewKey</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="stealth_8h_1ab09bf0ded4faa17a866c79087b0b20a8" compoundref="stealth_8cpp" startline="132" endline="160">GenerateRandomSecret</referencedby>
        <referencedby refid="class_c_wallet_1ab34fe5bf771619dcbe22a65f013e5469" compoundref="wallet_8cpp" startline="479" endline="596">CWallet::EncryptWallet</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintException</definition>
        <argsstring>(std::exception *pex, const char *pszThread)</argsstring>
        <name>PrintException</name>
        <param>
          <type>std::exception *</type>
          <declname>pex</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszThread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="213" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1060" bodyend="1067"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1a396fd0b4e52260e1ddf379fa6e09d887" compoundref="util_8cpp" startline="104">strMiscWarning</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="rpcclient_8h_1a4ee23259648a971c9c05aeff8b545a6d" compoundref="rpcclient_8cpp" startline="232" endline="295">CommandLineRPC</referencedby>
        <referencedby refid="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" compoundref="util_8h" startline="597" endline="621">LoopForever</referencedby>
        <referencedby refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" compoundref="util_8h" startline="623" endline="644">TraceThread</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a477231880f761159de1567ad6fb98fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintExceptionContinue</definition>
        <argsstring>(std::exception *pex, const char *pszThread)</argsstring>
        <name>PrintExceptionContinue</name>
        <param>
          <type>std::exception *</type>
          <declname>pex</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszThread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="214" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1069" bodyend="1075"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1a396fd0b4e52260e1ddf379fa6e09d887" compoundref="util_8cpp" startline="104">strMiscWarning</references>
        <referencedby refid="main_8h_1a196f9318f02448b85b28d612698934fd" compoundref="main_8cpp" startline="3306" endline="3423">ProcessMessages</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a6d49c32c9c6e963f892744c909e4c3f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParseString</definition>
        <argsstring>(const std::string &amp;str, char c, std::vector&lt; std::string &gt; &amp;v)</argsstring>
        <name>ParseString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a9b8dfe28f5d12bf84ab1f179606f338b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FormatMoney</definition>
        <argsstring>(CAmount n, bool fPlus=false)</argsstring>
        <name>FormatMoney</name>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fPlus</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="216" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="339" bodyend="360"/>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <referencedby refid="class_c_block_index_1abed1fcbcd372db6b9efa6bb9da317469" compoundref="chain_8h" startline="316" endline="327">CBlockIndex::ToString</referencedby>
        <referencedby refid="main_8h_1a54eeb686375f66683fb139de496c088d" compoundref="main_8cpp" startline="1662" endline="1675">GetProofOfWorkReward</referencedby>
        <referencedby refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="class_c_tx_out_1aee479c0d4a3786c44e2bc4c35d93b105" compoundref="transaction_8h" startline="245" endline="249">CTxOut::ToString</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a33a914aa20f1ded289040800898a0e79" compoundref="rpcwallet_8cpp" startline="421" endline="454">SendMoney</referencedby>
        <referencedby refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" compoundref="wallet_8cpp" startline="1153" endline="1223">CWallet::ReacceptWalletTransactions</referencedby>
        <referencedby refid="class_c_wallet_1a119e378349dcbcada447b4343805326d" compoundref="wallet_8cpp" startline="1902" endline="2141">CWallet::SelectCoinsMinConfByCoinAge</referencedby>
        <referencedby refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" compoundref="wallet_8cpp" startline="2158" endline="2287">CWallet::SelectCoinsMinConf</referencedby>
        <referencedby refid="class_c_wallet_1a509492fe45395af29a4a16045686c239" compoundref="wallet_8cpp" startline="3347" endline="3383">CWallet::SendStealthMoney</referencedby>
        <referencedby refid="class_c_wallet_1a356d16f6df1f109674adf1d1dc577f2e" compoundref="wallet_8cpp" startline="4019" endline="4059">CWallet::SendMoney</referencedby>
        <referencedby refid="class_c_wallet_1aa1e6f8f54b36ae7ec11f567a59a99aa3" compoundref="wallet_8cpp" startline="4596" endline="4642">CWallet::FixSpentCoins</referencedby>
        <referencedby refid="class_c_output_1a30a78d31f6667803c613efdef28cbe52" compoundref="wallet_8h" startline="1085" endline="1088">COutput::ToString</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a1de857cb71a01a4104d131dc7c7b6b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ParseMoney</definition>
        <argsstring>(const std::string &amp;str, CAmount &amp;nRet)</argsstring>
        <name>ParseMoney</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a72faa2422b590d61f0d365e8f8877e57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ParseMoney</definition>
        <argsstring>(const char *pszIn, CAmount &amp;nRet)</argsstring>
        <name>ParseMoney</name>
        <param>
          <type>const char *</type>
          <declname>pszIn</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="218" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="368" bodyend="406"/>
        <references refid="util_8h_1a22916d155600c742c4efad727462588e" compoundref="util_8h" startline="297" endline="304">atoi64</references>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a5c3ee01d5e18f1a60bde06ab4dbcdbd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SanitizeString</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>SanitizeString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a5a787187ddd5c52baae692350ec5a2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; ParseHex</definition>
        <argsstring>(const char *psz)</argsstring>
        <name>ParseHex</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="220" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="450" bodyend="469"/>
        <references refid="uint256_8h_1aa59e8a8c5a39cb5041f93bb95dd02119" compoundref="uint256_8h" startline="19" endline="22">HexDigit</references>
        <referencedby refid="class_c_main_params_1ab7dfebf3c4dd5cc0ebdfabe1111056d6" compoundref="chainparams_8cpp" startline="54" endline="117">CMainParams::CMainParams</referencedby>
        <referencedby refid="class_c_test_net_params_1abbd5f6e3e94bc8abf99a5dfaff75374a" compoundref="chainparams_8cpp" startline="138" endline="178">CTestNetParams::CTestNetParams</referencedby>
        <referencedby refid="class_c_d_b_env_1a08726637bff0809ab9c7c493383a3914" compoundref="db_8cpp" startline="167" endline="219">CDBEnv::Salvage</referencedby>
        <referencedby refid="rpcdump_8cpp_1a457bc572859c8265c72a0afd1a6db56c" compoundref="rpcdump_8cpp" startline="161" endline="230">importaddress</referencedby>
        <referencedby refid="rpcmining_8cpp_1a389f62bd448bb24933a1ea8920411d7e" compoundref="rpcmining_8cpp" startline="56" endline="76">getstakesubsidy</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a6fc1aa077add8cb1c74207056616134d" compoundref="rpcmining_8cpp" startline="655" endline="679">submitblock</referencedby>
        <referencedby refid="rpcmisc_8cpp_1a32620752527477f4bac811a7db5ab35b" compoundref="rpcmisc_8cpp" startline="167" endline="205">validatepubkey</referencedby>
        <referencedby refid="rpcnet_8cpp_1a89a8e338923aea165bb7d8d572d76203" compoundref="rpcnet_8cpp" startline="244" endline="301">sendalert</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1a6775c600b1bfdbb22f38e5f1cd27cfea" compoundref="rpcrawtransaction_8cpp" startline="301" endline="324">decoderawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1aa0d151e35c0ad5ec82df451a833aeadb" compoundref="rpcrawtransaction_8cpp" startline="349" endline="555">signrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1ad5aad44f890060f42efb49acf349511e" compoundref="rpcrawtransaction_8cpp" startline="558" endline="602">sendrawtransaction</referencedby>
        <referencedby refid="rpcserver_8cpp_1a6912ee7b40ffee24ad6d599b3667d4c8" compoundref="rpcserver_8cpp" startline="125" endline="133">ParseHexV</referencedby>
        <referencedby refid="rpcwallet_8cpp_1aca53a9372c92e81fc665cbdeb8fcdbc5" compoundref="rpcwallet_8cpp" startline="89" endline="142">_createmultisig</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a01e8a83cbd4209f10c71719383d7ca2d" compoundref="rpcwallet_8cpp" startline="1091" endline="1180">addmultisigaddress</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a4bde25c1b4a97ec6068d2808594c9820" compoundref="rpcwallet_8cpp" startline="2383" endline="2487">importstealthaddress</referencedby>
        <referencedby refid="class_c_spork_manager_1a697d8c0ce5c422ea125eee96687aa7b3" compoundref="spork_8cpp" startline="175" endline="188">CSporkManager::CheckSignature</referencedby>
        <referencedby refid="base58__tests_8cpp_1ad270e557a9bafea8a9047386547b6615" compoundref="base58__tests_8cpp" startline="15" endline="34">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="util_8cpp_1a64d56c5bed7672ee006ff2c29f3554ee" compoundref="util_8cpp" startline="471" endline="474">ParseHex</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0fc7535fb01fcf081fd8791173688939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; ParseHex</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>ParseHex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a9f23401f4b871ed693f7a96a9ba40c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsHex</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>IsHex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ad7d5462ec6ec6e23493c839d01da7424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; DecodeBase64</definition>
        <argsstring>(const char *p, bool *pfInvalid=NULL)</argsstring>
        <name>DecodeBase64</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>pfInvalid</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="223" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="629" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1abe1060fd27543de8bf9806678f4e91eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DecodeBase64</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>DecodeBase64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab088e17c477707c187113686457eabb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string EncodeBase64</definition>
        <argsstring>(const unsigned char *pch, size_t len)</argsstring>
        <name>EncodeBase64</name>
        <param>
          <type>const unsigned char *</type>
          <declname>pch</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="225" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="578" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ad00e71aa1ead536a941d6f7d7c0292ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string EncodeBase64</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>EncodeBase64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0071c0bf91d611895e43999e62666c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref></type>
        <definition>SecureString DecodeBase64Secure</definition>
        <argsstring>(const SecureString &amp;input)</argsstring>
        <name>DecodeBase64Secure</name>
        <param>
          <type>const <ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="227" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="746" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a49f6f1cd42cb886762be52c72466dc7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref></type>
        <definition>SecureString EncodeBase64Secure</definition>
        <argsstring>(const SecureString &amp;input)</argsstring>
        <name>EncodeBase64Secure</name>
        <param>
          <type>const <ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="228" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="719" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a58e69b413820ff62a4f203eb5c1a827a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; DecodeBase32</definition>
        <argsstring>(const char *p, bool *pfInvalid=NULL)</argsstring>
        <name>DecodeBase32</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>pfInvalid</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="229" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="839" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a31f169e89be696c17678f84b74c1666c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DecodeBase32</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>DecodeBase32</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aed1944a78afffe9d5f3129e656dc8aa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string EncodeBase32</definition>
        <argsstring>(const unsigned char *pch, size_t len)</argsstring>
        <name>EncodeBase32</name>
        <param>
          <type>const unsigned char *</type>
          <declname>pch</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="231" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="775" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a352475038cfcd87d2d7d9a098d96a9d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string EncodeBase32</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>EncodeBase32</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a4cfc6f116964c12bc24442828c2da007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParseParameters</definition>
        <argsstring>(int argc, const char *const argv[])</argsstring>
        <name>ParseParameters</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="233" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="491" bodyend="534"/>
        <references refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" compoundref="util_8cpp" startline="94">mapArgs</references>
        <references refid="util_8cpp_1a34d23466f937db99d45620bc7ea5d2fb" compoundref="util_8cpp" startline="95">mapMultiArgs</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="darksilk_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilk_8cpp" startline="128" endline="350">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a134e5ff2f94e103c1de7b642675546ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WildcardMatch</definition>
        <argsstring>(const char *psz, const char *mask)</argsstring>
        <name>WildcardMatch</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="234" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="963" bodyend="985"/>
        <references refid="util_8cpp_1a134e5ff2f94e103c1de7b642675546ca" compoundref="util_8cpp" startline="963" endline="985">WildcardMatch</references>
        <referencedby refid="rpcserver_8cpp_1a9ec282be04e51f5fde86d5ba98467019" compoundref="rpcserver_8cpp" startline="375" endline="396">ClientAllowed</referencedby>
        <referencedby refid="util_8h_1a134e5ff2f94e103c1de7b642675546ca" compoundref="util_8cpp" startline="963" endline="985">WildcardMatch</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a6e9c69474d54f690c6d9f068e7383727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WildcardMatch</definition>
        <argsstring>(const std::string &amp;str, const std::string &amp;mask)</argsstring>
        <name>WildcardMatch</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a4458ca67cacd593b21c8e1386d192064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TryCreateDirectory</definition>
        <argsstring>(const boost::filesystem::path &amp;p)</argsstring>
        <name>TryCreateDirectory</name>
        <param>
          <type>const boost::filesystem::path &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ignores exceptions thrown by Boost&apos;s create_directory if the requested directory exists. Specifically handles case where path p exists, but it wasn&apos;t possible for the user to write to the parent directory. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="236" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1280" bodyend="1292"/>
        <referencedby refid="class_c_level_d_b_wrapper_1ae796b1190c072df6275e0ada4d187943" compoundref="leveldbwrapper_8cpp" startline="44" endline="67">CLevelDBWrapper::CLevelDBWrapper</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7572b77c2a5191de8d40d4050322ab84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FileCommit</definition>
        <argsstring>(FILE *fileout)</argsstring>
        <name>FileCommit</name>
        <param>
          <type>FILE *</type>
          <declname>fileout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="237" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1294" bodyend="1302"/>
        <referencedby refid="class_c_block_1a606df2cab7dc67e5dd11b157d288cf2b" compoundref="chain_8cpp" startline="830" endline="854">CBlock::WriteToDisk</referencedby>
        <referencedby refid="class_c_addr_d_b_1aaec90dba59cd69a2f25bc5630a1dde39" compoundref="net_8cpp" startline="2022" endline="2058">CAddrDB::Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ad8f8509a84cc6f53344a5ac76369c327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RenameOver</definition>
        <argsstring>(boost::filesystem::path src, boost::filesystem::path dest)</argsstring>
        <name>RenameOver</name>
        <param>
          <type>boost::filesystem::path</type>
          <declname>src</declname>
        </param>
        <param>
          <type>boost::filesystem::path</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="238" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1264" bodyend="1273"/>
        <referencedby refid="main_8h_1a0189c34248cd89bbbe20d4d6045bd7c9" compoundref="main_8cpp" startline="2294" endline="2317">ThreadImport</referencedby>
        <referencedby refid="class_c_addr_d_b_1aaec90dba59cd69a2f25bc5630a1dde39" compoundref="net_8cpp" startline="2022" endline="2058">CAddrDB::Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab272995de020a3bcbf743be630e485c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::filesystem::path</type>
        <definition>boost::filesystem::path GetDefaultDataDir</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultDataDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="239" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1077" bodyend="1104"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="util_8h_1a0d247b470b387d7cd3f039bd26166007" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0d247b470b387d7cd3f039bd26166007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::filesystem::path &amp;</type>
        <definition>const boost::filesystem::path&amp; GetDataDir</definition>
        <argsstring>(bool fNetSpecific=true)</argsstring>
        <name>GetDataDir</name>
        <param>
          <type>bool</type>
          <declname>fNetSpecific</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="240" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1109" bodyend="1140"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ac930c321a94adf771179465e98c13674" compoundref="chainparams_8h" startline="42">CChainParams::MAX_NETWORK_TYPES</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_chain_params_1a90dc493ec0c0325c98c3ac06eb99862b">CChainParams::NetworkID</references>
        <references refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" compoundref="util_8cpp" startline="94">mapArgs</references>
        <references refid="util_8cpp_1ab272995de020a3bcbf743be630e485c6" compoundref="util_8cpp" startline="1077" endline="1104">GetDefaultDataDir</references>
        <references refid="class_c_chain_params_1ad11dd170e65650ff4b12d45a32b9c774" compoundref="chainparams_8h" startline="63" endline="63">CChainParams::DataDir</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="class_c_d_b_1aa5f2317ab28c6424bfebdaa969aa2b2c" compoundref="db_8cpp" startline="230" endline="286">CDB::CDB</referencedby>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="main_8h_1a6df609da0bad1550cbb2cdc781ad2904" compoundref="main_8cpp" startline="2024" endline="2039">CheckDiskSpace</referencedby>
        <referencedby refid="main_8h_1a0189c34248cd89bbbe20d4d6045bd7c9" compoundref="main_8cpp" startline="2294" endline="2317">ThreadImport</referencedby>
        <referencedby refid="main_8h_1a2f26f074aac584c3398de1dcdac59de9" compoundref="main_8cpp" startline="4008" endline="4011">GetBlockPosFilename</referencedby>
        <referencedby refid="class_c_addr_d_b_1af8c039f1904b1892c5a14e484a5b31a7" compoundref="net_8cpp" startline="2017" endline="2020">CAddrDB::CAddrDB</referencedby>
        <referencedby refid="class_c_addr_d_b_1aaec90dba59cd69a2f25bc5630a1dde39" compoundref="net_8cpp" startline="2022" endline="2058">CAddrDB::Write</referencedby>
        <referencedby refid="darksilk_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilk_8cpp" startline="128" endline="350">main</referencedby>
        <referencedby refid="namespace_g_u_i_util_1aad169e3227e7a851db52a08bfb30391c" compoundref="guiutil_8cpp" startline="248" endline="255">GUIUtil::openDebugLogfile</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
        <referencedby refid="class_sec_msg_d_b_1a1fc6ac45b72e4df75be07fdadfc356ce" compoundref="smessage_8cpp" startline="188" endline="221">SecMsgDB::Open</referencedby>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</referencedby>
        <referencedby refid="smessage_8h_1aebaa05e870f58d8a3736c922295e286a" compoundref="smessage_8cpp" startline="964" endline="1036">SecureMsgReadIni</referencedby>
        <referencedby refid="smessage_8h_1ad6d4790245bc722b427671aad60f5a07" compoundref="smessage_8cpp" startline="1038" endline="1100">SecureMsgWriteIni</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a9a34bfa72cc027350d71f9daaefb8fef" compoundref="smessage_8cpp" startline="2731" endline="2794">SecureMsgRetrieve</referencedby>
        <referencedby refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
        <referencedby refid="class_c_budget_d_b_1a133c5d41d7aa4a73b02a14bd286b4503" compoundref="stormnode-budget_8cpp" startline="204" endline="208">CBudgetDB::CBudgetDB</referencedby>
        <referencedby refid="class_c_stormnode_payment_d_b_1ade4ae1d8cfaa218535e5abc8174729dd" compoundref="stormnode-payments_8cpp" startline="28" endline="32">CStormnodePaymentDB::CStormnodePaymentDB</referencedby>
        <referencedby refid="class_c_stormnode_d_b_1a212d16c07750eca6c23496e53aec5512" compoundref="stormnodeman_8cpp" startline="51" endline="55">CStormnodeDB::CStormnodeDB</referencedby>
        <referencedby refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" compoundref="util_8cpp" startline="280" endline="318">LogPrintStr</referencedby>
        <referencedby refid="util_8h_1a7d86fadf98dfaba55f80b9be0ab0f978" compoundref="util_8cpp" startline="1148" endline="1153">GetConfigFile</referencedby>
        <referencedby refid="util_8h_1a424ea7e15366f453189c6b977f14b420" compoundref="util_8cpp" startline="1155" endline="1160">GetStormnodeConfigFile</referencedby>
        <referencedby refid="util_8h_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" compoundref="util_8cpp" startline="1245" endline="1250">GetPidFile</referencedby>
        <referencedby refid="util_8h_1a37fca7e305fe0caa306b23fdb37f88e2" compoundref="util_8cpp" startline="1328" endline="1348">ShrinkDebugFile</referencedby>
        <referencedby refid="walletdb_8cpp_1a273c3692765c732c5f724cec93e6b62f" compoundref="walletdb_8cpp" startline="794" endline="832">BackupWallet</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7d86fadf98dfaba55f80b9be0ab0f978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::filesystem::path</type>
        <definition>boost::filesystem::path GetConfigFile</definition>
        <argsstring>()</argsstring>
        <name>GetConfigFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="241" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1148" bodyend="1153"/>
        <references refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" compoundref="util_8cpp" startline="536" endline="541">GetArg</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="util_8cpp_1a27ba417174a3ee63cb8ee1abb279a668" compoundref="util_8cpp" startline="1212" endline="1243">ReadConfigFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::filesystem::path</type>
        <definition>boost::filesystem::path GetPidFile</definition>
        <argsstring>()</argsstring>
        <name>GetPidFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="242" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1245" bodyend="1250"/>
        <references refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" compoundref="util_8cpp" startline="536" endline="541">GetArg</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0ec1d8fc76760232b016335fdcf7c539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CreatePidFile</definition>
        <argsstring>(const boost::filesystem::path &amp;path, pid_t pid)</argsstring>
        <name>CreatePidFile</name>
        <param>
          <type>const boost::filesystem::path &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="244" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1253" bodyend="1261"/>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a9e585b4be467fe1d3ee978214ceff5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReadConfigFile</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; &amp;mapSettingsRet, std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;mapMultiSettingsRet)</argsstring>
        <name>ReadConfigFile</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>mapSettingsRet</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;</type>
          <declname>mapMultiSettingsRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1accff8f395fb4e283af38111daf096f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string getTimeString</definition>
        <argsstring>(int64_t timestamp, char *buffer, size_t nBuffer)</argsstring>
        <name>getTimeString</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="251" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1304" bodyend="1312"/>
        <referencedby refid="rpcsmessage_8cpp_1aeaef3f326a95b9510ad4ff2af7f80efe" compoundref="rpcsmessage_8cpp" startline="566" endline="677">smsginbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1a09f153f6fb0e6094919452744ef58ded" compoundref="rpcsmessage_8cpp" startline="679" endline="770">smsgoutbox</referencedby>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a6476623f1d1477b76ae3f751f6db644b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string bytesReadable</definition>
        <argsstring>(uint64_t nBytes)</argsstring>
        <name>bytesReadable</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>nBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="252" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1314" bodyend="1326"/>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <referencedby refid="rpcsmessage_8cpp_1ab34a83fffcd660b6c514cd5ebb3a03ab" compoundref="rpcsmessage_8cpp" startline="773" endline="896">smsgbuckets</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a37fca7e305fe0caa306b23fdb37f88e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShrinkDebugFile</definition>
        <argsstring>()</argsstring>
        <name>ShrinkDebugFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="254" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1328" bodyend="1348"/>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1acf52c2aa8213c7b15e26594a2264ed8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetRandBytes</definition>
        <argsstring>(unsigned char *buf, int num)</argsstring>
        <name>GetRandBytes</name>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="255" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="154" bodyend="161"/>
        <referencedby refid="class_c_addr_man_1ad9179d1c36c2ea3492e221576f340d33" compoundref="addrman_8h" startline="384" endline="392">CAddrMan::CAddrMan</referencedby>
        <referencedby refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" compoundref="key_8cpp" startline="139" endline="146">CKey::MakeNewKey</referencedby>
        <referencedby refid="class_c_key_1a3890764f7a2e5d9cdeffb3e102e4545d" compoundref="key_8cpp" startline="197" endline="209">CKey::VerifyPubKey</referencedby>
        <referencedby refid="key_8h_1a5ee69136607b1012d64a045ee44ccae2" compoundref="key_8cpp" startline="321" endline="338">ECC_Start</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="class_c_node_1a4dbfe4f6c1fd162aaa905e4bd201d536" compoundref="net_8cpp" startline="465" endline="475">CNode::PushVersion</referencedby>
        <referencedby refid="class_c_addr_d_b_1aaec90dba59cd69a2f25bc5630a1dde39" compoundref="net_8cpp" startline="2022" endline="2058">CAddrDB::Write</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="util_8h_1a27d9149d522b1fa87d84e5e9ca902aef" compoundref="util_8cpp" startline="198" endline="211">GetRand</referencedby>
        <referencedby refid="util_8h_1af3aedae75efabb170337a497457f7ecf" compoundref="util_8cpp" startline="218" endline="223">GetRandHash</referencedby>
        <referencedby refid="util_8h_1abef4e13668f53ac5404c796462aed9b4" compoundref="util_8cpp" startline="1366" endline="1383">seed_insecure_rand</referencedby>
        <referencedby refid="class_c_wallet_1ab34fe5bf771619dcbe22a65f013e5469" compoundref="wallet_8cpp" startline="479" endline="596">CWallet::EncryptWallet</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0e44e088732172da6662db2d5e37d4b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetRandInt</definition>
        <argsstring>(int nMax)</argsstring>
        <name>GetRandInt</name>
        <param>
          <type>int</type>
          <declname>nMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="256" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="213" bodyend="216"/>
        <references refid="util_8cpp_1a27d9149d522b1fa87d84e5e9ca902aef" compoundref="util_8cpp" startline="198" endline="211">GetRand</references>
        <referencedby refid="class_c_addr_man_1a9c466eca7afe5c12554da5734f89e656" compoundref="addrman_8cpp" startline="126" endline="148">CAddrMan::SelectTried</referencedby>
        <referencedby refid="class_c_addr_man_1aebf83da3addc3bcee487a87ece3f9a2b" compoundref="addrman_8cpp" startline="150" endline="202">CAddrMan::ShrinkNew</referencedby>
        <referencedby refid="class_c_addr_man_1a33ec6a4584cf4b17af821e6e35216459" compoundref="addrman_8cpp" startline="262" endline="309">CAddrMan::Good_</referencedby>
        <referencedby refid="class_c_addr_man_1a9dd6df8b1904548a86054d19d4a90724" compoundref="addrman_8cpp" startline="311" endline="366">CAddrMan::Add_</referencedby>
        <referencedby refid="class_c_addr_man_1acd799cecb73e466d1369e6e2f23d3a8d" compoundref="addrman_8cpp" startline="387" endline="429">CAddrMan::Select_</referencedby>
        <referencedby refid="class_c_addr_man_1aff86d04dc7c0e0afae3ff5998417db17" compoundref="addrman_8cpp" startline="491" endline="511">CAddrMan::GetAddr_</referencedby>
        <referencedby refid="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" compoundref="smessage_8cpp" startline="1783" endline="1882">SecureMsgSendData</referencedby>
        <referencedby refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" compoundref="stormnodeman_8cpp" startline="504" endline="534">CStormnodeMan::FindRandomNotInVec</referencedby>
        <referencedby refid="mruset__tests_8cpp_1a33fb141235815cfd5df660416b5fb137" compoundref="mruset__tests_8cpp" startline="32" endline="42">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="class_c_wallet_1a6938211ba1e8ab9de20b8c7071c444a4" compoundref="wallet_8cpp" startline="2158" endline="2287">CWallet::SelectCoinsMinConf</referencedby>
        <referencedby refid="class_c_wallet_1a3106747387ad6e066a9c44fd6db22a0d" compoundref="wallet_8cpp" startline="4096" endline="4220">CWallet::PrepareSandstormDenominate</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a27d9149d522b1fa87d84e5e9ca902aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t GetRand</definition>
        <argsstring>(uint64_t nMax)</argsstring>
        <name>GetRand</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>nMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="257" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="198" bodyend="211"/>
        <references refid="util_8cpp_1acf52c2aa8213c7b15e26594a2264ed8a" compoundref="util_8cpp" startline="154" endline="161">GetRandBytes</references>
        <referencedby refid="net_8cpp_1ab2d8883b5524ec7b80d3b9535e73a3ed" compoundref="net_8cpp" startline="1259" endline="1300">ThreadDNSAddressSeed</referencedby>
        <referencedby refid="net_8cpp_1a379b0d3521bdd62ac296f219d70c4e30" compoundref="net_8cpp" startline="1582" endline="1654">ThreadMessageHandler</referencedby>
        <referencedby refid="class_c_node_1af8d4b8c0f883afffcb62d906c31b2cdf" compoundref="net_8h" startline="544" endline="578">CNode::EndMessage</referencedby>
        <referencedby refid="util_8h_1a0e44e088732172da6662db2d5e37d4b2" compoundref="util_8cpp" startline="213" endline="216">GetRandInt</referencedby>
        <referencedby refid="class_c_wallet_1ace33dcf23623d2036a38696bc3a94553" compoundref="wallet_8cpp" startline="1262" endline="1304">CWallet::ResendWalletTransactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1af3aedae75efabb170337a497457f7ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 GetRandHash</definition>
        <argsstring>()</argsstring>
        <name>GetRandHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="258" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="218" bodyend="223"/>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="util_8cpp_1acf52c2aa8213c7b15e26594a2264ed8a" compoundref="util_8cpp" startline="154" endline="161">GetRandBytes</references>
        <referencedby refid="main_8cpp_1a03c1ac9fc43feb8f1d67e92f17cceb38" compoundref="main_8cpp" startline="548" endline="562">LimitOrphanTxSize</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="class_c_signature_cache_1ac2e63052c7b13f73fa0f6f4624e29c07" compoundref="script_8cpp" startline="2268" endline="2296">CSignatureCache::Set</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a46fac5fba8ba905b5f9acb364f5d8c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetTime</definition>
        <argsstring>()</argsstring>
        <name>GetTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="259" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1352" bodyend="1357"/>
        <referencedby refid="chain_8h_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="instantx_8h_1aa516cb499ead2691d8ab216a499db5d0" compoundref="instantx_8cpp" startline="38" endline="173">ProcessMessageInstantX</referencedby>
        <referencedby refid="instantx_8h_1a3774b6dae3dfa0a6c85e3604e742150c" compoundref="instantx_8cpp" startline="221" endline="256">CreateNewLock</referencedby>
        <referencedby refid="instantx_8h_1a5d4434bfb70f64f95aa4de9286cbae94" compoundref="instantx_8cpp" startline="302" endline="394">ProcessConsensusVote</referencedby>
        <referencedby refid="instantx_8h_1aef32a1712071881d322fdb3740c07227" compoundref="instantx_8cpp" startline="396" endline="417">CheckForConflictingLocks</referencedby>
        <referencedby refid="instantx_8h_1afede7ddd9c324103f27d52a2a3b75b1c" compoundref="instantx_8cpp" startline="434" endline="463">CleanTransactionLocksList</referencedby>
        <referencedby refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" compoundref="main_8cpp" startline="865" endline="1023">AcceptToMemoryPool</referencedby>
        <referencedby refid="main_8h_1a4d2373d0ce79227c95358116aae667f3" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</referencedby>
        <referencedby refid="class_c_merkle_tx_1a31b0765b267cab5f76b308d1fe5d9375" compoundref="main_8cpp" startline="1417" endline="1428">CMerkleTx::IsTransactionLockTimedOut</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
        <referencedby refid="miner_8cpp_1a31faece5ef0e403969b3d3debd79b352" compoundref="miner_8cpp" startline="536" endline="591">ThreadStakeMiner</referencedby>
        <referencedby refid="net_8h_1a57ffc895ab641207e0eb30fd7e00a585" compoundref="net_8cpp" startline="378" endline="443">ConnectNode</referencedby>
        <referencedby refid="class_c_node_1a4dbfe4f6c1fd162aaa905e4bd201d536" compoundref="net_8cpp" startline="465" endline="475">CNode::PushVersion</referencedby>
        <referencedby refid="class_c_node_1aefa8b81afa53b4c6635dc4c6c024211a" compoundref="net_8cpp" startline="489" endline="503">CNode::IsBanned</referencedby>
        <referencedby refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" compoundref="net_8cpp" startline="505" endline="528">CNode::Misbehaving</referencedby>
        <referencedby refid="net_8h_1aff6b7f2f213ce1e8d3aea65c41c99cb8" compoundref="net_8cpp" startline="709" endline="750">SocketSendData</referencedby>
        <referencedby refid="net_8cpp_1aa1111c12121e039bbd8eedb556e4514a" compoundref="net_8cpp" startline="754" endline="1131">ThreadSocketHandler</referencedby>
        <referencedby refid="net_8cpp_1ab2d8883b5524ec7b80d3b9535e73a3ed" compoundref="net_8cpp" startline="1259" endline="1300">ThreadDNSAddressSeed</referencedby>
        <referencedby refid="net_8cpp_1a3b4720330e61127963a43df26b80f804" compoundref="net_8cpp" startline="1339" endline="1441">ThreadOpenConnections</referencedby>
        <referencedby refid="net_8h_1aa7eea5ebcc85b5a7a0ae3716608bfffe" compoundref="net_8cpp" startline="1953" endline="1971">RelayTransaction</referencedby>
        <referencedby refid="class_c_node_1a51556705550511146245b9fb2fec09c1" compoundref="net_8h" startline="314" endline="369">CNode::CNode</referencedby>
        <referencedby refid="class_c_node_1ae0def1498409407d1612833a7d38c875" compoundref="net_8h" startline="503" endline="520">CNode::AskFor</referencedby>
        <referencedby refid="class_dark_silk_g_u_i_1a2a303132be32277f46691fe91803f766" compoundref="darksilkgui_8cpp" startline="860" endline="944">DarkSilkGUI::setNumBlocks</referencedby>
        <referencedby refid="class_overview_page_1a95da1abd608bd2412b668be43446295a" compoundref="overviewpage_8cpp" startline="396" endline="513">OverviewPage::sandStormStatus</referencedby>
        <referencedby refid="rpcdump_8cpp_1a831ddf746d4f2500ba6f6c07f63445cd" compoundref="rpcdump_8cpp" startline="345" endline="401">dumpwallet</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a733f7c70e7c18783935e6de9643c0086" compoundref="rpcwallet_8cpp" startline="1969" endline="2032">walletpassphrase</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a83d73d68f8df36be057d8dc6dad3fc28" compoundref="sandstorm_8cpp" startline="869" endline="888">CSandstormPool::CheckForCompleteQueue</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a657fcb1ca83116777fdcfed8676107ea" compoundref="sandstorm_8cpp" startline="1307" endline="1316">CSandstormPool::NewBlock</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a6ca453bd284507a2d5b26e9d4491e00c" compoundref="sandstorm_8cpp" startline="1813" endline="1867">CSandstormPool::IsCompatibleWithSession</referencedby>
        <referencedby refid="class_c_sand_storm_entry_1aa1497e8d6693f47968af94ea946ea9e6" compoundref="sandstorm_8h" startline="106" endline="122">CSandStormEntry::Add</referencedby>
        <referencedby refid="class_c_sand_storm_entry_1a903de6ae89a6755fa2e9112e52c6d161" compoundref="sandstorm_8h" startline="140" endline="143">CSandStormEntry::IsExpired</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1a2b509d89f0a6c0d858a5e28bab2e2017" compoundref="sandstorm_8h" startline="214" endline="217">CSandstormQueue::IsExpired</referencedby>
        <referencedby refid="class_sec_msg_bucket_1ae6e05a91141c7cacf593b90e8c082113" compoundref="smessage_8cpp" startline="165" endline="185">SecMsgBucket::hashBucket</referencedby>
        <referencedby refid="smessage_8cpp_1a67cfe472b1e783b85b09ebfeb43afbab" compoundref="smessage_8cpp" startline="579" endline="685">ThreadSecureMsg</referencedby>
        <referencedby refid="smessage_8h_1a925f4769284eaf73a3beda3c2b15e91d" compoundref="smessage_8cpp" startline="768" endline="909">SecureMsgBuildBucketSet</referencedby>
        <referencedby refid="smessage_8h_1a10fcf201b1c7066a376692b50988cdbf" compoundref="smessage_8cpp" startline="1292" endline="1781">SecureMsgReceiveData</referencedby>
        <referencedby refid="smessage_8h_1abb934a23a076a4af443e2fb0610d7833" compoundref="smessage_8cpp" startline="1783" endline="1882">SecureMsgSendData</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1adf0fa2a06615363dc3ea6360be0939ec" compoundref="smessage_8cpp" startline="2301" endline="2444">SecureMsgWalletUnlocked</referencedby>
        <referencedby refid="smessage_8h_1a31bf2f77c776bbf1fb39bbe79b6e9f5f" compoundref="smessage_8cpp" startline="2482" endline="2599">SecureMsgScanMessage</referencedby>
        <referencedby refid="smessage_8h_1a76ffa50f445c2a6089504aead1239e9f" compoundref="smessage_8cpp" startline="2796" endline="2909">SecureMsgReceive</referencedby>
        <referencedby refid="smessage_8h_1abdde7d50a54a2f54a3aea64c47af535a" compoundref="smessage_8cpp" startline="2911" endline="2975">SecureMsgStoreUnscanned</referencedby>
        <referencedby refid="smessage_8h_1a1d8fd52e96428c7fe6561d3857363fc9" compoundref="smessage_8cpp" startline="2978" endline="3092">SecureMsgStore</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1acbe2815144396344354ffa3022300278" compoundref="smessage_8cpp" startline="3533" endline="3699">SecureMsgSend</referencedby>
        <referencedby refid="spork_8h_1a3305663176e21e81c80dc951a7f8ea5e" compoundref="spork_8cpp" startline="82" endline="102">IsSporkActive</referencedby>
        <referencedby refid="class_c_spork_manager_1afb7e15fe29bd548939657a20ca5feafb" compoundref="spork_8cpp" startline="217" endline="233">CSporkManager::UpdateSpork</referencedby>
        <referencedby refid="class_c_budget_manager_1a9c62c8f18b6f101465415952349ce203" compoundref="stormnode-budget_8cpp" startline="799" endline="902">CBudgetManager::NewBlock</referencedby>
        <referencedby refid="class_c_budget_manager_1a643d564d0232ed6f9e6ca025b8377c13" compoundref="stormnode-budget_8cpp" startline="1231" endline="1256">CBudgetManager::UpdateProposal</referencedby>
        <referencedby refid="class_c_budget_manager_1a4ac3207b673d7163a7d03005e35d6f8b" compoundref="stormnode-budget_8cpp" startline="1258" endline="1283">CBudgetManager::UpdateFinalizedBudget</referencedby>
        <referencedby refid="class_c_budget_proposal_1ad153df04aa541d0c06eb068d79d0cf96" compoundref="stormnode-budget_8cpp" startline="1422" endline="1449">CBudgetProposal::AddOrUpdateVote</referencedby>
        <referencedby refid="class_c_finalized_budget_1a63fadb286f5d0f9f735bc33deba56b02" compoundref="stormnode-budget_8cpp" startline="1670" endline="1696">CFinalizedBudget::AddOrUpdateVote</referencedby>
        <referencedby refid="class_c_budget_proposal_1a0f4231aa216c99a6a3ad2b6bf31d8bfe" compoundref="stormnode-budget_8h" startline="423" endline="430">CBudgetProposal::IsEstablished</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</referencedby>
        <referencedby refid="class_c_stormnode_sync_1a14d6ee22d6cd11c4045b9fb8c7891551" compoundref="stormnode-sync_8cpp" startline="59" endline="80">CStormnodeSync::Reset</referencedby>
        <referencedby refid="class_c_stormnode_sync_1ad9e9ad7392c3fa1ec0af4b178b3c62c0" compoundref="stormnode-sync_8cpp" startline="82" endline="93">CStormnodeSync::AddedStormnodeList</referencedby>
        <referencedby refid="class_c_stormnode_sync_1a686a36163137e9079365e7fd0ede826c" compoundref="stormnode-sync_8cpp" startline="95" endline="106">CStormnodeSync::AddedStormnodeWinner</referencedby>
        <referencedby refid="class_c_stormnode_sync_1af200f11664c64e5256ad77bd0465b634" compoundref="stormnode-sync_8cpp" startline="108" endline="120">CStormnodeSync::AddedBudgetItem</referencedby>
        <referencedby refid="class_c_stormnode_sync_1a3c70130712267c3c100a69d35b97acf8" compoundref="stormnode-sync_8cpp" startline="132" endline="157">CStormnodeSync::GetNextAsset</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adaaeb592c3432c8a459560523c7be207" compoundref="stormnode-sync_8cpp" startline="225" endline="405">CStormnodeSync::Process</referencedby>
        <referencedby refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" compoundref="stormnode_8cpp" startline="178" endline="226">CStormnode::Check</referencedby>
        <referencedby refid="class_c_stormnode_man_1a918a4ccb668808449809a77adc036301" compoundref="stormnodeman_8cpp" startline="229" endline="244">CStormnodeMan::AskForSN</referencedby>
        <referencedby refid="class_c_stormnode_man_1a6d8c3a832ea7d6f4780a59e2ae0441b8" compoundref="stormnodeman_8cpp" startline="255" endline="350">CStormnodeMan::CheckAndRemove</referencedby>
        <referencedby refid="class_c_stormnode_man_1a3f8f9f86f01df701533b544903b55113" compoundref="stormnodeman_8cpp" startline="378" endline="398">CStormnodeMan::SsegUpdate</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
        <referencedby refid="timedata_8h_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</referencedby>
        <referencedby refid="util_8h_1a786af12a87491f8dc24351d93b9833b6" compoundref="util_8cpp" startline="171" endline="196">RandAddSeedPerfmon</referencedby>
        <referencedby refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" compoundref="util_8cpp" startline="280" endline="318">LogPrintStr</referencedby>
        <referencedby refid="class_c_wallet_1a061fe7f54f80ec40f856b3e6365c2f4a" compoundref="wallet_8cpp" startline="77" endline="101">CWallet::GenerateNewKey</referencedby>
        <referencedby refid="class_c_wallet_1ace33dcf23623d2036a38696bc3a94553" compoundref="wallet_8cpp" startline="1262" endline="1304">CWallet::ResendWalletTransactions</referencedby>
        <referencedby refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" compoundref="wallet_8cpp" startline="3699" endline="3730">CWallet::GetStakeWeight</referencedby>
        <referencedby refid="class_c_wallet_1a2555a9442e58b3c5593fef21f1b39d2d" compoundref="wallet_8cpp" startline="4448" endline="4457">CWallet::GetOldestKeyPoolTime</referencedby>
        <referencedby refid="class_c_key_pool_1ab1f33489faff7a7e1edbd61a5a18f604" compoundref="wallet_8h" startline="75" endline="78">CKeyPool::CKeyPool</referencedby>
        <referencedby refid="class_c_wallet_key_1aa2603825b543b1d5153f31482139a6b2" compoundref="wallet_8h" startline="1121" endline="1125">CWalletKey::CWalletKey</referencedby>
        <referencedby refid="walletdb_8cpp_1a571e13707ba159c7c047875764ae5e2b" compoundref="walletdb_8cpp" startline="732" endline="792">ThreadFlushWalletDB</referencedby>
        <referencedby refid="class_c_wallet_d_b_1a3ebeb12f37d9c66512e2bc2903a6854a" compoundref="walletdb_8cpp" startline="837" endline="913">CWalletDB::Recover</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a79d4c36b511d6690ab0bbde0e0da9251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetMockTime</definition>
        <argsstring>(int64_t nMockTimeIn)</argsstring>
        <name>SetMockTime</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nMockTimeIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="260" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1359" bodyend="1362"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac3e3098552063f228d9deac38a8b9848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FormatFullVersion</definition>
        <argsstring>()</argsstring>
        <name>FormatFullVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="261" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1393" bodyend="1396"/>
        <references refid="version_8h_1a1a5e163cdc615d789b2db896d591230b">CLIENT_BUILD</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_client_model_1a1c93d11fd03ef9aabf9b694e73698710" compoundref="clientmodel_8cpp" startline="238" endline="241">ClientModel::formatFullVersion</referencedby>
        <referencedby refid="class_g_u_i_util_1_1_help_message_box_1af8c3ad315224552b1699ac34c7ebd839" compoundref="guiutil_8cpp" startline="425" endline="445">GUIUtil::HelpMessageBox::HelpMessageBox</referencedby>
        <referencedby refid="rpcmisc_8cpp_1a70335b93783d51e48d276a1e08bd721a" compoundref="rpcmisc_8cpp" startline="34" endline="81">getinfo</referencedby>
        <referencedby refid="rpcprotocol_8cpp_1af2d91e7026366657a021311ecc188262" compoundref="rpcprotocol_8cpp" startline="39" endline="54">HTTPPost</referencedby>
        <referencedby refid="rpcprotocol_8cpp_1afa39f57077df4d88ad60373f58d793e1" compoundref="rpcprotocol_8cpp" startline="61" endline="103">HTTPReply</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7e6809cdbfc7f83b46f83caea740894d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FormatSubVersion</definition>
        <argsstring>(const std::string &amp;name, int nClientVersion, const std::vector&lt; std::string &gt; &amp;comments)</argsstring>
        <name>FormatSubVersion</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nClientVersion</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>comments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="262" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1406" bodyend="1415"/>
        <references refid="util_8cpp_1a184f6760badcf145f3430cdf6cc5dfa2" compoundref="util_8cpp" startline="1385" endline="1391">FormatVersion</references>
        <referencedby refid="class_c_alert_1a0a7fab6a971781904afb3e4a0ee29e12" compoundref="alert_8cpp" startline="124" endline="127">CAlert::AppliesToMe</referencedby>
        <referencedby refid="class_c_node_1a4dbfe4f6c1fd162aaa905e4bd201d536" compoundref="net_8cpp" startline="465" endline="475">CNode::PushVersion</referencedby>
        <referencedby refid="rpcnet_8cpp_1a3a10a507386b9bbcc48ebd3004bfe58a" compoundref="rpcnet_8cpp" startline="338" endline="398">getnetworkinfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1adf94c00a5ac719c92a2f1bb2f8b2167f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void runCommand</definition>
        <argsstring>(std::string strCommand)</argsstring>
        <name>runCommand</name>
        <param>
          <type>std::string</type>
          <declname>strCommand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="263" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1434" bodyend="1439"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <referencedby refid="class_c_alert_1af3e6b2e5d3584f58c5d7be9dbd72b4cc" compoundref="alert_8cpp" startline="174" endline="263">CAlert::ProcessAlert</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
        <referencedby refid="class_c_wallet_1adf34c789fd6eab1eeed22ef16837f558" compoundref="wallet_8cpp" startline="644" endline="761">CWallet::AddToWallet</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1acb8d6b822bc1bfa609bf43bbac1a0d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TruncateFile</definition>
        <argsstring>(FILE *file, unsigned int length)</argsstring>
        <name>TruncateFile</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="264" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1475" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a880a215d9e931432b095084c756a49bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ParseInt32</definition>
        <argsstring>(const std::string &amp;str, int32_t *out)</argsstring>
        <name>ParseInt32</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert string to signed 32-bit integer with strict parse error feedback. <simplesect kind="return"><para>true if the entire string could be parsed as valid integer, false if not the entire string could be parsed or when overflow or underflow occurred. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="276" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="993" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab754c84a5a52f6853642e86447ce460e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FormatParagraph</definition>
        <argsstring>(const std::string in, size_t width=79, size_t indent=0)</argsstring>
        <name>FormatParagraph</name>
        <param>
          <type>const std::string</type>
          <declname>in</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
          <defval>79</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>indent</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Format a paragraph of text to a fixed width, adding spaces for indentation to any added line. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="283" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1007" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab7a07cad3bcdf95935f4f6b5c039c546" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string i64tostr</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>i64tostr</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="287" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a565b3ea015b133d01dc52b4ec6e45f07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string itostr</definition>
        <argsstring>(int n)</argsstring>
        <name>itostr</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="292" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="292" bodyend="295"/>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
        <referencedby refid="rpcwallet_8cpp_1afe8615fcf2c8e5319166c2fa8c638e08" compoundref="rpcwallet_8cpp" startline="1930" endline="1959">keypoolrefill</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a22916d155600c742c4efad727462588e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t atoi64</definition>
        <argsstring>(const char *psz)</argsstring>
        <name>atoi64</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="297" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="297" bodyend="304"/>
        <referencedby refid="util_8h_1a72faa2422b590d61f0d365e8f8877e57" compoundref="util_8cpp" startline="368" endline="406">ParseMoney</referencedby>
        <referencedby refid="util_8h_1a1bade4f0fca4498b4911abdbe4227dc4" compoundref="util_8cpp" startline="543" endline="548">GetArg</referencedby>
        <referencedby refid="class_c_wallet_tx_1a94e65d0105f2a75a627e374b0bbefe06" compoundref="wallet_8h" startline="636" endline="692">CWalletTx::SerializationOp</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aba1c6f08c135078a7af3385ed3e91ef3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t atoi64</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>atoi64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="306" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="306" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int atoi</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>atoi</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="315" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="315" bodyend="318"/>
        <referencedby refid="class_c_active_stormnode_1af66060dcef7137a1db78ad72b396d741" compoundref="activestormnode_8cpp" startline="365" endline="399">CActiveStormnode::SelectCoinsStormnode</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" compoundref="db__test_8cc" startline="378" endline="384">leveldb::DBTest::NumTableFilesAtLevel</referencedby>
        <referencedby refid="namespaceleveldb_1a175371052945d08563d145130faec721" compoundref="table__test_8cc" startline="736" endline="758">leveldb::TEST</referencedby>
        <referencedby refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" compoundref="testharness_8cc" startline="67" endline="74">leveldb::test::RandomSeed</referencedby>
        <referencedby refid="class_c_node_1af8d4b8c0f883afffcb62d906c31b2cdf" compoundref="net_8h" startline="544" endline="578">CNode::EndMessage</referencedby>
        <referencedby refid="rpcprotocol_8cpp_1add578b3fb095706a7a78d265fa97d8d0" compoundref="rpcprotocol_8cpp" startline="105" endline="138">ReadHTTPRequestLine</referencedby>
        <referencedby refid="rpcprotocol_8h_1af615c564cc7794d255e5adfacade4066" compoundref="rpcprotocol_8cpp" startline="140" endline="153">ReadHTTPStatus</referencedby>
        <referencedby refid="rpcprotocol_8cpp_1adfa1ef30dd1e00dcbecff15e1161e369" compoundref="rpcprotocol_8cpp" startline="155" endline="178">ReadHTTPHeaders</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="utilstrencodings_8h_1aa5ce96ec36f4413f820cec9c1831c070" compoundref="util_8h" startline="315" endline="318">atoi</referencedby>
        <referencedby refid="util_8h_1a64d956f1dda7f9a80ab5d594532b906d" compoundref="util_8cpp" startline="550" endline="559">GetBoolArg</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ae3939088d6c4178bb1f19f693a005275" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int roundint</definition>
        <argsstring>(double d)</argsstring>
        <name>roundint</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="320" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a27346c9c6df4174d2fa64b798b98eff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t roundint64</definition>
        <argsstring>(double d)</argsstring>
        <name>roundint64</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="325" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="325" bodyend="328"/>
        <referencedby refid="rpcserver_8h_1adc8974c0b60608b5af5ca7f04c484bef" compoundref="rpcserver_8cpp" startline="87" endline="96">AmountFromValue</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a351cbd451bee96e6badbaa284ba3c614" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t abs64</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>abs64</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="330" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="330" bodyend="333"/>
        <referencedby refid="timedata_8h_1ad8af089fc8835e11c7d77f6b473fccae" compoundref="timedata_8cpp" startline="40" endline="111">AddTimeData</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a8bd08fb413d92858692abb1ab182014c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leftTrim</definition>
        <argsstring>(std::string src, char chr)</argsstring>
        <name>leftTrim</name>
        <param>
          <type>std::string</type>
          <declname>src</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="335" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="335" bodyend="343"/>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ace13a819ca4e98c22847d26b3b357e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string HexStr</definition>
        <argsstring>(const T itbegin, const T itend, bool fSpaces=false)</argsstring>
        <name>HexStr</name>
        <param>
          <type>const T</type>
          <declname>itbegin</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>itend</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fSpaces</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="346" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="346" bodyend="362"/>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" compoundref="transaction_8h" startline="147" endline="160">CTxIn::ToString</referencedby>
        <referencedby refid="class_wallet_model_1a497418d4a8566b881bab45dec7ad8fd8" compoundref="walletmodel_8cpp" startline="213" endline="488">WalletModel::sendCoins</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" compoundref="rpcmining_8cpp" startline="150" endline="234">checkkernel</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1acb6efc0d76394e3858fe7451148069c2" compoundref="rpcrawtransaction_8cpp" startline="27" endline="51">ScriptPubKeyToJSON</referencedby>
        <referencedby refid="rpcwallet_8cpp_1aba644e892d0fe242879f44311747ec76" compoundref="rpcrawtransaction_8cpp" startline="53" endline="109">TxToJSON</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1a12e1b8a05d99d1544e5343c2282cc55a" compoundref="rpcrawtransaction_8cpp" startline="111" endline="144">getrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1a7924d2aa3d68d890b82773445e0d949e" compoundref="rpcrawtransaction_8cpp" startline="236" endline="299">createrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1aa0d151e35c0ad5ec82df451a833aeadb" compoundref="rpcrawtransaction_8cpp" startline="349" endline="555">signrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1ae119520f4c7a75fcaf31fbfaf8dff482" compoundref="rpcrawtransaction_8cpp" startline="605" endline="670">searchrawtransactions</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a10f145bcadd06025abb3b065e2fa7a84" compoundref="rpcwallet_8cpp" startline="144" endline="185">createmultisig</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a3f3bb4d519074126a20dd609a6886a72" compoundref="rpcwallet_8cpp" startline="187" endline="211">getnewpubkey</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a99fe5f539a487e6da84f74ac47ae5ba6" compoundref="rpcwallet_8cpp" startline="2262" endline="2282">makekeypair</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a122c17b0d58ddd7ba5a7471d0089c1b9" compoundref="rpcwallet_8cpp" startline="2331" endline="2381">liststealthaddresses</referencedby>
        <referencedby refid="script_8h_1ab545c0a3638ba9151370e91fac78f48d" compoundref="script_8h" startline="354" endline="360">ValueString</referencedby>
        <referencedby refid="util_8h_1a7efe75f50ba1dbd0183952dd42146a92" compoundref="util_8h" startline="365" endline="368">HexStr</referencedby>
        <referencedby refid="smessage_8h_1a430258e823bdead36f823a51fd6a4510" compoundref="smessage_8cpp" startline="2601" endline="2617">SecureMsgGetLocalKey</referencedby>
        <referencedby refid="smessage_8h_1a1a9885d0f94a7d5322eafb31bcf2f90a" compoundref="smessage_8cpp" startline="3276" endline="3531">SecureMsgEncrypt</referencedby>
        <referencedby refid="smessage_8h_1a2edb582fcb7f69b543174479231647be" compoundref="smessage_8cpp" startline="3702" endline="3946">SecureMsgDecrypt</referencedby>
        <referencedby refid="class_c_wallet_1afce932bf3aa678046ab75eccff004858" compoundref="wallet_8cpp" startline="3385" endline="3468">CWallet::SendStealthMoneyToDestination</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7efe75f50ba1dbd0183952dd42146a92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string HexStr</definition>
        <argsstring>(const T &amp;vch, bool fSpaces=false)</argsstring>
        <name>HexStr</name>
        <param>
          <type>const T &amp;</type>
          <declname>vch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fSpaces</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="365" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="365" bodyend="368"/>
        <references refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" compoundref="util_8h" startline="346" endline="362">HexStr</references>
      </memberdef>
      <memberdef kind="function" id="util_8h_1acd4d9988b9bb3f31fddf72a34b2bc37f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetPerformanceCounter</definition>
        <argsstring>()</argsstring>
        <name>GetPerformanceCounter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="370" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="370" bodyend="381"/>
        <referencedby refid="util_8h_1ab699fbdf803610a4e2060fd87787f7e0" compoundref="util_8cpp" startline="163" endline="169">RandAddSeed</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetTimeMillis</definition>
        <argsstring>()</argsstring>
        <name>GetTimeMillis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="383" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="383" bodyend="387"/>
        <referencedby refid="class_c_d_b_env_1a09c5850b88919553a8db416ce288ff1a" compoundref="db_8cpp" startline="428" endline="470">CDBEnv::Flush</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="main_8cpp_1afbdbbb5a1b376748e5460cbcf644a9af" compoundref="main_8cpp" startline="2219" endline="2279">LoadExternalBlockFile</referencedby>
        <referencedby refid="net_8cpp_1ab8b5323f5ef61499582a5a6e53b49b6e" compoundref="net_8cpp" startline="1310" endline="1319">DumpAddresses</referencedby>
        <referencedby refid="rpcnet_8cpp_1a77252ab3b44e1f219613da333c79f55f" compoundref="rpcnet_8cpp" startline="303" endline="316">getnettotals</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a9a220f583b730dcf9f651d340da4ee52" compoundref="sandstorm_8cpp" startline="385" endline="410">CSandstormPool::SetNull</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a36dae9a698814612d6658c86eeea65b5" compoundref="sandstorm_8cpp" startline="495" endline="557">CSandstormPool::Check</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ac771fe0088165502c2b804b415b32750" compoundref="sandstorm_8cpp" startline="787" endline="864">CSandstormPool::CheckTimeout</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a6ca453bd284507a2d5b26e9d4491e00c" compoundref="sandstorm_8cpp" startline="1813" endline="1867">CSandstormPool::IsCompatibleWithSession</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a4e48e06e3b981a9ac607a0df77428d42" compoundref="sandstorm_8h" startline="427" endline="442">CSandstormPool::UpdateState</referencedby>
        <referencedby refid="smessage_8h_1a440b38f2f513f80283993a2d81e908b5" compoundref="smessage_8cpp" startline="2073" endline="2121">ScanChainForPublicKeys</referencedby>
        <referencedby refid="smessage_8h_1ae6a19a8d011fefc72c9cab3d0df014bd" compoundref="smessage_8cpp" startline="2153" endline="2298">SecureMsgScanBuckets</referencedby>
        <referencedby refid="smessage_8h_1ac434a0295e161eb2ebdad951f4049dc6" compoundref="smessage_8cpp" startline="3168" endline="3274">SecureMsgSetHash</referencedby>
        <referencedby refid="class_c_budget_d_b_1a7c9bd15eefe04f87e822cc1bc0887b76" compoundref="stormnode-budget_8cpp" startline="210" endline="243">CBudgetDB::Write</referencedby>
        <referencedby refid="class_c_budget_d_b_1aecdde2af475070d9fafdcacf93f2e4f2" compoundref="stormnode-budget_8cpp" startline="245" endline="333">CBudgetDB::Read</referencedby>
        <referencedby refid="stormnode-budget_8h_1a277f8d83f6cfcfbe4ee3f622d38f8790" compoundref="stormnode-budget_8cpp" startline="335" endline="362">DumpBudgets</referencedby>
        <referencedby refid="class_c_stormnode_payment_d_b_1a6dc05426079d7bcf41f2587899e422fd" compoundref="stormnode-payments_8cpp" startline="34" endline="64">CStormnodePaymentDB::Write</referencedby>
        <referencedby refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" compoundref="stormnode-payments_8cpp" startline="66" endline="154">CStormnodePaymentDB::Read</referencedby>
        <referencedby refid="stormnode-payments_8h_1ae992438141f991b3ca132d11da230d1a" compoundref="stormnode-payments_8cpp" startline="156" endline="183">DumpStormnodePayments</referencedby>
        <referencedby refid="class_c_stormnode_d_b_1af60b25c3f72317d363fd6584045c6f5f" compoundref="stormnodeman_8cpp" startline="57" endline="89">CStormnodeDB::Write</referencedby>
        <referencedby refid="class_c_stormnode_d_b_1a574f76256d8032a4c4e437d800d3795b" compoundref="stormnodeman_8cpp" startline="91" endline="176">CStormnodeDB::Read</referencedby>
        <referencedby refid="stormnodeman_8h_1ab4bfbf67ff3a5463457d04b68610e18b" compoundref="stormnodeman_8cpp" startline="178" endline="205">DumpStormnodes</referencedby>
        <referencedby refid="class_c_wallet_1a4abcec3066e7c462f4564c159fc15031" compoundref="wallet_8cpp" startline="285" endline="333">CWallet::ChangeWalletPassphrase</referencedby>
        <referencedby refid="class_c_wallet_1ab34fe5bf771619dcbe22a65f013e5469" compoundref="wallet_8cpp" startline="479" endline="596">CWallet::EncryptWallet</referencedby>
        <referencedby refid="walletdb_8cpp_1a571e13707ba159c7c047875764ae5e2b" compoundref="walletdb_8cpp" startline="732" endline="792">ThreadFlushWalletDB</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0c5a06b50cd805b1923552114494c029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetTimeMicros</definition>
        <argsstring>()</argsstring>
        <name>GetTimeMicros</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="389" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="389" bodyend="393"/>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="class_c_node_1aaa77188d9df85b80e3f8a30292acf6a9" compoundref="net_8cpp" startline="532" endline="568">CNode::copyStats</referencedby>
        <referencedby refid="class_c_node_1a84a10eb3aec7fdddafeb354527b50b75" compoundref="net_8cpp" startline="572" endline="605">CNode::ReceiveMsgBytes</referencedby>
        <referencedby refid="net_8cpp_1aa1111c12121e039bbd8eedb556e4514a" compoundref="net_8cpp" startline="754" endline="1131">ThreadSocketHandler</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a749bc6776c8ec72d7c5e4dea56aee415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DateTimeStrFormat</definition>
        <argsstring>(const char *pszFormat, int64_t nTime)</argsstring>
        <name>DateTimeStrFormat</name>
        <param>
          <type>const char *</type>
          <declname>pszFormat</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="395" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1465" bodyend="1473"/>
        <referencedby refid="chain_8h_1ae282007adebd031cdbfecdd0ad1feeb8" compoundref="chain_8cpp" startline="492" endline="512">InvalidChainFound</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" compoundref="kernel_8cpp" startline="111" endline="189">ComputeNextStakeModifier</referencedby>
        <referencedby refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</referencedby>
        <referencedby refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
        <referencedby refid="class_c_node_1ae0def1498409407d1612833a7d38c875" compoundref="net_8h" startline="503" endline="520">CNode::AskFor</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a18e0cd566c85cd589c2d687fa06d77e7" compoundref="rpcblockchain_8cpp" startline="276" endline="293">getcheckpoint</referencedby>
        <referencedby refid="util_8h_1a5d620750c7cb9c95ce815e3dd036e134" compoundref="util_8h" startline="398" endline="401">DateTimeStrFormat</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
        <referencedby refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" compoundref="util_8cpp" startline="280" endline="318">LogPrintStr</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a5d620750c7cb9c95ce815e3dd036e134" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DateTimeStrFormat</definition>
        <argsstring>(int64_t nTime)</argsstring>
        <name>DateTimeStrFormat</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="398" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="398" bodyend="401"/>
        <references refid="util_8h_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a952a05da17d51c4107d353d4d1dafb4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void skipspaces</definition>
        <argsstring>(T &amp;it)</argsstring>
        <name>skipspaces</name>
        <param>
          <type>T &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="405" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="405" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac0165e18ce3be89a2e0731e27d54b478" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsSwitchChar</definition>
        <argsstring>(char c)</argsstring>
        <name>IsSwitchChar</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="411" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="411" bodyend="418"/>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="rpcclient_8h_1a4ee23259648a971c9c05aeff8b545a6d" compoundref="rpcclient_8cpp" startline="232" endline="295">CommandLineRPC</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a24f685720bf40370e5bd2a192ad50cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GetArg</definition>
        <argsstring>(const std::string &amp;strArg, const std::string &amp;strDefault)</argsstring>
        <name>GetArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>strDefault</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return string argument or default value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to get (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default</parametername>
</parameternamelist>
<parameterdescription>
<para>(e.g. &quot;1&quot;) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>command-line argument or default value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="427" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="536" bodyend="541"/>
        <references refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" compoundref="util_8cpp" startline="94">mapArgs</references>
        <referencedby refid="class_c_alert_1af3e6b2e5d3584f58c5d7be9dbd72b4cc" compoundref="alert_8cpp" startline="174" endline="263">CAlert::ProcessAlert</referencedby>
        <referencedby refid="class_c_d_b_env_1a1a81be1585305e5cedd2bccd6c7570c3" compoundref="db_8cpp" startline="63" endline="114">CDBEnv::Open</referencedby>
        <referencedby refid="class_c_d_b_1ab4a0447a8d19b4871b9fcc40edee9480" compoundref="db_8cpp" startline="288" endline="299">CDB::Flush</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" compoundref="main_8cpp" startline="865" endline="1023">AcceptToMemoryPool</referencedby>
        <referencedby refid="main_8h_1a4d2373d0ce79227c95358116aae667f3" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</referencedby>
        <referencedby refid="main_8h_1a4b04650c6aa3e5b02921ba992658d647" compoundref="main_8cpp" startline="1741" endline="1764">Misbehaving</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="net_8h_1af6d341a24d761a509fca026458cf2f72" compoundref="net_8cpp" startline="99" endline="102">GetListenPort</referencedby>
        <referencedby refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" compoundref="net_8cpp" startline="505" endline="528">CNode::Misbehaving</referencedby>
        <referencedby refid="net_8cpp_1aa1111c12121e039bbd8eedb556e4514a" compoundref="net_8cpp" startline="754" endline="1131">ThreadSocketHandler</referencedby>
        <referencedby refid="net_8h_1a9396d8054e8f74959e9391871aaddde0" compoundref="net_8cpp" startline="1858" endline="1899">StartNode</referencedby>
        <referencedby refid="net_8h_1a7b020b8dc4437a88cf92570b82c55f25" compoundref="net_8h" startline="37" endline="37">ReceiveFloodSize</referencedby>
        <referencedby refid="net_8h_1a13f289d6233bd32b78a38793f76bdccb" compoundref="net_8h" startline="38" endline="38">SendBufferSize</referencedby>
        <referencedby refid="darksilk_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilk_8cpp" startline="128" endline="350">main</referencedby>
        <referencedby refid="class_options_model_1a56d6c626e3315792c31f44754b2c8d73" compoundref="optionsmodel_8cpp" startline="206" endline="313">OptionsModel::data</referencedby>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="rpcwallet_8cpp_1afe8615fcf2c8e5319166c2fa8c638e08" compoundref="rpcwallet_8cpp" startline="1930" endline="1959">keypoolrefill</referencedby>
        <referencedby refid="class_c_signature_cache_1ac2e63052c7b13f73fa0f6f4624e29c07" compoundref="script_8cpp" startline="2268" endline="2296">CSignatureCache::Set</referencedby>
        <referencedby refid="getarg__tests_8cpp_1afd6c5281773add42ad794d8a63b528bf" compoundref="getarg__tests_8cpp" startline="77" endline="99">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
        <referencedby refid="util_8h_1a7d86fadf98dfaba55f80b9be0ab0f978" compoundref="util_8cpp" startline="1148" endline="1153">GetConfigFile</referencedby>
        <referencedby refid="util_8h_1a424ea7e15366f453189c6b977f14b420" compoundref="util_8cpp" startline="1155" endline="1160">GetStormnodeConfigFile</referencedby>
        <referencedby refid="util_8h_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" compoundref="util_8cpp" startline="1245" endline="1250">GetPidFile</referencedby>
        <referencedby refid="class_c_wallet_1adf34c789fd6eab1eeed22ef16837f558" compoundref="wallet_8cpp" startline="644" endline="761">CWallet::AddToWallet</referencedby>
        <referencedby refid="class_c_wallet_1a7353ba1e79fc4167fbfbe79b41698fa7" compoundref="wallet_8cpp" startline="4307" endline="4329">CWallet::NewKeyPool</referencedby>
        <referencedby refid="class_c_wallet_1aeeeca131336b2ec20cede9a2fccc203a" compoundref="wallet_8cpp" startline="4331" endline="4363">CWallet::TopUpKeyPool</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a1bade4f0fca4498b4911abdbe4227dc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetArg</definition>
        <argsstring>(const std::string &amp;strArg, int64_t nDefault)</argsstring>
        <name>GetArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nDefault</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return integer argument or default value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to get (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default</parametername>
</parameternamelist>
<parameterdescription>
<para>(e.g. 1) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>command-line argument (0 if invalid number) or default value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="436" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="543" bodyend="548"/>
        <references refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" compoundref="util_8cpp" startline="94">mapArgs</references>
        <references refid="util_8h_1a22916d155600c742c4efad727462588e" compoundref="util_8h" startline="297" endline="304">atoi64</references>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a64d956f1dda7f9a80ab5d594532b906d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetBoolArg</definition>
        <argsstring>(const std::string &amp;strArg, bool fDefault)</argsstring>
        <name>GetBoolArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fDefault</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return boolean argument or default value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to get (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default</parametername>
</parameternamelist>
<parameterdescription>
<para>(true or false) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>command-line argument or default value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="445" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="550" bodyend="559"/>
        <references refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" compoundref="util_8cpp" startline="94">mapArgs</references>
        <references refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" compoundref="util_8h" startline="315" endline="318">atoi</references>
        <referencedby refid="class_c_active_stormnode_1af66060dcef7137a1db78ad72b396d741" compoundref="activestormnode_8cpp" startline="365" endline="399">CActiveStormnode::SelectCoinsStormnode</referencedby>
        <referencedby refid="chainparams_8h_1a8b1e95814ad8f7fbcd9dead5cae3783d" compoundref="chainparams_8cpp" startline="204" endline="214">SelectParamsFromCommandLine</referencedby>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="class_c_d_b_env_1a1a81be1585305e5cedd2bccd6c7570c3" compoundref="db_8cpp" startline="63" endline="114">CDBEnv::Open</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="main_8cpp_1a70b1d1b79f1c760e65c960713b87b732" compoundref="main_8cpp" startline="2327" endline="2368">GetWarnings</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="net_8cpp_1ab2d8883b5524ec7b80d3b9535e73a3ed" compoundref="net_8cpp" startline="1259" endline="1300">ThreadDNSAddressSeed</referencedby>
        <referencedby refid="net_8h_1a9396d8054e8f74959e9391871aaddde0" compoundref="net_8cpp" startline="1858" endline="1899">StartNode</referencedby>
        <referencedby refid="darksilk_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="darksilk_8cpp" startline="128" endline="350">main</referencedby>
        <referencedby refid="class_dark_silk_g_u_i_1a94e64087cc435432dade5c24f3d25650" compoundref="darksilkgui_8cpp" startline="83" endline="277">DarkSilkGUI::DarkSilkGUI</referencedby>
        <referencedby refid="class_options_model_1a56d6c626e3315792c31f44754b2c8d73" compoundref="optionsmodel_8cpp" startline="206" endline="313">OptionsModel::data</referencedby>
        <referencedby refid="class_overview_page_1a18c1a29cab6b745b25e701b20f234932" compoundref="overviewpage_8cpp" startline="101" endline="172">OverviewPage::OverviewPage</referencedby>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
        <referencedby refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" compoundref="rpcmining_8cpp" startline="114" endline="148">getstakinginfo</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="class_c_r_p_c_table_1aebba8d5a8f62089d1aa63278dbaf30a2" compoundref="rpcserver_8cpp" startline="825" endline="870">CRPCTable::execute</referencedby>
        <referencedby refid="getarg__tests_8cpp_1ac078da6d58911b4bedb51cdecb08cedd" compoundref="getarg__tests_8cpp" startline="25" endline="75">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="walletdb_8cpp_1a571e13707ba159c7c047875764ae5e2b" compoundref="walletdb_8cpp" startline="732" endline="792">ThreadFlushWalletDB</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a9d94ca9f7c1496626992d1873e3f69df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SoftSetArg</definition>
        <argsstring>(const std::string &amp;strArg, const std::string &amp;strValue)</argsstring>
        <name>SoftSetArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>strValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an argument if it doesn&apos;t already have a value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to set (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Value (e.g. &quot;1&quot;) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if argument gets set, false if it already had a value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="454" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="561" bodyend="567"/>
        <references refid="util_8cpp_1a0502b74b88db99500ee21dcb446311e5" compoundref="util_8cpp" startline="94">mapArgs</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_options_model_1a0e02c341067bff7be262fede017fbea0" compoundref="optionsmodel_8cpp" startline="108" endline="199">OptionsModel::Init</referencedby>
        <referencedby refid="util_8h_1acb3060cad083d342898b6055e43692ae" compoundref="util_8cpp" startline="569" endline="575">SoftSetBoolArg</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1acb3060cad083d342898b6055e43692ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SoftSetBoolArg</definition>
        <argsstring>(const std::string &amp;strArg, bool fValue)</argsstring>
        <name>SoftSetBoolArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a boolean argument if it doesn&apos;t already have a value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to set (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Value (e.g. false) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if argument gets set, false if it already had a value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="463" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="569" bodyend="575"/>
        <references refid="util_8cpp_1a9d94ca9f7c1496626992d1873e3f69df" compoundref="util_8cpp" startline="561" endline="567">SoftSetArg</references>
        <referencedby refid="darksilkd_8cpp_1ac59316b767e6984e1285f0531275286b" compoundref="darksilkd_8cpp" startline="34" endline="140">AppInit</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_options_model_1a0e02c341067bff7be262fede017fbea0" compoundref="optionsmodel_8cpp" startline="108" endline="199">OptionsModel::Init</referencedby>
        <referencedby refid="class_c_wallet_d_b_1a14f26e53502d1a60dd2b034f830acf03" compoundref="walletdb_8cpp" startline="630" endline="730">CWalletDB::LoadWallet</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ae8f7a2f188545bbbf746160adc42038e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t insecure_rand</definition>
        <argsstring>(void)</argsstring>
        <name>insecure_rand</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="474" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="474" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1abef4e13668f53ac5404c796462aed9b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void seed_insecure_rand</definition>
        <argsstring>(bool fDeterministic=false)</argsstring>
        <name>seed_insecure_rand</name>
        <param>
          <type>bool</type>
          <declname>fDeterministic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Seed insecure_rand using the random pool. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Deterministic</parametername>
</parameternamelist>
<parameterdescription>
<para>Use a determinstic seed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="485" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1366" bodyend="1383"/>
        <references refid="util_8cpp_1acf52c2aa8213c7b15e26594a2264ed8a" compoundref="util_8cpp" startline="154" endline="161">GetRandBytes</references>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7ddc80f6840eae3277e324aec17c2568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool TimingResistantEqual</definition>
        <argsstring>(const T &amp;a, const T &amp;b)</argsstring>
        <name>TimingResistantEqual</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timing-attack-resistant comparison. Takes time proportional to length of first argument. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="493" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="493" bodyend="500"/>
        <referencedby refid="rpcserver_8cpp_1ab8fabed74cd2c68e52b1838425da0f0f" compoundref="rpcserver_8cpp" startline="354" endline="362">HTTPAuthorized</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetThreadPriority</definition>
        <argsstring>(int nPriority)</argsstring>
        <name>SetThreadPriority</name>
        <param>
          <type>int</type>
          <declname>nPriority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="570" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="570" bodyend="579"/>
        <referencedby refid="miner_8cpp_1a31faece5ef0e403969b3d3debd79b352" compoundref="miner_8cpp" startline="536" endline="591">ThreadStakeMiner</referencedby>
        <referencedby refid="net_8cpp_1a379b0d3521bdd62ac296f219d70c4e30" compoundref="net_8cpp" startline="1582" endline="1654">ThreadMessageHandler</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RenameThread</definition>
        <argsstring>(const char *name)</argsstring>
        <name>RenameThread</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="582" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1441" bodyend="1463"/>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="main_8h_1a0189c34248cd89bbbe20d4d6045bd7c9" compoundref="main_8cpp" startline="2294" endline="2317">ThreadImport</referencedby>
        <referencedby refid="miner_8cpp_1a31faece5ef0e403969b3d3debd79b352" compoundref="miner_8cpp" startline="536" endline="591">ThreadStakeMiner</referencedby>
        <referencedby refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</referencedby>
        <referencedby refid="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" compoundref="util_8h" startline="597" endline="621">LoopForever</referencedby>
        <referencedby refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" compoundref="util_8h" startline="623" endline="644">TraceThread</referencedby>
        <referencedby refid="walletdb_8cpp_1a571e13707ba159c7c047875764ae5e2b" compoundref="walletdb_8cpp" startline="732" endline="792">ThreadFlushWalletDB</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t ByteReverse</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>ByteReverse</name>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="584" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="584" bodyend="588"/>
        <referencedby refid="miner_8h_1adcaa5b0c3f29f5856f6393e2b847e7d7" compoundref="miner_8cpp" startline="43" endline="59">SHA256Transform</referencedby>
        <referencedby refid="miner_8h_1a391a5a462c3f60bbb7dbf6a09fe2e78f" compoundref="miner_8cpp" startline="401" endline="444">FormatHashBuffers</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void LoopForever</definition>
        <argsstring>(const char *name, Callable func, int64_t msecs)</argsstring>
        <name>LoopForever</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Callable</type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>msecs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="597" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="597" bodyend="621"/>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" compoundref="util_8cpp" startline="1441" endline="1463">RenameThread</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <references refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" compoundref="testharness_8cc" startline="19">func</references>
        <references refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" compoundref="util_8cpp" startline="1060" endline="1067">PrintException</references>
        <referencedby refid="net_8h_1a9396d8054e8f74959e9391871aaddde0" compoundref="net_8cpp" startline="1858" endline="1899">StartNode</referencedby>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TraceThread</definition>
        <argsstring>(const char *name, Callable func)</argsstring>
        <name>TraceThread</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Callable</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="623" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="623" bodyend="644"/>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" compoundref="util_8cpp" startline="1441" endline="1463">RenameThread</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" compoundref="testharness_8cc" startline="19">func</references>
        <references refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" compoundref="util_8cpp" startline="1060" endline="1067">PrintException</references>
        <referencedby refid="net_8h_1a9396d8054e8f74959e9391871aaddde0" compoundref="net_8cpp" startline="1858" endline="1899">StartNode</referencedby>
        <referencedby refid="smessage_8h_1a4c2723040974201407c876e9365ed74c" compoundref="smessage_8cpp" startline="1104" endline="1142">SecureMsgStart</referencedby>
        <referencedby refid="smessage_8h_1a7e096c63f30bea527e14fef0e7cca460" compoundref="smessage_8cpp" startline="1170" endline="1229">SecureMsgEnable</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DARKSILK_UTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DARKSILK_UTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/resource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serialize_8h" kindref="compound">serialize.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tinyformat_8h" kindref="compound">tinyformat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="amount_8h" kindref="compound">amount.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem/path.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/date_time/gregorian/gregorian_types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/date_time/posix_time/posix_time_types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/evp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/buffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/crypto.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>OPENSSL_cleanse()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/rand.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LISTING_DEFAULT_DURATION<sp/>=<sp/>7<sp/>*<sp/>24<sp/>*<sp/>60<sp/>*<sp/>60;<sp/></highlight><highlight class="comment">//<sp/>One<sp/>Week</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((char*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="util_8h_1ac32457d3f041434e57a2924847796fda" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>END(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((char*)&amp;((&amp;(a))[1]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="util_8h_1a4a903229f3d520fdb700f1c82586368b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((unsigned<sp/>char*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="util_8h_1af0f53b3b9bd67803cd1efe42c7894aa3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UEND(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((unsigned<sp/>char*)&amp;((&amp;(a))[1]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="util_8h_1a35bf72ac971bd331fba0b3e8117bcbf9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARRAYLEN(array)<sp/><sp/><sp/><sp/><sp/>(sizeof(array)/sizeof((array)[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="util_8h_1a10cb3e86337283d57f5a44e8b7a78b83" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UVOIDBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="util_8h_1ac232a2a614f4296d5917c5701f80aca1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CVOIDBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((const<sp/>void*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="util_8h_1ae0060367fc2c75d13e4502880dca1dd0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINTBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="util_8h_1ac34821051cc32c3a78b3586cd376194d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CUINTBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((const<sp/>uint32_t*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Format<sp/>characters<sp/>for<sp/>(s)size_t<sp/>and<sp/>ptrdiff_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>||<sp/>defined(__MSVCRT__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>(s)size_t<sp/>and<sp/>ptrdiff_t<sp/>have<sp/>the<sp/>same<sp/>size<sp/>specifier<sp/>in<sp/>MSVC:</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>http://msdn.microsoft.com/en-us/library/tcxf1dw6%28v=vs.100%29.aspx</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszx<sp/><sp/><sp/><sp/>&quot;Ix&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszu<sp/><sp/><sp/><sp/>&quot;Iu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszd<sp/><sp/><sp/><sp/>&quot;Id&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdx<sp/><sp/><sp/><sp/>&quot;Ix&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdu<sp/><sp/><sp/><sp/>&quot;Iu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdd<sp/><sp/><sp/><sp/>&quot;Id&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>C99<sp/>standard<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="util_8h_1a19b7466198e5f58b580c34c12dff6b54" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszx<sp/><sp/><sp/><sp/>&quot;zx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="util_8h_1a427f25ac1b36af6c08edcb5d7c481e3b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszu<sp/><sp/><sp/><sp/>&quot;zu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="util_8h_1aef104e42b5ef4e0fb2a5dca9fc82e4be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszd<sp/><sp/><sp/><sp/>&quot;zd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="util_8h_1ad31e724f13b58900c9cf4ff25464934f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdx<sp/><sp/><sp/><sp/>&quot;tx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="util_8h_1a010705285dde1c273d566ffc1790e823" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdu<sp/><sp/><sp/><sp/>&quot;tu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="util_8h_1a633f3d742890fc7614de9bbcbe9d1a30" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdd<sp/><sp/><sp/><sp/>&quot;td&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>needed<sp/>because<sp/>the<sp/>foreach<sp/>macro<sp/>can&apos;t<sp/>get<sp/>over<sp/>the<sp/>comma<sp/>in<sp/>pair&lt;t1,<sp/>t2&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAIRTYPE(t1,<sp/>t2)<sp/><sp/><sp/><sp/>std::pair&lt;t1,<sp/>t2&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Align<sp/>by<sp/>increasing<sp/>pointer,<sp/>must<sp/>have<sp/>extra<sp/>space<sp/>at<sp/>end<sp/>of<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBytes,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="81" refid="util_8h_1a1255e360d073f56da2f732abf9ce42d2" refkind="member"><highlight class="normal">T*<sp/><ref refid="util_8h_1a1255e360d073f56da2f732abf9ce42d2" kindref="member">alignup</ref>(T*<sp/>p)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>ptr;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>u;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>u.ptr<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>u.n<sp/>=<sp/>(u.n<sp/>+<sp/>(nBytes-1))<sp/>&amp;<sp/>~(nBytes-1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u.ptr;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">boost::filesystem::path<sp/><ref refid="util_8h_1a424ea7e15366f453189c6b977f14b420" kindref="member">GetStormnodeConfigFile</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_NOSIGNAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_DONTWAIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>S_IRUSR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_IRUSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_IWUSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="util_8h_1ab99ded389af74001a6298fc9e44e74e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PATH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BOOST_VERSION<sp/>&gt;=<sp/>105000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::this_thread::sleep_for(boost::chrono::milliseconds(n));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::this_thread::sleep(boost::posix_time::milliseconds(n));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//Dark<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1acb212e467afc6516452e15829eeb58d5" kindref="member">fEnableInstantX</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aaebdfd83d8252d435dfa61f10e7b86e6" kindref="member">nInstantXDepth</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a8726b2c37267fdeae9fee074106be65b" kindref="member">nAnonymizeDarkSilkAmount</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa6e1d8c03f1d46e89708f9c282181c47" kindref="member">fSandstormMultiSession</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1aef1290adaaac08bd8da8b458c869554f" kindref="member">enforceStormnodePaymentsTime</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a0143873cb7d76647f41ff47afe5a2255" kindref="member">strStormNodeAddr</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a87d1153c97b6c99fdad9a30af07fed6e" kindref="member">nStormnodeMinProtocol</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a28422c9b2836d2d829f2b7fa9859cb0b" kindref="member">keysLoaded</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ad5b9f1681377dd7cf6753df60c19f96e" kindref="member">fSucessfullyLoaded</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::vector&lt;CAmount&gt;<sp/><ref refid="util_8h_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a4f8e018a639d7a5acd7275b15ff66bfa" kindref="member">strBudgetMode</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a49ade2b91028ff037557259b0729b049" kindref="member">fNoSmsg</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9d6b03a0dcc515a84e620794e64b9547" kindref="member">fPrintToConsole</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ae1c7830d95f75ba35fbc6bfa50509913" kindref="member">fPrintToDebugLog</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a2839c7c01ad9d90fbd3ce55d32b50c6f" kindref="member">fServer</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a71f0a1c395c717d77bdf878cb6ced96e" kindref="member">fCommandLine</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a41393eb45547527ac7cdaede34ab701e" kindref="member">strMiscWarning</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a53f30a9fc322fa65a5c4e3732e4ad410" kindref="member">fNoListen</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa5e7caf6936a9a94eb088f04bcc62b97" kindref="member">fLogTimestamps</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aad5e5c200c78bd5bdec18c8707e63822" kindref="member">fReopenDebugLog</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a053c038c846a1c5184ddfcf58dabfeec" kindref="member">IsLogOpen</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>true<sp/>if<sp/>log<sp/>accepts<sp/>specified<sp/>category<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" kindref="member">LogAcceptCategory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>category);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Send<sp/>a<sp/>string<sp/>to<sp/>the<sp/>log<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;str);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">std::string<sp/><ref refid="util_8h_1aa968b3d087118c9a4913566b31c7ae4b" kindref="member">GenerateRandomString</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>24);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a22a2db2aea31bc8220b804147c1a82db" kindref="member">WriteConfigFile</ref>(FILE*<sp/>configFile);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a990b64b5cc5ec1ba733a834916f4c0a7" kindref="member">FileExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a680db3065fcd18a556ea6e1fc977e3b0" kindref="member">RandomIntegerRange</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMin,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMax);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LogPrintf(...)<sp/>LogPrint(NULL,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>When<sp/>we<sp/>switch<sp/>to<sp/>C++11,<sp/>this<sp/>can<sp/>be<sp/>switched<sp/>to<sp/>variadic<sp/>templates<sp/>instead</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>macro-based<sp/>construction<sp/>(see<sp/>tinyformat.h).</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="util_8h_1a0ffe181147a216a8a4f51d8ebf5bd1eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAKE_ERROR_AND_LOG_FUNC(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Print<sp/>to<sp/>debug.log<sp/>if<sp/>-debug=category<sp/>switch<sp/>is<sp/>given<sp/>OR<sp/>category<sp/>is<sp/>NULL.<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>int<sp/>LogPrint(const<sp/>char*<sp/>category,<sp/>const<sp/>char*<sp/>format,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!LogAcceptCategory(category))<sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>LogPrintStr(tfm::format(format,<sp/>TINYFORMAT_PASSARGS(n)));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Log<sp/>error<sp/>and<sp/>return<sp/>false<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>bool<sp/>error(const<sp/>char*<sp/>format,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintStr(&quot;ERROR:<sp/>&quot;<sp/>+<sp/>tfm::format(format,<sp/>TINYFORMAT_PASSARGS(n))<sp/>+<sp/>&quot;\n&quot;);<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Log<sp/>error<sp/>and<sp/>return<sp/>n<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>int<sp/>errorN(int<sp/>rv,<sp/>const<sp/>char*<sp/>format,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintStr(&quot;ERROR:<sp/>&quot;<sp/>+<sp/>tfm::format(format,<sp/>TINYFORMAT_PASSARGS(n))<sp/>+<sp/>&quot;\n&quot;);<sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>rv;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="tinyformat_8h_1ae2e4f3482a2c4746b3f7429d62e252a7" kindref="member">TINYFORMAT_FOREACH_ARGNUM</ref>(<ref refid="util_8h_1a0ffe181147a216a8a4f51d8ebf5bd1eb" kindref="member">MAKE_ERROR_AND_LOG_FUNC</ref>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Zero-arg<sp/>versions<sp/>of<sp/>logging<sp/>and<sp/>error,<sp/>these<sp/>are<sp/>not<sp/>covered<sp/>by</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>TINYFORMAT_FOREACH_ARGNUM</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">static<sp/>inline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LogPrint(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>category,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" kindref="member">LogAcceptCategory</ref>(category))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(format);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(std::string(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>format<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorN(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(std::string(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>format<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="util_8h_1ac6e877d09800ef2f6ed5b4ddee4a202c" kindref="member">mapArgs</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::vector&lt;std::string&gt;<sp/>&gt;<sp/><ref refid="util_8h_1ad1aaac805f4fdc2da7dddf5aafaa8bac" kindref="member">mapMultiArgs</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ab699fbdf803610a4e2060fd87787f7e0" kindref="member">RandAddSeed</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a786af12a87491f8dc24351d93b9833b6" kindref="member">RandAddSeedPerfmon</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(std::exception*<sp/>pex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszThread);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a477231880f761159de1567ad6fb98fac" kindref="member">PrintExceptionContinue</ref>(std::exception*<sp/>pex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszThread);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a6d49c32c9c6e963f892744c909e4c3f1" kindref="member">ParseString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>v);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a9b8dfe28f5d12bf84ab1f179606f338b" kindref="member">FormatMoney</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fPlus=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a1de857cb71a01a4104d131dc7c7b6b76" kindref="member">ParseMoney</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nRet);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a1de857cb71a01a4104d131dc7c7b6b76" kindref="member">ParseMoney</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszIn,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nRet);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a5c3ee01d5e18f1a60bde06ab4dbcdbd1" kindref="member">SanitizeString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">std::vector&lt;unsigned<sp/>char&gt;<sp/><ref refid="util_8h_1a5a787187ddd5c52baae692350ec5a2cb" kindref="member">ParseHex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>psz);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">std::vector&lt;unsigned<sp/>char&gt;<sp/><ref refid="util_8h_1a5a787187ddd5c52baae692350ec5a2cb" kindref="member">ParseHex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9f23401f4b871ed693f7a96a9ba40c58" kindref="member">IsHex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">std::vector&lt;unsigned<sp/>char&gt;<sp/><ref refid="util_8h_1ad7d5462ec6ec6e23493c839d01da7424" kindref="member">DecodeBase64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>pfInvalid<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ad7d5462ec6ec6e23493c839d01da7424" kindref="member">DecodeBase64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ab088e17c477707c187113686457eabb8" kindref="member">EncodeBase64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ab088e17c477707c187113686457eabb8" kindref="member">EncodeBase64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref><sp/><ref refid="util_8h_1a0071c0bf91d611895e43999e62666c96" kindref="member">DecodeBase64Secure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref>&amp;<sp/>input);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref><sp/><ref refid="util_8h_1a49f6f1cd42cb886762be52c72466dc7e" kindref="member">EncodeBase64Secure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref>&amp;<sp/>input);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">std::vector&lt;unsigned<sp/>char&gt;<sp/><ref refid="util_8h_1a58e69b413820ff62a4f203eb5c1a827a" kindref="member">DecodeBase32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>pfInvalid<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a58e69b413820ff62a4f203eb5c1a827a" kindref="member">DecodeBase32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">std::string<sp/><ref refid="util_8h_1aed1944a78afffe9d5f3129e656dc8aa6" kindref="member">EncodeBase32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">std::string<sp/><ref refid="util_8h_1aed1944a78afffe9d5f3129e656dc8aa6" kindref="member">EncodeBase32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a4cfc6f116964c12bc24442828c2da007" kindref="member">ParseParameters</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>argv[]);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a134e5ff2f94e103c1de7b642675546ca" kindref="member">WildcardMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>psz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mask);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a134e5ff2f94e103c1de7b642675546ca" kindref="member">WildcardMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a4458ca67cacd593b21c8e1386d192064" kindref="member">TryCreateDirectory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::path&amp;<sp/>p);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a7572b77c2a5191de8d40d4050322ab84" kindref="member">FileCommit</ref>(FILE<sp/>*fileout);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ad8f8509a84cc6f53344a5ac76369c327" kindref="member">RenameOver</ref>(boost::filesystem::path<sp/>src,<sp/>boost::filesystem::path<sp/>dest);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">boost::filesystem::path<sp/><ref refid="util_8h_1ab272995de020a3bcbf743be630e485c6" kindref="member">GetDefaultDataDir</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::path<sp/>&amp;<ref refid="util_8h_1a0d247b470b387d7cd3f039bd26166007" kindref="member">GetDataDir</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fNetSpecific<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">boost::filesystem::path<sp/><ref refid="util_8h_1a7d86fadf98dfaba55f80b9be0ab0f978" kindref="member">GetConfigFile</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal">boost::filesystem::path<sp/><ref refid="util_8h_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" kindref="member">GetPidFile</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a0ec1d8fc76760232b016335fdcf7c539" kindref="member">CreatePidFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::path<sp/>&amp;path,<sp/>pid_t<sp/>pid);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9e585b4be467fe1d3ee978214ceff5d2" kindref="member">ReadConfigFile</ref>(std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>mapSettingsRet,<sp/>std::map&lt;std::string,<sp/>std::vector&lt;std::string&gt;<sp/>&gt;&amp;<sp/>mapMultiSettingsRet);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">boost::filesystem::path<sp/>GetSpecialFolderPath(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFolder,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCreate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">std::string<sp/><ref refid="util_8h_1accff8f395fb4e283af38111daf096f0d" kindref="member">getTimeString</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>timestamp,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBuffer);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a6476623f1d1477b76ae3f751f6db644b" kindref="member">bytesReadable</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nBytes);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a37fca7e305fe0caa306b23fdb37f88e2" kindref="member">ShrinkDebugFile</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1acf52c2aa8213c7b15e26594a2264ed8a" kindref="member">GetRandBytes</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a0e44e088732172da6662db2d5e37d4b2" kindref="member">GetRandInt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMax);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="util_8h_1a27d9149d522b1fa87d84e5e9ca902aef" kindref="member">GetRand</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nMax);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="util_8h_1af3aedae75efabb170337a497457f7ecf" kindref="member">GetRandHash</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a79d4c36b511d6690ab0bbde0e0da9251" kindref="member">SetMockTime</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nMockTimeIn);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ac3e3098552063f228d9deac38a8b9848" kindref="member">FormatFullVersion</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a7e6809cdbfc7f83b46f83caea740894d" kindref="member">FormatSubVersion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClientVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>comments);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1adf94c00a5ac719c92a2f1bb2f8b2167f" kindref="member">runCommand</ref>(std::string<sp/>strCommand);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1acb8d6b822bc1bfa609bf43bbac1a0d44" kindref="member">TruncateFile</ref>(FILE<sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">std::string<sp/>FormatI2PNativeFullVersion();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a880a215d9e931432b095084c756a49bb" kindref="member">ParseInt32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref><sp/>*out);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ab754c84a5a52f6853642e86447ce460e" kindref="member">FormatParagraph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>in,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width=79,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indent=0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="utilstrencodings_8h_1ab7a07cad3bcdf95935f4f6b5c039c546" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1ab7a07cad3bcdf95935f4f6b5c039c546" kindref="member">i64tostr</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="utilstrencodings_8h_1a565b3ea015b133d01dc52b4ec6e45f07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a565b3ea015b133d01dc52b4ec6e45f07" kindref="member">itostr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="utilstrencodings_8h_1a22916d155600c742c4efad727462588e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a22916d155600c742c4efad727462588e" kindref="member">atoi64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>psz)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_atoi64(psz);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strtoll(psz,<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="utilstrencodings_8h_1aba1c6f08c135078a7af3385ed3e91ef3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a22916d155600c742c4efad727462588e" kindref="member">atoi64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_atoi64(str.c_str());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strtoll(str.c_str(),<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="utilstrencodings_8h_1aa5ce96ec36f4413f820cec9c1831c070" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(str.c_str());</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="util_8h_1ae3939088d6c4178bb1f19f693a005275" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ae3939088d6c4178bb1f19f693a005275" kindref="member">roundint</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(d<sp/>&gt;<sp/>0<sp/>?<sp/>d<sp/>+<sp/>0.5<sp/>:<sp/>d<sp/>-<sp/>0.5);</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="util_8h_1a27346c9c6df4174d2fa64b798b98eff5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a27346c9c6df4174d2fa64b798b98eff5" kindref="member">roundint64</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)(d<sp/>&gt;<sp/>0<sp/>?<sp/>d<sp/>+<sp/>0.5<sp/>:<sp/>d<sp/>-<sp/>0.5);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="util_8h_1a351cbd451bee96e6badbaa284ba3c614" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a351cbd451bee96e6badbaa284ba3c614" kindref="member">abs64</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>0<sp/>?<sp/>n<sp/>:<sp/>-n);</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="util_8h_1a8bd08fb413d92858692abb1ab182014c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a8bd08fb413d92858692abb1ab182014c" kindref="member">leftTrim</ref>(std::string<sp/>src,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string::size_type<sp/>pos<sp/>=<sp/>src.find_first_not_of(chr,<sp/>0);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.erase(0,<sp/>pos);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>src;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="346" refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" refkind="member"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>itbegin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>itend,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSpaces=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rv;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hexmap[16]<sp/>=<sp/>{<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>rv.reserve((itend-itbegin)*3);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(T<sp/>it<sp/>=<sp/>itbegin;<sp/>it<sp/>&lt;<sp/>itend;<sp/>++it)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(*it);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fSpaces<sp/>&amp;&amp;<sp/>it<sp/>!=<sp/>itbegin)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.push_back(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.push_back(hexmap[val&gt;&gt;4]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.push_back(hexmap[val&amp;15]);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="365" refid="util_8h_1a7efe75f50ba1dbd0183952dd42146a92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>vch,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSpaces=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(vch.begin(),<sp/>vch.end(),<sp/>fSpaces);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="util_8h_1acd4d9988b9bb3f31fddf72a34b2bc37f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1acd4d9988b9bb3f31fddf72a34b2bc37f" kindref="member">GetPerformanceCounter</ref>()</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>QueryPerformanceCounter((LARGE_INTEGER*)&amp;nCounter);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>timeval<sp/>t;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>gettimeofday(&amp;t,<sp/>NULL);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>nCounter<sp/>=<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)<sp/>t.tv_sec<sp/>*<sp/>1000000<sp/>+<sp/>t.tv_usec;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nCounter;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(boost::posix_time::ptime(boost::posix_time::microsec_clock::universal_time())<sp/>-</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_milliseconds();</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="util_8h_1a0c5a06b50cd805b1923552114494c029" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a0c5a06b50cd805b1923552114494c029" kindref="member">GetTimeMicros</ref>()</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(boost::posix_time::ptime(boost::posix_time::microsec_clock::universal_time())<sp/>-</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_microseconds();</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszFormat,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTime);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>strTimestampFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%Y-%m-%d<sp/>%H:%M:%S<sp/>UTC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398" refid="util_8h_1a5d620750c7cb9c95ce815e3dd036e134" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTime)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(strTimestampFormat.c_str(),<sp/>nTime);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="405" refid="util_8h_1a952a05da17d51c4107d353d4d1dafb4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a952a05da17d51c4107d353d4d1dafb4d" kindref="member">skipspaces</ref>(T&amp;<sp/>it)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isspace(*it))</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="util_8h_1ac0165e18ce3be89a2e0731e27d54b478" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ac0165e18ce3be89a2e0731e27d54b478" kindref="member">IsSwitchChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strDefault);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nDefault);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDefault);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9d94ca9f7c1496626992d1873e3f69df" kindref="member">SoftSetArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strValue);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fValue);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="util_8h_1ad679dcd7cb4960c49a8d400bcc23b0d0" kindref="member">insecure_rand_Rz</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="util_8h_1a45e4e024616db2e96c5ffc34928c553b" kindref="member">insecure_rand_Rw</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>insecure_rand(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>insecure_rand_Rz=36969*(insecure_rand_Rz&amp;65535)+(insecure_rand_Rz&gt;&gt;16);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>insecure_rand_Rw=18000*(insecure_rand_Rw&amp;65535)+(insecure_rand_Rw&gt;&gt;16);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(insecure_rand_Rw&lt;&lt;16)+<ref refid="util_8h_1ad679dcd7cb4960c49a8d400bcc23b0d0" kindref="member">insecure_rand_Rz</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1abef4e13668f53ac5404c796462aed9b4" kindref="member">seed_insecure_rand</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDeterministic=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="493" refid="util_8h_1a7ddc80f6840eae3277e324aec17c2568" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a7ddc80f6840eae3277e324aec17c2568" kindref="member">TimingResistantEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>b)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.size()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>accumulator<sp/>=<sp/>a.size()<sp/>^<sp/>b.size();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.size();<sp/>i++)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulator<sp/>|=<sp/>a[i]<sp/>^<sp/>b[i%b.size()];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>accumulator<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="class_c_median_filter" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_median_filter" kindref="compound">CMedianFilter</ref></highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>vValues;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>vSorted;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="512" refid="class_c_median_filter_1a181463ed081ece10fd437875243d9cad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_median_filter_1a181463ed081ece10fd437875243d9cad" kindref="member">CMedianFilter</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" kindref="member">size</ref>,<sp/>T<sp/>initial_value):</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSize(size)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValues.reserve(size);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValues.push_back(initial_value);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSorted<sp/>=<sp/>vValues;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="class_c_median_filter_1ae10cde98866b034ec73c530be4c60874" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_median_filter_1ae10cde98866b034ec73c530be4c60874" kindref="member">input</ref>(T<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vValues.size()<sp/>==<sp/>nSize)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValues.erase(vValues.begin());</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValues.push_back(value);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSorted.resize(vValues.size());</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(vValues.begin(),<sp/>vValues.end(),<sp/>vSorted.begin());</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(vSorted.begin(),<sp/>vSorted.end());</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="class_c_median_filter_1aab6b67fbb63024c462bfa30bbe789c31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_c_median_filter_1aab6b67fbb63024c462bfa30bbe789c31" kindref="member">median</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="534"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" kindref="member">size</ref><sp/>=<sp/>vSorted.size();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(size&gt;0);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&amp;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>Odd<sp/>number<sp/>of<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vSorted[size/2];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>number<sp/>of<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(vSorted[size/2-1]<sp/>+<sp/>vSorted[size/2])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="548"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vValues.size();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="class_c_median_filter_1afbfe7258f17cec5cc7f2f105d03b0567" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/><ref refid="class_c_median_filter_1afbfe7258f17cec5cc7f2f105d03b0567" kindref="member">sorted</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="553"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vSorted;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">};</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" kindref="member">SetThreadPriority</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPriority)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" kindref="member">SetThreadPriority</ref>(GetCurrentThread(),<sp/>nPriority);</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="util_8h_1a59ca83deecce4e6c8b6139e7eb2870b4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_PRIORITY_LOWEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRIO_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="util_8h_1aff5dd15d0754df75650eb9c3bfa5f86f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_PRIORITY_BELOW_NORMAL<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="util_8h_1af05a5c044382ba6895bcaad26325a693" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_PRIORITY_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="util_8h_1aa38e29b911337a6e5c70282f136473fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_PRIORITY_ABOVE_NORMAL<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" kindref="member">SetThreadPriority</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPriority)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>unclear<sp/>if<sp/>it&apos;s<sp/>even<sp/>possible<sp/>to<sp/>change<sp/>thread<sp/>priorities<sp/>on<sp/>Linux,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>really<sp/>and<sp/>truly<sp/>need<sp/>it<sp/>for<sp/>the<sp/>generation<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRIO_THREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>setpriority(PRIO_THREAD,<sp/>0,<sp/>nPriority);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>setpriority(PRIO_PROCESS,<sp/>0,<sp/>nPriority);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" kindref="member">RenameThread</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" kindref="member">ByteReverse</ref>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((value<sp/>&amp;<sp/>0xFF00FF00)<sp/>&gt;&gt;<sp/>8)<sp/>|<sp/>((value<sp/>&amp;<sp/>0x00FF00FF)<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value&lt;&lt;16)<sp/>|<sp/>(value&gt;&gt;16);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>wrapper<sp/>for<sp/>do-something-forever<sp/>thread<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Forever&quot;<sp/>really<sp/>means<sp/>until<sp/>the<sp/>thread<sp/>is<sp/>interrupted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>it<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>new<sp/>boost::thread(boost::bind(&amp;LoopForever&lt;void<sp/>(*)()&gt;,<sp/>&quot;dumpaddr&quot;,<sp/>&amp;DumpAddresses,<sp/>900000));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>maybe:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>boost::function&lt;void()&gt;<sp/>f<sp/>=<sp/>boost::bind(&amp;FunctionWithArg,<sp/>argument);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>threadGroup.create_thread(boost::bind(&amp;LoopForever&lt;boost::function&lt;void()&gt;<sp/>&gt;,<sp/>&quot;nothing&quot;,<sp/>f,<sp/>milliseconds));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" kindref="member">LoopForever</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/><sp/>Callable<sp/><ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>msecs)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;darksilk-%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" kindref="member">RenameThread</ref>(s.c_str());</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>start\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(msecs);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(boost::thread_interrupted)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>stop\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(&amp;e,<sp/>name);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(NULL,<sp/>name);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/>..<sp/>and<sp/>a<sp/>wrapper<sp/>that<sp/>just<sp/>calls<sp/>func<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" kindref="member">TraceThread</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/><sp/>Callable<sp/><ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>)</highlight></codeline>
<codeline lineno="624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;darksilk-%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" kindref="member">RenameThread</ref>(s.c_str());</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>start\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>exit\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(boost::thread_interrupted)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>interrupt\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(&amp;e,<sp/>name);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(NULL,<sp/>name);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/util.h"/>
  </compounddef>
</doxygen>
