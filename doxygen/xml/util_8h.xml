<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="util_8h" kind="file" language="C++">
    <compoundname>util.h</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sys/resource.h</includes>
    <includes refid="serialize_8h" local="yes">serialize.h</includes>
    <includes refid="tinyformat_8h" local="yes">tinyformat.h</includes>
    <includes refid="amount_8h" local="yes">amount.h</includes>
    <includes local="no">map</includes>
    <includes local="no">list</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">boost/thread.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">boost/filesystem/path.hpp</includes>
    <includes local="no">boost/date_time/gregorian/gregorian_types.hpp</includes>
    <includes local="no">boost/date_time/posix_time/posix_time_types.hpp</includes>
    <includes local="no">openssl/bio.h</includes>
    <includes local="no">openssl/evp.h</includes>
    <includes local="no">openssl/buffer.h</includes>
    <includes local="no">openssl/crypto.h</includes>
    <includes local="no">openssl/rand.h</includes>
    <includes local="no">openssl/bn.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includedby refid="addrman_8h" local="yes">/home/dev/ds-160209/src/addrman.h</includedby>
    <includedby refid="script_8h" local="yes">/home/dev/ds-160209/src/script.h</includedby>
    <includedby refid="stealth_8h" local="yes">/home/dev/ds-160209/src/stealth.h</includedby>
    <includedby refid="transaction_8h" local="yes">/home/dev/ds-160209/src/primitives/transaction.h</includedby>
    <includedby refid="leveldbwrapper_8h" local="yes">/home/dev/ds-160209/src/leveldbwrapper.h</includedby>
    <includedby refid="chain_8h" local="yes">/home/dev/ds-160209/src/chain.h</includedby>
    <includedby refid="wallet_8h" local="yes">/home/dev/ds-160209/src/wallet.h</includedby>
    <includedby refid="stormnode_8h" local="yes">/home/dev/ds-160209/src/stormnode.h</includedby>
    <includedby refid="stormnodeman_8h" local="yes">/home/dev/ds-160209/src/stormnodeman.h</includedby>
    <includedby refid="spork_8h" local="yes">/home/dev/ds-160209/src/spork.h</includedby>
    <includedby refid="alert_8cpp" local="yes">/home/dev/ds-160209/src/alert.cpp</includedby>
    <includedby refid="coins_8cpp" local="yes">/home/dev/ds-160209/src/coins.cpp</includedby>
    <includedby refid="scrypt_8h" local="yes">/home/dev/ds-160209/src/scrypt.h</includedby>
    <includedby refid="db_8cpp" local="yes">/home/dev/ds-160209/src/db.cpp</includedby>
    <includedby refid="i2p_8cpp" local="yes">/home/dev/ds-160209/src/i2p.cpp</includedby>
    <includedby refid="init_8cpp" local="yes">/home/dev/ds-160209/src/init.cpp</includedby>
    <includedby refid="stormnode-budget_8h" local="yes">/home/dev/ds-160209/src/stormnode-budget.h</includedby>
    <includedby refid="instantx_8cpp" local="yes">/home/dev/ds-160209/src/instantx.cpp</includedby>
    <includedby refid="key_8cpp" local="yes">/home/dev/ds-160209/src/key.cpp</includedby>
    <includedby refid="netbase_8cpp" local="yes">/home/dev/ds-160209/src/netbase.cpp</includedby>
    <includedby refid="protocol_8cpp" local="yes">/home/dev/ds-160209/src/protocol.cpp</includedby>
    <includedby refid="stormnodemanager_8h" local="yes">/home/dev/ds-160209/src/qt/stormnodemanager.h</includedby>
    <includedby refid="addeditstormnode_8cpp" local="yes">/home/dev/ds-160209/src/qt/addeditstormnode.cpp</includedby>
    <includedby refid="darksilk_8cpp" local="yes">/home/dev/ds-160209/src/qt/darksilk.cpp</includedby>
    <includedby refid="guiutil_8cpp" local="yes">/home/dev/ds-160209/src/qt/guiutil.cpp</includedby>
    <includedby refid="i2poptionswidget_8cpp" local="yes">/home/dev/ds-160209/src/qt/i2poptionswidget.cpp</includedby>
    <includedby refid="paymentserver_8cpp" local="yes">/home/dev/ds-160209/src/qt/paymentserver.cpp</includedby>
    <includedby refid="rpcclient_8cpp" local="yes">/home/dev/ds-160209/src/rpcclient.cpp</includedby>
    <includedby refid="rpcmisc_8cpp" local="yes">/home/dev/ds-160209/src/rpcmisc.cpp</includedby>
    <includedby refid="rpcnet_8cpp" local="yes">/home/dev/ds-160209/src/rpcnet.cpp</includedby>
    <includedby refid="rpcprotocol_8cpp" local="yes">/home/dev/ds-160209/src/rpcprotocol.cpp</includedby>
    <includedby refid="rpcserver_8cpp" local="yes">/home/dev/ds-160209/src/rpcserver.cpp</includedby>
    <includedby refid="rpcstormnode-budget_8cpp" local="yes">/home/dev/ds-160209/src/rpcstormnode-budget.cpp</includedby>
    <includedby refid="rpcwallet_8cpp" local="yes">/home/dev/ds-160209/src/rpcwallet.cpp</includedby>
    <includedby refid="sandstorm_8cpp" local="yes">/home/dev/ds-160209/src/sandstorm.cpp</includedby>
    <includedby refid="scrypt_8cpp" local="yes">/home/dev/ds-160209/src/scrypt.cpp</includedby>
    <includedby refid="spork_8cpp" local="yes">/home/dev/ds-160209/src/spork.cpp</includedby>
    <includedby refid="stormnode-budget_8cpp" local="yes">/home/dev/ds-160209/src/stormnode-budget.cpp</includedby>
    <includedby refid="stormnode-payments_8cpp" local="yes">/home/dev/ds-160209/src/stormnode-payments.cpp</includedby>
    <includedby refid="stormnode-sync_8cpp" local="yes">/home/dev/ds-160209/src/stormnode-sync.cpp</includedby>
    <includedby refid="stormnode_8cpp" local="yes">/home/dev/ds-160209/src/stormnode.cpp</includedby>
    <includedby refid="stormnodeconfig_8cpp" local="yes">/home/dev/ds-160209/src/stormnodeconfig.cpp</includedby>
    <includedby refid="stormnodeman_8cpp" local="yes">/home/dev/ds-160209/src/stormnodeman.cpp</includedby>
    <includedby refid="sync_8cpp" local="yes">/home/dev/ds-160209/src/sync.cpp</includedby>
    <includedby refid="allocator__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/allocator_tests.cpp</includedby>
    <includedby refid="base32__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/base32_tests.cpp</includedby>
    <includedby refid="base58__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/base58_tests.cpp</includedby>
    <includedby refid="base64__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/base64_tests.cpp</includedby>
    <includedby refid="bignum__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/bignum_tests.cpp</includedby>
    <includedby refid="_checkpoints__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/Checkpoints_tests.cpp</includedby>
    <includedby refid="getarg__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/getarg_tests.cpp</includedby>
    <includedby refid="hmac__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/hmac_tests.cpp</includedby>
    <includedby refid="key__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/key_tests.cpp</includedby>
    <includedby refid="mruset__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/mruset_tests.cpp</includedby>
    <includedby refid="timedata_8cpp" local="yes">/home/dev/ds-160209/src/timedata.cpp</includedby>
    <includedby refid="txdb-leveldb_8cpp" local="yes">/home/dev/ds-160209/src/txdb-leveldb.cpp</includedby>
    <includedby refid="util_8cpp" local="yes">/home/dev/ds-160209/src/util.cpp</includedby>
    <incdepgraph>
      <node id="22787">
        <label>list</label>
      </node>
      <node id="22776">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="22786">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="22760" relation="include">
        </childnode>
        <childnode refid="22774" relation="include">
        </childnode>
        <childnode refid="22761" relation="include">
        </childnode>
      </node>
      <node id="22766">
        <label>limits</label>
      </node>
      <node id="22798">
        <label>openssl/rand.h</label>
      </node>
      <node id="22771">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="22780">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="22781" relation="include">
        </childnode>
        <childnode refid="22761" relation="include">
        </childnode>
      </node>
      <node id="22777">
        <label>sys/mman.h</label>
      </node>
      <node id="22774">
        <label>stdlib.h</label>
      </node>
      <node id="22797">
        <label>openssl/crypto.h</label>
      </node>
      <node id="22793">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="22765">
        <label>cassert</label>
      </node>
      <node id="22785">
        <label>stdexcept</label>
      </node>
      <node id="22756">
        <label>/home/dev/ds-160209/src/util.h</label>
        <link refid="util.h"/>
        <childnode refid="22757" relation="include">
        </childnode>
        <childnode refid="22758" relation="include">
        </childnode>
        <childnode refid="22759" relation="include">
        </childnode>
        <childnode refid="22760" relation="include">
        </childnode>
        <childnode refid="22782" relation="include">
        </childnode>
        <childnode refid="22786" relation="include">
        </childnode>
        <childnode refid="22763" relation="include">
        </childnode>
        <childnode refid="22787" relation="include">
        </childnode>
        <childnode refid="22788" relation="include">
        </childnode>
        <childnode refid="22762" relation="include">
        </childnode>
        <childnode refid="22761" relation="include">
        </childnode>
        <childnode refid="22789" relation="include">
        </childnode>
        <childnode refid="22790" relation="include">
        </childnode>
        <childnode refid="22791" relation="include">
        </childnode>
        <childnode refid="22792" relation="include">
        </childnode>
        <childnode refid="22793" relation="include">
        </childnode>
        <childnode refid="22794" relation="include">
        </childnode>
        <childnode refid="22795" relation="include">
        </childnode>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22797" relation="include">
        </childnode>
        <childnode refid="22798" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22767" relation="include">
        </childnode>
      </node>
      <node id="22792">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="22761">
        <label>string</label>
      </node>
      <node id="22763">
        <label>map</label>
      </node>
      <node id="22789">
        <label>boost/thread.hpp</label>
      </node>
      <node id="22760">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="22761" relation="include">
        </childnode>
        <childnode refid="22762" relation="include">
        </childnode>
        <childnode refid="22763" relation="include">
        </childnode>
        <childnode refid="22764" relation="include">
        </childnode>
        <childnode refid="22765" relation="include">
        </childnode>
        <childnode refid="22766" relation="include">
        </childnode>
        <childnode refid="22767" relation="include">
        </childnode>
        <childnode refid="22768" relation="include">
        </childnode>
        <childnode refid="22769" relation="include">
        </childnode>
        <childnode refid="22770" relation="include">
        </childnode>
        <childnode refid="22771" relation="include">
        </childnode>
        <childnode refid="22772" relation="include">
        </childnode>
        <childnode refid="22780" relation="include">
        </childnode>
      </node>
      <node id="22778">
        <label>limits.h</label>
      </node>
      <node id="22759">
        <label>sys/resource.h</label>
      </node>
      <node id="22794">
        <label>openssl/bio.h</label>
      </node>
      <node id="22757">
        <label>sys/types.h</label>
      </node>
      <node id="22775">
        <label>string.h</label>
      </node>
      <node id="22781">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="22769">
        <label>cstdio</label>
      </node>
      <node id="22796">
        <label>openssl/buffer.h</label>
      </node>
      <node id="22770">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="22791">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="22779">
        <label>unistd.h</label>
      </node>
      <node id="22762">
        <label>vector</label>
      </node>
      <node id="22790">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="22788">
        <label>utility</label>
      </node>
      <node id="22784">
        <label>sstream</label>
      </node>
      <node id="22795">
        <label>openssl/evp.h</label>
      </node>
      <node id="22782">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="22765" relation="include">
        </childnode>
        <childnode refid="22783" relation="include">
        </childnode>
        <childnode refid="22784" relation="include">
        </childnode>
        <childnode refid="22785" relation="include">
        </childnode>
      </node>
      <node id="22767">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="22758">
        <label>sys/time.h</label>
      </node>
      <node id="22783">
        <label>iostream</label>
      </node>
      <node id="22799">
        <label>openssl/bn.h</label>
      </node>
      <node id="22772">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="22773" relation="include">
        </childnode>
        <childnode refid="22775" relation="include">
        </childnode>
        <childnode refid="22761" relation="include">
        </childnode>
        <childnode refid="22776" relation="include">
        </childnode>
        <childnode refid="22763" relation="include">
        </childnode>
        <childnode refid="22777" relation="include">
        </childnode>
        <childnode refid="22778" relation="include">
        </childnode>
        <childnode refid="22779" relation="include">
        </childnode>
      </node>
      <node id="22764">
        <label>set</label>
      </node>
      <node id="22773">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="22774" relation="include">
        </childnode>
      </node>
      <node id="22768">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22835">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="22940">
        <label>/home/dev/ds-160209/src/test/base32_tests.cpp</label>
        <link refid="base32__tests_8cpp"/>
      </node>
      <node id="22935">
        <label>/home/dev/ds-160209/src/qt/i2poptionswidget.cpp</label>
        <link refid="i2poptionswidget_8cpp"/>
      </node>
      <node id="22819">
        <label>/home/dev/ds-160209/src/stormnodeman.cpp</label>
        <link refid="stormnodeman_8cpp"/>
      </node>
      <node id="22840">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="22937">
        <label>/home/dev/ds-160209/src/rpcclient.cpp</label>
        <link refid="rpcclient_8cpp"/>
      </node>
      <node id="22922">
        <label>/home/dev/ds-160209/src/rpcserver.cpp</label>
        <link refid="rpcserver_8cpp"/>
      </node>
      <node id="22820">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="22848">
        <label>/home/dev/ds-160209/src/qt/guiutil.cpp</label>
        <link refid="guiutil_8cpp"/>
      </node>
      <node id="22887">
        <label>/home/dev/ds-160209/src/stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22914">
        <label>/home/dev/ds-160209/src/primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="22900" relation="include">
        </childnode>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22871" relation="include">
        </childnode>
        <childnode refid="22868" relation="include">
        </childnode>
        <childnode refid="22915" relation="include">
        </childnode>
        <childnode refid="22916" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22917" relation="include">
        </childnode>
        <childnode refid="22918" relation="include">
        </childnode>
        <childnode refid="22848" relation="include">
        </childnode>
        <childnode refid="22878" relation="include">
        </childnode>
      </node>
      <node id="22833">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="22834" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22836" relation="include">
        </childnode>
        <childnode refid="22837" relation="include">
        </childnode>
        <childnode refid="22838" relation="include">
        </childnode>
        <childnode refid="22839" relation="include">
        </childnode>
      </node>
      <node id="22909">
        <label>/home/dev/ds-160209/src/script.h</label>
        <link refid="script_8h"/>
        <childnode refid="22910" relation="include">
        </childnode>
        <childnode refid="22914" relation="include">
        </childnode>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22919" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22844" relation="include">
        </childnode>
        <childnode refid="22829" relation="include">
        </childnode>
        <childnode refid="22896" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22926" relation="include">
        </childnode>
      </node>
      <node id="22846">
        <label>/home/dev/ds-160209/src/qt/addresstablemodel.cpp</label>
        <link refid="addresstablemodel_8cpp"/>
      </node>
      <node id="22903">
        <label>/home/dev/ds-160209/src/primitives/block.cpp</label>
        <link refid="block_8cpp"/>
      </node>
      <node id="22821">
        <label>/home/dev/ds-160209/src/net.cpp</label>
        <link refid="net_8cpp"/>
      </node>
      <node id="22911">
        <label>/home/dev/ds-160209/src/walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22844" relation="include">
        </childnode>
        <childnode refid="22860" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
        <childnode refid="22814" relation="include">
        </childnode>
        <childnode refid="22862" relation="include">
        </childnode>
        <childnode refid="22863" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
        <childnode refid="22866" relation="include">
        </childnode>
      </node>
      <node id="22807">
        <label>/home/dev/ds-160209/src/sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="22808" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22822" relation="include">
        </childnode>
        <childnode refid="22823" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
        <childnode refid="22825" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22828" relation="include">
        </childnode>
        <childnode refid="22829" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22882">
        <label>/home/dev/ds-160209/src/stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="22802" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22883" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22829" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
      </node>
      <node id="22871">
        <label>/home/dev/ds-160209/src/txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22870" relation="include">
        </childnode>
        <childnode refid="22872" relation="include">
        </childnode>
      </node>
      <node id="22816">
        <label>/home/dev/ds-160209/src/spork.cpp</label>
        <link refid="spork_8cpp"/>
      </node>
      <node id="22861">
        <label>/home/dev/ds-160209/src/qt/transactiondesc.cpp</label>
        <link refid="transactiondesc_8cpp"/>
      </node>
      <node id="22883">
        <label>/home/dev/ds-160209/src/qt/clientmodel.cpp</label>
        <link refid="clientmodel_8cpp"/>
      </node>
      <node id="22855">
        <label>/home/dev/ds-160209/src/qt/transactionview.cpp</label>
        <link refid="transactionview_8cpp"/>
      </node>
      <node id="22919">
        <label>/home/dev/ds-160209/src/base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="22884" relation="include">
        </childnode>
        <childnode refid="22885" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
        <childnode refid="22920" relation="include">
        </childnode>
        <childnode refid="22887" relation="include">
        </childnode>
        <childnode refid="22832" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22844" relation="include">
        </childnode>
        <childnode refid="22846" relation="include">
        </childnode>
        <childnode refid="22856" relation="include">
        </childnode>
        <childnode refid="22857" relation="include">
        </childnode>
        <childnode refid="22822" relation="include">
        </childnode>
        <childnode refid="22858" relation="include">
        </childnode>
        <childnode refid="22836" relation="include">
        </childnode>
        <childnode refid="22850" relation="include">
        </childnode>
        <childnode refid="22852" relation="include">
        </childnode>
        <childnode refid="22859" relation="include">
        </childnode>
        <childnode refid="22861" relation="include">
        </childnode>
        <childnode refid="22825" relation="include">
        </childnode>
        <childnode refid="22814" relation="include">
        </childnode>
        <childnode refid="22921" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22878" relation="include">
        </childnode>
        <childnode refid="22922" relation="include">
        </childnode>
        <childnode refid="22862" relation="include">
        </childnode>
        <childnode refid="22841" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22923" relation="include">
        </childnode>
        <childnode refid="22906" relation="include">
        </childnode>
        <childnode refid="22924" relation="include">
        </childnode>
        <childnode refid="22925" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
        <childnode refid="22866" relation="include">
        </childnode>
      </node>
      <node id="22827">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode_8cpp"/>
      </node>
      <node id="22822">
        <label>/home/dev/ds-160209/src/qt/coincontroldialog.cpp</label>
        <link refid="coincontroldialog_8cpp"/>
      </node>
      <node id="22873">
        <label>/home/dev/ds-160209/src/coins.cpp</label>
        <link refid="coins_8cpp"/>
      </node>
      <node id="22836">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="22906">
        <label>/home/dev/ds-160209/src/stormnodeconfig.cpp</label>
        <link refid="stormnodeconfig_8cpp"/>
      </node>
      <node id="22870">
        <label>/home/dev/ds-160209/src/coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="22871" relation="include">
        </childnode>
        <childnode refid="22873" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
      </node>
      <node id="22901">
        <label>/home/dev/ds-160209/src/chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22902" relation="include">
        </childnode>
      </node>
      <node id="22832">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22833" relation="include">
        </childnode>
        <childnode refid="22839" relation="include">
        </childnode>
        <childnode refid="22814" relation="include">
        </childnode>
        <childnode refid="22840" relation="include">
        </childnode>
        <childnode refid="22841" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22834">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="22917">
        <label>/home/dev/ds-160209/src/primitives/transaction.cpp</label>
        <link refid="transaction_8cpp"/>
      </node>
      <node id="22862">
        <label>/home/dev/ds-160209/src/rpcwallet.cpp</label>
        <link refid="rpcwallet_8cpp"/>
      </node>
      <node id="22894">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="22859" relation="include">
        </childnode>
      </node>
      <node id="22872">
        <label>/home/dev/ds-160209/src/txmempool.cpp</label>
        <link refid="txmempool_8cpp"/>
      </node>
      <node id="22881">
        <label>/home/dev/ds-160209/src/stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="22882" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22829" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22859">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="22851">
        <label>/home/dev/ds-160209/src/qt/sendcoinsentry.cpp</label>
        <link refid="sendcoinsentry_8cpp"/>
      </node>
      <node id="22891">
        <label>/home/dev/ds-160209/src/qt/debugconsole.h</label>
        <link refid="debugconsole_8h"/>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22892" relation="include">
        </childnode>
      </node>
      <node id="22800">
        <label>/home/dev/ds-160209/src/util.h</label>
        <link refid="util.h"/>
        <childnode refid="22801" relation="include">
        </childnode>
        <childnode refid="22909" relation="include">
        </childnode>
        <childnode refid="22927" relation="include">
        </childnode>
        <childnode refid="22914" relation="include">
        </childnode>
        <childnode refid="22928" relation="include">
        </childnode>
        <childnode refid="22901" relation="include">
        </childnode>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22884" relation="include">
        </childnode>
        <childnode refid="22885" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
        <childnode refid="22898" relation="include">
        </childnode>
        <childnode refid="22873" relation="include">
        </childnode>
        <childnode refid="22899" relation="include">
        </childnode>
        <childnode refid="22908" relation="include">
        </childnode>
        <childnode refid="22930" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22887" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22931" relation="include">
        </childnode>
        <childnode refid="22932" relation="include">
        </childnode>
        <childnode refid="22933" relation="include">
        </childnode>
        <childnode refid="22934" relation="include">
        </childnode>
        <childnode refid="22844" relation="include">
        </childnode>
        <childnode refid="22834" relation="include">
        </childnode>
        <childnode refid="22848" relation="include">
        </childnode>
        <childnode refid="22935" relation="include">
        </childnode>
        <childnode refid="22936" relation="include">
        </childnode>
        <childnode refid="22937" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22895" relation="include">
        </childnode>
        <childnode refid="22938" relation="include">
        </childnode>
        <childnode refid="22922" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22862" relation="include">
        </childnode>
        <childnode refid="22829" relation="include">
        </childnode>
        <childnode refid="22905" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22906" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22939" relation="include">
        </childnode>
        <childnode refid="22897" relation="include">
        </childnode>
        <childnode refid="22940" relation="include">
        </childnode>
        <childnode refid="22924" relation="include">
        </childnode>
        <childnode refid="22864" relation="include">
        </childnode>
        <childnode refid="22941" relation="include">
        </childnode>
        <childnode refid="22942" relation="include">
        </childnode>
        <childnode refid="22943" relation="include">
        </childnode>
        <childnode refid="22944" relation="include">
        </childnode>
        <childnode refid="22925" relation="include">
        </childnode>
        <childnode refid="22945" relation="include">
        </childnode>
        <childnode refid="22946" relation="include">
        </childnode>
        <childnode refid="22879" relation="include">
        </childnode>
        <childnode refid="22947" relation="include">
        </childnode>
      </node>
      <node id="22889">
        <label>/home/dev/ds-160209/src/chainparams.cpp</label>
        <link refid="chainparams_8cpp"/>
      </node>
      <node id="22814">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="22875">
        <label>/home/dev/ds-160209/src/compressor.cpp</label>
        <link refid="compressor_8cpp"/>
      </node>
      <node id="22853">
        <label>/home/dev/ds-160209/src/qt/test/uritests.cpp</label>
        <link refid="uritests_8cpp"/>
      </node>
      <node id="22805">
        <label>/home/dev/ds-160209/src/wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22832" relation="include">
        </childnode>
        <childnode refid="22842" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22844" relation="include">
        </childnode>
        <childnode refid="22845" relation="include">
        </childnode>
        <childnode refid="22846" relation="include">
        </childnode>
        <childnode refid="22856" relation="include">
        </childnode>
        <childnode refid="22857" relation="include">
        </childnode>
        <childnode refid="22822" relation="include">
        </childnode>
        <childnode refid="22834" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22858" relation="include">
        </childnode>
        <childnode refid="22860" relation="include">
        </childnode>
        <childnode refid="22852" relation="include">
        </childnode>
        <childnode refid="22859" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
        <childnode refid="22861" relation="include">
        </childnode>
        <childnode refid="22825" relation="include">
        </childnode>
        <childnode refid="22854" relation="include">
        </childnode>
        <childnode refid="22814" relation="include">
        </childnode>
        <childnode refid="22862" relation="include">
        </childnode>
        <childnode refid="22863" relation="include">
        </childnode>
        <childnode refid="22864" relation="include">
        </childnode>
        <childnode refid="22865" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
        <childnode refid="22866" relation="include">
        </childnode>
      </node>
      <node id="22899">
        <label>/home/dev/ds-160209/src/scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="22900" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22905" relation="include">
        </childnode>
      </node>
      <node id="22895">
        <label>/home/dev/ds-160209/src/rpcnet.cpp</label>
        <link refid="rpcnet_8cpp"/>
      </node>
      <node id="22880">
        <label>/home/dev/ds-160209/src/txdb.cpp</label>
        <link refid="txdb_8cpp"/>
      </node>
      <node id="22852">
        <label>/home/dev/ds-160209/src/qt/signverifymessagedialog.cpp</label>
        <link refid="signverifymessagedialog_8cpp"/>
      </node>
      <node id="22813">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="22818">
        <label>/home/dev/ds-160209/src/stormnode-sync.cpp</label>
        <link refid="stormnode-sync_8cpp"/>
      </node>
      <node id="22936">
        <label>/home/dev/ds-160209/src/qt/paymentserver.cpp</label>
        <link refid="paymentserver_8cpp"/>
      </node>
      <node id="22843">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="22932">
        <label>/home/dev/ds-160209/src/netbase.cpp</label>
        <link refid="netbase_8cpp"/>
      </node>
      <node id="22930">
        <label>/home/dev/ds-160209/src/i2p.cpp</label>
        <link refid="i2p_8cpp"/>
      </node>
      <node id="22886">
        <label>/home/dev/ds-160209/src/sandstorm-relay.h</label>
        <link refid="sandstorm-relay_8h"/>
        <childnode refid="22828" relation="include">
        </childnode>
      </node>
      <node id="22801">
        <label>/home/dev/ds-160209/src/addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="22802" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22907" relation="include">
        </childnode>
        <childnode refid="22908" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
      </node>
      <node id="22857">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.cpp</label>
        <link refid="blockbrowser_8cpp"/>
      </node>
      <node id="22884">
        <label>/home/dev/ds-160209/src/stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="22881" relation="include">
        </childnode>
        <childnode refid="22885" relation="include">
        </childnode>
        <childnode refid="22887" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22928">
        <label>/home/dev/ds-160209/src/leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="22867" relation="include">
        </childnode>
        <childnode refid="22929" relation="include">
        </childnode>
      </node>
      <node id="22921">
        <label>/home/dev/ds-160209/src/rpcdump.cpp</label>
        <link refid="rpcdump_8cpp"/>
      </node>
      <node id="22916">
        <label>/home/dev/ds-160209/src/instantx.h</label>
        <link refid="instantx_8h"/>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22845" relation="include">
        </childnode>
        <childnode refid="22825" relation="include">
        </childnode>
        <childnode refid="22829" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22907">
        <label>/home/dev/ds-160209/src/addrman.cpp</label>
        <link refid="addrman_8cpp"/>
      </node>
      <node id="22879">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="22825">
        <label>/home/dev/ds-160209/src/qt/transactionrecord.cpp</label>
        <link refid="transactionrecord_8cpp"/>
      </node>
      <node id="22869">
        <label>/home/dev/ds-160209/src/undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="22870" relation="include">
        </childnode>
        <childnode refid="22874" relation="include">
        </childnode>
      </node>
      <node id="22897">
        <label>/home/dev/ds-160209/src/test/allocator_tests.cpp</label>
        <link refid="allocator__tests_8cpp"/>
      </node>
      <node id="22920">
        <label>/home/dev/ds-160209/src/base58.cpp</label>
        <link refid="base58_8cpp"/>
      </node>
      <node id="22905">
        <label>/home/dev/ds-160209/src/scrypt.cpp</label>
        <link refid="scrypt_8cpp"/>
      </node>
      <node id="22915">
        <label>/home/dev/ds-160209/src/coincontrol.h</label>
        <link refid="coincontrol_8h"/>
        <childnode refid="22822" relation="include">
        </childnode>
        <childnode refid="22850" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22896">
        <label>/home/dev/ds-160209/src/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="22864">
        <label>/home/dev/ds-160209/src/test/base64_tests.cpp</label>
        <link refid="base64__tests_8cpp"/>
      </node>
      <node id="22824">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.cpp</label>
        <link refid="stormnodemanager_8cpp"/>
      </node>
      <node id="22946">
        <label>/home/dev/ds-160209/src/timedata.cpp</label>
        <link refid="timedata_8cpp"/>
      </node>
      <node id="22849">
        <label>/home/dev/ds-160209/src/qt/sandstormconfig.cpp</label>
        <link refid="sandstormconfig_8cpp"/>
      </node>
      <node id="22817">
        <label>/home/dev/ds-160209/src/stormnode-payments.cpp</label>
        <link refid="stormnode-payments_8cpp"/>
      </node>
      <node id="22898">
        <label>/home/dev/ds-160209/src/alert.cpp</label>
        <link refid="alert_8cpp"/>
      </node>
      <node id="22912">
        <label>/home/dev/ds-160209/src/crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22865">
        <label>/home/dev/ds-160209/src/test/wallet_tests.cpp</label>
        <link refid="wallet__tests_8cpp"/>
      </node>
      <node id="22910">
        <label>/home/dev/ds-160209/src/keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="22911" relation="include">
        </childnode>
        <childnode refid="22912" relation="include">
        </childnode>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22913" relation="include">
        </childnode>
        <childnode refid="22878" relation="include">
        </childnode>
        <childnode refid="22896" relation="include">
        </childnode>
      </node>
      <node id="22860">
        <label>/home/dev/ds-160209/src/qt/optionsmodel.cpp</label>
        <link refid="optionsmodel_8cpp"/>
      </node>
      <node id="22908">
        <label>/home/dev/ds-160209/src/db.cpp</label>
        <link refid="db_8cpp"/>
      </node>
      <node id="22941">
        <label>/home/dev/ds-160209/src/test/bignum_tests.cpp</label>
        <link refid="bignum__tests_8cpp"/>
      </node>
      <node id="22927">
        <label>/home/dev/ds-160209/src/stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="22909" relation="include">
        </childnode>
        <childnode refid="22911" relation="include">
        </childnode>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22851" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22923" relation="include">
        </childnode>
      </node>
      <node id="22902">
        <label>/home/dev/ds-160209/src/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22877" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22894" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
        <childnode refid="22879" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22863">
        <label>/home/dev/ds-160209/src/test/accounting_tests.cpp</label>
        <link refid="accounting__tests_8cpp"/>
      </node>
      <node id="22923">
        <label>/home/dev/ds-160209/src/stealth.cpp</label>
        <link refid="stealth_8cpp"/>
      </node>
      <node id="22878">
        <label>/home/dev/ds-160209/src/rpcrawtransaction.cpp</label>
        <link refid="rpcrawtransaction_8cpp"/>
      </node>
      <node id="22804">
        <label>/home/dev/ds-160209/src/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22867" relation="include">
        </childnode>
        <childnode refid="22881" relation="include">
        </childnode>
        <childnode refid="22884" relation="include">
        </childnode>
        <childnode refid="22882" relation="include">
        </childnode>
        <childnode refid="22885" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
        <childnode refid="22888" relation="include">
        </childnode>
        <childnode refid="22889" relation="include">
        </childnode>
        <childnode refid="22876" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22887" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22856" relation="include">
        </childnode>
        <childnode refid="22857" relation="include">
        </childnode>
        <childnode refid="22890" relation="include">
        </childnode>
        <childnode refid="22883" relation="include">
        </childnode>
        <childnode refid="22858" relation="include">
        </childnode>
        <childnode refid="22852" relation="include">
        </childnode>
        <childnode refid="22859" relation="include">
        </childnode>
        <childnode refid="22861" relation="include">
        </childnode>
        <childnode refid="22894" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22895" relation="include">
        </childnode>
        <childnode refid="22878" relation="include">
        </childnode>
        <childnode refid="22840" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22896" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22897" relation="include">
        </childnode>
        <childnode refid="22864" relation="include">
        </childnode>
        <childnode refid="22865" relation="include">
        </childnode>
        <childnode refid="22879" relation="include">
        </childnode>
      </node>
      <node id="22828">
        <label>/home/dev/ds-160209/src/sandstorm-relay.cpp</label>
        <link refid="sandstorm-relay_8cpp"/>
      </node>
      <node id="22885">
        <label>/home/dev/ds-160209/src/stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="22802" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22883" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22886" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
      </node>
      <node id="22926">
        <label>/home/dev/ds-160209/src/test/sigopcount_tests.cpp</label>
        <link refid="sigopcount__tests_8cpp"/>
      </node>
      <node id="22877">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
      </node>
      <node id="22847">
        <label>/home/dev/ds-160209/src/qt/askpassphrasedialog.cpp</label>
        <link refid="askpassphrasedialog_8cpp"/>
      </node>
      <node id="22803">
        <label>/home/dev/ds-160209/src/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22884" relation="include">
        </childnode>
        <childnode refid="22885" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
        <childnode refid="22898" relation="include">
        </childnode>
        <childnode refid="22899" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22887" relation="include">
        </childnode>
        <childnode refid="22832" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22890" relation="include">
        </childnode>
        <childnode refid="22893" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22895" relation="include">
        </childnode>
        <childnode refid="22878" relation="include">
        </childnode>
        <childnode refid="22862" relation="include">
        </childnode>
        <childnode refid="22905" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22906" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22944">
        <label>/home/dev/ds-160209/src/test/hmac_tests.cpp</label>
        <link refid="hmac__tests_8cpp"/>
      </node>
      <node id="22826">
        <label>/home/dev/ds-160209/src/rpcstormnode-budget.cpp</label>
        <link refid="rpcstormnode-budget_8cpp"/>
      </node>
      <node id="22929">
        <label>/home/dev/ds-160209/src/leveldbwrapper.cpp</label>
        <link refid="leveldbwrapper_8cpp"/>
      </node>
      <node id="22868">
        <label>/home/dev/ds-160209/src/compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="22869" relation="include">
        </childnode>
        <childnode refid="22875" relation="include">
        </childnode>
      </node>
      <node id="22802">
        <label>/home/dev/ds-160209/src/activestormnode.cpp</label>
        <link refid="activestormnode_8cpp"/>
      </node>
      <node id="22866">
        <label>/home/dev/ds-160209/src/walletdb.cpp</label>
        <link refid="walletdb_8cpp"/>
      </node>
      <node id="22934">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.h</label>
        <link refid="stormnodemanager_8h"/>
        <childnode refid="22844" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
      </node>
      <node id="22809">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="22830">
        <label>/home/dev/ds-160209/src/stormnode-budget.cpp</label>
        <link refid="stormnode-budget_8cpp"/>
      </node>
      <node id="22874">
        <label>/home/dev/ds-160209/src/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="22888">
        <label>/home/dev/ds-160209/src/txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22877" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22861" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
        <childnode refid="22878" relation="include">
        </childnode>
        <childnode refid="22841" relation="include">
        </childnode>
        <childnode refid="22879" relation="include">
        </childnode>
        <childnode refid="22880" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22938">
        <label>/home/dev/ds-160209/src/rpcprotocol.cpp</label>
        <link refid="rpcprotocol_8cpp"/>
      </node>
      <node id="22844">
        <label>/home/dev/ds-160209/src/qt/addeditstormnode.cpp</label>
        <link refid="addeditstormnode_8cpp"/>
      </node>
      <node id="22811">
        <label>/home/dev/ds-160209/src/instantx.cpp</label>
        <link refid="instantx_8cpp"/>
      </node>
      <node id="22810">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="22890">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.h</label>
        <link refid="peertablemodel_8h"/>
        <childnode refid="22883" relation="include">
        </childnode>
        <childnode refid="22891" relation="include">
        </childnode>
        <childnode refid="22893" relation="include">
        </childnode>
      </node>
      <node id="22947">
        <label>/home/dev/ds-160209/src/util.cpp</label>
        <link refid="util_8cpp"/>
      </node>
      <node id="22837">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="22808">
        <label>/home/dev/ds-160209/src/spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="22802" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22814" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22942">
        <label>/home/dev/ds-160209/src/test/Checkpoints_tests.cpp</label>
        <link refid="_checkpoints__tests_8cpp"/>
      </node>
      <node id="22838">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="22939">
        <label>/home/dev/ds-160209/src/sync.cpp</label>
        <link refid="sync_8cpp"/>
      </node>
      <node id="22839">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="22925">
        <label>/home/dev/ds-160209/src/test/key_tests.cpp</label>
        <link refid="key__tests_8cpp"/>
      </node>
      <node id="22842">
        <label>/home/dev/ds-160209/src/miner.h</label>
        <link refid="miner_8h"/>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
      </node>
      <node id="22841">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="22893">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.cpp</label>
        <link refid="peertablemodel_8cpp"/>
      </node>
      <node id="22858">
        <label>/home/dev/ds-160209/src/qt/statisticspage.h</label>
        <link refid="statisticspage_8h"/>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22859" relation="include">
        </childnode>
      </node>
      <node id="22943">
        <label>/home/dev/ds-160209/src/test/getarg_tests.cpp</label>
        <link refid="getarg__tests_8cpp"/>
      </node>
      <node id="22924">
        <label>/home/dev/ds-160209/src/test/base58_tests.cpp</label>
        <link refid="base58__tests_8cpp"/>
      </node>
      <node id="22918">
        <label>/home/dev/ds-160209/src/qt/darksilkunits.cpp</label>
        <link refid="darksilkunits_8cpp"/>
      </node>
      <node id="22867">
        <label>/home/dev/ds-160209/src/txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="22868" relation="include">
        </childnode>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22876" relation="include">
        </childnode>
        <childnode refid="22873" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22877" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
        <childnode refid="22878" relation="include">
        </childnode>
        <childnode refid="22841" relation="include">
        </childnode>
        <childnode refid="22879" relation="include">
        </childnode>
        <childnode refid="22880" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
      </node>
      <node id="22933">
        <label>/home/dev/ds-160209/src/protocol.cpp</label>
        <link refid="protocol_8cpp"/>
      </node>
      <node id="22854">
        <label>/home/dev/ds-160209/src/qt/transactiontablemodel.cpp</label>
        <link refid="transactiontablemodel_8cpp"/>
      </node>
      <node id="22945">
        <label>/home/dev/ds-160209/src/test/mruset_tests.cpp</label>
        <link refid="mruset__tests_8cpp"/>
      </node>
      <node id="22812">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="22815">
        <label>/home/dev/ds-160209/src/rpcmisc.cpp</label>
        <link refid="rpcmisc_8cpp"/>
      </node>
      <node id="22850">
        <label>/home/dev/ds-160209/src/qt/sendcoinsdialog.cpp</label>
        <link refid="sendcoinsdialog_8cpp"/>
      </node>
      <node id="22806">
        <label>/home/dev/ds-160209/src/activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="22802" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
      </node>
      <node id="22913">
        <label>/home/dev/ds-160209/src/keystore.cpp</label>
        <link refid="keystore_8cpp"/>
      </node>
      <node id="22845">
        <label>/home/dev/ds-160209/src/qt/walletmodel.h</label>
        <link refid="walletmodel_8h"/>
        <childnode refid="22846" relation="include">
        </childnode>
        <childnode refid="22847" relation="include">
        </childnode>
        <childnode refid="22822" relation="include">
        </childnode>
        <childnode refid="22834" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22848" relation="include">
        </childnode>
        <childnode refid="22836" relation="include">
        </childnode>
        <childnode refid="22823" relation="include">
        </childnode>
        <childnode refid="22849" relation="include">
        </childnode>
        <childnode refid="22850" relation="include">
        </childnode>
        <childnode refid="22851" relation="include">
        </childnode>
        <childnode refid="22838" relation="include">
        </childnode>
        <childnode refid="22839" relation="include">
        </childnode>
        <childnode refid="22852" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
        <childnode refid="22853" relation="include">
        </childnode>
        <childnode refid="22854" relation="include">
        </childnode>
        <childnode refid="22855" relation="include">
        </childnode>
        <childnode refid="22814" relation="include">
        </childnode>
      </node>
      <node id="22931">
        <label>/home/dev/ds-160209/src/key.cpp</label>
        <link refid="key_8cpp"/>
      </node>
      <node id="22829">
        <label>/home/dev/ds-160209/src/sandstorm.cpp</label>
        <link refid="sandstorm_8cpp"/>
      </node>
      <node id="22856">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.h</label>
        <link refid="blockbrowser_8h"/>
        <childnode refid="22857" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
      </node>
      <node id="22823">
        <label>/home/dev/ds-160209/src/qt/overviewpage.cpp</label>
        <link refid="overviewpage_8cpp"/>
      </node>
      <node id="22876">
        <label>/home/dev/ds-160209/src/checkpoints.cpp</label>
        <link refid="checkpoints_8cpp"/>
      </node>
      <node id="22831">
        <label>/home/dev/ds-160209/src/stormnode.cpp</label>
        <link refid="stormnode_8cpp"/>
      </node>
      <node id="22900">
        <label>/home/dev/ds-160209/src/primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22901" relation="include">
        </childnode>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22903" relation="include">
        </childnode>
      </node>
      <node id="22892">
        <label>/home/dev/ds-160209/src/qt/debugconsole.cpp</label>
        <link refid="debugconsole_8cpp"/>
      </node>
      <node id="22904">
        <label>/home/dev/ds-160209/src/crypter.cpp</label>
        <link refid="crypter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_median_filter" prot="public">CMedianFilter</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" prot="public" static="no">
        <name>BEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((char*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="45" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ac32457d3f041434e57a2924847796fda" prot="public" static="no">
        <name>END</name>
        <param><defname>a</defname></param>
        <initializer>((char*)&amp;((&amp;(a))[1]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="46" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a4a903229f3d520fdb700f1c82586368b" prot="public" static="no">
        <name>UBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((unsigned char*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="47" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1af0f53b3b9bd67803cd1efe42c7894aa3" prot="public" static="no">
        <name>UEND</name>
        <param><defname>a</defname></param>
        <initializer>((unsigned char*)&amp;((&amp;(a))[1]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="48" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a35bf72ac971bd331fba0b3e8117bcbf9" prot="public" static="no">
        <name>ARRAYLEN</name>
        <param><defname>array</defname></param>
        <initializer>(sizeof(array)/sizeof((array)[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="49" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a10cb3e86337283d57f5a44e8b7a78b83" prot="public" static="no">
        <name>UVOIDBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((void*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="51" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ac232a2a614f4296d5917c5701f80aca1" prot="public" static="no">
        <name>CVOIDBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((const void*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="52" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ae0060367fc2c75d13e4502880dca1dd0" prot="public" static="no">
        <name>UINTBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="53" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ac34821051cc32c3a78b3586cd376194d" prot="public" static="no">
        <name>CUINTBEGIN</name>
        <param><defname>a</defname></param>
        <initializer>((const <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>*)&amp;(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="54" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a19b7466198e5f58b580c34c12dff6b54" prot="public" static="no">
        <name>PRIszx</name>
        <initializer>&quot;zx&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="68" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a427f25ac1b36af6c08edcb5d7c481e3b" prot="public" static="no">
        <name>PRIszu</name>
        <initializer>&quot;zu&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="69" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aef104e42b5ef4e0fb2a5dca9fc82e4be" prot="public" static="no">
        <name>PRIszd</name>
        <initializer>&quot;zd&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="70" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ad31e724f13b58900c9cf4ff25464934f" prot="public" static="no">
        <name>PRIpdx</name>
        <initializer>&quot;tx&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="71" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a010705285dde1c273d566ffc1790e823" prot="public" static="no">
        <name>PRIpdu</name>
        <initializer>&quot;tu&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="72" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a633f3d742890fc7614de9bbcbe9d1a30" prot="public" static="no">
        <name>PRIpdd</name>
        <initializer>&quot;td&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="73" column="11" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" prot="public" static="no">
        <name>PAIRTYPE</name>
        <param><defname>t1</defname></param>
        <param><defname>t2</defname></param>
        <initializer>std::pair&lt;t1, t2&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="77" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ab99ded389af74001a6298fc9e44e74e5" prot="public" static="no">
        <name>MAX_PATH</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="104" column="10" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1afc02c0a4258fedfb316be612bb659ba8" prot="public" static="no">
        <name>LogPrintf</name>
        <param><defname>...</defname></param>
        <initializer>LogPrint(NULL, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="158" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a0ffe181147a216a8a4f51d8ebf5bd1eb" prot="public" static="no">
        <name>MAKE_ERROR_AND_LOG_FUNC</name>
        <param><defname>n</defname></param>
        <initializer>/*   Print to debug.log if -debug=category switch is given OR category is NULL. */ \
    template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                          \
    static inline int LogPrint(const char* category, const char* format, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))  \
    {                                                                                \
        if(!<ref refid="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" kindref="member">LogAcceptCategory</ref>(category)) return 0;                                   \
        return <ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(tfm::format(format, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n)));             \
    }                                                                                \
    /*   Log error and return false */                                               \
    template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                                 \
    static inline bool error(const char* format, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))              \
    {                                                                                \
        <ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(&quot;ERROR: &quot; + tfm::format(format, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n)) + &quot;\n&quot;); \
        return false;                                                                \
    }                                                                                \
    /*   Log error and return n */                                                   \
    template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                                 \
    static inline int errorN(int rv, const char* format, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))      \
    {                                                                                \
        <ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(&quot;ERROR: &quot; + tfm::format(format, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n)) + &quot;\n&quot;); \
        return rv;                                                                   \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="163" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a59ca83deecce4e6c8b6139e7eb2870b4" prot="public" static="no">
        <name>THREAD_PRIORITY_LOWEST</name>
        <initializer>PRIO_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="565" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aff5dd15d0754df75650eb9c3bfa5f86f" prot="public" static="no">
        <name>THREAD_PRIORITY_BELOW_NORMAL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="566" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1af05a5c044382ba6895bcaad26325a693" prot="public" static="no">
        <name>THREAD_PRIORITY_NORMAL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="567" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aa38e29b911337a6e5c70282f136473fa" prot="public" static="no">
        <name>THREAD_PRIORITY_ABOVE_NORMAL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="568" column="9" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="util_8h_1a21faa333f363bd74cf1931a355b85648" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int LISTING_DEFAULT_DURATION</definition>
        <argsstring></argsstring>
        <name>LISTING_DEFAULT_DURATION</name>
        <initializer>= 7 * 24 * 60 * 60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a9a7204234b904bf6a0374facf8477796" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fStormNode</definition>
        <argsstring></argsstring>
        <name>fStormNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="118" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aa2216c761101b28e38757c5cffea3dc5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fLiteMode</definition>
        <argsstring></argsstring>
        <name>fLiteMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="119" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1acb212e467afc6516452e15829eeb58d5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fEnableInstantX</definition>
        <argsstring></argsstring>
        <name>fEnableInstantX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="120" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aaebdfd83d8252d435dfa61f10e7b86e6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nInstantXDepth</definition>
        <argsstring></argsstring>
        <name>nInstantXDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="121" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a86ef86d561556a8f20848404f267e286" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nSandstormRounds</definition>
        <argsstring></argsstring>
        <name>nSandstormRounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="122" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a8726b2c37267fdeae9fee074106be65b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nAnonymizeDarkSilkAmount</definition>
        <argsstring></argsstring>
        <name>nAnonymizeDarkSilkAmount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="123" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a307df0d2e6f7c42eace3d972d4b3f845" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nLiquidityProvider</definition>
        <argsstring></argsstring>
        <name>nLiquidityProvider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="124" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a79b2665bd3b764626eddad91b0bfe954" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fEnableSandstorm</definition>
        <argsstring></argsstring>
        <name>fEnableSandstorm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="125" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aa6e1d8c03f1d46e89708f9c282181c47" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fSandstormMultiSession</definition>
        <argsstring></argsstring>
        <name>fSandstormMultiSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="126" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aef1290adaaac08bd8da8b458c869554f" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t enforceStormnodePaymentsTime</definition>
        <argsstring></argsstring>
        <name>enforceStormnodePaymentsTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Spork enforcement enabled time </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="127" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a0143873cb7d76647f41ff47afe5a2255" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string strStormNodeAddr</definition>
        <argsstring></argsstring>
        <name>strStormNodeAddr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="128" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a87d1153c97b6c99fdad9a30af07fed6e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nStormnodeMinProtocol</definition>
        <argsstring></argsstring>
        <name>nStormnodeMinProtocol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="129" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a28422c9b2836d2d829f2b7fa9859cb0b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int keysLoaded</definition>
        <argsstring></argsstring>
        <name>keysLoaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ad5b9f1681377dd7cf6753df60c19f96e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fSucessfullyLoaded</definition>
        <argsstring></argsstring>
        <name>fSucessfullyLoaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="131" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a33994dff9c5a89fb40154e891eaae044" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &gt;</type>
        <definition>std::vector&lt;CAmount&gt; sandStormDenominations</definition>
        <argsstring></argsstring>
        <name>sandStormDenominations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>All denominations used by sandstorm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a4f8e018a639d7a5acd7275b15ff66bfa" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string strBudgetMode</definition>
        <argsstring></argsstring>
        <name>strBudgetMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="133" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a2ba7badc843121dde40a6f109d224a42" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fDebug</definition>
        <argsstring></argsstring>
        <name>fDebug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="134" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aebbe7fc2f3e1ae3d840076985c9214fa" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fDebugSmsg</definition>
        <argsstring></argsstring>
        <name>fDebugSmsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="135" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a49ade2b91028ff037557259b0729b049" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fNoSmsg</definition>
        <argsstring></argsstring>
        <name>fNoSmsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="136" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a9d6b03a0dcc515a84e620794e64b9547" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fPrintToConsole</definition>
        <argsstring></argsstring>
        <name>fPrintToConsole</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="137" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ae1c7830d95f75ba35fbc6bfa50509913" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fPrintToDebugLog</definition>
        <argsstring></argsstring>
        <name>fPrintToDebugLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="138" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a2839c7c01ad9d90fbd3ce55d32b50c6f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fServer</definition>
        <argsstring></argsstring>
        <name>fServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="139" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a71f0a1c395c717d77bdf878cb6ced96e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fCommandLine</definition>
        <argsstring></argsstring>
        <name>fCommandLine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="140" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a41393eb45547527ac7cdaede34ab701e" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string strMiscWarning</definition>
        <argsstring></argsstring>
        <name>strMiscWarning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="141" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a53f30a9fc322fa65a5c4e3732e4ad410" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fNoListen</definition>
        <argsstring></argsstring>
        <name>fNoListen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="142" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aa5e7caf6936a9a94eb088f04bcc62b97" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fLogTimestamps</definition>
        <argsstring></argsstring>
        <name>fLogTimestamps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="143" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aad5e5c200c78bd5bdec18c8707e63822" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool fReopenDebugLog</definition>
        <argsstring></argsstring>
        <name>fReopenDebugLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="144" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ac6e877d09800ef2f6ed5b4ddee4a202c" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; mapArgs</definition>
        <argsstring></argsstring>
        <name>mapArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="207" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ad1aaac805f4fdc2da7dddf5aafaa8bac" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::vector&lt;std::string&gt; &gt; mapMultiArgs</definition>
        <argsstring></argsstring>
        <name>mapMultiArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="208" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a10e84effe90309add77c3b668f18c228" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string strTimestampFormat</definition>
        <argsstring></argsstring>
        <name>strTimestampFormat</name>
        <initializer>= &quot;%Y-%m-%d %H:%M:%S UTC&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="397" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1ad679dcd7cb4960c49a8d400bcc23b0d0" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t insecure_rand_Rz</definition>
        <argsstring></argsstring>
        <name>insecure_rand_Rz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MWC RNG of George Marsaglia This is intended to be fast. It has a period of 2^59.3, though the least significant 16 bits only have a period of about 2^30.1.</para><para><simplesect kind="return"><para>random value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="472" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1a45e4e024616db2e96c5ffc34928c553b" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t insecure_rand_Rw</definition>
        <argsstring></argsstring>
        <name>insecure_rand_Rw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="473" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1365" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="util_8h_1a1255e360d073f56da2f732abf9ce42d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>nBytes</declname>
            <defname>nBytes</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* alignup</definition>
        <argsstring>(T *p)</argsstring>
        <name>alignup</name>
        <param>
          <type>T *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="81" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="81" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a424ea7e15366f453189c6b977f14b420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::filesystem::path</type>
        <definition>boost::filesystem::path GetStormnodeConfigFile</definition>
        <argsstring>()</argsstring>
        <name>GetStormnodeConfigFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1155" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac635182d3e845eda4af4fa5ab31609da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MilliSleep</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>MilliSleep</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="107" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="107" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a053c038c846a1c5184ddfcf58dabfeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsLogOpen</definition>
        <argsstring>()</argsstring>
        <name>IsLogOpen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LogAcceptCategory</definition>
        <argsstring>(const char *category)</argsstring>
        <name>LogAcceptCategory</name>
        <param>
          <type>const char *</type>
          <declname>category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="149" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="252" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LogPrintStr</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>LogPrintStr</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="151" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="280" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aa968b3d087118c9a4913566b31c7ae4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GenerateRandomString</definition>
        <argsstring>(unsigned int len=24)</argsstring>
        <name>GenerateRandomString</name>
        <param>
          <type>unsigned int</type>
          <declname>len</declname>
          <defval>24</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="153" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1162" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a22a2db2aea31bc8220b804147c1a82db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteConfigFile</definition>
        <argsstring>(FILE *configFile)</argsstring>
        <name>WriteConfigFile</name>
        <param>
          <type>FILE *</type>
          <declname>configFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="154" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1188" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a990b64b5cc5ec1ba733a834916f4c0a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FileExists</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>FileExists</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="155" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1206" bodyend="1210"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a680db3065fcd18a556ea6e1fc977e3b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int RandomIntegerRange</definition>
        <argsstring>(unsigned int nMin, unsigned int nMax)</argsstring>
        <name>RandomIntegerRange</name>
        <param>
          <type>unsigned int</type>
          <declname>nMin</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="156" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1182" bodyend="1186"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aab1f837a2366f424bdc996fdf6352171" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int LogPrint</definition>
        <argsstring>(const char *category, const char *format)</argsstring>
        <name>LogPrint</name>
        <param>
          <type>const char *</type>
          <declname>category</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="191" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1af8985880cf4ef26df0a5aa2ffcb76662" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool error</definition>
        <argsstring>(const char *format)</argsstring>
        <name>error</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="196" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0ab9cb0c182a29ed6e32f30769dc9964" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int errorN</definition>
        <argsstring>(int n, const char *format)</argsstring>
        <name>errorN</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="201" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab699fbdf803610a4e2060fd87787f7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RandAddSeed</definition>
        <argsstring>()</argsstring>
        <name>RandAddSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="210" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="163" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a786af12a87491f8dc24351d93b9833b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RandAddSeedPerfmon</definition>
        <argsstring>()</argsstring>
        <name>RandAddSeedPerfmon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="211" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="171" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintException</definition>
        <argsstring>(std::exception *pex, const char *pszThread)</argsstring>
        <name>PrintException</name>
        <param>
          <type>std::exception *</type>
          <declname>pex</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszThread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="213" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1060" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a477231880f761159de1567ad6fb98fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintExceptionContinue</definition>
        <argsstring>(std::exception *pex, const char *pszThread)</argsstring>
        <name>PrintExceptionContinue</name>
        <param>
          <type>std::exception *</type>
          <declname>pex</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszThread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="214" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1069" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a6d49c32c9c6e963f892744c909e4c3f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParseString</definition>
        <argsstring>(const std::string &amp;str, char c, std::vector&lt; std::string &gt; &amp;v)</argsstring>
        <name>ParseString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a9b8dfe28f5d12bf84ab1f179606f338b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FormatMoney</definition>
        <argsstring>(CAmount n, bool fPlus=false)</argsstring>
        <name>FormatMoney</name>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fPlus</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="216" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="339" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a1de857cb71a01a4104d131dc7c7b6b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ParseMoney</definition>
        <argsstring>(const std::string &amp;str, CAmount &amp;nRet)</argsstring>
        <name>ParseMoney</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a72faa2422b590d61f0d365e8f8877e57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ParseMoney</definition>
        <argsstring>(const char *pszIn, CAmount &amp;nRet)</argsstring>
        <name>ParseMoney</name>
        <param>
          <type>const char *</type>
          <declname>pszIn</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="218" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="368" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a5c3ee01d5e18f1a60bde06ab4dbcdbd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SanitizeString</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>SanitizeString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a5a787187ddd5c52baae692350ec5a2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; ParseHex</definition>
        <argsstring>(const char *psz)</argsstring>
        <name>ParseHex</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="220" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="450" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0fc7535fb01fcf081fd8791173688939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; ParseHex</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>ParseHex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a9f23401f4b871ed693f7a96a9ba40c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsHex</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>IsHex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ad7d5462ec6ec6e23493c839d01da7424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; DecodeBase64</definition>
        <argsstring>(const char *p, bool *pfInvalid=NULL)</argsstring>
        <name>DecodeBase64</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>pfInvalid</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="223" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="629" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1abe1060fd27543de8bf9806678f4e91eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DecodeBase64</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>DecodeBase64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab088e17c477707c187113686457eabb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string EncodeBase64</definition>
        <argsstring>(const unsigned char *pch, size_t len)</argsstring>
        <name>EncodeBase64</name>
        <param>
          <type>const unsigned char *</type>
          <declname>pch</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="225" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="578" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ad00e71aa1ead536a941d6f7d7c0292ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string EncodeBase64</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>EncodeBase64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0071c0bf91d611895e43999e62666c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref></type>
        <definition>SecureString DecodeBase64Secure</definition>
        <argsstring>(const SecureString &amp;input)</argsstring>
        <name>DecodeBase64Secure</name>
        <param>
          <type>const <ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="227" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="746" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a49f6f1cd42cb886762be52c72466dc7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref></type>
        <definition>SecureString EncodeBase64Secure</definition>
        <argsstring>(const SecureString &amp;input)</argsstring>
        <name>EncodeBase64Secure</name>
        <param>
          <type>const <ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="228" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="719" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a58e69b413820ff62a4f203eb5c1a827a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; DecodeBase32</definition>
        <argsstring>(const char *p, bool *pfInvalid=NULL)</argsstring>
        <name>DecodeBase32</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>pfInvalid</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="229" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="839" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a31f169e89be696c17678f84b74c1666c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DecodeBase32</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>DecodeBase32</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aed1944a78afffe9d5f3129e656dc8aa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string EncodeBase32</definition>
        <argsstring>(const unsigned char *pch, size_t len)</argsstring>
        <name>EncodeBase32</name>
        <param>
          <type>const unsigned char *</type>
          <declname>pch</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="231" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="775" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a352475038cfcd87d2d7d9a098d96a9d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string EncodeBase32</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>EncodeBase32</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a4cfc6f116964c12bc24442828c2da007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParseParameters</definition>
        <argsstring>(int argc, const char *const argv[])</argsstring>
        <name>ParseParameters</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="233" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="491" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a134e5ff2f94e103c1de7b642675546ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WildcardMatch</definition>
        <argsstring>(const char *psz, const char *mask)</argsstring>
        <name>WildcardMatch</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="234" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="963" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a6e9c69474d54f690c6d9f068e7383727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WildcardMatch</definition>
        <argsstring>(const std::string &amp;str, const std::string &amp;mask)</argsstring>
        <name>WildcardMatch</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a4458ca67cacd593b21c8e1386d192064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TryCreateDirectory</definition>
        <argsstring>(const boost::filesystem::path &amp;p)</argsstring>
        <name>TryCreateDirectory</name>
        <param>
          <type>const boost::filesystem::path &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ignores exceptions thrown by Boost&apos;s create_directory if the requested directory exists. Specifically handles case where path p exists, but it wasn&apos;t possible for the user to write to the parent directory. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="236" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1280" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7572b77c2a5191de8d40d4050322ab84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FileCommit</definition>
        <argsstring>(FILE *fileout)</argsstring>
        <name>FileCommit</name>
        <param>
          <type>FILE *</type>
          <declname>fileout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="237" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1294" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ad8f8509a84cc6f53344a5ac76369c327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RenameOver</definition>
        <argsstring>(boost::filesystem::path src, boost::filesystem::path dest)</argsstring>
        <name>RenameOver</name>
        <param>
          <type>boost::filesystem::path</type>
          <declname>src</declname>
        </param>
        <param>
          <type>boost::filesystem::path</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="238" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1264" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab272995de020a3bcbf743be630e485c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::filesystem::path</type>
        <definition>boost::filesystem::path GetDefaultDataDir</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultDataDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="239" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1077" bodyend="1104"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0d247b470b387d7cd3f039bd26166007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::filesystem::path &amp;</type>
        <definition>const boost::filesystem::path&amp; GetDataDir</definition>
        <argsstring>(bool fNetSpecific=true)</argsstring>
        <name>GetDataDir</name>
        <param>
          <type>bool</type>
          <declname>fNetSpecific</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="240" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1109" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7d86fadf98dfaba55f80b9be0ab0f978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::filesystem::path</type>
        <definition>boost::filesystem::path GetConfigFile</definition>
        <argsstring>()</argsstring>
        <name>GetConfigFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="241" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1148" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::filesystem::path</type>
        <definition>boost::filesystem::path GetPidFile</definition>
        <argsstring>()</argsstring>
        <name>GetPidFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="242" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1245" bodyend="1250"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0ec1d8fc76760232b016335fdcf7c539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CreatePidFile</definition>
        <argsstring>(const boost::filesystem::path &amp;path, pid_t pid)</argsstring>
        <name>CreatePidFile</name>
        <param>
          <type>const boost::filesystem::path &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="244" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1253" bodyend="1261"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a9e585b4be467fe1d3ee978214ceff5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReadConfigFile</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; &amp;mapSettingsRet, std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;mapMultiSettingsRet)</argsstring>
        <name>ReadConfigFile</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>mapSettingsRet</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;</type>
          <declname>mapMultiSettingsRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1accff8f395fb4e283af38111daf096f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string getTimeString</definition>
        <argsstring>(int64_t timestamp, char *buffer, size_t nBuffer)</argsstring>
        <name>getTimeString</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="251" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1304" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a6476623f1d1477b76ae3f751f6db644b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string bytesReadable</definition>
        <argsstring>(uint64_t nBytes)</argsstring>
        <name>bytesReadable</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>nBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="252" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1314" bodyend="1326"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a37fca7e305fe0caa306b23fdb37f88e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShrinkDebugFile</definition>
        <argsstring>()</argsstring>
        <name>ShrinkDebugFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="254" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1328" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1acf52c2aa8213c7b15e26594a2264ed8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetRandBytes</definition>
        <argsstring>(unsigned char *buf, int num)</argsstring>
        <name>GetRandBytes</name>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="255" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="154" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0e44e088732172da6662db2d5e37d4b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetRandInt</definition>
        <argsstring>(int nMax)</argsstring>
        <name>GetRandInt</name>
        <param>
          <type>int</type>
          <declname>nMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="256" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a27d9149d522b1fa87d84e5e9ca902aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t GetRand</definition>
        <argsstring>(uint64_t nMax)</argsstring>
        <name>GetRand</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>nMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="257" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="198" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1af3aedae75efabb170337a497457f7ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 GetRandHash</definition>
        <argsstring>()</argsstring>
        <name>GetRandHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="258" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="218" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a46fac5fba8ba905b5f9acb364f5d8c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetTime</definition>
        <argsstring>()</argsstring>
        <name>GetTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="259" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1352" bodyend="1357"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a79d4c36b511d6690ab0bbde0e0da9251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetMockTime</definition>
        <argsstring>(int64_t nMockTimeIn)</argsstring>
        <name>SetMockTime</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nMockTimeIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="260" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1359" bodyend="1362"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac3e3098552063f228d9deac38a8b9848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FormatFullVersion</definition>
        <argsstring>()</argsstring>
        <name>FormatFullVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="261" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1393" bodyend="1396"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7e6809cdbfc7f83b46f83caea740894d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FormatSubVersion</definition>
        <argsstring>(const std::string &amp;name, int nClientVersion, const std::vector&lt; std::string &gt; &amp;comments)</argsstring>
        <name>FormatSubVersion</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nClientVersion</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>comments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="262" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1406" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1adf94c00a5ac719c92a2f1bb2f8b2167f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void runCommand</definition>
        <argsstring>(std::string strCommand)</argsstring>
        <name>runCommand</name>
        <param>
          <type>std::string</type>
          <declname>strCommand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="263" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1434" bodyend="1439"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1acb8d6b822bc1bfa609bf43bbac1a0d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TruncateFile</definition>
        <argsstring>(FILE *file, unsigned int length)</argsstring>
        <name>TruncateFile</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="264" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1475" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a880a215d9e931432b095084c756a49bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ParseInt32</definition>
        <argsstring>(const std::string &amp;str, int32_t *out)</argsstring>
        <name>ParseInt32</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert string to signed 32-bit integer with strict parse error feedback. <simplesect kind="return"><para>true if the entire string could be parsed as valid integer, false if not the entire string could be parsed or when overflow or underflow occurred. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="276" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="993" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab754c84a5a52f6853642e86447ce460e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FormatParagraph</definition>
        <argsstring>(const std::string in, size_t width=79, size_t indent=0)</argsstring>
        <name>FormatParagraph</name>
        <param>
          <type>const std::string</type>
          <declname>in</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
          <defval>79</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>indent</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Format a paragraph of text to a fixed width, adding spaces for indentation to any added line. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="283" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1007" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ab7a07cad3bcdf95935f4f6b5c039c546" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string i64tostr</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>i64tostr</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="287" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a565b3ea015b133d01dc52b4ec6e45f07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string itostr</definition>
        <argsstring>(int n)</argsstring>
        <name>itostr</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="292" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a22916d155600c742c4efad727462588e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t atoi64</definition>
        <argsstring>(const char *psz)</argsstring>
        <name>atoi64</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="297" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="297" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aba1c6f08c135078a7af3385ed3e91ef3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t atoi64</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>atoi64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="306" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="306" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int atoi</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>atoi</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="315" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ae3939088d6c4178bb1f19f693a005275" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int roundint</definition>
        <argsstring>(double d)</argsstring>
        <name>roundint</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="320" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a27346c9c6df4174d2fa64b798b98eff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t roundint64</definition>
        <argsstring>(double d)</argsstring>
        <name>roundint64</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="325" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a351cbd451bee96e6badbaa284ba3c614" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t abs64</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>abs64</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="330" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a8bd08fb413d92858692abb1ab182014c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leftTrim</definition>
        <argsstring>(std::string src, char chr)</argsstring>
        <name>leftTrim</name>
        <param>
          <type>std::string</type>
          <declname>src</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="335" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="335" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ace13a819ca4e98c22847d26b3b357e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string HexStr</definition>
        <argsstring>(const T itbegin, const T itend, bool fSpaces=false)</argsstring>
        <name>HexStr</name>
        <param>
          <type>const T</type>
          <declname>itbegin</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>itend</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fSpaces</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="346" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="346" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7efe75f50ba1dbd0183952dd42146a92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string HexStr</definition>
        <argsstring>(const T &amp;vch, bool fSpaces=false)</argsstring>
        <name>HexStr</name>
        <param>
          <type>const T &amp;</type>
          <declname>vch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fSpaces</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="365" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1acd4d9988b9bb3f31fddf72a34b2bc37f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetPerformanceCounter</definition>
        <argsstring>()</argsstring>
        <name>GetPerformanceCounter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="370" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="370" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetTimeMillis</definition>
        <argsstring>()</argsstring>
        <name>GetTimeMillis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="383" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="383" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0c5a06b50cd805b1923552114494c029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetTimeMicros</definition>
        <argsstring>()</argsstring>
        <name>GetTimeMicros</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="389" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="389" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a749bc6776c8ec72d7c5e4dea56aee415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DateTimeStrFormat</definition>
        <argsstring>(const char *pszFormat, int64_t nTime)</argsstring>
        <name>DateTimeStrFormat</name>
        <param>
          <type>const char *</type>
          <declname>pszFormat</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="395" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1465" bodyend="1473"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a5d620750c7cb9c95ce815e3dd036e134" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DateTimeStrFormat</definition>
        <argsstring>(int64_t nTime)</argsstring>
        <name>DateTimeStrFormat</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="398" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a952a05da17d51c4107d353d4d1dafb4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void skipspaces</definition>
        <argsstring>(T &amp;it)</argsstring>
        <name>skipspaces</name>
        <param>
          <type>T &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="405" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="405" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac0165e18ce3be89a2e0731e27d54b478" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsSwitchChar</definition>
        <argsstring>(char c)</argsstring>
        <name>IsSwitchChar</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="411" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="411" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a24f685720bf40370e5bd2a192ad50cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GetArg</definition>
        <argsstring>(const std::string &amp;strArg, const std::string &amp;strDefault)</argsstring>
        <name>GetArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>strDefault</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return string argument or default value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to get (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default</parametername>
</parameternamelist>
<parameterdescription>
<para>(e.g. &quot;1&quot;) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>command-line argument or default value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="427" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="536" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a1bade4f0fca4498b4911abdbe4227dc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetArg</definition>
        <argsstring>(const std::string &amp;strArg, int64_t nDefault)</argsstring>
        <name>GetArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nDefault</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return integer argument or default value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to get (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default</parametername>
</parameternamelist>
<parameterdescription>
<para>(e.g. 1) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>command-line argument (0 if invalid number) or default value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="436" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="543" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a64d956f1dda7f9a80ab5d594532b906d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetBoolArg</definition>
        <argsstring>(const std::string &amp;strArg, bool fDefault)</argsstring>
        <name>GetBoolArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fDefault</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return boolean argument or default value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to get (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default</parametername>
</parameternamelist>
<parameterdescription>
<para>(true or false) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>command-line argument or default value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="445" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="550" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a9d94ca9f7c1496626992d1873e3f69df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SoftSetArg</definition>
        <argsstring>(const std::string &amp;strArg, const std::string &amp;strValue)</argsstring>
        <name>SoftSetArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>strValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an argument if it doesn&apos;t already have a value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to set (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Value (e.g. &quot;1&quot;) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if argument gets set, false if it already had a value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="454" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="561" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1acb3060cad083d342898b6055e43692ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SoftSetBoolArg</definition>
        <argsstring>(const std::string &amp;strArg, bool fValue)</argsstring>
        <name>SoftSetBoolArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strArg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a boolean argument if it doesn&apos;t already have a value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strArg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to set (e.g. &quot;-foo&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Value (e.g. false) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if argument gets set, false if it already had a value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="463" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="569" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ae8f7a2f188545bbbf746160adc42038e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t insecure_rand</definition>
        <argsstring>(void)</argsstring>
        <name>insecure_rand</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="474" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="474" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1abef4e13668f53ac5404c796462aed9b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void seed_insecure_rand</definition>
        <argsstring>(bool fDeterministic=false)</argsstring>
        <name>seed_insecure_rand</name>
        <param>
          <type>bool</type>
          <declname>fDeterministic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Seed insecure_rand using the random pool. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Deterministic</parametername>
</parameternamelist>
<parameterdescription>
<para>Use a determinstic seed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="485" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1366" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a7ddc80f6840eae3277e324aec17c2568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool TimingResistantEqual</definition>
        <argsstring>(const T &amp;a, const T &amp;b)</argsstring>
        <name>TimingResistantEqual</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timing-attack-resistant comparison. Takes time proportional to length of first argument. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="493" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="493" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetThreadPriority</definition>
        <argsstring>(int nPriority)</argsstring>
        <name>SetThreadPriority</name>
        <param>
          <type>int</type>
          <declname>nPriority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="570" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="570" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RenameThread</definition>
        <argsstring>(const char *name)</argsstring>
        <name>RenameThread</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="582" column="1" bodyfile="/home/dev/ds-160209/src/util.cpp" bodystart="1441" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t ByteReverse</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>ByteReverse</name>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="584" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="584" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void LoopForever</definition>
        <argsstring>(const char *name, Callable func, int64_t msecs)</argsstring>
        <name>LoopForever</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Callable</type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>msecs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="597" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="597" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TraceThread</definition>
        <argsstring>(const char *name, Callable func)</argsstring>
        <name>TraceThread</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Callable</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/util.h" line="623" column="1" bodyfile="/home/dev/ds-160209/src/util.h" bodystart="623" bodyend="644"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DARKSILK_UTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DARKSILK_UTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/resource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serialize_8h" kindref="compound">serialize.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tinyformat_8h" kindref="compound">tinyformat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="amount_8h" kindref="compound">amount.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem/path.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/date_time/gregorian/gregorian_types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/date_time/posix_time/posix_time_types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/evp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/buffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/crypto.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>OPENSSL_cleanse()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/rand.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LISTING_DEFAULT_DURATION<sp/>=<sp/>7<sp/>*<sp/>24<sp/>*<sp/>60<sp/>*<sp/>60;<sp/></highlight><highlight class="comment">//<sp/>One<sp/>Week</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((char*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="util_8h_1ac32457d3f041434e57a2924847796fda" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>END(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((char*)&amp;((&amp;(a))[1]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="util_8h_1a4a903229f3d520fdb700f1c82586368b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((unsigned<sp/>char*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="util_8h_1af0f53b3b9bd67803cd1efe42c7894aa3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UEND(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((unsigned<sp/>char*)&amp;((&amp;(a))[1]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="util_8h_1a35bf72ac971bd331fba0b3e8117bcbf9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARRAYLEN(array)<sp/><sp/><sp/><sp/><sp/>(sizeof(array)/sizeof((array)[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="util_8h_1a10cb3e86337283d57f5a44e8b7a78b83" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UVOIDBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="util_8h_1ac232a2a614f4296d5917c5701f80aca1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CVOIDBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((const<sp/>void*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="util_8h_1ae0060367fc2c75d13e4502880dca1dd0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINTBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="util_8h_1ac34821051cc32c3a78b3586cd376194d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CUINTBEGIN(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((const<sp/>uint32_t*)&amp;(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Format<sp/>characters<sp/>for<sp/>(s)size_t<sp/>and<sp/>ptrdiff_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>||<sp/>defined(__MSVCRT__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>(s)size_t<sp/>and<sp/>ptrdiff_t<sp/>have<sp/>the<sp/>same<sp/>size<sp/>specifier<sp/>in<sp/>MSVC:</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>http://msdn.microsoft.com/en-us/library/tcxf1dw6%28v=vs.100%29.aspx</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszx<sp/><sp/><sp/><sp/>&quot;Ix&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszu<sp/><sp/><sp/><sp/>&quot;Iu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszd<sp/><sp/><sp/><sp/>&quot;Id&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdx<sp/><sp/><sp/><sp/>&quot;Ix&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdu<sp/><sp/><sp/><sp/>&quot;Iu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdd<sp/><sp/><sp/><sp/>&quot;Id&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>C99<sp/>standard<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="util_8h_1a19b7466198e5f58b580c34c12dff6b54" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszx<sp/><sp/><sp/><sp/>&quot;zx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="util_8h_1a427f25ac1b36af6c08edcb5d7c481e3b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszu<sp/><sp/><sp/><sp/>&quot;zu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="util_8h_1aef104e42b5ef4e0fb2a5dca9fc82e4be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIszd<sp/><sp/><sp/><sp/>&quot;zd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="util_8h_1ad31e724f13b58900c9cf4ff25464934f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdx<sp/><sp/><sp/><sp/>&quot;tx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="util_8h_1a010705285dde1c273d566ffc1790e823" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdu<sp/><sp/><sp/><sp/>&quot;tu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="util_8h_1a633f3d742890fc7614de9bbcbe9d1a30" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PRIpdd<sp/><sp/><sp/><sp/>&quot;td&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>needed<sp/>because<sp/>the<sp/>foreach<sp/>macro<sp/>can&apos;t<sp/>get<sp/>over<sp/>the<sp/>comma<sp/>in<sp/>pair&lt;t1,<sp/>t2&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAIRTYPE(t1,<sp/>t2)<sp/><sp/><sp/><sp/>std::pair&lt;t1,<sp/>t2&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Align<sp/>by<sp/>increasing<sp/>pointer,<sp/>must<sp/>have<sp/>extra<sp/>space<sp/>at<sp/>end<sp/>of<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBytes,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="81" refid="util_8h_1a1255e360d073f56da2f732abf9ce42d2" refkind="member"><highlight class="normal">T*<sp/><ref refid="util_8h_1a1255e360d073f56da2f732abf9ce42d2" kindref="member">alignup</ref>(T*<sp/>p)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>ptr;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>u;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>u.ptr<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>u.n<sp/>=<sp/>(u.n<sp/>+<sp/>(nBytes-1))<sp/>&amp;<sp/>~(nBytes-1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u.ptr;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">boost::filesystem::path<sp/><ref refid="util_8h_1a424ea7e15366f453189c6b977f14b420" kindref="member">GetStormnodeConfigFile</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_NOSIGNAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_DONTWAIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>S_IRUSR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_IRUSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_IWUSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="util_8h_1ab99ded389af74001a6298fc9e44e74e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PATH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BOOST_VERSION<sp/>&gt;=<sp/>105000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::this_thread::sleep_for(boost::chrono::milliseconds(n));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::this_thread::sleep(boost::posix_time::milliseconds(n));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//Dark<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1acb212e467afc6516452e15829eeb58d5" kindref="member">fEnableInstantX</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aaebdfd83d8252d435dfa61f10e7b86e6" kindref="member">nInstantXDepth</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a86ef86d561556a8f20848404f267e286" kindref="member">nSandstormRounds</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a8726b2c37267fdeae9fee074106be65b" kindref="member">nAnonymizeDarkSilkAmount</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a307df0d2e6f7c42eace3d972d4b3f845" kindref="member">nLiquidityProvider</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a79b2665bd3b764626eddad91b0bfe954" kindref="member">fEnableSandstorm</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa6e1d8c03f1d46e89708f9c282181c47" kindref="member">fSandstormMultiSession</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1aef1290adaaac08bd8da8b458c869554f" kindref="member">enforceStormnodePaymentsTime</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a0143873cb7d76647f41ff47afe5a2255" kindref="member">strStormNodeAddr</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a87d1153c97b6c99fdad9a30af07fed6e" kindref="member">nStormnodeMinProtocol</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a28422c9b2836d2d829f2b7fa9859cb0b" kindref="member">keysLoaded</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ad5b9f1681377dd7cf6753df60c19f96e" kindref="member">fSucessfullyLoaded</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::vector&lt;CAmount&gt;<sp/><ref refid="util_8h_1a33994dff9c5a89fb40154e891eaae044" kindref="member">sandStormDenominations</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a4f8e018a639d7a5acd7275b15ff66bfa" kindref="member">strBudgetMode</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aebbe7fc2f3e1ae3d840076985c9214fa" kindref="member">fDebugSmsg</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a49ade2b91028ff037557259b0729b049" kindref="member">fNoSmsg</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9d6b03a0dcc515a84e620794e64b9547" kindref="member">fPrintToConsole</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ae1c7830d95f75ba35fbc6bfa50509913" kindref="member">fPrintToDebugLog</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a2839c7c01ad9d90fbd3ce55d32b50c6f" kindref="member">fServer</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a71f0a1c395c717d77bdf878cb6ced96e" kindref="member">fCommandLine</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a41393eb45547527ac7cdaede34ab701e" kindref="member">strMiscWarning</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a53f30a9fc322fa65a5c4e3732e4ad410" kindref="member">fNoListen</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa5e7caf6936a9a94eb088f04bcc62b97" kindref="member">fLogTimestamps</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aad5e5c200c78bd5bdec18c8707e63822" kindref="member">fReopenDebugLog</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a053c038c846a1c5184ddfcf58dabfeec" kindref="member">IsLogOpen</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>true<sp/>if<sp/>log<sp/>accepts<sp/>specified<sp/>category<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" kindref="member">LogAcceptCategory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>category);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Send<sp/>a<sp/>string<sp/>to<sp/>the<sp/>log<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;str);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">std::string<sp/><ref refid="util_8h_1aa968b3d087118c9a4913566b31c7ae4b" kindref="member">GenerateRandomString</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>24);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a22a2db2aea31bc8220b804147c1a82db" kindref="member">WriteConfigFile</ref>(FILE*<sp/>configFile);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a990b64b5cc5ec1ba733a834916f4c0a7" kindref="member">FileExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a680db3065fcd18a556ea6e1fc977e3b0" kindref="member">RandomIntegerRange</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMin,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMax);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LogPrintf(...)<sp/>LogPrint(NULL,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>When<sp/>we<sp/>switch<sp/>to<sp/>C++11,<sp/>this<sp/>can<sp/>be<sp/>switched<sp/>to<sp/>variadic<sp/>templates<sp/>instead</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>macro-based<sp/>construction<sp/>(see<sp/>tinyformat.h).</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="util_8h_1a0ffe181147a216a8a4f51d8ebf5bd1eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAKE_ERROR_AND_LOG_FUNC(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Print<sp/>to<sp/>debug.log<sp/>if<sp/>-debug=category<sp/>switch<sp/>is<sp/>given<sp/>OR<sp/>category<sp/>is<sp/>NULL.<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>int<sp/>LogPrint(const<sp/>char*<sp/>category,<sp/>const<sp/>char*<sp/>format,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!LogAcceptCategory(category))<sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>LogPrintStr(tfm::format(format,<sp/>TINYFORMAT_PASSARGS(n)));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Log<sp/>error<sp/>and<sp/>return<sp/>false<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>bool<sp/>error(const<sp/>char*<sp/>format,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintStr(&quot;ERROR:<sp/>&quot;<sp/>+<sp/>tfm::format(format,<sp/>TINYFORMAT_PASSARGS(n))<sp/>+<sp/>&quot;\n&quot;);<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Log<sp/>error<sp/>and<sp/>return<sp/>n<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>int<sp/>errorN(int<sp/>rv,<sp/>const<sp/>char*<sp/>format,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintStr(&quot;ERROR:<sp/>&quot;<sp/>+<sp/>tfm::format(format,<sp/>TINYFORMAT_PASSARGS(n))<sp/>+<sp/>&quot;\n&quot;);<sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>rv;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="tinyformat_8h_1ae2e4f3482a2c4746b3f7429d62e252a7" kindref="member">TINYFORMAT_FOREACH_ARGNUM</ref>(<ref refid="util_8h_1a0ffe181147a216a8a4f51d8ebf5bd1eb" kindref="member">MAKE_ERROR_AND_LOG_FUNC</ref>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Zero-arg<sp/>versions<sp/>of<sp/>logging<sp/>and<sp/>error,<sp/>these<sp/>are<sp/>not<sp/>covered<sp/>by</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>TINYFORMAT_FOREACH_ARGNUM</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">static<sp/>inline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LogPrint(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>category,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8h_1a343d2a13efe00125f78d25dafb0a8d98" kindref="member">LogAcceptCategory</ref>(category))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(format);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(std::string(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>format<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorN(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afd4c3002b2797c0560adddb6af3ca1da" kindref="member">LogPrintStr</ref>(std::string(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>format<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="util_8h_1ac6e877d09800ef2f6ed5b4ddee4a202c" kindref="member">mapArgs</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::vector&lt;std::string&gt;<sp/>&gt;<sp/><ref refid="util_8h_1ad1aaac805f4fdc2da7dddf5aafaa8bac" kindref="member">mapMultiArgs</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ab699fbdf803610a4e2060fd87787f7e0" kindref="member">RandAddSeed</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a786af12a87491f8dc24351d93b9833b6" kindref="member">RandAddSeedPerfmon</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(std::exception*<sp/>pex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszThread);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a477231880f761159de1567ad6fb98fac" kindref="member">PrintExceptionContinue</ref>(std::exception*<sp/>pex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszThread);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a6d49c32c9c6e963f892744c909e4c3f1" kindref="member">ParseString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>v);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a9b8dfe28f5d12bf84ab1f179606f338b" kindref="member">FormatMoney</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fPlus=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a1de857cb71a01a4104d131dc7c7b6b76" kindref="member">ParseMoney</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nRet);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a1de857cb71a01a4104d131dc7c7b6b76" kindref="member">ParseMoney</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszIn,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nRet);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a5c3ee01d5e18f1a60bde06ab4dbcdbd1" kindref="member">SanitizeString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">std::vector&lt;unsigned<sp/>char&gt;<sp/><ref refid="util_8h_1a5a787187ddd5c52baae692350ec5a2cb" kindref="member">ParseHex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>psz);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">std::vector&lt;unsigned<sp/>char&gt;<sp/><ref refid="util_8h_1a5a787187ddd5c52baae692350ec5a2cb" kindref="member">ParseHex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9f23401f4b871ed693f7a96a9ba40c58" kindref="member">IsHex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">std::vector&lt;unsigned<sp/>char&gt;<sp/><ref refid="util_8h_1ad7d5462ec6ec6e23493c839d01da7424" kindref="member">DecodeBase64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>pfInvalid<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ad7d5462ec6ec6e23493c839d01da7424" kindref="member">DecodeBase64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ab088e17c477707c187113686457eabb8" kindref="member">EncodeBase64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ab088e17c477707c187113686457eabb8" kindref="member">EncodeBase64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref><sp/><ref refid="util_8h_1a0071c0bf91d611895e43999e62666c96" kindref="member">DecodeBase64Secure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref>&amp;<sp/>input);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref><sp/><ref refid="util_8h_1a49f6f1cd42cb886762be52c72466dc7e" kindref="member">EncodeBase64Secure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="allocators_8h_1a396ed773a5ac24aec28c8f7dc413c7ac" kindref="member">SecureString</ref>&amp;<sp/>input);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">std::vector&lt;unsigned<sp/>char&gt;<sp/><ref refid="util_8h_1a58e69b413820ff62a4f203eb5c1a827a" kindref="member">DecodeBase32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>pfInvalid<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a58e69b413820ff62a4f203eb5c1a827a" kindref="member">DecodeBase32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">std::string<sp/><ref refid="util_8h_1aed1944a78afffe9d5f3129e656dc8aa6" kindref="member">EncodeBase32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">std::string<sp/><ref refid="util_8h_1aed1944a78afffe9d5f3129e656dc8aa6" kindref="member">EncodeBase32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a4cfc6f116964c12bc24442828c2da007" kindref="member">ParseParameters</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>argv[]);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a134e5ff2f94e103c1de7b642675546ca" kindref="member">WildcardMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>psz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mask);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a134e5ff2f94e103c1de7b642675546ca" kindref="member">WildcardMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a4458ca67cacd593b21c8e1386d192064" kindref="member">TryCreateDirectory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::path&amp;<sp/>p);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a7572b77c2a5191de8d40d4050322ab84" kindref="member">FileCommit</ref>(FILE<sp/>*fileout);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ad8f8509a84cc6f53344a5ac76369c327" kindref="member">RenameOver</ref>(boost::filesystem::path<sp/>src,<sp/>boost::filesystem::path<sp/>dest);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">boost::filesystem::path<sp/><ref refid="util_8h_1ab272995de020a3bcbf743be630e485c6" kindref="member">GetDefaultDataDir</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::path<sp/>&amp;<ref refid="util_8h_1a0d247b470b387d7cd3f039bd26166007" kindref="member">GetDataDir</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fNetSpecific<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">boost::filesystem::path<sp/><ref refid="util_8h_1a7d86fadf98dfaba55f80b9be0ab0f978" kindref="member">GetConfigFile</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal">boost::filesystem::path<sp/><ref refid="util_8h_1a91d2f3eb3a1bb92ab4eb1bd4b713a99e" kindref="member">GetPidFile</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a0ec1d8fc76760232b016335fdcf7c539" kindref="member">CreatePidFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::filesystem::path<sp/>&amp;path,<sp/>pid_t<sp/>pid);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9e585b4be467fe1d3ee978214ceff5d2" kindref="member">ReadConfigFile</ref>(std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>mapSettingsRet,<sp/>std::map&lt;std::string,<sp/>std::vector&lt;std::string&gt;<sp/>&gt;&amp;<sp/>mapMultiSettingsRet);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">boost::filesystem::path<sp/>GetSpecialFolderPath(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFolder,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fCreate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">std::string<sp/><ref refid="util_8h_1accff8f395fb4e283af38111daf096f0d" kindref="member">getTimeString</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>timestamp,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBuffer);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a6476623f1d1477b76ae3f751f6db644b" kindref="member">bytesReadable</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nBytes);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a37fca7e305fe0caa306b23fdb37f88e2" kindref="member">ShrinkDebugFile</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1acf52c2aa8213c7b15e26594a2264ed8a" kindref="member">GetRandBytes</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a0e44e088732172da6662db2d5e37d4b2" kindref="member">GetRandInt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMax);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="util_8h_1a27d9149d522b1fa87d84e5e9ca902aef" kindref="member">GetRand</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nMax);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="util_8h_1af3aedae75efabb170337a497457f7ecf" kindref="member">GetRandHash</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a79d4c36b511d6690ab0bbde0e0da9251" kindref="member">SetMockTime</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nMockTimeIn);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ac3e3098552063f228d9deac38a8b9848" kindref="member">FormatFullVersion</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a7e6809cdbfc7f83b46f83caea740894d" kindref="member">FormatSubVersion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClientVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>comments);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1adf94c00a5ac719c92a2f1bb2f8b2167f" kindref="member">runCommand</ref>(std::string<sp/>strCommand);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1acb8d6b822bc1bfa609bf43bbac1a0d44" kindref="member">TruncateFile</ref>(FILE<sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">std::string<sp/>FormatI2PNativeFullVersion();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a880a215d9e931432b095084c756a49bb" kindref="member">ParseInt32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref><sp/>*out);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ab754c84a5a52f6853642e86447ce460e" kindref="member">FormatParagraph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>in,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width=79,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indent=0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="utilstrencodings_8h_1ab7a07cad3bcdf95935f4f6b5c039c546" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1ab7a07cad3bcdf95935f4f6b5c039c546" kindref="member">i64tostr</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="utilstrencodings_8h_1a565b3ea015b133d01dc52b4ec6e45f07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a565b3ea015b133d01dc52b4ec6e45f07" kindref="member">itostr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="utilstrencodings_8h_1a22916d155600c742c4efad727462588e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a22916d155600c742c4efad727462588e" kindref="member">atoi64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>psz)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_atoi64(psz);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strtoll(psz,<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="utilstrencodings_8h_1aba1c6f08c135078a7af3385ed3e91ef3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a22916d155600c742c4efad727462588e" kindref="member">atoi64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_atoi64(str.c_str());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strtoll(str.c_str(),<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="utilstrencodings_8h_1aa5ce96ec36f4413f820cec9c1831c070" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(str.c_str());</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="util_8h_1ae3939088d6c4178bb1f19f693a005275" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ae3939088d6c4178bb1f19f693a005275" kindref="member">roundint</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(d<sp/>&gt;<sp/>0<sp/>?<sp/>d<sp/>+<sp/>0.5<sp/>:<sp/>d<sp/>-<sp/>0.5);</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="util_8h_1a27346c9c6df4174d2fa64b798b98eff5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a27346c9c6df4174d2fa64b798b98eff5" kindref="member">roundint64</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)(d<sp/>&gt;<sp/>0<sp/>?<sp/>d<sp/>+<sp/>0.5<sp/>:<sp/>d<sp/>-<sp/>0.5);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="util_8h_1a351cbd451bee96e6badbaa284ba3c614" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a351cbd451bee96e6badbaa284ba3c614" kindref="member">abs64</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>0<sp/>?<sp/>n<sp/>:<sp/>-n);</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="util_8h_1a8bd08fb413d92858692abb1ab182014c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a8bd08fb413d92858692abb1ab182014c" kindref="member">leftTrim</ref>(std::string<sp/>src,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string::size_type<sp/>pos<sp/>=<sp/>src.find_first_not_of(chr,<sp/>0);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.erase(0,<sp/>pos);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>src;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="346" refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" refkind="member"><highlight class="normal">std::string<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>itbegin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>itend,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSpaces=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rv;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hexmap[16]<sp/>=<sp/>{<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>rv.reserve((itend-itbegin)*3);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(T<sp/>it<sp/>=<sp/>itbegin;<sp/>it<sp/>&lt;<sp/>itend;<sp/>++it)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(*it);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fSpaces<sp/>&amp;&amp;<sp/>it<sp/>!=<sp/>itbegin)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.push_back(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.push_back(hexmap[val&gt;&gt;4]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv.push_back(hexmap[val&amp;15]);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="365" refid="util_8h_1a7efe75f50ba1dbd0183952dd42146a92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>vch,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSpaces=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(vch.begin(),<sp/>vch.end(),<sp/>fSpaces);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="util_8h_1acd4d9988b9bb3f31fddf72a34b2bc37f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1acd4d9988b9bb3f31fddf72a34b2bc37f" kindref="member">GetPerformanceCounter</ref>()</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>QueryPerformanceCounter((LARGE_INTEGER*)&amp;nCounter);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>timeval<sp/>t;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>gettimeofday(&amp;t,<sp/>NULL);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>nCounter<sp/>=<sp/>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>)<sp/>t.tv_sec<sp/>*<sp/>1000000<sp/>+<sp/>t.tv_usec;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nCounter;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(boost::posix_time::ptime(boost::posix_time::microsec_clock::universal_time())<sp/>-</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_milliseconds();</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="util_8h_1a0c5a06b50cd805b1923552114494c029" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a0c5a06b50cd805b1923552114494c029" kindref="member">GetTimeMicros</ref>()</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(boost::posix_time::ptime(boost::posix_time::microsec_clock::universal_time())<sp/>-</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_microseconds();</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszFormat,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTime);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>strTimestampFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%Y-%m-%d<sp/>%H:%M:%S<sp/>UTC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398" refid="util_8h_1a5d620750c7cb9c95ce815e3dd036e134" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="util_8h_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTime)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a749bc6776c8ec72d7c5e4dea56aee415" kindref="member">DateTimeStrFormat</ref>(strTimestampFormat.c_str(),<sp/>nTime);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="405" refid="util_8h_1a952a05da17d51c4107d353d4d1dafb4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a952a05da17d51c4107d353d4d1dafb4d" kindref="member">skipspaces</ref>(T&amp;<sp/>it)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isspace(*it))</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="util_8h_1ac0165e18ce3be89a2e0731e27d54b478" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ac0165e18ce3be89a2e0731e27d54b478" kindref="member">IsSwitchChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">std::string<sp/><ref refid="util_8h_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strDefault);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="util_8h_1a24f685720bf40370e5bd2a192ad50cd8" kindref="member">GetArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nDefault);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a64d956f1dda7f9a80ab5d594532b906d" kindref="member">GetBoolArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDefault);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a9d94ca9f7c1496626992d1873e3f69df" kindref="member">SoftSetArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strValue);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1acb3060cad083d342898b6055e43692ae" kindref="member">SoftSetBoolArg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strArg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fValue);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="util_8h_1ad679dcd7cb4960c49a8d400bcc23b0d0" kindref="member">insecure_rand_Rz</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="util_8h_1a45e4e024616db2e96c5ffc34928c553b" kindref="member">insecure_rand_Rw</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>insecure_rand(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>insecure_rand_Rz=36969*(insecure_rand_Rz&amp;65535)+(insecure_rand_Rz&gt;&gt;16);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>insecure_rand_Rw=18000*(insecure_rand_Rw&amp;65535)+(insecure_rand_Rw&gt;&gt;16);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(insecure_rand_Rw&lt;&lt;16)+<ref refid="util_8h_1ad679dcd7cb4960c49a8d400bcc23b0d0" kindref="member">insecure_rand_Rz</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1abef4e13668f53ac5404c796462aed9b4" kindref="member">seed_insecure_rand</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDeterministic=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="493" refid="util_8h_1a7ddc80f6840eae3277e324aec17c2568" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a7ddc80f6840eae3277e324aec17c2568" kindref="member">TimingResistantEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>b)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.size()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>accumulator<sp/>=<sp/>a.size()<sp/>^<sp/>b.size();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.size();<sp/>i++)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulator<sp/>|=<sp/>a[i]<sp/>^<sp/>b[i%b.size()];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>accumulator<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="class_c_median_filter" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_median_filter" kindref="compound">CMedianFilter</ref></highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>vValues;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>vSorted;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="512" refid="class_c_median_filter_1a181463ed081ece10fd437875243d9cad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_median_filter_1a181463ed081ece10fd437875243d9cad" kindref="member">CMedianFilter</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" kindref="member">size</ref>,<sp/>T<sp/>initial_value):</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSize(size)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValues.reserve(size);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValues.push_back(initial_value);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSorted<sp/>=<sp/>vValues;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="class_c_median_filter_1ae10cde98866b034ec73c530be4c60874" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_median_filter_1ae10cde98866b034ec73c530be4c60874" kindref="member">input</ref>(T<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vValues.size()<sp/>==<sp/>nSize)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValues.erase(vValues.begin());</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vValues.push_back(value);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSorted.resize(vValues.size());</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(vValues.begin(),<sp/>vValues.end(),<sp/>vSorted.begin());</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(vSorted.begin(),<sp/>vSorted.end());</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="class_c_median_filter_1aab6b67fbb63024c462bfa30bbe789c31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_c_median_filter_1aab6b67fbb63024c462bfa30bbe789c31" kindref="member">median</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="534"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" kindref="member">size</ref><sp/>=<sp/>vSorted.size();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(size&gt;0);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&amp;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>Odd<sp/>number<sp/>of<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vSorted[size/2];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>number<sp/>of<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(vSorted[size/2-1]<sp/>+<sp/>vSorted[size/2])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="548"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vValues.size();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="class_c_median_filter_1afbfe7258f17cec5cc7f2f105d03b0567" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/><ref refid="class_c_median_filter_1afbfe7258f17cec5cc7f2f105d03b0567" kindref="member">sorted</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="553"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vSorted;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">};</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" kindref="member">SetThreadPriority</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPriority)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" kindref="member">SetThreadPriority</ref>(GetCurrentThread(),<sp/>nPriority);</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="util_8h_1a59ca83deecce4e6c8b6139e7eb2870b4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_PRIORITY_LOWEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRIO_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="util_8h_1aff5dd15d0754df75650eb9c3bfa5f86f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_PRIORITY_BELOW_NORMAL<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="util_8h_1af05a5c044382ba6895bcaad26325a693" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_PRIORITY_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="util_8h_1aa38e29b911337a6e5c70282f136473fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_PRIORITY_ABOVE_NORMAL<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" kindref="member">SetThreadPriority</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPriority)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>unclear<sp/>if<sp/>it&apos;s<sp/>even<sp/>possible<sp/>to<sp/>change<sp/>thread<sp/>priorities<sp/>on<sp/>Linux,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>really<sp/>and<sp/>truly<sp/>need<sp/>it<sp/>for<sp/>the<sp/>generation<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRIO_THREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>setpriority(PRIO_THREAD,<sp/>0,<sp/>nPriority);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>setpriority(PRIO_PROCESS,<sp/>0,<sp/>nPriority);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" kindref="member">RenameThread</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="util_8h_1a62bb21d0cc35fb9408d09dc385fe484f" kindref="member">ByteReverse</ref>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((value<sp/>&amp;<sp/>0xFF00FF00)<sp/>&gt;&gt;<sp/>8)<sp/>|<sp/>((value<sp/>&amp;<sp/>0x00FF00FF)<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value&lt;&lt;16)<sp/>|<sp/>(value&gt;&gt;16);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>wrapper<sp/>for<sp/>do-something-forever<sp/>thread<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Forever&quot;<sp/>really<sp/>means<sp/>until<sp/>the<sp/>thread<sp/>is<sp/>interrupted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>it<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>new<sp/>boost::thread(boost::bind(&amp;LoopForever&lt;void<sp/>(*)()&gt;,<sp/>&quot;dumpaddr&quot;,<sp/>&amp;DumpAddresses,<sp/>900000));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>maybe:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>boost::function&lt;void()&gt;<sp/>f<sp/>=<sp/>boost::bind(&amp;FunctionWithArg,<sp/>argument);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>threadGroup.create_thread(boost::bind(&amp;LoopForever&lt;boost::function&lt;void()&gt;<sp/>&gt;,<sp/>&quot;nothing&quot;,<sp/>f,<sp/>milliseconds));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" kindref="member">LoopForever</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/><sp/>Callable<sp/><ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>msecs)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;darksilk-%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" kindref="member">RenameThread</ref>(s.c_str());</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>start\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" kindref="member">MilliSleep</ref>(msecs);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(boost::thread_interrupted)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>stop\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(&amp;e,<sp/>name);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(NULL,<sp/>name);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/>..<sp/>and<sp/>a<sp/>wrapper<sp/>that<sp/>just<sp/>calls<sp/>func<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" kindref="member">TraceThread</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/><sp/>Callable<sp/><ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>)</highlight></codeline>
<codeline lineno="624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;darksilk-%s&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" kindref="member">RenameThread</ref>(s.c_str());</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>start\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8cc_1ac98d5d20f5aab3ef51e0ff5e30d16925" kindref="member">func</ref>();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>exit\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(boost::thread_interrupted)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>thread<sp/>interrupt\n&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(&amp;e,<sp/>name);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a379b2307f40ae5dba4dd56a0156fa36e" kindref="member">PrintException</ref>(NULL,<sp/>name);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/util.h"/>
  </compounddef>
</doxygen>
