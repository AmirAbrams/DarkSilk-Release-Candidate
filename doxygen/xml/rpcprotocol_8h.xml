<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="rpcprotocol_8h" kind="file" language="C++">
    <compoundname>rpcprotocol.h</compoundname>
    <includes refid="compat_8h" local="yes">compat.h</includes>
    <includes local="no">list</includes>
    <includes local="no">map</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">string</includes>
    <includes local="no">boost/iostreams/concepts.hpp</includes>
    <includes local="no">boost/iostreams/stream.hpp</includes>
    <includes local="no">boost/asio.hpp</includes>
    <includes local="no">boost/asio/ssl.hpp</includes>
    <includes refid="json__spirit__reader__template_8h" local="yes">json/json_spirit_reader_template.h</includes>
    <includes refid="json__spirit__utils_8h" local="yes">json/json_spirit_utils.h</includes>
    <includes refid="json__spirit__writer__template_8h" local="yes">json/json_spirit_writer_template.h</includes>
    <includedby refid="rpcserver_8h" local="yes">/home/dev/ds-160209/src/rpcserver.h</includedby>
    <includedby refid="rpcclient_8cpp" local="yes">/home/dev/ds-160209/src/rpcclient.cpp</includedby>
    <includedby refid="rpcprotocol_8cpp" local="yes">/home/dev/ds-160209/src/rpcprotocol.cpp</includedby>
    <incdepgraph>
      <node id="19963">
        <label>list</label>
      </node>
      <node id="19956">
        <label>netinet/in.h</label>
      </node>
      <node id="19957">
        <label>arpa/inet.h</label>
      </node>
      <node id="19991">
        <label>iomanip</label>
      </node>
      <node id="19983">
        <label>boost/version.hpp</label>
      </node>
      <node id="19978">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="19984">
        <label>boost/spirit/core.hpp</label>
      </node>
      <node id="19955">
        <label>net/if.h</label>
      </node>
      <node id="19952">
        <label>sys/mman.h</label>
      </node>
      <node id="19980">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="19966" relation="include">
        </childnode>
      </node>
      <node id="19988">
        <label>boost/spirit/iterator/position_iterator.hpp</label>
      </node>
      <node id="19950">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="19951" relation="include">
        </childnode>
        <childnode refid="19952" relation="include">
        </childnode>
        <childnode refid="19953" relation="include">
        </childnode>
        <childnode refid="19954" relation="include">
        </childnode>
        <childnode refid="19955" relation="include">
        </childnode>
        <childnode refid="19956" relation="include">
        </childnode>
        <childnode refid="19957" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
        <childnode refid="19959" relation="include">
        </childnode>
        <childnode refid="19960" relation="include">
        </childnode>
        <childnode refid="19961" relation="include">
        </childnode>
        <childnode refid="19962" relation="include">
        </childnode>
      </node>
      <node id="19962">
        <label>errno.h</label>
      </node>
      <node id="19974">
        <label>cassert</label>
      </node>
      <node id="19976">
        <label>stdexcept</label>
      </node>
      <node id="19989">
        <label>json/json_spirit_utils.h</label>
        <link refid="json__spirit__utils_8h"/>
        <childnode refid="19972" relation="include">
        </childnode>
        <childnode refid="19964" relation="include">
        </childnode>
      </node>
      <node id="19966">
        <label>string</label>
      </node>
      <node id="19964">
        <label>map</label>
      </node>
      <node id="19968">
        <label>boost/iostreams/stream.hpp</label>
      </node>
      <node id="19971">
        <label>json/json_spirit_reader_template.h</label>
        <link refid="json__spirit__reader__template_8h"/>
        <childnode refid="19972" relation="include">
        </childnode>
        <childnode refid="19980" relation="include">
        </childnode>
        <childnode refid="19981" relation="include">
        </childnode>
        <childnode refid="19982" relation="include">
        </childnode>
        <childnode refid="19983" relation="include">
        </childnode>
        <childnode refid="19984" relation="include">
        </childnode>
        <childnode refid="19985" relation="include">
        </childnode>
        <childnode refid="19986" relation="include">
        </childnode>
        <childnode refid="19987" relation="include">
        </childnode>
        <childnode refid="19988" relation="include">
        </childnode>
      </node>
      <node id="19979">
        <label>boost/variant.hpp</label>
      </node>
      <node id="19967">
        <label>boost/iostreams/concepts.hpp</label>
      </node>
      <node id="19960">
        <label>netdb.h</label>
      </node>
      <node id="19951">
        <label>sys/fcntl.h</label>
      </node>
      <node id="19982">
        <label>boost/function.hpp</label>
      </node>
      <node id="19959">
        <label>limits.h</label>
      </node>
      <node id="19969">
        <label>boost/asio.hpp</label>
      </node>
      <node id="19970">
        <label>boost/asio/ssl.hpp</label>
      </node>
      <node id="19958">
        <label>ifaddrs.h</label>
      </node>
      <node id="19954">
        <label>sys/types.h</label>
      </node>
      <node id="19961">
        <label>unistd.h</label>
      </node>
      <node id="19973">
        <label>vector</label>
      </node>
      <node id="19949">
        <label>/home/dev/ds-160209/src/rpcprotocol.h</label>
        <link refid="rpcprotocol.h"/>
        <childnode refid="19950" relation="include">
        </childnode>
        <childnode refid="19963" relation="include">
        </childnode>
        <childnode refid="19964" relation="include">
        </childnode>
        <childnode refid="19965" relation="include">
        </childnode>
        <childnode refid="19966" relation="include">
        </childnode>
        <childnode refid="19967" relation="include">
        </childnode>
        <childnode refid="19968" relation="include">
        </childnode>
        <childnode refid="19969" relation="include">
        </childnode>
        <childnode refid="19970" relation="include">
        </childnode>
        <childnode refid="19971" relation="include">
        </childnode>
        <childnode refid="19989" relation="include">
        </childnode>
        <childnode refid="19990" relation="include">
        </childnode>
      </node>
      <node id="19990">
        <label>json/json_spirit_writer_template.h</label>
        <link refid="json__spirit__writer__template_8h"/>
        <childnode refid="19972" relation="include">
        </childnode>
        <childnode refid="19974" relation="include">
        </childnode>
        <childnode refid="19975" relation="include">
        </childnode>
        <childnode refid="19991" relation="include">
        </childnode>
      </node>
      <node id="19986">
        <label>boost/spirit/utility/escape_char.hpp</label>
      </node>
      <node id="19975">
        <label>sstream</label>
      </node>
      <node id="19965">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="19981">
        <label>boost/bind.hpp</label>
      </node>
      <node id="19977">
        <label>boost/config.hpp</label>
      </node>
      <node id="19953">
        <label>sys/socket.h</label>
      </node>
      <node id="19972">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="19973" relation="include">
        </childnode>
        <childnode refid="19964" relation="include">
        </childnode>
        <childnode refid="19966" relation="include">
        </childnode>
        <childnode refid="19974" relation="include">
        </childnode>
        <childnode refid="19975" relation="include">
        </childnode>
        <childnode refid="19976" relation="include">
        </childnode>
        <childnode refid="19965" relation="include">
        </childnode>
        <childnode refid="19977" relation="include">
        </childnode>
        <childnode refid="19978" relation="include">
        </childnode>
        <childnode refid="19979" relation="include">
        </childnode>
      </node>
      <node id="19987">
        <label>boost/spirit/iterator/multi_pass.hpp</label>
      </node>
      <node id="19985">
        <label>boost/spirit/utility/confix.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20007">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="20011">
        <label>/home/dev/ds-160209/src/rpcclient.cpp</label>
        <link refid="rpcclient_8cpp"/>
      </node>
      <node id="20006">
        <label>/home/dev/ds-160209/src/rpcserver.cpp</label>
        <link refid="rpcserver_8cpp"/>
      </node>
      <node id="19994">
        <label>/home/dev/ds-160209/src/darksilkd.cpp</label>
        <link refid="darksilkd_8cpp"/>
      </node>
      <node id="20009">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode_8cpp"/>
      </node>
      <node id="20010">
        <label>/home/dev/ds-160209/src/rpcwallet.cpp</label>
        <link refid="rpcwallet_8cpp"/>
      </node>
      <node id="19999">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="20000" relation="include">
        </childnode>
      </node>
      <node id="20000">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="20004">
        <label>/home/dev/ds-160209/src/rpcnet.cpp</label>
        <link refid="rpcnet_8cpp"/>
      </node>
      <node id="20002">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="19996">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.cpp</label>
        <link refid="blockbrowser_8cpp"/>
      </node>
      <node id="20001">
        <label>/home/dev/ds-160209/src/rpcdump.cpp</label>
        <link refid="rpcdump_8cpp"/>
      </node>
      <node id="19998">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.cpp</label>
        <link refid="stormnodemanager_8cpp"/>
      </node>
      <node id="20005">
        <label>/home/dev/ds-160209/src/rpcrawtransaction.cpp</label>
        <link refid="rpcrawtransaction_8cpp"/>
      </node>
      <node id="19992">
        <label>/home/dev/ds-160209/src/rpcprotocol.h</label>
        <link refid="rpcprotocol.h"/>
        <childnode refid="19993" relation="include">
        </childnode>
        <childnode refid="20011" relation="include">
        </childnode>
        <childnode refid="20012" relation="include">
        </childnode>
      </node>
      <node id="20008">
        <label>/home/dev/ds-160209/src/rpcstormnode-budget.cpp</label>
        <link refid="rpcstormnode-budget_8cpp"/>
      </node>
      <node id="20012">
        <label>/home/dev/ds-160209/src/rpcprotocol.cpp</label>
        <link refid="rpcprotocol_8cpp"/>
      </node>
      <node id="19995">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="19993">
        <label>/home/dev/ds-160209/src/rpcserver.h</label>
        <link refid="rpcserver_8h"/>
        <childnode refid="19994" relation="include">
        </childnode>
        <childnode refid="19995" relation="include">
        </childnode>
        <childnode refid="19996" relation="include">
        </childnode>
        <childnode refid="19997" relation="include">
        </childnode>
        <childnode refid="19998" relation="include">
        </childnode>
        <childnode refid="19999" relation="include">
        </childnode>
        <childnode refid="20001" relation="include">
        </childnode>
        <childnode refid="20002" relation="include">
        </childnode>
        <childnode refid="20003" relation="include">
        </childnode>
        <childnode refid="20004" relation="include">
        </childnode>
        <childnode refid="20005" relation="include">
        </childnode>
        <childnode refid="20006" relation="include">
        </childnode>
        <childnode refid="20007" relation="include">
        </childnode>
        <childnode refid="20008" relation="include">
        </childnode>
        <childnode refid="20009" relation="include">
        </childnode>
        <childnode refid="20010" relation="include">
        </childnode>
      </node>
      <node id="20003">
        <label>/home/dev/ds-160209/src/rpcmisc.cpp</label>
        <link refid="rpcmisc_8cpp"/>
      </node>
      <node id="19997">
        <label>/home/dev/ds-160209/src/qt/debugconsole.cpp</label>
        <link refid="debugconsole_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_s_s_l_i_o_stream_device" prot="public">SSLIOStreamDevice</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46" prot="public" static="no">
        <name>HTTPStatusCode</name>
        <enumvalue id="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a43f8027764325bbcad2f773511156d0a" prot="public">
          <name>HTTP_OK</name>
          <initializer>= 200</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a173b2a55d636fe537b9069a4fb3388f2" prot="public">
          <name>HTTP_BAD_REQUEST</name>
          <initializer>= 400</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a74677f364201a3d068bc6b9db7359288" prot="public">
          <name>HTTP_UNAUTHORIZED</name>
          <initializer>= 401</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7aec6e8ecb79ff84830a69e52ff01d17" prot="public">
          <name>HTTP_FORBIDDEN</name>
          <initializer>= 403</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7a2f2a109c030ee9d2d5afe761232451" prot="public">
          <name>HTTP_NOT_FOUND</name>
          <initializer>= 404</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" prot="public">
          <name>HTTP_INTERNAL_SERVER_ERROR</name>
          <initializer>= 500</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="27" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.h" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="enum" id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85dead" prot="public" static="no">
        <name>RPCErrorCode</name>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaf8310a778a7a84d76adde337d695fd0d" prot="public">
          <name>RPC_INVALID_REQUEST</name>
          <initializer>= -32600</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada730bd898e0c5940282c275f49470a794" prot="public">
          <name>RPC_METHOD_NOT_FOUND</name>
          <initializer>= -32601</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada784a3cc09b65fa47ff1d70fbd3bfbaca" prot="public">
          <name>RPC_INVALID_PARAMS</name>
          <initializer>= -32602</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadad4f5ea69465f2a32fda9b9bf5e698803" prot="public">
          <name>RPC_INTERNAL_ERROR</name>
          <initializer>= -32603</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada3632e7ba1deeda31ff77fe80bdaf7fe6" prot="public">
          <name>RPC_PARSE_ERROR</name>
          <initializer>= -32700</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada5aa884a9e263e1fad4ad13ec564d33d5" prot="public">
          <name>RPC_MISC_ERROR</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada456d9eafa45bb1041024b834a063ea80" prot="public">
          <name>RPC_FORBIDDEN_BY_SAFE_MODE</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada7c63246a7c7bc5912d499fb117358506" prot="public">
          <name>RPC_TYPE_ERROR</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadafb8d27e000f4a668b66974c73256a576" prot="public">
          <name>RPC_INVALID_ADDRESS_OR_KEY</name>
          <initializer>= -5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada2b50733804d98a7d4f2252563d864a66" prot="public">
          <name>RPC_OUT_OF_MEMORY</name>
          <initializer>= -7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" prot="public">
          <name>RPC_INVALID_PARAMETER</name>
          <initializer>= -8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadcfa95f6aca9c3a474fffac8c8ab1dd1" prot="public">
          <name>RPC_DATABASE_ERROR</name>
          <initializer>= -20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae41723a0e8091c7853a1e582e317b272" prot="public">
          <name>RPC_DESERIALIZATION_ERROR</name>
          <initializer>= -22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada20e49eed4831ce6cdb5626a2faf5dc76" prot="public">
          <name>RPC_SERVER_NOT_STARTED</name>
          <initializer>= -18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaab5f4888435073da8cd11d99d274c8af" prot="public">
          <name>RPC_CLIENT_NOT_CONNECTED</name>
          <initializer>= -9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd3692758a03ba3dcd1accbdd656b27f" prot="public">
          <name>RPC_CLIENT_IN_INITIAL_DOWNLOAD</name>
          <initializer>= -10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada69beae07cb7520bde6d66c32ebde05c4" prot="public">
          <name>RPC_CLIENT_NODE_ALREADY_ADDED</name>
          <initializer>= -23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd603a70e2d6eb11ef5b3aad2f83fd70" prot="public">
          <name>RPC_CLIENT_NODE_NOT_ADDED</name>
          <initializer>= -24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaba6f8682002fa223d3a405b743b5a540" prot="public">
          <name>RPC_WALLET_ERROR</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada5e46fc2ff7c51b8423b6eaf5b33ebfb9" prot="public">
          <name>RPC_WALLET_INSUFFICIENT_FUNDS</name>
          <initializer>= -6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada05642c62794bf107e9be801e76a4c89e" prot="public">
          <name>RPC_WALLET_INVALID_ACCOUNT_NAME</name>
          <initializer>= -11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadacb2152d14607886f90ed134c94e21d" prot="public">
          <name>RPC_WALLET_KEYPOOL_RAN_OUT</name>
          <initializer>= -12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada0c1fbdf17d83da9f5124f2dbf0ba4765" prot="public">
          <name>RPC_WALLET_UNLOCK_NEEDED</name>
          <initializer>= -13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae7f578c2ec4458c79250e204505dedcc" prot="public">
          <name>RPC_WALLET_PASSPHRASE_INCORRECT</name>
          <initializer>= -14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada6aa5da515d4b7230dfeb65017b9fd38d" prot="public">
          <name>RPC_WALLET_WRONG_ENC_STATE</name>
          <initializer>= -15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada796c728d5ec3fc308609494e1d608940" prot="public">
          <name>RPC_WALLET_ENCRYPTION_FAILED</name>
          <initializer>= -16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada13d89bf3248220d312af052959f71b0b" prot="public">
          <name>RPC_WALLET_ALREADY_UNLOCKED</name>
          <initializer>= -17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="38" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.h" bodystart="37" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rpcprotocol_8h_1a6ce552952d1a270cd92e12e53a53df90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string HTTPPost</definition>
        <argsstring>(const std::string &amp;strMsg, const std::map&lt; std::string, std::string &gt; &amp;mapRequestHeaders)</argsstring>
        <name>HTTPPost</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strMsg</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>mapRequestHeaders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8h_1aa3a6ad4a7d1b01eb440e43214280c2d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string HTTPReply</definition>
        <argsstring>(int nStatus, const std::string &amp;strMsg, bool keepalive)</argsstring>
        <name>HTTPReply</name>
        <param>
          <type>int</type>
          <declname>nStatus</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>strMsg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepalive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8h_1afbaac856b5edb9692407fc3f2254a5c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReadHTTPRequestLine</definition>
        <argsstring>(std::basic_istream&lt; char &gt; &amp;stream, int &amp;proto, std::string &amp;http_method, std::string &amp;http_uri)</argsstring>
        <name>ReadHTTPRequestLine</name>
        <param>
          <type>std::basic_istream&lt; char &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>proto</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>http_method</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>http_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8h_1af615c564cc7794d255e5adfacade4066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ReadHTTPStatus</definition>
        <argsstring>(std::basic_istream&lt; char &gt; &amp;stream, int &amp;proto)</argsstring>
        <name>ReadHTTPStatus</name>
        <param>
          <type>std::basic_istream&lt; char &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="140" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8h_1a440857adcf1e52899fdf8843e3e943af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ReadHTTPHeaders</definition>
        <argsstring>(std::basic_istream&lt; char &gt; &amp;stream, std::map&lt; std::string, std::string &gt; &amp;mapHeadersRet)</argsstring>
        <name>ReadHTTPHeaders</name>
        <param>
          <type>std::basic_istream&lt; char &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>mapHeadersRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8h_1ae3fa5c9e35e8a2824f721e136e9c7cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ReadHTTPMessage</definition>
        <argsstring>(std::basic_istream&lt; char &gt; &amp;stream, std::map&lt; std::string, std::string &gt; &amp;mapHeadersRet, std::string &amp;strMessageRet, int nProto, size_t max_size)</argsstring>
        <name>ReadHTTPMessage</name>
        <param>
          <type>std::basic_istream&lt; char &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>mapHeadersRet</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strMessageRet</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nProto</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8h_1af563d02a95e56442fbe9ed93605d2405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string JSONRPCRequest</definition>
        <argsstring>(const std::string &amp;strMethod, const json_spirit::Array &amp;params, const json_spirit::Value &amp;id)</argsstring>
        <name>JSONRPCRequest</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>strMethod</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">json_spirit::Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">json_spirit::Value</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8h_1aebdc56873bd962e1d9b310c34e7dde0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">json_spirit::Object</ref></type>
        <definition>json_spirit::Object JSONRPCReplyObj</definition>
        <argsstring>(const json_spirit::Value &amp;result, const json_spirit::Value &amp;error, const json_spirit::Value &amp;id)</argsstring>
        <name>JSONRPCReplyObj</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">json_spirit::Value</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">json_spirit::Value</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">json_spirit::Value</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="137" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="242" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8h_1a0684e3796b75355730f1657a05ea6bcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string JSONRPCReply</definition>
        <argsstring>(const json_spirit::Value &amp;result, const json_spirit::Value &amp;error, const json_spirit::Value &amp;id)</argsstring>
        <name>JSONRPCReply</name>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">json_spirit::Value</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">json_spirit::Value</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const <ref refid="namespacejson__spirit_1a28e6abc99fda7b06c430ca38802527a3" kindref="member">json_spirit::Value</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="138" column="1" bodyfile="/home/dev/ds-160209/src/rpcprotocol.cpp" bodystart="254" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="rpcprotocol_8h_1a2f8638568f8f83e5a0a79a109540a18c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">json_spirit::Object</ref></type>
        <definition>json_spirit::Object JSONRPCError</definition>
        <argsstring>(int code, const std::string &amp;message)</argsstring>
        <name>JSONRPCError</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/rpcprotocol.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_DARKSILKRPC_PROTOCOL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DARKSILKRPC_PROTOCOL_H_<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="compat_8h" kindref="compound">compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iostreams/concepts.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iostreams/stream.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio/ssl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__spirit__reader__template_8h" kindref="compound">json/json_spirit_reader_template.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__spirit__utils_8h" kindref="compound">json/json_spirit_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__spirit__writer__template_8h" kindref="compound">json/json_spirit_writer_template.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HTTP<sp/>status<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46" kindref="member">HTTPStatusCode</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28" refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a43f8027764325bbcad2f773511156d0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a43f8027764325bbcad2f773511156d0a" kindref="member">HTTP_OK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>200,</highlight></codeline>
<codeline lineno="29" refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a173b2a55d636fe537b9069a4fb3388f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a173b2a55d636fe537b9069a4fb3388f2" kindref="member">HTTP_BAD_REQUEST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>400,</highlight></codeline>
<codeline lineno="30" refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a74677f364201a3d068bc6b9db7359288" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a74677f364201a3d068bc6b9db7359288" kindref="member">HTTP_UNAUTHORIZED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>401,</highlight></codeline>
<codeline lineno="31" refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7aec6e8ecb79ff84830a69e52ff01d17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7aec6e8ecb79ff84830a69e52ff01d17" kindref="member">HTTP_FORBIDDEN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>403,</highlight></codeline>
<codeline lineno="32" refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7a2f2a109c030ee9d2d5afe761232451" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46a7a2f2a109c030ee9d2d5afe761232451" kindref="member">HTTP_NOT_FOUND</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>404,</highlight></codeline>
<codeline lineno="33" refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1ab0a9668b7d736b4d4d621ec010928a46ac7d2e49bfead01d65a890a2e80e5b3a6" kindref="member">HTTP_INTERNAL_SERVER_ERROR</ref><sp/>=<sp/>500,</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DarkSilk<sp/>RPC<sp/>error<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85dead" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85dead" kindref="member">RPCErrorCode</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Standard<sp/>JSON-RPC<sp/>2.0<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaf8310a778a7a84d76adde337d695fd0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaf8310a778a7a84d76adde337d695fd0d" kindref="member">RPC_INVALID_REQUEST</ref><sp/><sp/>=<sp/>-32600,</highlight></codeline>
<codeline lineno="41" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada730bd898e0c5940282c275f49470a794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada730bd898e0c5940282c275f49470a794" kindref="member">RPC_METHOD_NOT_FOUND</ref><sp/>=<sp/>-32601,</highlight></codeline>
<codeline lineno="42" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada784a3cc09b65fa47ff1d70fbd3bfbaca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada784a3cc09b65fa47ff1d70fbd3bfbaca" kindref="member">RPC_INVALID_PARAMS</ref><sp/><sp/><sp/>=<sp/>-32602,</highlight></codeline>
<codeline lineno="43" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadad4f5ea69465f2a32fda9b9bf5e698803" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadad4f5ea69465f2a32fda9b9bf5e698803" kindref="member">RPC_INTERNAL_ERROR</ref><sp/><sp/><sp/>=<sp/>-32603,</highlight></codeline>
<codeline lineno="44" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada3632e7ba1deeda31ff77fe80bdaf7fe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada3632e7ba1deeda31ff77fe80bdaf7fe6" kindref="member">RPC_PARSE_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-32700,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>General<sp/>application<sp/>defined<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada5aa884a9e263e1fad4ad13ec564d33d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada5aa884a9e263e1fad4ad13ec564d33d5" kindref="member">RPC_MISC_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1,<sp/><sp/></highlight><highlight class="comment">//<sp/>std::exception<sp/>thrown<sp/>in<sp/>command<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada456d9eafa45bb1041024b834a063ea80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada456d9eafa45bb1041024b834a063ea80" kindref="member">RPC_FORBIDDEN_BY_SAFE_MODE</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-2,<sp/><sp/></highlight><highlight class="comment">//<sp/>Server<sp/>is<sp/>in<sp/>safe<sp/>mode,<sp/>and<sp/>command<sp/>is<sp/>not<sp/>allowed<sp/>in<sp/>safe<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada7c63246a7c7bc5912d499fb117358506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada7c63246a7c7bc5912d499fb117358506" kindref="member">RPC_TYPE_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-3,<sp/><sp/></highlight><highlight class="comment">//<sp/>Unexpected<sp/>type<sp/>was<sp/>passed<sp/>as<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadafb8d27e000f4a668b66974c73256a576" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadafb8d27e000f4a668b66974c73256a576" kindref="member">RPC_INVALID_ADDRESS_OR_KEY</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-5,<sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>address<sp/>or<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada2b50733804d98a7d4f2252563d864a66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada2b50733804d98a7d4f2252563d864a66" kindref="member">RPC_OUT_OF_MEMORY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-7,<sp/><sp/></highlight><highlight class="comment">//<sp/>Ran<sp/>out<sp/>of<sp/>memory<sp/>during<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadab38a9a653209a57acfc9a551c310e4dc" kindref="member">RPC_INVALID_PARAMETER</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-8,<sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid,<sp/>missing<sp/>or<sp/>duplicate<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadcfa95f6aca9c3a474fffac8c8ab1dd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadcfa95f6aca9c3a474fffac8c8ab1dd1" kindref="member">RPC_DATABASE_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-20,<sp/></highlight><highlight class="comment">//<sp/>Database<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae41723a0e8091c7853a1e582e317b272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae41723a0e8091c7853a1e582e317b272" kindref="member">RPC_DESERIALIZATION_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-22,<sp/></highlight><highlight class="comment">//<sp/>Error<sp/>parsing<sp/>or<sp/>validating<sp/>structure<sp/>in<sp/>raw<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada20e49eed4831ce6cdb5626a2faf5dc76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada20e49eed4831ce6cdb5626a2faf5dc76" kindref="member">RPC_SERVER_NOT_STARTED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-18,<sp/></highlight><highlight class="comment">//<sp/>RPC<sp/>server<sp/>was<sp/>not<sp/>started<sp/>(StartRPCThreads()<sp/>not<sp/>called)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>P2P<sp/>client<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaab5f4888435073da8cd11d99d274c8af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaab5f4888435073da8cd11d99d274c8af" kindref="member">RPC_CLIENT_NOT_CONNECTED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-9,<sp/><sp/></highlight><highlight class="comment">//<sp/>DarkSilk<sp/>is<sp/>not<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd3692758a03ba3dcd1accbdd656b27f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd3692758a03ba3dcd1accbdd656b27f" kindref="member">RPC_CLIENT_IN_INITIAL_DOWNLOAD</ref><sp/><sp/>=<sp/>-10,<sp/></highlight><highlight class="comment">//<sp/>Still<sp/>downloading<sp/>initial<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada69beae07cb7520bde6d66c32ebde05c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada69beae07cb7520bde6d66c32ebde05c4" kindref="member">RPC_CLIENT_NODE_ALREADY_ADDED</ref><sp/><sp/><sp/>=<sp/>-23,<sp/></highlight><highlight class="comment">//<sp/>Node<sp/>is<sp/>already<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd603a70e2d6eb11ef5b3aad2f83fd70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadd603a70e2d6eb11ef5b3aad2f83fd70" kindref="member">RPC_CLIENT_NODE_NOT_ADDED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-24,<sp/></highlight><highlight class="comment">//<sp/>Node<sp/>has<sp/>not<sp/>been<sp/>added<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wallet<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaba6f8682002fa223d3a405b743b5a540" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadaba6f8682002fa223d3a405b743b5a540" kindref="member">RPC_WALLET_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-4,<sp/><sp/></highlight><highlight class="comment">//<sp/>Unspecified<sp/>problem<sp/>with<sp/>wallet<sp/>(key<sp/>not<sp/>found<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada5e46fc2ff7c51b8423b6eaf5b33ebfb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada5e46fc2ff7c51b8423b6eaf5b33ebfb9" kindref="member">RPC_WALLET_INSUFFICIENT_FUNDS</ref><sp/><sp/><sp/>=<sp/>-6,<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>enough<sp/>funds<sp/>in<sp/>wallet<sp/>or<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada05642c62794bf107e9be801e76a4c89e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada05642c62794bf107e9be801e76a4c89e" kindref="member">RPC_WALLET_INVALID_ACCOUNT_NAME</ref><sp/>=<sp/>-11,<sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>account<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadacb2152d14607886f90ed134c94e21d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadadacb2152d14607886f90ed134c94e21d" kindref="member">RPC_WALLET_KEYPOOL_RAN_OUT</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-12,<sp/></highlight><highlight class="comment">//<sp/>Keypool<sp/>ran<sp/>out,<sp/>call<sp/>keypoolrefill<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada0c1fbdf17d83da9f5124f2dbf0ba4765" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada0c1fbdf17d83da9f5124f2dbf0ba4765" kindref="member">RPC_WALLET_UNLOCK_NEEDED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-13,<sp/></highlight><highlight class="comment">//<sp/>Enter<sp/>the<sp/>wallet<sp/>passphrase<sp/>with<sp/>walletpassphrase<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae7f578c2ec4458c79250e204505dedcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deadae7f578c2ec4458c79250e204505dedcc" kindref="member">RPC_WALLET_PASSPHRASE_INCORRECT</ref><sp/>=<sp/>-14,<sp/></highlight><highlight class="comment">//<sp/>The<sp/>wallet<sp/>passphrase<sp/>entered<sp/>was<sp/>incorrect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada6aa5da515d4b7230dfeb65017b9fd38d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada6aa5da515d4b7230dfeb65017b9fd38d" kindref="member">RPC_WALLET_WRONG_ENC_STATE</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-15,<sp/></highlight><highlight class="comment">//<sp/>Command<sp/>given<sp/>in<sp/>wrong<sp/>wallet<sp/>encryption<sp/>state<sp/>(encrypting<sp/>an<sp/>encrypted<sp/>wallet<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada796c728d5ec3fc308609494e1d608940" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada796c728d5ec3fc308609494e1d608940" kindref="member">RPC_WALLET_ENCRYPTION_FAILED</ref><sp/><sp/><sp/><sp/>=<sp/>-16,<sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>to<sp/>encrypt<sp/>the<sp/>wallet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada13d89bf3248220d312af052959f71b0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpcprotocol_8h_1af867221d51315471f28ed8cdac85deada13d89bf3248220d312af052959f71b0b" kindref="member">RPC_WALLET_ALREADY_UNLOCKED</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>-17,<sp/></highlight><highlight class="comment">//<sp/>Wallet<sp/>is<sp/>already<sp/>unlocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IOStream<sp/>device<sp/>that<sp/>speaks<sp/>SSL<sp/>but<sp/>can<sp/>also<sp/>speak<sp/>non-SSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Protocol&gt;</highlight></codeline>
<codeline lineno="79" refid="class_s_s_l_i_o_stream_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_s_l_i_o_stream_device" kindref="compound">SSLIOStreamDevice</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::iostreams::device&lt;boost::iostreams::bidirectional&gt;<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81" refid="class_s_s_l_i_o_stream_device_1a603e5709babdeaaa68c159a2895d7f2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_s_l_i_o_stream_device_1a603e5709babdeaaa68c159a2895d7f2e" kindref="member">SSLIOStreamDevice</ref>(boost::asio::ssl::stream&lt;typename<sp/>Protocol::socket&gt;<sp/>&amp;streamIn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUseSSLIn)<sp/>:<sp/>stream(streamIn)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUseSSL<sp/>=<sp/>fUseSSLIn;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fNeedHandshake<sp/>=<sp/>fUseSSLIn;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_s_s_l_i_o_stream_device_1a6607d02de410f1c731bf1dcf3bac9bb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_s_l_i_o_stream_device_1a6607d02de410f1c731bf1dcf3bac9bb5" kindref="member">handshake</ref>(boost::asio::ssl::stream_base::handshake_type<sp/>role)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fNeedHandshake)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fNeedHandshake<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.handshake(role);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93" refid="class_s_s_l_i_o_stream_device_1a8beb626f163adac311a5ec507c3e495a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streamsize<sp/><ref refid="class_s_s_l_i_o_stream_device_1a8beb626f163adac311a5ec507c3e495a" kindref="member">read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/>std::streamsize<sp/>n)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_s_l_i_o_stream_device_1a6607d02de410f1c731bf1dcf3bac9bb5" kindref="member">handshake</ref>(boost::asio::ssl::stream_base::server);<sp/></highlight><highlight class="comment">//<sp/>HTTPS<sp/>servers<sp/>read<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fUseSSL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream.read_some(boost::asio::buffer(s,<sp/>n));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream.next_layer().read_some(boost::asio::buffer(s,<sp/>n));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99" refid="class_s_s_l_i_o_stream_device_1aa4bfad893484ffdf9dbcdce97c462ad0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streamsize<sp/><ref refid="class_s_s_l_i_o_stream_device_1aa4bfad893484ffdf9dbcdce97c462ad0" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/>std::streamsize<sp/>n)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_s_l_i_o_stream_device_1a6607d02de410f1c731bf1dcf3bac9bb5" kindref="member">handshake</ref>(boost::asio::ssl::stream_base::client);<sp/></highlight><highlight class="comment">//<sp/>HTTPS<sp/>clients<sp/>write<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fUseSSL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1ab0495845642137298531065dbf3a50a1" kindref="member">boost::asio::write</ref>(stream,<sp/>boost::asio::buffer(s,<sp/>n));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1ab0495845642137298531065dbf3a50a1" kindref="member">boost::asio::write</ref>(stream.next_layer(),<sp/>boost::asio::buffer(s,<sp/>n));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105" refid="class_s_s_l_i_o_stream_device_1acdded14a6c79e263989ebf8aea392405" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_s_l_i_o_stream_device_1acdded14a6c79e263989ebf8aea392405" kindref="member">connect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>server,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>port)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::ip::tcp::resolver<sp/>resolver(stream.get_io_service());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::ip::tcp::resolver::query<sp/>query(server.c_str(),<sp/>port.c_str());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::ip::tcp::resolver::iterator<sp/>endpoint_iterator<sp/>=<sp/>resolver.resolve(query);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::ip::tcp::resolver::iterator<sp/>end;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::system::error_code<sp/>error<sp/>=<sp/>boost::asio::error::host_not_found;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(error<sp/>&amp;&amp;<sp/>endpoint_iterator<sp/>!=<sp/>end)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.lowest_layer().close();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.lowest_layer().connect(*endpoint_iterator++,<sp/>error);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fNeedHandshake;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fUseSSL;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::asio::ssl::stream&lt;typename<sp/>Protocol::socket&gt;&amp;<sp/>stream;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">std::string<sp/><ref refid="rpcprotocol_8h_1a6ce552952d1a270cd92e12e53a53df90" kindref="member">HTTPPost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strMsg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,std::string&gt;&amp;<sp/>mapRequestHeaders);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">std::string<sp/><ref refid="rpcprotocol_8h_1aa3a6ad4a7d1b01eb440e43214280c2d6" kindref="member">HTTPReply</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStatus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strMsg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepalive);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1afbaac856b5edb9692407fc3f2254a5c0" kindref="member">ReadHTTPRequestLine</ref>(std::basic_istream&lt;char&gt;&amp;<sp/>stream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;proto,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string&amp;<sp/>http_method,<sp/>std::string&amp;<sp/>http_uri);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1af615c564cc7794d255e5adfacade4066" kindref="member">ReadHTTPStatus</ref>(std::basic_istream&lt;char&gt;&amp;<sp/>stream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;proto);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1a440857adcf1e52899fdf8843e3e943af" kindref="member">ReadHTTPHeaders</ref>(std::basic_istream&lt;char&gt;&amp;<sp/>stream,<sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>mapHeadersRet);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rpcprotocol_8h_1ae3fa5c9e35e8a2824f721e136e9c7cf9" kindref="member">ReadHTTPMessage</ref>(std::basic_istream&lt;char&gt;&amp;<sp/>stream,<sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>mapHeadersRet,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string&amp;<sp/>strMessageRet,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nProto,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_size);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">std::string<sp/><ref refid="rpcprotocol_8h_1af563d02a95e56442fbe9ed93605d2405" kindref="member">JSONRPCRequest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strMethod,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aee299e52bda3816039a53210cbbfea1a" kindref="member">json_spirit::Array</ref>&amp;<sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">json_spirit::Value</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">json_spirit::Object</ref><sp/><ref refid="rpcprotocol_8h_1aebdc56873bd962e1d9b310c34e7dde0a" kindref="member">JSONRPCReplyObj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">json_spirit::Value</ref>&amp;<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">json_spirit::Value</ref>&amp;<sp/>error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">json_spirit::Value</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">std::string<sp/><ref refid="rpcprotocol_8h_1a0684e3796b75355730f1657a05ea6bcc" kindref="member">JSONRPCReply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">json_spirit::Value</ref>&amp;<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">json_spirit::Value</ref>&amp;<sp/>error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">json_spirit::Value</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="namespacejson__spirit_1aa1e2c4032be0d25e7b42eb17115dabb2" kindref="member">json_spirit::Object</ref><sp/><ref refid="rpcprotocol_8h_1a2f8638568f8f83e5a0a79a109540a18c" kindref="member">JSONRPCError</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/rpcprotocol.h"/>
  </compounddef>
</doxygen>
