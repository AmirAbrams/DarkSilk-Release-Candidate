<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="kernel_8h" kind="file" language="C++">
    <compoundname>kernel.h</compoundname>
    <includes refid="chain_8h" local="yes">chain.h</includes>
    <includedby refid="chain_8cpp" local="yes">/home/dev/ds-160209/src/chain.cpp</includedby>
    <includedby refid="kernel_8cpp" local="yes">/home/dev/ds-160209/src/kernel.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">/home/dev/ds-160209/src/main.cpp</includedby>
    <includedby refid="miner_8cpp" local="yes">/home/dev/ds-160209/src/miner.cpp</includedby>
    <includedby refid="rpcblockchain_8cpp" local="yes">/home/dev/ds-160209/src/rpcblockchain.cpp</includedby>
    <includedby refid="rpcmining_8cpp" local="yes">/home/dev/ds-160209/src/rpcmining.cpp</includedby>
    <includedby refid="txdb-leveldb_8cpp" local="yes">/home/dev/ds-160209/src/txdb-leveldb.cpp</includedby>
    <includedby refid="wallet_8cpp" local="yes">/home/dev/ds-160209/src/wallet.cpp</includedby>
    <incdepgraph>
      <node id="6167">
        <label>list</label>
      </node>
      <node id="6136">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="6195">
        <label>netinet/in.h</label>
      </node>
      <node id="6119">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6134" relation="include">
        </childnode>
        <childnode refid="6121" relation="include">
        </childnode>
      </node>
      <node id="6188">
        <label>arpa/inet.h</label>
      </node>
      <node id="6204">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="6126">
        <label>limits</label>
      </node>
      <node id="6154">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6134" relation="include">
        </childnode>
      </node>
      <node id="6155">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="6156" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6138" relation="include">
        </childnode>
      </node>
      <node id="6118">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="6119" relation="include">
        </childnode>
        <childnode refid="6142" relation="include">
        </childnode>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6145" relation="include">
        </childnode>
        <childnode refid="6146" relation="include">
        </childnode>
        <childnode refid="6182" relation="include">
        </childnode>
        <childnode refid="6180" relation="include">
        </childnode>
      </node>
      <node id="6146">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="6121" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6147" relation="include">
        </childnode>
        <childnode refid="6148" relation="include">
        </childnode>
        <childnode refid="6149" relation="include">
        </childnode>
        <childnode refid="6158" relation="include">
        </childnode>
        <childnode refid="6160" relation="include">
        </childnode>
        <childnode refid="6179" relation="include">
        </childnode>
      </node>
      <node id="6178">
        <label>openssl/rand.h</label>
      </node>
      <node id="6143">
        <label>assert.h</label>
      </node>
      <node id="6131">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="6194">
        <label>net/if.h</label>
      </node>
      <node id="6206">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="6140">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="6141" relation="include">
        </childnode>
        <childnode refid="6121" relation="include">
        </childnode>
      </node>
      <node id="6137">
        <label>sys/mman.h</label>
      </node>
      <node id="6134">
        <label>stdlib.h</label>
      </node>
      <node id="6116">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="6117" relation="include">
        </childnode>
        <childnode refid="6160" relation="include">
        </childnode>
        <childnode refid="6200" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
        <childnode refid="6147" relation="include">
        </childnode>
      </node>
      <node id="6147">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="6177">
        <label>openssl/crypto.h</label>
      </node>
      <node id="6191">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="6192" relation="include">
        </childnode>
        <childnode refid="6137" relation="include">
        </childnode>
        <childnode refid="6193" relation="include">
        </childnode>
        <childnode refid="6161" relation="include">
        </childnode>
        <childnode refid="6194" relation="include">
        </childnode>
        <childnode refid="6195" relation="include">
        </childnode>
        <childnode refid="6188" relation="include">
        </childnode>
        <childnode refid="6196" relation="include">
        </childnode>
        <childnode refid="6138" relation="include">
        </childnode>
        <childnode refid="6197" relation="include">
        </childnode>
        <childnode refid="6139" relation="include">
        </childnode>
        <childnode refid="6198" relation="include">
        </childnode>
      </node>
      <node id="6173">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="6151">
        <label>openssl/sha.h</label>
      </node>
      <node id="6198">
        <label>errno.h</label>
      </node>
      <node id="6125">
        <label>cassert</label>
      </node>
      <node id="6144">
        <label>stdexcept</label>
      </node>
      <node id="6160">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="6161" relation="include">
        </childnode>
        <childnode refid="6162" relation="include">
        </childnode>
        <childnode refid="6163" relation="include">
        </childnode>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6164" relation="include">
        </childnode>
        <childnode refid="6119" relation="include">
        </childnode>
        <childnode refid="6123" relation="include">
        </childnode>
        <childnode refid="6167" relation="include">
        </childnode>
        <childnode refid="6168" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
        <childnode refid="6121" relation="include">
        </childnode>
        <childnode refid="6169" relation="include">
        </childnode>
        <childnode refid="6170" relation="include">
        </childnode>
        <childnode refid="6171" relation="include">
        </childnode>
        <childnode refid="6172" relation="include">
        </childnode>
        <childnode refid="6173" relation="include">
        </childnode>
        <childnode refid="6174" relation="include">
        </childnode>
        <childnode refid="6175" relation="include">
        </childnode>
        <childnode refid="6176" relation="include">
        </childnode>
        <childnode refid="6177" relation="include">
        </childnode>
        <childnode refid="6178" relation="include">
        </childnode>
        <childnode refid="6159" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
      </node>
      <node id="6199">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="6200" relation="include">
        </childnode>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6190" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6121" relation="include">
        </childnode>
      </node>
      <node id="6172">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="6121">
        <label>string</label>
      </node>
      <node id="6183">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6134" relation="include">
        </childnode>
        <childnode refid="6160" relation="include">
        </childnode>
        <childnode refid="6184" relation="include">
        </childnode>
      </node>
      <node id="6123">
        <label>map</label>
      </node>
      <node id="6169">
        <label>boost/thread.hpp</label>
      </node>
      <node id="6201">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="6190" relation="include">
        </childnode>
        <childnode refid="6199" relation="include">
        </childnode>
        <childnode refid="6202" relation="include">
        </childnode>
        <childnode refid="6182" relation="include">
        </childnode>
        <childnode refid="6160" relation="include">
        </childnode>
        <childnode refid="6123" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
      </node>
      <node id="6156">
        <label>stddef.h</label>
      </node>
      <node id="6148">
        <label>boost/variant.hpp</label>
      </node>
      <node id="6197">
        <label>netdb.h</label>
      </node>
      <node id="6192">
        <label>sys/fcntl.h</label>
      </node>
      <node id="6120">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="6121" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
        <childnode refid="6123" relation="include">
        </childnode>
        <childnode refid="6124" relation="include">
        </childnode>
        <childnode refid="6125" relation="include">
        </childnode>
        <childnode refid="6126" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6128" relation="include">
        </childnode>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
        <childnode refid="6131" relation="include">
        </childnode>
        <childnode refid="6132" relation="include">
        </childnode>
        <childnode refid="6140" relation="include">
        </childnode>
      </node>
      <node id="6138">
        <label>limits.h</label>
      </node>
      <node id="6203">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="6189">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="6124" relation="include">
        </childnode>
        <childnode refid="6185" relation="include">
        </childnode>
      </node>
      <node id="6163">
        <label>sys/resource.h</label>
      </node>
      <node id="6174">
        <label>openssl/bio.h</label>
      </node>
      <node id="6187">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="6190">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="6121" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6191" relation="include">
        </childnode>
      </node>
      <node id="6150">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="6142" relation="include">
        </childnode>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6151" relation="include">
        </childnode>
        <childnode refid="6152" relation="include">
        </childnode>
        <childnode refid="6153" relation="include">
        </childnode>
        <childnode refid="6154" relation="include">
        </childnode>
        <childnode refid="6155" relation="include">
        </childnode>
        <childnode refid="6157" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
      </node>
      <node id="6196">
        <label>ifaddrs.h</label>
      </node>
      <node id="6179">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="6160" relation="include">
        </childnode>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6134" relation="include">
        </childnode>
        <childnode refid="6180" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
        <childnode refid="6181" relation="include">
        </childnode>
      </node>
      <node id="6161">
        <label>sys/types.h</label>
      </node>
      <node id="6115">
        <label>/home/dev/ds-160209/src/kernel.h</label>
        <link refid="kernel.h"/>
        <childnode refid="6116" relation="include">
        </childnode>
      </node>
      <node id="6209">
        <label>ios</label>
      </node>
      <node id="6135">
        <label>string.h</label>
      </node>
      <node id="6141">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="6129">
        <label>cstdio</label>
      </node>
      <node id="6205">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="6176">
        <label>openssl/buffer.h</label>
      </node>
      <node id="6130">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="6171">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="6149">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="6150" relation="include">
        </childnode>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6142" relation="include">
        </childnode>
        <childnode refid="6144" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
      </node>
      <node id="6139">
        <label>unistd.h</label>
      </node>
      <node id="6122">
        <label>vector</label>
      </node>
      <node id="6158">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6142" relation="include">
        </childnode>
        <childnode refid="6159" relation="include">
        </childnode>
        <childnode refid="6144" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
      </node>
      <node id="6184">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="6185" relation="include">
        </childnode>
        <childnode refid="6186" relation="include">
        </childnode>
        <childnode refid="6147" relation="include">
        </childnode>
        <childnode refid="6187" relation="include">
        </childnode>
        <childnode refid="6178" relation="include">
        </childnode>
        <childnode refid="6188" relation="include">
        </childnode>
        <childnode refid="6189" relation="include">
        </childnode>
        <childnode refid="6190" relation="include">
        </childnode>
        <childnode refid="6199" relation="include">
        </childnode>
        <childnode refid="6201" relation="include">
        </childnode>
        <childnode refid="6150" relation="include">
        </childnode>
        <childnode refid="6207" relation="include">
        </childnode>
      </node>
      <node id="6152">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="6170">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="6168">
        <label>utility</label>
      </node>
      <node id="6166">
        <label>sstream</label>
      </node>
      <node id="6175">
        <label>openssl/evp.h</label>
      </node>
      <node id="6164">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="6125" relation="include">
        </childnode>
        <childnode refid="6165" relation="include">
        </childnode>
        <childnode refid="6166" relation="include">
        </childnode>
        <childnode refid="6144" relation="include">
        </childnode>
      </node>
      <node id="6127">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="6207">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="6132" relation="include">
        </childnode>
        <childnode refid="6120" relation="include">
        </childnode>
        <childnode refid="6208" relation="include">
        </childnode>
        <childnode refid="6143" relation="include">
        </childnode>
        <childnode refid="6209" relation="include">
        </childnode>
        <childnode refid="6126" relation="include">
        </childnode>
        <childnode refid="6123" relation="include">
        </childnode>
        <childnode refid="6124" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6121" relation="include">
        </childnode>
        <childnode refid="6135" relation="include">
        </childnode>
        <childnode refid="6168" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
      </node>
      <node id="6157">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6156" relation="include">
        </childnode>
        <childnode refid="6138" relation="include">
        </childnode>
      </node>
      <node id="6162">
        <label>sys/time.h</label>
      </node>
      <node id="6165">
        <label>iostream</label>
      </node>
      <node id="6185">
        <label>deque</label>
      </node>
      <node id="6142">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="6143" relation="include">
        </childnode>
        <childnode refid="6128" relation="include">
        </childnode>
        <childnode refid="6144" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6121" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
      </node>
      <node id="6193">
        <label>sys/socket.h</label>
      </node>
      <node id="6186">
        <label>boost/array.hpp</label>
      </node>
      <node id="6159">
        <label>openssl/bn.h</label>
      </node>
      <node id="6182">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="6127" relation="include">
        </childnode>
      </node>
      <node id="6132">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="6133" relation="include">
        </childnode>
        <childnode refid="6135" relation="include">
        </childnode>
        <childnode refid="6121" relation="include">
        </childnode>
        <childnode refid="6136" relation="include">
        </childnode>
        <childnode refid="6123" relation="include">
        </childnode>
        <childnode refid="6137" relation="include">
        </childnode>
        <childnode refid="6138" relation="include">
        </childnode>
        <childnode refid="6139" relation="include">
        </childnode>
      </node>
      <node id="6200">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="6158" relation="include">
        </childnode>
        <childnode refid="6142" relation="include">
        </childnode>
        <childnode refid="6122" relation="include">
        </childnode>
      </node>
      <node id="6124">
        <label>set</label>
      </node>
      <node id="6208">
        <label>algorithm</label>
      </node>
      <node id="6153">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6134" relation="include">
        </childnode>
      </node>
      <node id="6145">
        <label>util.h</label>
      </node>
      <node id="6180">
        <label>stdio.h</label>
      </node>
      <node id="6133">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="6134" relation="include">
        </childnode>
      </node>
      <node id="6128">
        <label>cstring</label>
      </node>
      <node id="6202">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="6203" relation="include">
        </childnode>
        <childnode refid="6204" relation="include">
        </childnode>
        <childnode refid="6205" relation="include">
        </childnode>
        <childnode refid="6136" relation="include">
        </childnode>
        <childnode refid="6206" relation="include">
        </childnode>
      </node>
      <node id="6181">
        <label>inttypes.h</label>
      </node>
      <node id="6117">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="6118" relation="include">
        </childnode>
        <childnode refid="6157" relation="include">
        </childnode>
        <childnode refid="6183" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6219">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="6215">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="6216" relation="include">
        </childnode>
      </node>
      <node id="6216">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="6214">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="6217">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="6218">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="6210">
        <label>/home/dev/ds-160209/src/kernel.h</label>
        <link refid="kernel.h"/>
        <childnode refid="6211" relation="include">
        </childnode>
        <childnode refid="6212" relation="include">
        </childnode>
        <childnode refid="6213" relation="include">
        </childnode>
        <childnode refid="6214" relation="include">
        </childnode>
        <childnode refid="6215" relation="include">
        </childnode>
        <childnode refid="6217" relation="include">
        </childnode>
        <childnode refid="6218" relation="include">
        </childnode>
        <childnode refid="6219" relation="include">
        </childnode>
      </node>
      <node id="6212">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
      </node>
      <node id="6211">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="6213">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="kernel_8h_1a18dcbfe65b24ad1da72f53390a089b9c" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int STAKE_TIMESTAMP_MASK</definition>
        <argsstring></argsstring>
        <name>STAKE_TIMESTAMP_MASK</name>
        <initializer>= 15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="11" column="1" bodyfile="/home/dev/ds-160209/src/kernel.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nModifierInterval</definition>
        <argsstring></argsstring>
        <name>nModifierInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="14" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kernel_8h_1ae872bad816d614f8275ac472f9bcae0f" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int MODIFIER_INTERVAL_RATIO</definition>
        <argsstring></argsstring>
        <name>MODIFIER_INTERVAL_RATIO</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="18" column="1" bodyfile="/home/dev/ds-160209/src/kernel.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ComputeNextStakeModifier</definition>
        <argsstring>(const CBlockIndex *pindexPrev, uint64_t &amp;nStakeModifier, bool &amp;fGeneratedStakeModifier)</argsstring>
        <name>ComputeNextStakeModifier</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> &amp;</type>
          <declname>nStakeModifier</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>fGeneratedStakeModifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="21" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="111" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1ae7cea47493b7e179fe492df175c9cfdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 ComputeStakeModifierV2</definition>
        <argsstring>(const CBlockIndex *pindexPrev, const uint256 &amp;kernel)</argsstring>
        <name>ComputeStakeModifierV2</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="22" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="196" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a92f7a1863b9988c21166341c849e26db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckStakeKernelHash</definition>
        <argsstring>(CBlockIndex *pindexPrev, unsigned int nBits, unsigned int nTimeBlockFrom, const CTransaction &amp;txPrev, const COutPoint &amp;prevout, unsigned int nTimeTx, uint256 &amp;hashProofOfStake, uint256 &amp;targetProofOfStake, bool fPrintProofOfStake=false)</argsstring>
        <name>CheckStakeKernelHash</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nTimeBlockFrom</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txPrev</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_out_point" kindref="compound">COutPoint</ref> &amp;</type>
          <declname>prevout</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nTimeTx</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hashProofOfStake</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>targetProofOfStake</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fPrintProofOfStake</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="26" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="227" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckProofOfStake</definition>
        <argsstring>(CBlockIndex *pindexPrev, const CTransaction &amp;tx, unsigned int nBits, uint256 &amp;hashProofOfStake, uint256 &amp;targetProofOfStake)</argsstring>
        <name>CheckProofOfStake</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hashProofOfStake</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>targetProofOfStake</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="30" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="286" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a03754eb0da5023cee284ac6aa68cb4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckCoinStakeTimestamp</definition>
        <argsstring>(int nHeight, int64_t nTimeBlock, int64_t nTimeTx)</argsstring>
        <name>CheckCoinStakeTimestamp</name>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTimeBlock</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTimeTx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a65c0eeb113370d36da64a679e184bc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetWeight</definition>
        <argsstring>(int64_t nIntervalBeginning, int64_t nIntervalEnd)</argsstring>
        <name>GetWeight</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nIntervalBeginning</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nIntervalEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="15" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckKernel</definition>
        <argsstring>(CBlockIndex *pindexPrev, unsigned int nBits, int64_t nTime, const COutPoint &amp;prevout, int64_t *pBlockTime=NULL)</argsstring>
        <name>CheckKernel</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTime</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_out_point" kindref="compound">COutPoint</ref> &amp;</type>
          <declname>prevout</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> *</type>
          <declname>pBlockTime</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="41" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="328" bodyend="353"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012-2016<sp/>The<sp/>PPCoin<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PPCOIN_KERNEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PPCOIN_KERNEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chain_8h" kindref="compound">chain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>decrease<sp/>granularity<sp/>of<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Supposed<sp/>to<sp/>be<sp/>2^n-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>STAKE_TIMESTAMP_MASK<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MODIFIER_INTERVAL:<sp/>time<sp/>to<sp/>elapse<sp/>before<sp/>new<sp/>modifier<sp/>is<sp/>computed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" kindref="member">nModifierInterval</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MODIFIER_INTERVAL_RATIO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ratio<sp/>of<sp/>group<sp/>interval<sp/>length<sp/>between<sp/>the<sp/>last<sp/>group<sp/>and<sp/>the<sp/>first<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MODIFIER_INTERVAL_RATIO<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>hash<sp/>modifier<sp/>for<sp/>proof-of-stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" kindref="member">ComputeNextStakeModifier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>&amp;<sp/>nStakeModifier,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>fGeneratedStakeModifier);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="kernel_8h_1ae7cea47493b7e179fe492df175c9cfdc" kindref="member">ComputeStakeModifierV2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>kernel);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>stake<sp/>kernel<sp/>meets<sp/>hash<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>hashProofOfStake<sp/>on<sp/>success<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" kindref="member">CheckStakeKernelHash</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTimeBlockFrom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>&amp;<sp/>prevout,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTimeTx,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hashProofOfStake,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>targetProofOfStake,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fPrintProofOfStake=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>kernel<sp/>hash<sp/>target<sp/>and<sp/>coinstake<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>hashProofOfStake<sp/>on<sp/>success<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" kindref="member">CheckProofOfStake</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hashProofOfStake,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>targetProofOfStake);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>the<sp/>coinstake<sp/>timestamp<sp/>meets<sp/>protocol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a03754eb0da5023cee284ac6aa68cb4e0" kindref="member">CheckCoinStakeTimestamp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTimeBlock,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTimeTx);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>time<sp/>weight<sp/>using<sp/>supplied<sp/>timestamps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="kernel_8h_1a65c0eeb113370d36da64a679e184bc16" kindref="member">GetWeight</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIntervalBeginning,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIntervalEnd);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wrapper<sp/>around<sp/>CheckStakeKernelHash()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also<sp/>checks<sp/>existence<sp/>of<sp/>kernel<sp/>input<sp/>and<sp/>min<sp/>age</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenient<sp/>for<sp/>searching<sp/>a<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" kindref="member">CheckKernel</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>&amp;<sp/>prevout,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>*<sp/>pBlockTime<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PPCOIN_KERNEL_H</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/kernel.h"/>
  </compounddef>
</doxygen>
