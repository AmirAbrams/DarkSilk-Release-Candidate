<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="kernel_8h" kind="file" language="C++">
    <compoundname>kernel.h</compoundname>
    <includes refid="chain_8h" local="yes">chain.h</includes>
    <includedby refid="chain_8cpp" local="yes">/home/dev/ds-160209/src/chain.cpp</includedby>
    <includedby refid="kernel_8cpp" local="yes">/home/dev/ds-160209/src/kernel.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">/home/dev/ds-160209/src/main.cpp</includedby>
    <includedby refid="miner_8cpp" local="yes">/home/dev/ds-160209/src/miner.cpp</includedby>
    <includedby refid="rpcblockchain_8cpp" local="yes">/home/dev/ds-160209/src/rpcblockchain.cpp</includedby>
    <includedby refid="rpcmining_8cpp" local="yes">/home/dev/ds-160209/src/rpcmining.cpp</includedby>
    <includedby refid="txdb-leveldb_8cpp" local="yes">/home/dev/ds-160209/src/txdb-leveldb.cpp</includedby>
    <includedby refid="wallet_8cpp" local="yes">/home/dev/ds-160209/src/wallet.cpp</includedby>
    <incdepgraph>
      <node id="35629">
        <label>list</label>
      </node>
      <node id="35598">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="35657">
        <label>netinet/in.h</label>
      </node>
      <node id="35581">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35596" relation="include">
        </childnode>
        <childnode refid="35583" relation="include">
        </childnode>
      </node>
      <node id="35650">
        <label>arpa/inet.h</label>
      </node>
      <node id="35666">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="35588">
        <label>limits</label>
      </node>
      <node id="35616">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35596" relation="include">
        </childnode>
      </node>
      <node id="35617">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="35618" relation="include">
        </childnode>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35600" relation="include">
        </childnode>
      </node>
      <node id="35580">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="35581" relation="include">
        </childnode>
        <childnode refid="35604" relation="include">
        </childnode>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35607" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
        <childnode refid="35644" relation="include">
        </childnode>
        <childnode refid="35642" relation="include">
        </childnode>
      </node>
      <node id="35608">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="35583" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35610" relation="include">
        </childnode>
        <childnode refid="35611" relation="include">
        </childnode>
        <childnode refid="35620" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
      </node>
      <node id="35640">
        <label>openssl/rand.h</label>
      </node>
      <node id="35605">
        <label>assert.h</label>
      </node>
      <node id="35593">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="35656">
        <label>net/if.h</label>
      </node>
      <node id="35668">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="35602">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35583" relation="include">
        </childnode>
      </node>
      <node id="35599">
        <label>sys/mman.h</label>
      </node>
      <node id="35596">
        <label>stdlib.h</label>
      </node>
      <node id="35578">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="35579" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35662" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
        <childnode refid="35609" relation="include">
        </childnode>
      </node>
      <node id="35609">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="35639">
        <label>openssl/crypto.h</label>
      </node>
      <node id="35653">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="35654" relation="include">
        </childnode>
        <childnode refid="35599" relation="include">
        </childnode>
        <childnode refid="35655" relation="include">
        </childnode>
        <childnode refid="35623" relation="include">
        </childnode>
        <childnode refid="35656" relation="include">
        </childnode>
        <childnode refid="35657" relation="include">
        </childnode>
        <childnode refid="35650" relation="include">
        </childnode>
        <childnode refid="35658" relation="include">
        </childnode>
        <childnode refid="35600" relation="include">
        </childnode>
        <childnode refid="35659" relation="include">
        </childnode>
        <childnode refid="35601" relation="include">
        </childnode>
        <childnode refid="35660" relation="include">
        </childnode>
      </node>
      <node id="35635">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="35613">
        <label>openssl/sha.h</label>
      </node>
      <node id="35660">
        <label>errno.h</label>
      </node>
      <node id="35587">
        <label>cassert</label>
      </node>
      <node id="35606">
        <label>stdexcept</label>
      </node>
      <node id="35622">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="35623" relation="include">
        </childnode>
        <childnode refid="35624" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35626" relation="include">
        </childnode>
        <childnode refid="35581" relation="include">
        </childnode>
        <childnode refid="35585" relation="include">
        </childnode>
        <childnode refid="35629" relation="include">
        </childnode>
        <childnode refid="35630" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
        <childnode refid="35583" relation="include">
        </childnode>
        <childnode refid="35631" relation="include">
        </childnode>
        <childnode refid="35632" relation="include">
        </childnode>
        <childnode refid="35633" relation="include">
        </childnode>
        <childnode refid="35634" relation="include">
        </childnode>
        <childnode refid="35635" relation="include">
        </childnode>
        <childnode refid="35636" relation="include">
        </childnode>
        <childnode refid="35637" relation="include">
        </childnode>
        <childnode refid="35638" relation="include">
        </childnode>
        <childnode refid="35639" relation="include">
        </childnode>
        <childnode refid="35640" relation="include">
        </childnode>
        <childnode refid="35621" relation="include">
        </childnode>
        <childnode refid="35589" relation="include">
        </childnode>
      </node>
      <node id="35661">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="35662" relation="include">
        </childnode>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35652" relation="include">
        </childnode>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35583" relation="include">
        </childnode>
      </node>
      <node id="35634">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="35583">
        <label>string</label>
      </node>
      <node id="35645">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35596" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35646" relation="include">
        </childnode>
      </node>
      <node id="35585">
        <label>map</label>
      </node>
      <node id="35631">
        <label>boost/thread.hpp</label>
      </node>
      <node id="35663">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="35652" relation="include">
        </childnode>
        <childnode refid="35661" relation="include">
        </childnode>
        <childnode refid="35664" relation="include">
        </childnode>
        <childnode refid="35644" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35585" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
      </node>
      <node id="35618">
        <label>stddef.h</label>
      </node>
      <node id="35610">
        <label>boost/variant.hpp</label>
      </node>
      <node id="35659">
        <label>netdb.h</label>
      </node>
      <node id="35654">
        <label>sys/fcntl.h</label>
      </node>
      <node id="35582">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="35583" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
        <childnode refid="35585" relation="include">
        </childnode>
        <childnode refid="35586" relation="include">
        </childnode>
        <childnode refid="35587" relation="include">
        </childnode>
        <childnode refid="35588" relation="include">
        </childnode>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35590" relation="include">
        </childnode>
        <childnode refid="35591" relation="include">
        </childnode>
        <childnode refid="35592" relation="include">
        </childnode>
        <childnode refid="35593" relation="include">
        </childnode>
        <childnode refid="35594" relation="include">
        </childnode>
        <childnode refid="35602" relation="include">
        </childnode>
      </node>
      <node id="35600">
        <label>limits.h</label>
      </node>
      <node id="35665">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="35651">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="35586" relation="include">
        </childnode>
        <childnode refid="35647" relation="include">
        </childnode>
      </node>
      <node id="35625">
        <label>sys/resource.h</label>
      </node>
      <node id="35636">
        <label>openssl/bio.h</label>
      </node>
      <node id="35649">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="35652">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="35583" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35653" relation="include">
        </childnode>
      </node>
      <node id="35612">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="35604" relation="include">
        </childnode>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35613" relation="include">
        </childnode>
        <childnode refid="35614" relation="include">
        </childnode>
        <childnode refid="35615" relation="include">
        </childnode>
        <childnode refid="35616" relation="include">
        </childnode>
        <childnode refid="35617" relation="include">
        </childnode>
        <childnode refid="35619" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
      </node>
      <node id="35658">
        <label>ifaddrs.h</label>
      </node>
      <node id="35641">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35596" relation="include">
        </childnode>
        <childnode refid="35642" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
        <childnode refid="35643" relation="include">
        </childnode>
      </node>
      <node id="35623">
        <label>sys/types.h</label>
      </node>
      <node id="35577">
        <label>/home/dev/ds-160209/src/kernel.h</label>
        <link refid="kernel.h"/>
        <childnode refid="35578" relation="include">
        </childnode>
      </node>
      <node id="35671">
        <label>ios</label>
      </node>
      <node id="35597">
        <label>string.h</label>
      </node>
      <node id="35603">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="35591">
        <label>cstdio</label>
      </node>
      <node id="35667">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="35638">
        <label>openssl/buffer.h</label>
      </node>
      <node id="35592">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="35633">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="35611">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="35612" relation="include">
        </childnode>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35604" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
      </node>
      <node id="35601">
        <label>unistd.h</label>
      </node>
      <node id="35584">
        <label>vector</label>
      </node>
      <node id="35620">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35604" relation="include">
        </childnode>
        <childnode refid="35621" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
        <childnode refid="35589" relation="include">
        </childnode>
      </node>
      <node id="35646">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="35647" relation="include">
        </childnode>
        <childnode refid="35648" relation="include">
        </childnode>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35649" relation="include">
        </childnode>
        <childnode refid="35640" relation="include">
        </childnode>
        <childnode refid="35650" relation="include">
        </childnode>
        <childnode refid="35651" relation="include">
        </childnode>
        <childnode refid="35652" relation="include">
        </childnode>
        <childnode refid="35661" relation="include">
        </childnode>
        <childnode refid="35663" relation="include">
        </childnode>
        <childnode refid="35612" relation="include">
        </childnode>
        <childnode refid="35669" relation="include">
        </childnode>
      </node>
      <node id="35614">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="35632">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="35630">
        <label>utility</label>
      </node>
      <node id="35628">
        <label>sstream</label>
      </node>
      <node id="35637">
        <label>openssl/evp.h</label>
      </node>
      <node id="35626">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="35587" relation="include">
        </childnode>
        <childnode refid="35627" relation="include">
        </childnode>
        <childnode refid="35628" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
      </node>
      <node id="35589">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="35669">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="35594" relation="include">
        </childnode>
        <childnode refid="35582" relation="include">
        </childnode>
        <childnode refid="35670" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35671" relation="include">
        </childnode>
        <childnode refid="35588" relation="include">
        </childnode>
        <childnode refid="35585" relation="include">
        </childnode>
        <childnode refid="35586" relation="include">
        </childnode>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35583" relation="include">
        </childnode>
        <childnode refid="35597" relation="include">
        </childnode>
        <childnode refid="35630" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
      </node>
      <node id="35619">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35618" relation="include">
        </childnode>
        <childnode refid="35600" relation="include">
        </childnode>
      </node>
      <node id="35624">
        <label>sys/time.h</label>
      </node>
      <node id="35627">
        <label>iostream</label>
      </node>
      <node id="35647">
        <label>deque</label>
      </node>
      <node id="35604">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35590" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35583" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
      </node>
      <node id="35655">
        <label>sys/socket.h</label>
      </node>
      <node id="35648">
        <label>boost/array.hpp</label>
      </node>
      <node id="35621">
        <label>openssl/bn.h</label>
      </node>
      <node id="35644">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="35589" relation="include">
        </childnode>
      </node>
      <node id="35594">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="35595" relation="include">
        </childnode>
        <childnode refid="35597" relation="include">
        </childnode>
        <childnode refid="35583" relation="include">
        </childnode>
        <childnode refid="35598" relation="include">
        </childnode>
        <childnode refid="35585" relation="include">
        </childnode>
        <childnode refid="35599" relation="include">
        </childnode>
        <childnode refid="35600" relation="include">
        </childnode>
        <childnode refid="35601" relation="include">
        </childnode>
      </node>
      <node id="35662">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="35620" relation="include">
        </childnode>
        <childnode refid="35604" relation="include">
        </childnode>
        <childnode refid="35584" relation="include">
        </childnode>
      </node>
      <node id="35586">
        <label>set</label>
      </node>
      <node id="35670">
        <label>algorithm</label>
      </node>
      <node id="35615">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="35589" relation="include">
        </childnode>
        <childnode refid="35596" relation="include">
        </childnode>
      </node>
      <node id="35607">
        <label>util.h</label>
      </node>
      <node id="35642">
        <label>stdio.h</label>
      </node>
      <node id="35595">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="35596" relation="include">
        </childnode>
      </node>
      <node id="35590">
        <label>cstring</label>
      </node>
      <node id="35664">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35666" relation="include">
        </childnode>
        <childnode refid="35667" relation="include">
        </childnode>
        <childnode refid="35598" relation="include">
        </childnode>
        <childnode refid="35668" relation="include">
        </childnode>
      </node>
      <node id="35643">
        <label>inttypes.h</label>
      </node>
      <node id="35579">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="35580" relation="include">
        </childnode>
        <childnode refid="35619" relation="include">
        </childnode>
        <childnode refid="35645" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="35681">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="35677">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="35678" relation="include">
        </childnode>
      </node>
      <node id="35678">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="35676">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="35679">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="35680">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="35672">
        <label>/home/dev/ds-160209/src/kernel.h</label>
        <link refid="kernel.h"/>
        <childnode refid="35673" relation="include">
        </childnode>
        <childnode refid="35674" relation="include">
        </childnode>
        <childnode refid="35675" relation="include">
        </childnode>
        <childnode refid="35676" relation="include">
        </childnode>
        <childnode refid="35677" relation="include">
        </childnode>
        <childnode refid="35679" relation="include">
        </childnode>
        <childnode refid="35680" relation="include">
        </childnode>
        <childnode refid="35681" relation="include">
        </childnode>
      </node>
      <node id="35674">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
      </node>
      <node id="35673">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="35675">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="kernel_8h_1a18dcbfe65b24ad1da72f53390a089b9c" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int STAKE_TIMESTAMP_MASK</definition>
        <argsstring></argsstring>
        <name>STAKE_TIMESTAMP_MASK</name>
        <initializer>= 15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="11" column="1" bodyfile="/home/dev/ds-160209/src/kernel.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nModifierInterval</definition>
        <argsstring></argsstring>
        <name>nModifierInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="14" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="64" bodyend="-1"/>
        <referencedby refid="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" compoundref="kernel_8cpp" startline="111" endline="189">ComputeNextStakeModifier</referencedby>
      </memberdef>
      <memberdef kind="variable" id="kernel_8h_1ae872bad816d614f8275ac472f9bcae0f" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int MODIFIER_INTERVAL_RATIO</definition>
        <argsstring></argsstring>
        <name>MODIFIER_INTERVAL_RATIO</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="18" column="1" bodyfile="/home/dev/ds-160209/src/kernel.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ComputeNextStakeModifier</definition>
        <argsstring>(const CBlockIndex *pindexPrev, uint64_t &amp;nStakeModifier, bool &amp;fGeneratedStakeModifier)</argsstring>
        <name>ComputeNextStakeModifier</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> &amp;</type>
          <declname>nStakeModifier</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>fGeneratedStakeModifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="21" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="111" bodyend="189"/>
        <references refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
        <references refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" compoundref="main_8cpp" startline="64">nModifierInterval</references>
        <references refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" compoundref="chain_8h" startline="238" endline="241">CBlockIndex::GetBlockTime</references>
        <references refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" compoundref="chain_8h" startline="233" endline="236">CBlockIndex::GetBlockHash</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_index_1a54bbd7ae647d4097ac7915f1cefed2c7" compoundref="chain_8h" startline="291" endline="294">CBlockIndex::GetStakeEntropyBit</references>
        <references refid="util_8cpp_1a343d2a13efe00125f78d25dafb0a8d98" compoundref="util_8cpp" startline="252" endline="278">LogAcceptCategory</references>
        <references refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" compoundref="chain_8h" startline="281" endline="284">CBlockIndex::IsProofOfStake</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <referencedby refid="class_c_block_1afab527f890c5575db3b1a2b17f47bf5a" compoundref="main_8cpp" startline="4244" endline="4311">CBlock::AddToBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1ae7cea47493b7e179fe492df175c9cfdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 ComputeStakeModifierV2</definition>
        <argsstring>(const CBlockIndex *pindexPrev, const uint256 &amp;kernel)</argsstring>
        <name>ComputeStakeModifierV2</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="22" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="196" bodyend="204"/>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="class_c_block_index_1aa8c9b5c3316413a332d5dea243c2c2c9" compoundref="chain_8h" startline="130">CBlockIndex::bnStakeModifierV2</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" compoundref="streams_8h" startline="112" endline="112">CDataStream::begin</references>
        <references refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" compoundref="streams_8h" startline="114" endline="114">CDataStream::end</references>
        <referencedby refid="class_c_block_1afab527f890c5575db3b1a2b17f47bf5a" compoundref="main_8cpp" startline="4244" endline="4311">CBlock::AddToBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a92f7a1863b9988c21166341c849e26db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckStakeKernelHash</definition>
        <argsstring>(CBlockIndex *pindexPrev, unsigned int nBits, unsigned int nTimeBlockFrom, const CTransaction &amp;txPrev, const COutPoint &amp;prevout, unsigned int nTimeTx, uint256 &amp;hashProofOfStake, uint256 &amp;targetProofOfStake, bool fPrintProofOfStake=false)</argsstring>
        <name>CheckStakeKernelHash</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nTimeBlockFrom</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txPrev</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_out_point" kindref="compound">COutPoint</ref> &amp;</type>
          <declname>prevout</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nTimeTx</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hashProofOfStake</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>targetProofOfStake</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fPrintProofOfStake</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="26" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="227" bodyend="283"/>
        <references refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" compoundref="transaction_8h" startline="260">CTransaction::nTime</references>
        <references refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" compoundref="bignum_8h" startline="321" endline="331">CBigNum::SetCompact</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" compoundref="transaction_8h" startline="31">COutPoint::n</references>
        <references refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" compoundref="bignum_8h" startline="278" endline="291">CBigNum::getuint256</references>
        <references refid="class_c_block_index_1a2aa226c04d79a4d932ed6eb0abd02cbe" compoundref="chain_8h" startline="129">CBlockIndex::nStakeModifier</references>
        <references refid="class_c_block_index_1aa8c9b5c3316413a332d5dea243c2c2c9" compoundref="chain_8h" startline="130">CBlockIndex::bnStakeModifierV2</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" compoundref="chain_8h" startline="141">CBlockIndex::nTime</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" compoundref="streams_8h" startline="112" endline="112">CDataStream::begin</references>
        <references refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" compoundref="streams_8h" startline="114" endline="114">CDataStream::end</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <referencedby refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" compoundref="kernel_8cpp" startline="286" endline="320">CheckProofOfStake</referencedby>
        <referencedby refid="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" compoundref="kernel_8cpp" startline="328" endline="353">CheckKernel</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckProofOfStake</definition>
        <argsstring>(CBlockIndex *pindexPrev, const CTransaction &amp;tx, unsigned int nBits, uint256 &amp;hashProofOfStake, uint256 &amp;targetProofOfStake)</argsstring>
        <name>CheckProofOfStake</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hashProofOfStake</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>targetProofOfStake</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="30" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="286" bodyend="320"/>
        <references refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" compoundref="transaction_8h" startline="319" endline="323">CTransaction::IsCoinStake</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" compoundref="main_8cpp" startline="3649" endline="3674">CTransactionPoS::ReadFromDisk</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" compoundref="transaction_8h" startline="267" endline="267">CTransaction::DoS</references>
        <references refid="script_8cpp_1a3bebacccf5ed6d80e80889b65830f893" compoundref="script_8cpp" startline="2958" endline="2970">VerifySignature</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaac14772d5583e6e6a1146e4ec51ae3fb0" compoundref="script_8h" startline="101">SCRIPT_VERIFY_NONE</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" compoundref="main_8h" startline="446">CTxIndex::pos</references>
        <references refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" compoundref="main_8h" startline="228">CDiskTxPos::nFile</references>
        <references refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" compoundref="main_8h" startline="229">CDiskTxPos::nBlockPos</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <references refid="main_8cpp_1a22e712bbf635a69ba8dd7ae004d2697b" compoundref="main_8cpp" startline="1766" endline="1777">IsConfirmedInNPrevBlocks</references>
        <references refid="main_8cpp_1a6d3cd49df21f4264ed1489ea304dbcb8" compoundref="main_8cpp" startline="65">nStakeMinConfirmations</references>
        <references refid="kernel_8cpp_1a40b6982bd755610b7829746a193ee619" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="class_c_transaction_1a8ccb4b6020669bc562095e3417715e41" compoundref="transaction_8h" startline="260">CTransaction::nTime</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a03754eb0da5023cee284ac6aa68cb4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckCoinStakeTimestamp</definition>
        <argsstring>(int nHeight, int64_t nTimeBlock, int64_t nTimeTx)</argsstring>
        <name>CheckCoinStakeTimestamp</name>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTimeBlock</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTimeTx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="323" bodyend="326"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a65c0eeb113370d36da64a679e184bc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetWeight</definition>
        <argsstring>(int64_t nIntervalBeginning, int64_t nIntervalEnd)</argsstring>
        <name>GetWeight</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nIntervalBeginning</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nIntervalEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="15" bodyend="22"/>
        <references refid="main_8cpp_1a621f4f63be83358641eb78f48d2f49c2" compoundref="main_8cpp" startline="63">nStakeMinAge</references>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      <memberdef kind="function" id="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckKernel</definition>
        <argsstring>(CBlockIndex *pindexPrev, unsigned int nBits, int64_t nTime, const COutPoint &amp;prevout, int64_t *pBlockTime=NULL)</argsstring>
        <name>CheckKernel</name>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexPrev</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nTime</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_out_point" kindref="compound">COutPoint</ref> &amp;</type>
          <declname>prevout</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> *</type>
          <declname>pBlockTime</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/kernel.h" line="41" column="1" bodyfile="/home/dev/ds-160209/src/kernel.cpp" bodystart="328" bodyend="353"/>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" compoundref="main_8cpp" startline="3649" endline="3674">CTransactionPoS::ReadFromDisk</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" compoundref="main_8h" startline="446">CTxIndex::pos</references>
        <references refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" compoundref="main_8h" startline="228">CDiskTxPos::nFile</references>
        <references refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" compoundref="main_8h" startline="229">CDiskTxPos::nBlockPos</references>
        <references refid="main_8cpp_1a22e712bbf635a69ba8dd7ae004d2697b" compoundref="main_8cpp" startline="1766" endline="1777">IsConfirmedInNPrevBlocks</references>
        <references refid="main_8cpp_1a6d3cd49df21f4264ed1489ea304dbcb8" compoundref="main_8cpp" startline="65">nStakeMinConfirmations</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="kernel_8cpp_1a40b6982bd755610b7829746a193ee619" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</references>
        <referencedby refid="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" compoundref="rpcmining_8cpp" startline="150" endline="234">checkkernel</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012-2016<sp/>The<sp/>PPCoin<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PPCOIN_KERNEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PPCOIN_KERNEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chain_8h" kindref="compound">chain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>decrease<sp/>granularity<sp/>of<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Supposed<sp/>to<sp/>be<sp/>2^n-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>STAKE_TIMESTAMP_MASK<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MODIFIER_INTERVAL:<sp/>time<sp/>to<sp/>elapse<sp/>before<sp/>new<sp/>modifier<sp/>is<sp/>computed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a12388da9cd7b3a99208684bd4535f098" kindref="member">nModifierInterval</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MODIFIER_INTERVAL_RATIO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ratio<sp/>of<sp/>group<sp/>interval<sp/>length<sp/>between<sp/>the<sp/>last<sp/>group<sp/>and<sp/>the<sp/>first<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MODIFIER_INTERVAL_RATIO<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>hash<sp/>modifier<sp/>for<sp/>proof-of-stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1aa58b095aa0abb6f956cc68169124099a" kindref="member">ComputeNextStakeModifier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>&amp;<sp/>nStakeModifier,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>fGeneratedStakeModifier);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="kernel_8h_1ae7cea47493b7e179fe492df175c9cfdc" kindref="member">ComputeStakeModifierV2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>kernel);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>stake<sp/>kernel<sp/>meets<sp/>hash<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>hashProofOfStake<sp/>on<sp/>success<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" kindref="member">CheckStakeKernelHash</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTimeBlockFrom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>&amp;<sp/>prevout,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTimeTx,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hashProofOfStake,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>targetProofOfStake,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fPrintProofOfStake=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>kernel<sp/>hash<sp/>target<sp/>and<sp/>coinstake<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>hashProofOfStake<sp/>on<sp/>success<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" kindref="member">CheckProofOfStake</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hashProofOfStake,<sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>targetProofOfStake);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>the<sp/>coinstake<sp/>timestamp<sp/>meets<sp/>protocol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a03754eb0da5023cee284ac6aa68cb4e0" kindref="member">CheckCoinStakeTimestamp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTimeBlock,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTimeTx);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>time<sp/>weight<sp/>using<sp/>supplied<sp/>timestamps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="kernel_8h_1a65c0eeb113370d36da64a679e184bc16" kindref="member">GetWeight</ref>(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIntervalBeginning,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nIntervalEnd);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wrapper<sp/>around<sp/>CheckStakeKernelHash()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also<sp/>checks<sp/>existence<sp/>of<sp/>kernel<sp/>input<sp/>and<sp/>min<sp/>age</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenient<sp/>for<sp/>searching<sp/>a<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" kindref="member">CheckKernel</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref>&amp;<sp/>prevout,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>*<sp/>pBlockTime<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PPCOIN_KERNEL_H</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/kernel.h"/>
  </compounddef>
</doxygen>
