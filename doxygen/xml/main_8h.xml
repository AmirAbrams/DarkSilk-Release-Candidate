<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="main_8h" kind="file" language="C++">
    <compoundname>main.h</compoundname>
    <includes refid="txmempool_8h" local="yes">txmempool.h</includes>
    <includes refid="net_8h" local="yes">net.h</includes>
    <includes refid="script_8h" local="yes">script.h</includes>
    <includes refid="streams_8h" local="yes">streams.h</includes>
    <includes refid="txdb_8h" local="yes">txdb.h</includes>
    <includes refid="chain_8h" local="yes">chain.h</includes>
    <includes local="no">list</includes>
    <includes local="no">boost/unordered_map.hpp</includes>
    <includedby refid="wallet_8h" local="yes">/home/dev/ds-160209/src/wallet.h</includedby>
    <includedby refid="txdb_8h" local="yes">/home/dev/ds-160209/src/txdb.h</includedby>
    <includedby refid="stormnode-payments_8h" local="yes">/home/dev/ds-160209/src/stormnode-payments.h</includedby>
    <includedby refid="stormnode_8h" local="yes">/home/dev/ds-160209/src/stormnode.h</includedby>
    <includedby refid="stormnode-sync_8h" local="yes">/home/dev/ds-160209/src/stormnode-sync.h</includedby>
    <includedby refid="stormnodeman_8h" local="yes">/home/dev/ds-160209/src/stormnodeman.h</includedby>
    <includedby refid="spork_8h" local="yes">/home/dev/ds-160209/src/spork.h</includedby>
    <includedby refid="txdb-leveldb_8h" local="yes">/home/dev/ds-160209/src/txdb-leveldb.h</includedby>
    <includedby refid="chainparams_8cpp" local="yes">/home/dev/ds-160209/src/chainparams.cpp</includedby>
    <includedby refid="checkpoints_8cpp" local="yes">/home/dev/ds-160209/src/checkpoints.cpp</includedby>
    <includedby refid="init_8cpp" local="yes">/home/dev/ds-160209/src/init.cpp</includedby>
    <includedby refid="stormnode-budget_8h" local="yes">/home/dev/ds-160209/src/stormnode-budget.h</includedby>
    <includedby refid="main_8cpp" local="yes">/home/dev/ds-160209/src/main.cpp</includedby>
    <includedby refid="net_8cpp" local="yes">/home/dev/ds-160209/src/net.cpp</includedby>
    <includedby refid="blockbrowser_8h" local="yes">/home/dev/ds-160209/src/qt/blockbrowser.h</includedby>
    <includedby refid="blockbrowser_8cpp" local="yes">/home/dev/ds-160209/src/qt/blockbrowser.cpp</includedby>
    <includedby refid="peertablemodel_8h" local="yes">/home/dev/ds-160209/src/qt/peertablemodel.h</includedby>
    <includedby refid="clientmodel_8cpp" local="yes">/home/dev/ds-160209/src/qt/clientmodel.cpp</includedby>
    <includedby refid="statisticspage_8h" local="yes">/home/dev/ds-160209/src/qt/statisticspage.h</includedby>
    <includedby refid="signverifymessagedialog_8cpp" local="yes">/home/dev/ds-160209/src/qt/signverifymessagedialog.cpp</includedby>
    <includedby refid="statisticspage_8cpp" local="yes">/home/dev/ds-160209/src/qt/statisticspage.cpp</includedby>
    <includedby refid="transactiondesc_8cpp" local="yes">/home/dev/ds-160209/src/qt/transactiondesc.cpp</includedby>
    <includedby refid="rpcblockchain_8cpp" local="yes">/home/dev/ds-160209/src/rpcblockchain.cpp</includedby>
    <includedby refid="rpcmining_8cpp" local="yes">/home/dev/ds-160209/src/rpcmining.cpp</includedby>
    <includedby refid="rpcmisc_8cpp" local="yes">/home/dev/ds-160209/src/rpcmisc.cpp</includedby>
    <includedby refid="rpcnet_8cpp" local="yes">/home/dev/ds-160209/src/rpcnet.cpp</includedby>
    <includedby refid="rpcrawtransaction_8cpp" local="yes">/home/dev/ds-160209/src/rpcrawtransaction.cpp</includedby>
    <includedby refid="rpcsmessage_8cpp" local="yes">/home/dev/ds-160209/src/rpcsmessage.cpp</includedby>
    <includedby refid="rpcstormnode-budget_8cpp" local="yes">/home/dev/ds-160209/src/rpcstormnode-budget.cpp</includedby>
    <includedby refid="rpcstormnode_8cpp" local="yes">/home/dev/ds-160209/src/rpcstormnode.cpp</includedby>
    <includedby refid="script_8cpp" local="yes">/home/dev/ds-160209/src/script.cpp</includedby>
    <includedby refid="spork_8cpp" local="yes">/home/dev/ds-160209/src/spork.cpp</includedby>
    <includedby refid="stormnode-budget_8cpp" local="yes">/home/dev/ds-160209/src/stormnode-budget.cpp</includedby>
    <includedby refid="allocator__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/allocator_tests.cpp</includedby>
    <includedby refid="base64__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/base64_tests.cpp</includedby>
    <includedby refid="wallet__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/wallet_tests.cpp</includedby>
    <includedby refid="txdb-leveldb_8cpp" local="yes">/home/dev/ds-160209/src/txdb-leveldb.cpp</includedby>
    <incdepgraph>
      <node id="40536">
        <label>list</label>
      </node>
      <node id="40505">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="40570">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40568" relation="include">
        </childnode>
      </node>
      <node id="40584">
        <label>netinet/in.h</label>
      </node>
      <node id="40488">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40503" relation="include">
        </childnode>
        <childnode refid="40490" relation="include">
        </childnode>
      </node>
      <node id="40577">
        <label>arpa/inet.h</label>
      </node>
      <node id="40554">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="40495">
        <label>limits</label>
      </node>
      <node id="40523">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40503" relation="include">
        </childnode>
      </node>
      <node id="40524">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="40525" relation="include">
        </childnode>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40507" relation="include">
        </childnode>
      </node>
      <node id="40487">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="40488" relation="include">
        </childnode>
        <childnode refid="40511" relation="include">
        </childnode>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40514" relation="include">
        </childnode>
        <childnode refid="40515" relation="include">
        </childnode>
        <childnode refid="40551" relation="include">
        </childnode>
        <childnode refid="40549" relation="include">
        </childnode>
      </node>
      <node id="40515">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40516" relation="include">
        </childnode>
        <childnode refid="40517" relation="include">
        </childnode>
        <childnode refid="40518" relation="include">
        </childnode>
        <childnode refid="40527" relation="include">
        </childnode>
        <childnode refid="40529" relation="include">
        </childnode>
        <childnode refid="40548" relation="include">
        </childnode>
      </node>
      <node id="40547">
        <label>openssl/rand.h</label>
      </node>
      <node id="40512">
        <label>assert.h</label>
      </node>
      <node id="40500">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="40583">
        <label>net/if.h</label>
      </node>
      <node id="40486">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="40487" relation="include">
        </childnode>
        <childnode refid="40552" relation="include">
        </childnode>
        <childnode refid="40557" relation="include">
        </childnode>
        <childnode refid="40488" relation="include">
        </childnode>
        <childnode refid="40572" relation="include">
        </childnode>
      </node>
      <node id="40569">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="40525" relation="include">
        </childnode>
      </node>
      <node id="40556">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="40509">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="40510" relation="include">
        </childnode>
        <childnode refid="40490" relation="include">
        </childnode>
      </node>
      <node id="40557">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="40558" relation="include">
        </childnode>
        <childnode refid="40486" relation="include">
        </childnode>
        <childnode refid="40512" relation="include">
        </childnode>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40516" relation="include">
        </childnode>
        <childnode refid="40571" relation="include">
        </childnode>
      </node>
      <node id="40506">
        <label>sys/mman.h</label>
      </node>
      <node id="40503">
        <label>stdlib.h</label>
      </node>
      <node id="40591">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="40592" relation="include">
        </childnode>
        <childnode refid="40529" relation="include">
        </childnode>
        <childnode refid="40589" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
        <childnode refid="40516" relation="include">
        </childnode>
      </node>
      <node id="40516">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="40546">
        <label>openssl/crypto.h</label>
      </node>
      <node id="40580">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="40581" relation="include">
        </childnode>
        <childnode refid="40506" relation="include">
        </childnode>
        <childnode refid="40582" relation="include">
        </childnode>
        <childnode refid="40530" relation="include">
        </childnode>
        <childnode refid="40583" relation="include">
        </childnode>
        <childnode refid="40584" relation="include">
        </childnode>
        <childnode refid="40577" relation="include">
        </childnode>
        <childnode refid="40585" relation="include">
        </childnode>
        <childnode refid="40507" relation="include">
        </childnode>
        <childnode refid="40586" relation="include">
        </childnode>
        <childnode refid="40508" relation="include">
        </childnode>
        <childnode refid="40587" relation="include">
        </childnode>
      </node>
      <node id="40542">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="40520">
        <label>openssl/sha.h</label>
      </node>
      <node id="40587">
        <label>errno.h</label>
      </node>
      <node id="40494">
        <label>cassert</label>
      </node>
      <node id="40513">
        <label>stdexcept</label>
      </node>
      <node id="40529">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="40530" relation="include">
        </childnode>
        <childnode refid="40531" relation="include">
        </childnode>
        <childnode refid="40532" relation="include">
        </childnode>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40533" relation="include">
        </childnode>
        <childnode refid="40488" relation="include">
        </childnode>
        <childnode refid="40492" relation="include">
        </childnode>
        <childnode refid="40536" relation="include">
        </childnode>
        <childnode refid="40537" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40538" relation="include">
        </childnode>
        <childnode refid="40539" relation="include">
        </childnode>
        <childnode refid="40540" relation="include">
        </childnode>
        <childnode refid="40541" relation="include">
        </childnode>
        <childnode refid="40542" relation="include">
        </childnode>
        <childnode refid="40543" relation="include">
        </childnode>
        <childnode refid="40544" relation="include">
        </childnode>
        <childnode refid="40545" relation="include">
        </childnode>
        <childnode refid="40546" relation="include">
        </childnode>
        <childnode refid="40547" relation="include">
        </childnode>
        <childnode refid="40528" relation="include">
        </childnode>
        <childnode refid="40496" relation="include">
        </childnode>
      </node>
      <node id="40588">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="40589" relation="include">
        </childnode>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40579" relation="include">
        </childnode>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40490" relation="include">
        </childnode>
      </node>
      <node id="40541">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="40565">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40549" relation="include">
        </childnode>
        <childnode refid="40566" relation="include">
        </childnode>
        <childnode refid="40569" relation="include">
        </childnode>
      </node>
      <node id="40490">
        <label>string</label>
      </node>
      <node id="40593">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40503" relation="include">
        </childnode>
        <childnode refid="40529" relation="include">
        </childnode>
        <childnode refid="40573" relation="include">
        </childnode>
      </node>
      <node id="40492">
        <label>map</label>
      </node>
      <node id="40538">
        <label>boost/thread.hpp</label>
      </node>
      <node id="40590">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="40579" relation="include">
        </childnode>
        <childnode refid="40588" relation="include">
        </childnode>
        <childnode refid="40552" relation="include">
        </childnode>
        <childnode refid="40551" relation="include">
        </childnode>
        <childnode refid="40529" relation="include">
        </childnode>
        <childnode refid="40492" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
      </node>
      <node id="40561">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40562" relation="include">
        </childnode>
        <childnode refid="40529" relation="include">
        </childnode>
        <childnode refid="40540" relation="include">
        </childnode>
        <childnode refid="40565" relation="include">
        </childnode>
        <childnode refid="40570" relation="include">
        </childnode>
      </node>
      <node id="40525">
        <label>stddef.h</label>
      </node>
      <node id="40517">
        <label>boost/variant.hpp</label>
      </node>
      <node id="40586">
        <label>netdb.h</label>
      </node>
      <node id="40581">
        <label>sys/fcntl.h</label>
      </node>
      <node id="40558">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="40559" relation="include">
        </childnode>
      </node>
      <node id="40568">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40567" relation="include">
        </childnode>
      </node>
      <node id="40572">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="40489">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
        <childnode refid="40492" relation="include">
        </childnode>
        <childnode refid="40493" relation="include">
        </childnode>
        <childnode refid="40494" relation="include">
        </childnode>
        <childnode refid="40495" relation="include">
        </childnode>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40497" relation="include">
        </childnode>
        <childnode refid="40498" relation="include">
        </childnode>
        <childnode refid="40499" relation="include">
        </childnode>
        <childnode refid="40500" relation="include">
        </childnode>
        <childnode refid="40501" relation="include">
        </childnode>
        <childnode refid="40509" relation="include">
        </childnode>
      </node>
      <node id="40507">
        <label>limits.h</label>
      </node>
      <node id="40553">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="40578">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="40493" relation="include">
        </childnode>
        <childnode refid="40574" relation="include">
        </childnode>
      </node>
      <node id="40532">
        <label>sys/resource.h</label>
      </node>
      <node id="40543">
        <label>openssl/bio.h</label>
      </node>
      <node id="40576">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="40579">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40580" relation="include">
        </childnode>
      </node>
      <node id="40519">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="40511" relation="include">
        </childnode>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40520" relation="include">
        </childnode>
        <childnode refid="40521" relation="include">
        </childnode>
        <childnode refid="40522" relation="include">
        </childnode>
        <childnode refid="40523" relation="include">
        </childnode>
        <childnode refid="40524" relation="include">
        </childnode>
        <childnode refid="40526" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
      </node>
      <node id="40585">
        <label>ifaddrs.h</label>
      </node>
      <node id="40548">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="40529" relation="include">
        </childnode>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40503" relation="include">
        </childnode>
        <childnode refid="40549" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
        <childnode refid="40550" relation="include">
        </childnode>
      </node>
      <node id="40530">
        <label>sys/types.h</label>
      </node>
      <node id="40564">
        <label>ios</label>
      </node>
      <node id="40504">
        <label>string.h</label>
      </node>
      <node id="40510">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="40498">
        <label>cstdio</label>
      </node>
      <node id="40555">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="40545">
        <label>openssl/buffer.h</label>
      </node>
      <node id="40499">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="40485">
        <label>/home/dev/ds-160209/src/main.h</label>
        <link refid="main.h"/>
        <childnode refid="40486" relation="include">
        </childnode>
        <childnode refid="40573" relation="include">
        </childnode>
        <childnode refid="40515" relation="include">
        </childnode>
        <childnode refid="40562" relation="include">
        </childnode>
        <childnode refid="40560" relation="include">
        </childnode>
        <childnode refid="40591" relation="include">
        </childnode>
        <childnode refid="40536" relation="include">
        </childnode>
        <childnode refid="40571" relation="include">
        </childnode>
      </node>
      <node id="40540">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="40571">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="40518">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="40519" relation="include">
        </childnode>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40511" relation="include">
        </childnode>
        <childnode refid="40513" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
      </node>
      <node id="40508">
        <label>unistd.h</label>
      </node>
      <node id="40491">
        <label>vector</label>
      </node>
      <node id="40527">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40511" relation="include">
        </childnode>
        <childnode refid="40528" relation="include">
        </childnode>
        <childnode refid="40513" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
        <childnode refid="40496" relation="include">
        </childnode>
      </node>
      <node id="40573">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="40574" relation="include">
        </childnode>
        <childnode refid="40575" relation="include">
        </childnode>
        <childnode refid="40516" relation="include">
        </childnode>
        <childnode refid="40576" relation="include">
        </childnode>
        <childnode refid="40547" relation="include">
        </childnode>
        <childnode refid="40577" relation="include">
        </childnode>
        <childnode refid="40578" relation="include">
        </childnode>
        <childnode refid="40579" relation="include">
        </childnode>
        <childnode refid="40588" relation="include">
        </childnode>
        <childnode refid="40590" relation="include">
        </childnode>
        <childnode refid="40519" relation="include">
        </childnode>
        <childnode refid="40562" relation="include">
        </childnode>
      </node>
      <node id="40521">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="40539">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="40537">
        <label>utility</label>
      </node>
      <node id="40559">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="40487" relation="include">
        </childnode>
        <childnode refid="40560" relation="include">
        </childnode>
      </node>
      <node id="40535">
        <label>sstream</label>
      </node>
      <node id="40544">
        <label>openssl/evp.h</label>
      </node>
      <node id="40533">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="40494" relation="include">
        </childnode>
        <childnode refid="40534" relation="include">
        </childnode>
        <childnode refid="40535" relation="include">
        </childnode>
        <childnode refid="40513" relation="include">
        </childnode>
      </node>
      <node id="40496">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="40562">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="40501" relation="include">
        </childnode>
        <childnode refid="40489" relation="include">
        </childnode>
        <childnode refid="40563" relation="include">
        </childnode>
        <childnode refid="40512" relation="include">
        </childnode>
        <childnode refid="40564" relation="include">
        </childnode>
        <childnode refid="40495" relation="include">
        </childnode>
        <childnode refid="40492" relation="include">
        </childnode>
        <childnode refid="40493" relation="include">
        </childnode>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40504" relation="include">
        </childnode>
        <childnode refid="40537" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
      </node>
      <node id="40526">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40525" relation="include">
        </childnode>
        <childnode refid="40507" relation="include">
        </childnode>
      </node>
      <node id="40531">
        <label>sys/time.h</label>
      </node>
      <node id="40534">
        <label>iostream</label>
      </node>
      <node id="40574">
        <label>deque</label>
      </node>
      <node id="40511">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="40512" relation="include">
        </childnode>
        <childnode refid="40497" relation="include">
        </childnode>
        <childnode refid="40513" relation="include">
        </childnode>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
      </node>
      <node id="40582">
        <label>sys/socket.h</label>
      </node>
      <node id="40567">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="40512" relation="include">
        </childnode>
        <childnode refid="40525" relation="include">
        </childnode>
        <childnode refid="40504" relation="include">
        </childnode>
        <childnode refid="40490" relation="include">
        </childnode>
      </node>
      <node id="40575">
        <label>boost/array.hpp</label>
      </node>
      <node id="40528">
        <label>openssl/bn.h</label>
      </node>
      <node id="40560">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="40561" relation="include">
        </childnode>
        <childnode refid="40485" relation="include">
        </childnode>
        <childnode refid="40492" relation="include">
        </childnode>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40537" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
      </node>
      <node id="40551">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="40496" relation="include">
        </childnode>
      </node>
      <node id="40501">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="40502" relation="include">
        </childnode>
        <childnode refid="40504" relation="include">
        </childnode>
        <childnode refid="40490" relation="include">
        </childnode>
        <childnode refid="40505" relation="include">
        </childnode>
        <childnode refid="40492" relation="include">
        </childnode>
        <childnode refid="40506" relation="include">
        </childnode>
        <childnode refid="40507" relation="include">
        </childnode>
        <childnode refid="40508" relation="include">
        </childnode>
      </node>
      <node id="40589">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="40527" relation="include">
        </childnode>
        <childnode refid="40511" relation="include">
        </childnode>
        <childnode refid="40491" relation="include">
        </childnode>
      </node>
      <node id="40493">
        <label>set</label>
      </node>
      <node id="40563">
        <label>algorithm</label>
      </node>
      <node id="40522">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="40496" relation="include">
        </childnode>
        <childnode refid="40503" relation="include">
        </childnode>
      </node>
      <node id="40514">
        <label>util.h</label>
      </node>
      <node id="40549">
        <label>stdio.h</label>
      </node>
      <node id="40502">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="40503" relation="include">
        </childnode>
      </node>
      <node id="40497">
        <label>cstring</label>
      </node>
      <node id="40552">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="40553" relation="include">
        </childnode>
        <childnode refid="40554" relation="include">
        </childnode>
        <childnode refid="40555" relation="include">
        </childnode>
        <childnode refid="40505" relation="include">
        </childnode>
        <childnode refid="40556" relation="include">
        </childnode>
      </node>
      <node id="40550">
        <label>inttypes.h</label>
      </node>
      <node id="40566">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="40567" relation="include">
        </childnode>
        <childnode refid="40568" relation="include">
        </childnode>
      </node>
      <node id="40592">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="40487" relation="include">
        </childnode>
        <childnode refid="40526" relation="include">
        </childnode>
        <childnode refid="40593" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="40626">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="40610">
        <label>/home/dev/ds-160209/src/stormnodeman.cpp</label>
        <link refid="stormnodeman_8cpp"/>
      </node>
      <node id="40631">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="40611">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="40639">
        <label>/home/dev/ds-160209/src/qt/guiutil.cpp</label>
        <link refid="guiutil_8cpp"/>
      </node>
      <node id="40678">
        <label>/home/dev/ds-160209/src/stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40607" relation="include">
        </childnode>
        <childnode refid="40621" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40609" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
      </node>
      <node id="40624">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40627" relation="include">
        </childnode>
        <childnode refid="40628" relation="include">
        </childnode>
        <childnode refid="40629" relation="include">
        </childnode>
        <childnode refid="40630" relation="include">
        </childnode>
      </node>
      <node id="40637">
        <label>/home/dev/ds-160209/src/qt/addresstablemodel.cpp</label>
        <link refid="addresstablemodel_8cpp"/>
      </node>
      <node id="40612">
        <label>/home/dev/ds-160209/src/net.cpp</label>
        <link refid="net_8cpp"/>
      </node>
      <node id="40598">
        <label>/home/dev/ds-160209/src/sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="40599" relation="include">
        </childnode>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40612" relation="include">
        </childnode>
        <childnode refid="40613" relation="include">
        </childnode>
        <childnode refid="40614" relation="include">
        </childnode>
        <childnode refid="40615" relation="include">
        </childnode>
        <childnode refid="40616" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40620" relation="include">
        </childnode>
        <childnode refid="40621" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40622" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
      </node>
      <node id="40673">
        <label>/home/dev/ds-160209/src/stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="40597" relation="include">
        </childnode>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40674" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40634" relation="include">
        </childnode>
        <childnode refid="40606" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40620" relation="include">
        </childnode>
        <childnode refid="40621" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40609" relation="include">
        </childnode>
        <childnode refid="40622" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
      </node>
      <node id="40662">
        <label>/home/dev/ds-160209/src/txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="40594" relation="include">
        </childnode>
        <childnode refid="40661" relation="include">
        </childnode>
        <childnode refid="40663" relation="include">
        </childnode>
      </node>
      <node id="40607">
        <label>/home/dev/ds-160209/src/spork.cpp</label>
        <link refid="spork_8cpp"/>
      </node>
      <node id="40652">
        <label>/home/dev/ds-160209/src/qt/transactiondesc.cpp</label>
        <link refid="transactiondesc_8cpp"/>
      </node>
      <node id="40674">
        <label>/home/dev/ds-160209/src/qt/clientmodel.cpp</label>
        <link refid="clientmodel_8cpp"/>
      </node>
      <node id="40646">
        <label>/home/dev/ds-160209/src/qt/transactionview.cpp</label>
        <link refid="transactionview_8cpp"/>
      </node>
      <node id="40618">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode_8cpp"/>
      </node>
      <node id="40613">
        <label>/home/dev/ds-160209/src/qt/coincontroldialog.cpp</label>
        <link refid="coincontroldialog_8cpp"/>
      </node>
      <node id="40664">
        <label>/home/dev/ds-160209/src/coins.cpp</label>
        <link refid="coins_8cpp"/>
      </node>
      <node id="40627">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="40661">
        <label>/home/dev/ds-160209/src/coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="40662" relation="include">
        </childnode>
        <childnode refid="40664" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
      </node>
      <node id="40623">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40624" relation="include">
        </childnode>
        <childnode refid="40630" relation="include">
        </childnode>
        <childnode refid="40605" relation="include">
        </childnode>
        <childnode refid="40631" relation="include">
        </childnode>
        <childnode refid="40632" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
      </node>
      <node id="40625">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="40653">
        <label>/home/dev/ds-160209/src/rpcwallet.cpp</label>
        <link refid="rpcwallet_8cpp"/>
      </node>
      <node id="40685">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="40650" relation="include">
        </childnode>
      </node>
      <node id="40663">
        <label>/home/dev/ds-160209/src/txmempool.cpp</label>
        <link refid="txmempool_8cpp"/>
      </node>
      <node id="40672">
        <label>/home/dev/ds-160209/src/stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="40673" relation="include">
        </childnode>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40620" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40609" relation="include">
        </childnode>
        <childnode refid="40622" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
      </node>
      <node id="40650">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="40642">
        <label>/home/dev/ds-160209/src/qt/sendcoinsentry.cpp</label>
        <link refid="sendcoinsentry_8cpp"/>
      </node>
      <node id="40682">
        <label>/home/dev/ds-160209/src/qt/debugconsole.h</label>
        <link refid="debugconsole_8h"/>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40683" relation="include">
        </childnode>
      </node>
      <node id="40680">
        <label>/home/dev/ds-160209/src/chainparams.cpp</label>
        <link refid="chainparams_8cpp"/>
      </node>
      <node id="40605">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="40666">
        <label>/home/dev/ds-160209/src/compressor.cpp</label>
        <link refid="compressor_8cpp"/>
      </node>
      <node id="40644">
        <label>/home/dev/ds-160209/src/qt/test/uritests.cpp</label>
        <link refid="uritests_8cpp"/>
      </node>
      <node id="40595">
        <label>/home/dev/ds-160209/src/wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="40596" relation="include">
        </childnode>
        <childnode refid="40600" relation="include">
        </childnode>
        <childnode refid="40623" relation="include">
        </childnode>
        <childnode refid="40633" relation="include">
        </childnode>
        <childnode refid="40612" relation="include">
        </childnode>
        <childnode refid="40635" relation="include">
        </childnode>
        <childnode refid="40636" relation="include">
        </childnode>
        <childnode refid="40637" relation="include">
        </childnode>
        <childnode refid="40647" relation="include">
        </childnode>
        <childnode refid="40648" relation="include">
        </childnode>
        <childnode refid="40613" relation="include">
        </childnode>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40649" relation="include">
        </childnode>
        <childnode refid="40651" relation="include">
        </childnode>
        <childnode refid="40643" relation="include">
        </childnode>
        <childnode refid="40650" relation="include">
        </childnode>
        <childnode refid="40615" relation="include">
        </childnode>
        <childnode refid="40652" relation="include">
        </childnode>
        <childnode refid="40616" relation="include">
        </childnode>
        <childnode refid="40645" relation="include">
        </childnode>
        <childnode refid="40605" relation="include">
        </childnode>
        <childnode refid="40653" relation="include">
        </childnode>
        <childnode refid="40654" relation="include">
        </childnode>
        <childnode refid="40655" relation="include">
        </childnode>
        <childnode refid="40656" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
        <childnode refid="40657" relation="include">
        </childnode>
      </node>
      <node id="40686">
        <label>/home/dev/ds-160209/src/rpcnet.cpp</label>
        <link refid="rpcnet_8cpp"/>
      </node>
      <node id="40671">
        <label>/home/dev/ds-160209/src/txdb.cpp</label>
        <link refid="txdb_8cpp"/>
      </node>
      <node id="40643">
        <label>/home/dev/ds-160209/src/qt/signverifymessagedialog.cpp</label>
        <link refid="signverifymessagedialog_8cpp"/>
      </node>
      <node id="40604">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="40609">
        <label>/home/dev/ds-160209/src/stormnode-sync.cpp</label>
        <link refid="stormnode-sync_8cpp"/>
      </node>
      <node id="40634">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="40677">
        <label>/home/dev/ds-160209/src/sandstorm-relay.h</label>
        <link refid="sandstorm-relay_8h"/>
        <childnode refid="40619" relation="include">
        </childnode>
      </node>
      <node id="40648">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.cpp</label>
        <link refid="blockbrowser_8cpp"/>
      </node>
      <node id="40675">
        <label>/home/dev/ds-160209/src/stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="40672" relation="include">
        </childnode>
        <childnode refid="40676" relation="include">
        </childnode>
        <childnode refid="40678" relation="include">
        </childnode>
        <childnode refid="40615" relation="include">
        </childnode>
        <childnode refid="40621" relation="include">
        </childnode>
        <childnode refid="40609" relation="include">
        </childnode>
        <childnode refid="40622" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
      </node>
      <node id="40670">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="40616">
        <label>/home/dev/ds-160209/src/qt/transactionrecord.cpp</label>
        <link refid="transactionrecord_8cpp"/>
      </node>
      <node id="40660">
        <label>/home/dev/ds-160209/src/undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="40661" relation="include">
        </childnode>
        <childnode refid="40665" relation="include">
        </childnode>
      </node>
      <node id="40688">
        <label>/home/dev/ds-160209/src/test/allocator_tests.cpp</label>
        <link refid="allocator__tests_8cpp"/>
      </node>
      <node id="40687">
        <label>/home/dev/ds-160209/src/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="40655">
        <label>/home/dev/ds-160209/src/test/base64_tests.cpp</label>
        <link refid="base64__tests_8cpp"/>
      </node>
      <node id="40615">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.cpp</label>
        <link refid="stormnodemanager_8cpp"/>
      </node>
      <node id="40640">
        <label>/home/dev/ds-160209/src/qt/sandstormconfig.cpp</label>
        <link refid="sandstormconfig_8cpp"/>
      </node>
      <node id="40608">
        <label>/home/dev/ds-160209/src/stormnode-payments.cpp</label>
        <link refid="stormnode-payments_8cpp"/>
      </node>
      <node id="40656">
        <label>/home/dev/ds-160209/src/test/wallet_tests.cpp</label>
        <link refid="wallet__tests_8cpp"/>
      </node>
      <node id="40651">
        <label>/home/dev/ds-160209/src/qt/optionsmodel.cpp</label>
        <link refid="optionsmodel_8cpp"/>
      </node>
      <node id="40654">
        <label>/home/dev/ds-160209/src/test/accounting_tests.cpp</label>
        <link refid="accounting__tests_8cpp"/>
      </node>
      <node id="40669">
        <label>/home/dev/ds-160209/src/rpcrawtransaction.cpp</label>
        <link refid="rpcrawtransaction_8cpp"/>
      </node>
      <node id="40594">
        <label>/home/dev/ds-160209/src/main.h</label>
        <link refid="main.h"/>
        <childnode refid="40595" relation="include">
        </childnode>
        <childnode refid="40658" relation="include">
        </childnode>
        <childnode refid="40672" relation="include">
        </childnode>
        <childnode refid="40675" relation="include">
        </childnode>
        <childnode refid="40673" relation="include">
        </childnode>
        <childnode refid="40676" relation="include">
        </childnode>
        <childnode refid="40599" relation="include">
        </childnode>
        <childnode refid="40679" relation="include">
        </childnode>
        <childnode refid="40680" relation="include">
        </childnode>
        <childnode refid="40667" relation="include">
        </childnode>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40678" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40612" relation="include">
        </childnode>
        <childnode refid="40647" relation="include">
        </childnode>
        <childnode refid="40648" relation="include">
        </childnode>
        <childnode refid="40681" relation="include">
        </childnode>
        <childnode refid="40674" relation="include">
        </childnode>
        <childnode refid="40649" relation="include">
        </childnode>
        <childnode refid="40643" relation="include">
        </childnode>
        <childnode refid="40650" relation="include">
        </childnode>
        <childnode refid="40652" relation="include">
        </childnode>
        <childnode refid="40685" relation="include">
        </childnode>
        <childnode refid="40634" relation="include">
        </childnode>
        <childnode refid="40606" relation="include">
        </childnode>
        <childnode refid="40686" relation="include">
        </childnode>
        <childnode refid="40669" relation="include">
        </childnode>
        <childnode refid="40631" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40687" relation="include">
        </childnode>
        <childnode refid="40607" relation="include">
        </childnode>
        <childnode refid="40621" relation="include">
        </childnode>
        <childnode refid="40688" relation="include">
        </childnode>
        <childnode refid="40655" relation="include">
        </childnode>
        <childnode refid="40656" relation="include">
        </childnode>
        <childnode refid="40670" relation="include">
        </childnode>
      </node>
      <node id="40619">
        <label>/home/dev/ds-160209/src/sandstorm-relay.cpp</label>
        <link refid="sandstorm-relay_8cpp"/>
      </node>
      <node id="40676">
        <label>/home/dev/ds-160209/src/stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="40597" relation="include">
        </childnode>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40674" relation="include">
        </childnode>
        <childnode refid="40615" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40677" relation="include">
        </childnode>
        <childnode refid="40621" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40609" relation="include">
        </childnode>
        <childnode refid="40622" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
      </node>
      <node id="40668">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
      </node>
      <node id="40638">
        <label>/home/dev/ds-160209/src/qt/askpassphrasedialog.cpp</label>
        <link refid="askpassphrasedialog_8cpp"/>
      </node>
      <node id="40617">
        <label>/home/dev/ds-160209/src/rpcstormnode-budget.cpp</label>
        <link refid="rpcstormnode-budget_8cpp"/>
      </node>
      <node id="40659">
        <label>/home/dev/ds-160209/src/compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="40660" relation="include">
        </childnode>
        <childnode refid="40666" relation="include">
        </childnode>
      </node>
      <node id="40597">
        <label>/home/dev/ds-160209/src/activestormnode.cpp</label>
        <link refid="activestormnode_8cpp"/>
      </node>
      <node id="40657">
        <label>/home/dev/ds-160209/src/walletdb.cpp</label>
        <link refid="walletdb_8cpp"/>
      </node>
      <node id="40600">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="40621">
        <label>/home/dev/ds-160209/src/stormnode-budget.cpp</label>
        <link refid="stormnode-budget_8cpp"/>
      </node>
      <node id="40665">
        <label>/home/dev/ds-160209/src/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="40679">
        <label>/home/dev/ds-160209/src/txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="40600" relation="include">
        </childnode>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40668" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40652" relation="include">
        </childnode>
        <childnode refid="40634" relation="include">
        </childnode>
        <childnode refid="40669" relation="include">
        </childnode>
        <childnode refid="40632" relation="include">
        </childnode>
        <childnode refid="40670" relation="include">
        </childnode>
        <childnode refid="40671" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
      </node>
      <node id="40635">
        <label>/home/dev/ds-160209/src/qt/addeditstormnode.cpp</label>
        <link refid="addeditstormnode_8cpp"/>
      </node>
      <node id="40602">
        <label>/home/dev/ds-160209/src/instantx.cpp</label>
        <link refid="instantx_8cpp"/>
      </node>
      <node id="40601">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="40681">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.h</label>
        <link refid="peertablemodel_8h"/>
        <childnode refid="40674" relation="include">
        </childnode>
        <childnode refid="40682" relation="include">
        </childnode>
        <childnode refid="40684" relation="include">
        </childnode>
      </node>
      <node id="40628">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="40599">
        <label>/home/dev/ds-160209/src/spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="40597" relation="include">
        </childnode>
        <childnode refid="40600" relation="include">
        </childnode>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40605" relation="include">
        </childnode>
        <childnode refid="40606" relation="include">
        </childnode>
        <childnode refid="40607" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40609" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
      </node>
      <node id="40629">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="40630">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="40633">
        <label>/home/dev/ds-160209/src/miner.h</label>
        <link refid="miner_8h"/>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40634" relation="include">
        </childnode>
      </node>
      <node id="40632">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="40684">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.cpp</label>
        <link refid="peertablemodel_8cpp"/>
      </node>
      <node id="40649">
        <label>/home/dev/ds-160209/src/qt/statisticspage.h</label>
        <link refid="statisticspage_8h"/>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40650" relation="include">
        </childnode>
      </node>
      <node id="40658">
        <label>/home/dev/ds-160209/src/txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="40659" relation="include">
        </childnode>
        <childnode refid="40594" relation="include">
        </childnode>
        <childnode refid="40667" relation="include">
        </childnode>
        <childnode refid="40664" relation="include">
        </childnode>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40668" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40634" relation="include">
        </childnode>
        <childnode refid="40669" relation="include">
        </childnode>
        <childnode refid="40632" relation="include">
        </childnode>
        <childnode refid="40670" relation="include">
        </childnode>
        <childnode refid="40671" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
      </node>
      <node id="40645">
        <label>/home/dev/ds-160209/src/qt/transactiontablemodel.cpp</label>
        <link refid="transactiontablemodel_8cpp"/>
      </node>
      <node id="40603">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="40606">
        <label>/home/dev/ds-160209/src/rpcmisc.cpp</label>
        <link refid="rpcmisc_8cpp"/>
      </node>
      <node id="40641">
        <label>/home/dev/ds-160209/src/qt/sendcoinsdialog.cpp</label>
        <link refid="sendcoinsdialog_8cpp"/>
      </node>
      <node id="40596">
        <label>/home/dev/ds-160209/src/activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="40597" relation="include">
        </childnode>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40615" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40609" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
      </node>
      <node id="40636">
        <label>/home/dev/ds-160209/src/qt/walletmodel.h</label>
        <link refid="walletmodel_8h"/>
        <childnode refid="40637" relation="include">
        </childnode>
        <childnode refid="40638" relation="include">
        </childnode>
        <childnode refid="40613" relation="include">
        </childnode>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40639" relation="include">
        </childnode>
        <childnode refid="40627" relation="include">
        </childnode>
        <childnode refid="40614" relation="include">
        </childnode>
        <childnode refid="40640" relation="include">
        </childnode>
        <childnode refid="40641" relation="include">
        </childnode>
        <childnode refid="40642" relation="include">
        </childnode>
        <childnode refid="40629" relation="include">
        </childnode>
        <childnode refid="40630" relation="include">
        </childnode>
        <childnode refid="40643" relation="include">
        </childnode>
        <childnode refid="40615" relation="include">
        </childnode>
        <childnode refid="40644" relation="include">
        </childnode>
        <childnode refid="40645" relation="include">
        </childnode>
        <childnode refid="40646" relation="include">
        </childnode>
        <childnode refid="40605" relation="include">
        </childnode>
      </node>
      <node id="40620">
        <label>/home/dev/ds-160209/src/sandstorm.cpp</label>
        <link refid="sandstorm_8cpp"/>
      </node>
      <node id="40647">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.h</label>
        <link refid="blockbrowser_8h"/>
        <childnode refid="40648" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
      </node>
      <node id="40614">
        <label>/home/dev/ds-160209/src/qt/overviewpage.cpp</label>
        <link refid="overviewpage_8cpp"/>
      </node>
      <node id="40667">
        <label>/home/dev/ds-160209/src/checkpoints.cpp</label>
        <link refid="checkpoints_8cpp"/>
      </node>
      <node id="40622">
        <label>/home/dev/ds-160209/src/stormnode.cpp</label>
        <link refid="stormnode_8cpp"/>
      </node>
      <node id="40683">
        <label>/home/dev/ds-160209/src/qt/debugconsole.cpp</label>
        <link refid="debugconsole_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_block_hasher" prot="public">BlockHasher</innerclass>
    <innerclass refid="struct_c_node_state_stats" prot="public">CNodeStateStats</innerclass>
    <innerclass refid="class_c_disk_tx_pos" prot="public">CDiskTxPos</innerclass>
    <innerclass refid="class_c_transaction_po_s" prot="public">CTransactionPoS</innerclass>
    <innerclass refid="class_c_merkle_tx" prot="public">CMerkleTx</innerclass>
    <innerclass refid="class_c_tx_index" prot="public">CTxIndex</innerclass>
    <innerclass refid="class_c_validation_state" prot="public">CValidationState</innerclass>
    <innerclass refid="class_c_wallet_interface" prot="public">CWalletInterface</innerclass>
    <innerclass refid="class_c_block_file_info" prot="public">CBlockFileInfo</innerclass>
    <innerclass refid="class_c_verify_d_b" prot="public">CVerifyDB</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7" prot="public" static="no">
        <name>GetMinFee_mode</name>
        <enumvalue id="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a5a34bbfddb9219ca72f89780fcaafb3d" prot="public">
          <name>GMF_BLOCK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a79d7494c7b44dac59ff3143ac440e2f5" prot="public">
          <name>GMF_RELAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a146093898dd622fd76ca7ded2b6933ef" prot="public">
          <name>GMF_SEND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="277" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="276" bodyend="281"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="main_8h_1a177351119104ee119066e4838c679f35" prot="public" static="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *, <ref refid="struct_block_hasher" kindref="compound">BlockHasher</ref> &gt;</type>
        <definition>typedef std::map&lt;uint256, CBlockIndex*, BlockHasher&gt; BlockMap</definition>
        <argsstring></argsstring>
        <name>BlockMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="76" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" prot="public" static="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, std::pair&lt; <ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref>, <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &gt; &gt;</type>
        <definition>typedef std::map&lt;uint256, std::pair&lt;CTxIndex, CTransaction&gt; &gt; MapPrevTx</definition>
        <argsstring></argsstring>
        <name>MapPrevTx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="283" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8h_1a01b76de3497fb1a2ada201f4c958b1d7" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double MIN_FEE</definition>
        <argsstring></argsstring>
        <name>MIN_FEE</name>
        <initializer>= 0.00001</initializer>
        <briefdescription>
<para>Fees smaller than this (in satoshi) are considered zero fee (for transaction creation) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="25" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ad0dd5cc4f7a8cfecde405c501414c736" prot="public" static="yes" mutable="no">
        <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>const CAmount STORMNODE_COLLATERAL</definition>
        <argsstring></argsstring>
        <name>STORMNODE_COLLATERAL</name>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="27" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a5a96e6602be70767931fc180c1baebe3" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int STORMNODE_PAYMENT_START</definition>
        <argsstring></argsstring>
        <name>STORMNODE_PAYMENT_START</name>
        <initializer>= 420</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="29" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a9f517dc7904f5dc9b098be0c272bb7e7" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int TESTNET_STORMNODE_PAYMENT_START</definition>
        <argsstring></argsstring>
        <name>TESTNET_STORMNODE_PAYMENT_START</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="30" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ad3b05b8e02dd6947342ab65578d0e2cd" prot="public" static="yes" mutable="no">
        <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>const CAmount SANDSTORM_COLLATERAL</definition>
        <argsstring></argsstring>
        <name>SANDSTORM_COLLATERAL</name>
        <initializer>= (0.01*COIN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="32" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1aa2478b2b3c65e74fe23886fc2df49666" prot="public" static="yes" mutable="no">
        <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>const CAmount SANDSTORM_POOL_MAX</definition>
        <argsstring></argsstring>
        <name>SANDSTORM_POOL_MAX</name>
        <initializer>= (9999.99*COIN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a0727576b4e7f06e0af501e6d36a1d284" prot="public" static="yes" mutable="no">
        <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>const CAmount STATIC_POS_REWARD</definition>
        <argsstring></argsstring>
        <name>STATIC_POS_REWARD</name>
        <initializer>= COIN * 0.01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="35" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a276b0b56a72df733dda86cfe6322f604" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int MAX_BLOCKS_IN_TRANSIT_PER_PEER</definition>
        <argsstring></argsstring>
        <name>MAX_BLOCKS_IN_TRANSIT_PER_PEER</name>
        <initializer>= 128</initializer>
        <briefdescription>
<para>Number of blocks that can be requested at any given time from a single peer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="38" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a8ab028f49f2c98920af737982c60780f" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int BLOCK_DOWNLOAD_TIMEOUT</definition>
        <argsstring></argsstring>
        <name>BLOCK_DOWNLOAD_TIMEOUT</name>
        <initializer>= 60</initializer>
        <briefdescription>
<para>Timeout in seconds before considering a block download peer unresponsive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="40" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a322e5519d6da1c7a3a2f911c83609d56" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MAX_BLOCK_SIZE_GEN</definition>
        <argsstring></argsstring>
        <name>MAX_BLOCK_SIZE_GEN</name>
        <initializer>= MAX_BLOCK_SIZE/2</initializer>
        <briefdescription>
<para>The maximum size for mined blocks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1aa301575eb37f7f95a7b67b064c73cdf8" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE</definition>
        <argsstring></argsstring>
        <name>DEFAULT_BLOCK_PRIORITY_SIZE</name>
        <initializer>= 50000</initializer>
        <briefdescription>
<para>Default for -blockprioritysize, maximum space for zero/low-fee transactions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="45" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1aefbb84a1c575dfc90d140d06f8c8d1e9" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MAX_STANDARD_TX_SIZE</definition>
        <argsstring></argsstring>
        <name>MAX_STANDARD_TX_SIZE</name>
        <initializer>= MAX_BLOCK_SIZE_GEN/5</initializer>
        <briefdescription>
<para>The maximum size for transactions we&apos;re willing to relay/mine. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="47" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1acb7a14a94e74d91ad3d1b752c144c507" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MAX_BLOCK_SIGOPS</definition>
        <argsstring></argsstring>
        <name>MAX_BLOCK_SIGOPS</name>
        <initializer>= MAX_BLOCK_SIZE/50</initializer>
        <briefdescription>
<para>The maximum allowed number of signature check operations in a block (network rule) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="49" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a4cca063cd81ff8eb9274145aa85707b9" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MAX_P2SH_SIGOPS</definition>
        <argsstring></argsstring>
        <name>MAX_P2SH_SIGOPS</name>
        <initializer>= 15</initializer>
        <briefdescription>
<para>Maxiumum number of signature check operations in an <ref refid="script_8cpp_1abb2b48ecfd43dcb01e25d9d4c333a340" kindref="member">IsStandard()</ref> P2SH script. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1aff28c3fe2c4d93ea81ca99c40852e32c" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MAX_TX_SIGOPS</definition>
        <argsstring></argsstring>
        <name>MAX_TX_SIGOPS</name>
        <initializer>= MAX_BLOCK_SIGOPS/5</initializer>
        <briefdescription>
<para>The maximum number of sigops we&apos;re willing to relay/mine in a single tx. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="53" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ae7bd77db96d2cdb665d645fb3daa2de6" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MAX_ORPHAN_TRANSACTIONS</definition>
        <argsstring></argsstring>
        <name>MAX_ORPHAN_TRANSACTIONS</name>
        <initializer>= MAX_BLOCK_SIZE/100</initializer>
        <briefdescription>
<para>The maximum number of orphan transactions kept in memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="55" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ae31e74bf6db006c63912a414ed60faa8" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int DEFAULT_MAX_ORPHAN_BLOCKS</definition>
        <argsstring></argsstring>
        <name>DEFAULT_MAX_ORPHAN_BLOCKS</name>
        <initializer>= 512</initializer>
        <briefdescription>
<para>Default for -maxorphanblocksmib, maximum memory used by orphan blocks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="57" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1af677dfc85dddc429fe0303f338878ec0" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MAX_INV_SZ</definition>
        <argsstring></argsstring>
        <name>MAX_INV_SZ</name>
        <initializer>= 50000</initializer>
        <briefdescription>
<para>The maximum number of entries in an &apos;inv&apos; protocol message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="59" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1af83a9cbb7b3fe9d34a7c4b43f2e040f8" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MAX_REJECT_MESSAGE_LENGTH</definition>
        <argsstring></argsstring>
        <name>MAX_REJECT_MESSAGE_LENGTH</name>
        <initializer>= 111</initializer>
        <briefdescription>
<para>Maximum length of reject messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="62" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a18113899ca9e7ef7a1938b0209fd62b5" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int LOCKTIME_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>LOCKTIME_THRESHOLD</name>
        <initializer>= 500000000</initializer>
        <briefdescription>
<para>Threshold for nLockTime: below this value it is interpreted as block number, otherwise as UNIX timestamp. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a045ec16e8571b514f639dca883174840" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int POW_TARGET_SPACING</definition>
        <argsstring></argsstring>
        <name>POW_TARGET_SPACING</name>
        <initializer>= 1 * 60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="67" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a1d604cc656faeddef9e3c3693115d419" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int POS_TARGET_SPACING</definition>
        <argsstring></argsstring>
        <name>POS_TARGET_SPACING</name>
        <initializer>= 1 * 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="68" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a9b7ddfd4f0d7209e290f1b5871b9b81e" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int DATABASE_WRITE_INTERVAL</definition>
        <argsstring></argsstring>
        <name>DATABASE_WRITE_INTERVAL</name>
        <initializer>= 3600</initializer>
        <briefdescription>
<para>Time to wait (in seconds) between writing blockchain state to disk. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="79" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ae08e367e8cda26747c749b3b313a47a1" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char REJECT_MALFORMED</definition>
        <argsstring></argsstring>
        <name>REJECT_MALFORMED</name>
        <initializer>= 0x01</initializer>
        <briefdescription>
<para>&quot;reject&quot; message codes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="82" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a4d1c4e097229d17dd9f721dd066160e9" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char REJECT_INVALID</definition>
        <argsstring></argsstring>
        <name>REJECT_INVALID</name>
        <initializer>= 0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="83" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a33438febc90b2b44c11530b8207d2e0f" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char REJECT_OBSOLETE</definition>
        <argsstring></argsstring>
        <name>REJECT_OBSOLETE</name>
        <initializer>= 0x11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="84" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1aae810f65f020df86be128d0c026edf44" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char REJECT_DUPLICATE</definition>
        <argsstring></argsstring>
        <name>REJECT_DUPLICATE</name>
        <initializer>= 0x12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="85" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1aaebbd8495fbce589cdf05570198c4240" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char REJECT_NONSTANDARD</definition>
        <argsstring></argsstring>
        <name>REJECT_NONSTANDARD</name>
        <initializer>= 0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="86" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a2084d562650062e263e12f7686c8e531" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char REJECT_DUST</definition>
        <argsstring></argsstring>
        <name>REJECT_DUST</name>
        <initializer>= 0x41</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="87" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ace1ff5dedd67cee78b13417cdd618b44" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char REJECT_INSUFFICIENTFEE</definition>
        <argsstring></argsstring>
        <name>REJECT_INSUFFICIENTFEE</name>
        <initializer>= 0x42</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="88" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ab4b60ceaa3a151da9fcd0c39b15579a9" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char REJECT_CHECKPOINT</definition>
        <argsstring></argsstring>
        <name>REJECT_CHECKPOINT</name>
        <initializer>= 0x43</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="89" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a5ed86cbbedb72d8fcec0524f2792ada8" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_script" kindref="compound">CScript</ref></type>
        <definition>CScript COINBASE_FLAGS</definition>
        <argsstring></argsstring>
        <name>COINBASE_FLAGS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="91" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="104" bodyend="-1"/>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="miner_8h_1a6f07c738a8aadffe748358e985b43d3f" compoundref="miner_8cpp" startline="383" endline="399">IncrementExtraNonce</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a1ed8285f0fe3c6799c53265ce72552c8" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_main</definition>
        <argsstring></argsstring>
        <name>cs_main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="92" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="44" bodyend="-1"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="chain_8h_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</referencedby>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="instantx_8h_1aa516cb499ead2691d8ab216a499db5d0" compoundref="instantx_8cpp" startline="38" endline="173">ProcessMessageInstantX</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="class_client_model_1a9c298b0c2eb9c8e9ff18c6ff37725b0a" compoundref="clientmodel_8cpp" startline="64" endline="68">ClientModel::getNumBlocks</referencedby>
        <referencedby refid="class_client_model_1a3dd65362947749364c48ff53a37820db" compoundref="clientmodel_8cpp" startline="86" endline="93">ClientModel::getLastBlockDate</referencedby>
        <referencedby refid="class_client_model_1a82d434ebd032c00736e043ce2d36ac5e" compoundref="clientmodel_8cpp" startline="96" endline="116">ClientModel::updateTimer</referencedby>
        <referencedby refid="class_client_model_1a52aad7741f3c1d1fb4f6177fbf2ae45a" compoundref="clientmodel_8cpp" startline="118" endline="134">ClientModel::updateSnTimer</referencedby>
        <referencedby refid="class_peer_table_priv_1a304d99874f6cd0c67ed207546a5ca904" compoundref="peertablemodel_8cpp" startline="53" endline="97">PeerTablePriv::refreshPeers</referencedby>
        <referencedby refid="class_transaction_desc_1ab7c9dbb2048aae121dd9d75df86e64f4" compoundref="transactiondesc_8cpp" startline="41" endline="272">TransactionDesc::toHTML</referencedby>
        <referencedby refid="class_transaction_record_1a9b643dd885a790ae511705a1446556be" compoundref="transactionrecord_8cpp" startline="165" endline="249">TransactionRecord::updateStatus</referencedby>
        <referencedby refid="class_transaction_record_1aaca6757b7b300151694021be6af18d11" compoundref="transactionrecord_8cpp" startline="251" endline="255">TransactionRecord::statusUpdateNeeded</referencedby>
        <referencedby refid="class_transaction_table_priv_1a1f81da5d7cfb2aac03a5e18e6bc91792" compoundref="transactiontablemodel_8cpp" startline="68" endline="80">TransactionTablePriv::refreshWallet</referencedby>
        <referencedby refid="class_transaction_table_priv_1a27eb6d3e1f7717dd2cad80c5ce48f404" compoundref="transactiontablemodel_8cpp" startline="87" endline="169">TransactionTablePriv::updateWallet</referencedby>
        <referencedby refid="class_transaction_table_priv_1ac692aa6aa7820e80accc971c70e0fae5" compoundref="transactiontablemodel_8cpp" startline="176" endline="209">TransactionTablePriv::index</referencedby>
        <referencedby refid="class_transaction_table_priv_1ab08d44e16bf6dd95b5b83959b3013780" compoundref="transactiontablemodel_8cpp" startline="211" endline="222">TransactionTablePriv::describe</referencedby>
        <referencedby refid="class_wallet_model_1a51469b2d95cfd4bc0a14ee456fca7b95" compoundref="walletmodel_8cpp" startline="113" endline="137">WalletModel::pollBalanceChanged</referencedby>
        <referencedby refid="class_wallet_model_1a497418d4a8566b881bab45dec7ad8fd8" compoundref="walletmodel_8cpp" startline="213" endline="488">WalletModel::sendCoins</referencedby>
        <referencedby refid="class_wallet_model_1a5237ea4d9724807a05e2944e5ce6f181" compoundref="walletmodel_8cpp" startline="684" endline="695">WalletModel::getOutputs</referencedby>
        <referencedby refid="class_wallet_model_1aadf8de5a584594abdb299b463bd7578f" compoundref="walletmodel_8cpp" startline="698" endline="731">WalletModel::listCoins</referencedby>
        <referencedby refid="class_wallet_model_1a7712ac646004fe66c0bcafd0122c4ede" compoundref="walletmodel_8cpp" startline="733" endline="737">WalletModel::isLockedCoin</referencedby>
        <referencedby refid="class_wallet_model_1a9bb6c954dc3cf27e25ced65375fa02f0" compoundref="walletmodel_8cpp" startline="739" endline="743">WalletModel::lockCoin</referencedby>
        <referencedby refid="class_wallet_model_1a0a5514bd400327df0f7d63341d8fabf4" compoundref="walletmodel_8cpp" startline="745" endline="749">WalletModel::unlockCoin</referencedby>
        <referencedby refid="class_wallet_model_1a367977352d1ef183ec2cb6b508a85bc2" compoundref="walletmodel_8cpp" startline="751" endline="755">WalletModel::listLockedCoins</referencedby>
        <referencedby refid="rpcdump_8cpp_1a3a6fdb974fce01220a895393d444e981" compoundref="rpcdump_8cpp" startline="106" endline="159">importprivkey</referencedby>
        <referencedby refid="rpcdump_8cpp_1a457bc572859c8265c72a0afd1a6db56c" compoundref="rpcdump_8cpp" startline="161" endline="230">importaddress</referencedby>
        <referencedby refid="class_c_r_p_c_table_1aebba8d5a8f62089d1aa63278dbaf30a2" compoundref="rpcserver_8cpp" startline="825" endline="870">CRPCTable::execute</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a798669ad37caa71ddd18f73bc5aa5841" compoundref="rpcwallet_8cpp" startline="2538" endline="2578">scanforalltxns</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1aabecb7ff2cd77451de653fa23e01ccbe" compoundref="sandstorm_8cpp" startline="930" endline="983">CSandstormPool::IsCollateralValid</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" compoundref="sandstorm_8cpp" startline="1090" endline="1176">CSandstormPool::SendSandstormDenominate</referencedby>
        <referencedby refid="smessage_8h_1a9cd9dbe9178ad2ffc192762b1f5ef8f4" compoundref="smessage_8cpp" startline="2123" endline="2151">SecureMsgScanBlockChain</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_wallet_1ac18895d63adb58d85558f0efd6addb3f" compoundref="wallet_8cpp" startline="791" endline="816">CWallet::SyncTransaction</referencedby>
        <referencedby refid="class_c_wallet_1a979a17e80e4897ed1f4ae9a4be7c493c" compoundref="wallet_8cpp" startline="1124" endline="1151">CWallet::ScanForWalletTransactions</referencedby>
        <referencedby refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" compoundref="wallet_8cpp" startline="1153" endline="1223">CWallet::ReacceptWalletTransactions</referencedby>
        <referencedby refid="class_c_wallet_1afb8dee3ffdf2bc5e7499b10bb65efdaf" compoundref="wallet_8cpp" startline="1318" endline="1332">CWallet::GetBalance</referencedby>
        <referencedby refid="class_c_wallet_1a842f8ca0ec3e6879c7f95f1420c7932f" compoundref="wallet_8cpp" startline="1334" endline="1366">CWallet::GetAnonymizableBalance</referencedby>
        <referencedby refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" compoundref="wallet_8cpp" startline="1584" endline="1620">CWallet::GetDenominatedBalance</referencedby>
        <referencedby refid="class_c_wallet_1a7dbe4899ff7d8562376d803b02481228" compoundref="wallet_8cpp" startline="1623" endline="1636">CWallet::GetUnconfirmedBalance</referencedby>
        <referencedby refid="class_c_wallet_1ad91469884e16fc85665f27e29161ee34" compoundref="wallet_8cpp" startline="1638" endline="1650">CWallet::GetImmatureBalance</referencedby>
        <referencedby refid="class_c_wallet_1a4e1047525a8f418485ce3a84057265d3" compoundref="wallet_8cpp" startline="1652" endline="1666">CWallet::GetWatchOnlyBalance</referencedby>
        <referencedby refid="class_c_wallet_1a63579a8e709da9ffe6bb9e1fa7de7ce3" compoundref="wallet_8cpp" startline="1668" endline="1679">CWallet::GetWatchOnlyStake</referencedby>
        <referencedby refid="class_c_wallet_1a639be9d778aeeb8b71aa653f0089cdff" compoundref="wallet_8cpp" startline="1681" endline="1694">CWallet::GetUnconfirmedWatchOnlyBalance</referencedby>
        <referencedby refid="class_c_wallet_1a9ab28b6ff93197c89af4a69dc1117e44" compoundref="wallet_8cpp" startline="1696" endline="1708">CWallet::GetImmatureWatchOnlyBalance</referencedby>
        <referencedby refid="class_c_wallet_1ad165e7a24c95ff9a5816933d7ca23c9b" compoundref="wallet_8cpp" startline="1711" endline="1768">CWallet::AvailableCoins</referencedby>
        <referencedby refid="class_c_wallet_1a4b9d5939e15cbb0cae162224beb35fc8" compoundref="wallet_8cpp" startline="1770" endline="1827">CWallet::AvailableCoinsForStaking</referencedby>
        <referencedby refid="class_c_wallet_1a07a9f015e0272a9de79fb34311086b84" compoundref="wallet_8cpp" startline="1876" endline="1887">CWallet::GetStake</referencedby>
        <referencedby refid="class_c_wallet_1aa614dc28d5940048c6d5b672ca5d8a22" compoundref="wallet_8cpp" startline="1889" endline="1900">CWallet::GetNewMint</referencedby>
        <referencedby refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" compoundref="wallet_8cpp" startline="3699" endline="3730">CWallet::GetStakeWeight</referencedby>
        <referencedby refid="class_c_wallet_1aa13fbeaebd271f910a54cc5b82d73fde" compoundref="wallet_8cpp" startline="3959" endline="4014">CWallet::CommitTransaction</referencedby>
        <referencedby refid="class_c_wallet_1afecefdad197b3b021139cef1fd0e7a9b" compoundref="wallet_8cpp" startline="4393" endline="4406">CWallet::AddReserveKey</referencedby>
        <referencedby refid="class_c_wallet_1afb9667058b54ae153b0897684ddb9f20" compoundref="wallet_8cpp" startline="4703" endline="4721">CWallet::GetAllReserveKeys</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1abc71256f703e47c9254093e32ed2994c" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref></type>
        <definition>CTxMemPool mempool</definition>
        <argsstring></argsstring>
        <name>mempool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="93" column="1"/>
        <referencedby refid="chain_8h_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</referencedby>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="instantx_8h_1aa516cb499ead2691d8ab216a499db5d0" compoundref="instantx_8cpp" startline="38" endline="173">ProcessMessageInstantX</referencedby>
        <referencedby refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" compoundref="main_8cpp" startline="1430" endline="1447">CMerkleTx::GetDepthInMainChain</referencedby>
        <referencedby refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" compoundref="main_8cpp" startline="1456" endline="1460">CMerkleTx::AcceptToMemoryPool</referencedby>
        <referencedby refid="class_c_wallet_tx_1af6d1a5a731bb69e1d94de84eb6fd15a5" compoundref="main_8cpp" startline="1462" endline="1479">CWalletTx::AcceptWalletTransaction</referencedby>
        <referencedby refid="main_8h_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="net_8h_1ac9110488f45c160d58f3c7ab7197bcea" compoundref="net_8cpp" startline="1901" endline="1911">StopNode</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a6ba5d2c76833bd2f10be0e95ded53037" compoundref="rpcblockchain_8cpp" startline="197" endline="212">getrawmempool</referencedby>
        <referencedby refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" compoundref="rpcmining_8cpp" startline="78" endline="112">getmininginfo</referencedby>
        <referencedby refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" compoundref="rpcmining_8cpp" startline="114" endline="148">getstakinginfo</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1ad5aad44f890060f42efb49acf349511e" compoundref="rpcrawtransaction_8cpp" startline="558" endline="602">sendrawtransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" compoundref="sandstorm_8cpp" startline="1090" endline="1176">CSandstormPool::SendSandstormDenominate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" compoundref="wallet_8cpp" startline="1153" endline="1223">CWallet::ReacceptWalletTransactions</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a9d5aa0c4581116d898ff51357a0df059" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> * &gt;</type>
        <definition>std::map&lt;uint256, CBlockIndex*&gt; mapBlockIndex</definition>
        <argsstring></argsstring>
        <name>mapBlockIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="94" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a261df4d886c6149afe291ecfbed2ae89" prot="public" static="no" mutable="no">
        <type>std::set&lt; std::pair&lt; <ref refid="class_c_out_point" kindref="compound">COutPoint</ref>, unsigned int &gt; &gt;</type>
        <definition>std::set&lt;std::pair&lt;COutPoint, unsigned int&gt; &gt; setStakeSeen</definition>
        <argsstring></argsstring>
        <name>setStakeSeen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="95" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="60" bodyend="-1"/>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a1e7c54b8b26730f52b5527163fc33d8f" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
        <definition>CBlockIndex* pindexGenesisBlock</definition>
        <argsstring></argsstring>
        <name>pindexGenesisBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="96" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a6d3cd49df21f4264ed1489ea304dbcb8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nStakeMinConfirmations</definition>
        <argsstring></argsstring>
        <name>nStakeMinConfirmations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="97" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="65" bodyend="-1"/>
        <referencedby refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" compoundref="kernel_8cpp" startline="286" endline="320">CheckProofOfStake</referencedby>
        <referencedby refid="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" compoundref="kernel_8cpp" startline="328" endline="353">CheckKernel</referencedby>
        <referencedby refid="class_c_wallet_1a4b9d5939e15cbb0cae162224beb35fc8" compoundref="wallet_8cpp" startline="1770" endline="1827">CWallet::AvailableCoinsForStaking</referencedby>
        <referencedby refid="class_c_wallet_1a8fe028fa266ab65464992b829861a627" compoundref="wallet_8cpp" startline="3699" endline="3730">CWallet::GetStakeWeight</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a621f4f63be83358641eb78f48d2f49c2" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nStakeMinAge</definition>
        <argsstring></argsstring>
        <name>nStakeMinAge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="98" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="63" bodyend="-1"/>
        <referencedby refid="kernel_8h_1a65c0eeb113370d36da64a679e184bc16" compoundref="kernel_8cpp" startline="15" endline="22">GetWeight</referencedby>
        <referencedby refid="class_c_wallet_1a4b9d5939e15cbb0cae162224beb35fc8" compoundref="wallet_8cpp" startline="1770" endline="1827">CWallet::AvailableCoinsForStaking</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1afdd10e8c0a44aad0b719c365fa3bb458" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nNodeLifespan</definition>
        <argsstring></argsstring>
        <name>nNodeLifespan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="99" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="54" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1adfd36b02172030cdbf7ac69c2ccb7711" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nCoinbaseMaturity</definition>
        <argsstring></argsstring>
        <name>nCoinbaseMaturity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="100" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a843f1984796a7e44a9e23fccd6a8af34" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nBestHeight</definition>
        <argsstring></argsstring>
        <name>nBestHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="101" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a63af124faf22e03fd629e8aa21c40eae" prot="public" static="no" mutable="no">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 nBestChainTrust</definition>
        <argsstring></argsstring>
        <name>nBestChainTrust</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="102" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="72" bodyend="-1"/>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a27c4c119ca2e7250221de8c17bee0999" prot="public" static="no" mutable="no">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 nBestInvalidTrust</definition>
        <argsstring></argsstring>
        <name>nBestInvalidTrust</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="103" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="73" bodyend="-1"/>
        <referencedby refid="chain_8h_1ae282007adebd031cdbfecdd0ad1feeb8" compoundref="chain_8cpp" startline="492" endline="512">InvalidChainFound</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ace9c3343567f488a96598abe61e1d309" prot="public" static="no" mutable="no">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 hashBestChain</definition>
        <argsstring></argsstring>
        <name>hashBestChain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="104" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="74" bodyend="-1"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="chain_8h_1ae282007adebd031cdbfecdd0ad1feeb8" compoundref="chain_8cpp" startline="492" endline="512">InvalidChainFound</referencedby>
        <referencedby refid="class_c_coins_view_d_b_1a01777676c2eafd2970a9d53e5fb4a49a" compoundref="coins_8cpp" startline="275" endline="280">CCoinsViewDB::GetBestBlock</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="blockbrowser_8h_1a39902774552d8b3f80129af47420a48b" compoundref="blockbrowser_8cpp" startline="53" endline="67">getBlockHash</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a76d9bad30031c6da5454ca8fdc99f8ea" compoundref="rpcblockchain_8cpp" startline="162" endline="170">getbestblockhash</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a4039f7b3e313c63b81c98e3fc479a117" compoundref="rpcblockchain_8cpp" startline="250" endline="273">getblockbynumber</referencedby>
        <referencedby refid="rpcdump_8cpp_1a831ddf746d4f2500ba6f6c07f63445cd" compoundref="rpcdump_8cpp" startline="345" endline="401">dumpwallet</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a53cf4975a89f414ef3bd180f6b4773cd" compoundref="rpcwallet_8cpp" startline="1709" endline="1806">listsinceblock</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a798669ad37caa71ddd18f73bc5aa5841" compoundref="rpcwallet_8cpp" startline="2538" endline="2578">scanforalltxns</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a0ccac8f2681d64203d20324d6c06f2e3" compoundref="rpcwallet_8cpp" startline="2580" endline="2645">scanforstealthtxns</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a6454ad864029344132a0a0b59b1456ee" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
        <definition>CBlockIndex* pindexBest</definition>
        <argsstring></argsstring>
        <name>pindexBest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="105" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="76" bodyend="-1"/>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a31f8b0d3c96670151ba997019820e0f4" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t nLastBlockTx</definition>
        <argsstring></argsstring>
        <name>nLastBlockTx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="106" column="1" bodyfile="/home/dev/ds-160209/src/miner.cpp" bodystart="78" bodyend="-1"/>
        <referencedby refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" compoundref="rpcmining_8cpp" startline="78" endline="112">getmininginfo</referencedby>
        <referencedby refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" compoundref="rpcmining_8cpp" startline="114" endline="148">getstakinginfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1af8945f7f19ea7e938baab1bd4c226c2f" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t nLastBlockSize</definition>
        <argsstring></argsstring>
        <name>nLastBlockSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="107" column="1" bodyfile="/home/dev/ds-160209/src/miner.cpp" bodystart="79" bodyend="-1"/>
        <referencedby refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" compoundref="rpcmining_8cpp" startline="78" endline="112">getmininginfo</referencedby>
        <referencedby refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" compoundref="rpcmining_8cpp" startline="114" endline="148">getstakinginfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a544c4ab48afad09d2f474d0720570e94" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t nLastCoinStakeSearchInterval</definition>
        <argsstring></argsstring>
        <name>nLastCoinStakeSearchInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="108" column="1" bodyfile="/home/dev/ds-160209/src/miner.cpp" bodystart="80" bodyend="-1"/>
        <referencedby refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" compoundref="rpcmining_8cpp" startline="78" endline="112">getmininginfo</referencedby>
        <referencedby refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" compoundref="rpcmining_8cpp" startline="114" endline="148">getstakinginfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a2874c632b3b462164de12be5abcd9d43" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string strMessageMagic</definition>
        <argsstring></argsstring>
        <name>strMessageMagic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="109" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="106" bodyend="-1"/>
        <referencedby refid="rpcmisc_8cpp_1ad8fce781dfd9dfd4866bba2a4589141a" compoundref="rpcmisc_8cpp" startline="207" endline="241">verifymessage</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a315b42a2c859c4b50a54c1b05984928c" compoundref="rpcwallet_8cpp" startline="575" endline="624">signmessage</referencedby>
        <referencedby refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" compoundref="sandstorm_8cpp" startline="2059" endline="2071">CSandStormSigner::SignMessage</referencedby>
        <referencedby refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" compoundref="sandstorm_8cpp" startline="2073" endline="2089">CSandStormSigner::VerifyMessage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ab319f7e88eb0d2d3b9f9f98bea0f9896" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t nTimeBestReceived</definition>
        <argsstring></argsstring>
        <name>nTimeBestReceived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="110" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="78" bodyend="-1"/>
        <referencedby refid="class_c_wallet_1ace33dcf23623d2036a38696bc3a94553" compoundref="wallet_8cpp" startline="1262" endline="1304">CWallet::ResendWalletTransactions</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1aaf87d0dd26c4a7c9bcc5bdd1127e8637" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fImporting</definition>
        <argsstring></argsstring>
        <name>fImporting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="111" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="79" bodyend="-1"/>
        <referencedby refid="class_client_model_1aaf4587934ea90ba6ceeee4e4a950ab6b" compoundref="clientmodel_8cpp" startline="168" endline="171">ClientModel::isImporting</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a8e0eca589b2d4254a65f04c5d91888b2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fReindex</definition>
        <argsstring></argsstring>
        <name>fReindex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="112" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="80" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" compoundref="stormnode-sync_8cpp" startline="28" endline="57">CStormnodeSync::IsBlockchainSynced</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a724dfa85b047474da511687460625e48" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="struct_c_orphan_block" kindref="compound">COrphanBlock</ref> * &gt;</type>
        <definition>std::map&lt;uint256, COrphanBlock*&gt; mapOrphanBlocks</definition>
        <argsstring></argsstring>
        <name>mapOrphanBlocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="114" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a6b569217f0bbb0a69a42c8769df06a06" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fTxIndex</definition>
        <argsstring></argsstring>
        <name>fTxIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="115" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="67" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a08b980f03b2fb15445e0ddc8bb4b3d73" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nCoinCacheSize</definition>
        <argsstring></argsstring>
        <name>nCoinCacheSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="116" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="113" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ad316d89326f17948a58ad3cdf23850a5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fUseFastIndex</definition>
        <argsstring></argsstring>
        <name>fUseFastIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="118" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="57" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a3e3a4daba510b75f09387695c6c8a11f" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nDerivationMethodIndex</definition>
        <argsstring></argsstring>
        <name>nDerivationMethodIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="119" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="55" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_wallet_1ab34fe5bf771619dcbe22a65f013e5469" compoundref="wallet_8cpp" startline="479" endline="596">CWallet::EncryptWallet</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ad32c5d94e1b12cb49fc73deca3f3068f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fMinimizeCoinAge</definition>
        <argsstring></argsstring>
        <name>fMinimizeCoinAge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="121" column="1" bodyfile="/home/dev/ds-160209/src/init.cpp" bodystart="59" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1ae3377c351f05649e07963776ba3a0499" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fLargeWorkForkFound</definition>
        <argsstring></argsstring>
        <name>fLargeWorkForkFound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1aa8ed8d08421c7cdfb3acb22e585468fd" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fLargeWorkInvalidChainFound</definition>
        <argsstring></argsstring>
        <name>fLargeWorkInvalidChainFound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a8373143ee9b34c558cad14139d331ecc" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref> &gt;</type>
        <definition>std::map&lt;uint256, int64_t&gt; mapRejectedBlocks</definition>
        <argsstring></argsstring>
        <name>mapRejectedBlocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="126" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a5925a10baeee7d4bdce1982bdcbd3bd0" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref></type>
        <definition>CFeeRate minRelayTxFee</definition>
        <argsstring></argsstring>
        <name>minRelayTxFee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fees smaller than this (in satoshis) are considered zero fee (for relaying and mining) We are ~xxx times smaller then bitcoin now (2016-01-11), set minRelayTxFee only 10 times higher so it&apos;s still 10 times lower comparing to bitcoin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="128" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="50" bodyend="-1"/>
        <referencedby refid="class_coin_control_dialog_1a4fc60e89b097952ff22dc0f9c58c87d9" compoundref="coincontroldialog_8cpp" startline="451" endline="631">CoinControlDialog::updateLabels</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a769a355f46457c5203bf33a3fe0be368" prot="public" static="yes" mutable="no">
        <type>const <ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>const uint64_t nMinDiskSpace</definition>
        <argsstring></argsstring>
        <name>nMinDiskSpace</name>
        <initializer>= 52428800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="131" column="1" bodyfile="/home/dev/ds-160209/src/main.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a1821834b8f7837b469f7f91a14c20042" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_coins_view_cache" kindref="compound">CCoinsViewCache</ref> *</type>
        <definition>CCoinsViewCache* pcoinsTip</definition>
        <argsstring></argsstring>
        <name>pcoinsTip</name>
        <briefdescription>
<para>Global variable that points to the active <ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref> (protected by cs_main) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="575" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="110" bodyend="-1"/>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8h_1a0023503503c358eda0c97a576ef53fde" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_block_tree_d_b" kindref="compound">CBlockTreeDB</ref> *</type>
        <definition>CBlockTreeDB* pblocktree</definition>
        <argsstring></argsstring>
        <name>pblocktree</name>
        <briefdescription>
<para>Global variable that points to the active block tree (protected by cs_main) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="578" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="111" bodyend="-1"/>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8h_1af0793c7c14e94d2d642f4ac89067a429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetNodeStateStats</definition>
        <argsstring>(NodeId nodeid, CNodeStateStats &amp;stats)</argsstring>
        <name>GetNodeStateStats</name>
        <param>
          <type><ref refid="net_8h_1a954d746a58632565552615fd0a4ee660" kindref="member">NodeId</ref></type>
          <declname>nodeid</declname>
        </param>
        <param>
          <type><ref refid="struct_c_node_state_stats" kindref="compound">CNodeStateStats</ref> &amp;</type>
          <declname>stats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get statistics from node state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="145" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="445" bodyend="458"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="struct_c_node_state_stats_1a62c2243d09166c1daaad84519700da3c" compoundref="main_8h" startline="138">CNodeStateStats::nMisbehavior</references>
        <references refid="struct_c_node_state_stats_1a7646deac801098e973a5bc50202f92cd" compoundref="main_8h" startline="139">CNodeStateStats::nSyncHeight</references>
        <references refid="struct_c_node_state_stats_1a67c910a57285a63bbf0bb88ea7a9ca05" compoundref="main_8h" startline="140">CNodeStateStats::nCommonHeight</references>
        <references refid="struct_c_node_state_stats_1a4b03fd8ecaa9268f7eca836e5e79c35a" compoundref="main_8h" startline="141">CNodeStateStats::vHeightInFlight</references>
        <referencedby refid="class_peer_table_priv_1a304d99874f6cd0c67ed207546a5ca904" compoundref="peertablemodel_8cpp" startline="53" endline="97">PeerTablePriv::refreshPeers</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1aa6b7f220759fb53f10c65654bbf61317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RegisterWallet</definition>
        <argsstring>(CWalletInterface *pwalletIn)</argsstring>
        <name>RegisterWallet</name>
        <param>
          <type><ref refid="class_c_wallet_interface" kindref="compound">CWalletInterface</ref> *</type>
          <declname>pwalletIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a wallet to receive updates from core </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="148" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="223" bodyend="230"/>
        <references refid="class_c_wallet_interface_1a7bde8e284f9405dd858c9b4cbf960ae5">CWalletInterface::SyncTransaction</references>
        <references refid="class_c_wallet_interface_1a209e0de8725bab3274e7d79567cca630">CWalletInterface::EraseFromWallet</references>
        <references refid="class_c_wallet_interface_1a07b55d9aede02e25a5e8d8027c67954f">CWalletInterface::UpdatedTransaction</references>
        <references refid="class_c_wallet_interface_1ac9c87a58906081f6629f3f82439dad8e">CWalletInterface::SetBestChain</references>
        <references refid="class_c_wallet_interface_1a32858e2bb7bb6cb81ac391e0e2a0d4c1">CWalletInterface::Inventory</references>
        <references refid="class_c_wallet_interface_1acd71e9479057c2fdc433fc576e625edf">CWalletInterface::ResendWalletTransactions</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1aa60561b6923955deeaad6fdab74a3aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnregisterWallet</definition>
        <argsstring>(CWalletInterface *pwalletIn)</argsstring>
        <name>UnregisterWallet</name>
        <param>
          <type><ref refid="class_c_wallet_interface" kindref="compound">CWalletInterface</ref> *</type>
          <declname>pwalletIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister a wallet from core </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="150" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="232" bodyend="239"/>
        <references refid="class_c_wallet_interface_1acd71e9479057c2fdc433fc576e625edf">CWalletInterface::ResendWalletTransactions</references>
        <references refid="class_c_wallet_interface_1a32858e2bb7bb6cb81ac391e0e2a0d4c1">CWalletInterface::Inventory</references>
        <references refid="class_c_wallet_interface_1ac9c87a58906081f6629f3f82439dad8e">CWalletInterface::SetBestChain</references>
        <references refid="class_c_wallet_interface_1a07b55d9aede02e25a5e8d8027c67954f">CWalletInterface::UpdatedTransaction</references>
        <references refid="class_c_wallet_interface_1a209e0de8725bab3274e7d79567cca630">CWalletInterface::EraseFromWallet</references>
        <references refid="class_c_wallet_interface_1a7bde8e284f9405dd858c9b4cbf960ae5">CWalletInterface::SyncTransaction</references>
      </memberdef>
      <memberdef kind="function" id="main_8h_1ad0b02f9e3ff8997319581ce5021d4244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnregisterAllWallets</definition>
        <argsstring>()</argsstring>
        <name>UnregisterAllWallets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister all wallets from core </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="152" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="241" bodyend="248"/>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a0829b07a2144791d1d6cb18c279fb3a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SyncWithWallets</definition>
        <argsstring>(const CTransaction &amp;tx, const CBlock *pblock=NULL, bool fConnect=true)</argsstring>
        <name>SyncWithWallets</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_block" kindref="compound">CBlock</ref> *</type>
          <declname>pblock</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>fConnect</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Push an updated transaction to all registered wallets </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="154" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="250" bodyend="252"/>
        <referencedby refid="class_c_block_1a9532c041d24701a338ea5c91008b72aa" compoundref="chain_8cpp" startline="191" endline="214">CBlock::DisconnectBlock</referencedby>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" compoundref="main_8cpp" startline="865" endline="1023">AcceptToMemoryPool</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1aa8d5c228e24266e3dca5858adae31800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ResendWalletTransactions</definition>
        <argsstring>(bool fForce=false)</argsstring>
        <name>ResendWalletTransactions</name>
        <param>
          <type>bool</type>
          <declname>fForce</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ask wallets to resend their transactions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="156" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="254" bodyend="256"/>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a8f5f5ea7520a9c1b4400a19df8572226" compoundref="rpcwallet_8cpp" startline="2248" endline="2259">resendtx</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1ab02615ff65f91d69f8d786ec900baa8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RegisterNodeSignals</definition>
        <argsstring>(CNodeSignals &amp;nodeSignals)</argsstring>
        <name>RegisterNodeSignals</name>
        <param>
          <type><ref refid="struct_c_node_signals" kindref="compound">CNodeSignals</ref> &amp;</type>
          <declname>nodeSignals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register with a network node to receive its signals </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="159" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="460" bodyend="467"/>
        <references refid="struct_c_node_signals_1a9d5d5e496f424ee3331b3dcb0a0c558b" compoundref="net_8h" startline="61">CNodeSignals::ProcessMessages</references>
        <references refid="main_8cpp_1a196f9318f02448b85b28d612698934fd" compoundref="main_8cpp" startline="3306" endline="3423">ProcessMessages</references>
        <references refid="struct_c_node_signals_1a72f761e2001b2cd5355b20e1168bf903" compoundref="net_8h" startline="62">CNodeSignals::SendMessages</references>
        <references refid="main_8cpp_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</references>
        <references refid="struct_c_node_signals_1a137e1854c9fea8a56e5f30be76da8b86" compoundref="net_8h" startline="63">CNodeSignals::InitializeNode</references>
        <references refid="struct_c_node_signals_1a4fb2ed0335cbfa8daf5f43a0b42ec481" compoundref="net_8h" startline="64">CNodeSignals::FinalizeNode</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a3ef0cc6e9d9d6435ee2a5569244d6ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnregisterNodeSignals</definition>
        <argsstring>(CNodeSignals &amp;nodeSignals)</argsstring>
        <name>UnregisterNodeSignals</name>
        <param>
          <type><ref refid="struct_c_node_signals" kindref="compound">CNodeSignals</ref> &amp;</type>
          <declname>nodeSignals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister a network node </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="161" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="469" bodyend="476"/>
        <references refid="struct_c_node_signals_1a9d5d5e496f424ee3331b3dcb0a0c558b" compoundref="net_8h" startline="61">CNodeSignals::ProcessMessages</references>
        <references refid="main_8cpp_1a196f9318f02448b85b28d612698934fd" compoundref="main_8cpp" startline="3306" endline="3423">ProcessMessages</references>
        <references refid="struct_c_node_signals_1a72f761e2001b2cd5355b20e1168bf903" compoundref="net_8h" startline="62">CNodeSignals::SendMessages</references>
        <references refid="main_8cpp_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</references>
        <references refid="struct_c_node_signals_1a137e1854c9fea8a56e5f30be76da8b86" compoundref="net_8h" startline="63">CNodeSignals::InitializeNode</references>
        <references refid="struct_c_node_signals_1a4fb2ed0335cbfa8daf5f43a0b42ec481" compoundref="net_8h" startline="64">CNodeSignals::FinalizeNode</references>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a28098619373dbab927d25bca3cea8a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PushGetBlocks</definition>
        <argsstring>(CNode *pnode, CBlockIndex *pindexBegin, uint256 hashEnd)</argsstring>
        <name>PushGetBlocks</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pnode</declname>
        </param>
        <param>
          <type><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexBegin</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
          <declname>hashEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="163" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1865" bodyend="1874"/>
        <references refid="class_c_node_1ac655c80f7fbef266417985776043785b" compoundref="net_8h" startline="282">CNode::pindexLastGetBlocksBegin</references>
        <references refid="class_c_node_1a00f1eb04110387df966dd9c3ff3c53fb" compoundref="net_8h" startline="283">CNode::hashLastGetBlocksEnd</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ProcessBlock</definition>
        <argsstring>(CNode *pfrom, CBlock *pblock)</argsstring>
        <name>ProcessBlock</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pfrom</declname>
        </param>
        <param>
          <type><ref refid="class_c_block" kindref="compound">CBlock</ref> *</type>
          <declname>pblock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="165" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1885" bodyend="2022"/>
        <references refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" compoundref="sync_8h" startline="100">AssertLockHeld</references>
        <references refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_block_1a42d001a1eff1d09a76b61a6ff089da35" compoundref="primitives_2block_8h" startline="172" endline="175">CBlock::IsProofOfStake</references>
        <references refid="class_c_block_1aee66480cbb9bc01b5f1d27e6ab71f512" compoundref="primitives_2block_8h" startline="182" endline="185">CBlock::GetProofOfStake</references>
        <references refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" compoundref="primitives_2block_8h" startline="40">CBlockHeader::hashPrevBlock</references>
        <references refid="namespace_checkpoints_1aa1915d9b1ed1c988b8477c3cc7ed1416" compoundref="checkpoints_8cpp" startline="70" endline="77">Checkpoints::AutoSelectSyncCheckpoint</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" compoundref="chain_8h" startline="141">CBlockIndex::nTime</references>
        <references refid="class_c_node_1a1923dffc7124eeedcc4bb58c2cd75754" compoundref="net_8cpp" startline="505" endline="528">CNode::Misbehaving</references>
        <references refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" compoundref="net_8h" startline="248">CNode::nVersion</references>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" compoundref="serialize_8h" startline="90">SER_DISK</references>
        <references refid="struct_c_orphan_block_1a6d63003bce14214976acc149cd4813e8" compoundref="main_8cpp" startline="87">COrphanBlock::vchBlock</references>
        <references refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" compoundref="streams_8h" startline="112" endline="112">CDataStream::begin</references>
        <references refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" compoundref="streams_8h" startline="114" endline="114">CDataStream::end</references>
        <references refid="struct_c_orphan_block_1ab4d0e535f5020a6c765ce3e1d58b5cb8" compoundref="main_8cpp" startline="84">COrphanBlock::hashBlock</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="struct_c_orphan_block_1a8c6e5d47d1da746d59feefdc0eb9f55c" compoundref="main_8cpp" startline="85">COrphanBlock::hashPrev</references>
        <references refid="struct_c_orphan_block_1a11bf8c661061349166e335ba0dedd7fb" compoundref="main_8cpp" startline="86">COrphanBlock::stake</references>
        <references refid="main_8cpp_1a28098619373dbab927d25bca3cea8a4a" compoundref="main_8cpp" startline="1865" endline="1874">PushGetBlocks</references>
        <references refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</references>
        <references refid="class_c_node_1ae0def1498409407d1612833a7d38c875" compoundref="net_8h" startline="503" endline="520">CNode::AskFor</references>
        <references refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a4cae15fd207d555331995cd5c57689c1" compoundref="protocol_8h" startline="143">MSG_BLOCK</references>
        <references refid="main_8cpp_1abdef12ddcc1e6b127c59fab552a9b81b" compoundref="main_8cpp" startline="1620" endline="1626">WantedByOrphan</references>
        <references refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</references>
        <references refid="class_c_block_1a930d742dbdcd7c78159d3f93431d2d3e" compoundref="primitives_2block_8h" startline="196" endline="213">CBlock::BuildMerkleTree</references>
        <references refid="classbase__uint_1ae0e221686cd63384569a8db5cc06d4c9" compoundref="uint256_8h" startline="261" endline="264">base_uint&lt; BITS &gt;::size</references>
        <referencedby refid="main_8cpp_1afbdbbb5a1b376748e5460cbcf644a9af" compoundref="main_8cpp" startline="2219" endline="2279">LoadExternalBlockFile</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="rpcmining_8cpp_1a6fc1aa077add8cb1c74207056616134d" compoundref="rpcmining_8cpp" startline="655" endline="679">submitblock</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a6df609da0bad1550cbb2cdc781ad2904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckDiskSpace</definition>
        <argsstring>(uint64_t nAdditionalBytes=0)</argsstring>
        <name>CheckDiskSpace</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>nAdditionalBytes</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="166" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="2024" bodyend="2039"/>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="util_8cpp_1a396fd0b4e52260e1ddf379fa6e09d887" compoundref="util_8cpp" startline="104">strMiscWarning</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" compoundref="init_8cpp" startline="52">uiInterface</references>
        <references refid="class_c_client_u_i_interface_1ab3f23c730300df11cf9ff369fbae0635" compoundref="ui__interface_8h" startline="78">CClientUIInterface::ThreadSafeMessageBox</references>
        <references refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1a0551e67c07eb6a81edf6e43fed89759f" compoundref="ui__interface_8h" startline="74">CClientUIInterface::MSG_ERROR</references>
        <references refid="init_8cpp_1ac7140c7327b1e6a8d46470b1cd0e8e1b" compoundref="init_8cpp" startline="121" endline="124">StartShutdown</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" compoundref="sandstorm_8cpp" startline="1090" endline="1176">CSandstormPool::SendSandstormDenominate</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1ac98b87e479f71b7be2b990a10c4ebc2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnloadBlockIndex</definition>
        <argsstring>()</argsstring>
        <name>UnloadBlockIndex</name>
        <briefdescription>
<para>Unload database information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="168" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="2060" bodyend="2066"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a367f303d34b8a5501ac4d77bebab578c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoadBlockIndex</definition>
        <argsstring>(bool fAllowNew=true)</argsstring>
        <name>LoadBlockIndex</name>
        <param>
          <type>bool</type>
          <declname>fAllowNew</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Load the block tree and coins database from disk */. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="170" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="2068" bodyend="2104"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="chainparams_8h_1abc8c1af875107f5eac0f327bd3b8363d" compoundref="chainparams_8h" startline="111" endline="114">TestNet</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_chain_params_1abee677792d8f64e9dc766738ca0fbb55">CChainParams::GenesisBlock</references>
        <references refid="class_c_block_1a606df2cab7dc67e5dd11b157d288cf2b" compoundref="chain_8cpp" startline="830" endline="854">CBlock::WriteToDisk</references>
        <references refid="class_c_block_1afab527f890c5575db3b1a2b17f47bf5a" compoundref="main_8cpp" startline="4244" endline="4311">CBlock::AddToBlockIndex</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a92e5e1fcbd56cc44c27d39b64da8a79a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InitBlockIndex</definition>
        <argsstring>()</argsstring>
        <name>InitBlockIndex</name>
        <briefdescription>
<para>Initialize a new block tree database + block data on disk. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="172" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="2106" bodyend="2144"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintBlockTree</definition>
        <argsstring>()</argsstring>
        <name>PrintBlockTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="173" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="2146" bodyend="2217"/>
        <references refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" compoundref="sync_8h" startline="100">AssertLockHeld</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_index_1a3bf9ecd8938c42be6a4b14d3c7ef5c21" compoundref="chain_8h" startline="113">CBlockIndex::nFile</references>
        <references refid="class_c_block_index_1af8de5426e2da2c78e1e7729a89a7670a" compoundref="chain_8h" startline="114">CBlockIndex::nBlockPos</references>
        <references refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" compoundref="primitives_2block_8h" startline="43">CBlockHeader::nBits</references>
        <references refid="util_8cpp_1a749bc6776c8ec72d7c5e4dea56aee415" compoundref="util_8cpp" startline="1465" endline="1473">DateTimeStrFormat</references>
        <references refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">CBlockHeader::GetBlockTime</references>
        <references refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" compoundref="util_8cpp" startline="339" endline="360">FormatMoney</references>
        <references refid="class_c_block_index_1a6559fddea3401548ae144e870d150359" compoundref="chain_8h" startline="118">CBlockIndex::nMint</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">CBlock::vtx</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a196f9318f02448b85b28d612698934fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ProcessMessages</definition>
        <argsstring>(CNode *pfrom)</argsstring>
        <name>ProcessMessages</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pfrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="176" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="3306" bodyend="3423"/>
        <references refid="class_c_node_1a9649c1f27ff0d8f0ba89eb1ea5bee139" compoundref="net_8h" startline="235">CNode::vRecvGetData</references>
        <references refid="class_c_node_1a015361812daa5b6ebb9a5692ddf67a54" compoundref="net_8h" startline="236">CNode::vRecvMsg</references>
        <references refid="class_c_node_1af2f7ea958313974e8a948292f060922e" compoundref="net_8h" startline="259">CNode::fDisconnect</references>
        <references refid="class_c_node_1a3c99b7e2b0e53feb58f6859453456f74" compoundref="net_8h" startline="229">CNode::nSendSize</references>
        <references refid="net_8h_1a13f289d6233bd32b78a38793f76bdccb" compoundref="net_8h" startline="38" endline="38">SendBufferSize</references>
        <references refid="class_c_net_message_1a440150fa0e6a84699780048baca55da8" compoundref="net_8h" startline="179" endline="184">CNetMessage::complete</references>
        <references refid="class_c_net_message_1ae7215dca62862a3688f7eeb94646c377" compoundref="net_8h" startline="163">CNetMessage::hdr</references>
        <references refid="class_c_message_header_1a4284bf1d2fd792af89e1c93b7e6e274e" compoundref="protocol_8h" startline="58">CMessageHeader::pchMessageStart</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="chainparams_8h_1a6bcadada595cc3da13e6a04be1715917" compoundref="chainparams_8h" startline="17">MESSAGE_START_SIZE</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_message_header_1a21f5760d034d4a040b00d6c34e927be0" compoundref="protocol_8cpp" startline="63" endline="91">CMessageHeader::IsValid</references>
        <references refid="class_c_message_header_1a71f022e98bff1acd65be4b75ce4cc038" compoundref="protocol_8cpp" startline="55" endline="61">CMessageHeader::GetCommand</references>
        <references refid="class_c_message_header_1a67ccb9f1f23af69e309a8d6c8bfff751" compoundref="protocol_8h" startline="60">CMessageHeader::nMessageSize</references>
        <references refid="class_c_net_message_1a1a25c16099d01362e1663390a2e06d1a" compoundref="net_8h" startline="166">CNetMessage::vRecv</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" compoundref="streams_8h" startline="112" endline="112">CDataStream::begin</references>
        <references refid="class_c_message_header_1ab9c6bec3694e2c110b4f358af9e55984" compoundref="protocol_8h" startline="61">CMessageHeader::nChecksum</references>
        <references refid="class_c_net_message_1a99d5bbca862ac4b7a88b71a7b679decc" compoundref="net_8h" startline="169">CNetMessage::nTime</references>
        <references refid="util_8cpp_1a477231880f761159de1567ad6fb98fac" compoundref="util_8cpp" startline="1069" endline="1075">PrintExceptionContinue</references>
        <referencedby refid="main_8h_1ab02615ff65f91d69f8d786ec900baa8a" compoundref="main_8cpp" startline="460" endline="467">RegisterNodeSignals</referencedby>
        <referencedby refid="main_8h_1a3ef0cc6e9d9d6435ee2a5569244d6ebd" compoundref="main_8cpp" startline="469" endline="476">UnregisterNodeSignals</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SendMessages</definition>
        <argsstring>(CNode *pto, bool fSendTrickle)</argsstring>
        <name>SendMessages</name>
        <param>
          <type><ref refid="class_c_node" kindref="compound">CNode</ref> *</type>
          <declname>pto</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fSendTrickle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="177" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="3426" bodyend="3631"/>
        <references refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" compoundref="sync_8h" startline="161">TRY_LOCK</references>
        <references refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" compoundref="net_8h" startline="248">CNode::nVersion</references>
        <references refid="class_c_node_1aa1e9c1dc1d5cf806b9be0af155c0bf90" compoundref="net_8h" startline="310">CNode::fPingQueued</references>
        <references refid="class_c_node_1a9a077fbd09ddee1d81f027bc01a4ec68" compoundref="net_8h" startline="304">CNode::nPingNonceSent</references>
        <references refid="class_c_node_1a8352aa332af726ff117fb890c4dd3869" compoundref="net_8h" startline="306">CNode::nPingUsecStart</references>
        <references refid="util_8h_1a0c5a06b50cd805b1923552114494c029" compoundref="util_8h" startline="389" endline="393">GetTimeMicros</references>
        <references refid="util_8cpp_1acf52c2aa8213c7b15e26594a2264ed8a" compoundref="util_8cpp" startline="154" endline="161">GetRandBytes</references>
        <references refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" compoundref="net_8h" startline="583" endline="595">CNode::PushMessage</references>
        <references refid="class_c_node_1a4009c240ccb6d085ae57e8cf4d4c2cb6" compoundref="net_8h" startline="285">CNode::fStartSync</references>
        <references refid="main_8cpp_1a28098619373dbab927d25bca3cea8a4a" compoundref="main_8cpp" startline="1865" endline="1874">PushGetBlocks</references>
        <references refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</references>
        <references refid="main_8cpp_1ac15123f662a13528a4ef95ddbd952bee" compoundref="main_8cpp" startline="254" endline="256">ResendWalletTransactions</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1ac21266ce880bd36b98ba7cfcc447a30f" compoundref="net_8h" startline="289">CNode::setAddrKnown</references>
        <references refid="classmruset_1ac7a85b54646e9d9d1962ce7f30b2a1fc" compoundref="mruset_8h" startline="33" endline="33">mruset&lt; T &gt;::clear</references>
        <references refid="util_8cpp_1a53f30a9fc322fa65a5c4e3732e4ad410" compoundref="util_8cpp" startline="105">fNoListen</references>
        <references refid="net_8cpp_1a66f5f0bc1dad5cfe429157d5637a93dc" compoundref="net_8cpp" startline="133" endline="144">GetLocalAddress</references>
        <references refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" compoundref="net_8h" startline="245">CNode::addr</references>
        <references refid="class_c_net_addr_1a35131b2792434d1c9a860c583b610ab6" compoundref="netbase_8cpp" startline="795" endline="798">CNetAddr::IsRoutable</references>
        <references refid="class_c_node_1a06950a5ce265a1d4df1aad7f28e6fde8" compoundref="net_8h" startline="472" endline="483">CNode::PushAddress</references>
        <references refid="class_c_node_1a9b2d9b9182ff111c79f704594c4aa2e1" compoundref="net_8h" startline="288">CNode::vAddrToSend</references>
        <references refid="classmruset_1af2e0dfe9d8b029bde78457797cdc42a9" compoundref="mruset_8h" startline="37" endline="50">mruset&lt; T &gt;::insert</references>
        <references refid="class_c_node_1a1e8b0784cc82f33edc2dc4e2834d1ff0" compoundref="net_8h" startline="297">CNode::cs_inventory</references>
        <references refid="class_c_node_1abcd24c9478bc1ab5ba6de6b369080cec" compoundref="net_8h" startline="296">CNode::vInventoryToSend</references>
        <references refid="class_c_node_1ae15aa9a971040800c26bc87b1250220f" compoundref="net_8h" startline="295">CNode::setInventoryKnown</references>
        <references refid="classmruset_1abf122b956abffbf3ce190c80d215660c" compoundref="mruset_8h" startline="32" endline="32">mruset&lt; T &gt;::count</references>
        <references refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" compoundref="protocol_8h" startline="137">CInv::type</references>
        <references refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a0494732fc92c975f58783e224585c473" compoundref="protocol_8h" startline="142">MSG_TX</references>
        <references refid="util_8cpp_1af3aedae75efabb170337a497457f7ecf" compoundref="util_8cpp" startline="218" endline="223">GetRandHash</references>
        <references refid="class_c_inv_1abfa04c38e9c0def9a2b09a9c43929744" compoundref="protocol_8h" startline="138">CInv::hash</references>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" compoundref="util_8h" startline="45">BEGIN</references>
        <references refid="util_8h_1ac32457d3f041434e57a2924847796fda" compoundref="util_8h" startline="46">END</references>
        <references refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" compoundref="net_8h" startline="424" endline="426">CNode::GetId</references>
        <references refid="class_c_node_1af2f7ea958313974e8a948292f060922e" compoundref="net_8h" startline="259">CNode::fDisconnect</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a4cae15fd207d555331995cd5c57689c1" compoundref="protocol_8h" startline="143">MSG_BLOCK</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_node_1a7593dfbd76c34a81169e3fb2aa0e0cf7" compoundref="net_8h" startline="298">CNode::mapAskFor</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <references refid="class_c_inv_1a87a826a842d549c2747ced0c1a90bc18" compoundref="protocol_8cpp" startline="158" endline="161">CInv::ToString</references>
        <references refid="net_8cpp_1a1791b4ef08160ee954e7a711a0587172" compoundref="net_8cpp" startline="73">mapAlreadyAskedFor</references>
        <references refid="smessage_8cpp_1a6a38441245ee84417e8fb4a77860dc09" compoundref="smessage_8cpp" startline="74">fSecMsgEnabled</references>
        <references refid="smessage_8cpp_1abb934a23a076a4af443e2fb0610d7833" compoundref="smessage_8cpp" startline="1783" endline="1882">SecureMsgSendData</references>
        <referencedby refid="main_8h_1ab02615ff65f91d69f8d786ec900baa8a" compoundref="main_8cpp" startline="460" endline="467">RegisterNodeSignals</referencedby>
        <referencedby refid="main_8h_1a3ef0cc6e9d9d6435ee2a5569244d6ebd" compoundref="main_8cpp" startline="469" endline="476">UnregisterNodeSignals</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a0189c34248cd89bbbe20d4d6045bd7c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ThreadImport</definition>
        <argsstring>(std::vector&lt; boost::filesystem::path &gt; vImportFiles)</argsstring>
        <name>ThreadImport</name>
        <param>
          <type>std::vector&lt; boost::filesystem::path &gt;</type>
          <declname>vImportFiles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="178" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="2294" bodyend="2317"/>
        <references refid="util_8cpp_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" compoundref="util_8cpp" startline="1441" endline="1463">RenameThread</references>
        <references refid="main_8cpp_1afbdbbb5a1b376748e5460cbcf644a9af" compoundref="main_8cpp" startline="2219" endline="2279">LoadExternalBlockFile</references>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="util_8cpp_1ad8f8509a84cc6f53344a5ac76369c327" compoundref="util_8cpp" startline="1264" endline="1273">RenameOver</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a20a76dbc6ac5b8a6e0aaef85522b1069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckProofOfWork</definition>
        <argsstring>(uint256 hash, unsigned int nBits)</argsstring>
        <name>CheckProofOfWork</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="180" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.cpp" bodystart="57" bodyend="71"/>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</referencedby>
        <referencedby refid="class_c_block_tree_d_b_1a12be19bb1d7253eeb40e1aa88b032346" compoundref="txdb_8cpp" startline="86" endline="136">CBlockTreeDB::LoadBlockIndexGuts</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a868a58404bd61b6a82901f428d152bae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetNextTargetRequired</definition>
        <argsstring>(const CBlockIndex *pindexLast, bool fProofOfStake)</argsstring>
        <name>GetNextTargetRequired</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexLast</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fProofOfStake</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="181" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1685" bodyend="1723"/>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_chain_params_1ad44a223db9e6e744d56007e0700a90b3" compoundref="chainparams_8h" startline="59" endline="59">CChainParams::ProofOfWorkLimit</references>
        <references refid="class_c_big_num_1a26b88c1b29f347219907979ff2028bdc" compoundref="bignum_8h" startline="333" endline="344">CBigNum::GetCompact</references>
        <references refid="main_8cpp_1a67a2382a391340c12c45961f3b8c66e8" compoundref="main_8cpp" startline="1678" endline="1683">GetLastBlockIndex</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" compoundref="chain_8h" startline="238" endline="241">CBlockIndex::GetBlockTime</references>
        <references refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" compoundref="bignum_8h" startline="321" endline="331">CBigNum::SetCompact</references>
        <references refid="class_c_block_index_1a3324894e6af612d1bd76f89378435713" compoundref="chain_8h" startline="142">CBlockIndex::nBits</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" compoundref="rpcmining_8cpp" startline="150" endline="234">checkkernel</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a54eeb686375f66683fb139de496c088d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount GetProofOfWorkReward</definition>
        <argsstring>(CAmount nFees)</argsstring>
        <name>GetProofOfWorkReward</name>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>nFees</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="182" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1662" bodyend="1675"/>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="util_8cpp_1a72fc7ee9c182de0580a9909c5895fe24" compoundref="util_8cpp" startline="339" endline="360">FormatMoney</references>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="rpcmining_8cpp_1a70bed6c442862e2a969b623e3b56b952" compoundref="rpcmining_8cpp" startline="46" endline="54">getsubsidy</referencedby>
        <referencedby refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" compoundref="rpcmining_8cpp" startline="78" endline="112">getmininginfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a22e712bbf635a69ba8dd7ae004d2697b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsConfirmedInNPrevBlocks</definition>
        <argsstring>(const CTxIndex &amp;txindex, const CBlockIndex *pindexFrom, int nMaxDepth, int &amp;nActualDepth)</argsstring>
        <name>IsConfirmedInNPrevBlocks</name>
        <param>
          <type>const <ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref> &amp;</type>
          <declname>txindex</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindexFrom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nMaxDepth</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nActualDepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="184" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1766" bodyend="1777"/>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_block_index_1af8de5426e2da2c78e1e7729a89a7670a" compoundref="chain_8h" startline="114">CBlockIndex::nBlockPos</references>
        <references refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" compoundref="main_8h" startline="446">CTxIndex::pos</references>
        <references refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" compoundref="main_8h" startline="229">CDiskTxPos::nBlockPos</references>
        <references refid="class_c_block_index_1a3bf9ecd8938c42be6a4b14d3c7ef5c21" compoundref="chain_8h" startline="113">CBlockIndex::nFile</references>
        <references refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" compoundref="main_8h" startline="228">CDiskTxPos::nFile</references>
        <referencedby refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" compoundref="kernel_8cpp" startline="286" endline="320">CheckProofOfStake</referencedby>
        <referencedby refid="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" compoundref="kernel_8cpp" startline="328" endline="353">CheckKernel</referencedby>
        <referencedby refid="class_c_transaction_po_s_1a19de7fad0cc156ebd4e5a3858db7619f" compoundref="main_8cpp" startline="3846" endline="3971">CTransactionPoS::ConnectInputs</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a30cf1d6270f9040fc151d03b98027ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GetWarnings</definition>
        <argsstring>(std::string strFor)</argsstring>
        <name>GetWarnings</name>
        <param>
          <type>std::string</type>
          <declname>strFor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a7d2a4633e4e0e8e4cb9c881d45a496b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetTransaction</definition>
        <argsstring>(const uint256 &amp;hash, CTransaction &amp;tx, uint256 &amp;hashBlock)</argsstring>
        <name>GetTransaction</name>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type><ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hashBlock</declname>
        </param>
        <briefdescription>
<para>Return transaction in tx, and if it was found inside a block, its hash is placed in hashBlock. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="186" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1557" bodyend="1597"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088">mempool</references>
        <references refid="class_c_tx_mem_pool_1a8c19232d17e668c6690721b0f5088960" compoundref="txmempool_8cpp" startline="117" endline="124">CTxMemPool::lookup</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" compoundref="main_8cpp" startline="3649" endline="3674">CTransactionPoS::ReadFromDisk</references>
        <references refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</references>
        <references refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" compoundref="main_8h" startline="446">CTxIndex::pos</references>
        <references refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" compoundref="main_8h" startline="228">CDiskTxPos::nFile</references>
        <references refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" compoundref="main_8h" startline="229">CDiskTxPos::nBlockPos</references>
        <references refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">CBlockHeader::GetHash</references>
        <references refid="util_8h_1aa3052ab82a2ba880ea3e30b3357c8820" compoundref="util_8h" startline="77">PAIRTYPE</references>
        <references refid="class_c_block_index_1a2f0acd342accaab731d887584b444590" compoundref="chain_8h" startline="112">CBlockIndex::pnext</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">CBlock::vtx</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <referencedby refid="instantx_8h_1a091b5dc50769595bb701d5f85ca475e5" compoundref="instantx_8cpp" startline="175" endline="219">IsIXTXValid</referencedby>
        <referencedby refid="main_8h_1ae137d76bbcaf8d65fab905889b504e26" compoundref="main_8cpp" startline="1487" endline="1504">GetInputAge</referencedby>
        <referencedby refid="blockbrowser_8h_1a60cc8549d68eb368aa21e8d9ef466d50" compoundref="blockbrowser_8cpp" startline="157" endline="181">getTxTotalValue</referencedby>
        <referencedby refid="blockbrowser_8h_1a14b4bf546aec3c2c0b550239299240c0" compoundref="blockbrowser_8cpp" startline="188" endline="219">getOutputs</referencedby>
        <referencedby refid="blockbrowser_8h_1adff72192237ccb8a69e68bd66cf66cf7" compoundref="blockbrowser_8cpp" startline="221" endline="263">getInputs</referencedby>
        <referencedby refid="blockbrowser_8h_1a21c25275086d5e7da5b0e91a26080173" compoundref="blockbrowser_8cpp" startline="278" endline="321">getTxFees</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1a12e1b8a05d99d1544e5343c2282cc55a" compoundref="rpcrawtransaction_8cpp" startline="111" endline="144">getrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1ad5aad44f890060f42efb49acf349511e" compoundref="rpcrawtransaction_8cpp" startline="558" endline="602">sendrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1ae119520f4c7a75fcaf31fbfaf8dff482" compoundref="rpcrawtransaction_8cpp" startline="605" endline="670">searchrawtransactions</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a845c15a1402787fcf2cc021111ea89f5" compoundref="rpcwallet_8cpp" startline="1808" endline="1906">gettransaction</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1aabecb7ff2cd77451de653fa23e01ccbe" compoundref="sandstorm_8cpp" startline="930" endline="983">CSandstormPool::IsCollateralValid</referencedby>
        <referencedby refid="class_c_sand_storm_signer_1a21af58bfa950441f5d61e789a876ddda" compoundref="sandstorm_8cpp" startline="2027" endline="2042">CSandStormSigner::IsVinAssociatedWithPubkey</referencedby>
        <referencedby refid="stormnode-budget_8h_1af987fefd1417be5dcd356634986dbf83" compoundref="stormnode-budget_8cpp" startline="35" endline="90">IsBudgetCollateralValid</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1abdef12ddcc1e6b127c59fab552a9b81b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 WantedByOrphan</definition>
        <argsstring>(const COrphanBlock *pblockOrphan)</argsstring>
        <name>WantedByOrphan</name>
        <param>
          <type>const <ref refid="struct_c_orphan_block" kindref="compound">COrphanBlock</ref> *</type>
          <declname>pblockOrphan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="187" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1620" bodyend="1626"/>
        <references refid="struct_c_orphan_block_1a8c6e5d47d1da746d59feefdc0eb9f55c" compoundref="main_8cpp" startline="85">COrphanBlock::hashPrev</references>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a67a2382a391340c12c45961f3b8c66e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
        <definition>const CBlockIndex* GetLastBlockIndex</definition>
        <argsstring>(const CBlockIndex *pindex, bool fProofOfStake)</argsstring>
        <name>GetLastBlockIndex</name>
        <param>
          <type>const <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> *</type>
          <declname>pindex</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fProofOfStake</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="188" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1678" bodyend="1683"/>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <references refid="class_c_block_index_1ace1a0acbedc0403489e4d9168876fb23" compoundref="chain_8h" startline="281" endline="284">CBlockIndex::IsProofOfStake</references>
        <referencedby refid="main_8h_1a868a58404bd61b6a82901f428d152bae" compoundref="main_8cpp" startline="1685" endline="1723">GetNextTargetRequired</referencedby>
        <referencedby refid="class_statistics_page_1ae2defb5914f76600d9247b4d9c27258a" compoundref="statisticspage_8cpp" startline="34" endline="109">StatisticsPage::updateStatistics</referencedby>
        <referencedby refid="rpcserver_8h_1a8fcb55e3479716ded2b499e470bdc13a" compoundref="rpcblockchain_8cpp" startline="17" endline="46">GetDifficulty</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a273d24288c722f1ba2013cc5576b4321" compoundref="rpcblockchain_8cpp" startline="183" endline="194">getdifficulty</referencedby>
        <referencedby refid="rpcmining_8cpp_1a89c187faff7322c7d15134d13570ca1e" compoundref="rpcmining_8cpp" startline="78" endline="112">getmininginfo</referencedby>
        <referencedby refid="rpcmining_8cpp_1aedf628177ea04e0077d9d530963d40d6" compoundref="rpcmining_8cpp" startline="114" endline="148">getstakinginfo</referencedby>
        <referencedby refid="rpcmisc_8cpp_1a70335b93783d51e48d276a1e08bd721a" compoundref="rpcmisc_8cpp" startline="34" endline="81">getinfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a31faece5ef0e403969b3d3debd79b352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ThreadStakeMiner</definition>
        <argsstring>(CWallet *pwallet)</argsstring>
        <name>ThreadStakeMiner</name>
        <param>
          <type><ref refid="class_c_wallet" kindref="compound">CWallet</ref> *</type>
          <declname>pwallet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="189" column="1" bodyfile="/home/dev/ds-160209/src/miner.cpp" bodystart="536" bodyend="591"/>
        <references refid="util_8h_1a8d620b8c9865456b925cd0eea4b2ffc1" compoundref="util_8h" startline="570" endline="579">SetThreadPriority</references>
        <references refid="util_8h_1a59ca83deecce4e6c8b6139e7eb2870b4" compoundref="util_8h" startline="565">THREAD_PRIORITY_LOWEST</references>
        <references refid="util_8cpp_1a85fc1244e0bd3c91ee7a1c05ed10ebbb" compoundref="util_8cpp" startline="1441" endline="1463">RenameThread</references>
        <references refid="class_c_crypto_key_store_1a1c3ebef555fd13676d67509b95820fcf" compoundref="crypter_8h" startline="165" endline="175">CCryptoKeyStore::IsLocked</references>
        <references refid="miner_8cpp_1a544c4ab48afad09d2f474d0720570e94" compoundref="miner_8cpp" startline="80">nLastCoinStakeSearchInterval</references>
        <references refid="util_8h_1ac635182d3e845eda4af4fa5ab31609da" compoundref="util_8h" startline="107" endline="114">MilliSleep</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" compoundref="chain_8cpp" startline="660" endline="676">IsInitialBlockDownload</references>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" compoundref="chain_8h" startline="238" endline="241">CBlockIndex::GetBlockTime</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="miner_8cpp_1aa2eb52225c2bb423ea961f4844d1c69a" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</references>
        <references refid="util_8h_1af05a5c044382ba6895bcaad26325a693" compoundref="util_8h" startline="567">THREAD_PRIORITY_NORMAL</references>
        <references refid="miner_8cpp_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</references>
        <references refid="miner_8cpp_1abb57d52de7c99ac76f7020624a7565fd" compoundref="init_8cpp" startline="56">nMinerSleep</references>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a8189e51a581977f4de34ed4e0159bf63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AcceptToMemoryPool</definition>
        <argsstring>(CTxMemPool &amp;pool, CValidationState &amp;state, CTransaction &amp;tx, bool fLimitFree, bool *pfMissingInputs, bool ignoreFees=false)</argsstring>
        <name>AcceptToMemoryPool</name>
        <param>
          <type><ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref> &amp;</type>
          <declname>pool</declname>
        </param>
        <param>
          <type><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fLimitFree</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>pfMissingInputs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignoreFees</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>(try to) add transaction to memory pool </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="193" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="865" bodyend="1023"/>
        <references refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" compoundref="sync_8h" startline="100">AssertLockHeld</references>
        <references refid="class_c_transaction_1afa2875bea30d31900a30baf7fd56b96b" compoundref="transaction_8cpp" startline="49" endline="98">CTransaction::CheckTransaction</references>
        <references refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" compoundref="transaction_8h" startline="314" endline="317">CTransaction::IsCoinBase</references>
        <references refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" compoundref="transaction_8h" startline="267" endline="267">CTransaction::DoS</references>
        <references refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" compoundref="transaction_8h" startline="319" endline="323">CTransaction::IsCoinStake</references>
        <references refid="chainparams_8h_1abc8c1af875107f5eac0f327bd3b8363d" compoundref="chainparams_8h" startline="111" endline="114">TestNet</references>
        <references refid="main_8cpp_1acd163a09d0e4384ebe85dead57730dd7" compoundref="main_8cpp" startline="569" endline="663">IsStandardTx</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="class_c_tx_mem_pool_1a93b2aa8c01fa291d183a82a9e0beeb35" compoundref="txmempool_8h" startline="420" endline="424">CTxMemPool::exists</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" compoundref="instantx_8cpp" startline="27">mapLockedInputs</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" compoundref="txmempool_8h" startline="394">CTxMemPool::cs</references>
        <references refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" compoundref="txmempool_8h" startline="396">CTxMemPool::mapNextTx</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_tx_d_b_1a09b87317101ed16b6ad99794279f4c2d" compoundref="txdb-leveldb_8cpp" startline="261" endline="264">CTxDB::ContainsTx</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="class_c_transaction_po_s_1a20a028e06f505f03a0d30a7f186d9489" compoundref="main_8cpp" startline="3747" endline="3817">CTransactionPoS::FetchInputs</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="main_8cpp_1a29901e539b487e09c90ff90c7560bd9d" compoundref="main_8cpp" startline="692" endline="754">AreInputsStandard</references>
        <references refid="main_8cpp_1ad2eaf4f8542c12ea9ee1183609cc6d1a" compoundref="main_8cpp" startline="756" endline="768">GetLegacySigOpCount</references>
        <references refid="main_8cpp_1a519cfd439598a8bf64fe5503aa74cfcb" compoundref="main_8cpp" startline="770" endline="784">GetP2SHSigOpCount</references>
        <references refid="class_c_transaction_po_s_1ac2c734d9f302dda6e8681ce6d0f7843e" compoundref="main_8cpp" startline="3832" endline="3844">CTransactionPoS::GetValueIn</references>
        <references refid="class_c_transaction_po_s_1ad85303c69a61f41eb8874f07c15faa10" compoundref="main_8cpp" startline="3635" endline="3647">CTransactionPoS::GetValueOut</references>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" compoundref="serialize_8h" startline="89">SER_NETWORK</references>
        <references refid="main_8cpp_1a67d4c24facb2a0d89f92065581c486df" compoundref="main_8cpp" startline="831" endline="863">GetMinFee</references>
        <references refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a79d7494c7b44dac59ff3143ac440e2f5" compoundref="main_8h" startline="279">GMF_RELAY</references>
        <references refid="wallet_8h_1aaf857d36fa12074d08ab75d2e5e2c6de" compoundref="wallet_8h" startline="29">MIN_RELAY_TX_FEE</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" compoundref="util_8cpp" startline="536" endline="541">GetArg</references>
        <references refid="class_c_transaction_po_s_1a19de7fad0cc156ebd4e5a3858db7619f" compoundref="main_8cpp" startline="3846" endline="3971">CTransactionPoS::ConnectInputs</references>
        <references refid="class_c_tx_mem_pool_1a1203ac5cf3bdb88af4922705afad555d" compoundref="txmempool_8cpp" startline="45" endline="58">CTxMemPool::addUnchecked</references>
        <references refid="main_8cpp_1ac79dd0809b8f21bd8d861dfcfc4a7fb3" compoundref="main_8cpp" startline="250" endline="252">SyncWithWallets</references>
        <references refid="class_c_tx_mem_pool_1a340d4a897e521b7021e6b22cce951beb" compoundref="txmempool_8h" startline="395">CTxMemPool::mapTx</references>
        <referencedby refid="chain_8h_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</referencedby>
        <referencedby refid="instantx_8h_1aa516cb499ead2691d8ab216a499db5d0" compoundref="instantx_8cpp" startline="38" endline="173">ProcessMessageInstantX</referencedby>
        <referencedby refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" compoundref="main_8cpp" startline="1456" endline="1460">CMerkleTx::AcceptToMemoryPool</referencedby>
        <referencedby refid="class_c_wallet_tx_1af6d1a5a731bb69e1d94de84eb6fd15a5" compoundref="main_8cpp" startline="1462" endline="1479">CWalletTx::AcceptWalletTransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1ad5aad44f890060f42efb49acf349511e" compoundref="rpcrawtransaction_8cpp" startline="558" endline="602">sendrawtransaction</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a4d2373d0ce79227c95358116aae667f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AcceptableInputs</definition>
        <argsstring>(CTxMemPool &amp;pool, CValidationState &amp;state, CTransaction &amp;tx, bool fLimitFree, bool *pfMissingInputs, bool fRejectInsaneFee=false, bool isSSTX=false)</argsstring>
        <name>AcceptableInputs</name>
        <param>
          <type><ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref> &amp;</type>
          <declname>pool</declname>
        </param>
        <param>
          <type><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fLimitFree</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>pfMissingInputs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fRejectInsaneFee</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isSSTX</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="194" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1230" bodyend="1375"/>
        <references refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" compoundref="sync_8h" startline="100">AssertLockHeld</references>
        <references refid="class_c_transaction_1afa2875bea30d31900a30baf7fd56b96b" compoundref="transaction_8cpp" startline="49" endline="98">CTransaction::CheckTransaction</references>
        <references refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" compoundref="transaction_8h" startline="314" endline="317">CTransaction::IsCoinBase</references>
        <references refid="class_c_transaction_1a52eaee52d8827b7265f9dcd308b2a812" compoundref="transaction_8h" startline="267" endline="267">CTransaction::DoS</references>
        <references refid="class_c_transaction_1a8d924e18ddcf4c31bc7483b3a157113d" compoundref="transaction_8h" startline="319" endline="323">CTransaction::IsCoinStake</references>
        <references refid="class_c_transaction_1a3f8666d2a275c40da14bd5eaf47dc004" compoundref="transaction_8h" startline="309" endline="312">CTransaction::GetHash</references>
        <references refid="class_c_tx_mem_pool_1a93b2aa8c01fa291d183a82a9e0beeb35" compoundref="txmempool_8h" startline="420" endline="424">CTxMemPool::exists</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="instantx_8cpp_1add05f27cf823b63d3c4ac615cae0f85c" compoundref="instantx_8cpp" startline="27">mapLockedInputs</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_validation_state_1a3c6786d00da8d1c5df25b4c3876409e8" compoundref="main_8h" startline="509" endline="520">CValidationState::DoS</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_tx_mem_pool_1ac7ee8c06837c7d2688e2d7e3d071bdbb" compoundref="txmempool_8h" startline="394">CTxMemPool::cs</references>
        <references refid="class_c_tx_mem_pool_1aae6f1162f0b2e42b369971f32a9f71e8" compoundref="txmempool_8h" startline="396">CTxMemPool::mapNextTx</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_tx_d_b_1a09b87317101ed16b6ad99794279f4c2d" compoundref="txdb-leveldb_8cpp" startline="261" endline="264">CTxDB::ContainsTx</references>
        <references refid="class_c_transaction_po_s_1a20a028e06f505f03a0d30a7f186d9489" compoundref="main_8cpp" startline="3747" endline="3817">CTransactionPoS::FetchInputs</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <references refid="main_8cpp_1ad2eaf4f8542c12ea9ee1183609cc6d1a" compoundref="main_8cpp" startline="756" endline="768">GetLegacySigOpCount</references>
        <references refid="main_8cpp_1a519cfd439598a8bf64fe5503aa74cfcb" compoundref="main_8cpp" startline="770" endline="784">GetP2SHSigOpCount</references>
        <references refid="class_c_transaction_po_s_1ac2c734d9f302dda6e8681ce6d0f7843e" compoundref="main_8cpp" startline="3832" endline="3844">CTransactionPoS::GetValueIn</references>
        <references refid="class_c_transaction_po_s_1ad85303c69a61f41eb8874f07c15faa10" compoundref="main_8cpp" startline="3635" endline="3647">CTransactionPoS::GetValueOut</references>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" compoundref="serialize_8h" startline="89">SER_NETWORK</references>
        <references refid="main_8cpp_1a67d4c24facb2a0d89f92065581c486df" compoundref="main_8cpp" startline="831" endline="863">GetMinFee</references>
        <references refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a79d7494c7b44dac59ff3143ac440e2f5" compoundref="main_8h" startline="279">GMF_RELAY</references>
        <references refid="wallet_8h_1aaf857d36fa12074d08ab75d2e5e2c6de" compoundref="wallet_8h" startline="29">MIN_RELAY_TX_FEE</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" compoundref="util_8cpp" startline="536" endline="541">GetArg</references>
        <references refid="class_c_transaction_po_s_1a19de7fad0cc156ebd4e5a3858db7619f" compoundref="main_8cpp" startline="3846" endline="3971">CTransactionPoS::ConnectInputs</references>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a359b61acf2b36be02c04b7401a7a67d6" compoundref="sandstorm_8cpp" startline="1090" endline="1176">CSandstormPool::SendSandstormDenominate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1afe042769eafbfbf4e82dffe357798748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount GetBlockValue</definition>
        <argsstring>(int nBits, int nHeight, const CAmount &amp;nFees)</argsstring>
        <name>GetBlockValue</name>
        <param>
          <type>int</type>
          <declname>nBits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <param>
          <type>const <ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref> &amp;</type>
          <declname>nFees</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="196" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1725" bodyend="1730"/>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="class_c_budget_manager_1a8109dee7a714a093d88d4a4457bc728a" compoundref="stormnode-budget_8cpp" startline="430" endline="491">CBudgetManager::FillBlockPayee</referencedby>
        <referencedby refid="class_c_stormnode_payments_1accaeb923fe36e73d4228fc043771c4ad" compoundref="stormnode-payments_8cpp" startline="294" endline="346">CStormnodePayments::FillBlockPayee</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1aca9eb09c80679cf7c85926f83c353075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FindTransactionsByDestination</definition>
        <argsstring>(const CTxDestination &amp;dest, std::vector&lt; uint256 &gt; &amp;vtxhash)</argsstring>
        <name>FindTransactionsByDestination</name>
        <param>
          <type>const <ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classuint256" kindref="compound">uint256</ref> &gt; &amp;</type>
          <declname>vtxhash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="198" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1792" bodyend="1816"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" compoundref="txdb-leveldb_8cpp" startline="30">txdb</references>
        <references refid="class_c_tx_d_b_1af1a1c0835bf9eb9a59e9d197678b0a4d" compoundref="txdb-leveldb_8cpp" startline="230" endline="233">CTxDB::ReadAddrIndex</references>
        <referencedby refid="rpcrawtransaction_8cpp_1ae119520f4c7a75fcaf31fbfaf8dff482" compoundref="rpcrawtransaction_8cpp" startline="605" endline="670">searchrawtransactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1ae137d76bbcaf8d65fab905889b504e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetInputAge</definition>
        <argsstring>(CTxIn &amp;vin)</argsstring>
        <name>GetInputAge</name>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>vin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="200" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1487" bodyend="1504"/>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="instantx_8h_1a3774b6dae3dfa0a6c85e3604e742150c" compoundref="instantx_8cpp" startline="221" endline="256">CreateNewLock</referencedby>
        <referencedby refid="main_8h_1a5c7b9ac7929375148311307df7e446d0" compoundref="main_8cpp" startline="1506" endline="1523">GetInputAgeIX</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_1a8a82685a7b1ea42d49e44459b35932fe" compoundref="stormnode_8h" startline="252" endline="262">CStormnode::GetStormnodeInputAge</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1af573b79d097a9ffe6503869f838ccf42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AbortNode</definition>
        <argsstring>(const std::string &amp;msg, const std::string &amp;userMessage=&quot;&quot;)</argsstring>
        <name>AbortNode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>userMessage</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Abort with a message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="202" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="478" bodyend="486"/>
        <references refid="util_8cpp_1a396fd0b4e52260e1ddf379fa6e09d887" compoundref="util_8cpp" startline="104">strMiscWarning</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" compoundref="init_8cpp" startline="52">uiInterface</references>
        <references refid="class_c_client_u_i_interface_1ab3f23c730300df11cf9ff369fbae0635" compoundref="ui__interface_8h" startline="78">CClientUIInterface::ThreadSafeMessageBox</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1a0551e67c07eb6a81edf6e43fed89759f" compoundref="ui__interface_8h" startline="74">CClientUIInterface::MSG_ERROR</references>
        <references refid="init_8cpp_1ac7140c7327b1e6a8d46470b1cd0e8e1b" compoundref="init_8cpp" startline="121" endline="124">StartShutdown</references>
        <referencedby refid="class_c_validation_state_1a6788cb521cf538ac80413a1c6c3da5e8" compoundref="main_8h" startline="531" endline="534">CValidationState::Abort</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a4b04650c6aa3e5b02921ba992658d647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Misbehaving</definition>
        <argsstring>(NodeId nodeid, int howmuch)</argsstring>
        <name>Misbehaving</name>
        <param>
          <type><ref refid="net_8h_1a954d746a58632565552615fd0a4ee660" kindref="member">NodeId</ref></type>
          <declname>nodeid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>howmuch</declname>
        </param>
        <briefdescription>
<para>Increase a node&apos;s misbehavior score. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="204" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1741" bodyend="1764"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="net_8cpp_1a8282e3a7948351ac96516573cd31f9d0" compoundref="net_8cpp" startline="69">cs_vNodes</references>
        <references refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" compoundref="net_8cpp" startline="68">vNodes</references>
        <references refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" compoundref="net_8h" startline="424" endline="426">CNode::GetId</references>
        <references refid="class_c_node_1a442ac1857129bccaea4642d23d94ee58" compoundref="net_8h" startline="280">CNode::nMisbehavior</references>
        <references refid="util_8cpp_1a24f685720bf40370e5bd2a192ad50cd8" compoundref="util_8cpp" startline="536" endline="541">GetArg</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_node_1a3155cd313d85ec3ff691f8259a5f5345" compoundref="net_8h" startline="246">CNode::addrName</references>
        <referencedby refid="spork_8h_1a3f9c24c1f4c012152fb4422ca981610a" compoundref="spork_8cpp" startline="30" endline="78">ProcessSpork</referencedby>
        <referencedby refid="class_c_budget_manager_1a3fc235d528e37ec1c66789f3bfed1878" compoundref="stormnode-budget_8cpp" startline="904" endline="1072">CBudgetManager::ProcessMessage</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a8dc55316a297daad51a03d4cf7b37d06" compoundref="stormnode-payments_8cpp" startline="354" endline="430">CStormnodePayments::ProcessMessageStormnodePayments</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1ae8e5cecfd1f95eed8fdd14f019360fa0" compoundref="stormnode-payments_8cpp" startline="644" endline="681">CStormnodePaymentWinner::IsValid</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1ab9c19a2d094fea9bd9f285f4b33961a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount GetStormnodePayment</definition>
        <argsstring>(int nHeight, CAmount blockValue)</argsstring>
        <name>GetStormnodePayment</name>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>blockValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="206" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1733" bodyend="1738"/>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="class_c_stormnode_payments_1accaeb923fe36e73d4228fc043771c4ad" compoundref="stormnode-payments_8cpp" startline="294" endline="346">CStormnodePayments::FillBlockPayee</referencedby>
        <referencedby refid="class_c_stormnode_block_payees_1a83867efab0e90f70384a3c3354ea23d6" compoundref="stormnode-payments_8cpp" startline="519" endline="564">CStormnodeBlockPayees::IsTransactionValid</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a5c7b9ac7929375148311307df7e446d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetInputAgeIX</definition>
        <argsstring>(uint256 nTXHash, CTxIn &amp;vin)</argsstring>
        <name>GetInputAgeIX</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
          <declname>nTXHash</declname>
        </param>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>vin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="208" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1506" bodyend="1523"/>
        <references refid="main_8cpp_1ae137d76bbcaf8d65fab905889b504e26" compoundref="main_8cpp" startline="1487" endline="1504">GetInputAge</references>
        <references refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" compoundref="instantx_8cpp" startline="26">mapTxLocks</references>
        <references refid="instantx_8h_1a9e15d55227c00c556fcb73d04f82283c" compoundref="instantx_8h" startline="19">INSTANTX_SIGNATURES_REQUIRED</references>
        <references refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" compoundref="util_8cpp" startline="81">nInstantXDepth</references>
        <referencedby refid="class_c_budget_manager_1af60a5c7536d47606f0efdd475e5d171a" compoundref="stormnode-budget_8cpp" startline="118" endline="198">CBudgetManager::SubmitFinalBudget</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1afb9aef5806c13c7a81fda9854f852155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetIXConfirmations</definition>
        <argsstring>(uint256 nTXHash)</argsstring>
        <name>GetIXConfirmations</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
          <declname>nTXHash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="209" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1525" bodyend="1538"/>
        <references refid="instantx_8cpp_1a1ba3263228b7c76bab6188bf659ea249" compoundref="instantx_8cpp" startline="26">mapTxLocks</references>
        <references refid="instantx_8h_1a9e15d55227c00c556fcb73d04f82283c" compoundref="instantx_8h" startline="19">INSTANTX_SIGNATURES_REQUIRED</references>
        <references refid="util_8cpp_1aaebdfd83d8252d435dfa61f10e7b86e6" compoundref="util_8cpp" startline="81">nInstantXDepth</references>
        <referencedby refid="rpcwallet_8cpp_1a28e51f3edfce43e075603e9e315f40c4" compoundref="rpcwallet_8cpp" startline="52" endline="76">WalletTxToJSON</referencedby>
        <referencedby refid="stormnode-budget_8h_1af987fefd1417be5dcd356634986dbf83" compoundref="stormnode-budget_8cpp" startline="35" endline="90">IsBudgetCollateralValid</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1af2b1f603b58c5364716253a0711f0e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DisconnectBlocksAndReprocess</definition>
        <argsstring>(int blocks)</argsstring>
        <name>DisconnectBlocksAndReprocess</name>
        <param>
          <type>int</type>
          <declname>blocks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="211" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="1779" bodyend="1790"/>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a0d01c135cc5a05475e3dc3910c9888da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FlushStateToDisk</definition>
        <argsstring>()</argsstring>
        <name>FlushStateToDisk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="213" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="4120" bodyend="4123"/>
        <references refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" compoundref="db__test_8cc" startline="1744">state</references>
        <references refid="main_8cpp_1a0d01c135cc5a05475e3dc3910c9888da" compoundref="main_8cpp" startline="4120" endline="4123">FlushStateToDisk</references>
        <references refid="main_8cpp_1ae2877520fcc46d869b4f5e9768227e25a5886980c58baf0c7f8c6ae29d210f38c" compoundref="main_8cpp" startline="3999">FLUSH_STATE_ALWAYS</references>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
        <referencedby refid="main_8h_1a0d01c135cc5a05475e3dc3910c9888da" compoundref="main_8cpp" startline="4120" endline="4123">FlushStateToDisk</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a2f26f074aac584c3398de1dcdac59de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::filesystem::path</type>
        <definition>boost::filesystem::path GetBlockPosFilename</definition>
        <argsstring>(const CDiskBlockPos &amp;pos, const char *prefix)</argsstring>
        <name>GetBlockPosFilename</name>
        <param>
          <type>const <ref refid="struct_c_disk_block_pos" kindref="compound">CDiskBlockPos</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="215" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="4008" bodyend="4011"/>
        <references refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" compoundref="util_8cpp" startline="1109" endline="1140">GetDataDir</references>
        <references refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" compoundref="tinyformat_8h" startline="1011">strprintf</references>
        <references refid="struct_c_disk_block_pos_1a09f30dab5c02fbdea8a17f9bcee5aac8" compoundref="chain_8h" startline="30">CDiskBlockPos::nFile</references>
        <referencedby refid="main_8h_1aadc60201fa05120c42011c2ca853ad15" compoundref="main_8cpp" startline="4013" endline="4034">OpenDiskFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a4728972adc7d389a00a7f7333b74b71d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* OpenBlockFile</definition>
        <argsstring>(unsigned int nFile, unsigned int nBlockPos, const char *pszMode)</argsstring>
        <name>OpenBlockFile</name>
        <param>
          <type>unsigned int</type>
          <declname>nFile</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBlockPos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="216" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="4036" bodyend="4052"/>
        <referencedby refid="main_8h_1a62302a7b63a33b410581fccd0152df1e" compoundref="chain_8cpp" startline="639" endline="658">AppendBlockFile</referencedby>
        <referencedby refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</referencedby>
        <referencedby refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" compoundref="main_8cpp" startline="3649" endline="3674">CTransactionPoS::ReadFromDisk</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a531eb79ff695289ac9a4f8daf292273c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* OpenBlockFile</definition>
        <argsstring>(const CDiskBlockPos &amp;pos, bool fReadOnly=false)</argsstring>
        <name>OpenBlockFile</name>
        <param>
          <type>const <ref refid="struct_c_disk_block_pos" kindref="compound">CDiskBlockPos</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fReadOnly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="217" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="4054" bodyend="4056"/>
        <references refid="main_8cpp_1ab15fc61f1d9596ad0aca703ff2c74635" compoundref="main_8cpp" startline="4013" endline="4034">OpenDiskFile</references>
      </memberdef>
      <memberdef kind="function" id="main_8h_1aadc60201fa05120c42011c2ca853ad15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* OpenDiskFile</definition>
        <argsstring>(const CDiskBlockPos &amp;pos, const char *prefix, bool fReadOnly=false)</argsstring>
        <name>OpenDiskFile</name>
        <param>
          <type>const <ref refid="struct_c_disk_block_pos" kindref="compound">CDiskBlockPos</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fReadOnly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="218" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="4013" bodyend="4034"/>
        <references refid="struct_c_disk_block_pos_1a924f2805b274345afce890b27a0934d9" compoundref="chain_8h" startline="59" endline="59">CDiskBlockPos::IsNull</references>
        <references refid="main_8cpp_1a2f26f074aac584c3398de1dcdac59de9" compoundref="main_8cpp" startline="4008" endline="4011">GetBlockPosFilename</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="struct_c_disk_block_pos_1a9b4b5e149b655ac5c22d05883b5bca0e" compoundref="chain_8h" startline="31">CDiskBlockPos::nPos</references>
        <referencedby refid="main_8h_1a531eb79ff695289ac9a4f8daf292273c" compoundref="main_8cpp" startline="4054" endline="4056">OpenBlockFile</referencedby>
        <referencedby refid="main_8h_1addac9f89d64c9e26d36d1481da35877e" compoundref="main_8cpp" startline="4058" endline="4060">OpenUndoFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a62302a7b63a33b410581fccd0152df1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* AppendBlockFile</definition>
        <argsstring>(unsigned int &amp;nFileRet)</argsstring>
        <name>AppendBlockFile</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>nFileRet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="219" column="1" bodyfile="/home/dev/ds-160209/src/chain.cpp" bodystart="639" bodyend="658"/>
        <references refid="main_8cpp_1a4728972adc7d389a00a7f7333b74b71d" compoundref="main_8cpp" startline="4036" endline="4052">OpenBlockFile</references>
        <references refid="mruset__tests_8cpp_1a0592dba56693fad79136250c11e5a7fe" compoundref="mruset__tests_8cpp" startline="9">MAX_SIZE</references>
        <referencedby refid="class_c_block_1a606df2cab7dc67e5dd11b157d288cf2b" compoundref="chain_8cpp" startline="830" endline="854">CBlock::WriteToDisk</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1addac9f89d64c9e26d36d1481da35877e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* OpenUndoFile</definition>
        <argsstring>(const CDiskBlockPos &amp;pos, bool fReadOnly=false)</argsstring>
        <name>OpenUndoFile</name>
        <param>
          <type>const <ref refid="struct_c_disk_block_pos" kindref="compound">CDiskBlockPos</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fReadOnly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="220" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="4058" bodyend="4060"/>
        <references refid="main_8cpp_1ab15fc61f1d9596ad0aca703ff2c74635" compoundref="main_8cpp" startline="4013" endline="4034">OpenDiskFile</references>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a67d4c24facb2a0d89f92065581c486df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
        <definition>CAmount GetMinFee</definition>
        <argsstring>(const CTransaction &amp;tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode)</argsstring>
        <name>GetMinFee</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fAllowFree</declname>
        </param>
        <param>
          <type>enum <ref refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7" kindref="member">GetMinFee_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="285" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="831" bodyend="863"/>
        <references refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a79d7494c7b44dac59ff3143ac440e2f5" compoundref="main_8h" startline="279">GMF_RELAY</references>
        <references refid="wallet_8h_1aaf857d36fa12074d08ab75d2e5e2c6de" compoundref="wallet_8h" startline="29">MIN_RELAY_TX_FEE</references>
        <references refid="wallet_8h_1add67e95cd66a980b74a7a2f434d9cf1c" compoundref="wallet_8h" startline="27">MIN_TX_FEE</references>
        <references refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a146093898dd622fd76ca7ded2b6933ef" compoundref="main_8h" startline="280">GMF_SEND</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" compoundref="transaction_8h" startline="168">CTxOut::nValue</references>
        <references refid="amount_8h_1a12db56a9a1c931941f0943ecbb278aae" compoundref="amount_8h" startline="21" endline="21">MoneyRange</references>
        <referencedby refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" compoundref="main_8cpp" startline="865" endline="1023">AcceptToMemoryPool</referencedby>
        <referencedby refid="main_8h_1a4d2373d0ce79227c95358116aae667f3" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</referencedby>
        <referencedby refid="class_coin_control_dialog_1a4fc60e89b097952ff22dc0f9c58c87d9" compoundref="coincontroldialog_8cpp" startline="451" endline="631">CoinControlDialog::updateLabels</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a29901e539b487e09c90ff90c7560bd9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AreInputsStandard</definition>
        <argsstring>(const CTransaction &amp;tx, const MapPrevTx &amp;mapInputs)</argsstring>
        <name>AreInputsStandard</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>const <ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref> &amp;</type>
          <declname>mapInputs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check for standard transaction types <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mapInputs</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of previous transactions that have outputs we&apos;re spending </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if all inputs (scriptSigs) use only standard transaction forms </para></simplesect>
<simplesect kind="see"><para>CTransaction::FetchInputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="356" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="692" bodyend="754"/>
        <references refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" compoundref="transaction_8h" startline="314" endline="317">CTransaction::IsCoinBase</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="cache_8cc_1aabbd2f01bb8ec4a7a0128bce5f8cdb1b" compoundref="cache_8cc" startline="30">prev</references>
        <references refid="class_c_transaction_po_s_1aa49ca4acc89b51cbef362200175051b4" compoundref="main_8cpp" startline="3819" endline="3830">CTransactionPoS::GetOutputFor</references>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <references refid="script_8cpp_1a6ee6be50bff44464e905680c6fcee6dc" compoundref="script_8cpp" startline="2342" endline="2461">Solver</references>
        <references refid="script_8cpp_1ab4cc63204abc3a5d815fedbfbfe0e5c2" compoundref="script_8cpp" startline="2537" endline="2556">ScriptSigArgsExpected</references>
        <references refid="script_8cpp_1a06faacc17cea79366513c22361475a5a" compoundref="script_8cpp" startline="475" endline="1341">EvalScript</references>
        <references refid="script_8h_1a80155586fa275b28773c9b203f52cabaac14772d5583e6e6a1146e4ec51ae3fb0" compoundref="script_8h" startline="101">SCRIPT_VERIFY_NONE</references>
        <references refid="script_8h_1a750f89f617f934820d5371be790e09adad3ca9da00b2a0e6f522a5942963936d7" compoundref="script_8h" startline="181">TX_SCRIPTHASH</references>
        <referencedby refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" compoundref="main_8cpp" startline="865" endline="1023">AcceptToMemoryPool</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1ad2eaf4f8542c12ea9ee1183609cc6d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetLegacySigOpCount</definition>
        <argsstring>(const CTransaction &amp;tx)</argsstring>
        <name>GetLegacySigOpCount</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count ECDSA signature operations the old-fashioned (pre-0.6) way <simplesect kind="return"><para>number of sigops this transaction&apos;s outputs will produce when spent </para></simplesect>
<simplesect kind="see"><para>CTransaction::FetchInputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="362" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="756" bodyend="768"/>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" compoundref="transaction_8h" startline="98">CTxIn::scriptSig</references>
        <references refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" compoundref="script_8cpp" startline="3095" endline="3117">CScript::GetSigOpCount</references>
        <references refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" compoundref="transaction_8h" startline="262">CTransaction::vout</references>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" compoundref="main_8cpp" startline="865" endline="1023">AcceptToMemoryPool</referencedby>
        <referencedby refid="main_8h_1a4d2373d0ce79227c95358116aae667f3" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1acc0a05d60127f0cfcf778348670067e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetP2SHSigOpCount</definition>
        <argsstring>(const CTransaction &amp;tx, const MapPrevTx &amp;mapInputs)</argsstring>
        <name>GetP2SHSigOpCount</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>const <ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref> &amp;</type>
          <declname>mapInputs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count ECDSA signature operations in pay-to-script-hash inputs.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mapInputs</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of previous transactions that have outputs we&apos;re spending </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum number of sigops required to validate this transaction&apos;s inputs </para></simplesect>
<simplesect kind="see"><para>CTransaction::FetchInputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="370" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="770" bodyend="784"/>
        <references refid="class_c_transaction_1a274384ecbb50d71355cd287b7a6bca51" compoundref="transaction_8h" startline="314" endline="317">CTransaction::IsCoinBase</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="class_c_transaction_po_s_1aa49ca4acc89b51cbef362200175051b4" compoundref="main_8cpp" startline="3819" endline="3830">CTransactionPoS::GetOutputFor</references>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <references refid="class_c_script_1acba6d6d35776de4ce3a632446f44805f" compoundref="script_8cpp" startline="3143" endline="3150">CScript::IsPayToScriptHash</references>
        <references refid="class_c_script_1ad4a8173c235111e93a8171b1f8d00ce8" compoundref="script_8cpp" startline="3095" endline="3117">CScript::GetSigOpCount</references>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" compoundref="main_8cpp" startline="865" endline="1023">AcceptToMemoryPool</referencedby>
        <referencedby refid="main_8h_1a4d2373d0ce79227c95358116aae667f3" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a74832d5d658916e73adb139fd60e2354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsStandardTx</definition>
        <argsstring>(const CTransaction &amp;tx, std::string &amp;reason)</argsstring>
        <name>IsStandardTx</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check for standard transaction types <simplesect kind="return"><para>True if all outputs (scriptPubKeys) use only standard transaction forms </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="main_8h_1aa7ca31ac11bff224c6b0ac27fccce7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsFinalTx</definition>
        <argsstring>(const CTransaction &amp;tx, int nBlockHeight=0, int64_t nBlockTime=0)</argsstring>
        <name>IsFinalTx</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nBlockHeight</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nBlockTime</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/main.h" line="377" column="1" bodyfile="/home/dev/ds-160209/src/main.cpp" bodystart="665" bodyend="681"/>
        <references refid="sync_8h_1acd61d0cb3b49f367728193720014aed0" compoundref="sync_8h" startline="100">AssertLockHeld</references>
        <references refid="class_c_transaction_1ab01e4e451d2f3f84b01380979c8fdacc" compoundref="transaction_8h" startline="263">CTransaction::nLockTime</references>
        <references refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" compoundref="main_8cpp" startline="70">nBestHeight</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" compoundref="transaction_8h" startline="261">CTransaction::vin</references>
        <references refid="class_c_tx_in_1aa8110f711e2cdecff45c294ba2ee0a26" compoundref="transaction_8h" startline="130" endline="133">CTxIn::IsFinal</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="main_8cpp_1acd163a09d0e4384ebe85dead57730dd7" compoundref="main_8cpp" startline="569" endline="663">IsStandardTx</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="class_transaction_record_1a9b643dd885a790ae511705a1446556be" compoundref="transactionrecord_8cpp" startline="165" endline="249">TransactionRecord::updateStatus</referencedby>
        <referencedby refid="rpcwallet_8cpp_1abbb6475509aa2e69844f0b3a8bcb422a" compoundref="rpcwallet_8cpp" startline="626" endline="677">getreceivedbyaddress</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a07526be5270b0e55b4a0b79c01205f3d" compoundref="rpcwallet_8cpp" startline="691" endline="743">getreceivedbyaccount</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a5dd4970f17f0d3a59169b7fe82390d75" compoundref="rpcwallet_8cpp" startline="745" endline="768">GetAccountBalance</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a1fdcef480c78c033eb587bd442ec305f" compoundref="rpcwallet_8cpp" startline="776" endline="852">getbalance</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a0cc958f67a8d6d0002cb4fee19eddb5c" compoundref="rpcwallet_8cpp" startline="1223" endline="1348">ListReceived</referencedby>
        <referencedby refid="class_c_wallet_1aef59875cbecc432c85215334245f490b" compoundref="wallet_8cpp" startline="1584" endline="1620">CWallet::GetDenominatedBalance</referencedby>
        <referencedby refid="class_c_wallet_1a7dbe4899ff7d8562376d803b02481228" compoundref="wallet_8cpp" startline="1623" endline="1636">CWallet::GetUnconfirmedBalance</referencedby>
        <referencedby refid="class_c_wallet_1a639be9d778aeeb8b71aa653f0089cdff" compoundref="wallet_8cpp" startline="1681" endline="1694">CWallet::GetUnconfirmedWatchOnlyBalance</referencedby>
        <referencedby refid="class_c_wallet_1ad165e7a24c95ff9a5816933d7ca23c9b" compoundref="wallet_8cpp" startline="1711" endline="1768">CWallet::AvailableCoins</referencedby>
        <referencedby refid="class_c_wallet_1adf2b4ac337ddb271555985cec82e43e6" compoundref="wallet_8cpp" startline="4459" endline="4497">CWallet::GetAddressBalances</referencedby>
        <referencedby refid="class_c_wallet_tx_1a766d81241f3fb2d6f5a4d6dbbab0ed41" compoundref="wallet_8h" startline="915" endline="957">CWalletTx::GetDenominatedCredit</referencedby>
        <referencedby refid="class_c_wallet_tx_1af2eff3b849af124cdf869fc03f587972" compoundref="wallet_8h" startline="1022" endline="1051">CWalletTx::IsTrusted</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DARKSILK_MAIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DARKSILK_MAIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txmempool_8h" kindref="compound">txmempool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="net_8h" kindref="compound">net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="script_8h" kindref="compound">script.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="streams_8h" kindref="compound">streams.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="txdb_8h" kindref="compound">txdb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chain_8h" kindref="compound">chain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/unordered_map.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_wallet" kindref="compound">CWallet</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MIN_FEE<sp/>=<sp/>0.00001;<sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>Transaction<sp/>Fee<sp/>of<sp/>0.00001<sp/>DRKSLK<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>STORMNODE_COLLATERAL<sp/>=<sp/>10000;<sp/></highlight><highlight class="comment">//Stormnode<sp/>Collateral<sp/>Amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>STORMNODE_PAYMENT_START<sp/>=<sp/>420;<sp/></highlight><highlight class="comment">//<sp/>Block<sp/>420</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TESTNET_STORMNODE_PAYMENT_START<sp/>=<sp/>100;<sp/></highlight><highlight class="comment">//<sp/>Block<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>SANDSTORM_COLLATERAL<sp/>=<sp/>(0.01*COIN);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>SANDSTORM_POOL_MAX<sp/>=<sp/>(9999.99*COIN);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>STATIC_POS_REWARD<sp/>=<sp/>COIN<sp/>*<sp/>0.01;<sp/></highlight><highlight class="comment">//<sp/>Static<sp/>Reward<sp/>of<sp/>0.01<sp/>DRKSLK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_BLOCKS_IN_TRANSIT_PER_PEER<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="40"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BLOCK_DOWNLOAD_TIMEOUT<sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_BLOCK_SIZE_GEN<sp/>=<sp/>MAX_BLOCK_SIZE/2;</highlight></codeline>
<codeline lineno="45"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEFAULT_BLOCK_PRIORITY_SIZE<sp/>=<sp/>50000;</highlight></codeline>
<codeline lineno="47"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_STANDARD_TX_SIZE<sp/>=<sp/>MAX_BLOCK_SIZE_GEN/5;</highlight></codeline>
<codeline lineno="49"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_BLOCK_SIGOPS<sp/>=<sp/>MAX_BLOCK_SIZE/50;</highlight></codeline>
<codeline lineno="51"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_P2SH_SIGOPS<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="53"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_TX_SIGOPS<sp/>=<sp/>MAX_BLOCK_SIGOPS/5;</highlight></codeline>
<codeline lineno="55"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_ORPHAN_TRANSACTIONS<sp/>=<sp/>MAX_BLOCK_SIZE/100;</highlight></codeline>
<codeline lineno="57"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEFAULT_MAX_ORPHAN_BLOCKS<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="59"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_INV_SZ<sp/>=<sp/>50000;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_REJECT_MESSAGE_LENGTH<sp/>=<sp/>111;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LOCKTIME_THRESHOLD<sp/>=<sp/>500000000;<sp/></highlight><highlight class="comment">//<sp/>Tue<sp/>Nov<sp/>5th<sp/>00:53:20<sp/>1985<sp/>UTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>POW_TARGET_SPACING<sp/>=<sp/>1<sp/>*<sp/>60;<sp/></highlight><highlight class="comment">//<sp/>60<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>POS_TARGET_SPACING<sp/>=<sp/>1<sp/>*<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>64<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="struct_block_hasher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_block_hasher" kindref="compound">BlockHasher</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73" refid="struct_block_hasher_1a59f9fb4b764751996c5bc6ff199b4c3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_block_hasher_1a59f9fb4b764751996c5bc6ff199b4c3d" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash.<ref refid="classbase__uint_1abf39b71afc016b333b8996def4c6bc40" kindref="member">GetLow64</ref>();<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="main_8h_1a177351119104ee119066e4838c679f35" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;uint256,<sp/>CBlockIndex*,<sp/>BlockHasher&gt;<sp/><ref refid="main_8h_1a177351119104ee119066e4838c679f35" kindref="member">BlockMap</ref>;<sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Change<sp/>to<sp/>boost::unordered_map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DATABASE_WRITE_INTERVAL<sp/>=<sp/>3600;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>REJECT_MALFORMED<sp/>=<sp/>0x01;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>REJECT_INVALID<sp/>=<sp/>0x10;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>REJECT_OBSOLETE<sp/>=<sp/>0x11;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>REJECT_DUPLICATE<sp/>=<sp/>0x12;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>REJECT_NONSTANDARD<sp/>=<sp/>0x40;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>REJECT_DUST<sp/>=<sp/>0x41;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>REJECT_INSUFFICIENTFEE<sp/>=<sp/>0x42;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>REJECT_CHECKPOINT<sp/>=<sp/>0x43;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/><ref refid="main_8h_1a5ed86cbbedb72d8fcec0524f2792ada8" kindref="member">COINBASE_FLAGS</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="main_8h_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref><sp/><ref refid="main_8h_1abc71256f703e47c9254093e32ed2994c" kindref="member">mempool</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::map&lt;uint256,<sp/>CBlockIndex*&gt;<sp/><ref refid="main_8h_1a9d5aa0c4581116d898ff51357a0df059" kindref="member">mapBlockIndex</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::set&lt;std::pair&lt;COutPoint,<sp/>unsigned<sp/>int&gt;<sp/>&gt;<sp/><ref refid="main_8h_1a261df4d886c6149afe291ecfbed2ae89" kindref="member">setStakeSeen</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/><ref refid="main_8h_1a1e7c54b8b26730f52b5527163fc33d8f" kindref="member">pindexGenesisBlock</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a6d3cd49df21f4264ed1489ea304dbcb8" kindref="member">nStakeMinConfirmations</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a621f4f63be83358641eb78f48d2f49c2" kindref="member">nStakeMinAge</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1afdd10e8c0a44aad0b719c365fa3bb458" kindref="member">nNodeLifespan</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1adfd36b02172030cdbf7ac69c2ccb7711" kindref="member">nCoinbaseMaturity</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="main_8h_1a63af124faf22e03fd629e8aa21c40eae" kindref="member">nBestChainTrust</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="main_8h_1a27c4c119ca2e7250221de8c17bee0999" kindref="member">nBestInvalidTrust</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="main_8h_1ace9c3343567f488a96598abe61e1d309" kindref="member">hashBestChain</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/><ref refid="main_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="main_8h_1a31f8b0d3c96670151ba997019820e0f4" kindref="member">nLastBlockTx</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="main_8h_1af8945f7f19ea7e938baab1bd4c226c2f" kindref="member">nLastBlockSize</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="main_8h_1a544c4ab48afad09d2f474d0720570e94" kindref="member">nLastCoinStakeSearchInterval</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="main_8h_1a2874c632b3b462164de12be5abcd9d43" kindref="member">strMessageMagic</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="main_8h_1ab319f7e88eb0d2d3b9f9f98bea0f9896" kindref="member">nTimeBestReceived</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aaf87d0dd26c4a7c9bcc5bdd1127e8637" kindref="member">fImporting</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a8e0eca589b2d4254a65f04c5d91888b2" kindref="member">fReindex</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_orphan_block" kindref="compound">COrphanBlock</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::map&lt;uint256,<sp/>COrphanBlock*&gt;<sp/><ref refid="main_8h_1a724dfa85b047474da511687460625e48" kindref="member">mapOrphanBlocks</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a6b569217f0bbb0a69a42c8769df06a06" kindref="member">fTxIndex</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a08b980f03b2fb15445e0ddc8bb4b3d73" kindref="member">nCoinCacheSize</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1ad316d89326f17948a58ad3cdf23850a5" kindref="member">fUseFastIndex</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a3e3a4daba510b75f09387695c6c8a11f" kindref="member">nDerivationMethodIndex</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1ad32c5d94e1b12cb49fc73deca3f3068f" kindref="member">fMinimizeCoinAge</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1ae3377c351f05649e07963776ba3a0499" kindref="member">fLargeWorkForkFound</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa8ed8d08421c7cdfb3acb22e585468fd" kindref="member">fLargeWorkInvalidChainFound</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::map&lt;uint256,<sp/>int64_t&gt;<sp/><ref refid="main_8h_1a8373143ee9b34c558cad14139d331ecc" kindref="member">mapRejectedBlocks</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_fee_rate" kindref="compound">CFeeRate</ref><sp/><ref refid="main_8h_1a5925a10baeee7d4bdce1982bdcbd3bd0" kindref="member">minRelayTxFee</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>disk<sp/>space<sp/>required<sp/>-<sp/>used<sp/>in<sp/>CheckDiskSpace()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nMinDiskSpace<sp/>=<sp/>52428800;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_wallet_interface" kindref="compound">CWalletInterface</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_c_node_state_stats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_node_state_stats" kindref="compound">CNodeStateStats</ref><sp/>{</highlight></codeline>
<codeline lineno="138" refid="struct_c_node_state_stats_1a62c2243d09166c1daaad84519700da3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_c_node_state_stats_1a62c2243d09166c1daaad84519700da3c" kindref="member">nMisbehavior</ref>;</highlight></codeline>
<codeline lineno="139" refid="struct_c_node_state_stats_1a7646deac801098e973a5bc50202f92cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_c_node_state_stats_1a7646deac801098e973a5bc50202f92cd" kindref="member">nSyncHeight</ref>;</highlight></codeline>
<codeline lineno="140" refid="struct_c_node_state_stats_1a67c910a57285a63bbf0bb88ea7a9ca05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_c_node_state_stats_1a67c910a57285a63bbf0bb88ea7a9ca05" kindref="member">nCommonHeight</ref>;</highlight></codeline>
<codeline lineno="141" refid="struct_c_node_state_stats_1a4b03fd8ecaa9268f7eca836e5e79c35a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="struct_c_node_state_stats_1a4b03fd8ecaa9268f7eca836e5e79c35a" kindref="member">vHeightInFlight</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1af0793c7c14e94d2d642f4ac89067a429" kindref="member">GetNodeStateStats</ref>(<ref refid="net_8h_1a954d746a58632565552615fd0a4ee660" kindref="member">NodeId</ref><sp/>nodeid,<sp/><ref refid="struct_c_node_state_stats" kindref="compound">CNodeStateStats</ref><sp/>&amp;<ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa6b7f220759fb53f10c65654bbf61317" kindref="member">RegisterWallet</ref>(<ref refid="class_c_wallet_interface" kindref="compound">CWalletInterface</ref>*<sp/>pwalletIn);</highlight></codeline>
<codeline lineno="150"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa60561b6923955deeaad6fdab74a3aee" kindref="member">UnregisterWallet</ref>(<ref refid="class_c_wallet_interface" kindref="compound">CWalletInterface</ref>*<sp/>pwalletIn);</highlight></codeline>
<codeline lineno="152"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1ad0b02f9e3ff8997319581ce5021d4244" kindref="member">UnregisterAllWallets</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a0829b07a2144791d1d6cb18c279fb3a4" kindref="member">SyncWithWallets</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fConnect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa8d5c228e24266e3dca5858adae31800" kindref="member">ResendWalletTransactions</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fForce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1ab02615ff65f91d69f8d786ec900baa8a" kindref="member">RegisterNodeSignals</ref>(<ref refid="struct_c_node_signals" kindref="compound">CNodeSignals</ref>&amp;<sp/>nodeSignals);</highlight></codeline>
<codeline lineno="161"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a3ef0cc6e9d9d6435ee2a5569244d6ebd" kindref="member">UnregisterNodeSignals</ref>(<ref refid="struct_c_node_signals" kindref="compound">CNodeSignals</ref>&amp;<sp/>nodeSignals);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a28098619373dbab927d25bca3cea8a4a" kindref="member">PushGetBlocks</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexBegin,<sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashEnd);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" kindref="member">ProcessBlock</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a6df609da0bad1550cbb2cdc781ad2904" kindref="member">CheckDiskSpace</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nAdditionalBytes=0);</highlight></codeline>
<codeline lineno="168"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1ac98b87e479f71b7be2b990a10c4ebc2d" kindref="member">UnloadBlockIndex</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a367f303d34b8a5501ac4d77bebab578c" kindref="member">LoadBlockIndex</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAllowNew=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a92e5e1fcbd56cc44c27d39b64da8a79a" kindref="member">InitBlockIndex</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" kindref="member">PrintBlockTree</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a196f9318f02448b85b28d612698934fd" kindref="member">ProcessMessages</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" kindref="member">SendMessages</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pto,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fSendTrickle);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a0189c34248cd89bbbe20d4d6045bd7c9" kindref="member">ThreadImport</ref>(std::vector&lt;boost::filesystem::path&gt;<sp/>vImportFiles);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a20a76dbc6ac5b8a6e0aaef85522b1069" kindref="member">CheckProofOfWork</ref>(<ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a868a58404bd61b6a82901f428d152bae" kindref="member">GetNextTargetRequired</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexLast,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fProofOfStake);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="main_8h_1a54eeb686375f66683fb139de496c088d" kindref="member">GetProofOfWorkReward</ref>(<ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFees);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a22e712bbf635a69ba8dd7ae004d2697b" kindref="member">IsConfirmedInNPrevBlocks</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref>&amp;<sp/>txindex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexFrom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaxDepth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nActualDepth);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">std::string<sp/><ref refid="main_8h_1a30cf1d6270f9040fc151d03b98027ab5" kindref="member">GetWarnings</ref>(std::string<sp/>strFor);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a7d2a4633e4e0e8e4cb9c881d45a496b5" kindref="member">GetTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx,<sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hashBlock);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="main_8h_1abdef12ddcc1e6b127c59fab552a9b81b" kindref="member">WantedByOrphan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_orphan_block" kindref="compound">COrphanBlock</ref>*<sp/>pblockOrphan);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/><ref refid="main_8h_1a67a2382a391340c12c45961f3b8c66e8" kindref="member">GetLastBlockIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindex,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fProofOfStake);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a31faece5ef0e403969b3d3debd79b352" kindref="member">ThreadStakeMiner</ref>(<ref refid="class_c_wallet" kindref="compound">CWallet</ref><sp/>*pwallet);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="comment">//bool<sp/>AcceptToMemoryPool(CTxMemPool&amp;<sp/>pool,<sp/>CTransaction<sp/>&amp;tx,<sp/>bool<sp/>fLimitFree,<sp/>bool*<sp/>pfMissingInputs,<sp/>bool<sp/>fRejectInsaneFee=false,<sp/>bool<sp/>isSSTX=false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" kindref="member">AcceptToMemoryPool</ref>(<ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref>&amp;<sp/>pool,<sp/><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/>&amp;<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fLimitFree,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>pfMissingInputs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignoreFees<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a4d2373d0ce79227c95358116aae667f3" kindref="member">AcceptableInputs</ref>(<ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref>&amp;<sp/>pool,<sp/><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/>&amp;<ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>,<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fLimitFree,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>pfMissingInputs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fRejectInsaneFee=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSSTX=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="main_8h_1afe042769eafbfbf4e82dffe357798748" kindref="member">GetBlockValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref>&amp;<sp/>nFees);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aca9eb09c80679cf7c85926f83c353075" kindref="member">FindTransactionsByDestination</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>&amp;dest,<sp/>std::vector&lt;uint256&gt;<sp/>&amp;vtxhash);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1ae137d76bbcaf8d65fab905889b504e26" kindref="member">GetInputAge</ref>(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>vin);</highlight></codeline>
<codeline lineno="202"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1af573b79d097a9ffe6503869f838ccf42" kindref="member">AbortNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;userMessage=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a4b04650c6aa3e5b02921ba992658d647" kindref="member">Misbehaving</ref>(<ref refid="net_8h_1a954d746a58632565552615fd0a4ee660" kindref="member">NodeId</ref><sp/>nodeid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>howmuch);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="main_8h_1ab9c19a2d094fea9bd9f285f4b33961a4" kindref="member">GetStormnodePayment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>blockValue);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a5c7b9ac7929375148311307df7e446d0" kindref="member">GetInputAgeIX</ref>(<ref refid="classuint256" kindref="compound">uint256</ref><sp/>nTXHash,<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>vin);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1afb9aef5806c13c7a81fda9854f852155" kindref="member">GetIXConfirmations</ref>(<ref refid="classuint256" kindref="compound">uint256</ref><sp/>nTXHash);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1af2b1f603b58c5364716253a0711f0e91" kindref="member">DisconnectBlocksAndReprocess</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocks);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>static<sp/>FlushBlockFile(bool<sp/>fFinalize<sp/>=<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a0d01c135cc5a05475e3dc3910c9888da" kindref="member">FlushStateToDisk</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">boost::filesystem::path<sp/><ref refid="main_8h_1a2f26f074aac584c3398de1dcdac59de9" kindref="member">GetBlockPosFilename</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_disk_block_pos" kindref="compound">CDiskBlockPos</ref><sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prefix);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">FILE*<sp/><ref refid="main_8h_1a4728972adc7d389a00a7f7333b74b71d" kindref="member">OpenBlockFile</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFile,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockPos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszMode);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">FILE*<sp/><ref refid="main_8h_1a4728972adc7d389a00a7f7333b74b71d" kindref="member">OpenBlockFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_disk_block_pos" kindref="compound">CDiskBlockPos</ref><sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fReadOnly<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Is<sp/>is<sp/>okay<sp/>to<sp/>use<sp/>without<sp/>nFile?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">FILE*<sp/><ref refid="main_8h_1aadc60201fa05120c42011c2ca853ad15" kindref="member">OpenDiskFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_disk_block_pos" kindref="compound">CDiskBlockPos</ref><sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prefix,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fReadOnly<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">FILE*<sp/><ref refid="main_8h_1a62302a7b63a33b410581fccd0152df1e" kindref="member">AppendBlockFile</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nFileRet);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">FILE*<sp/><ref refid="main_8h_1addac9f89d64c9e26d36d1481da35877e" kindref="member">OpenUndoFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_disk_block_pos" kindref="compound">CDiskBlockPos</ref><sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fReadOnly<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_c_disk_tx_pos" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_disk_tx_pos" kindref="compound">CDiskTxPos</ref></highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228" refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" kindref="member">nFile</ref>;</highlight></codeline>
<codeline lineno="229" refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" kindref="member">nBlockPos</ref>;</highlight></codeline>
<codeline lineno="230" refid="class_c_disk_tx_pos_1ad86f9cef782e44a0e5bfe1fae9ed6593" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos_1ad86f9cef782e44a0e5bfe1fae9ed6593" kindref="member">nTxPos</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_c_disk_tx_pos_1a2026598d28ffcadfd40452f702bcac46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_disk_tx_pos_1a2026598d28ffcadfd40452f702bcac46" kindref="member">CDiskTxPos</ref>()</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_disk_tx_pos_1a22eb47d077f9c355373772eb42853fcf" kindref="member">SetNull</ref>();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="class_c_disk_tx_pos_1a2cf11e1b0c8154be066b2d58caddb468" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_disk_tx_pos_1a2cf11e1b0c8154be066b2d58caddb468" kindref="member">CDiskTxPos</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFileIn,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockPosIn,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTxPosIn)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFile<sp/>=<sp/>nFileIn;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlockPos<sp/>=<sp/>nBlockPosIn;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTxPos<sp/>=<sp/>nTxPosIn;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="class_c_disk_tx_pos_1a2990c083fbbd0fb5f5aa4115e540cd21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_disk_tx_pos_1a2990c083fbbd0fb5f5aa4115e540cd21" kindref="member">ADD_SERIALIZE_METHODS</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Operation&gt;</highlight></codeline>
<codeline lineno="247" refid="class_c_disk_tx_pos_1a1a68f1de894f0791a7ad64e3e6ea6fd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos_1a1a68f1de894f0791a7ad64e3e6ea6fd6" kindref="member">SerializationOp</ref>(Stream&amp;<sp/>s,<sp/>Operation<sp/>ser_action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(<ref refid="serialize_8h_1a9393dd1b6a30ae7fe9cc42240241f741" kindref="member">FLATDATA</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="class_c_disk_tx_pos_1a22eb47d077f9c355373772eb42853fcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos_1a22eb47d077f9c355373772eb42853fcf" kindref="member">SetNull</ref>()<sp/>{<sp/>nFile<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>-1;<sp/>nBlockPos<sp/>=<sp/>0;<sp/>nTxPos<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="252" refid="class_c_disk_tx_pos_1ae4bdd4eba8a9712dba1b4216559f11df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos_1ae4bdd4eba8a9712dba1b4216559f11df" kindref="member">IsNull</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nFile<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-1);<sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class_c_disk_tx_pos_1aaa8e3a794737568b5413aa5f9ec00f31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos_1aaa8e3a794737568b5413aa5f9ec00f31" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos" kindref="compound">CDiskTxPos</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos" kindref="compound">CDiskTxPos</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a.<ref refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" kindref="member">nFile</ref><sp/><sp/><sp/><sp/><sp/>==<sp/>b.<ref refid="class_c_disk_tx_pos_1a07198e7b96d4c60ece4d895abbd46104" kindref="member">nFile</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.<ref refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" kindref="member">nBlockPos</ref><sp/>==<sp/>b.<ref refid="class_c_disk_tx_pos_1ae9b3c262149c035be43010cbf7d1423b" kindref="member">nBlockPos</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.<ref refid="class_c_disk_tx_pos_1ad86f9cef782e44a0e5bfe1fae9ed6593" kindref="member">nTxPos</ref><sp/><sp/><sp/><sp/>==<sp/>b.<ref refid="class_c_disk_tx_pos_1ad86f9cef782e44a0e5bfe1fae9ed6593" kindref="member">nTxPos</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="class_c_disk_tx_pos_1a26e1b04941232ed2c09a79d65acd538f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos_1a26e1b04941232ed2c09a79d65acd538f" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos" kindref="compound">CDiskTxPos</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos" kindref="compound">CDiskTxPos</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(a<sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="class_c_disk_tx_pos_1ada1de4b95f6be78bd290c28bcb8628a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_disk_tx_pos_1ada1de4b95f6be78bd290c28bcb8628a5" kindref="member">ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="268"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_disk_tx_pos_1ae4bdd4eba8a9712dba1b4216559f11df" kindref="member">IsNull</ref>())</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;(nFile=%u,<sp/>nBlockPos=%u,<sp/>nTxPos=%u)&quot;</highlight><highlight class="normal">,<sp/>nFile,<sp/>nBlockPos,<sp/>nTxPos);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal">};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7" kindref="member">GetMinFee_mode</ref></highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278" refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a5a34bbfddb9219ca72f89780fcaafb3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a5a34bbfddb9219ca72f89780fcaafb3d" kindref="member">GMF_BLOCK</ref>,</highlight></codeline>
<codeline lineno="279" refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a79d7494c7b44dac59ff3143ac440e2f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a79d7494c7b44dac59ff3143ac440e2f5" kindref="member">GMF_RELAY</ref>,</highlight></codeline>
<codeline lineno="280" refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a146093898dd622fd76ca7ded2b6933ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7a146093898dd622fd76ca7ded2b6933ef" kindref="member">GMF_SEND</ref>,</highlight></codeline>
<codeline lineno="281"><highlight class="normal">};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;uint256,<sp/>std::pair&lt;CTxIndex,<sp/>CTransaction&gt;<sp/>&gt;<sp/><ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="main_8h_1a67d4c24facb2a0d89f92065581c486df" kindref="member">GetMinFee</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAllowFree,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a8c24d39fc07a60d3c019618a73cc15a7" kindref="member">GetMinFee_mode</ref><sp/>mode);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_c_transaction_po_s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_transaction_po_s" kindref="compound">CTransactionPoS</ref></highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290" refid="class_c_transaction_po_s_1ae34ce39804c212f9db35316f1792a0c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1ae34ce39804c212f9db35316f1792a0c2" kindref="member">CURRENT_VERSION</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="291" refid="class_c_transaction_po_s_1ae7bcf394bd58ec57e762934da2f13d52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1ae7bcf394bd58ec57e762934da2f13d52" kindref="member">nVersion</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="class_c_transaction_po_s_1a62c7444fc534ca35869017157ed508f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_po_s_1a62c7444fc534ca35869017157ed508f0" kindref="member">CTransactionPoS</ref>(){<sp/>nVersion<sp/>=<sp/><ref refid="class_c_transaction_po_s_1ae34ce39804c212f9db35316f1792a0c2" kindref="member">CURRENT_VERSION</ref>;<sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="class_c_transaction_po_s_1af4a5ad634f661478e69ac1fbbde4c739" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction_po_s_1af4a5ad634f661478e69ac1fbbde4c739" kindref="member">ADD_SERIALIZE_METHODS</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Operation&gt;</highlight></codeline>
<codeline lineno="298" refid="class_c_transaction_po_s_1a869ab87a63c21805ddff3cdec279817f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a869ab87a63c21805ddff3cdec279817f" kindref="member">SerializationOp</ref>(Stream&amp;<sp/>s,<sp/>Operation<sp/>ser_action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(this-&gt;nVersion);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nVersion<sp/>=<sp/>this-&gt;<ref refid="class_c_transaction_po_s_1ae7bcf394bd58ec57e762934da2f13d52" kindref="member">nVersion</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_transaction_po_s_1ad85303c69a61f41eb8874f07c15faa10" kindref="member">GetValueOut</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@param[in]<sp/>mapInputs<sp/><sp/><sp/><sp/>Map<sp/>of<sp/>previous<sp/>transactions<sp/>that<sp/>have<sp/>outputs<sp/>we&apos;re<sp/>spending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@return<sp/>Sum<sp/>of<sp/>value<sp/>of<sp/>all<sp/>inputs<sp/>(scriptSigs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@see<sp/>CTransaction::FetchInputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/><ref refid="class_c_transaction_po_s_1ac2c734d9f302dda6e8681ce6d0f7843e" kindref="member">GetValueIn</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref>&amp;<sp/>mapInputs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" kindref="member">ReadFromDisk</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="class_c_disk_tx_pos" kindref="compound">CDiskTxPos</ref><sp/>pos,<sp/>FILE**<sp/>pfileRet=NULL);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" kindref="member">ReadFromDisk</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref>&amp;<sp/>txindexRet);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" kindref="member">ReadFromDisk</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>,<sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>prevout,<sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref>&amp;<sp/>txindexRet);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" kindref="member">ReadFromDisk</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>,<sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>prevout);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a7c71229336405cae52bd3e9a547f1266" kindref="member">ReadFromDisk</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="class_c_out_point" kindref="compound">COutPoint</ref><sp/>prevout);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a7bdd6909103ec8da895172cf7dfe6a0a" kindref="member">DisconnectInputs</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>@param[in]<sp/>txdb<sp/><sp/><sp/><sp/>Transaction<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>@param[in]<sp/>mapTestPool<sp/>List<sp/>of<sp/>pending<sp/>changes<sp/>to<sp/>the<sp/>transaction<sp/>index<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>@param[in]<sp/>fBlock<sp/><sp/>True<sp/>if<sp/>being<sp/>called<sp/>to<sp/>add<sp/>a<sp/>new<sp/>best-block<sp/>to<sp/>the<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>@param[in]<sp/>fMiner<sp/><sp/>True<sp/>if<sp/>being<sp/>called<sp/>by<sp/>CreateNewBlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>@param[out]<sp/>inputsRet<sp/><sp/>Pointers<sp/>to<sp/>this<sp/>transaction&apos;s<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>@param[out]<sp/>fInvalid<sp/><sp/><sp/>returns<sp/>true<sp/>if<sp/>transaction<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>@return<sp/><sp/><sp/><sp/>Returns<sp/>true<sp/>if<sp/>all<sp/>inputs<sp/>are<sp/>in<sp/>txdb<sp/>or<sp/>mapTestPool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a20a028e06f505f03a0d30a7f186d9489" kindref="member">FetchInputs</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;uint256,<sp/>CTxIndex&gt;&amp;<sp/>mapTestPool,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fBlock,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fMiner,<sp/><ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref>&amp;<sp/>inputsRet,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>fInvalid);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@param[in]<sp/>inputs<sp/><sp/><sp/>Previous<sp/>transactions<sp/>(from<sp/>FetchInputs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@param[out]<sp/>mapTestPool<sp/>Keeps<sp/>track<sp/>of<sp/>inputs<sp/>that<sp/>need<sp/>to<sp/>be<sp/>updated<sp/>on<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@param[in]<sp/>posThisTx<sp/><sp/><sp/><sp/>Position<sp/>of<sp/>this<sp/>transaction<sp/>on<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@param[in]<sp/>pindexBlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@param[in]<sp/>fBlock<sp/><sp/><sp/>true<sp/>if<sp/>called<sp/>from<sp/>ConnectBlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@param[in]<sp/>fMiner<sp/><sp/><sp/>true<sp/>if<sp/>called<sp/>from<sp/>CreateNewBlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@return<sp/>Returns<sp/>true<sp/>if<sp/>all<sp/>checks<sp/>succeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a19de7fad0cc156ebd4e5a3858db7619f" kindref="member">ConnectInputs</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>,<sp/><ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref><sp/>inputs,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CTxIndex&gt;&amp;<sp/>mapTestPool,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos" kindref="compound">CDiskTxPos</ref>&amp;<sp/>posThisTx,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexBlock,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fBlock,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fMiner,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>=<sp/>STANDARD_SCRIPT_VERIFY_FLAGS,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fValidateSig<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_po_s_1a01394e5903281916f1cb683f8442fcac" kindref="member">GetCoinAge</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/><ref refid="class_c_tx_d_b" kindref="compound">CTxDB</ref>&amp;<sp/><ref refid="txdb-leveldb_8cpp_1a72eff8ae1d84de13daf97a61b8c02bc6" kindref="member">txdb</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>&amp;<sp/>nCoinAge)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/><ref refid="class_c_transaction_po_s_1aa49ca4acc89b51cbef362200175051b4" kindref="member">GetOutputFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref>&amp;<sp/>inputs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a29901e539b487e09c90ff90c7560bd9d" kindref="member">AreInputsStandard</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref>&amp;<sp/>mapInputs);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1ad2eaf4f8542c12ea9ee1183609cc6d1a" kindref="member">GetLegacySigOpCount</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8h_1acc0a05d60127f0cfcf778348670067e0" kindref="member">GetP2SHSigOpCount</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a05bae354566c88f7dca5ad13aaf8b30f" kindref="member">MapPrevTx</ref>&amp;<sp/>mapInputs);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1a74832d5d658916e73adb139fd60e2354" kindref="member">IsStandardTx</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>tx,<sp/>std::string&amp;<sp/>reason);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa7ca31ac11bff224c6b0ac27fccce7b5" kindref="member">IsFinalTx</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight<sp/>=<sp/>0,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nBlockTime<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="class_c_merkle_tx" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_merkle_tx" kindref="compound">CMerkleTx</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref></highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetDepthInMainChainINTERNAL(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>&amp;pindexRet)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="385" refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="class_c_merkle_tx_1a788ee54c14b6d9706eb3737404663238" kindref="member">hashBlock</ref>;</highlight></codeline>
<codeline lineno="386" refid="class_c_merkle_tx_1a9ae6a408be914f486ebbb4161879ee69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint256&gt;<sp/><ref refid="class_c_merkle_tx_1a9ae6a408be914f486ebbb4161879ee69" kindref="member">vMerkleBranch</ref>;</highlight></codeline>
<codeline lineno="387" refid="class_c_merkle_tx_1a829655e70702fdf97b6e534dd3227b0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1a829655e70702fdf97b6e534dd3227b0b" kindref="member">nIndex</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memory<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="class_c_merkle_tx_1a3626572f7dbb86eb1c36a6570d740c7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1a3626572f7dbb86eb1c36a6570d740c7f" kindref="member">fMerkleVerified</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="class_c_merkle_tx_1a381bb26e9a8924b8a1311d45dfd18809" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_merkle_tx_1a381bb26e9a8924b8a1311d45dfd18809" kindref="member">CMerkleTx</ref>()</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_merkle_tx_1ac57628e321f98642976d06b6cc231162" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="class_c_merkle_tx_1aaf4aeddb032c6bb34559fa443bfc3476" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_merkle_tx_1aaf4aeddb032c6bb34559fa443bfc3476" kindref="member">CMerkleTx</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txIn)<sp/>:<sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>(txIn)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_merkle_tx_1ac57628e321f98642976d06b6cc231162" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="class_c_merkle_tx_1ac57628e321f98642976d06b6cc231162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1ac57628e321f98642976d06b6cc231162" kindref="member">Init</ref>()</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashBlock<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMerkleVerified<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="class_c_merkle_tx_1a86d607a3e47700ed5ebcdd4d4fcda4d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_merkle_tx_1a86d607a3e47700ed5ebcdd4d4fcda4d7" kindref="member">ADD_SERIALIZE_METHODS</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Operation&gt;</highlight></codeline>
<codeline lineno="413" refid="class_c_merkle_tx_1afefd3a26c9505f1fa81587c19c22f09c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1afefd3a26c9505f1fa81587c19c22f09c" kindref="member">SerializationOp</ref>(Stream&amp;<sp/>s,<sp/>Operation<sp/>ser_action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction_1a6c29bdd822859c7b21b7b6c22dca6825" kindref="member">nVersion</ref>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Review<sp/>translation<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nSerSize<sp/>+=<sp/>SerReadWrite(s,<sp/>*(CTransaction*)this,<sp/>nType,<sp/>nVersion,<sp/>ser_action);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(*(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nVersion<sp/>=<sp/>this-&gt;<ref refid="class_c_transaction_1a6c29bdd822859c7b21b7b6c22dca6825" kindref="member">nVersion</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(hashBlock);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(vMerkleBranch);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(nIndex);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1a7286c83e09ddaebc6bba39ee38a5a012" kindref="member">SetMerkleBranch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>*<sp/>pblock=NULL);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>depth<sp/>of<sp/>transaction<sp/>in<sp/>blockchain:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1<sp/><sp/>:<sp/>not<sp/>in<sp/>blockchain,<sp/>and<sp/>not<sp/>in<sp/>memory<sp/>pool<sp/>(conflicted<sp/>transaction)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>0<sp/><sp/>:<sp/>in<sp/>memory<sp/>pool,<sp/>waiting<sp/>to<sp/>be<sp/>included<sp/>in<sp/>a<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;=1<sp/>:<sp/>this<sp/>many<sp/>blocks<sp/>deep<sp/>in<sp/>the<sp/>main<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1a4208943ef656d3787c02ef9973d63f4a" kindref="member">GetDepthInMainChain</ref>(<ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>&amp;pindexRet,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enableIX=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430" refid="class_c_merkle_tx_1aa26936095eff1cc6d01b7e2d44cbf8f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1aa26936095eff1cc6d01b7e2d44cbf8f6" kindref="member">GetDepthInMainChain</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enableIX=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref><sp/>*pindexRet;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1aa26936095eff1cc6d01b7e2d44cbf8f6" kindref="member">GetDepthInMainChain</ref>(pindexRet,<sp/>enableIX);<sp/>}</highlight></codeline>
<codeline lineno="431" refid="class_c_merkle_tx_1adf24748ee829f589ac8d6e99ec6121de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1adf24748ee829f589ac8d6e99ec6121de" kindref="member">IsInMainChain</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref><sp/>*pindexRet;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetDepthInMainChainINTERNAL(pindexRet)<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1a8bd25cf06de6a443d0925ec8ba66c949" kindref="member">GetBlocksToMaturity</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1a61126e811a53b941b3efdf5a4e83db90" kindref="member">AcceptToMemoryPool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fLimitFree=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fRejectInsaneFee=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignoreFees=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1a6782c78aec9fd63e637dbf0668c8506e" kindref="member">GetTransactionLockSignatures</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_merkle_tx_1a31b0765b267cab5f76b308d1fe5d9375" kindref="member">IsTransactionLockTimedOut</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal">};</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_c_tx_index" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref></highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="446" refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_disk_tx_pos" kindref="compound">CDiskTxPos</ref><sp/><ref refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="447" refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CDiskTxPos&gt;<sp/><ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="class_c_tx_index_1a08f6b57bc2852af37dd5a13b9d5877cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_index_1a08f6b57bc2852af37dd5a13b9d5877cc" kindref="member">CTxIndex</ref>()</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_tx_index_1a379327d4654c726dea38486f1c1f800d" kindref="member">SetNull</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_c_tx_index_1ad01109597d73bef7ea576d1e1613415f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_index_1ad01109597d73bef7ea576d1e1613415f" kindref="member">CTxIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_disk_tx_pos" kindref="compound">CDiskTxPos</ref>&amp;<sp/>posIn,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nOutputs)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>posIn;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSpent.resize(nOutputs);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_c_tx_index_1a1bafe447bd4fcead6588a984167a7c36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_index_1a1bafe447bd4fcead6588a984167a7c36" kindref="member">ADD_SERIALIZE_METHODS</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Operation&gt;</highlight></codeline>
<codeline lineno="463" refid="class_c_tx_index_1a8d7003336ce67c83268dac7dcae14199" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index_1a8d7003336ce67c83268dac7dcae14199" kindref="member">SerializationOp</ref>(Stream&amp;<sp/>s,<sp/>Operation<sp/>ser_action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(nType<sp/>&amp;<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>))</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(nVersion);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(pos);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(vSpent);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="class_c_tx_index_1a379327d4654c726dea38486f1c1f800d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index_1a379327d4654c726dea38486f1c1f800d" kindref="member">SetNull</ref>()</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.<ref refid="class_c_disk_tx_pos_1a22eb47d077f9c355373772eb42853fcf" kindref="member">SetNull</ref>();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSpent.clear();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="class_c_tx_index_1a27f2d2e6bc1fad724bd5bff9eeb694fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index_1a27f2d2e6bc1fad724bd5bff9eeb694fc" kindref="member">IsNull</ref>()</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos.<ref refid="class_c_disk_tx_pos_1ae4bdd4eba8a9712dba1b4216559f11df" kindref="member">IsNull</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="class_c_tx_index_1acad959e5335e3527d1d94d7da3d5725d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index_1acad959e5335e3527d1d94d7da3d5725d" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a.<ref refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" kindref="member">pos</ref><sp/><sp/><sp/><sp/>==<sp/>b.<ref refid="class_c_tx_index_1ac68a69ed4335b3f50b954c71ec0a9c32" kindref="member">pos</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref><sp/>==<sp/>b.<ref refid="class_c_tx_index_1a88317d56c02acd1faec4863bcb293d2c" kindref="member">vSpent</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="class_c_tx_index_1a959f40582946a134bc75e7b3092419eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index_1a959f40582946a134bc75e7b3092419eb" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index" kindref="compound">CTxIndex</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(a<sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_index_1ab6119cf086e8e4b2c690f36c15479220" kindref="member">GetDepthInMainChain</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">};</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="class_c_validation_state" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>mode_state<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MODE_VALID,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MODE_INVALID,<sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MODE_ERROR,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>mode;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDoS;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strRejectReason;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chRejectCode;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>corruptionPossible;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="508" refid="class_c_validation_state_1a4c89cdea0b8e6983baa531bc756d8584" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_validation_state_1a4c89cdea0b8e6983baa531bc756d8584" kindref="member">CValidationState</ref>()<sp/>:<sp/>mode(MODE_VALID),<sp/>nDoS(0),<sp/>chRejectCode(0),<sp/>corruptionPossible(false)<sp/>{}</highlight></codeline>
<codeline lineno="509" refid="class_c_validation_state_1a3c6786d00da8d1c5df25b4c3876409e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1a3c6786d00da8d1c5df25b4c3876409e8" kindref="member">DoS</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chRejectCodeIn=0,<sp/>std::string<sp/>strRejectReasonIn=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>corruptionIn=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chRejectCode<sp/>=<sp/>chRejectCodeIn;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strRejectReason<sp/>=<sp/>strRejectReasonIn;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corruptionPossible<sp/>=<sp/>corruptionIn;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>MODE_ERROR)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDoS<sp/>+=<sp/>level;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>MODE_INVALID;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521" refid="class_c_validation_state_1a88ff08b67f7f44bb3c7f7053bb1ee6fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1a88ff08b67f7f44bb3c7f7053bb1ee6fc" kindref="member">Invalid</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>_chRejectCode=0,<sp/>std::string<sp/>_strRejectReason=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1a3c6786d00da8d1c5df25b4c3876409e8" kindref="member">DoS</ref>(0,<sp/>ret,<sp/>_chRejectCode,<sp/>_strRejectReason);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525" refid="class_c_validation_state_1abf67ad56f62df5679d47c289684c554c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1abf67ad56f62df5679d47c289684c554c" kindref="member">Error</ref>(std::string<sp/>strRejectReasonIn=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>MODE_VALID)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strRejectReason<sp/>=<sp/>strRejectReasonIn;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>MODE_ERROR;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531" refid="class_c_validation_state_1a6788cb521cf538ac80413a1c6c3da5e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1a6788cb521cf538ac80413a1c6c3da5e8" kindref="member">Abort</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1af573b79d097a9ffe6503869f838ccf42" kindref="member">AbortNode</ref>(msg);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1abf67ad56f62df5679d47c289684c554c" kindref="member">Error</ref>(msg);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535" refid="class_c_validation_state_1af4c51946b39b2234b8004d58fbc164a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1af4c51946b39b2234b8004d58fbc164a5" kindref="member">IsValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/>MODE_VALID;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538" refid="class_c_validation_state_1aba47277dbc39192208515fd8cc685879" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1aba47277dbc39192208515fd8cc685879" kindref="member">IsInvalid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/>MODE_INVALID;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541" refid="class_c_validation_state_1a8c608ada2395e5af099661ff353dbb3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1a8c608ada2395e5af099661ff353dbb3f" kindref="member">IsError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/>MODE_ERROR;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544" refid="class_c_validation_state_1aba30a9e05436871a43e6acfb8e484963" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1aba30a9e05436871a43e6acfb8e484963" kindref="member">IsInvalid</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;nDoSOut)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_validation_state_1aba47277dbc39192208515fd8cc685879" kindref="member">IsInvalid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDoSOut<sp/>=<sp/>nDoS;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551" refid="class_c_validation_state_1a5b09f68e838c43ef20af29e725920a01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1a5b09f68e838c43ef20af29e725920a01" kindref="member">CorruptionPossible</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>corruptionPossible;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554" refid="class_c_validation_state_1a8bbd27130d1810d60735e1df5e4ea69b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_c_validation_state_1a8bbd27130d1810d60735e1df5e4ea69b" kindref="member">GetRejectCode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chRejectCode;<sp/>}</highlight></codeline>
<codeline lineno="555" refid="class_c_validation_state_1a2e7ea577adfdf90aaff44ad0fa16adde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_validation_state_1a2e7ea577adfdf90aaff44ad0fa16adde" kindref="member">GetRejectReason</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strRejectReason;<sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">};</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="class_c_wallet_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_wallet_interface" kindref="compound">CWalletInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_interface_1a7bde8e284f9405dd858c9b4cbf960ae5" kindref="member">SyncTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>&amp;tx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref><sp/>*pblock,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fConnect)<sp/>=0;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_interface_1a209e0de8725bab3274e7d79567cca630" kindref="member">EraseFromWallet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>)<sp/>=0;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_interface_1ac9c87a58906081f6629f3f82439dad8e" kindref="member">SetBestChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_locator" kindref="compound">CBlockLocator</ref><sp/>&amp;locator)<sp/>=0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_interface_1a07b55d9aede02e25a5e8d8027c67954f" kindref="member">UpdatedTransaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hash)<sp/>=0;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_interface_1a32858e2bb7bb6cb81ac391e0e2a0d4c1" kindref="member">Inventory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;hash)<sp/>=0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_wallet_interface_1acd71e9479057c2fdc433fc576e625edf" kindref="member">ResendWalletTransactions</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fForce)<sp/>=0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa6b7f220759fb53f10c65654bbf61317" kindref="member">void ::RegisterWallet</ref>(<ref refid="class_c_wallet_interface" kindref="compound">CWalletInterface</ref>*);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa60561b6923955deeaad6fdab74a3aee" kindref="member">void ::UnregisterWallet</ref>(<ref refid="class_c_wallet_interface" kindref="compound">CWalletInterface</ref>*);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="main_8h_1ad0b02f9e3ff8997319581ce5021d4244" kindref="member">void ::UnregisterAllWallets</ref>();</highlight></codeline>
<codeline lineno="569"><highlight class="normal">};</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_block_tree_d_b" kindref="compound">CBlockTreeDB</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_coins_view_cache" kindref="compound">CCoinsViewCache</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_coins_view_cache" kindref="compound">CCoinsViewCache</ref><sp/>*<ref refid="main_8h_1a1821834b8f7837b469f7f91a14c20042" kindref="member">pcoinsTip</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_block_tree_d_b" kindref="compound">CBlockTreeDB</ref><sp/>*<ref refid="main_8h_1a0023503503c358eda0c97a576ef53fde" kindref="member">pblocktree</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="class_c_block_file_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_block_file_info" kindref="compound">CBlockFileInfo</ref></highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="583" refid="class_c_block_file_info_1adf2de4bb4d8a0a8f2116ed90f0770d03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_block_file_info_1adf2de4bb4d8a0a8f2116ed90f0770d03" kindref="member">nBlocks</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="584" refid="class_c_block_file_info_1afb13102ba49548c24812a4236851c3a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_block_file_info_1afb13102ba49548c24812a4236851c3a9" kindref="member">nSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="585" refid="class_c_block_file_info_1ad3e555fd733ef8f38430554c2db5e9d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_block_file_info_1ad3e555fd733ef8f38430554c2db5e9d1" kindref="member">nUndoSize</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="586" refid="class_c_block_file_info_1a66d258b11b1aec30cbacdc6130c271a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_block_file_info_1a66d258b11b1aec30cbacdc6130c271a8" kindref="member">nHeightFirst</ref>;<sp/></highlight></codeline>
<codeline lineno="587" refid="class_c_block_file_info_1aabbcf808931e7eaf2278b3d7172fad3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_block_file_info_1aabbcf808931e7eaf2278b3d7172fad3a" kindref="member">nHeightLast</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="588" refid="class_c_block_file_info_1a0e928257d1f003ede485ce49e8cf9189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="class_c_block_file_info_1a0e928257d1f003ede485ce49e8cf9189" kindref="member">nTimeFirst</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589" refid="class_c_block_file_info_1a1d12e4202474bb2f299d18d7d1f28c78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="class_c_block_file_info_1a1d12e4202474bb2f299d18d7d1f28c78" kindref="member">nTimeLast</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="class_c_block_file_info_1ab4daf4df00f90dee15e3a7d2cdb7a273" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_file_info_1ab4daf4df00f90dee15e3a7d2cdb7a273" kindref="member">ADD_SERIALIZE_METHODS</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Operation&gt;</highlight></codeline>
<codeline lineno="594" refid="class_c_block_file_info_1a5d48a4fe1f8b3903131d121fc14a5a6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_block_file_info_1a5d48a4fe1f8b3903131d121fc14a5a6f" kindref="member">SerializationOp</ref>(Stream&amp;<sp/>s,<sp/>Operation<sp/>ser_action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(<ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(nBlocks));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(<ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(nSize));</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(<ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(nUndoSize));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(<ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(nHeightFirst));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(<ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(nHeightLast));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(<ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(nTimeFirst));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" kindref="member">READWRITE</ref>(<ref refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" kindref="member">VARINT</ref>(nTimeLast));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="class_c_block_file_info_1a21bd4f8e92c47646737fc57446a86cc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_block_file_info_1a21bd4f8e92c47646737fc57446a86cc2" kindref="member">SetNull</ref>()<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlocks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nUndoSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHeightFirst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHeightLast<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeFirst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeLast<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="class_c_block_file_info_1a4d08bfcfc45a16b40266255f8597c949" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_file_info_1a4d08bfcfc45a16b40266255f8597c949" kindref="member">CBlockFileInfo</ref>()<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_file_info_1a21bd4f8e92c47646737fc57446a86cc2" kindref="member">SetNull</ref>();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_c_block_file_info_1a90d40a769ca47c075757c1b9037c88f3" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="class_c_block_file_info_1a66867569ffe06068b8c6eb1139934fbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_block_file_info_1a66867569ffe06068b8c6eb1139934fbf" kindref="member">AddBlock</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeightIn,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nTimeIn)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBlocks==0<sp/>||<sp/>nHeightFirst<sp/>&gt;<sp/>nHeightIn)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHeightFirst<sp/>=<sp/>nHeightIn;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBlocks==0<sp/>||<sp/>nTimeFirst<sp/>&gt;<sp/>nTimeIn)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeFirst<sp/>=<sp/>nTimeIn;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlocks++;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nHeightIn<sp/>&gt;<sp/>nHeightLast)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHeightLast<sp/>=<sp/>nHeightIn;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTimeIn<sp/>&gt;<sp/>nTimeLast)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeLast<sp/>=<sp/>nTimeIn;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal">};</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref>;</highlight></codeline>
<codeline lineno="636" refid="class_c_verify_d_b" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_verify_d_b" kindref="compound">CVerifyDB</ref><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_verify_d_b_1ab33a26982ba391fc71614f8eee9dbaa0" kindref="member">CVerifyDB</ref>();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_verify_d_b_1a4a04d4554f763b8803082fae81513f40" kindref="member">~CVerifyDB</ref>();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_verify_d_b_1a5d3e3ade35a14ddce2404e18e4b1df50" kindref="member">VerifyDB</ref>(<ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref><sp/>*coinsview,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCheckLevel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCheckDepth);</highlight></codeline>
<codeline lineno="641"><highlight class="normal">};</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/main.h"/>
  </compounddef>
</doxygen>
