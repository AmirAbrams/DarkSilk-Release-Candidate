<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="table__test_8cc" kind="file" language="C++">
    <compoundname>table_test.cc</compoundname>
    <includes refid="table_8h" local="yes">leveldb/table.h</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes refid="dbformat_8h" local="yes">db/dbformat.h</includes>
    <includes refid="memtable_8h" local="yes">db/memtable.h</includes>
    <includes refid="write__batch__internal_8h" local="yes">db/write_batch_internal.h</includes>
    <includes refid="leveldb_2include_2leveldb_2db_8h" local="yes">leveldb/db.h</includes>
    <includes refid="env_8h" local="yes">leveldb/env.h</includes>
    <includes refid="iterator_8h" local="yes">leveldb/iterator.h</includes>
    <includes refid="table__builder_8h" local="yes">leveldb/table_builder.h</includes>
    <includes refid="leveldb_2table_2block_8h" local="yes">table/block.h</includes>
    <includes refid="block__builder_8h" local="yes">table/block_builder.h</includes>
    <includes refid="format_8h" local="yes">table/format.h</includes>
    <includes refid="random_8h" local="yes">util/random.h</includes>
    <includes refid="testharness_8h" local="yes">util/testharness.h</includes>
    <includes refid="testutil_8h" local="yes">util/testutil.h</includes>
    <incdepgraph>
      <node id="39427">
        <label>leveldb/table.h</label>
        <link refid="table_8h"/>
        <childnode refid="39428" relation="include">
        </childnode>
        <childnode refid="39429" relation="include">
        </childnode>
      </node>
      <node id="39454">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="39434" relation="include">
        </childnode>
        <childnode refid="39435" relation="include">
        </childnode>
      </node>
      <node id="39456">
        <label>stdarg.h</label>
      </node>
      <node id="39448">
        <label>db/skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="39431" relation="include">
        </childnode>
        <childnode refid="39449" relation="include">
        </childnode>
        <childnode refid="39445" relation="include">
        </childnode>
        <childnode refid="39450" relation="include">
        </childnode>
        <childnode refid="39452" relation="include">
        </childnode>
      </node>
      <node id="39452">
        <label>util/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="39428" relation="include">
        </childnode>
      </node>
      <node id="39446">
        <label>util/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="39438" relation="include">
        </childnode>
        <childnode refid="39428" relation="include">
        </childnode>
        <childnode refid="39434" relation="include">
        </childnode>
        <childnode refid="39445" relation="include">
        </childnode>
      </node>
      <node id="39431">
        <label>assert.h</label>
      </node>
      <node id="39441">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="39432" relation="include">
        </childnode>
      </node>
      <node id="39450">
        <label>util/arena.h</label>
        <link refid="arena_8h"/>
        <childnode refid="39451" relation="include">
        </childnode>
        <childnode refid="39431" relation="include">
        </childnode>
        <childnode refid="39432" relation="include">
        </childnode>
        <childnode refid="39428" relation="include">
        </childnode>
      </node>
      <node id="39449">
        <label>stdlib.h</label>
      </node>
      <node id="39437">
        <label>db/dbformat.h</label>
        <link refid="dbformat_8h"/>
        <childnode refid="39438" relation="include">
        </childnode>
        <childnode refid="39439" relation="include">
        </childnode>
        <childnode refid="39440" relation="include">
        </childnode>
        <childnode refid="39442" relation="include">
        </childnode>
        <childnode refid="39430" relation="include">
        </childnode>
        <childnode refid="39443" relation="include">
        </childnode>
        <childnode refid="39444" relation="include">
        </childnode>
        <childnode refid="39446" relation="include">
        </childnode>
      </node>
      <node id="39440">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="39428" relation="include">
        </childnode>
        <childnode refid="39438" relation="include">
        </childnode>
        <childnode refid="39429" relation="include">
        </childnode>
        <childnode refid="39441" relation="include">
        </childnode>
      </node>
      <node id="39434">
        <label>string</label>
      </node>
      <node id="39436">
        <label>map</label>
      </node>
      <node id="39458">
        <label>table/block_builder.h</label>
        <link refid="block__builder_8h"/>
        <childnode refid="39451" relation="include">
        </childnode>
        <childnode refid="39428" relation="include">
        </childnode>
        <childnode refid="39430" relation="include">
        </childnode>
      </node>
      <node id="39462">
        <label>util/testutil.h</label>
        <link refid="testutil_8h"/>
        <childnode refid="39455" relation="include">
        </childnode>
        <childnode refid="39430" relation="include">
        </childnode>
        <childnode refid="39452" relation="include">
        </childnode>
      </node>
      <node id="39432">
        <label>stddef.h</label>
      </node>
      <node id="39435">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="39434" relation="include">
        </childnode>
        <childnode refid="39430" relation="include">
        </childnode>
      </node>
      <node id="39444">
        <label>util/coding.h</label>
        <link refid="coding_8h"/>
        <childnode refid="39428" relation="include">
        </childnode>
        <childnode refid="39433" relation="include">
        </childnode>
        <childnode refid="39434" relation="include">
        </childnode>
        <childnode refid="39430" relation="include">
        </childnode>
        <childnode refid="39445" relation="include">
        </childnode>
      </node>
      <node id="39433">
        <label>string.h</label>
      </node>
      <node id="39451">
        <label>vector</label>
      </node>
      <node id="39461">
        <label>sstream</label>
      </node>
      <node id="39453">
        <label>db/write_batch_internal.h</label>
        <link refid="write__batch__internal_8h"/>
        <childnode refid="39454" relation="include">
        </childnode>
      </node>
      <node id="39457">
        <label>table/block.h</label>
        <link refid="leveldb_2table_2block_8h"/>
        <childnode refid="39432" relation="include">
        </childnode>
        <childnode refid="39428" relation="include">
        </childnode>
        <childnode refid="39429" relation="include">
        </childnode>
      </node>
      <node id="39445">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="39433" relation="include">
        </childnode>
      </node>
      <node id="39428">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="39447">
        <label>db/memtable.h</label>
        <link refid="memtable_8h"/>
        <childnode refid="39434" relation="include">
        </childnode>
        <childnode refid="39440" relation="include">
        </childnode>
        <childnode refid="39437" relation="include">
        </childnode>
        <childnode refid="39448" relation="include">
        </childnode>
        <childnode refid="39450" relation="include">
        </childnode>
      </node>
      <node id="39443">
        <label>leveldb/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="39428" relation="include">
        </childnode>
        <childnode refid="39441" relation="include">
        </childnode>
        <childnode refid="39435" relation="include">
        </childnode>
      </node>
      <node id="39426">
        <label>/home/dev/ds-160209/src/leveldb/table/table_test.cc</label>
        <link refid="table_test.cc"/>
        <childnode refid="39427" relation="include">
        </childnode>
        <childnode refid="39436" relation="include">
        </childnode>
        <childnode refid="39434" relation="include">
        </childnode>
        <childnode refid="39437" relation="include">
        </childnode>
        <childnode refid="39447" relation="include">
        </childnode>
        <childnode refid="39453" relation="include">
        </childnode>
        <childnode refid="39440" relation="include">
        </childnode>
        <childnode refid="39455" relation="include">
        </childnode>
        <childnode refid="39429" relation="include">
        </childnode>
        <childnode refid="39443" relation="include">
        </childnode>
        <childnode refid="39457" relation="include">
        </childnode>
        <childnode refid="39458" relation="include">
        </childnode>
        <childnode refid="39459" relation="include">
        </childnode>
        <childnode refid="39452" relation="include">
        </childnode>
        <childnode refid="39460" relation="include">
        </childnode>
        <childnode refid="39462" relation="include">
        </childnode>
      </node>
      <node id="39460">
        <label>util/testharness.h</label>
        <link refid="testharness_8h"/>
        <childnode refid="39438" relation="include">
        </childnode>
        <childnode refid="39449" relation="include">
        </childnode>
        <childnode refid="39461" relation="include">
        </childnode>
        <childnode refid="39455" relation="include">
        </childnode>
        <childnode refid="39430" relation="include">
        </childnode>
        <childnode refid="39452" relation="include">
        </childnode>
      </node>
      <node id="39430">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="39431" relation="include">
        </childnode>
        <childnode refid="39432" relation="include">
        </childnode>
        <childnode refid="39433" relation="include">
        </childnode>
        <childnode refid="39434" relation="include">
        </childnode>
      </node>
      <node id="39459">
        <label>table/format.h</label>
        <link refid="format_8h"/>
        <childnode refid="39434" relation="include">
        </childnode>
        <childnode refid="39428" relation="include">
        </childnode>
        <childnode refid="39430" relation="include">
        </childnode>
        <childnode refid="39435" relation="include">
        </childnode>
        <childnode refid="39443" relation="include">
        </childnode>
      </node>
      <node id="39455">
        <label>leveldb/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="39434" relation="include">
        </childnode>
        <childnode refid="39451" relation="include">
        </childnode>
        <childnode refid="39456" relation="include">
        </childnode>
        <childnode refid="39428" relation="include">
        </childnode>
        <childnode refid="39435" relation="include">
        </childnode>
      </node>
      <node id="39438">
        <label>stdio.h</label>
      </node>
      <node id="39442">
        <label>leveldb/filter_policy.h</label>
        <link refid="filter__policy_8h"/>
        <childnode refid="39434" relation="include">
        </childnode>
      </node>
      <node id="39439">
        <label>leveldb/comparator.h</label>
        <link refid="comparator_8h"/>
        <childnode refid="39434" relation="include">
        </childnode>
      </node>
      <node id="39429">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="39430" relation="include">
        </childnode>
        <childnode refid="39435" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classleveldb_1_1_string_sink" prot="public">leveldb::StringSink</innerclass>
    <innerclass refid="classleveldb_1_1_string_source" prot="public">leveldb::StringSource</innerclass>
    <innerclass refid="classleveldb_1_1_constructor" prot="public">leveldb::Constructor</innerclass>
    <innerclass refid="classleveldb_1_1_block_constructor" prot="public">leveldb::BlockConstructor</innerclass>
    <innerclass refid="classleveldb_1_1_table_constructor" prot="public">leveldb::TableConstructor</innerclass>
    <innerclass refid="classleveldb_1_1_key_converting_iterator" prot="public">leveldb::KeyConvertingIterator</innerclass>
    <innerclass refid="classleveldb_1_1_mem_table_constructor" prot="public">leveldb::MemTableConstructor</innerclass>
    <innerclass refid="classleveldb_1_1_d_b_constructor" prot="public">leveldb::DBConstructor</innerclass>
    <innerclass refid="structleveldb_1_1_test_args" prot="public">leveldb::TestArgs</innerclass>
    <innerclass refid="classleveldb_1_1_harness" prot="public">leveldb::Harness</innerclass>
    <innerclass refid="classleveldb_1_1_mem_table_test" prot="public">leveldb::MemTableTest</innerclass>
    <innerclass refid="classleveldb_1_1_table_test" prot="public">leveldb::TableTest</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" prot="public" static="no" mutable="no">
        <type>const Comparator *</type>
        <definition>const Comparator* cmp</definition>
        <argsstring></argsstring>
        <name>cmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="80" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="80" bodyend="-1"/>
        <referencedby refid="c_8h_1aeed649e70fa671d0d895b117479ea98e" compoundref="c_8cc" startline="394" endline="398">leveldb_options_set_comparator</referencedby>
        <referencedby refid="c_8h_1a8a23d40edcae8ee2a9ed3f8b071d99da" compoundref="c_8cc" startline="469" endline="471">leveldb_comparator_destroy</referencedby>
        <referencedby refid="c__test_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="c__test_8c" startline="157" endline="390">main</referencedby>
        <referencedby refid="namespaceleveldb_1a5cd6c2754610c66f4dd998874482c80b" compoundref="db__test_8cc" startline="1368" endline="1389">leveldb::TEST</referencedby>
        <referencedby refid="namespaceleveldb_1af9cf6ec167c9b6f25fd050ab6fb67a90" compoundref="db__test_8cc" startline="2065" endline="2114">leveldb::BM_LogAndApply</referencedby>
        <referencedby refid="classleveldb_1_1_version_set_1_1_builder_1a19d0dd9aec1b825e7d938e9ac24dc4f7" compoundref="version__set_8cc" startline="623" endline="632">leveldb::VersionSet::Builder::Builder</referencedby>
        <referencedby refid="classleveldb_1_1_version_set_1_1_builder_1a429b23cc022cac08ab2ba880ac5803d1" compoundref="version__set_8cc" startline="702" endline="748">leveldb::VersionSet::Builder::SaveTo</referencedby>
        <referencedby refid="classleveldb_1_1_find_file_test_1a233fd8c1e1764f2572e03d28b1f58ae0" compoundref="version__set__test_8cc" startline="35" endline="39">leveldb::FindFileTest::Find</referencedby>
        <referencedby refid="classleveldb_1_1_find_file_test_1a617e51dc2e6acbe7d5bc6d0a7224ac51" compoundref="version__set__test_8cc" startline="41" endline="48">leveldb::FindFileTest::Overlaps</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="table__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="866" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="866" bodyend="868"/>
        <references refid="namespaceleveldb_1_1test_1a3329162c54a0bff42d41c2ac86b2580a" compoundref="testharness_8cc" startline="36" endline="58">leveldb::test::RunAllTests</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table_8h" kindref="compound">leveldb/table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dbformat_8h" kindref="compound">db/dbformat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtable_8h" kindref="compound">db/memtable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="write__batch__internal_8h" kindref="compound">db/write_batch_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="leveldb_2include_2leveldb_2db_8h" kindref="compound">leveldb/db.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="env_8h" kindref="compound">leveldb/env.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="iterator_8h" kindref="compound">leveldb/iterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__builder_8h" kindref="compound">leveldb/table_builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="leveldb_2table_2block_8h" kindref="compound">table/block.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="block__builder_8h" kindref="compound">table/block_builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="format_8h" kindref="compound">table/format.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="random_8h" kindref="compound">util/random.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testharness_8h" kindref="compound">util/testharness.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testutil_8h" kindref="compound">util/testutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>reverse<sp/>of<sp/>&quot;key&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>test<sp/>non-lexicographic<sp/>comparators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>Reverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>std::string<sp/>str(key.ToString());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::string<sp/>rev(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::string::reverse_iterator<sp/>rit<sp/>=<sp/>str.rbegin();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rit<sp/>!=<sp/>str.rend();<sp/>++rit)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>rev.push_back(*rit);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rev;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ReverseKeyComparator<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Comparator<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;leveldb.ReverseBytewiseComparator&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>()-&gt;<ref refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039" kindref="member">Compare</ref>(Reverse(a),<sp/>Reverse(b));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindShortestSeparator(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/><ref refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" kindref="member">start</ref>,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>limit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/>Reverse(*start);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>l<sp/>=<sp/>Reverse(limit);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>()-&gt;<ref refid="structleveldb_1_1_comparator_1abdfe6076225e95b91ffd94f646063115" kindref="member">FindShortestSeparator</ref>(&amp;s,<sp/>l);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>*start<sp/>=<sp/>Reverse(s);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindShortSuccessor(std::string*<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/>Reverse(*key);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>()-&gt;<ref refid="structleveldb_1_1_comparator_1a49751dd906595633161dfad943d24b3b" kindref="member">FindShortSuccessor</ref>(&amp;s);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>*key<sp/>=<sp/>Reverse(s);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ReverseKeyComparator<sp/>reverse_key_comparator;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Increment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparator*<sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>,<sp/>std::string*<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/><ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>())<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>key-&gt;push_back(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cmp<sp/>==<sp/>&amp;reverse_key_comparator);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rev<sp/>=<sp/>Reverse(*key);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>rev.push_back(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>*key<sp/>=<sp/>Reverse(rev);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>STL<sp/>comparator<sp/>that<sp/>uses<sp/>a<sp/>Comparator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">STLLessThan<sp/>{</highlight></codeline>
<codeline lineno="80" refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparator*<sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>STLLessThan()<sp/>:<sp/>cmp(<ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>())<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>STLLessThan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparator*<sp/>c)<sp/>:<sp/>cmp(c)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmp-&gt;Compare(Slice(a),<sp/>Slice(b))<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classleveldb_1_1_string_sink" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_string_sink" kindref="compound">StringSink</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92" refid="classleveldb_1_1_string_sink_1a0cedd3ea3f2c0353f64c8e7509bc8107" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_string_sink_1a0cedd3ea3f2c0353f64c8e7509bc8107" kindref="member">~StringSink</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classleveldb_1_1_string_sink_1ac6a122614f3a447d2633e5a5725a9613" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classleveldb_1_1_string_sink_1ac6a122614f3a447d2633e5a5725a9613" kindref="member">contents</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contents_;<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classleveldb_1_1_string_sink_1a40e2142f8078720ecbad8a1d48be6f48" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_string_sink_1a40e2142f8078720ecbad8a1d48be6f48" kindref="member">Close</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();<sp/>}</highlight></codeline>
<codeline lineno="97" refid="classleveldb_1_1_string_sink_1af8dc901a44e89b56726bde2782a41ab7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_string_sink_1af8dc901a44e89b56726bde2782a41ab7" kindref="member">Flush</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();<sp/>}</highlight></codeline>
<codeline lineno="98" refid="classleveldb_1_1_string_sink_1a77f1f2b9797737fbd89211ba0bb9a93e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_string_sink_1a77f1f2b9797737fbd89211ba0bb9a93e" kindref="member">Sync</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classleveldb_1_1_string_sink_1a10db68412947f16bde307677a663c241" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_string_sink_1a10db68412947f16bde307677a663c241" kindref="member">Append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>contents_.append(data.<ref refid="classleveldb_1_1_slice_1aa64861043d9deee6889461bf0593cf73" kindref="member">data</ref>(),<sp/>data.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>std::string<sp/>contents_;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classleveldb_1_1_string_source" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_string_source" kindref="compound">StringSource</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112" refid="classleveldb_1_1_string_source_1a4f85ccda6f37775d790834de05284fda" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_string_source_1a4f85ccda6f37775d790834de05284fda" kindref="member">StringSource</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>contents)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>contents_(contents.data(),<sp/>contents.size())<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classleveldb_1_1_string_source_1a0d468686fe633d0cbb04ec58be474cc8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_string_source_1a0d468686fe633d0cbb04ec58be474cc8" kindref="member">~StringSource</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classleveldb_1_1_string_source_1af31de6d789ba2427c98673fd1eae0778" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_string_source_1af31de6d789ba2427c98673fd1eae0778" kindref="member">Size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contents_.size();<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classleveldb_1_1_string_source_1a7cf8d6ee4cd01cf514ce68326e6ec3c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_string_source_1a7cf8d6ee4cd01cf514ce68326e6ec3c2" kindref="member">Read</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>result,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>scratch)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;<sp/>contents_.size())<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1aefef9f88d0a6ca6d34bd9dec1670309e" kindref="member">Status::InvalidArgument</ref>(</highlight><highlight class="stringliteral">&quot;invalid<sp/>Read<sp/>offset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>+<sp/>n<sp/>&gt;<sp/>contents_.size())<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>contents_.size()<sp/>-<sp/>offset;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(scratch,<sp/>&amp;contents_[offset],<sp/>n);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>*result<sp/>=<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(scratch,<sp/>n);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>std::string<sp/>contents_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string,<sp/>STLLessThan&gt;<sp/><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>class<sp/>for<sp/>tests<sp/>to<sp/>unify<sp/>the<sp/>interface<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BlockBuilder/TableBuilder<sp/>and<sp/>Block/Table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classleveldb_1_1_constructor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143" refid="classleveldb_1_1_constructor_1a5f4d21512e279769e881b2ae85129f08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_constructor_1a5f4d21512e279769e881b2ae85129f08" kindref="member">Constructor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>cmp)<sp/>:<sp/>data_(STLLessThan(cmp))<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="144" refid="classleveldb_1_1_constructor_1a643f9e1fc58b988f41b2a081398b04a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_constructor_1a643f9e1fc58b988f41b2a081398b04a1" kindref="member">~Constructor</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>data_[key]<sp/>=<sp/>value.<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finish<sp/>constructing<sp/>the<sp/>data<sp/>structure<sp/>with<sp/>all<sp/>the<sp/>keys<sp/>that<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>been<sp/>added<sp/>so<sp/>far.<sp/><sp/>Returns<sp/>the<sp/>keys<sp/>in<sp/>sorted<sp/>order<sp/>in<sp/>&quot;*keys&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>stores<sp/>the<sp/>key/value<sp/>pairs<sp/>in<sp/>&quot;*kvmap&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classleveldb_1_1_constructor_1a5c7f63378f8834cac3be93040e0e49fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_constructor_1a5c7f63378f8834cac3be93040e0e49fc" kindref="member">Finish</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;*<sp/>keys,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KVMap*<sp/>kvmap)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>*kvmap<sp/>=<sp/>data_;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>keys-&gt;clear();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KVMap::const_iterator<sp/>it<sp/>=<sp/>data_.begin();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>data_.end();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>keys-&gt;push_back(it-&gt;first);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>data_.clear();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_constructor_1a0f11e251cfbe990b5b0a4e7040923189" kindref="member">FinishImpl</ref>(options,<sp/>*kvmap);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>&lt;&lt;<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>data<sp/>structure<sp/>from<sp/>the<sp/>data<sp/>in<sp/>&quot;data&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_constructor_1a0f11e251cfbe990b5b0a4e7040923189" kindref="member">FinishImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/><ref refid="classleveldb_1_1_constructor_1a55a0363200d6e86d8beb3b15b75e3824" kindref="member">data</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_constructor_1a362b24b7194f605b655f5a136e0ae43c" kindref="member">NewIterator</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classleveldb_1_1_constructor_1a55a0363200d6e86d8beb3b15b75e3824" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/><ref refid="classleveldb_1_1_constructor_1a55a0363200d6e86d8beb3b15b75e3824" kindref="member">data</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classleveldb_1_1_constructor_1a207d6002cdb7ead23cecf6cfb4350a80" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref>*<sp/><ref refid="classleveldb_1_1_constructor_1a207d6002cdb7ead23cecf6cfb4350a80" kindref="member">db</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Overridden<sp/>in<sp/>DBConstructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>KVMap<sp/>data_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classleveldb_1_1_block_constructor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_block_constructor" kindref="compound">BlockConstructor</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183" refid="classleveldb_1_1_block_constructor_1a1f89523b9e688d6525da80d5595bee4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_block_constructor_1a1f89523b9e688d6525da80d5595bee4c" kindref="member">BlockConstructor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>cmp)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref>(cmp),</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparator_(cmp),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structblock__" kindref="compound">block_</ref>(NULL)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="187" refid="classleveldb_1_1_block_constructor_1a3eb2422f0a8eebe30c95c9e1f8b04ac9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_block_constructor_1a3eb2422f0a8eebe30c95c9e1f8b04ac9" kindref="member">~BlockConstructor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="structblock__" kindref="compound">block_</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190" refid="classleveldb_1_1_block_constructor_1ae3f38f0769d34cb7d80776b8249f48ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_block_constructor_1ae3f38f0769d34cb7d80776b8249f48ae" kindref="member">FinishImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/><ref refid="classleveldb_1_1_constructor_1a55a0363200d6e86d8beb3b15b75e3824" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="structblock__" kindref="compound">block_</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structblock__" kindref="compound">block_</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_block_builder" kindref="compound">BlockBuilder</ref><sp/>builder(&amp;options);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KVMap::const_iterator<sp/>it<sp/>=<sp/>data.begin();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>data.end();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>builder.<ref refid="classleveldb_1_1_block_builder_1a17d0e23f1e7afcb874b22a0cb0b6cf17" kindref="member">Add</ref>(it-&gt;first,<sp/>it-&gt;second);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>builder.<ref refid="classleveldb_1_1_block_builder_1ab345ab44def13fb180502e9637b28bcd" kindref="member">Finish</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_block_contents" kindref="compound">BlockContents</ref><sp/>contents;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>contents.<ref refid="structleveldb_1_1_block_contents_1aa30fe6388fe0f89d5565f6bae788c28e" kindref="member">data</ref><sp/>=<sp/>data_;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>contents.<ref refid="structleveldb_1_1_block_contents_1ad9cbcf81fb1378ce5f9a0db2e8d4b539" kindref="member">cachable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>contents.<ref refid="structleveldb_1_1_block_contents_1a0d4390fa3d4041ac5a3da51cbb16e315" kindref="member">heap_allocated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structblock__" kindref="compound">block_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_block" kindref="compound">Block</ref>(contents);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209" refid="classleveldb_1_1_block_constructor_1a94b568e7f3aa7ad26eda141c3b4297ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_block_constructor_1a94b568e7f3aa7ad26eda141c3b4297ca" kindref="member">NewIterator</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structblock__" kindref="compound">block_</ref>-&gt;NewIterator(comparator_);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>comparator_;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>std::string<sp/>data_;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_block" kindref="compound">Block</ref>*<sp/><ref refid="structblock__" kindref="compound">block_</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_block_constructor" kindref="compound">BlockConstructor</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classleveldb_1_1_table_constructor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_table_constructor" kindref="compound">TableConstructor</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223" refid="classleveldb_1_1_table_constructor_1acfc791dc15a8fac77f9715fda659eb19" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_table_constructor_1acfc791dc15a8fac77f9715fda659eb19" kindref="member">TableConstructor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>cmp)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref>(cmp),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_(NULL),<sp/>table_(NULL)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227" refid="classleveldb_1_1_table_constructor_1a4be60433281b7d5e6aa37688be8d1631" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_table_constructor_1a4be60433281b7d5e6aa37688be8d1631" kindref="member">~TableConstructor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>Reset();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230" refid="classleveldb_1_1_table_constructor_1aa8ce3799a55859c2dee50d3e08f56ef2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_table_constructor_1aa8ce3799a55859c2dee50d3e08f56ef2" kindref="member">FinishImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/><ref refid="classleveldb_1_1_constructor_1a55a0363200d6e86d8beb3b15b75e3824" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>Reset();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_string_sink" kindref="compound">StringSink</ref><sp/>sink;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_table_builder" kindref="compound">TableBuilder</ref><sp/>builder(options,<sp/>&amp;sink);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KVMap::const_iterator<sp/>it<sp/>=<sp/>data.begin();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>data.end();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>builder.<ref refid="classleveldb_1_1_table_builder_1a37bd347cb6340215475ac9b42dc19d10" kindref="member">Add</ref>(it-&gt;first,<sp/>it-&gt;second);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(builder.<ref refid="classleveldb_1_1_table_builder_1aaec88faf09425e9c229a69e34656bf80" kindref="member">status</ref>().<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/>builder.<ref refid="classleveldb_1_1_table_builder_1a88f4bae006782e24462362d489dd3f35" kindref="member">Finish</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>&lt;&lt;<sp/>s.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(sink.<ref refid="classleveldb_1_1_string_sink_1ac6a122614f3a447d2633e5a5725a9613" kindref="member">contents</ref>().size(),<sp/>builder.<ref refid="classleveldb_1_1_table_builder_1a5844a15a8f94d2c44da709937f29039c" kindref="member">FileSize</ref>());</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>source_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_string_source" kindref="compound">StringSource</ref>(sink.<ref refid="classleveldb_1_1_string_sink_1ac6a122614f3a447d2633e5a5725a9613" kindref="member">contents</ref>());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>table_options;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>table_options.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref><sp/>=<sp/>options.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_table_1aa25d0e074ab4de46e583522a8c0e9582" kindref="member">Table::Open</ref>(table_options,<sp/>source_,<sp/>sink.<ref refid="classleveldb_1_1_string_sink_1ac6a122614f3a447d2633e5a5725a9613" kindref="member">contents</ref>().size(),<sp/>&amp;table_);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classleveldb_1_1_table_constructor_1a4897f3cb58fed2bd3a9f7f6468b6a105" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_table_constructor_1a4897f3cb58fed2bd3a9f7f6468b6a105" kindref="member">NewIterator</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table_-&gt;<ref refid="classleveldb_1_1_table_1ad354f57ece050ca0c5f42669b7c01cc2" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table_-&gt;<ref refid="classleveldb_1_1_table_1a1795d45c54945ee7652b19e6ad6c030b" kindref="member">ApproximateOffsetOf</ref>(key);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>table_;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>source_;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>table_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>source_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>StringSource*<sp/>source_;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>Table*<sp/>table_;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>TableConstructor();</highlight></codeline>
<codeline lineno="273"><highlight class="normal">};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>helper<sp/>class<sp/>that<sp/>converts<sp/>internal<sp/>format<sp/>keys<sp/>into<sp/>user<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classleveldb_1_1_key_converting_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_key_converting_iterator" kindref="compound">KeyConvertingIterator</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278" refid="classleveldb_1_1_key_converting_iterator_1a7b5c28a94749f2e02ecc9021bb9adb51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a7b5c28a94749f2e02ecc9021bb9adb51" kindref="member">KeyConvertingIterator</ref>(<ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter)<sp/>:<sp/>iter_(iter)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="279" refid="classleveldb_1_1_key_converting_iterator_1a2a774b0a90768168394ca0c35ba3a87e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a2a774b0a90768168394ca0c35ba3a87e" kindref="member">~KeyConvertingIterator</ref>()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter_;<sp/>}</highlight></codeline>
<codeline lineno="280" refid="classleveldb_1_1_key_converting_iterator_1a941cabf2e0b1c9647faa037b7ad55668" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a941cabf2e0b1c9647faa037b7ad55668" kindref="member">Valid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter_-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>();<sp/>}</highlight></codeline>
<codeline lineno="281" refid="classleveldb_1_1_key_converting_iterator_1a6af9b763a5831c2fdcd8c3bebfef6ae4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a6af9b763a5831c2fdcd8c3bebfef6ae4" kindref="member">Seek</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>target)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_parsed_internal_key" kindref="compound">ParsedInternalKey</ref><sp/>ikey(target,<sp/>kMaxSequenceNumber,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>encoded;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a7192bb79e7fa6ba01490473941386534" kindref="member">AppendInternalKey</ref>(&amp;encoded,<sp/>ikey);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>iter_-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(encoded);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287" refid="classleveldb_1_1_key_converting_iterator_1a56a6b7b97747d5e33981a66c28670cc9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a56a6b7b97747d5e33981a66c28670cc9" kindref="member">SeekToFirst</ref>()<sp/>{<sp/>iter_-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();<sp/>}</highlight></codeline>
<codeline lineno="288" refid="classleveldb_1_1_key_converting_iterator_1a9db639879c442a67234fc345887b19fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a9db639879c442a67234fc345887b19fc" kindref="member">SeekToLast</ref>()<sp/>{<sp/>iter_-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();<sp/>}</highlight></codeline>
<codeline lineno="289" refid="classleveldb_1_1_key_converting_iterator_1a6b468c158da3f6abbc697f7728811da8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a6b468c158da3f6abbc697f7728811da8" kindref="member">Next</ref>()<sp/>{<sp/>iter_-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();<sp/>}</highlight></codeline>
<codeline lineno="290" refid="classleveldb_1_1_key_converting_iterator_1adff607836b7b3d117a524b3d440bc55a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1adff607836b7b3d117a524b3d440bc55a" kindref="member">Prev</ref>()<sp/>{<sp/>iter_-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();<sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classleveldb_1_1_key_converting_iterator_1a46402aaa27d57c5b2bee4f560c2dc04b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a46402aaa27d57c5b2bee4f560c2dc04b" kindref="member">key</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classleveldb_1_1_key_converting_iterator_1a941cabf2e0b1c9647faa037b7ad55668" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_parsed_internal_key" kindref="compound">ParsedInternalKey</ref><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a46402aaa27d57c5b2bee4f560c2dc04b" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceleveldb_1a5a173b622e86c7a2f9beae3ac8818ac3" kindref="member">ParseInternalKey</ref>(iter_-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>(),<sp/>&amp;<ref refid="classleveldb_1_1_key_converting_iterator_1a46402aaa27d57c5b2bee4f560c2dc04b" kindref="member">key</ref>))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status_<sp/>=<sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;malformed<sp/>internal<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(</highlight><highlight class="stringliteral">&quot;corrupted<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key.<ref refid="structleveldb_1_1_parsed_internal_key_1aa6e30fcf3c95fc1485d60fa08efe2b9d" kindref="member">user_key</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classleveldb_1_1_key_converting_iterator_1aa7a0281f93fbd520bf54d94bac77197a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1aa7a0281f93fbd520bf54d94bac77197a" kindref="member">value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter_-&gt;<ref refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c" kindref="member">value</ref>();<sp/>}</highlight></codeline>
<codeline lineno="303" refid="classleveldb_1_1_key_converting_iterator_1a10d0f5b6b83bc967ba5c73d6bfc919f3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a10d0f5b6b83bc967ba5c73d6bfc919f3" kindref="member">status</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status_.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>()<sp/>?<sp/>iter_-&gt;<ref refid="classleveldb_1_1_iterator_1ac84f34623a031b7eeb23409320f76376" kindref="member">status</ref>()<sp/>:<sp/>status_;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>status_;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter_;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_key_converting_iterator_1a7b5c28a94749f2e02ecc9021bb9adb51" kindref="member">KeyConvertingIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator" kindref="compound">KeyConvertingIterator</ref>&amp;);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator" kindref="compound">KeyConvertingIterator</ref>&amp;);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classleveldb_1_1_mem_table_constructor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_mem_table_constructor" kindref="compound">MemTableConstructor</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318" refid="classleveldb_1_1_mem_table_constructor_1a5f4c341eb97e6e3938ec05b98455664a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_constructor_1a5f4c341eb97e6e3938ec05b98455664a" kindref="member">MemTableConstructor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>cmp)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref>(cmp),</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_comparator_(cmp)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>memtable_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>(internal_comparator_);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>memtable_-&gt;<ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324" refid="classleveldb_1_1_mem_table_constructor_1a893a3f902a8dbbe7c2548c3ab46512c1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mem_table_constructor_1a893a3f902a8dbbe7c2548c3ab46512c1" kindref="member">~MemTableConstructor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>memtable_-&gt;<ref refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327" refid="classleveldb_1_1_mem_table_constructor_1a78851e48bd187f231934e128ab050624" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_mem_table_constructor_1a78851e48bd187f231934e128ab050624" kindref="member">FinishImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/><ref refid="classleveldb_1_1_constructor_1a55a0363200d6e86d8beb3b15b75e3824" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>memtable_-&gt;<ref refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>memtable_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>(internal_comparator_);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>memtable_-&gt;<ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seq<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KVMap::const_iterator<sp/>it<sp/>=<sp/>data.begin();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>data.end();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memtable_-&gt;<ref refid="classleveldb_1_1_mem_table_1a37bec80954badb2354426aa175e9371f" kindref="member">Add</ref>(seq,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref>,<sp/>it-&gt;first,<sp/>it-&gt;second);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seq++;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340" refid="classleveldb_1_1_mem_table_constructor_1ae6eca097713c07eed6f630cca780fedd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_mem_table_constructor_1ae6eca097713c07eed6f630cca780fedd" kindref="member">NewIterator</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_key_converting_iterator" kindref="compound">KeyConvertingIterator</ref>(memtable_-&gt;<ref refid="classleveldb_1_1_mem_table_1a396b8ba5e2ea0de25b666026f3b9235f" kindref="member">NewIterator</ref>());</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref><sp/>internal_comparator_;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>*<sp/>memtable_;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">};</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classleveldb_1_1_d_b_constructor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_d_b_constructor" kindref="compound">DBConstructor</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="351" refid="classleveldb_1_1_d_b_constructor_1ae27ecdd7732629b08c25a63f82dfd4a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_constructor_1ae27ecdd7732629b08c25a63f82dfd4a9" kindref="member">DBConstructor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_comparator" kindref="compound">Comparator</ref>*<sp/>cmp)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref>(cmp),</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparator_(cmp)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>db_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>NewDB();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357" refid="classleveldb_1_1_d_b_constructor_1a370a9584eadd852b375267f69fde241c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b_constructor_1a370a9584eadd852b375267f69fde241c" kindref="member">~DBConstructor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>db_;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360" refid="classleveldb_1_1_d_b_constructor_1a554d8e348d9135ff72a43a03c647c261" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_constructor_1a554d8e348d9135ff72a43a03c647c261" kindref="member">FinishImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/><ref refid="classleveldb_1_1_constructor_1a55a0363200d6e86d8beb3b15b75e3824" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>db_;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>db_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>NewDB();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KVMap::const_iterator<sp/>it<sp/>=<sp/>data.begin();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>data.end();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref><sp/>batch;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(it-&gt;first,<sp/>it-&gt;second);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(db_-&gt;<ref refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" kindref="member">Write</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>&amp;batch).<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>());</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373" refid="classleveldb_1_1_d_b_constructor_1a51936c1c2cb31fe26f5fb2a237cfdeec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_d_b_constructor_1a51936c1c2cb31fe26f5fb2a237cfdeec" kindref="member">NewIterator</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>db_-&gt;<ref refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32" kindref="member">NewIterator</ref>(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>());</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="classleveldb_1_1_d_b_constructor_1a2bec14f01bb0fc459e0a09a70f06210d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref>*<sp/><ref refid="classleveldb_1_1_d_b_constructor_1a2bec14f01bb0fc459e0a09a70f06210d" kindref="member">db</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>db_;<sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NewDB()<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/>=<sp/><ref refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" kindref="member">test::TmpDir</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/table_testdb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref><sp/>=<sp/>comparator_;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>status<sp/>=<sp/><ref refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" kindref="member">DestroyDB</ref>(name,<sp/>options);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(status.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>&lt;&lt;<sp/>status.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1aff3b99b1b30a2dba9642adc6c912d5b7" kindref="member">error_if_exists</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref><sp/>=<sp/>10000;<sp/><sp/></highlight><highlight class="comment">//<sp/>Something<sp/>small<sp/>to<sp/>force<sp/>merging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">DB::Open</ref>(options,<sp/>name,<sp/>&amp;db_);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(status.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>&lt;&lt;<sp/>status.<ref refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparator*<sp/>comparator_;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>DB*<sp/>db_;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">};</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342" kindref="member">TestType</ref><sp/>{</highlight></codeline>
<codeline lineno="400" refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>,</highlight></codeline>
<codeline lineno="401" refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>,</highlight></codeline>
<codeline lineno="402" refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342a86f848bd8f163c760b4c661bdec7d46b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342a86f848bd8f163c760b4c661bdec7d46b" kindref="member">MEMTABLE_TEST</ref>,</highlight></codeline>
<codeline lineno="403" refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" kindref="member">DB_TEST</ref></highlight></codeline>
<codeline lineno="404"><highlight class="normal">};</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="structleveldb_1_1_test_args" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structleveldb_1_1_test_args" kindref="compound">TestArgs</ref><sp/>{</highlight></codeline>
<codeline lineno="407" refid="structleveldb_1_1_test_args_1a1c2c14e2506bf6c238a2685c38eb16ac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342" kindref="member">TestType</ref><sp/><ref refid="structleveldb_1_1_test_args_1a1c2c14e2506bf6c238a2685c38eb16ac" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="408" refid="structleveldb_1_1_test_args_1ab4c8bef944a4ddf845378f1fce2b6c22" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_test_args_1ab4c8bef944a4ddf845378f1fce2b6c22" kindref="member">reverse_compare</ref>;</highlight></codeline>
<codeline lineno="409" refid="structleveldb_1_1_test_args_1a233f5e5e56ff872e26f543585824df1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_test_args_1a233f5e5e56ff872e26f543585824df1d" kindref="member">restart_interval</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_test_args" kindref="compound">TestArgs</ref><sp/>kTestArgList[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>16<sp/>},</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1024<sp/>},</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>16<sp/>},</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1024<sp/>},</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>16<sp/>},</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1024<sp/>},</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>16<sp/>},</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1024<sp/>},</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restart<sp/>interval<sp/>does<sp/>not<sp/>matter<sp/>for<sp/>memtables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342a86f848bd8f163c760b4c661bdec7d46b" kindref="member">MEMTABLE_TEST</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>16<sp/>},</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342a86f848bd8f163c760b4c661bdec7d46b" kindref="member">MEMTABLE_TEST</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>16<sp/>},</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>bother<sp/>with<sp/>restart<sp/>interval<sp/>variations<sp/>for<sp/>DB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" kindref="member">DB_TEST</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>16<sp/>},</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" kindref="member">DB_TEST</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>16<sp/>},</highlight></codeline>
<codeline lineno="434"><highlight class="normal">};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumTestArgs<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kTestArgList)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kTestArgList[0]);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="classleveldb_1_1_harness" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="439" refid="classleveldb_1_1_harness_1a37601b2f232e45cb7607aa8d2ecb25db" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_harness_1a37601b2f232e45cb7607aa8d2ecb25db" kindref="member">Harness</ref>()<sp/>:<sp/>constructor_(NULL)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="classleveldb_1_1_harness_1a2aba24255691eaad2a57ee43cbc9ddc1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_harness_1a2aba24255691eaad2a57ee43cbc9ddc1" kindref="member">Init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_test_args" kindref="compound">TestArgs</ref>&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>constructor_;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>constructor_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>options_<sp/>=<sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>options_.<ref refid="structleveldb_1_1_options_1ac71d66ae44e481edc3922d3a139c30b4" kindref="member">block_restart_interval</ref><sp/>=<sp/>args.<ref refid="structleveldb_1_1_test_args_1a233f5e5e56ff872e26f543585824df1d" kindref="member">restart_interval</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>shorter<sp/>block<sp/>size<sp/>for<sp/>tests<sp/>to<sp/>exercise<sp/>block<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conditions<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>options_.<ref refid="structleveldb_1_1_options_1a715c7941b43db641e76e598aa9ab52a0" kindref="member">block_size</ref><sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="structleveldb_1_1_test_args_1ab4c8bef944a4ddf845378f1fce2b6c22" kindref="member">reverse_compare</ref>)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>options_.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref><sp/>=<sp/>&amp;reverse_key_comparator;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(args.<ref refid="structleveldb_1_1_test_args_1a1c2c14e2506bf6c238a2685c38eb16ac" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" kindref="member">TABLE_TEST</ref>:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructor_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_table_constructor" kindref="compound">TableConstructor</ref>(options_.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" kindref="member">BLOCK_TEST</ref>:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructor_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_block_constructor" kindref="compound">BlockConstructor</ref>(options_.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342a86f848bd8f163c760b4c661bdec7d46b" kindref="member">MEMTABLE_TEST</ref>:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructor_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table_constructor" kindref="compound">MemTableConstructor</ref>(options_.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" kindref="member">DB_TEST</ref>:</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructor_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_constructor" kindref="compound">DBConstructor</ref>(options_.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="classleveldb_1_1_harness_1a9956e6945c11e5024ae1f82fd8528343" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_harness_1a9956e6945c11e5024ae1f82fd8528343" kindref="member">~Harness</ref>()<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>constructor_;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="classleveldb_1_1_harness_1a019ddc8e52dc5cfaac85f53993ab1ed4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_harness_1a019ddc8e52dc5cfaac85f53993ab1ed4" kindref="member">Add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>constructor_-&gt;<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(key,<sp/>value);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classleveldb_1_1_harness_1a78dbb5352b51e22bbc449bad7c1a9176" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_harness_1a78dbb5352b51e22bbc449bad7c1a9176" kindref="member">Test</ref>(<ref refid="classleveldb_1_1_random" kindref="compound">Random</ref>*<sp/>rnd)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>keys;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>KVMap<sp/>data;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>constructor_-&gt;<ref refid="classleveldb_1_1_constructor_1a5c7f63378f8834cac3be93040e0e49fc" kindref="member">Finish</ref>(options_,<sp/>&amp;keys,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_harness_1ac5ff108406a08a6e3e22318246d206ef" kindref="member">TestForwardScan</ref>(keys,<sp/>data);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_harness_1aba7a2c48101cd9d024be64080ebed363" kindref="member">TestBackwardScan</ref>(keys,<sp/>data);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" kindref="member">TestRandomAccess</ref>(rnd,<sp/>keys,<sp/>data);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="classleveldb_1_1_harness_1ac5ff108406a08a6e3e22318246d206ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_harness_1ac5ff108406a08a6e3e22318246d206ef" kindref="member">TestForwardScan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>keys,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/>constructor_-&gt;<ref refid="classleveldb_1_1_constructor_1a362b24b7194f605b655f5a136e0ae43c" kindref="member">NewIterator</ref>();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KVMap::const_iterator<sp/>model_iter<sp/>=<sp/>data.begin();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_iter<sp/>!=<sp/>data.end();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++model_iter)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(data,<sp/>model_iter),<sp/><ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(iter));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="classleveldb_1_1_harness_1aba7a2c48101cd9d024be64080ebed363" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_harness_1aba7a2c48101cd9d024be64080ebed363" kindref="member">TestBackwardScan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>keys,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/>constructor_-&gt;<ref refid="classleveldb_1_1_constructor_1a362b24b7194f605b655f5a136e0ae43c" kindref="member">NewIterator</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(KVMap::const_reverse_iterator<sp/>model_iter<sp/>=<sp/>data.rbegin();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_iter<sp/>!=<sp/>data.rend();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++model_iter)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(data,<sp/>model_iter),<sp/><ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(iter));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" kindref="member">TestRandomAccess</ref>(<ref refid="classleveldb_1_1_random" kindref="compound">Random</ref>*<sp/>rnd,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>keys,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>kVerbose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/>constructor_-&gt;<ref refid="classleveldb_1_1_constructor_1a362b24b7194f605b655f5a136e0ae43c" kindref="member">NewIterator</ref>();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>KVMap::const_iterator<sp/>model_iter<sp/>=<sp/>data.begin();</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kVerbose)<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;---\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>toss<sp/>=<sp/>rnd-&gt;<ref refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" kindref="member">Uniform</ref>(5);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(toss)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kVerbose)<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Next\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++model_iter;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(data,<sp/>model_iter),<sp/><ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(iter));</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kVerbose)<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;SeekToFirst\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_iter<sp/>=<sp/>data.begin();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(data,<sp/>model_iter),<sp/><ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(iter));</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/><ref refid="classleveldb_1_1_harness_1ab6f2d80f97eb56fc65d4a9177cd86c03" kindref="member">PickRandomKey</ref>(rnd,<sp/>keys);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_iter<sp/>=<sp/>data.lower_bound(key);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kVerbose)<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Seek<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" kindref="member">EscapeString</ref>(key).c_str());</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(key));</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(data,<sp/>model_iter),<sp/><ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(iter));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kVerbose)<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Prev\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e" kindref="member">Prev</ref>();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model_iter<sp/>==<sp/>data.begin())<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_iter<sp/>=<sp/>data.end();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrap<sp/>around<sp/>to<sp/>invalid<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--model_iter;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(data,<sp/>model_iter),<sp/><ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(iter));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kVerbose)<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;SeekToLast\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keys.empty())<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_iter<sp/>=<sp/>data.end();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>last<sp/>=<sp/>data.rbegin()-&gt;first;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_iter<sp/>=<sp/>data.lower_bound(last);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(<ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(data,<sp/>model_iter),<sp/><ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(iter));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" kindref="member">ToString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap::const_iterator&amp;<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>data.end())<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;END&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;second<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="classleveldb_1_1_harness_1a7589308a4592b9edb4142825b743244c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_harness_1a7589308a4592b9edb4142825b743244c" kindref="member">ToString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap&amp;<sp/>data,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KVMap::const_reverse_iterator&amp;<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>data.rend())<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;END&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;second<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="classleveldb_1_1_harness_1a1cdf351918a2e969bce1c29290317403" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_harness_1a1cdf351918a2e969bce1c29290317403" kindref="member">ToString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;END&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;<ref refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c" kindref="member">value</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="classleveldb_1_1_harness_1ab6f2d80f97eb56fc65d4a9177cd86c03" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classleveldb_1_1_harness_1ab6f2d80f97eb56fc65d4a9177cd86c03" kindref="member">PickRandomKey</ref>(<ref refid="classleveldb_1_1_random" kindref="compound">Random</ref>*<sp/>rnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>keys)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keys.empty())<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>rnd-&gt;<ref refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" kindref="member">Uniform</ref>(keys.size());</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>result<sp/>=<sp/>keys[index];</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rnd-&gt;<ref refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" kindref="member">Uniform</ref>(3))<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>existing<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>return<sp/>something<sp/>smaller<sp/>than<sp/>an<sp/>existing<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>result[result.size()-1]<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[result.size()-1]--;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>something<sp/>larger<sp/>than<sp/>an<sp/>existing<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Increment(options_.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref>,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>NULL<sp/>if<sp/>not<sp/>running<sp/>against<sp/>a<sp/>DB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="classleveldb_1_1_harness_1ac278dc1cfc6a3b9f6ebc5ac93ccb42a7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref>*<sp/><ref refid="classleveldb_1_1_harness_1ac278dc1cfc6a3b9f6ebc5ac93ccb42a7" kindref="member">db</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constructor_-&gt;<ref refid="classleveldb_1_1_constructor_1a207d6002cdb7ead23cecf6cfb4350a80" kindref="member">db</ref>();<sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options_;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref>*<sp/>constructor_;</highlight></codeline>
<codeline lineno="645"><highlight class="normal">};</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>empty<sp/>table/block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="namespaceleveldb_1a13cda371e30ed51c6ac118444cc30b67" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref>,<sp/>Empty)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kNumTestArgs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>Init(kTestArgList[i]);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(<ref refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" kindref="member">test::RandomSeed</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>Test(&amp;rnd);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Special<sp/>test<sp/>for<sp/>a<sp/>block<sp/>with<sp/>no<sp/>restart<sp/>entries.<sp/><sp/>The<sp/>C++<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="comment">//<sp/>code<sp/>never<sp/>generates<sp/>such<sp/>blocks,<sp/>but<sp/>the<sp/>Java<sp/>version<sp/>of<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment">//<sp/>seems<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659" refid="namespaceleveldb_1af55d0693f84c040c3bf5ef986c6ad27e" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref>,<sp/>ZeroRestartPointsInBlock)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)];</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>memset(data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_block_contents" kindref="compound">BlockContents</ref><sp/>contents;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>contents.<ref refid="structleveldb_1_1_block_contents_1aa30fe6388fe0f89d5565f6bae788c28e" kindref="member">data</ref><sp/>=<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>(data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>contents.<ref refid="structleveldb_1_1_block_contents_1ad9cbcf81fb1378ce5f9a0db2e8d4b539" kindref="member">cachable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>contents.<ref refid="structleveldb_1_1_block_contents_1a0d4390fa3d4041ac5a3da51cbb16e315" kindref="member">heap_allocated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_block" kindref="compound">Block</ref><sp/><ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>(contents);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/>block.<ref refid="classleveldb_1_1_block_1a336289029f37d18d31a1a3c178afc7b3" kindref="member">NewIterator</ref>(<ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>());</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3" kindref="member">SeekToLast</ref>();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44" kindref="member">Seek</ref>(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(!iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>());</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>the<sp/>empty<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="namespaceleveldb_1a1311d3380969292aaeb1c4588b7633f6" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref>,<sp/>SimpleEmptyKey)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kNumTestArgs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>Init(kTestArgList[i]);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(<ref refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" kindref="member">test::RandomSeed</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>Add(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>Test(&amp;rnd);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="namespaceleveldb_1ae9364038df96fa10c379139b73101bb3" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref>,<sp/>SimpleSingle)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kNumTestArgs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>Init(kTestArgList[i]);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(<ref refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" kindref="member">test::RandomSeed</ref>()<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>Add(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>Test(&amp;rnd);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696" refid="namespaceleveldb_1ac934d6413de1663dd440a0fb11e8e59d" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref>,<sp/>SimpleMulti)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kNumTestArgs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>Init(kTestArgList[i]);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(<ref refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" kindref="member">test::RandomSeed</ref>()<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>Add(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>Add(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>Add(</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>Test(&amp;rnd);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707" refid="namespaceleveldb_1a45ad3f5f5a3227d14fd3c2742820f10a" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref>,<sp/>SimpleSpecialKey)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kNumTestArgs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>Init(kTestArgList[i]);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(<ref refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" kindref="member">test::RandomSeed</ref>()<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>Add(</highlight><highlight class="stringliteral">&quot;\xff\xff&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>Test(&amp;rnd);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="namespaceleveldb_1adc90f6565a8de1839377305fcb97f70c" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref>,<sp/>Randomized)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kNumTestArgs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>Init(kTestArgList[i]);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(<ref refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" kindref="member">test::RandomSeed</ref>()<sp/>+<sp/>5);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_entries<sp/>=<sp/>0;<sp/>num_entries<sp/>&lt;<sp/>2000;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_entries<sp/>+=<sp/>(num_entries<sp/>&lt;<sp/>50<sp/>?<sp/>1<sp/>:<sp/>200))<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((num_entries<sp/>%<sp/>10)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;case<sp/>%d<sp/>of<sp/>%d:<sp/>num_entries<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i<sp/>+<sp/>1),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(kNumTestArgs),<sp/>num_entries);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>0;<sp/>e<sp/>&lt;<sp/>num_entries;<sp/>e++)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>v;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add(<ref refid="namespaceleveldb_1_1test_1ae6faec2042472bb9c3da124a677c4b96" kindref="member">test::RandomKey</ref>(&amp;rnd,<sp/>rnd.<ref refid="classleveldb_1_1_random_1a41987dcc7818d7bc0e68e2418c51d94e" kindref="member">Skewed</ref>(4)),</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1_1test_1a2132c5f28cd21dcea4348246fa32b673" kindref="member">test::RandomString</ref>(&amp;rnd,<sp/>rnd.<ref refid="classleveldb_1_1_random_1a41987dcc7818d7bc0e68e2418c51d94e" kindref="member">Skewed</ref>(5),<sp/>&amp;v).ToString());</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Test(&amp;rnd);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="namespaceleveldb_1a175371052945d08563d145130faec721" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_harness" kindref="compound">Harness</ref>,<sp/>RandomizedLongDB)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(<ref refid="namespaceleveldb_1_1test_1a0d48ce23bccd2763df90789cb3aac03c" kindref="member">test::RandomSeed</ref>());</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_test_args" kindref="compound">TestArgs</ref><sp/>args<sp/>=<sp/>{<sp/><ref refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" kindref="member">DB_TEST</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>16<sp/>};</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>Init(args);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_entries<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>0;<sp/>e<sp/>&lt;<sp/>num_entries;<sp/>e++)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>v;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>Add(<ref refid="namespaceleveldb_1_1test_1ae6faec2042472bb9c3da124a677c4b96" kindref="member">test::RandomKey</ref>(&amp;rnd,<sp/>rnd.<ref refid="classleveldb_1_1_random_1a41987dcc7818d7bc0e68e2418c51d94e" kindref="member">Skewed</ref>(4)),</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1_1test_1a2132c5f28cd21dcea4348246fa32b673" kindref="member">test::RandomString</ref>(&amp;rnd,<sp/>rnd.<ref refid="classleveldb_1_1_random_1a41987dcc7818d7bc0e68e2418c51d94e" kindref="member">Skewed</ref>(5),<sp/>&amp;v).ToString());</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>Test(&amp;rnd);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>have<sp/>created<sp/>enough<sp/>data<sp/>to<sp/>force<sp/>merging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>files<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[100];</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(name),<sp/></highlight><highlight class="stringliteral">&quot;leveldb.num-files-at-level%d&quot;</highlight><highlight class="normal">,<sp/>level);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(db()-&gt;GetProperty(name,<sp/>&amp;value));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>+=<sp/><ref refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" kindref="member">atoi</ref>(value.c_str());</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1aa4d066944b45f437a1b72d586fff3b1c" kindref="member">ASSERT_GT</ref>(files,<sp/>0);</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="classleveldb_1_1_mem_table_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_mem_table_test" kindref="compound">MemTableTest</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="namespaceleveldb_1a13d141d3f958b9ac30ef1a979d5b00f4" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_mem_table_test" kindref="compound">MemTableTest</ref>,<sp/>Simple)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref><sp/><ref refid="table__test_8cc_1a87863e435922f0910ca8db43f02a6c0b" kindref="member">cmp</ref>(<ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>());</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>*<sp/>memtable<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>(cmp);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>memtable-&gt;<ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref><sp/>batch;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_write_batch_internal_1a0ca3483de37433fb0ce37b1e91f01bd1" kindref="member">WriteBatchInternal::SetSequence</ref>(&amp;batch,<sp/>100);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(std::string(</highlight><highlight class="stringliteral">&quot;k1&quot;</highlight><highlight class="normal">),<sp/>std::string(</highlight><highlight class="stringliteral">&quot;v1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(std::string(</highlight><highlight class="stringliteral">&quot;k2&quot;</highlight><highlight class="normal">),<sp/>std::string(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(std::string(</highlight><highlight class="stringliteral">&quot;k3&quot;</highlight><highlight class="normal">),<sp/>std::string(</highlight><highlight class="stringliteral">&quot;v3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(std::string(</highlight><highlight class="stringliteral">&quot;largekey&quot;</highlight><highlight class="normal">),<sp/>std::string(</highlight><highlight class="stringliteral">&quot;vlarge&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(<ref refid="classleveldb_1_1_write_batch_internal_1a102aae14259fd277e2576338ce3e5551" kindref="member">WriteBatchInternal::InsertInto</ref>(&amp;batch,<sp/>memtable).ok());</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/>memtable-&gt;<ref refid="classleveldb_1_1_mem_table_1a396b8ba5e2ea0de25b666026f3b9235f" kindref="member">NewIterator</ref>();</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012" kindref="member">Valid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;key:<sp/>&apos;%s&apos;<sp/>-&gt;<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220" kindref="member">key</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>().c_str(),</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c" kindref="member">value</ref>().<ref refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>memtable-&gt;<ref refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Between(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>val,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>low,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(val<sp/>&gt;=<sp/>low)<sp/>&amp;&amp;<sp/>(val<sp/>&lt;=<sp/>high);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Value<sp/>%llu<sp/>is<sp/>not<sp/>in<sp/>range<sp/>[%llu,<sp/>%llu]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(val),</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(low),</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(high));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="classleveldb_1_1_table_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_table_test" kindref="compound">TableTest</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="namespaceleveldb_1a3c4934cad4099a61dd153fe6a1d5f85e" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_table_test" kindref="compound">TableTest</ref>,<sp/>ApproximateOffsetOfPlain)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_table_constructor" kindref="compound">TableConstructor</ref><sp/>c(<ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>());</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k01&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k02&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hello2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k03&quot;</highlight><highlight class="normal">,<sp/>std::string(10000,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k04&quot;</highlight><highlight class="normal">,<sp/>std::string(200000,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k05&quot;</highlight><highlight class="normal">,<sp/>std::string(300000,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k06&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hello3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k07&quot;</highlight><highlight class="normal">,<sp/>std::string(100000,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>keys;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>KVMap<sp/>kvmap;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a715c7941b43db641e76e598aa9ab52a0" kindref="member">block_size</ref><sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" kindref="member">compression</ref><sp/>=<sp/><ref refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" kindref="member">kNoCompression</ref>;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5c7f63378f8834cac3be93040e0e49fc" kindref="member">Finish</ref>(options,<sp/>&amp;keys,<sp/>&amp;kvmap);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0));</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k01&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0));</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k01a&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0));</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k02&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0));</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k03&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0));</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k04&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/>10000,<sp/><sp/>11000));</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k04a&quot;</highlight><highlight class="normal">),<sp/>210000,<sp/>211000));</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k05&quot;</highlight><highlight class="normal">),<sp/><sp/>210000,<sp/>211000));</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k06&quot;</highlight><highlight class="normal">),<sp/><sp/>510000,<sp/>511000));</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k07&quot;</highlight><highlight class="normal">),<sp/><sp/>510000,<sp/>511000));</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">),<sp/><sp/>610000,<sp/>612000));</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SnappyCompressionSupported()<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>std::string<sp/>out;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>Slice<sp/>in<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1port_1ae6e60ac8eb298c7eef3bb70ded8c809f" kindref="member">port::Snappy_Compress</ref>(in.data(),<sp/>in.size(),<sp/>&amp;out);</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="namespaceleveldb_1a54db682b48044a62a1b681349c53defb" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_table_test" kindref="compound">TableTest</ref>,<sp/>ApproximateOffsetOfCompressed)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SnappyCompressionSupported())<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;skipping<sp/>compression<sp/>tests\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref><sp/>rnd(301);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_table_constructor" kindref="compound">TableConstructor</ref><sp/>c(<ref refid="namespaceleveldb_1acd67740962c806afe8f4098cb153d25c" kindref="member">BytewiseComparator</ref>());</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>std::string<sp/>tmp;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k01&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k02&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1_1test_1a7e336c887550b617dfd8bc0f61726779" kindref="member">test::CompressibleString</ref>(&amp;rnd,<sp/>0.25,<sp/>10000,<sp/>&amp;tmp));</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k03&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hello3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" kindref="member">Add</ref>(</highlight><highlight class="stringliteral">&quot;k04&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceleveldb_1_1test_1a7e336c887550b617dfd8bc0f61726779" kindref="member">test::CompressibleString</ref>(&amp;rnd,<sp/>0.25,<sp/>10000,<sp/>&amp;tmp));</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>keys;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>KVMap<sp/>kvmap;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>options;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1a715c7941b43db641e76e598aa9ab52a0" kindref="member">block_size</ref><sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>options.<ref refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" kindref="member">compression</ref><sp/>=<sp/><ref refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9bad0d4e00e3596bcc3b9bdfd970900a06e" kindref="member">kSnappyCompression</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>c.<ref refid="classleveldb_1_1_constructor_1a5c7f63378f8834cac3be93040e0e49fc" kindref="member">Finish</ref>(options,<sp/>&amp;keys,<sp/>&amp;kvmap);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0));</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k01&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k02&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k03&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>2000,<sp/><sp/><sp/>3000));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;k04&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>2000,<sp/><sp/><sp/>3000));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(Between(c.<ref refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" kindref="member">ApproximateOffsetOf</ref>(</highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>4000,<sp/><sp/><sp/>6000));</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866" refid="table__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="table__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1test_1a3329162c54a0bff42d41c2ac86b2580a" kindref="member">leveldb::test::RunAllTests</ref>();</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc"/>
  </compounddef>
</doxygen>
