<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="protocol_8cpp" kind="file" language="C++">
    <compoundname>protocol.cpp</compoundname>
    <includes refid="protocol_8h" local="yes">protocol.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <incdepgraph>
      <node id="42008">
        <label>list</label>
      </node>
      <node id="41980">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="41996">
        <label>netinet/in.h</label>
      </node>
      <node id="42007">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="41964" relation="include">
        </childnode>
        <childnode refid="41978" relation="include">
        </childnode>
        <childnode refid="41965" relation="include">
        </childnode>
      </node>
      <node id="41997">
        <label>arpa/inet.h</label>
      </node>
      <node id="41970">
        <label>limits</label>
      </node>
      <node id="42019">
        <label>openssl/rand.h</label>
      </node>
      <node id="41987">
        <label>assert.h</label>
      </node>
      <node id="41975">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="41995">
        <label>net/if.h</label>
      </node>
      <node id="41984">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="41985" relation="include">
        </childnode>
        <childnode refid="41965" relation="include">
        </childnode>
      </node>
      <node id="41981">
        <label>sys/mman.h</label>
      </node>
      <node id="41978">
        <label>stdlib.h</label>
      </node>
      <node id="42018">
        <label>openssl/crypto.h</label>
      </node>
      <node id="41991">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="41992" relation="include">
        </childnode>
        <childnode refid="41981" relation="include">
        </childnode>
        <childnode refid="41993" relation="include">
        </childnode>
        <childnode refid="41994" relation="include">
        </childnode>
        <childnode refid="41995" relation="include">
        </childnode>
        <childnode refid="41996" relation="include">
        </childnode>
        <childnode refid="41997" relation="include">
        </childnode>
        <childnode refid="41998" relation="include">
        </childnode>
        <childnode refid="41982" relation="include">
        </childnode>
        <childnode refid="41999" relation="include">
        </childnode>
        <childnode refid="41983" relation="include">
        </childnode>
        <childnode refid="42000" relation="include">
        </childnode>
      </node>
      <node id="42014">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="42000">
        <label>errno.h</label>
      </node>
      <node id="41969">
        <label>cassert</label>
      </node>
      <node id="41988">
        <label>stdexcept</label>
      </node>
      <node id="42001">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="41994" relation="include">
        </childnode>
        <childnode refid="42002" relation="include">
        </childnode>
        <childnode refid="42003" relation="include">
        </childnode>
        <childnode refid="41964" relation="include">
        </childnode>
        <childnode refid="42004" relation="include">
        </childnode>
        <childnode refid="42007" relation="include">
        </childnode>
        <childnode refid="41967" relation="include">
        </childnode>
        <childnode refid="42008" relation="include">
        </childnode>
        <childnode refid="42009" relation="include">
        </childnode>
        <childnode refid="41966" relation="include">
        </childnode>
        <childnode refid="41965" relation="include">
        </childnode>
        <childnode refid="42010" relation="include">
        </childnode>
        <childnode refid="42011" relation="include">
        </childnode>
        <childnode refid="42012" relation="include">
        </childnode>
        <childnode refid="42013" relation="include">
        </childnode>
        <childnode refid="42014" relation="include">
        </childnode>
        <childnode refid="42015" relation="include">
        </childnode>
        <childnode refid="42016" relation="include">
        </childnode>
        <childnode refid="42017" relation="include">
        </childnode>
        <childnode refid="42018" relation="include">
        </childnode>
        <childnode refid="42019" relation="include">
        </childnode>
        <childnode refid="41989" relation="include">
        </childnode>
        <childnode refid="41971" relation="include">
        </childnode>
      </node>
      <node id="41961">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="41962" relation="include">
        </childnode>
        <childnode refid="41964" relation="include">
        </childnode>
        <childnode refid="41990" relation="include">
        </childnode>
        <childnode refid="41971" relation="include">
        </childnode>
        <childnode refid="41965" relation="include">
        </childnode>
      </node>
      <node id="42013">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="41965">
        <label>string</label>
      </node>
      <node id="41967">
        <label>map</label>
      </node>
      <node id="42010">
        <label>boost/thread.hpp</label>
      </node>
      <node id="41999">
        <label>netdb.h</label>
      </node>
      <node id="41992">
        <label>sys/fcntl.h</label>
      </node>
      <node id="41964">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="41965" relation="include">
        </childnode>
        <childnode refid="41966" relation="include">
        </childnode>
        <childnode refid="41967" relation="include">
        </childnode>
        <childnode refid="41968" relation="include">
        </childnode>
        <childnode refid="41969" relation="include">
        </childnode>
        <childnode refid="41970" relation="include">
        </childnode>
        <childnode refid="41971" relation="include">
        </childnode>
        <childnode refid="41972" relation="include">
        </childnode>
        <childnode refid="41973" relation="include">
        </childnode>
        <childnode refid="41974" relation="include">
        </childnode>
        <childnode refid="41975" relation="include">
        </childnode>
        <childnode refid="41976" relation="include">
        </childnode>
        <childnode refid="41984" relation="include">
        </childnode>
      </node>
      <node id="41982">
        <label>limits.h</label>
      </node>
      <node id="42003">
        <label>sys/resource.h</label>
      </node>
      <node id="42015">
        <label>openssl/bio.h</label>
      </node>
      <node id="41990">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="41965" relation="include">
        </childnode>
        <childnode refid="41966" relation="include">
        </childnode>
        <childnode refid="41964" relation="include">
        </childnode>
        <childnode refid="41991" relation="include">
        </childnode>
      </node>
      <node id="41998">
        <label>ifaddrs.h</label>
      </node>
      <node id="41994">
        <label>sys/types.h</label>
      </node>
      <node id="41979">
        <label>string.h</label>
      </node>
      <node id="41985">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="41973">
        <label>cstdio</label>
      </node>
      <node id="42017">
        <label>openssl/buffer.h</label>
      </node>
      <node id="41974">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="42012">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="41983">
        <label>unistd.h</label>
      </node>
      <node id="41966">
        <label>vector</label>
      </node>
      <node id="41963">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="41964" relation="include">
        </childnode>
        <childnode refid="41986" relation="include">
        </childnode>
        <childnode refid="41989" relation="include">
        </childnode>
        <childnode refid="41988" relation="include">
        </childnode>
        <childnode refid="41966" relation="include">
        </childnode>
        <childnode refid="41971" relation="include">
        </childnode>
      </node>
      <node id="42011">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="42009">
        <label>utility</label>
      </node>
      <node id="42006">
        <label>sstream</label>
      </node>
      <node id="42016">
        <label>openssl/evp.h</label>
      </node>
      <node id="42004">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="41969" relation="include">
        </childnode>
        <childnode refid="42005" relation="include">
        </childnode>
        <childnode refid="42006" relation="include">
        </childnode>
        <childnode refid="41988" relation="include">
        </childnode>
      </node>
      <node id="41971">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="42002">
        <label>sys/time.h</label>
      </node>
      <node id="42005">
        <label>iostream</label>
      </node>
      <node id="41986">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="41987" relation="include">
        </childnode>
        <childnode refid="41972" relation="include">
        </childnode>
        <childnode refid="41988" relation="include">
        </childnode>
        <childnode refid="41971" relation="include">
        </childnode>
        <childnode refid="41965" relation="include">
        </childnode>
        <childnode refid="41966" relation="include">
        </childnode>
      </node>
      <node id="41993">
        <label>sys/socket.h</label>
      </node>
      <node id="41989">
        <label>openssl/bn.h</label>
      </node>
      <node id="41960">
        <label>/home/dev/ds-160209/src/protocol.cpp</label>
        <link refid="protocol.cpp"/>
        <childnode refid="41961" relation="include">
        </childnode>
        <childnode refid="42001" relation="include">
        </childnode>
        <childnode refid="41997" relation="include">
        </childnode>
      </node>
      <node id="41976">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="41977" relation="include">
        </childnode>
        <childnode refid="41979" relation="include">
        </childnode>
        <childnode refid="41965" relation="include">
        </childnode>
        <childnode refid="41980" relation="include">
        </childnode>
        <childnode refid="41967" relation="include">
        </childnode>
        <childnode refid="41981" relation="include">
        </childnode>
        <childnode refid="41982" relation="include">
        </childnode>
        <childnode refid="41983" relation="include">
        </childnode>
      </node>
      <node id="41968">
        <label>set</label>
      </node>
      <node id="41962">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="41963" relation="include">
        </childnode>
        <childnode refid="41986" relation="include">
        </childnode>
        <childnode refid="41966" relation="include">
        </childnode>
      </node>
      <node id="41977">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="41978" relation="include">
        </childnode>
      </node>
      <node id="41972">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="protocol_8cpp_1a19d32b6a7ab4844f85eb0ece6ea4c4cc" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ppszTypeName[]</definition>
        <argsstring>[]</argsstring>
        <name>ppszTypeName</name>
        <initializer>=
{
    &quot;ERROR&quot;,
    &quot;tx&quot;,
    &quot;<ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>&quot;,
    &quot;filtered <ref refid="core_8h_1ace80c27428e237fe24f54ae915a36133" kindref="member">block</ref>&quot;,
    &quot;tx lock request&quot;,
    &quot;tx lock vote&quot;,
    &quot;<ref refid="rpcserver_8h_1ae1217adbb7feda4992da3e630c7e2aea" kindref="member">spork</ref>&quot;,
    &quot;<ref refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" kindref="member">stormnode</ref> winner&quot;,
    &quot;<ref refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" kindref="member">stormnode</ref> scan&quot;,
    &quot;<ref refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" kindref="member">stormnode</ref> vote&quot;,
    &quot;<ref refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" kindref="member">stormnode</ref> proposal&quot;,
    &quot;<ref refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" kindref="member">stormnode</ref> quorum&quot;,
    &quot;<ref refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" kindref="member">stormnode</ref> announce&quot;,
    &quot;<ref refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" kindref="member">stormnode</ref> <ref refid="rpcserver_8h_1a5611d8f199f7429a1db7ec6ff9c4e780" kindref="member">ping</ref>&quot;,
    &quot;unknown&quot;,
    &quot;unknown&quot;,
    &quot;unknown&quot;,
    &quot;unknown&quot;,
    &quot;unknown&quot;,
    &quot;unknown&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/protocol.cpp" line="14" column="1" bodyfile="/home/dev/ds-160209/src/protocol.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="protocol_8cpp_1a2684809000d3a0523769ad7585ace197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const CInv &amp;a, const CInv &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_inv" kindref="compound">CInv</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_inv" kindref="compound">CInv</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/protocol.cpp" line="141" column="1" bodyfile="/home/dev/ds-160209/src/protocol.cpp" bodystart="141" bodyend="144"/>
        <references refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" compoundref="protocol_8h" startline="137">CInv::type</references>
        <references refid="class_c_inv_1abfa04c38e9c0def9a2b09a9c43929744" compoundref="protocol_8h" startline="138">CInv::hash</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protocol_8h" kindref="compound">protocol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ppszTypeName[]<sp/>=</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;block&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;filtered<sp/>block&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tx<sp/>lock<sp/>request&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tx<sp/>lock<sp/>vote&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;spork&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stormnode<sp/>winner&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stormnode<sp/>scan&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stormnode<sp/>vote&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stormnode<sp/>proposal&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stormnode<sp/>quorum&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stormnode<sp/>announce&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stormnode<sp/>ping&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_c_message_header_1a188435dbfe51172b368873e8e7f688b0" refkind="member"><highlight class="normal"><ref refid="class_c_message_header_1a188435dbfe51172b368873e8e7f688b0" kindref="member">CMessageHeader::CMessageHeader</ref>()</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_c_message_header_1a4284bf1d2fd792af89e1c93b7e6e274e" kindref="member">pchMessageStart</ref>,<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().MessageStart(),<sp/><ref refid="chainparams_8h_1a6bcadada595cc3da13e6a04be1715917" kindref="member">MESSAGE_START_SIZE</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref>));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref>[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_message_header_1a67ccb9f1f23af69e309a8d6c8bfff751" kindref="member">nMessageSize</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_message_header_1ab9c6bec3694e2c110b4f358af9e55984" kindref="member">nChecksum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_c_message_header_1a4e68c30f9e7e485c13157a27c4ebff8c" refkind="member"><highlight class="normal"><ref refid="class_c_message_header_1a188435dbfe51172b368873e8e7f688b0" kindref="member">CMessageHeader::CMessageHeader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pszCommand,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMessageSizeIn)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_c_message_header_1a4284bf1d2fd792af89e1c93b7e6e274e" kindref="member">pchMessageStart</ref>,<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().MessageStart(),<sp/><ref refid="chainparams_8h_1a6bcadada595cc3da13e6a04be1715917" kindref="member">MESSAGE_START_SIZE</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(<ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref>,<sp/>pszCommand,<sp/><ref refid="class_c_message_header_1a00659410ff6010c972826dc3020e18b1a8c1bfc0fa6a63c8b73abef30555a5e54" kindref="member">COMMAND_SIZE</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_message_header_1a67ccb9f1f23af69e309a8d6c8bfff751" kindref="member">nMessageSize</ref><sp/>=<sp/>nMessageSizeIn;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_message_header_1ab9c6bec3694e2c110b4f358af9e55984" kindref="member">nChecksum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_c_message_header_1a71f022e98bff1acd65be4b75ce4cc038" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_message_header_1a71f022e98bff1acd65be4b75ce4cc038" kindref="member">CMessageHeader::GetCommand</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref>[<ref refid="class_c_message_header_1a00659410ff6010c972826dc3020e18b1a8c1bfc0fa6a63c8b73abef30555a5e54" kindref="member">COMMAND_SIZE</ref>-1]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(<ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref>,<sp/><ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref><sp/>+<sp/>strlen(<ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref>));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(<ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref>,<sp/><ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref><sp/>+<sp/><ref refid="class_c_message_header_1a00659410ff6010c972826dc3020e18b1a8c1bfc0fa6a63c8b73abef30555a5e54" kindref="member">COMMAND_SIZE</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_c_message_header_1a21f5760d034d4a040b00d6c34e927be0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_message_header_1a21f5760d034d4a040b00d6c34e927be0" kindref="member">CMessageHeader::IsValid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="64"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>start<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(<ref refid="class_c_message_header_1a4284bf1d2fd792af89e1c93b7e6e274e" kindref="member">pchMessageStart</ref>,<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().MessageStart(),<sp/><ref refid="chainparams_8h_1a6bcadada595cc3da13e6a04be1715917" kindref="member">MESSAGE_START_SIZE</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>command<sp/>string<sp/>for<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p1<sp/>=<sp/><ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref>;<sp/>p1<sp/>&lt;<sp/><ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref><sp/>+<sp/><ref refid="class_c_message_header_1a00659410ff6010c972826dc3020e18b1a8c1bfc0fa6a63c8b73abef30555a5e54" kindref="member">COMMAND_SIZE</ref>;<sp/>p1++)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>all<sp/>zeros<sp/>after<sp/>the<sp/>first<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>p1<sp/>&lt;<sp/><ref refid="class_c_message_header_1a87d62b0d9afb3889f318991700a34431" kindref="member">pchCommand</ref><sp/>+<sp/><ref refid="class_c_message_header_1a00659410ff6010c972826dc3020e18b1a8c1bfc0fa6a63c8b73abef30555a5e54" kindref="member">COMMAND_SIZE</ref>;<sp/>p1++)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p1<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p1<sp/>&lt;<sp/>&apos;<sp/>&apos;<sp/>||<sp/>*p1<sp/>&gt;<sp/>0x7E)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Message<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_message_header_1a67ccb9f1f23af69e309a8d6c8bfff751" kindref="member">nMessageSize</ref><sp/>&gt;<sp/><ref refid="mruset__tests_8cpp_1a0592dba56693fad79136250c11e5a7fe" kindref="member">MAX_SIZE</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CMessageHeader::IsValid()<sp/>:<sp/>(%s,<sp/>%u<sp/>bytes)<sp/>nMessageSize<sp/>&gt;<sp/>MAX_SIZE\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_message_header_1a71f022e98bff1acd65be4b75ce4cc038" kindref="member">GetCommand</ref>(),<sp/><ref refid="class_c_message_header_1a67ccb9f1f23af69e309a8d6c8bfff751" kindref="member">nMessageSize</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_c_address_1a84cd336180580ab69b8888a4339ccc37" refkind="member"><highlight class="normal"><ref refid="class_c_address_1a84cd336180580ab69b8888a4339ccc37" kindref="member">CAddress::CAddress</ref>()<sp/>:<sp/><ref refid="class_c_service" kindref="compound">CService</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_address_1ac060c84dcf47b8ccfae0142c9b29a243" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_c_address_1a806e75f363ec49bfab92a686a8774ac3" refkind="member"><highlight class="normal"><ref refid="class_c_address_1a84cd336180580ab69b8888a4339ccc37" kindref="member">CAddress::CAddress</ref>(<ref refid="class_c_service" kindref="compound">CService</ref><sp/>ipIn,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nServicesIn)<sp/>:<sp/><ref refid="class_c_service" kindref="compound">CService</ref>(ipIn)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_address_1ac060c84dcf47b8ccfae0142c9b29a243" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_address_1a6a4a6aa020d0d558f238c7d04dd986c3" kindref="member">nServices</ref><sp/>=<sp/>nServicesIn;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_c_address_1ac060c84dcf47b8ccfae0142c9b29a243" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_address_1ac060c84dcf47b8ccfae0142c9b29a243" kindref="member">CAddress::Init</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_address_1a6a4a6aa020d0d558f238c7d04dd986c3" kindref="member">nServices</ref><sp/>=<sp/><ref refid="protocol_8h_1abc5c98fcc1211af2b80116dd6e0a035da9d1154f0e7e56f183a5c8373abe2e86c" kindref="member">NODE_NETWORK</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_address_1ac1c44aac968b11f90ce529b133ae4e9b" kindref="member">nTime</ref><sp/>=<sp/>100000000;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_address_1abcf198429efe135fa2424f7dbc0048b0" kindref="member">nLastTry</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_c_inv_1a831d208e5e1b142e36a89999b81c2298" refkind="member"><highlight class="normal"><ref refid="class_c_inv_1a831d208e5e1b142e36a89999b81c2298" kindref="member">CInv::CInv</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv_1abfa04c38e9c0def9a2b09a9c43929744" kindref="member">hash</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_c_inv_1a4c6e02df7b10378f876ecc76c6b50301" refkind="member"><highlight class="normal"><ref refid="class_c_inv_1a831d208e5e1b142e36a89999b81c2298" kindref="member">CInv::CInv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hashIn)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref><sp/>=<sp/>typeIn;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv_1abfa04c38e9c0def9a2b09a9c43929744" kindref="member">hash</ref><sp/>=<sp/>hashIn;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_c_inv_1a412cb8fdd0bfe185f770fec91a3e13c4" refkind="member"><highlight class="normal"><ref refid="class_c_inv_1a831d208e5e1b142e36a89999b81c2298" kindref="member">CInv::CInv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/>hashIn)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="util_8h_1a35bf72ac971bd331fba0b3e8117bcbf9" kindref="member">ARRAYLEN</ref>(ppszTypeName);<sp/>i++)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strType<sp/>==<sp/>ppszTypeName[i])</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/><ref refid="util_8h_1a35bf72ac971bd331fba0b3e8117bcbf9" kindref="member">ARRAYLEN</ref>(ppszTypeName))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;CInv::CInv(string,<sp/>uint256)<sp/>:<sp/>unknown<sp/>type<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>strType));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv_1abfa04c38e9c0def9a2b09a9c43929744" kindref="member">hash</ref><sp/>=<sp/>hashIn;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="protocol_8cpp_1a2684809000d3a0523769ad7585ace197" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="protocol_8cpp_1a2684809000d3a0523769ad7585ace197" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a.<ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref><sp/>&lt;<sp/>b.<ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref><sp/>||<sp/>(a.<ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref><sp/>==<sp/>b.<ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref><sp/>&amp;&amp;<sp/>a.<ref refid="class_c_inv_1abfa04c38e9c0def9a2b09a9c43929744" kindref="member">hash</ref><sp/>&lt;<sp/>b.<ref refid="class_c_inv_1abfa04c38e9c0def9a2b09a9c43929744" kindref="member">hash</ref>));</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_c_inv_1a9259d1e8d828c6b6ea729d36d16cd84f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_inv_1a9259d1e8d828c6b6ea729d36d16cd84f" kindref="member">CInv::IsKnownType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref><sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/><ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="util_8h_1a35bf72ac971bd331fba0b3e8117bcbf9" kindref="member">ARRAYLEN</ref>(ppszTypeName));</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_c_inv_1a393dc4726f105b25090a6ee4952e71b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_c_inv_1a393dc4726f105b25090a6ee4952e71b5" kindref="member">CInv::GetCommand</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="152"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_inv_1a9259d1e8d828c6b6ea729d36d16cd84f" kindref="member">IsKnownType</ref>())</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(<ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;CInv::GetCommand()<sp/>:<sp/>type=%d<sp/>unknown<sp/>type&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref>));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ppszTypeName[<ref refid="class_c_inv_1a2da8a26c6b8824011e3144459d278c75" kindref="member">type</ref>];</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_c_inv_1a87a826a842d549c2747ced0c1a90bc18" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_inv_1a87a826a842d549c2747ced0c1a90bc18" kindref="member">CInv::ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_inv_1a393dc4726f105b25090a6ee4952e71b5" kindref="member">GetCommand</ref>(),<sp/><ref refid="class_c_inv_1abfa04c38e9c0def9a2b09a9c43929744" kindref="member">hash</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_c_inv_1ac694be0201a6e5b34efa1c604498186c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_inv_1ac694be0201a6e5b34efa1c604498186c" kindref="member">CInv::print</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="164"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CInv(%s)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_inv_1a87a826a842d549c2747ced0c1a90bc18" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/protocol.cpp"/>
  </compounddef>
</doxygen>
