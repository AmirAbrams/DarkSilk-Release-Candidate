<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="structzero__after__free__allocator" kind="struct" language="C++" prot="public">
    <compoundname>zero_after_free_allocator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::allocator&lt; T &gt;</basecompoundref>
    <includes refid="allocators_8h" local="no">allocators.h</includes>
    <innerclass refid="structzero__after__free__allocator_1_1rebind" prot="public">zero_after_free_allocator::rebind</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structzero__after__free__allocator_1aab907d58a45f5bf4baeaefb373f00987" prot="public" static="no">
        <type>std::allocator&lt; T &gt;</type>
        <definition>typedef std::allocator&lt;T&gt; zero_after_free_allocator&lt; T &gt;::base</definition>
        <argsstring></argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="246" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzero__after__free__allocator_1a85f5f3250c0519ea82ff33d980e73994" prot="public" static="no">
        <type>base::size_type</type>
        <definition>typedef base::size_type zero_after_free_allocator&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="247" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzero__after__free__allocator_1ab45fc8fc90d403b3b44715616e167658" prot="public" static="no">
        <type>base::difference_type</type>
        <definition>typedef base::difference_type zero_after_free_allocator&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="248" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzero__after__free__allocator_1a5cc395dbe16fe421abb6cdbcb96e06bd" prot="public" static="no">
        <type>base::pointer</type>
        <definition>typedef base::pointer zero_after_free_allocator&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="249" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzero__after__free__allocator_1a197fbd41cb35428c2ed27c23b742ec9b" prot="public" static="no">
        <type>base::const_pointer</type>
        <definition>typedef base::const_pointer zero_after_free_allocator&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="250" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzero__after__free__allocator_1a27e208c4c218d79cf0df9b524c674ddb" prot="public" static="no">
        <type>base::reference</type>
        <definition>typedef base::reference zero_after_free_allocator&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="251" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzero__after__free__allocator_1ab9e83de52f17c19f263bef6ba258fbed" prot="public" static="no">
        <type>base::const_reference</type>
        <definition>typedef base::const_reference zero_after_free_allocator&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="252" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzero__after__free__allocator_1aebbf8f000c73198eec060af6734e1f91" prot="public" static="no">
        <type>base::value_type</type>
        <definition>typedef base::value_type zero_after_free_allocator&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="253" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structzero__after__free__allocator_1a2206a4e5d2d3a0cd27d2baa50482f4a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zero_after_free_allocator&lt; T &gt;::zero_after_free_allocator</definition>
        <argsstring>()</argsstring>
        <name>zero_after_free_allocator</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="254" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="254" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="structzero__after__free__allocator_1a2822b64128f40c3b54ed6dbbf258730b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zero_after_free_allocator&lt; T &gt;::zero_after_free_allocator</definition>
        <argsstring>(const zero_after_free_allocator &amp;a)</argsstring>
        <name>zero_after_free_allocator</name>
        <param>
          <type>const <ref refid="structzero__after__free__allocator" kindref="compound">zero_after_free_allocator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="255" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="255" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="structzero__after__free__allocator_1a9d83915e027c0be7b08d6e5e8e4424ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>zero_after_free_allocator&lt; T &gt;::zero_after_free_allocator</definition>
        <argsstring>(const zero_after_free_allocator&lt; U &gt; &amp;a)</argsstring>
        <name>zero_after_free_allocator</name>
        <param>
          <type>const <ref refid="structzero__after__free__allocator" kindref="compound">zero_after_free_allocator</ref>&lt; U &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="257" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="257" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="structzero__after__free__allocator_1a82507a202c01cdce566875872bde9493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zero_after_free_allocator&lt; T &gt;::~zero_after_free_allocator</definition>
        <argsstring>()</argsstring>
        <name>~zero_after_free_allocator</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="258" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structzero__after__free__allocator_1a63a1610931a9656c9373bf5dce2db796" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zero_after_free_allocator&lt; T &gt;::deallocate</definition>
        <argsstring>(T *p, std::size_t n)</argsstring>
        <name>deallocate</name>
        <param>
          <type>T *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/allocators.h" line="262" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="262" bodyend="267"/>
        <references refid="cleanse_8cpp_1a5a4afb85dd16ecc1f6019c782db78663" compoundref="cleanse_8cpp" startline="10" endline="13">memory_cleanse</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3873">
        <label>zero_after_free_allocator&lt; T &gt;</label>
        <link refid="structzero__after__free__allocator"/>
        <childnode refid="3874" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3874">
        <label>std::allocator&lt; T &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3875">
        <label>zero_after_free_allocator&lt; T &gt;</label>
        <link refid="structzero__after__free__allocator"/>
        <childnode refid="3876" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3876">
        <label>std::allocator&lt; T &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/allocators.h" line="244" column="1" bodyfile="/home/dev/ds-160209/src/allocators.h" bodystart="243" bodyend="268"/>
    <listofallmembers>
      <member refid="structzero__after__free__allocator_1aab907d58a45f5bf4baeaefb373f00987" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>base</name></member>
      <member refid="structzero__after__free__allocator_1a197fbd41cb35428c2ed27c23b742ec9b" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>const_pointer</name></member>
      <member refid="structzero__after__free__allocator_1ab9e83de52f17c19f263bef6ba258fbed" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>const_reference</name></member>
      <member refid="structzero__after__free__allocator_1a63a1610931a9656c9373bf5dce2db796" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>deallocate</name></member>
      <member refid="structzero__after__free__allocator_1ab45fc8fc90d403b3b44715616e167658" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>difference_type</name></member>
      <member refid="structzero__after__free__allocator_1a5cc395dbe16fe421abb6cdbcb96e06bd" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>pointer</name></member>
      <member refid="structzero__after__free__allocator_1a27e208c4c218d79cf0df9b524c674ddb" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>reference</name></member>
      <member refid="structzero__after__free__allocator_1a85f5f3250c0519ea82ff33d980e73994" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>size_type</name></member>
      <member refid="structzero__after__free__allocator_1aebbf8f000c73198eec060af6734e1f91" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>value_type</name></member>
      <member refid="structzero__after__free__allocator_1a2206a4e5d2d3a0cd27d2baa50482f4a8" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>zero_after_free_allocator</name></member>
      <member refid="structzero__after__free__allocator_1a2822b64128f40c3b54ed6dbbf258730b" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>zero_after_free_allocator</name></member>
      <member refid="structzero__after__free__allocator_1a9d83915e027c0be7b08d6e5e8e4424ba" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>zero_after_free_allocator</name></member>
      <member refid="structzero__after__free__allocator_1a82507a202c01cdce566875872bde9493" prot="public" virt="non-virtual"><scope>zero_after_free_allocator</scope><name>~zero_after_free_allocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
