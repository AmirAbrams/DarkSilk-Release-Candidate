<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classleveldb_1_1_d_b_test" kind="class" language="C++" prot="public">
    <compoundname>leveldb::DBTest</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7" prot="private" static="no">
        <name>OptionConfig</name>
        <enumvalue id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a163b47baf2cf721dd67803249ea82afe" prot="private">
          <name>kDefault</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a649624cfa983dc6f8cc4374f936a8e65" prot="private">
          <name>kFilter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a7ca42a127723e396d8ae74dd46d3515e" prot="private">
          <name>kUncompressed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a9139cb3a45f68d68e214eeaebb8c60d9" prot="private">
          <name>kEnd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="194" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="194" bodyend="199"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1aa4bc31daa4cd4def3163c638f623d101" prot="private" static="no" mutable="no">
        <type>const <ref refid="classleveldb_1_1_filter_policy" kindref="compound">FilterPolicy</ref> *</type>
        <definition>const FilterPolicy* leveldb::DBTest::filter_policy_</definition>
        <argsstring></argsstring>
        <name>filter_policy_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="191" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1a3cc39d9674e4e47e2be82b023f791bd0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int leveldb::DBTest::option_config_</definition>
        <argsstring></argsstring>
        <name>option_config_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="200" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1ab7eb9815f522ad154816d72d1cc23a86" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::dbname_</definition>
        <argsstring></argsstring>
        <name>dbname_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="203" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1ae6bb66675fe5419ed647efd1bfd332f8" prot="public" static="no" mutable="no">
        <type><ref refid="classleveldb_1_1_special_env" kindref="compound">SpecialEnv</ref> *</type>
        <definition>SpecialEnv* leveldb::DBTest::env_</definition>
        <argsstring></argsstring>
        <name>env_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="204" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="204" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_d_b_test_1a2268045d59c3a74bba03877819e36b55" compoundref="db__test_8cc" startline="218" endline="223">~DBTest</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" prot="public" static="no" mutable="no">
        <type><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> *</type>
        <definition>DB* leveldb::DBTest::db_</definition>
        <argsstring></argsstring>
        <name>db_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="205" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="205" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_d_b_test_1a2268045d59c3a74bba03877819e36b55" compoundref="db__test_8cc" startline="218" endline="223">~DBTest</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" compoundref="db__test_8cc" startline="253" endline="255">dbfull</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1aee76446bbb9c34cdb1ae00318689aead" compoundref="db__test_8cc" startline="261" endline="264">Close</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" compoundref="db__test_8cc" startline="266" endline="271">DestroyAndReopen</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" compoundref="db__test_8cc" startline="273" endline="286">TryReopen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1adc05df912917d8de411d0672af04330f" prot="public" static="no" mutable="no">
        <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref></type>
        <definition>Options leveldb::DBTest::last_options_</definition>
        <argsstring></argsstring>
        <name>last_options_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="207" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1afc6fc9512e900de6ee10c5db15b22930" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::DBTest::DBTest</definition>
        <argsstring>()</argsstring>
        <name>DBTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="209" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="209" bodyend="216"/>
        <references refid="namespaceleveldb_1ae6b34bf2331983721554f284b1eaa1a1" compoundref="bloom_8cc" startline="91" endline="93">leveldb::NewBloomFilterPolicy</references>
        <references refid="namespaceleveldb_1_1test_1ac259aab85eedba03d163bb3a86ae4645" compoundref="testharness_8cc" startline="60" endline="65">leveldb::test::TmpDir</references>
        <references refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" compoundref="db__impl_8cc" startline="1482" endline="1511">leveldb::DestroyDB</references>
        <references refid="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" compoundref="db__test_8cc" startline="257" endline="259">Reopen</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a2268045d59c3a74bba03877819e36b55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::DBTest::~DBTest</definition>
        <argsstring>()</argsstring>
        <name>~DBTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="218" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="218" bodyend="223"/>
        <references refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" compoundref="db__test_8cc" startline="205">db_</references>
        <references refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" compoundref="db__impl_8cc" startline="1482" endline="1511">leveldb::DestroyDB</references>
        <references refid="classleveldb_1_1_d_b_test_1ae6bb66675fe5419ed647efd1bfd332f8" compoundref="db__test_8cc" startline="204">env_</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a587534fe403016f15cf1997ef7a40836" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::DBTest::ChangeOptions</definition>
        <argsstring>()</argsstring>
        <name>ChangeOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="227" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="227" bodyend="235"/>
        <references refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" compoundref="db__test_8cc" startline="266" endline="271">DestroyAndReopen</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a68db410e16195a3b67822bec05c06547" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref></type>
        <definition>Options leveldb::DBTest::CurrentOptions</definition>
        <argsstring>()</argsstring>
        <name>CurrentOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="238" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="238" bodyend="251"/>
        <references refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" compoundref="options_8h" startline="136">leveldb::Options::filter_policy</references>
        <references refid="structleveldb_1_1_options_1abdaf09c8bb3a788636ffb86cb93b01ab" compoundref="options_8h" startline="129">leveldb::Options::compression</references>
        <references refid="namespaceleveldb_1a047a8e77a76becb82bab4720994f6f9baf76e1b293dd8aa0709003431de425552" compoundref="options_8h" startline="26">leveldb::kNoCompression</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" compoundref="db__test_8cc" startline="273" endline="286">TryReopen</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_d_b_impl" kindref="compound">DBImpl</ref> *</type>
        <definition>DBImpl* leveldb::DBTest::dbfull</definition>
        <argsstring>()</argsstring>
        <name>dbfull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="253" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="253" bodyend="255"/>
        <references refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" compoundref="db__test_8cc" startline="205">db_</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1adaf171601eaaf2cd24edaa394752f733" compoundref="db__test_8cc" startline="336" endline="376">AllEntriesFor</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" compoundref="db__test_8cc" startline="430" endline="436">MakeTables</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1ad045c5203b4ea785ab335ffc3ea833b3" compoundref="db__test_8cc" startline="444" endline="455">DumpFileCounts</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::Reopen</definition>
        <argsstring>(Options *options=NULL)</argsstring>
        <name>Reopen</name>
        <param>
          <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> *</type>
          <declname>options</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="257" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="257" bodyend="259"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" compoundref="db__test_8cc" startline="273" endline="286">TryReopen</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1afc6fc9512e900de6ee10c5db15b22930" compoundref="db__test_8cc" startline="209" endline="216">DBTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1aee76446bbb9c34cdb1ae00318689aead" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="261" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="261" bodyend="264"/>
        <references refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" compoundref="db__test_8cc" startline="205">db_</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::DestroyAndReopen</definition>
        <argsstring>(Options *options=NULL)</argsstring>
        <name>DestroyAndReopen</name>
        <param>
          <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> *</type>
          <declname>options</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="266" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="266" bodyend="271"/>
        <references refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" compoundref="db__test_8cc" startline="205">db_</references>
        <references refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" compoundref="db__impl_8cc" startline="1482" endline="1511">leveldb::DestroyDB</references>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" compoundref="db__test_8cc" startline="273" endline="286">TryReopen</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1a587534fe403016f15cf1997ef7a40836" compoundref="db__test_8cc" startline="227" endline="235">ChangeOptions</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DBTest::TryReopen</definition>
        <argsstring>(Options *options)</argsstring>
        <name>TryReopen</name>
        <param>
          <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="273" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="273" bodyend="286"/>
        <references refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" compoundref="db__test_8cc" startline="205">db_</references>
        <references refid="classleveldb_1_1_d_b_test_1a68db410e16195a3b67822bec05c06547" compoundref="db__test_8cc" startline="238" endline="251">CurrentOptions</references>
        <references refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" compoundref="options_8h" startline="45">leveldb::Options::create_if_missing</references>
        <references refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" compoundref="db__impl_8cc" startline="1445" endline="1477">leveldb::DB::Open</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" compoundref="db__test_8cc" startline="257" endline="259">Reopen</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" compoundref="db__test_8cc" startline="266" endline="271">DestroyAndReopen</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DBTest::Put</definition>
        <argsstring>(const std::string &amp;k, const std::string &amp;v)</argsstring>
        <name>Put</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="288" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="288" bodyend="290"/>
        <references refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" compoundref="db__impl_8cc" startline="1431" endline="1435">leveldb::DB::Put</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" compoundref="db__test_8cc" startline="430" endline="436">MakeTables</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a25716ec93d525adbeea8ff71e8f3a9f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DBTest::Delete</definition>
        <argsstring>(const std::string &amp;k)</argsstring>
        <name>Delete</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="292" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="292" bodyend="294"/>
        <references refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" compoundref="db__impl_8cc" startline="1437" endline="1441">leveldb::DB::Delete</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a6af558e1fca4a9f1bbf86d72d3d4aa6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::Get</definition>
        <argsstring>(const std::string &amp;k, const Snapshot *snapshot=NULL)</argsstring>
        <name>Get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
          <declname>snapshot</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="296" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="296" bodyend="307"/>
        <references refid="structleveldb_1_1_read_options_1a1fa3fffc267dff89fce7c39d7c7b5b50" compoundref="options_8h" startline="159">leveldb::ReadOptions::snapshot</references>
        <references refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911">leveldb::DB::Get</references>
        <references refid="classleveldb_1_1_status_1ad5462f26196fc04d72221d2fdf1872ca" compoundref="status_8h" startline="55" endline="55">leveldb::Status::IsNotFound</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" compoundref="status_8cc" startline="36" endline="73">leveldb::Status::ToString</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::Contents</definition>
        <argsstring>()</argsstring>
        <name>Contents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="311" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="311" bodyend="334"/>
        <references refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32">leveldb::DB::NewIterator</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
        <references refid="classleveldb_1_1_d_b_test_1ad162fa0f5a31e61ee94ba9f45af716f8" compoundref="db__test_8cc" startline="463" endline="471">IterStatus</references>
        <references refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3">leveldb::Iterator::SeekToLast</references>
        <references refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e">leveldb::Iterator::Prev</references>
        <references refid="testharness_8h_1a6058af464aa1533b961936d5f6c5aea0" compoundref="testharness_8h" startline="112">ASSERT_LT</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1adaf171601eaaf2cd24edaa394752f733" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::AllEntriesFor</definition>
        <argsstring>(const Slice &amp;user_key)</argsstring>
        <name>AllEntriesFor</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>user_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="336" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="336" bodyend="376"/>
        <references refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" compoundref="db__test_8cc" startline="253" endline="255">dbfull</references>
        <references refid="classleveldb_1_1_d_b_impl_1adba5bf4252bd94f7db50e62921b7ba53" compoundref="db__impl_8cc" startline="1066" endline="1070">leveldb::DBImpl::TEST_NewInternalIterator</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" compoundref="dbformat_8h" startline="53">leveldb::kTypeValue</references>
        <references refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44">leveldb::Iterator::Seek</references>
        <references refid="classleveldb_1_1_internal_key_1aed986eb7cb360bd6955097235ad267b6" compoundref="dbformat_8h" startline="154" endline="157">leveldb::InternalKey::Encode</references>
        <references refid="classleveldb_1_1_iterator_1ac84f34623a031b7eeb23409320f76376">leveldb::Iterator::status</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_status_1aa8b56d8fe2cd1873778de5d1e5407866" compoundref="status_8cc" startline="36" endline="73">leveldb::Status::ToString</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="namespaceleveldb_1a5a173b622e86c7a2f9beae3ac8818ac3" compoundref="dbformat_8h" startline="176" endline="186">leveldb::ParseInternalKey</references>
        <references refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220">leveldb::Iterator::key</references>
        <references refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" compoundref="options_8h" startline="41">leveldb::Options::comparator</references>
        <references refid="structleveldb_1_1_comparator_1a05dae6edcad3c7db23827c0233d74039">leveldb::Comparator::Compare</references>
        <references refid="structleveldb_1_1_parsed_internal_key_1aa6e30fcf3c95fc1485d60fa08efe2b9d" compoundref="dbformat_8h" startline="71">leveldb::ParsedInternalKey::user_key</references>
        <references refid="structleveldb_1_1_parsed_internal_key_1ac7c10a6f60f93982b886ad1fbbafd6c2" compoundref="dbformat_8h" startline="73">leveldb::ParsedInternalKey::type</references>
        <references refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c">leveldb::Iterator::value</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
        <references refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" compoundref="dbformat_8h" startline="52">leveldb::kTypeDeletion</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::DBTest::NumTableFilesAtLevel</definition>
        <argsstring>(int level)</argsstring>
        <name>NumTableFilesAtLevel</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="378" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="378" bodyend="384"/>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_d_b_1afcd557d80bac6668f20372c9e737d807">leveldb::DB::GetProperty</references>
        <references refid="namespaceleveldb_1a0a19109e7a2c8855c7565bd331d955b4" compoundref="logging_8cc" startline="36" endline="40">leveldb::NumberToString</references>
        <references refid="util_8h_1aa5ce96ec36f4413f820cec9c1831c070" compoundref="util_8h" startline="315" endline="318">atoi</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1a05fa745351a41ecc0165b391a605b79e" compoundref="db__test_8cc" startline="386" endline="392">TotalTableFiles</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1a0e4d6292bcbe450d34b558d48a51a331" compoundref="db__test_8cc" startline="395" endline="409">FilesPerLevel</referencedby>
        <referencedby refid="classleveldb_1_1_d_b_test_1ad045c5203b4ea785ab335ffc3ea833b3" compoundref="db__test_8cc" startline="444" endline="455">DumpFileCounts</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a05fa745351a41ecc0165b391a605b79e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::DBTest::TotalTableFiles</definition>
        <argsstring>()</argsstring>
        <name>TotalTableFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="386" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="386" bodyend="392"/>
        <references refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" compoundref="db__test_8cc" startline="378" endline="384">NumTableFilesAtLevel</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a0e4d6292bcbe450d34b558d48a51a331" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::FilesPerLevel</definition>
        <argsstring>()</argsstring>
        <name>FilesPerLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="395" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="395" bodyend="409"/>
        <references refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" compoundref="db__test_8cc" startline="378" endline="384">NumTableFilesAtLevel</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a0c6c0c1d470a50fdcb6cdbc54977e907" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::DBTest::CountFiles</definition>
        <argsstring>()</argsstring>
        <name>CountFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="411" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="411" bodyend="415"/>
        <references refid="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" compoundref="env_8h" startline="293" endline="295">leveldb::EnvWrapper::GetChildren</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a2b16106ccbd302127b5c0575e74e6be1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t leveldb::DBTest::Size</definition>
        <argsstring>(const Slice &amp;start, const Slice &amp;limit)</argsstring>
        <name>Size</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="417" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="417" bodyend="422"/>
        <references refid="classleveldb_1_1_d_b_1ad4d54aa1dbcecc8583b013ab2d67aeff">leveldb::DB::GetApproximateSizes</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a9b6cd10fd7c8fc54127b0c40c0ac7db5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::Compact</definition>
        <argsstring>(const Slice &amp;start, const Slice &amp;limit)</argsstring>
        <name>Compact</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="424" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="424" bodyend="426"/>
        <references refid="classleveldb_1_1_d_b_1aeea500cbc6704454b3be6908d5da8b3a">leveldb::DB::CompactRange</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::MakeTables</definition>
        <argsstring>(int n, const std::string &amp;small, const std::string &amp;large)</argsstring>
        <name>MakeTables</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>small</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>large</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="430" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="430" bodyend="436"/>
        <references refid="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" compoundref="db__test_8cc" startline="288" endline="290">Put</references>
        <references refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" compoundref="db__test_8cc" startline="253" endline="255">dbfull</references>
        <references refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" compoundref="db__impl_8cc" startline="590" endline="604">leveldb::DBImpl::TEST_CompactMemTable</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1ac291d06db907f5fee7caf04f44f65493" compoundref="db__test_8cc" startline="440" endline="442">FillLevels</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ac291d06db907f5fee7caf04f44f65493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::FillLevels</definition>
        <argsstring>(const std::string &amp;smallest, const std::string &amp;largest)</argsstring>
        <name>FillLevels</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>smallest</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>largest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="440" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="440" bodyend="442"/>
        <references refid="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" compoundref="db__test_8cc" startline="430" endline="436">MakeTables</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ad045c5203b4ea785ab335ffc3ea833b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::DumpFileCounts</definition>
        <argsstring>(const char *label)</argsstring>
        <name>DumpFileCounts</name>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="444" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="444" bodyend="455"/>
        <references refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" compoundref="db__test_8cc" startline="253" endline="255">dbfull</references>
        <references refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" compoundref="db__test_8cc" startline="378" endline="384">NumTableFilesAtLevel</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1afdfc077be555dea7eac220623f6d4deb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::DumpSSTableList</definition>
        <argsstring>()</argsstring>
        <name>DumpSSTableList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="457" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="457" bodyend="461"/>
        <references refid="classleveldb_1_1_d_b_1afcd557d80bac6668f20372c9e737d807">leveldb::DB::GetProperty</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ad162fa0f5a31e61ee94ba9f45af716f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::IterStatus</definition>
        <argsstring>(Iterator *iter)</argsstring>
        <name>IterStatus</name>
        <param>
          <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="463" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="463" bodyend="471"/>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220">leveldb::Iterator::key</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
        <references refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c">leveldb::Iterator::value</references>
        <referencedby refid="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" compoundref="db__test_8cc" startline="311" endline="334">Contents</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1abcb2ebeb0733670d7634079c587426d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::DBTest::DeleteAnSSTFile</definition>
        <argsstring>()</argsstring>
        <name>DeleteAnSSTFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="473" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="473" bodyend="485"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" compoundref="env_8h" startline="293" endline="295">leveldb::EnvWrapper::GetChildren</references>
        <references refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" compoundref="filename_8cc" startline="80" endline="124">leveldb::ParseFileName</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">leveldb::kTableFile</references>
        <references refid="classleveldb_1_1_env_wrapper_1af99d37829c3806a0e05979f5a7eb35af" compoundref="env_8h" startline="296" endline="296">leveldb::EnvWrapper::DeleteFile</references>
        <references refid="namespaceleveldb_1ac9107e52d0ead114d749dc4b06dfd3ec" compoundref="filename_8cc" startline="32" endline="35">leveldb::TableFileName</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::DBTest::RenameLDBToSST</definition>
        <argsstring>()</argsstring>
        <name>RenameLDBToSST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="488" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="488" bodyend="503"/>
        <references refid="testharness_8h_1a6892e90ee417adfb0c66aa7a49769895" compoundref="testharness_8h" startline="106">ASSERT_OK</references>
        <references refid="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" compoundref="env_8h" startline="293" endline="295">leveldb::EnvWrapper::GetChildren</references>
        <references refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" compoundref="filename_8cc" startline="80" endline="124">leveldb::ParseFileName</references>
        <references refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" compoundref="filename_8h" startline="23">leveldb::kTableFile</references>
        <references refid="namespaceleveldb_1ac9107e52d0ead114d749dc4b06dfd3ec" compoundref="filename_8cc" startline="32" endline="35">leveldb::TableFileName</references>
        <references refid="namespaceleveldb_1aa3f12c506ffc9bf556b6cc2185313c1a" compoundref="filename_8cc" startline="37" endline="40">leveldb::SSTTableFileName</references>
        <references refid="classleveldb_1_1_env_wrapper_1afbd271f58ef0f0db8f2973f0c947fdec" compoundref="env_8h" startline="302" endline="304">leveldb::EnvWrapper::RenameFile</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2992">
        <label>leveldb::FilterPolicy</label>
        <link refid="classleveldb_1_1_filter_policy"/>
      </node>
      <node id="2988">
        <label>leveldb::Env</label>
        <link refid="classleveldb_1_1_env"/>
      </node>
      <node id="2985">
        <label>leveldb::DBTest</label>
        <link refid="classleveldb_1_1_d_b_test"/>
        <childnode refid="2986" relation="usage">
          <edgelabel>env_</edgelabel>
        </childnode>
        <childnode refid="2991" relation="usage">
          <edgelabel>last_options_</edgelabel>
        </childnode>
        <childnode refid="2996" relation="usage">
          <edgelabel>db_</edgelabel>
        </childnode>
      </node>
      <node id="2995">
        <label>leveldb::Cache</label>
        <link refid="classleveldb_1_1_cache"/>
      </node>
      <node id="2986">
        <label>leveldb::SpecialEnv</label>
        <link refid="classleveldb_1_1_special_env"/>
        <childnode refid="2987" relation="public-inheritance">
        </childnode>
        <childnode refid="2989" relation="usage">
          <edgelabel>data_sync_error_</edgelabel>
          <edgelabel>manifest_write_error_</edgelabel>
          <edgelabel>manifest_sync_error_</edgelabel>
          <edgelabel>no_space_</edgelabel>
          <edgelabel>delay_data_sync_</edgelabel>
          <edgelabel>non_writable_</edgelabel>
        </childnode>
        <childnode refid="2990" relation="usage">
          <edgelabel>random_read_counter_</edgelabel>
        </childnode>
      </node>
      <node id="2996">
        <label>leveldb::DB</label>
        <link refid="classleveldb_1_1_d_b"/>
      </node>
      <node id="2991">
        <label>leveldb::Options</label>
        <link refid="structleveldb_1_1_options"/>
        <childnode refid="2992" relation="usage">
          <edgelabel>filter_policy</edgelabel>
        </childnode>
        <childnode refid="2993" relation="usage">
          <edgelabel>info_log</edgelabel>
        </childnode>
        <childnode refid="2988" relation="usage">
          <edgelabel>env</edgelabel>
        </childnode>
        <childnode refid="2994" relation="usage">
          <edgelabel>comparator</edgelabel>
        </childnode>
        <childnode refid="2995" relation="usage">
          <edgelabel>block_cache</edgelabel>
        </childnode>
      </node>
      <node id="2990">
        <label>leveldb::AtomicCounter</label>
      </node>
      <node id="2993">
        <label>leveldb::Logger</label>
        <link refid="classleveldb_1_1_logger"/>
      </node>
      <node id="2994">
        <label>leveldb::Comparator</label>
        <link refid="structleveldb_1_1_comparator"/>
      </node>
      <node id="2987">
        <label>leveldb::EnvWrapper</label>
        <link refid="classleveldb_1_1_env_wrapper"/>
        <childnode refid="2988" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2989">
        <label>leveldb::port::AtomicPointer</label>
        <link refid="classleveldb_1_1port_1_1_atomic_pointer"/>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="189" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="189" bodyend="504"/>
    <listofallmembers>
      <member refid="classleveldb_1_1_d_b_test_1adaf171601eaaf2cd24edaa394752f733" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>AllEntriesFor</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a587534fe403016f15cf1997ef7a40836" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>ChangeOptions</name></member>
      <member refid="classleveldb_1_1_d_b_test_1aee76446bbb9c34cdb1ae00318689aead" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Close</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a9b6cd10fd7c8fc54127b0c40c0ac7db5" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Compact</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Contents</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a0c6c0c1d470a50fdcb6cdbc54977e907" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>CountFiles</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a68db410e16195a3b67822bec05c06547" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>CurrentOptions</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>db_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>dbfull</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ab7eb9815f522ad154816d72d1cc23a86" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>dbname_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1afc6fc9512e900de6ee10c5db15b22930" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DBTest</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a25716ec93d525adbeea8ff71e8f3a9f4" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Delete</name></member>
      <member refid="classleveldb_1_1_d_b_test_1abcb2ebeb0733670d7634079c587426d2" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DeleteAnSSTFile</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DestroyAndReopen</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ad045c5203b4ea785ab335ffc3ea833b3" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DumpFileCounts</name></member>
      <member refid="classleveldb_1_1_d_b_test_1afdfc077be555dea7eac220623f6d4deb" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DumpSSTableList</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ae6bb66675fe5419ed647efd1bfd332f8" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>env_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a0e4d6292bcbe450d34b558d48a51a331" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>FilesPerLevel</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ac291d06db907f5fee7caf04f44f65493" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>FillLevels</name></member>
      <member refid="classleveldb_1_1_d_b_test_1aa4bc31daa4cd4def3163c638f623d101" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>filter_policy_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a6af558e1fca4a9f1bbf86d72d3d4aa6c" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Get</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ad162fa0f5a31e61ee94ba9f45af716f8" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>IterStatus</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a163b47baf2cf721dd67803249ea82afe" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>kDefault</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a9139cb3a45f68d68e214eeaebb8c60d9" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>kEnd</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a649624cfa983dc6f8cc4374f936a8e65" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>kFilter</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a7ca42a127723e396d8ae74dd46d3515e" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>kUncompressed</name></member>
      <member refid="classleveldb_1_1_d_b_test_1adc05df912917d8de411d0672af04330f" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>last_options_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>MakeTables</name></member>
      <member refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>NumTableFilesAtLevel</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a3cc39d9674e4e47e2be82b023f791bd0" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>option_config_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>OptionConfig</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Put</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>RenameLDBToSST</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Reopen</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a2b16106ccbd302127b5c0575e74e6be1" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Size</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a05fa745351a41ecc0165b391a605b79e" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>TotalTableFiles</name></member>
      <member refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>TryReopen</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a2268045d59c3a74bba03877819e36b55" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>~DBTest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
