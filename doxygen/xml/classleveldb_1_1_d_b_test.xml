<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classleveldb_1_1_d_b_test" kind="class" language="C++" prot="public">
    <compoundname>leveldb::DBTest</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7" prot="private" static="no">
        <name>OptionConfig</name>
        <enumvalue id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a163b47baf2cf721dd67803249ea82afe" prot="private">
          <name>kDefault</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a649624cfa983dc6f8cc4374f936a8e65" prot="private">
          <name>kFilter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a7ca42a127723e396d8ae74dd46d3515e" prot="private">
          <name>kUncompressed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a9139cb3a45f68d68e214eeaebb8c60d9" prot="private">
          <name>kEnd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="194" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="194" bodyend="199"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1aa4bc31daa4cd4def3163c638f623d101" prot="private" static="no" mutable="no">
        <type>const <ref refid="classleveldb_1_1_filter_policy" kindref="compound">FilterPolicy</ref> *</type>
        <definition>const FilterPolicy* leveldb::DBTest::filter_policy_</definition>
        <argsstring></argsstring>
        <name>filter_policy_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="191" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1a3cc39d9674e4e47e2be82b023f791bd0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int leveldb::DBTest::option_config_</definition>
        <argsstring></argsstring>
        <name>option_config_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="200" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1ab7eb9815f522ad154816d72d1cc23a86" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::dbname_</definition>
        <argsstring></argsstring>
        <name>dbname_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="203" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1ae6bb66675fe5419ed647efd1bfd332f8" prot="public" static="no" mutable="no">
        <type><ref refid="classleveldb_1_1_special_env" kindref="compound">SpecialEnv</ref> *</type>
        <definition>SpecialEnv* leveldb::DBTest::env_</definition>
        <argsstring></argsstring>
        <name>env_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="204" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" prot="public" static="no" mutable="no">
        <type><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> *</type>
        <definition>DB* leveldb::DBTest::db_</definition>
        <argsstring></argsstring>
        <name>db_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="205" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_d_b_test_1adc05df912917d8de411d0672af04330f" prot="public" static="no" mutable="no">
        <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref></type>
        <definition>Options leveldb::DBTest::last_options_</definition>
        <argsstring></argsstring>
        <name>last_options_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="207" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1afc6fc9512e900de6ee10c5db15b22930" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::DBTest::DBTest</definition>
        <argsstring>()</argsstring>
        <name>DBTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="209" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="209" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a2268045d59c3a74bba03877819e36b55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::DBTest::~DBTest</definition>
        <argsstring>()</argsstring>
        <name>~DBTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="218" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="218" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a587534fe403016f15cf1997ef7a40836" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::DBTest::ChangeOptions</definition>
        <argsstring>()</argsstring>
        <name>ChangeOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="227" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="227" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a68db410e16195a3b67822bec05c06547" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref></type>
        <definition>Options leveldb::DBTest::CurrentOptions</definition>
        <argsstring>()</argsstring>
        <name>CurrentOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="238" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="238" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_d_b_impl" kindref="compound">DBImpl</ref> *</type>
        <definition>DBImpl* leveldb::DBTest::dbfull</definition>
        <argsstring>()</argsstring>
        <name>dbfull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="253" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::Reopen</definition>
        <argsstring>(Options *options=NULL)</argsstring>
        <name>Reopen</name>
        <param>
          <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> *</type>
          <declname>options</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="257" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1aee76446bbb9c34cdb1ae00318689aead" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="261" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::DestroyAndReopen</definition>
        <argsstring>(Options *options=NULL)</argsstring>
        <name>DestroyAndReopen</name>
        <param>
          <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> *</type>
          <declname>options</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="266" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="266" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DBTest::TryReopen</definition>
        <argsstring>(Options *options)</argsstring>
        <name>TryReopen</name>
        <param>
          <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="273" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="273" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DBTest::Put</definition>
        <argsstring>(const std::string &amp;k, const std::string &amp;v)</argsstring>
        <name>Put</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="288" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a25716ec93d525adbeea8ff71e8f3a9f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::DBTest::Delete</definition>
        <argsstring>(const std::string &amp;k)</argsstring>
        <name>Delete</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="292" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a6af558e1fca4a9f1bbf86d72d3d4aa6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::Get</definition>
        <argsstring>(const std::string &amp;k, const Snapshot *snapshot=NULL)</argsstring>
        <name>Get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
          <declname>snapshot</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="296" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="296" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::Contents</definition>
        <argsstring>()</argsstring>
        <name>Contents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="311" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="311" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1adaf171601eaaf2cd24edaa394752f733" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::AllEntriesFor</definition>
        <argsstring>(const Slice &amp;user_key)</argsstring>
        <name>AllEntriesFor</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>user_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="336" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="336" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::DBTest::NumTableFilesAtLevel</definition>
        <argsstring>(int level)</argsstring>
        <name>NumTableFilesAtLevel</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="378" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="378" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a05fa745351a41ecc0165b391a605b79e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::DBTest::TotalTableFiles</definition>
        <argsstring>()</argsstring>
        <name>TotalTableFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="386" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="386" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a0e4d6292bcbe450d34b558d48a51a331" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::FilesPerLevel</definition>
        <argsstring>()</argsstring>
        <name>FilesPerLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="395" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="395" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a0c6c0c1d470a50fdcb6cdbc54977e907" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::DBTest::CountFiles</definition>
        <argsstring>()</argsstring>
        <name>CountFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="411" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="411" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a2b16106ccbd302127b5c0575e74e6be1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t leveldb::DBTest::Size</definition>
        <argsstring>(const Slice &amp;start, const Slice &amp;limit)</argsstring>
        <name>Size</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="417" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="417" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a9b6cd10fd7c8fc54127b0c40c0ac7db5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::Compact</definition>
        <argsstring>(const Slice &amp;start, const Slice &amp;limit)</argsstring>
        <name>Compact</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="424" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="424" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::MakeTables</definition>
        <argsstring>(int n, const std::string &amp;small, const std::string &amp;large)</argsstring>
        <name>MakeTables</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>small</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>large</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="430" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="430" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ac291d06db907f5fee7caf04f44f65493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::FillLevels</definition>
        <argsstring>(const std::string &amp;smallest, const std::string &amp;largest)</argsstring>
        <name>FillLevels</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>smallest</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>largest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="440" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="440" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ad045c5203b4ea785ab335ffc3ea833b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::DBTest::DumpFileCounts</definition>
        <argsstring>(const char *label)</argsstring>
        <name>DumpFileCounts</name>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="444" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="444" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1afdfc077be555dea7eac220623f6d4deb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::DumpSSTableList</definition>
        <argsstring>()</argsstring>
        <name>DumpSSTableList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="457" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="457" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1ad162fa0f5a31e61ee94ba9f45af716f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::DBTest::IterStatus</definition>
        <argsstring>(Iterator *iter)</argsstring>
        <name>IterStatus</name>
        <param>
          <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="463" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="463" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1abcb2ebeb0733670d7634079c587426d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool leveldb::DBTest::DeleteAnSSTFile</definition>
        <argsstring>()</argsstring>
        <name>DeleteAnSSTFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="473" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="473" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int leveldb::DBTest::RenameLDBToSST</definition>
        <argsstring>()</argsstring>
        <name>RenameLDBToSST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="488" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="488" bodyend="503"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1079">
        <label>leveldb::FilterPolicy</label>
        <link refid="classleveldb_1_1_filter_policy"/>
      </node>
      <node id="1075">
        <label>leveldb::Env</label>
        <link refid="classleveldb_1_1_env"/>
      </node>
      <node id="1072">
        <label>leveldb::DBTest</label>
        <link refid="classleveldb_1_1_d_b_test"/>
        <childnode refid="1073" relation="usage">
          <edgelabel>env_</edgelabel>
        </childnode>
        <childnode refid="1078" relation="usage">
          <edgelabel>last_options_</edgelabel>
        </childnode>
        <childnode refid="1083" relation="usage">
          <edgelabel>db_</edgelabel>
        </childnode>
      </node>
      <node id="1082">
        <label>leveldb::Cache</label>
        <link refid="classleveldb_1_1_cache"/>
      </node>
      <node id="1073">
        <label>leveldb::SpecialEnv</label>
        <link refid="classleveldb_1_1_special_env"/>
        <childnode refid="1074" relation="public-inheritance">
        </childnode>
        <childnode refid="1076" relation="usage">
          <edgelabel>data_sync_error_</edgelabel>
          <edgelabel>manifest_write_error_</edgelabel>
          <edgelabel>manifest_sync_error_</edgelabel>
          <edgelabel>no_space_</edgelabel>
          <edgelabel>delay_data_sync_</edgelabel>
          <edgelabel>non_writable_</edgelabel>
        </childnode>
        <childnode refid="1077" relation="usage">
          <edgelabel>random_read_counter_</edgelabel>
        </childnode>
      </node>
      <node id="1083">
        <label>leveldb::DB</label>
        <link refid="classleveldb_1_1_d_b"/>
      </node>
      <node id="1078">
        <label>leveldb::Options</label>
        <link refid="structleveldb_1_1_options"/>
        <childnode refid="1079" relation="usage">
          <edgelabel>filter_policy</edgelabel>
        </childnode>
        <childnode refid="1080" relation="usage">
          <edgelabel>info_log</edgelabel>
        </childnode>
        <childnode refid="1075" relation="usage">
          <edgelabel>env</edgelabel>
        </childnode>
        <childnode refid="1081" relation="usage">
          <edgelabel>comparator</edgelabel>
        </childnode>
        <childnode refid="1082" relation="usage">
          <edgelabel>block_cache</edgelabel>
        </childnode>
      </node>
      <node id="1077">
        <label>leveldb::AtomicCounter</label>
      </node>
      <node id="1080">
        <label>leveldb::Logger</label>
        <link refid="classleveldb_1_1_logger"/>
      </node>
      <node id="1081">
        <label>leveldb::Comparator</label>
        <link refid="structleveldb_1_1_comparator"/>
      </node>
      <node id="1074">
        <label>leveldb::EnvWrapper</label>
        <link refid="classleveldb_1_1_env_wrapper"/>
        <childnode refid="1075" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1076">
        <label>leveldb::port::AtomicPointer</label>
        <link refid="classleveldb_1_1port_1_1_atomic_pointer"/>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="189" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="189" bodyend="504"/>
    <listofallmembers>
      <member refid="classleveldb_1_1_d_b_test_1adaf171601eaaf2cd24edaa394752f733" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>AllEntriesFor</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a587534fe403016f15cf1997ef7a40836" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>ChangeOptions</name></member>
      <member refid="classleveldb_1_1_d_b_test_1aee76446bbb9c34cdb1ae00318689aead" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Close</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a9b6cd10fd7c8fc54127b0c40c0ac7db5" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Compact</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a3cf871664bd22c6ed2d6c2a8834b49fc" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Contents</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a0c6c0c1d470a50fdcb6cdbc54977e907" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>CountFiles</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a68db410e16195a3b67822bec05c06547" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>CurrentOptions</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a2c3db8773f1aa15128432a87489b0d5a" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>db_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a67de35d247ea077c1e4fdf2a7a0f0514" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>dbfull</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ab7eb9815f522ad154816d72d1cc23a86" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>dbname_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1afc6fc9512e900de6ee10c5db15b22930" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DBTest</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a25716ec93d525adbeea8ff71e8f3a9f4" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Delete</name></member>
      <member refid="classleveldb_1_1_d_b_test_1abcb2ebeb0733670d7634079c587426d2" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DeleteAnSSTFile</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ab798a43e7feab6dddc8fa1eb7a5f61f6" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DestroyAndReopen</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ad045c5203b4ea785ab335ffc3ea833b3" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DumpFileCounts</name></member>
      <member refid="classleveldb_1_1_d_b_test_1afdfc077be555dea7eac220623f6d4deb" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>DumpSSTableList</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ae6bb66675fe5419ed647efd1bfd332f8" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>env_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a0e4d6292bcbe450d34b558d48a51a331" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>FilesPerLevel</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ac291d06db907f5fee7caf04f44f65493" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>FillLevels</name></member>
      <member refid="classleveldb_1_1_d_b_test_1aa4bc31daa4cd4def3163c638f623d101" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>filter_policy_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a6af558e1fca4a9f1bbf86d72d3d4aa6c" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Get</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ad162fa0f5a31e61ee94ba9f45af716f8" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>IterStatus</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a163b47baf2cf721dd67803249ea82afe" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>kDefault</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a9139cb3a45f68d68e214eeaebb8c60d9" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>kEnd</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a649624cfa983dc6f8cc4374f936a8e65" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>kFilter</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7a7ca42a127723e396d8ae74dd46d3515e" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>kUncompressed</name></member>
      <member refid="classleveldb_1_1_d_b_test_1adc05df912917d8de411d0672af04330f" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>last_options_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ace931478fa5ad2c48a8aa95a344e19fd" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>MakeTables</name></member>
      <member refid="classleveldb_1_1_d_b_test_1aa7c845810f6d57b0655eda370e8de33f" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>NumTableFilesAtLevel</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a3cc39d9674e4e47e2be82b023f791bd0" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>option_config_</name></member>
      <member refid="classleveldb_1_1_d_b_test_1ade8d30892ac3c99c2a0488c119ef25e7" prot="private" virt="non-virtual"><scope>leveldb::DBTest</scope><name>OptionConfig</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a5ec1a1d5ecc1744f325159eb81e46514" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Put</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a104ae4b9292787d0cfc9a9fb93cc5fa8" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>RenameLDBToSST</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a38170a082cbc71fb446408ff5634c797" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Reopen</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a2b16106ccbd302127b5c0575e74e6be1" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>Size</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a05fa745351a41ecc0165b391a605b79e" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>TotalTableFiles</name></member>
      <member refid="classleveldb_1_1_d_b_test_1aee588b2d13db6be2a651a8fabeac5c79" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>TryReopen</name></member>
      <member refid="classleveldb_1_1_d_b_test_1a2268045d59c3a74bba03877819e36b55" prot="public" virt="non-virtual"><scope>leveldb::DBTest</scope><name>~DBTest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
