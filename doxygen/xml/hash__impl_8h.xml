<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="hash__impl_8h" kind="file" language="C++">
    <compoundname>hash_impl.h</compoundname>
    <includes refid="secp256k1_2src_2hash_8h" local="yes">hash.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includedby refid="bench__internal_8c" local="yes">/home/dev/ds-160209/src/secp256k1/src/bench_internal.c</includedby>
    <includedby refid="ecmult__gen__impl_8h" local="yes">/home/dev/ds-160209/src/secp256k1/src/ecmult_gen_impl.h</includedby>
    <includedby refid="secp256k1_8c" local="yes">/home/dev/ds-160209/src/secp256k1/src/secp256k1.c</includedby>
    <incdepgraph>
      <node id="22486">
        <label>stdlib.h</label>
      </node>
      <node id="22484">
        <label>/home/dev/ds-160209/src/secp256k1/src/hash_impl.h</label>
        <link refid="hash_impl.h"/>
        <childnode refid="22485" relation="include">
        </childnode>
        <childnode refid="22486" relation="include">
        </childnode>
        <childnode refid="22487" relation="include">
        </childnode>
        <childnode refid="22488" relation="include">
        </childnode>
      </node>
      <node id="22488">
        <label>string.h</label>
      </node>
      <node id="22485">
        <label>hash.h</label>
        <link refid="secp256k1_2src_2hash_8h"/>
        <childnode refid="22486" relation="include">
        </childnode>
        <childnode refid="22487" relation="include">
        </childnode>
      </node>
      <node id="22487">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22494">
        <label>/home/dev/ds-160209/src/secp256k1/src/gen_context.c</label>
        <link refid="gen__context_8c"/>
      </node>
      <node id="22489">
        <label>/home/dev/ds-160209/src/secp256k1/src/hash_impl.h</label>
        <link refid="hash_impl.h"/>
        <childnode refid="22490" relation="include">
        </childnode>
        <childnode refid="22491" relation="include">
        </childnode>
        <childnode refid="22492" relation="include">
        </childnode>
      </node>
      <node id="22493">
        <label>/home/dev/ds-160209/src/secp256k1/src/tests.c</label>
        <link refid="tests_8c"/>
      </node>
      <node id="22492">
        <label>/home/dev/ds-160209/src/secp256k1/src/secp256k1.c</label>
        <link refid="secp256k1_8c"/>
        <childnode refid="22490" relation="include">
        </childnode>
        <childnode refid="22493" relation="include">
        </childnode>
      </node>
      <node id="22490">
        <label>/home/dev/ds-160209/src/secp256k1/src/bench_internal.c</label>
        <link refid="bench__internal_8c"/>
      </node>
      <node id="22491">
        <label>/home/dev/ds-160209/src/secp256k1/src/ecmult_gen_impl.h</label>
        <link refid="ecmult__gen__impl_8h"/>
        <childnode refid="22492" relation="include">
        </childnode>
        <childnode refid="22494" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="hash__impl_8h_1ab0a0d1ad13c7e4d3cb38c89f7127c85a" prot="public" static="no">
        <name>Ch</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>((z) ^ ((x) &amp; ((y) ^ (z))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="16" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hash__impl_8h_1a447cd1d7fb703b62666400976be24bf3" prot="public" static="no">
        <name>Maj</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>(((x) &amp; (y)) | ((z) &amp; ((x) | (y))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="17" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hash__impl_8h_1a613f88ad88919b6ed21ff223070f9a21" prot="public" static="no">
        <name>Sigma0</name>
        <param><defname>x</defname></param>
        <initializer>(((x) &gt;&gt; 2 | (x) &lt;&lt; 30) ^ ((x) &gt;&gt; 13 | (x) &lt;&lt; 19) ^ ((x) &gt;&gt; 22 | (x) &lt;&lt; 10))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="18" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hash__impl_8h_1a6d34508d6d962274083fcd992fb4e340" prot="public" static="no">
        <name>Sigma1</name>
        <param><defname>x</defname></param>
        <initializer>(((x) &gt;&gt; 6 | (x) &lt;&lt; 26) ^ ((x) &gt;&gt; 11 | (x) &lt;&lt; 21) ^ ((x) &gt;&gt; 25 | (x) &lt;&lt; 7))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="19" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" prot="public" static="no">
        <name>sigma0</name>
        <param><defname>x</defname></param>
        <initializer>(((x) &gt;&gt; 7 | (x) &lt;&lt; 25) ^ ((x) &gt;&gt; 18 | (x) &lt;&lt; 14) ^ ((x) &gt;&gt; 3))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="20" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" prot="public" static="no">
        <name>sigma1</name>
        <param><defname>x</defname></param>
        <initializer>(((x) &gt;&gt; 17 | (x) &lt;&lt; 15) ^ ((x) &gt;&gt; 19 | (x) &lt;&lt; 13) ^ ((x) &gt;&gt; 10))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="21" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" prot="public" static="no">
        <name>Round</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <param><defname>e</defname></param>
        <param><defname>f</defname></param>
        <param><defname>g</defname></param>
        <param><defname>h</defname></param>
        <param><defname>k</defname></param>
        <param><defname>w</defname></param>
        <initializer>do { \
    <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> t1 = (h) + <ref refid="hash__impl_8h_1a6d34508d6d962274083fcd992fb4e340" kindref="member">Sigma1</ref>(e) + <ref refid="hash__impl_8h_1ab0a0d1ad13c7e4d3cb38c89f7127c85a" kindref="member">Ch</ref>((e), (f), (g)) + (k) + (w); \
    <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> t2 = <ref refid="hash__impl_8h_1a613f88ad88919b6ed21ff223070f9a21" kindref="member">Sigma0</ref>(a) + <ref refid="hash__impl_8h_1a447cd1d7fb703b62666400976be24bf3" kindref="member">Maj</ref>((a), (b), (c)); \
    (d) += t1; \
    (h) = t1 + t2; \
} while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="23" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" prot="public" static="no">
        <name>BE32</name>
        <param><defname>p</defname></param>
        <initializer>((((p) &amp; 0xFF) &lt;&lt; 24) | (((p) &amp; 0xFF00) &lt;&lt; 8) | (((p) &amp; 0xFF0000) &gt;&gt; 8) | (((p) &amp; 0xFF000000) &gt;&gt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="33" column="10" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hash__impl_8h_1abcb6a95ed605c2bfb19eda1ced4a8f7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_sha256_initialize</definition>
        <argsstring>(secp256k1_sha256_t *hash)</argsstring>
        <name>secp256k1_sha256_initialize</name>
        <param>
          <type><ref refid="structsecp256k1__sha256__t" kindref="compound">secp256k1_sha256_t</ref> *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="36" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="hash__impl_8h_1aca0644b78a0554cae2f366702abf0b09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_sha256_transform</definition>
        <argsstring>(uint32_t *s, const uint32_t *chunk)</argsstring>
        <name>secp256k1_sha256_transform</name>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform one SHA-256 transformation, processing 16 big endian 32-bit words. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="49" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="49" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="hash__impl_8h_1ada7b815d52a8a6f79bafe205983693be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_sha256_write</definition>
        <argsstring>(secp256k1_sha256_t *hash, const unsigned char *data, size_t len)</argsstring>
        <name>secp256k1_sha256_write</name>
        <param>
          <type><ref refid="structsecp256k1__sha256__t" kindref="compound">secp256k1_sha256_t</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="131" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="131" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="hash__impl_8h_1ab88a555e2b13d6d06e20a6a459abae08" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_sha256_finalize</definition>
        <argsstring>(secp256k1_sha256_t *hash, unsigned char *out32)</argsstring>
        <name>secp256k1_sha256_finalize</name>
        <param>
          <type><ref refid="structsecp256k1__sha256__t" kindref="compound">secp256k1_sha256_t</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="148" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="148" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="hash__impl_8h_1a078ac2e7574c2c3d1eb1ccc0950e84d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_hmac_sha256_initialize</definition>
        <argsstring>(secp256k1_hmac_sha256_t *hash, const unsigned char *key, size_t keylen)</argsstring>
        <name>secp256k1_hmac_sha256_initialize</name>
        <param>
          <type><ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="164" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="164" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="hash__impl_8h_1a985f5f05c10dca7f592541d95c84081f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_hmac_sha256_write</definition>
        <argsstring>(secp256k1_hmac_sha256_t *hash, const unsigned char *data, size_t size)</argsstring>
        <name>secp256k1_hmac_sha256_write</name>
        <param>
          <type><ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="192" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="hash__impl_8h_1a6f85fe02b7546db62cc03adb03613d16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_hmac_sha256_finalize</definition>
        <argsstring>(secp256k1_hmac_sha256_t *hash, unsigned char *out32)</argsstring>
        <name>secp256k1_hmac_sha256_finalize</name>
        <param>
          <type><ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="196" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="196" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="hash__impl_8h_1a9dd561651b3373fe94e80295dfdd43a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_rfc6979_hmac_sha256_initialize</definition>
        <argsstring>(secp256k1_rfc6979_hmac_sha256_t *rng, const unsigned char *key, size_t keylen)</argsstring>
        <name>secp256k1_rfc6979_hmac_sha256_initialize</name>
        <param>
          <type><ref refid="structsecp256k1__rfc6979__hmac__sha256__t" kindref="compound">secp256k1_rfc6979_hmac_sha256_t</ref> *</type>
          <declname>rng</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="205" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="205" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="hash__impl_8h_1a993c3261472ef00e4738e0fe7a99b7cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_rfc6979_hmac_sha256_generate</definition>
        <argsstring>(secp256k1_rfc6979_hmac_sha256_t *rng, unsigned char *out, size_t outlen)</argsstring>
        <name>secp256k1_rfc6979_hmac_sha256_generate</name>
        <param>
          <type><ref refid="structsecp256k1__rfc6979__hmac__sha256__t" kindref="compound">secp256k1_rfc6979_hmac_sha256_t</ref> *</type>
          <declname>rng</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>outlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="235" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="235" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="hash__impl_8h_1a27832ea2666bbf9e5c7a18559660e9da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_rfc6979_hmac_sha256_finalize</definition>
        <argsstring>(secp256k1_rfc6979_hmac_sha256_t *rng)</argsstring>
        <name>secp256k1_rfc6979_hmac_sha256_finalize</name>
        <param>
          <type><ref refid="structsecp256k1__rfc6979__hmac__sha256__t" kindref="compound">secp256k1_rfc6979_hmac_sha256_t</ref> *</type>
          <declname>rng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" line="266" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h" bodystart="266" bodyend="270"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014<sp/>Pieter<sp/>Wuille<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SECP256K1_HASH_IMPL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SECP256K1_HASH_IMPL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1_2src_2hash_8h" kindref="compound">hash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="hash__impl_8h_1ab0a0d1ad13c7e4d3cb38c89f7127c85a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Ch(x,y,z)<sp/>((z)<sp/>^<sp/>((x)<sp/>&amp;<sp/>((y)<sp/>^<sp/>(z))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="hash__impl_8h_1a447cd1d7fb703b62666400976be24bf3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Maj(x,y,z)<sp/>(((x)<sp/>&amp;<sp/>(y))<sp/>|<sp/>((z)<sp/>&amp;<sp/>((x)<sp/>|<sp/>(y))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="hash__impl_8h_1a613f88ad88919b6ed21ff223070f9a21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Sigma0(x)<sp/>(((x)<sp/>&gt;&gt;<sp/>2<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>30)<sp/>^<sp/>((x)<sp/>&gt;&gt;<sp/>13<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>19)<sp/>^<sp/>((x)<sp/>&gt;&gt;<sp/>22<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>10))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="hash__impl_8h_1a6d34508d6d962274083fcd992fb4e340" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Sigma1(x)<sp/>(((x)<sp/>&gt;&gt;<sp/>6<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>26)<sp/>^<sp/>((x)<sp/>&gt;&gt;<sp/>11<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>21)<sp/>^<sp/>((x)<sp/>&gt;&gt;<sp/>25<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>7))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sigma0(x)<sp/>(((x)<sp/>&gt;&gt;<sp/>7<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>25)<sp/>^<sp/>((x)<sp/>&gt;&gt;<sp/>18<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>14)<sp/>^<sp/>((x)<sp/>&gt;&gt;<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sigma1(x)<sp/>(((x)<sp/>&gt;&gt;<sp/>17<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>15)<sp/>^<sp/>((x)<sp/>&gt;&gt;<sp/>19<sp/>|<sp/>(x)<sp/>&lt;&lt;<sp/>13)<sp/>^<sp/>((x)<sp/>&gt;&gt;<sp/>10))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Round(a,b,c,d,e,f,g,h,k,w)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uint32_t<sp/>t1<sp/>=<sp/>(h)<sp/>+<sp/>Sigma1(e)<sp/>+<sp/>Ch((e),<sp/>(f),<sp/>(g))<sp/>+<sp/>(k)<sp/>+<sp/>(w);<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uint32_t<sp/>t2<sp/>=<sp/>Sigma0(a)<sp/>+<sp/>Maj((a),<sp/>(b),<sp/>(c));<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(d)<sp/>+=<sp/>t1;<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(h)<sp/>=<sp/>t1<sp/>+<sp/>t2;<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor">}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WORDS_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE32(x)<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE32(p)<sp/>((((p)<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(((p)<sp/>&amp;<sp/>0xFF00)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(((p)<sp/>&amp;<sp/>0xFF0000)<sp/>&gt;&gt;<sp/>8)<sp/>|<sp/>(((p)<sp/>&amp;<sp/>0xFF000000)<sp/>&gt;&gt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_sha256_initialize(<ref refid="structsecp256k1__sha256__t" kindref="compound">secp256k1_sha256_t</ref><sp/>*<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[0]<sp/>=<sp/>0x6a09e667ul;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[1]<sp/>=<sp/>0xbb67ae85ul;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[2]<sp/>=<sp/>0x3c6ef372ul;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[3]<sp/>=<sp/>0xa54ff53aul;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[4]<sp/>=<sp/>0x510e527ful;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[5]<sp/>=<sp/>0x9b05688cul;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[6]<sp/>=<sp/>0x1f83d9abul;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[7]<sp/>=<sp/>0x5be0cd19ul;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1aa427890685bc0a6db0e892d08b1918b8" kindref="member">bytes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_sha256_transform(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>*<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>*<sp/>chunk)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>a<sp/>=<sp/>s[0],<sp/>b<sp/>=<sp/>s[1],<sp/>c<sp/>=<sp/>s[2],<sp/>d<sp/>=<sp/>s[3],<sp/>e<sp/>=<sp/>s[4],<sp/>f<sp/>=<sp/>s[5],<sp/>g<sp/>=<sp/>s[6],<sp/>h<sp/>=<sp/>s[7];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>w0,<sp/>w1,<sp/>w2,<sp/>w3,<sp/>w4,<sp/>w5,<sp/>w6,<sp/>w7,<sp/>w8,<sp/>w9,<sp/>w10,<sp/>w11,<sp/>w12,<sp/>w13,<sp/>w14,<sp/>w15;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>0x428a2f98,<sp/>w0<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[0]));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>0x71374491,<sp/>w1<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[1]));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>0xb5c0fbcf,<sp/>w2<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[2]));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>0xe9b5dba5,<sp/>w3<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[3]));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>0x3956c25b,<sp/>w4<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[4]));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>0x59f111f1,<sp/>w5<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[5]));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>0x923f82a4,<sp/>w6<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[6]));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>0xab1c5ed5,<sp/>w7<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[7]));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>0xd807aa98,<sp/>w8<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[8]));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>0x12835b01,<sp/>w9<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[9]));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>0x243185be,<sp/>w10<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[10]));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>0x550c7dc3,<sp/>w11<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[11]));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>0x72be5d74,<sp/>w12<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[12]));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>0x80deb1fe,<sp/>w13<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[13]));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>0x9bdc06a7,<sp/>w14<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[14]));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>0xc19bf174,<sp/>w15<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(chunk[15]));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>0xe49b69c1,<sp/>w0<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w14)<sp/>+<sp/>w9<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w1));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>0xefbe4786,<sp/>w1<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w15)<sp/>+<sp/>w10<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w2));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>0x0fc19dc6,<sp/>w2<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w0)<sp/>+<sp/>w11<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w3));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>0x240ca1cc,<sp/>w3<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w1)<sp/>+<sp/>w12<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w4));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>0x2de92c6f,<sp/>w4<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w2)<sp/>+<sp/>w13<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w5));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>0x4a7484aa,<sp/>w5<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w3)<sp/>+<sp/>w14<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w6));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>0x5cb0a9dc,<sp/>w6<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w4)<sp/>+<sp/>w15<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w7));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>0x76f988da,<sp/>w7<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w5)<sp/>+<sp/>w0<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w8));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>0x983e5152,<sp/>w8<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w6)<sp/>+<sp/>w1<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w9));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>0xa831c66d,<sp/>w9<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w7)<sp/>+<sp/>w2<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w10));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>0xb00327c8,<sp/>w10<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w8)<sp/>+<sp/>w3<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w11));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>0xbf597fc7,<sp/>w11<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w9)<sp/>+<sp/>w4<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w12));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>0xc6e00bf3,<sp/>w12<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w10)<sp/>+<sp/>w5<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w13));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>0xd5a79147,<sp/>w13<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w11)<sp/>+<sp/>w6<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w14));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>0x06ca6351,<sp/>w14<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w12)<sp/>+<sp/>w7<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w15));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>0x14292967,<sp/>w15<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w13)<sp/>+<sp/>w8<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w0));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>0x27b70a85,<sp/>w0<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w14)<sp/>+<sp/>w9<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w1));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>0x2e1b2138,<sp/>w1<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w15)<sp/>+<sp/>w10<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w2));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>0x4d2c6dfc,<sp/>w2<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w0)<sp/>+<sp/>w11<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w3));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>0x53380d13,<sp/>w3<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w1)<sp/>+<sp/>w12<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w4));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>0x650a7354,<sp/>w4<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w2)<sp/>+<sp/>w13<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w5));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>0x766a0abb,<sp/>w5<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w3)<sp/>+<sp/>w14<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w6));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>0x81c2c92e,<sp/>w6<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w4)<sp/>+<sp/>w15<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w7));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>0x92722c85,<sp/>w7<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w5)<sp/>+<sp/>w0<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w8));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>0xa2bfe8a1,<sp/>w8<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w6)<sp/>+<sp/>w1<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w9));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>0xa81a664b,<sp/>w9<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w7)<sp/>+<sp/>w2<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w10));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>0xc24b8b70,<sp/>w10<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w8)<sp/>+<sp/>w3<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w11));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>0xc76c51a3,<sp/>w11<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w9)<sp/>+<sp/>w4<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w12));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>0xd192e819,<sp/>w12<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w10)<sp/>+<sp/>w5<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w13));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>0xd6990624,<sp/>w13<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w11)<sp/>+<sp/>w6<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w14));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>0xf40e3585,<sp/>w14<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w12)<sp/>+<sp/>w7<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w15));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>0x106aa070,<sp/>w15<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w13)<sp/>+<sp/>w8<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w0));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>0x19a4c116,<sp/>w0<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w14)<sp/>+<sp/>w9<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w1));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>0x1e376c08,<sp/>w1<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w15)<sp/>+<sp/>w10<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w2));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>0x2748774c,<sp/>w2<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w0)<sp/>+<sp/>w11<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w3));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>0x34b0bcb5,<sp/>w3<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w1)<sp/>+<sp/>w12<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w4));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>0x391c0cb3,<sp/>w4<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w2)<sp/>+<sp/>w13<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w5));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>0x4ed8aa4a,<sp/>w5<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w3)<sp/>+<sp/>w14<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w6));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>0x5b9cca4f,<sp/>w6<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w4)<sp/>+<sp/>w15<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w7));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>0x682e6ff3,<sp/>w7<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w5)<sp/>+<sp/>w0<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w8));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>0x748f82ee,<sp/>w8<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w6)<sp/>+<sp/>w1<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w9));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>0x78a5636f,<sp/>w9<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w7)<sp/>+<sp/>w2<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w10));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>0x84c87814,<sp/>w10<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w8)<sp/>+<sp/>w3<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w11));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>0x8cc70208,<sp/>w11<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w9)<sp/>+<sp/>w4<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w12));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>0x90befffa,<sp/>w12<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w10)<sp/>+<sp/>w5<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w13));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>c,<sp/>0xa4506ceb,<sp/>w13<sp/>+=<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w11)<sp/>+<sp/>w6<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w14));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>b,<sp/>0xbef9a3f7,<sp/>w14<sp/>+<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w12)<sp/>+<sp/>w7<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w15));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hash__impl_8h_1a4a6398f77b0cf603722649d4fd67260f" kindref="member">Round</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h,<sp/>a,<sp/>0xc67178f2,<sp/>w15<sp/>+<sp/><ref refid="hash__impl_8h_1a0347251dc63b7abe5d4c500544c24a97" kindref="member">sigma1</ref>(w13)<sp/>+<sp/>w8<sp/>+<sp/><ref refid="hash__impl_8h_1a672bd39bdf2f6dc295a23ddd109175ff" kindref="member">sigma0</ref>(w0));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>s[0]<sp/>+=<sp/>a;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>s[1]<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>s[2]<sp/>+=<sp/>c;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>s[3]<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>s[4]<sp/>+=<sp/>e;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>s[5]<sp/>+=<sp/>f;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>s[6]<sp/>+=<sp/>g;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>s[7]<sp/>+=<sp/>h;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_sha256_write(<ref refid="structsecp256k1__sha256__t" kindref="compound">secp256k1_sha256_t</ref><sp/>*<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufsize<sp/>=<sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1aa427890685bc0a6db0e892d08b1918b8" kindref="member">bytes</ref><sp/>&amp;<sp/>0x3F;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1aa427890685bc0a6db0e892d08b1918b8" kindref="member">bytes</ref><sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bufsize<sp/>+<sp/>len<sp/>&gt;=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>the<sp/>buffer,<sp/>and<sp/>process<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hash-&gt;<ref refid="structsecp256k1__sha256__t_1a95b02d7e4d8902c1998f8ebb598a9168" kindref="member">buf</ref>)<sp/>+<sp/>bufsize,<sp/>data,<sp/>64<sp/>-<sp/>bufsize);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>64<sp/>-<sp/>bufsize;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>64<sp/>-<sp/>bufsize;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_transform(hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>,<sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1a95b02d7e4d8902c1998f8ebb598a9168" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufsize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>the<sp/>buffer<sp/>with<sp/>what<sp/>remains.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hash-&gt;<ref refid="structsecp256k1__sha256__t_1a95b02d7e4d8902c1998f8ebb598a9168" kindref="member">buf</ref>)<sp/>+<sp/>bufsize,<sp/>data,<sp/>len);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_sha256_finalize(<ref refid="structsecp256k1__sha256__t" kindref="compound">secp256k1_sha256_t</ref><sp/>*hash,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out32)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pad[64]<sp/>=<sp/>{0x80,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>sizedesc[2];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>out[8];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>sizedesc[0]<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(hash-&gt;<ref refid="structsecp256k1__sha256__t_1aa427890685bc0a6db0e892d08b1918b8" kindref="member">bytes</ref><sp/>&gt;&gt;<sp/>29);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>sizedesc[1]<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(hash-&gt;<ref refid="structsecp256k1__sha256__t_1aa427890685bc0a6db0e892d08b1918b8" kindref="member">bytes</ref><sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_write(hash,<sp/>pad,<sp/>1<sp/>+<sp/>((119<sp/>-<sp/>(hash-&gt;<ref refid="structsecp256k1__sha256__t_1aa427890685bc0a6db0e892d08b1918b8" kindref="member">bytes</ref><sp/>%<sp/>64))<sp/>%<sp/>64));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_write(hash,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sizedesc,<sp/>8);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/><ref refid="hash__impl_8h_1a1d0e2eaadc95216b3a3c775409a6093e" kindref="member">BE32</ref>(hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[i]);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="structsecp256k1__sha256__t_1ae795b4d52e123353b971540e366ca9cd" kindref="member">s</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(out32,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)out,<sp/>32);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_hmac_sha256_initialize(<ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref><sp/>*hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rkey[64];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keylen<sp/>&lt;=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(rkey,<sp/>key,<sp/>keylen);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(rkey<sp/>+<sp/>keylen,<sp/>0,<sp/>64<sp/>-<sp/>keylen);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__sha256__t" kindref="compound">secp256k1_sha256_t</ref><sp/><ref refid="namespacesha256" kindref="compound">sha256</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_initialize(&amp;sha256);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_write(&amp;sha256,<sp/>key,<sp/>keylen);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_sha256_finalize(&amp;sha256,<sp/>rkey);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(rkey<sp/>+<sp/>32,<sp/>0,<sp/>32);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_initialize(&amp;hash-&gt;<ref refid="structsecp256k1__hmac__sha256__t_1a3974e44471231d09a8d282ef62e0b77a" kindref="member">outer</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>64;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkey[n]<sp/>^=<sp/>0x5c;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_write(&amp;hash-&gt;<ref refid="structsecp256k1__hmac__sha256__t_1a3974e44471231d09a8d282ef62e0b77a" kindref="member">outer</ref>,<sp/>rkey,<sp/>64);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_initialize(&amp;hash-&gt;<ref refid="structsecp256k1__hmac__sha256__t_1afba1e789776f5c3cd2c1e6d9e718065f" kindref="member">inner</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>64;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rkey[n]<sp/>^=<sp/>0x5c<sp/>^<sp/>0x36;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_write(&amp;hash-&gt;<ref refid="structsecp256k1__hmac__sha256__t_1afba1e789776f5c3cd2c1e6d9e718065f" kindref="member">inner</ref>,<sp/>rkey,<sp/>64);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(rkey,<sp/>0,<sp/>64);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_hmac_sha256_write(<ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref><sp/>*hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_write(&amp;hash-&gt;<ref refid="structsecp256k1__hmac__sha256__t_1afba1e789776f5c3cd2c1e6d9e718065f" kindref="member">inner</ref>,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_hmac_sha256_finalize(<ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref><sp/>*hash,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out32)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[32];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_finalize(&amp;hash-&gt;<ref refid="structsecp256k1__hmac__sha256__t_1afba1e789776f5c3cd2c1e6d9e718065f" kindref="member">inner</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_write(&amp;hash-&gt;<ref refid="structsecp256k1__hmac__sha256__t_1a3974e44471231d09a8d282ef62e0b77a" kindref="member">outer</ref>,<sp/>temp,<sp/>32);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(temp,<sp/>0,<sp/>32);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_sha256_finalize(&amp;hash-&gt;<ref refid="structsecp256k1__hmac__sha256__t_1a3974e44471231d09a8d282ef62e0b77a" kindref="member">outer</ref>,<sp/>out32);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_rfc6979_hmac_sha256_initialize(<ref refid="structsecp256k1__rfc6979__hmac__sha256__t" kindref="compound">secp256k1_rfc6979_hmac_sha256_t</ref><sp/>*rng,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref><sp/>hmac;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>zero[1]<sp/>=<sp/>{0x00};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>one[1]<sp/>=<sp/>{0x01};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>0x01,<sp/>32);<sp/></highlight><highlight class="comment">/*<sp/>RFC6979<sp/>3.2.b.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>,<sp/>0x00,<sp/>32);<sp/></highlight><highlight class="comment">/*<sp/>RFC6979<sp/>3.2.c.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RFC6979<sp/>3.2.d.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_initialize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>zero,<sp/>1);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>key,<sp/>keylen);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_finalize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_initialize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_finalize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RFC6979<sp/>3.2.f.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_initialize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>one,<sp/>1);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>key,<sp/>keylen);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_finalize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_initialize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_finalize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1a533be4a8cc6bf3112ca8c64cda3236a8" kindref="member">retry</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_rfc6979_hmac_sha256_generate(<ref refid="structsecp256k1__rfc6979__hmac__sha256__t" kindref="compound">secp256k1_rfc6979_hmac_sha256_t</ref><sp/>*rng,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outlen)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RFC6979<sp/>3.2.h.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>zero[1]<sp/>=<sp/>{0x00};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1a533be4a8cc6bf3112ca8c64cda3236a8" kindref="member">retry</ref>)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref><sp/>hmac;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_initialize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>zero,<sp/>1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_finalize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_initialize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_finalize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outlen<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__hmac__sha256__t" kindref="compound">secp256k1_hmac_sha256_t</ref><sp/>hmac;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>outlen;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_initialize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_write(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secp256k1_hmac_sha256_finalize(&amp;hmac,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now<sp/>&gt;<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(out,<sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>now);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>now;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlen<sp/>-=<sp/>now;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1a533be4a8cc6bf3112ca8c64cda3236a8" kindref="member">retry</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_rfc6979_hmac_sha256_finalize(<ref refid="structsecp256k1__rfc6979__hmac__sha256__t" kindref="compound">secp256k1_rfc6979_hmac_sha256_t</ref><sp/>*rng)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1add18bee94ca2a67fb59f2188e505ad52" kindref="member">k</ref>,<sp/>0,<sp/>32);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1acce53d5308c7d406245a07e5dde49e78" kindref="member">v</ref>,<sp/>0,<sp/>32);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>rng-&gt;<ref refid="structsecp256k1__rfc6979__hmac__sha256__t_1a533be4a8cc6bf3112ca8c64cda3236a8" kindref="member">retry</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>Round</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>sigma0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>sigma1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>Sigma0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>Sigma1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>Ch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>Maj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ReadBE32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>WriteBE32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/hash_impl.h"/>
  </compounddef>
</doxygen>
