<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_big_num" kind="class" language="C++" prot="public">
    <compoundname>CBigNum</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BIGNUM</basecompoundref>
    <includes refid="bignum_8h" local="no">bignum.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_big_num_1a272ed55454635b770e181bddc1a9c071" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>()</argsstring>
        <name>CBigNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="60" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="60" bodyend="63"/>
        <referencedby refid="class_c_big_num_1ab381ce930b1e9e3f04bf5827623c44af" compoundref="bignum_8h" startline="431" endline="433">pow</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a50fcecb7d672c2b7d0a89e641a0682ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="65" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a575e705d2120b0a43d74d798eaef48ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="75" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a0cf323763ff64c47cac7ababd2f23683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::~CBigNum</definition>
        <argsstring>()</argsstring>
        <name>~CBigNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="82" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a318644830d41471cd2bbcd702975bbb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(signed char n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>signed char</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="88" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="88" bodyend="88"/>
        <references refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" compoundref="bignum_8h" startline="140" endline="144">setulong</references>
        <references refid="class_c_big_num_1aca73fa36a797c91b30515ae61cc5d765" compoundref="bignum_8h" startline="165" endline="206">setint64</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a0f4e34dcc48e9089e9f20c06418755c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(short n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>short</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="89" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="89" bodyend="89"/>
        <references refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" compoundref="bignum_8h" startline="140" endline="144">setulong</references>
        <references refid="class_c_big_num_1aca73fa36a797c91b30515ae61cc5d765" compoundref="bignum_8h" startline="165" endline="206">setint64</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a930e53591ce24f650f7ddd1076bd4efe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(int n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="90" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="90" bodyend="90"/>
        <references refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" compoundref="bignum_8h" startline="140" endline="144">setulong</references>
        <references refid="class_c_big_num_1aca73fa36a797c91b30515ae61cc5d765" compoundref="bignum_8h" startline="165" endline="206">setint64</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a96ef554f3153f676125a49889303cf31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(long n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="91" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="91" bodyend="91"/>
        <references refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" compoundref="bignum_8h" startline="140" endline="144">setulong</references>
        <references refid="class_c_big_num_1aca73fa36a797c91b30515ae61cc5d765" compoundref="bignum_8h" startline="165" endline="206">setint64</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a221b65c70969363c1b9d940a6a2de3b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(long long n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>long long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="92" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="92" bodyend="92"/>
        <references refid="class_c_big_num_1aca73fa36a797c91b30515ae61cc5d765" compoundref="bignum_8h" startline="165" endline="206">setint64</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1afe63a4eb433e69687fad44193390dc1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(unsigned char n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned char</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="93" bodyend="93"/>
        <references refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" compoundref="bignum_8h" startline="140" endline="144">setulong</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a3745ad1eb1bd53c9535f8620515d3ae3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(unsigned short n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned short</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="94" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="94" bodyend="94"/>
        <references refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" compoundref="bignum_8h" startline="140" endline="144">setulong</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a87ff912ff941f4bc4ba10482c502757d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(unsigned int n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="95" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="95" bodyend="95"/>
        <references refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" compoundref="bignum_8h" startline="140" endline="144">setulong</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ab10a8c87dd0e8ca79f67df75ca7e7ecc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(unsigned long n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="96" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="96" bodyend="96"/>
        <references refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" compoundref="bignum_8h" startline="140" endline="144">setulong</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a18865e153442cd15aec3bfc9acda8dce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(unsigned long long n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned long long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="97" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="97" bodyend="97"/>
        <references refid="class_c_big_num_1ae61a86bfe3b286a2cfda45ffba1c1310" compoundref="bignum_8h" startline="223" endline="248">setuint64</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a47684495c159d6279490151ae4497332" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(uint256 n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="98" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="98" bodyend="98"/>
        <references refid="class_c_big_num_1ade94c52f2f5d5a20e605125fcf727a34" compoundref="bignum_8h" startline="250" endline="276">setuint256</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ad3c2843e6755a612b8734eb6e0f03ced" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBigNum::CBigNum</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="100" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="100" bodyend="104"/>
        <references refid="class_c_big_num_1aa9236c14e34519e9b173a9a4b80f5621" compoundref="bignum_8h" startline="294" endline="307">setvch</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1acd423cb3d3249c8448e9c7a7f2e0d6bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBigNum::bitSize</definition>
        <argsstring>() const </argsstring>
        <name>bitSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size in bits of the underlying bignum.</para><para><simplesect kind="return"><para>the size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="135" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::setulong</definition>
        <argsstring>(unsigned long n)</argsstring>
        <name>setulong</name>
        <param>
          <type>unsigned long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="140" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="140" bodyend="144"/>
        <referencedby refid="class_c_big_num_1a318644830d41471cd2bbcd702975bbb1" compoundref="bignum_8h" startline="88" endline="88">CBigNum</referencedby>
        <referencedby refid="bignum__tests_8cpp_1a01242cefe2fb6ac92a93475329803eaf" compoundref="bignum__tests_8cpp" startline="56" endline="123">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a48b83ff7e74140b0b7e0a4ecee4fde78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CBigNum::getulong</definition>
        <argsstring>() const </argsstring>
        <name>getulong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="146" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="146" bodyend="149"/>
        <referencedby refid="class_c_big_num_1adca0fa61568497152375328deef6c895" compoundref="bignum_8h" startline="376" endline="400">ToString</referencedby>
        <referencedby refid="script_8h_1a7f55c113b0164f50f214d94996b6b02a" compoundref="script_8cpp" startline="475" endline="1341">EvalScript</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a52ccd774492092c2ae19f256b9eaf025" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CBigNum::getuint</definition>
        <argsstring>() const </argsstring>
        <name>getuint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="151" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a6cc21efc13d985c53104d48665bec019" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBigNum::getint</definition>
        <argsstring>() const </argsstring>
        <name>getint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="156" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="156" bodyend="163"/>
        <referencedby refid="script_8h_1a7f55c113b0164f50f214d94996b6b02a" compoundref="script_8cpp" startline="475" endline="1341">EvalScript</referencedby>
        <referencedby refid="script_8h_1ab545c0a3638ba9151370e91fac78f48d" compoundref="script_8h" startline="354" endline="360">ValueString</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aca73fa36a797c91b30515ae61cc5d765" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::setint64</definition>
        <argsstring>(int64_t sn)</argsstring>
        <name>setint64</name>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>sn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="165" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="165" bodyend="206"/>
        <referencedby refid="class_c_big_num_1a318644830d41471cd2bbcd702975bbb1" compoundref="bignum_8h" startline="88" endline="88">CBigNum</referencedby>
        <referencedby refid="bignum__tests_8cpp_1af69d853f536678941b4ff731b241168a" compoundref="bignum__tests_8cpp" startline="49" endline="52">mysetint64</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a2cc30d131f0ef727d0ba21f964158b2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t CBigNum::getuint64</definition>
        <argsstring>()</argsstring>
        <name>getuint64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="208" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="208" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ae61a86bfe3b286a2cfda45ffba1c1310" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::setuint64</definition>
        <argsstring>(uint64_t n)</argsstring>
        <name>setuint64</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="223" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="223" bodyend="248"/>
        <referencedby refid="class_c_big_num_1a18865e153442cd15aec3bfc9acda8dce" compoundref="bignum_8h" startline="97" endline="97">CBigNum</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ade94c52f2f5d5a20e605125fcf727a34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::setuint256</definition>
        <argsstring>(uint256 n)</argsstring>
        <name>setuint256</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="250" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="250" bodyend="276"/>
        <referencedby refid="class_c_big_num_1a47684495c159d6279490151ae4497332" compoundref="bignum_8h" startline="98" endline="98">CBigNum</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CBigNum::getuint256</definition>
        <argsstring>() const </argsstring>
        <name>getuint256</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="278" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="278" bodyend="291"/>
        <referencedby refid="class_c_block_index_1ab8cb2abace4e5b6dd405e85f66f17f9a" compoundref="chain_8cpp" startline="615" endline="624">CBlockIndex::GetBlockTrust</referencedby>
        <referencedby refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="primitives_2block_8h_1a20a76dbc6ac5b8a6e0aaef85522b1069" compoundref="block_8cpp" startline="57" endline="71">CheckProofOfWork</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aa9236c14e34519e9b173a9a4b80f5621" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::setvch</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>setvch</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="294" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="294" bodyend="307"/>
        <referencedby refid="class_c_big_num_1ad3c2843e6755a612b8734eb6e0f03ced" compoundref="bignum_8h" startline="100" endline="104">CBigNum</referencedby>
        <referencedby refid="class_c_big_num_1aa70f21429cc04c2dbee78189c454bac2" compoundref="bignum_8h" startline="419" endline="424">Unserialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aa0660ea2e5c401414f052ee14f6ea896" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CBigNum::getvch</definition>
        <argsstring>() const </argsstring>
        <name>getvch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="309" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="309" bodyend="319"/>
        <referencedby refid="class_c_big_num_1afea3e99a3610f44c90c1242a324fd002" compoundref="bignum_8h" startline="407" endline="410">GetSerializeSize</referencedby>
        <referencedby refid="class_c_big_num_1a710a9e85375ec80a4fbbfaa5341baa1b" compoundref="bignum_8h" startline="413" endline="416">Serialize</referencedby>
        <referencedby refid="script_8h_1a7f55c113b0164f50f214d94996b6b02a" compoundref="script_8cpp" startline="475" endline="1341">EvalScript</referencedby>
        <referencedby refid="class_c_script_1ad802105f1515b4953ecbe6aeab2ee1ca" compoundref="script_8h" startline="550" endline="562">CScript::push_int64</referencedby>
        <referencedby refid="class_c_script_1adeadab761c1952847ba0d1b0b1011e16" compoundref="script_8h" startline="564" endline="576">CScript::push_uint64</referencedby>
        <referencedby refid="class_c_script_1a05fc4f7c67388701e4af16e8c1d66727" compoundref="script_8h" startline="660" endline="664">CScript::operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::SetCompact</definition>
        <argsstring>(unsigned int nCompact)</argsstring>
        <name>SetCompact</name>
        <param>
          <type>unsigned int</type>
          <declname>nCompact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="321" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="321" bodyend="331"/>
        <referencedby refid="class_c_block_index_1ab8cb2abace4e5b6dd405e85f66f17f9a" compoundref="chain_8cpp" startline="615" endline="624">CBlockIndex::GetBlockTrust</referencedby>
        <referencedby refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</referencedby>
        <referencedby refid="main_8h_1a868a58404bd61b6a82901f428d152bae" compoundref="main_8cpp" startline="1685" endline="1723">GetNextTargetRequired</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="primitives_2block_8h_1a20a76dbc6ac5b8a6e0aaef85522b1069" compoundref="block_8cpp" startline="57" endline="71">CheckProofOfWork</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a26b88c1b29f347219907979ff2028bdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CBigNum::GetCompact</definition>
        <argsstring>() const </argsstring>
        <name>GetCompact</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="333" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="333" bodyend="344"/>
        <referencedby refid="main_8h_1a868a58404bd61b6a82901f428d152bae" compoundref="main_8cpp" startline="1685" endline="1723">GetNextTargetRequired</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a9d4f7c42f141e45410af96e6804c54fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBigNum::SetHex</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>SetHex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="346" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="346" bodyend="374"/>
        <references refid="uint256_8h_1aa59e8a8c5a39cb5041f93bb95dd02119" compoundref="uint256_8h" startline="19" endline="22">HexDigit</references>
        <referencedby refid="bignum__tests_8cpp_1a973cf447bcf2388c4a58a7860a342151" compoundref="bignum__tests_8cpp" startline="125" endline="131">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1adca0fa61568497152375328deef6c895" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CBigNum::ToString</definition>
        <argsstring>(int nBase=10) const </argsstring>
        <name>ToString</name>
        <param>
          <type>int</type>
          <declname>nBase</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="376" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="376" bodyend="400"/>
        <references refid="class_c_big_num_1a48b83ff7e74140b0b7e0a4ecee4fde78" compoundref="bignum_8h" startline="146" endline="149">getulong</references>
        <referencedby refid="class_c_big_num_1afdfc11e08c544e06e2877767b3fb8730" compoundref="bignum_8h" startline="402" endline="405">GetHex</referencedby>
        <referencedby refid="bignum_8h_1a6d11a190e788b0bb0c55df4699066edc" compoundref="bignum_8h" startline="722" endline="722">operator&lt;&lt;</referencedby>
        <referencedby refid="chain_8h_1ae282007adebd031cdbfecdd0ad1feeb8" compoundref="chain_8cpp" startline="492" endline="512">InvalidChainFound</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
        <referencedby refid="bignum__tests_8cpp_1a01242cefe2fb6ac92a93475329803eaf" compoundref="bignum__tests_8cpp" startline="56" endline="123">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1afdfc11e08c544e06e2877767b3fb8730" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CBigNum::GetHex</definition>
        <argsstring>() const </argsstring>
        <name>GetHex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="402" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="402" bodyend="405"/>
        <references refid="class_c_big_num_1adca0fa61568497152375328deef6c895" compoundref="bignum_8h" startline="376" endline="400">ToString</references>
        <referencedby refid="bignum__tests_8cpp_1a973cf447bcf2388c4a58a7860a342151" compoundref="bignum__tests_8cpp" startline="125" endline="131">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1afea3e99a3610f44c90c1242a324fd002" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CBigNum::GetSerializeSize</definition>
        <argsstring>(int nType=0, int nVersion=PROTOCOL_VERSION) const </argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>int</type>
          <declname>nType</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
          <defval>PROTOCOL_VERSION</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="407" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="407" bodyend="410"/>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
        <references refid="class_c_big_num_1aa0660ea2e5c401414f052ee14f6ea896" compoundref="bignum_8h" startline="309" endline="319">getvch</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a710a9e85375ec80a4fbbfaa5341baa1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CBigNum::Serialize</definition>
        <argsstring>(Stream &amp;s, int nType=0, int nVersion=PROTOCOL_VERSION) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
          <defval>PROTOCOL_VERSION</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="413" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="413" bodyend="416"/>
        <references refid="class_c_big_num_1aa0660ea2e5c401414f052ee14f6ea896" compoundref="bignum_8h" startline="309" endline="319">getvch</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aa70f21429cc04c2dbee78189c454bac2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CBigNum::Unserialize</definition>
        <argsstring>(Stream &amp;s, int nType=0, int nVersion=PROTOCOL_VERSION)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
          <defval>PROTOCOL_VERSION</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="419" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="419" bodyend="424"/>
        <references refid="class_c_big_num_1aa9236c14e34519e9b173a9a4b80f5621" compoundref="bignum_8h" startline="294" endline="307">setvch</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ab381ce930b1e9e3f04bf5827623c44af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>CBigNum CBigNum::pow</definition>
        <argsstring>(const int e) const </argsstring>
        <name>pow</name>
        <param>
          <type>const int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>exponentiation with an int. this^e <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>the exponent as an int </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="431" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="431" bodyend="433"/>
        <references refid="class_c_big_num_1a272ed55454635b770e181bddc1a9c071" compoundref="bignum_8h" startline="60" endline="63">CBigNum</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a7da305f67b92265316d02c1cd33f95b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>CBigNum CBigNum::pow</definition>
        <argsstring>(const CBigNum &amp;e) const </argsstring>
        <name>pow</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>exponentiation this^e <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>the exponent </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="440" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="440" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a17c140842bacbb1e2f03b3677f0075b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>CBigNum CBigNum::mul_mod</definition>
        <argsstring>(const CBigNum &amp;b, const CBigNum &amp;m) const </argsstring>
        <name>mul_mod</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>modular multiplication: (this * b) mod m <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>modulus </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="453" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="453" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a0f2a7b0ec9115d70a7abd6d77643cfec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>CBigNum CBigNum::pow_mod</definition>
        <argsstring>(const CBigNum &amp;e, const CBigNum &amp;m) const </argsstring>
        <name>pow_mod</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>modular exponentiation: this^e mod n <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>exponent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>modulus </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="467" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="467" bodyend="481"/>
        <references refid="class_c_big_num_1a33a8ba28c9e6efe911ed3a8227a81481" compoundref="bignum_8h" startline="489" endline="495">inverse</references>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a33a8ba28c9e6efe911ed3a8227a81481" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>CBigNum CBigNum::inverse</definition>
        <argsstring>(const CBigNum &amp;m) const </argsstring>
        <name>inverse</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the inverse of this element mod m. i.e. i such this*i = 1 mod m <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the modu </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the inverse </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="489" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="489" bodyend="495"/>
        <referencedby refid="class_c_big_num_1a0f2a7b0ec9115d70a7abd6d77643cfec" compoundref="bignum_8h" startline="467" endline="481">pow_mod</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a4058ecf3603cd65c8f3effd7cef67dff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>CBigNum CBigNum::gcd</definition>
        <argsstring>(const CBigNum &amp;b) const </argsstring>
        <name>gcd</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the greatest common divisor (GCD) of two numbers. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the second element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the GCD </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="515" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="515" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a48650eae8b50c6a1421bd5a5ee0c38c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBigNum::isPrime</definition>
        <argsstring>(const int checks=BN_prime_checks) const </argsstring>
        <name>isPrime</name>
        <param>
          <type>const int</type>
          <declname>checks</declname>
          <defval>BN_prime_checks</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Miller-Rabin primality test on this element <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>checks</parametername>
</parameternamelist>
<parameterdescription>
<para>optional, the number of Miller-Rabin tests to run default causes error rate of 2^-80. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if prime </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="529" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="529" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a74d629a04c32c7bbb1419a0cef785431" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBigNum::isOne</definition>
        <argsstring>() const </argsstring>
        <name>isOne</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="538" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="538" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1af7e5e3a2debd15e28edc59208eaf34ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBigNum::operator!</definition>
        <argsstring>() const </argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="543" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="543" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ac3da33626c8ab06d6a049b310c086dd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator+=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="548" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="548" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a4fe724fd22129eefc4e1f34d95505381" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator-=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="555" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="555" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aedd26ffda5c04c4765ba8e18d25d9ff0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator*=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="561" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="561" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a213f7dc5a2d8212d3e7402a06ee5d5b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator/=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="569" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="569" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ac5bec8d967502c15e2dffc8600c933e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator%=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator%=</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="575" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="575" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a784951e3a24199fa6b994a951453d156" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator&lt;&lt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&lt;&lt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="581" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="581" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a7d2759e104a02502891b185dfb704ad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator&gt;&gt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&gt;&gt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="588" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="588" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1ac9421f22614796d8520be7e6ade71ee8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="606" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="606" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1aa69e12c7f330374b2d86df0da0627e58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum CBigNum::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="614" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="614" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a47920287946fb3a55e84af70e953e78f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; CBigNum::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="622" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="622" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a13d365561d5407fc624eacb6378db4d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum CBigNum::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="632" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="632" bodyend="638"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_c_big_num_1a83e20522f042dd2b738bd26e21605e3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>static CBigNum CBigNum::randBignum</definition>
        <argsstring>(const CBigNum &amp;range)</argsstring>
        <name>randBignum</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates a cryptographically secure random number between zero and range exclusive i.e. 0 &lt; returned number &lt; range <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound on the number. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="111" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a200174f8261baebceb64b24a2d91f33f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>static CBigNum CBigNum::RandKBitBigum</definition>
        <argsstring>(const uint32_t k)</argsstring>
        <name>RandKBitBigum</name>
        <param>
          <type>const <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates a cryptographically secure random k-bit number <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The bit length of the number. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="123" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="123" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_c_big_num_1a4579e2136563a20844d60d9fe513e1fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>static CBigNum CBigNum::generatePrime</definition>
        <argsstring>(const unsigned int numBits, bool safe=false)</argsstring>
        <name>generatePrime</name>
        <param>
          <type>const unsigned int</type>
          <declname>numBits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>safe</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates a random (safe) prime of numBits bits <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numBits</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>safe</parametername>
</parameternamelist>
<parameterdescription>
<para>true for a safe prime </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the prime </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="503" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="503" bodyend="508"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_big_num_1aeb0210adda76affb66975146b1168f71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum operator-</definition>
        <argsstring>(const CBigNum &amp;a, const CBigNum &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="641" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="658" bodyend="664"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_big_num_1ac5a9fb08b1522f0cbcc30f87bac72f4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum operator/</definition>
        <argsstring>(const CBigNum &amp;a, const CBigNum &amp;b)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="642" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="682" bodyend="689"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_big_num_1a8abffdb8b9ce531fef9fc3067d7329ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum operator%</definition>
        <argsstring>(const CBigNum &amp;a, const CBigNum &amp;b)</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="643" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="691" bodyend="698"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_big_num_1a62e78c276de3957d599fd4974713fed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum operator*</definition>
        <argsstring>(const CBigNum &amp;a, const CBigNum &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="644" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="673" bodyend="680"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_big_num_1a6db3085f36d565f1dd8589c8386d3a2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const CBigNum &amp;a, const CBigNum &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/bignum.h" line="645" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="719" bodyend="719"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>C++ wrapper for BIGNUM (OpenSSL bignum) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2174">
        <label>CBigNum</label>
        <link refid="class_c_big_num"/>
        <childnode refid="2175" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2175">
        <label>BIGNUM</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2176">
        <label>CBigNum</label>
        <link refid="class_c_big_num"/>
        <childnode refid="2177" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2177">
        <label>BIGNUM</label>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/bignum.h" line="58" column="1" bodyfile="/home/dev/ds-160209/src/bignum.h" bodystart="57" bodyend="646"/>
    <listofallmembers>
      <member refid="class_c_big_num_1acd423cb3d3249c8448e9c7a7f2e0d6bc" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>bitSize</name></member>
      <member refid="class_c_big_num_1a272ed55454635b770e181bddc1a9c071" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a50fcecb7d672c2b7d0a89e641a0682ca" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a318644830d41471cd2bbcd702975bbb1" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a0f4e34dcc48e9089e9f20c06418755c9" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a930e53591ce24f650f7ddd1076bd4efe" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a96ef554f3153f676125a49889303cf31" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a221b65c70969363c1b9d940a6a2de3b5" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1afe63a4eb433e69687fad44193390dc1b" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a3745ad1eb1bd53c9535f8620515d3ae3" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a87ff912ff941f4bc4ba10482c502757d" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1ab10a8c87dd0e8ca79f67df75ca7e7ecc" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a18865e153442cd15aec3bfc9acda8dce" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a47684495c159d6279490151ae4497332" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1ad3c2843e6755a612b8734eb6e0f03ced" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>CBigNum</name></member>
      <member refid="class_c_big_num_1a4058ecf3603cd65c8f3effd7cef67dff" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>gcd</name></member>
      <member refid="class_c_big_num_1a4579e2136563a20844d60d9fe513e1fe" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>generatePrime</name></member>
      <member refid="class_c_big_num_1a26b88c1b29f347219907979ff2028bdc" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>GetCompact</name></member>
      <member refid="class_c_big_num_1afdfc11e08c544e06e2877767b3fb8730" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>GetHex</name></member>
      <member refid="class_c_big_num_1a6cc21efc13d985c53104d48665bec019" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getint</name></member>
      <member refid="class_c_big_num_1afea3e99a3610f44c90c1242a324fd002" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>GetSerializeSize</name></member>
      <member refid="class_c_big_num_1a52ccd774492092c2ae19f256b9eaf025" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getuint</name></member>
      <member refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getuint256</name></member>
      <member refid="class_c_big_num_1a2cc30d131f0ef727d0ba21f964158b2b" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getuint64</name></member>
      <member refid="class_c_big_num_1a48b83ff7e74140b0b7e0a4ecee4fde78" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getulong</name></member>
      <member refid="class_c_big_num_1aa0660ea2e5c401414f052ee14f6ea896" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>getvch</name></member>
      <member refid="class_c_big_num_1a33a8ba28c9e6efe911ed3a8227a81481" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>inverse</name></member>
      <member refid="class_c_big_num_1a74d629a04c32c7bbb1419a0cef785431" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>isOne</name></member>
      <member refid="class_c_big_num_1a48650eae8b50c6a1421bd5a5ee0c38c5" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>isPrime</name></member>
      <member refid="class_c_big_num_1a17c140842bacbb1e2f03b3677f0075b9" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>mul_mod</name></member>
      <member refid="class_c_big_num_1af7e5e3a2debd15e28edc59208eaf34ec" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator!</name></member>
      <member refid="class_c_big_num_1a8abffdb8b9ce531fef9fc3067d7329ef" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator%</name></member>
      <member refid="class_c_big_num_1ac5bec8d967502c15e2dffc8600c933e6" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator%=</name></member>
      <member refid="class_c_big_num_1a62e78c276de3957d599fd4974713fed2" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator*</name></member>
      <member refid="class_c_big_num_1aedd26ffda5c04c4765ba8e18d25d9ff0" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator*=</name></member>
      <member refid="class_c_big_num_1ac9421f22614796d8520be7e6ade71ee8" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator++</name></member>
      <member refid="class_c_big_num_1aa69e12c7f330374b2d86df0da0627e58" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator++</name></member>
      <member refid="class_c_big_num_1ac3da33626c8ab06d6a049b310c086dd5" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator+=</name></member>
      <member refid="class_c_big_num_1aeb0210adda76affb66975146b1168f71" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator-</name></member>
      <member refid="class_c_big_num_1a47920287946fb3a55e84af70e953e78f" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator--</name></member>
      <member refid="class_c_big_num_1a13d365561d5407fc624eacb6378db4d3" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator--</name></member>
      <member refid="class_c_big_num_1a4fe724fd22129eefc4e1f34d95505381" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator-=</name></member>
      <member refid="class_c_big_num_1ac5a9fb08b1522f0cbcc30f87bac72f4b" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator/</name></member>
      <member refid="class_c_big_num_1a213f7dc5a2d8212d3e7402a06ee5d5b9" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator/=</name></member>
      <member refid="class_c_big_num_1a6db3085f36d565f1dd8589c8386d3a2f" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator&lt;</name></member>
      <member refid="class_c_big_num_1a784951e3a24199fa6b994a951453d156" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator&lt;&lt;=</name></member>
      <member refid="class_c_big_num_1a575e705d2120b0a43d74d798eaef48ee" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator=</name></member>
      <member refid="class_c_big_num_1a7d2759e104a02502891b185dfb704ad1" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>operator&gt;&gt;=</name></member>
      <member refid="class_c_big_num_1ab381ce930b1e9e3f04bf5827623c44af" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>pow</name></member>
      <member refid="class_c_big_num_1a7da305f67b92265316d02c1cd33f95b7" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>pow</name></member>
      <member refid="class_c_big_num_1a0f2a7b0ec9115d70a7abd6d77643cfec" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>pow_mod</name></member>
      <member refid="class_c_big_num_1a83e20522f042dd2b738bd26e21605e3b" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>randBignum</name></member>
      <member refid="class_c_big_num_1a200174f8261baebceb64b24a2d91f33f" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>RandKBitBigum</name></member>
      <member refid="class_c_big_num_1a710a9e85375ec80a4fbbfaa5341baa1b" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>Serialize</name></member>
      <member refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>SetCompact</name></member>
      <member refid="class_c_big_num_1a9d4f7c42f141e45410af96e6804c54fe" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>SetHex</name></member>
      <member refid="class_c_big_num_1aca73fa36a797c91b30515ae61cc5d765" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>setint64</name></member>
      <member refid="class_c_big_num_1ade94c52f2f5d5a20e605125fcf727a34" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>setuint256</name></member>
      <member refid="class_c_big_num_1ae61a86bfe3b286a2cfda45ffba1c1310" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>setuint64</name></member>
      <member refid="class_c_big_num_1ac8c00c696d9cbd3fa309a2d0a6bc4b1d" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>setulong</name></member>
      <member refid="class_c_big_num_1aa9236c14e34519e9b173a9a4b80f5621" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>setvch</name></member>
      <member refid="class_c_big_num_1adca0fa61568497152375328deef6c895" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>ToString</name></member>
      <member refid="class_c_big_num_1aa70f21429cc04c2dbee78189c454bac2" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>Unserialize</name></member>
      <member refid="class_c_big_num_1a0cf323763ff64c47cac7ababd2f23683" prot="public" virt="non-virtual"><scope>CBigNum</scope><name>~CBigNum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
