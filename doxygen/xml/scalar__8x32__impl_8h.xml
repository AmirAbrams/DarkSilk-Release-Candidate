<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="scalar__8x32__impl_8h" kind="file" language="C++">
    <compoundname>scalar_8x32_impl.h</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a9e65a0592c11e099de8e8f58b38a14ae" prot="public" static="no">
        <name>SECP256K1_N_0</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xD0364141UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="11" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a53cc412ecd7e47061b65c0ff5c6db4e2" prot="public" static="no">
        <name>SECP256K1_N_1</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xBFD25E8CUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="12" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a5cfbef70d2cba970443032a43450d0b3" prot="public" static="no">
        <name>SECP256K1_N_2</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xAF48A03BUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="13" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a1d38f968c428d48fe1041ef38eec96d4" prot="public" static="no">
        <name>SECP256K1_N_3</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xBAAEDCE6UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="14" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1af49420627eb89d20a39c6c9ad1abdda1" prot="public" static="no">
        <name>SECP256K1_N_4</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xFFFFFFFEUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="15" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a1c393acd02b626594cdb245a2baf782d" prot="public" static="no">
        <name>SECP256K1_N_5</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xFFFFFFFFUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="16" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a2aadbc7f6ecb66c1e9c6e08ac6a362b0" prot="public" static="no">
        <name>SECP256K1_N_6</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xFFFFFFFFUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="17" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1af6d852c6e2a7756ae93262dcd5588b78" prot="public" static="no">
        <name>SECP256K1_N_7</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xFFFFFFFFUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="18" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" prot="public" static="no">
        <name>SECP256K1_N_C_0</name>
        <initializer>(~<ref refid="scalar__8x32__impl_8h_1a9e65a0592c11e099de8e8f58b38a14ae" kindref="member">SECP256K1_N_0</ref> + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="21" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" prot="public" static="no">
        <name>SECP256K1_N_C_1</name>
        <initializer>(~<ref refid="scalar__8x32__impl_8h_1a53cc412ecd7e47061b65c0ff5c6db4e2" kindref="member">SECP256K1_N_1</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="22" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" prot="public" static="no">
        <name>SECP256K1_N_C_2</name>
        <initializer>(~<ref refid="scalar__8x32__impl_8h_1a5cfbef70d2cba970443032a43450d0b3" kindref="member">SECP256K1_N_2</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="23" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" prot="public" static="no">
        <name>SECP256K1_N_C_3</name>
        <initializer>(~<ref refid="scalar__8x32__impl_8h_1a1d38f968c428d48fe1041ef38eec96d4" kindref="member">SECP256K1_N_3</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="24" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a1c82df2aab75218ad66f892a4d042501" prot="public" static="no">
        <name>SECP256K1_N_C_4</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="25" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a824415debca677af24eb249946df4404" prot="public" static="no">
        <name>SECP256K1_N_H_0</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0x681B20A0UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="28" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a93c4692d6cad53df3cce3fb4631dee82" prot="public" static="no">
        <name>SECP256K1_N_H_1</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xDFE92F46UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="29" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a5dfabdaac8359544dd1131ca3af807ae" prot="public" static="no">
        <name>SECP256K1_N_H_2</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0x57A4501DUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="30" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1ac658856dbff7e81aca7cdd131c05dde4" prot="public" static="no">
        <name>SECP256K1_N_H_3</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0x5D576E73UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="31" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1ac989056e75a50d48b62d59f23f672f73" prot="public" static="no">
        <name>SECP256K1_N_H_4</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xFFFFFFFFUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="32" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a7f398e7f8481aeaab8ed4ff9dde370cd" prot="public" static="no">
        <name>SECP256K1_N_H_5</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xFFFFFFFFUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="33" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a95ba1afafdd6538e951d4034409ec764" prot="public" static="no">
        <name>SECP256K1_N_H_6</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0xFFFFFFFFUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="34" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1aab2e4316a08ed3eaaca42a738c37de75" prot="public" static="no">
        <name>SECP256K1_N_H_7</name>
        <initializer>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)0x7FFFFFFFUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="35" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" prot="public" static="no">
        <name>muladd</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>{ \
    <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> tl, th; \
    { \
        <ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> t = (<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a * b; \
        th = t &gt;&gt; 32;         /* at most 0xFFFFFFFE */ \
        tl = t; \
    } \
    c0 += tl;                 /* overflow is handled on the next line */ \
    th += (c0 &lt; tl) ? 1 : 0;  /* at most 0xFFFFFFFF */ \
    c1 += th;                 /* overflow is handled on the next line */ \
    c2 += (c1 &lt; th) ? 1 : 0;  /* never overflows by contract (verified in the next line) */ \
    VERIFY_CHECK((c1 &gt;= th) || (c2 != 0)); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a*b to the number defined by (c0,c1,c2). c2 must never overflow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="266" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1adeb6e766b53f39bb9c0c9f6502aa3b62" prot="public" static="no">
        <name>muladd_fast</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>{ \
    <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> tl, th; \
    { \
        <ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> t = (<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a * b; \
        th = t &gt;&gt; 32;         /* at most 0xFFFFFFFE */ \
        tl = t; \
    } \
    c0 += tl;                 /* overflow is handled on the next line */ \
    th += (c0 &lt; tl) ? 1 : 0;  /* at most 0xFFFFFFFF */ \
    c1 += th;                 /* never overflows by contract (verified in the next line) */ \
    VERIFY_CHECK(c1 &gt;= th); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a*b to the number defined by (c0,c1). c1 must never overflow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="281" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" prot="public" static="no">
        <name>muladd2</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>{ \
    <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> tl, th, th2, tl2; \
    { \
        <ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> t = (<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a * b; \
        th = t &gt;&gt; 32;               /* at most 0xFFFFFFFE */ \
        tl = t; \
    } \
    th2 = th + th;                  /* at most 0xFFFFFFFE (in case th was 0x7FFFFFFF) */ \
    c2 += (th2 &lt; th) ? 1 : 0;       /* never overflows by contract (verified the next line) */ \
    VERIFY_CHECK((th2 &gt;= th) || (c2 != 0)); \
    tl2 = tl + tl;                  /* at most 0xFFFFFFFE (in case the lowest 63 bits of tl were 0x7FFFFFFF) */ \
    th2 += (tl2 &lt; tl) ? 1 : 0;      /* at most 0xFFFFFFFF */ \
    c0 += tl2;                      /* overflow is handled on the next line */ \
    th2 += (c0 &lt; tl2) ? 1 : 0;      /* second overflow is handled on the next line */ \
    c2 += (c0 &lt; tl2) &amp; (th2 == 0);  /* never overflows by contract (verified the next line) */ \
    VERIFY_CHECK((c0 &gt;= tl2) || (th2 != 0) || (c2 != 0)); \
    c1 += th2;                      /* overflow is handled on the next line */ \
    c2 += (c1 &lt; th2) ? 1 : 0;       /* never overflows by contract (verified the next line) */ \
    VERIFY_CHECK((c1 &gt;= th2) || (c2 != 0)); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add 2*a*b to the number defined by (c0,c1,c2). c2 must never overflow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="295" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" prot="public" static="no">
        <name>sumadd</name>
        <param><defname>a</defname></param>
        <initializer>{ \
    unsigned int over; \
    c0 += (a);                  /* overflow is handled on the <ref refid="cache_8cc_1a5211876d3837bbfa503cb931cb9cecbe" kindref="member">next</ref> line */ \
    over = (c0 &lt; (a)) ? 1 : 0; \
    c1 += over;                 /* overflow is handled on the <ref refid="cache_8cc_1a5211876d3837bbfa503cb931cb9cecbe" kindref="member">next</ref> line */ \
    c2 += (c1 &lt; over) ? 1 : 0;  /* never overflows by contract */ \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a to the number defined by (c0,c1,c2). c2 must never overflow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="317" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a4f682f5ec94e74581289057925976d11" prot="public" static="no">
        <name>sumadd_fast</name>
        <param><defname>a</defname></param>
        <initializer>{ \
    c0 += (a);                 /* overflow is handled on the <ref refid="cache_8cc_1a5211876d3837bbfa503cb931cb9cecbe" kindref="member">next</ref> line */ \
    c1 += (c0 &lt; (a)) ? 1 : 0;  /* never overflows by contract (verified the <ref refid="cache_8cc_1a5211876d3837bbfa503cb931cb9cecbe" kindref="member">next</ref> line) */ \
    <ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>((c1 != 0) | (c0 &gt;= (a))); \
    <ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(c2 == 0); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a to the number defined by (c0,c1). c1 must never overflow, c2 must be zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="326" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" prot="public" static="no">
        <name>extract</name>
        <param><defname>n</defname></param>
        <initializer>{ \
    (n) = c0; \
    c0 = c1; \
    c1 = c2; \
    c2 = 0; \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract the lowest 32 bits of (c0,c1,c2) into n, and left shift the number 32 bits. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="334" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" prot="public" static="no">
        <name>extract_fast</name>
        <param><defname>n</defname></param>
        <initializer>{ \
    (n) = c0; \
    c0 = c1; \
    c1 = 0; \
    <ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(c2 == 0); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract the lowest 32 bits of (c0,c1,c2) into n, and left shift the number 32 bits. c2 is required to be zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="342" column="9" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a2381b5d7e18f94758064a32fbf5d54bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> void</type>
        <definition>static SECP256K1_INLINE void secp256k1_scalar_clear</definition>
        <argsstring>(secp256k1_scalar *r)</argsstring>
        <name>secp256k1_scalar_clear</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="37" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="37" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a6b16ea07b106f63ec6581124e1e6d75e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> void</type>
        <definition>static SECP256K1_INLINE void secp256k1_scalar_set_int</definition>
        <argsstring>(secp256k1_scalar *r, unsigned int v)</argsstring>
        <name>secp256k1_scalar_set_int</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="48" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="48" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1ab04554d2542b54bc5acd443ab9eb99a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> unsigned int</type>
        <definition>static SECP256K1_INLINE unsigned int secp256k1_scalar_get_bits</definition>
        <argsstring>(const secp256k1_scalar *a, unsigned int offset, unsigned int count)</argsstring>
        <name>secp256k1_scalar_get_bits</name>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="59" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a1f879094999b165babd24ee1f8ab0346" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> unsigned int</type>
        <definition>static SECP256K1_INLINE unsigned int secp256k1_scalar_get_bits_var</definition>
        <argsstring>(const secp256k1_scalar *a, unsigned int offset, unsigned int count)</argsstring>
        <name>secp256k1_scalar_get_bits_var</name>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="64" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a13e982915006b138de5e2b3ab68238cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> int</type>
        <definition>static SECP256K1_INLINE int secp256k1_scalar_check_overflow</definition>
        <argsstring>(const secp256k1_scalar *a)</argsstring>
        <name>secp256k1_scalar_check_overflow</name>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="75" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="75" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a91448bca431e08547d90613f0be3420f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> int</type>
        <definition>static SECP256K1_INLINE int secp256k1_scalar_reduce</definition>
        <argsstring>(secp256k1_scalar *r, uint32_t overflow)</argsstring>
        <name>secp256k1_scalar_reduce</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>overflow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="93" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a83257652850276cd74c7cdd1f9444d9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int secp256k1_scalar_add</definition>
        <argsstring>(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b)</argsstring>
        <name>secp256k1_scalar_add</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="115" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="115" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1ad6596a0249548deb678f0b630204254f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_scalar_cadd_bit</definition>
        <argsstring>(secp256k1_scalar *r, unsigned int bit, int flag)</argsstring>
        <name>secp256k1_scalar_cadd_bit</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="139" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="139" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a3d09257862898c77d71d594175c87176" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_scalar_set_b32</definition>
        <argsstring>(secp256k1_scalar *r, const unsigned char *b32, int *overflow)</argsstring>
        <name>secp256k1_scalar_set_b32</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>b32</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>overflow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="165" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="165" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a4fa08f8af5a23f505b44c9ef1bec1831" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_scalar_get_b32</definition>
        <argsstring>(unsigned char *bin, const secp256k1_scalar *a)</argsstring>
        <name>secp256k1_scalar_get_b32</name>
        <param>
          <type>unsigned char *</type>
          <declname>bin</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="181" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="181" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1aa4624a2cbcdda046878a2bd26e14707e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> int</type>
        <definition>static SECP256K1_INLINE int secp256k1_scalar_is_zero</definition>
        <argsstring>(const secp256k1_scalar *a)</argsstring>
        <name>secp256k1_scalar_is_zero</name>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="192" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1aa3f1c1d4536adf835ee256878c222968" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_scalar_negate</definition>
        <argsstring>(secp256k1_scalar *r, const secp256k1_scalar *a)</argsstring>
        <name>secp256k1_scalar_negate</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="196" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="196" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1ae5f33e28f53abe64bc2fef43870e224c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> int</type>
        <definition>static SECP256K1_INLINE int secp256k1_scalar_is_one</definition>
        <argsstring>(const secp256k1_scalar *a)</argsstring>
        <name>secp256k1_scalar_is_one</name>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="216" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1aab66620cbbe49bec3c7c02f4a1219c05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int secp256k1_scalar_is_high</definition>
        <argsstring>(const secp256k1_scalar *a)</argsstring>
        <name>secp256k1_scalar_is_high</name>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="220" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="220" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a854402245668666a879a0394e0ebfe01" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int secp256k1_scalar_cond_negate</definition>
        <argsstring>(secp256k1_scalar *r, int flag)</argsstring>
        <name>secp256k1_scalar_cond_negate</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="238" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="238" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a7f691512f6117e96c2a36ed09a2bc2fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_scalar_reduce_512</definition>
        <argsstring>(secp256k1_scalar *r, const uint32_t *l)</argsstring>
        <name>secp256k1_scalar_reduce_512</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="349" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="349" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a40a358de1e3ef9786b99c4d1fb66701b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_scalar_mul_512</definition>
        <argsstring>(uint32_t *l, const secp256k1_scalar *a, const secp256k1_scalar *b)</argsstring>
        <name>secp256k1_scalar_mul_512</name>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="491" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="491" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1af81533ccb8a9496acad74c1704c09ba1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_scalar_sqr_512</definition>
        <argsstring>(uint32_t *l, const secp256k1_scalar *a)</argsstring>
        <name>secp256k1_scalar_sqr_512</name>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="579" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="579" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a89db15f705c8eafcd10c08181523acd0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_scalar_mul</definition>
        <argsstring>(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b)</argsstring>
        <name>secp256k1_scalar_mul</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="647" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="647" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1ae9fcdf1db22cb93c2a2f06b0a9c957d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int secp256k1_scalar_shr_int</definition>
        <argsstring>(secp256k1_scalar *r, int n)</argsstring>
        <name>secp256k1_scalar_shr_int</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="653" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="653" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a2e65618baa17c59e89149a9f7e632f69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secp256k1_scalar_sqr</definition>
        <argsstring>(secp256k1_scalar *r, const secp256k1_scalar *a)</argsstring>
        <name>secp256k1_scalar_sqr</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="669" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="669" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a82b458aab9138b7111490eae6cec6404" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> int</type>
        <definition>static SECP256K1_INLINE int secp256k1_scalar_eq</definition>
        <argsstring>(const secp256k1_scalar *a, const secp256k1_scalar *b)</argsstring>
        <name>secp256k1_scalar_eq</name>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="696" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="696" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="scalar__8x32__impl_8h_1a1867b2a6504ecb951d95f14e032bfa38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref> void</type>
        <definition>static SECP256K1_INLINE void secp256k1_scalar_mul_shift_var</definition>
        <argsstring>(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift)</argsstring>
        <name>secp256k1_scalar_mul_shift_var</name>
        <param>
          <type><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" line="700" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h" bodystart="700" bodyend="719"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014<sp/>Pieter<sp/>Wuille<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SECP256K1_SCALAR_REPR_IMPL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SECP256K1_SCALAR_REPR_IMPL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Limbs<sp/>of<sp/>the<sp/>secp256k1<sp/>order.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="scalar__8x32__impl_8h_1a9e65a0592c11e099de8e8f58b38a14ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_0<sp/>((uint32_t)0xD0364141UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="scalar__8x32__impl_8h_1a53cc412ecd7e47061b65c0ff5c6db4e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_1<sp/>((uint32_t)0xBFD25E8CUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="scalar__8x32__impl_8h_1a5cfbef70d2cba970443032a43450d0b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_2<sp/>((uint32_t)0xAF48A03BUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="scalar__8x32__impl_8h_1a1d38f968c428d48fe1041ef38eec96d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_3<sp/>((uint32_t)0xBAAEDCE6UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="scalar__8x32__impl_8h_1af49420627eb89d20a39c6c9ad1abdda1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_4<sp/>((uint32_t)0xFFFFFFFEUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="scalar__8x32__impl_8h_1a1c393acd02b626594cdb245a2baf782d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_5<sp/>((uint32_t)0xFFFFFFFFUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="scalar__8x32__impl_8h_1a2aadbc7f6ecb66c1e9c6e08ac6a362b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_6<sp/>((uint32_t)0xFFFFFFFFUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="scalar__8x32__impl_8h_1af6d852c6e2a7756ae93262dcd5588b78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_7<sp/>((uint32_t)0xFFFFFFFFUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Limbs<sp/>of<sp/>2^256<sp/>minus<sp/>the<sp/>secp256k1<sp/>order.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_C_0<sp/>(~SECP256K1_N_0<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_C_1<sp/>(~SECP256K1_N_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_C_2<sp/>(~SECP256K1_N_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_C_3<sp/>(~SECP256K1_N_3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="scalar__8x32__impl_8h_1a1c82df2aab75218ad66f892a4d042501" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_C_4<sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Limbs<sp/>of<sp/>half<sp/>the<sp/>secp256k1<sp/>order.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="scalar__8x32__impl_8h_1a824415debca677af24eb249946df4404" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_H_0<sp/>((uint32_t)0x681B20A0UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="scalar__8x32__impl_8h_1a93c4692d6cad53df3cce3fb4631dee82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_H_1<sp/>((uint32_t)0xDFE92F46UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="scalar__8x32__impl_8h_1a5dfabdaac8359544dd1131ca3af807ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_H_2<sp/>((uint32_t)0x57A4501DUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="scalar__8x32__impl_8h_1ac658856dbff7e81aca7cdd131c05dde4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_H_3<sp/>((uint32_t)0x5D576E73UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="scalar__8x32__impl_8h_1ac989056e75a50d48b62d59f23f672f73" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_H_4<sp/>((uint32_t)0xFFFFFFFFUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="scalar__8x32__impl_8h_1a7f398e7f8481aeaab8ed4ff9dde370cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_H_5<sp/>((uint32_t)0xFFFFFFFFUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="scalar__8x32__impl_8h_1a95ba1afafdd6538e951d4034409ec764" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_H_6<sp/>((uint32_t)0xFFFFFFFFUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="scalar__8x32__impl_8h_1aab2e4316a08ed3eaaca42a738c37de75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECP256K1_N_H_7<sp/>((uint32_t)0x7FFFFFFFUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_clear(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_set_int(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_get_bits(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>((offset<sp/>+<sp/>count<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>5<sp/>==<sp/>offset<sp/>&gt;&gt;<sp/>5);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[offset<sp/>&gt;&gt;<sp/>5]<sp/>&gt;&gt;<sp/>(offset<sp/>&amp;<sp/>0x1F))<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>count)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_get_bits_var(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(count<sp/>&lt;<sp/>32);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(offset<sp/>+<sp/>count<sp/>&lt;=<sp/>256);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((offset<sp/>+<sp/>count<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>5<sp/>==<sp/>offset<sp/>&gt;&gt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>secp256k1_scalar_get_bits(a,<sp/>offset,<sp/>count);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>((offset<sp/>&gt;&gt;<sp/>5)<sp/>+<sp/>1<sp/>&lt;<sp/>8);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[offset<sp/>&gt;&gt;<sp/>5]<sp/>&gt;&gt;<sp/>(offset<sp/>&amp;<sp/>0x1F))<sp/>|<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[(offset<sp/>&gt;&gt;<sp/>5)<sp/>+<sp/>1]<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>(offset<sp/>&amp;<sp/>0x1F))))<sp/>&amp;<sp/>((((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)1)<sp/>&lt;&lt;<sp/>count)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_check_overflow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>no<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1af6d852c6e2a7756ae93262dcd5588b78" kindref="member">SECP256K1_N_7</ref>);<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>for<sp/>a<sp/>&gt;<sp/>check.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1a2aadbc7f6ecb66c1e9c6e08ac6a362b0" kindref="member">SECP256K1_N_6</ref>);<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>for<sp/>a<sp/>&gt;<sp/>check.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1a1c393acd02b626594cdb245a2baf782d" kindref="member">SECP256K1_N_5</ref>);<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>for<sp/>a<sp/>&gt;<sp/>check.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1af49420627eb89d20a39c6c9ad1abdda1" kindref="member">SECP256K1_N_4</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>&gt;<sp/><ref refid="scalar__8x32__impl_8h_1af49420627eb89d20a39c6c9ad1abdda1" kindref="member">SECP256K1_N_4</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1a1d38f968c428d48fe1041ef38eec96d4" kindref="member">SECP256K1_N_3</ref>)<sp/>&amp;<sp/>~yes;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>&gt;<sp/><ref refid="scalar__8x32__impl_8h_1a1d38f968c428d48fe1041ef38eec96d4" kindref="member">SECP256K1_N_3</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1a5cfbef70d2cba970443032a43450d0b3" kindref="member">SECP256K1_N_2</ref>)<sp/>&amp;<sp/>~yes;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>&gt;<sp/><ref refid="scalar__8x32__impl_8h_1a5cfbef70d2cba970443032a43450d0b3" kindref="member">SECP256K1_N_2</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1a53cc412ecd7e47061b65c0ff5c6db4e2" kindref="member">SECP256K1_N_1</ref>)<sp/>&amp;<sp/>~yes;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>&gt;<sp/><ref refid="scalar__8x32__impl_8h_1a53cc412ecd7e47061b65c0ff5c6db4e2" kindref="member">SECP256K1_N_1</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>&gt;=<sp/><ref refid="scalar__8x32__impl_8h_1a9e65a0592c11e099de8e8f58b38a14ae" kindref="member">SECP256K1_N_0</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yes;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_reduce(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>overflow)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>t;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(overflow<sp/>&lt;=<sp/>1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>+<sp/>overflow<sp/>*<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>+<sp/>overflow<sp/>*<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>+<sp/>overflow<sp/>*<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>+<sp/>overflow<sp/>*<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>+<sp/>overflow<sp/>*<sp/><ref refid="scalar__8x32__impl_8h_1a1c82df2aab75218ad66f892a4d042501" kindref="member">SECP256K1_N_C_4</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFUL;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_add(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>t<sp/>=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>+<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>+<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>+<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>+<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>+<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>+<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>+<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>+<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>overflow<sp/>=<sp/>t<sp/>+<sp/>secp256k1_scalar_check_overflow(r);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(overflow<sp/>==<sp/>0<sp/>||<sp/>overflow<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_reduce(r,<sp/>overflow);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_cadd_bit(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>t;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(bit<sp/>&lt;<sp/>256);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>bit<sp/>+=<sp/>((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)<sp/>flag<sp/>-<sp/>1)<sp/>&amp;<sp/>0x100;<sp/><sp/></highlight><highlight class="comment">/*<sp/>forcing<sp/>(bit<sp/>&gt;&gt;<sp/>5)<sp/>&gt;<sp/>7<sp/>makes<sp/>this<sp/>a<sp/>noop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>+<sp/>(((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)((bit<sp/>&gt;&gt;<sp/>5)<sp/>==<sp/>0))<sp/>&lt;&lt;<sp/>(bit<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>+<sp/>(((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)((bit<sp/>&gt;&gt;<sp/>5)<sp/>==<sp/>1))<sp/>&lt;&lt;<sp/>(bit<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>+<sp/>(((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)((bit<sp/>&gt;&gt;<sp/>5)<sp/>==<sp/>2))<sp/>&lt;&lt;<sp/>(bit<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>+<sp/>(((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)((bit<sp/>&gt;&gt;<sp/>5)<sp/>==<sp/>3))<sp/>&lt;&lt;<sp/>(bit<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>+<sp/>(((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)((bit<sp/>&gt;&gt;<sp/>5)<sp/>==<sp/>4))<sp/>&lt;&lt;<sp/>(bit<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>+<sp/>(((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)((bit<sp/>&gt;&gt;<sp/>5)<sp/>==<sp/>5))<sp/>&lt;&lt;<sp/>(bit<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>+<sp/>(((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)((bit<sp/>&gt;&gt;<sp/>5)<sp/>==<sp/>6))<sp/>&lt;&lt;<sp/>(bit<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>+<sp/>(((<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)((bit<sp/>&gt;&gt;<sp/>5)<sp/>==<sp/>7))<sp/>&lt;&lt;<sp/>(bit<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>t<sp/>&amp;<sp/>0xFFFFFFFFULL;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>((t<sp/>&gt;&gt;<sp/>32)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(secp256k1_scalar_check_overflow(r)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_set_b32(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b32,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*overflow)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>over;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[31]<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[30]<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[29]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[28]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[27]<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[26]<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[25]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[24]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[23]<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[22]<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[21]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[20]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[19]<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[18]<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[17]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[16]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[15]<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[14]<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[13]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[12]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[11]<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[10]<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[9]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[8]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[7]<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[6]<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[5]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[4]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[3]<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[2]<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[1]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>)b32[0]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>over<sp/>=<sp/>secp256k1_scalar_reduce(r,<sp/>secp256k1_scalar_check_overflow(r));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overflow)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*overflow<sp/>=<sp/>over;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_get_b32(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref>*<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>bin[0]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>&gt;&gt;<sp/>24;<sp/>bin[1]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>&gt;&gt;<sp/>16;<sp/>bin[2]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>&gt;&gt;<sp/>8;<sp/>bin[3]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>bin[4]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>&gt;&gt;<sp/>24;<sp/>bin[5]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>&gt;&gt;<sp/>16;<sp/>bin[6]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>&gt;&gt;<sp/>8;<sp/>bin[7]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>bin[8]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>&gt;&gt;<sp/>24;<sp/>bin[9]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>&gt;&gt;<sp/>16;<sp/>bin[10]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>&gt;&gt;<sp/>8;<sp/>bin[11]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>bin[12]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>&gt;&gt;<sp/>24;<sp/>bin[13]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>&gt;&gt;<sp/>16;<sp/>bin[14]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>&gt;&gt;<sp/>8;<sp/>bin[15]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>bin[16]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>&gt;&gt;<sp/>24;<sp/>bin[17]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>&gt;&gt;<sp/>16;<sp/>bin[18]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>&gt;&gt;<sp/>8;<sp/>bin[19]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>bin[20]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>&gt;&gt;<sp/>24;<sp/>bin[21]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>&gt;&gt;<sp/>16;<sp/>bin[22]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>&gt;&gt;<sp/>8;<sp/>bin[23]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>bin[24]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>&gt;&gt;<sp/>24;<sp/>bin[25]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>&gt;&gt;<sp/>16;<sp/>bin[26]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>&gt;&gt;<sp/>8;<sp/>bin[27]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>bin[28]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>&gt;&gt;<sp/>24;<sp/>bin[29]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>&gt;&gt;<sp/>16;<sp/>bin[30]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>&gt;&gt;<sp/>8;<sp/>bin[31]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0];</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_is_zero(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7])<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_negate(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nonzero<sp/>=<sp/>0xFFFFFFFFUL<sp/>*<sp/>(secp256k1_scalar_is_zero(a)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>t<sp/>=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(~a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0])<sp/>+<sp/><ref refid="scalar__8x32__impl_8h_1a9e65a0592c11e099de8e8f58b38a14ae" kindref="member">SECP256K1_N_0</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(~a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1])<sp/>+<sp/><ref refid="scalar__8x32__impl_8h_1a53cc412ecd7e47061b65c0ff5c6db4e2" kindref="member">SECP256K1_N_1</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(~a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2])<sp/>+<sp/><ref refid="scalar__8x32__impl_8h_1a5cfbef70d2cba970443032a43450d0b3" kindref="member">SECP256K1_N_2</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(~a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3])<sp/>+<sp/><ref refid="scalar__8x32__impl_8h_1a1d38f968c428d48fe1041ef38eec96d4" kindref="member">SECP256K1_N_3</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(~a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4])<sp/>+<sp/><ref refid="scalar__8x32__impl_8h_1af49420627eb89d20a39c6c9ad1abdda1" kindref="member">SECP256K1_N_4</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(~a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5])<sp/>+<sp/><ref refid="scalar__8x32__impl_8h_1a1c393acd02b626594cdb245a2baf782d" kindref="member">SECP256K1_N_5</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(~a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6])<sp/>+<sp/><ref refid="scalar__8x32__impl_8h_1a2aadbc7f6ecb66c1e9c6e08ac6a362b0" kindref="member">SECP256K1_N_6</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(~a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7])<sp/>+<sp/><ref refid="scalar__8x32__impl_8h_1af6d852c6e2a7756ae93262dcd5588b78" kindref="member">SECP256K1_N_7</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_is_one(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>^<sp/>1)<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>|<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7])<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_is_high(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>no<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1aab2e4316a08ed3eaaca42a738c37de75" kindref="member">SECP256K1_N_H_7</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>&gt;<sp/><ref refid="scalar__8x32__impl_8h_1aab2e4316a08ed3eaaca42a738c37de75" kindref="member">SECP256K1_N_H_7</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1a95ba1afafdd6538e951d4034409ec764" kindref="member">SECP256K1_N_H_6</ref>)<sp/>&amp;<sp/>~yes;<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>for<sp/>a<sp/>&gt;<sp/>check.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1a7f398e7f8481aeaab8ed4ff9dde370cd" kindref="member">SECP256K1_N_H_5</ref>)<sp/>&amp;<sp/>~yes;<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>for<sp/>a<sp/>&gt;<sp/>check.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1ac989056e75a50d48b62d59f23f672f73" kindref="member">SECP256K1_N_H_4</ref>)<sp/>&amp;<sp/>~yes;<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>for<sp/>a<sp/>&gt;<sp/>check.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1ac658856dbff7e81aca7cdd131c05dde4" kindref="member">SECP256K1_N_H_3</ref>)<sp/>&amp;<sp/>~yes;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>&gt;<sp/><ref refid="scalar__8x32__impl_8h_1ac658856dbff7e81aca7cdd131c05dde4" kindref="member">SECP256K1_N_H_3</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1a5dfabdaac8359544dd1131ca3af807ae" kindref="member">SECP256K1_N_H_2</ref>)<sp/>&amp;<sp/>~yes;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>&gt;<sp/><ref refid="scalar__8x32__impl_8h_1a5dfabdaac8359544dd1131ca3af807ae" kindref="member">SECP256K1_N_H_2</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>&lt;<sp/><ref refid="scalar__8x32__impl_8h_1a93c4692d6cad53df3cce3fb4631dee82" kindref="member">SECP256K1_N_H_1</ref>)<sp/>&amp;<sp/>~yes;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>&gt;<sp/><ref refid="scalar__8x32__impl_8h_1a93c4692d6cad53df3cce3fb4631dee82" kindref="member">SECP256K1_N_H_1</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>yes<sp/>|=<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>&gt;<sp/><ref refid="scalar__8x32__impl_8h_1a824415debca677af24eb249946df4404" kindref="member">SECP256K1_N_H_0</ref>)<sp/>&amp;<sp/>~no;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yes;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_cond_negate(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>flag<sp/>=<sp/>0,<sp/>mask<sp/>=<sp/>00...00<sp/>and<sp/>this<sp/>is<sp/>a<sp/>no-op;</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>we<sp/>are<sp/>flag<sp/>=<sp/>1,<sp/>mask<sp/>=<sp/>11...11<sp/>and<sp/>this<sp/>is<sp/>identical<sp/>to<sp/>secp256k1_scalar_negate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>mask<sp/>=<sp/>!flag<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>nonzero<sp/>=<sp/>0xFFFFFFFFUL<sp/>*<sp/>(secp256k1_scalar_is_zero(r)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>t<sp/>=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>^<sp/>mask)<sp/>+<sp/>((<ref refid="scalar__8x32__impl_8h_1a9e65a0592c11e099de8e8f58b38a14ae" kindref="member">SECP256K1_N_0</ref><sp/>+<sp/>1)<sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>^<sp/>mask)<sp/>+<sp/>(<ref refid="scalar__8x32__impl_8h_1a53cc412ecd7e47061b65c0ff5c6db4e2" kindref="member">SECP256K1_N_1</ref><sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>^<sp/>mask)<sp/>+<sp/>(<ref refid="scalar__8x32__impl_8h_1a5cfbef70d2cba970443032a43450d0b3" kindref="member">SECP256K1_N_2</ref><sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>^<sp/>mask)<sp/>+<sp/>(<ref refid="scalar__8x32__impl_8h_1a1d38f968c428d48fe1041ef38eec96d4" kindref="member">SECP256K1_N_3</ref><sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>^<sp/>mask)<sp/>+<sp/>(<ref refid="scalar__8x32__impl_8h_1af49420627eb89d20a39c6c9ad1abdda1" kindref="member">SECP256K1_N_4</ref><sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>^<sp/>mask)<sp/>+<sp/>(<ref refid="scalar__8x32__impl_8h_1a1c393acd02b626594cdb245a2baf782d" kindref="member">SECP256K1_N_5</ref><sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>^<sp/>mask)<sp/>+<sp/>(<ref refid="scalar__8x32__impl_8h_1a2aadbc7f6ecb66c1e9c6e08ac6a362b0" kindref="member">SECP256K1_N_6</ref><sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;<sp/>t<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>^<sp/>mask)<sp/>+<sp/>(<ref refid="scalar__8x32__impl_8h_1af6d852c6e2a7756ae93262dcd5588b78" kindref="member">SECP256K1_N_7</ref><sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>t<sp/>&amp;<sp/>nonzero;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2<sp/>*<sp/>(mask<sp/>==<sp/>0)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Inspired<sp/>by<sp/>the<sp/>macros<sp/>in<sp/>OpenSSL&apos;s<sp/>crypto/bn/asm/x86_64-gcc.c.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" refkind="member"><highlight class="preprocessor">#define<sp/>muladd(a,b)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uint32_t<sp/>tl,<sp/>th;<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>t<sp/>=<sp/>(uint64_t)a<sp/>*<sp/>b;<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>t<sp/>&gt;&gt;<sp/>32;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>most<sp/>0xFFFFFFFE<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl<sp/>=<sp/>t;<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c0<sp/>+=<sp/>tl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>is<sp/>handled<sp/>on<sp/>the<sp/>next<sp/>line<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>th<sp/>+=<sp/>(c0<sp/>&lt;<sp/>tl)<sp/>?<sp/>1<sp/>:<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>most<sp/>0xFFFFFFFF<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c1<sp/>+=<sp/>th;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>is<sp/>handled<sp/>on<sp/>the<sp/>next<sp/>line<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c2<sp/>+=<sp/>(c1<sp/>&lt;<sp/>th)<sp/>?<sp/>1<sp/>:<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>never<sp/>overflows<sp/>by<sp/>contract<sp/>(verified<sp/>in<sp/>the<sp/>next<sp/>line)<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VERIFY_CHECK((c1<sp/>&gt;=<sp/>th)<sp/>||<sp/>(c2<sp/>!=<sp/>0));<sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="scalar__8x32__impl_8h_1adeb6e766b53f39bb9c0c9f6502aa3b62" refkind="member"><highlight class="preprocessor">#define<sp/>muladd_fast(a,b)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uint32_t<sp/>tl,<sp/>th;<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>t<sp/>=<sp/>(uint64_t)a<sp/>*<sp/>b;<sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>t<sp/>&gt;&gt;<sp/>32;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>most<sp/>0xFFFFFFFE<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl<sp/>=<sp/>t;<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c0<sp/>+=<sp/>tl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>is<sp/>handled<sp/>on<sp/>the<sp/>next<sp/>line<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>th<sp/>+=<sp/>(c0<sp/>&lt;<sp/>tl)<sp/>?<sp/>1<sp/>:<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>most<sp/>0xFFFFFFFF<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c1<sp/>+=<sp/>th;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>never<sp/>overflows<sp/>by<sp/>contract<sp/>(verified<sp/>in<sp/>the<sp/>next<sp/>line)<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VERIFY_CHECK(c1<sp/>&gt;=<sp/>th);<sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" refkind="member"><highlight class="preprocessor">#define<sp/>muladd2(a,b)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uint32_t<sp/>tl,<sp/>th,<sp/>th2,<sp/>tl2;<sp/>\</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>t<sp/>=<sp/>(uint64_t)a<sp/>*<sp/>b;<sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>t<sp/>&gt;&gt;<sp/>32;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>most<sp/>0xFFFFFFFE<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl<sp/>=<sp/>t;<sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>th2<sp/>=<sp/>th<sp/>+<sp/>th;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>most<sp/>0xFFFFFFFE<sp/>(in<sp/>case<sp/>th<sp/>was<sp/>0x7FFFFFFF)<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c2<sp/>+=<sp/>(th2<sp/>&lt;<sp/>th)<sp/>?<sp/>1<sp/>:<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>never<sp/>overflows<sp/>by<sp/>contract<sp/>(verified<sp/>the<sp/>next<sp/>line)<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VERIFY_CHECK((th2<sp/>&gt;=<sp/>th)<sp/>||<sp/>(c2<sp/>!=<sp/>0));<sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tl2<sp/>=<sp/>tl<sp/>+<sp/>tl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>most<sp/>0xFFFFFFFE<sp/>(in<sp/>case<sp/>the<sp/>lowest<sp/>63<sp/>bits<sp/>of<sp/>tl<sp/>were<sp/>0x7FFFFFFF)<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>th2<sp/>+=<sp/>(tl2<sp/>&lt;<sp/>tl)<sp/>?<sp/>1<sp/>:<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>most<sp/>0xFFFFFFFF<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c0<sp/>+=<sp/>tl2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>is<sp/>handled<sp/>on<sp/>the<sp/>next<sp/>line<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>th2<sp/>+=<sp/>(c0<sp/>&lt;<sp/>tl2)<sp/>?<sp/>1<sp/>:<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>second<sp/>overflow<sp/>is<sp/>handled<sp/>on<sp/>the<sp/>next<sp/>line<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c2<sp/>+=<sp/>(c0<sp/>&lt;<sp/>tl2)<sp/>&amp;<sp/>(th2<sp/>==<sp/>0);<sp/><sp/></highlight><highlight class="comment">/*<sp/>never<sp/>overflows<sp/>by<sp/>contract<sp/>(verified<sp/>the<sp/>next<sp/>line)<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VERIFY_CHECK((c0<sp/>&gt;=<sp/>tl2)<sp/>||<sp/>(th2<sp/>!=<sp/>0)<sp/>||<sp/>(c2<sp/>!=<sp/>0));<sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c1<sp/>+=<sp/>th2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>is<sp/>handled<sp/>on<sp/>the<sp/>next<sp/>line<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c2<sp/>+=<sp/>(c1<sp/>&lt;<sp/>th2)<sp/>?<sp/>1<sp/>:<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>never<sp/>overflows<sp/>by<sp/>contract<sp/>(verified<sp/>the<sp/>next<sp/>line)<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VERIFY_CHECK((c1<sp/>&gt;=<sp/>th2)<sp/>||<sp/>(c2<sp/>!=<sp/>0));<sp/>\</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" refkind="member"><highlight class="preprocessor">#define<sp/>sumadd(a)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>over;<sp/>\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c0<sp/>+=<sp/>(a);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>is<sp/>handled<sp/>on<sp/>the<sp/>next<sp/>line<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>over<sp/>=<sp/>(c0<sp/>&lt;<sp/>(a))<sp/>?<sp/>1<sp/>:<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c1<sp/>+=<sp/>over;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>is<sp/>handled<sp/>on<sp/>the<sp/>next<sp/>line<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c2<sp/>+=<sp/>(c1<sp/>&lt;<sp/>over)<sp/>?<sp/>1<sp/>:<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>never<sp/>overflows<sp/>by<sp/>contract<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="scalar__8x32__impl_8h_1a4f682f5ec94e74581289057925976d11" refkind="member"><highlight class="preprocessor">#define<sp/>sumadd_fast(a)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c0<sp/>+=<sp/>(a);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>is<sp/>handled<sp/>on<sp/>the<sp/>next<sp/>line<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c1<sp/>+=<sp/>(c0<sp/>&lt;<sp/>(a))<sp/>?<sp/>1<sp/>:<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>never<sp/>overflows<sp/>by<sp/>contract<sp/>(verified<sp/>the<sp/>next<sp/>line)<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VERIFY_CHECK((c1<sp/>!=<sp/>0)<sp/>|<sp/>(c0<sp/>&gt;=<sp/>(a)));<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VERIFY_CHECK(c2<sp/>==<sp/>0);<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" refkind="member"><highlight class="preprocessor">#define<sp/>extract(n)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(n)<sp/>=<sp/>c0;<sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c0<sp/>=<sp/>c1;<sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>c2;<sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" refkind="member"><highlight class="preprocessor">#define<sp/>extract_fast(n)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(n)<sp/>=<sp/>c0;<sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c0<sp/>=<sp/>c1;<sp/>\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VERIFY_CHECK(c2<sp/>==<sp/>0);<sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_reduce_512(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>*l)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>c;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>n0<sp/>=<sp/>l[8],<sp/>n1<sp/>=<sp/>l[9],<sp/>n2<sp/>=<sp/>l[10],<sp/>n3<sp/>=<sp/>l[11],<sp/>n4<sp/>=<sp/>l[12],<sp/>n5<sp/>=<sp/>l[13],<sp/>n6<sp/>=<sp/>l[14],<sp/>n7<sp/>=<sp/>l[15];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>m0,<sp/>m1,<sp/>m2,<sp/>m3,<sp/>m4,<sp/>m5,<sp/>m6,<sp/>m7,<sp/>m8,<sp/>m9,<sp/>m10,<sp/>m11,<sp/>m12;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>96<sp/>bit<sp/>accumulator.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>c0,<sp/>c1,<sp/>c2;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reduce<sp/>512<sp/>bits<sp/>into<sp/>385.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m[0..12]<sp/>=<sp/>l[0..7]<sp/>+<sp/>n[0..7]<sp/>*<sp/>SECP256K1_N_C.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>c0<sp/>=<sp/>l[0];<sp/>c1<sp/>=<sp/>0;<sp/>c2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1adeb6e766b53f39bb9c0c9f6502aa3b62" kindref="member">muladd_fast</ref>(n0,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" kindref="member">extract_fast</ref>(m0);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a4f682f5ec94e74581289057925976d11" kindref="member">sumadd_fast</ref>(l[1]);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n1,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n0,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m1);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(l[2]);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n2,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n1,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n0,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m2);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(l[3]);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n3,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n2,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n1,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n0,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m3);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(l[4]);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n4,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n3,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n2,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n1,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(n0);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m4);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(l[5]);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n5,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n4,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n3,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n2,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(n1);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m5);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(l[6]);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n6,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n5,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n4,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n3,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(n2);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m6);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(l[7]);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n7,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n6,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n5,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n4,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(n3);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m7);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n7,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n6,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n5,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(n4);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m8);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n7,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n6,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(n5);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m9);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(n7,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(n6);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(m10);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a4f682f5ec94e74581289057925976d11" kindref="member">sumadd_fast</ref>(n7);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" kindref="member">extract_fast</ref>(m11);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(c0<sp/>&lt;=<sp/>1);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>m12<sp/>=<sp/>c0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reduce<sp/>385<sp/>bits<sp/>into<sp/>258.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>p[0..8]<sp/>=<sp/>m[0..7]<sp/>+<sp/>m[8..12]<sp/>*<sp/>SECP256K1_N_C.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>c0<sp/>=<sp/>m0;<sp/>c1<sp/>=<sp/>0;<sp/>c2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1adeb6e766b53f39bb9c0c9f6502aa3b62" kindref="member">muladd_fast</ref>(m8,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" kindref="member">extract_fast</ref>(p0);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a4f682f5ec94e74581289057925976d11" kindref="member">sumadd_fast</ref>(m1);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m9,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m8,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(p1);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(m2);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m10,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m9,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m8,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(p2);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(m3);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m11,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m10,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m9,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m8,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(p3);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(m4);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m12,<sp/><ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m11,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m10,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m9,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(m8);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(p4);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(m5);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m12,<sp/><ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m11,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m10,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(m9);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(p5);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(m6);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m12,<sp/><ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(m11,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a833c2f6d148537ff7aac34a668c9a455" kindref="member">sumadd</ref>(m10);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(p6);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a4f682f5ec94e74581289057925976d11" kindref="member">sumadd_fast</ref>(m7);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1adeb6e766b53f39bb9c0c9f6502aa3b62" kindref="member">muladd_fast</ref>(m12,<sp/><ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a4f682f5ec94e74581289057925976d11" kindref="member">sumadd_fast</ref>(m11);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" kindref="member">extract_fast</ref>(p7);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>p8<sp/>=<sp/>c0<sp/>+<sp/>m12;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(p8<sp/>&lt;=<sp/>2);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reduce<sp/>258<sp/>bits<sp/>into<sp/>256.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>r[0..7]<sp/>=<sp/>p[0..7]<sp/>+<sp/>p[8]<sp/>*<sp/>SECP256K1_N_C.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>p0<sp/>+<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="scalar__8x32__impl_8h_1a7004f2007d2a43820488d377d7167ece" kindref="member">SECP256K1_N_C_0</ref><sp/>*<sp/>p8;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>c<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>c<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>p1<sp/>+<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="scalar__8x32__impl_8h_1a3f8f9c444183fbe3da955925b585290c" kindref="member">SECP256K1_N_C_1</ref><sp/>*<sp/>p8;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>c<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>c<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>p2<sp/>+<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="scalar__8x32__impl_8h_1a2ba4e9e828bc0a11cf7ffc81cd823509" kindref="member">SECP256K1_N_C_2</ref><sp/>*<sp/>p8;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>c<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>c<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>p3<sp/>+<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="scalar__8x32__impl_8h_1a82beb160f9d4bae9b4c2615573e08330" kindref="member">SECP256K1_N_C_3</ref><sp/>*<sp/>p8;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>c<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>c<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>p4<sp/>+<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)p8;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>c<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>c<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>p5;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>c<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>c<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>p6;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>c<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>c<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>p7;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>c<sp/>&amp;<sp/>0xFFFFFFFFUL;<sp/>c<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Final<sp/>reduction<sp/>of<sp/>r.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_reduce(r,<sp/>c<sp/>+<sp/>secp256k1_scalar_check_overflow(r));</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_mul_512(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>*l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>96<sp/>bit<sp/>accumulator.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>c0<sp/>=<sp/>0,<sp/>c1<sp/>=<sp/>0,<sp/>c2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>l[0..15]<sp/>=<sp/>a[0..7]<sp/>*<sp/>b[0..7].<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1adeb6e766b53f39bb9c0c9f6502aa3b62" kindref="member">muladd_fast</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" kindref="member">extract_fast</ref>(l[0]);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[1]);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[2]);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[3]);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[4]);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[5]);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[6]);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[7]);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[8]);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[9]);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[10]);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[11]);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[12]);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[13]);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1adeb6e766b53f39bb9c0c9f6502aa3b62" kindref="member">muladd_fast</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7],<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" kindref="member">extract_fast</ref>(l[14]);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(c1<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>l[15]<sp/>=<sp/>c0;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_sqr_512(<ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>*l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>96<sp/>bit<sp/>accumulator.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>c0<sp/>=<sp/>0,<sp/>c1<sp/>=<sp/>0,<sp/>c2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>l[0..15]<sp/>=<sp/>a[0..7]^2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1adeb6e766b53f39bb9c0c9f6502aa3b62" kindref="member">muladd_fast</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" kindref="member">extract_fast</ref>(l[0]);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[1]);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[2]);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[3]);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[4]);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[5]);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[6]);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[7]);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[8]);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[9]);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[10]);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[11]);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7c03352e405b1d65f6afd0b7a0f01730" kindref="member">muladd</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[12]);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a838fb18f65d05d5d8e5ea9f0584af83f" kindref="member">muladd2</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a2384e06d62f7580d7599d3b77b68acbb" kindref="member">extract</ref>(l[13]);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1adeb6e766b53f39bb9c0c9f6502aa3b62" kindref="member">muladd_fast</ref>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7],<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__8x32__impl_8h_1a7738483bf87a265b882763603d527b3b" kindref="member">extract_fast</ref>(l[14]);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(c1<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>l[15]<sp/>=<sp/>c0;</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>sumadd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>sumadd_fast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>muladd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>muladd_fast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>muladd2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>extract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>extract_fast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_mul(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>l[16];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_mul_512(l,<sp/>a,<sp/>b);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_reduce_512(r,<sp/>l);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_shr_int(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(n<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(n<sp/>&lt;<sp/>16);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>n)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>&gt;&gt;<sp/>n)<sp/>+<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>&gt;&gt;<sp/>n)<sp/>+<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>&gt;&gt;<sp/>n)<sp/>+<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>&gt;&gt;<sp/>n)<sp/>+<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>&gt;&gt;<sp/>n)<sp/>+<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>&gt;&gt;<sp/>n)<sp/>+<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>&gt;&gt;<sp/>n)<sp/>+<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>(r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>&gt;&gt;<sp/>n);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_sqr(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>l[16];</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_sqr_512(l,<sp/>a);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_reduce_512(r,<sp/>l);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_ENDOMORPHISM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_split_128(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r1,<sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>r1-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0];</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>r1-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>r1-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>r1-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>r1-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>r1-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>r1-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>r1-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>r2-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4];</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>r2-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>r2-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6];</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>r2-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7];</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>r2-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>r2-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>r2-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>r2-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_scalar_eq(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>^<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0])<sp/>|<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>^<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1])<sp/>|<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>^<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2])<sp/>|<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>^<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3])<sp/>|<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>^<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4])<sp/>|<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>^<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5])<sp/>|<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>^<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6])<sp/>|<sp/>(a-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>^<sp/>b-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]))<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><ref refid="secp256k1_8h_1a7ddc487fd46aee88f21cabedb7268b1e" kindref="member">SECP256K1_INLINE</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secp256k1_scalar_mul_shift_var(<ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>l[16];</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftlimbs;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shiftlow;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shifthigh;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aca8ac5ae73fd966db106de59160a178b" kindref="member">VERIFY_CHECK</ref>(shift<sp/>&gt;=<sp/>256);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_mul_512(l,<sp/>a,<sp/>b);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>shiftlimbs<sp/>=<sp/>shift<sp/>&gt;&gt;<sp/>5;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>shiftlow<sp/>=<sp/>shift<sp/>&amp;<sp/>0x1F;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>shifthigh<sp/>=<sp/>32<sp/>-<sp/>shiftlow;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[0]<sp/>=<sp/>shift<sp/>&lt;<sp/>512<sp/>?<sp/>(l[0<sp/>+<sp/>shiftlimbs]<sp/>&gt;&gt;<sp/>shiftlow<sp/>|<sp/>(shift<sp/>&lt;<sp/>480<sp/>&amp;&amp;<sp/>shiftlow<sp/>?<sp/>(l[1<sp/>+<sp/>shiftlimbs]<sp/>&lt;&lt;<sp/>shifthigh)<sp/>:<sp/>0))<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[1]<sp/>=<sp/>shift<sp/>&lt;<sp/>480<sp/>?<sp/>(l[1<sp/>+<sp/>shiftlimbs]<sp/>&gt;&gt;<sp/>shiftlow<sp/>|<sp/>(shift<sp/>&lt;<sp/>448<sp/>&amp;&amp;<sp/>shiftlow<sp/>?<sp/>(l[2<sp/>+<sp/>shiftlimbs]<sp/>&lt;&lt;<sp/>shifthigh)<sp/>:<sp/>0))<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[2]<sp/>=<sp/>shift<sp/>&lt;<sp/>448<sp/>?<sp/>(l[2<sp/>+<sp/>shiftlimbs]<sp/>&gt;&gt;<sp/>shiftlow<sp/>|<sp/>(shift<sp/>&lt;<sp/>416<sp/>&amp;&amp;<sp/>shiftlow<sp/>?<sp/>(l[3<sp/>+<sp/>shiftlimbs]<sp/>&lt;&lt;<sp/>shifthigh)<sp/>:<sp/>0))<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[3]<sp/>=<sp/>shift<sp/>&lt;<sp/>416<sp/>?<sp/>(l[3<sp/>+<sp/>shiftlimbs]<sp/>&gt;&gt;<sp/>shiftlow<sp/>|<sp/>(shift<sp/>&lt;<sp/>384<sp/>&amp;&amp;<sp/>shiftlow<sp/>?<sp/>(l[4<sp/>+<sp/>shiftlimbs]<sp/>&lt;&lt;<sp/>shifthigh)<sp/>:<sp/>0))<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[4]<sp/>=<sp/>shift<sp/>&lt;<sp/>384<sp/>?<sp/>(l[4<sp/>+<sp/>shiftlimbs]<sp/>&gt;&gt;<sp/>shiftlow<sp/>|<sp/>(shift<sp/>&lt;<sp/>352<sp/>&amp;&amp;<sp/>shiftlow<sp/>?<sp/>(l[5<sp/>+<sp/>shiftlimbs]<sp/>&lt;&lt;<sp/>shifthigh)<sp/>:<sp/>0))<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[5]<sp/>=<sp/>shift<sp/>&lt;<sp/>352<sp/>?<sp/>(l[5<sp/>+<sp/>shiftlimbs]<sp/>&gt;&gt;<sp/>shiftlow<sp/>|<sp/>(shift<sp/>&lt;<sp/>320<sp/>&amp;&amp;<sp/>shiftlow<sp/>?<sp/>(l[6<sp/>+<sp/>shiftlimbs]<sp/>&lt;&lt;<sp/>shifthigh)<sp/>:<sp/>0))<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[6]<sp/>=<sp/>shift<sp/>&lt;<sp/>320<sp/>?<sp/>(l[6<sp/>+<sp/>shiftlimbs]<sp/>&gt;&gt;<sp/>shiftlow<sp/>|<sp/>(shift<sp/>&lt;<sp/>288<sp/>&amp;&amp;<sp/>shiftlow<sp/>?<sp/>(l[7<sp/>+<sp/>shiftlimbs]<sp/>&lt;&lt;<sp/>shifthigh)<sp/>:<sp/>0))<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsecp256k1__scalar_1a4aba1d263d205acdd537ed9a995393cd" kindref="member">d</ref>[7]<sp/>=<sp/>shift<sp/>&lt;<sp/>288<sp/>?<sp/>(l[7<sp/>+<sp/>shiftlimbs]<sp/>&gt;&gt;<sp/>shiftlow)<sp/><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>secp256k1_scalar_cadd_bit(r,<sp/>0,<sp/>(l[(shift<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>5]<sp/>&gt;&gt;<sp/>((shift<sp/>-<sp/>1)<sp/>&amp;<sp/>0x1f))<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/scalar_8x32_impl.h"/>
  </compounddef>
</doxygen>
