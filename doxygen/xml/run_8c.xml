<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="run_8c" kind="file" language="C++">
    <compoundname>run.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="argon2_8h" local="yes">argon2.h</includes>
    <includes refid="core_8h" local="yes">core.h</includes>
    <incdepgraph>
      <node id="33544">
        <label>stdlib.h</label>
      </node>
      <node id="33548">
        <label>stddef.h</label>
      </node>
      <node id="33549">
        <label>limits.h</label>
      </node>
      <node id="33545">
        <label>string.h</label>
      </node>
      <node id="33546">
        <label>time.h</label>
      </node>
      <node id="33542">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="33547">
        <label>argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="33542" relation="include">
        </childnode>
        <childnode refid="33548" relation="include">
        </childnode>
        <childnode refid="33549" relation="include">
        </childnode>
      </node>
      <node id="33540">
        <label>/home/dev/ds-160209/src/crypto/argon2/run.c</label>
        <link refid="run.c"/>
        <childnode refid="33541" relation="include">
        </childnode>
        <childnode refid="33542" relation="include">
        </childnode>
        <childnode refid="33543" relation="include">
        </childnode>
        <childnode refid="33544" relation="include">
        </childnode>
        <childnode refid="33545" relation="include">
        </childnode>
        <childnode refid="33546" relation="include">
        </childnode>
        <childnode refid="33547" relation="include">
        </childnode>
        <childnode refid="33550" relation="include">
        </childnode>
      </node>
      <node id="33550">
        <label>core.h</label>
        <link refid="core_8h"/>
        <childnode refid="33547" relation="include">
        </childnode>
      </node>
      <node id="33541">
        <label>stdio.h</label>
      </node>
      <node id="33543">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="run_8c_1a1155217fb8cfc9f44d4214ce17244279" prot="public" static="no">
        <name>T_COST_DEF</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="24" column="9" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="24" bodyend="-1"/>
        <referencedby refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="run_8c" startline="129" endline="224">main</referencedby>
      </memberdef>
      <memberdef kind="define" id="run_8c_1a53cd6b0aea9575cacfe1758a6124b6fc" prot="public" static="no">
        <name>LOG_M_COST_DEF</name>
        <initializer>12 /* 2^12 = 4 MiB */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="25" column="9" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="25" bodyend="-1"/>
        <referencedby refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="run_8c" startline="129" endline="224">main</referencedby>
      </memberdef>
      <memberdef kind="define" id="run_8c_1a35950ced2a86f3783801e45c506e88ad" prot="public" static="no">
        <name>LANES_DEF</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="26" column="9" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="26" bodyend="-1"/>
        <referencedby refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="run_8c" startline="129" endline="224">main</referencedby>
      </memberdef>
      <memberdef kind="define" id="run_8c_1a142481d539c784b0cf30c5cff36fdcfc" prot="public" static="no">
        <name>THREADS_DEF</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="27" column="9" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="27" bodyend="-1"/>
        <referencedby refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="run_8c" startline="129" endline="224">main</referencedby>
      </memberdef>
      <memberdef kind="define" id="run_8c_1a62745b2186cad74a62ad07371470f66c" prot="public" static="no">
        <name>OUT_LEN</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="28" column="9" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="28" bodyend="-1"/>
        <referencedby refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="run_8c" startline="129" endline="224">main</referencedby>
      </memberdef>
      <memberdef kind="define" id="run_8c_1a531df3ddc06621690d3ea6e7e05a4e62" prot="public" static="no">
        <name>SALT_LEN</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="29" column="9" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="29" bodyend="-1"/>
        <referencedby refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="run_8c" startline="129" endline="224">main</referencedby>
      </memberdef>
      <memberdef kind="define" id="run_8c_1adc6222263e916dea841a0d6a82c84975" prot="public" static="no">
        <name>ENCODED_LEN</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="45" column="9" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="run_8c_1a3c95a90e7806e4b0d21edfae15b73465" prot="public" static="no">
        <name>UNUSED_PARAMETER</name>
        <param><defname>x</defname></param>
        <initializer>(void)(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="47" column="9" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="run_8c_1a0132ddace16ee87fcaa442081560dfc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void usage</definition>
        <argsstring>(const char *cmd)</argsstring>
        <name>usage</name>
        <param>
          <type>const char *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="49" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="49" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="run_8c_1ad77b3c4d9f3c4fe569601b293dc2feb9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fatal</definition>
        <argsstring>(const char *error)</argsstring>
        <name>fatal</name>
        <param>
          <type>const char *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="65" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="run_8c_1a8c15f6d54c7194fcddaecf7f3d5798be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void run</definition>
        <argsstring>(uint8_t *out, char *pwd, uint8_t *salt, uint32_t t_cost, uint32_t m_cost, uint32_t lanes, uint32_t threads, argon2_type type)</argsstring>
        <name>run</name>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pwd</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref> *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>t_cost</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>m_cost</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>lanes</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>threads</declname>
        </param>
        <param>
          <type><ref refid="argon2_8h_1af51eac9927f7f234943d076166aacf84" kindref="member">argon2_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="82" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="82" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/crypto/argon2/run.c" line="129" column="1" bodyfile="/home/dev/ds-160209/src/crypto/argon2/run.c" bodystart="129" bodyend="224"/>
        <references refid="run_8c_1a62745b2186cad74a62ad07371470f66c" compoundref="run_8c" startline="28">OUT_LEN</references>
        <references refid="run_8c_1a53cd6b0aea9575cacfe1758a6124b6fc" compoundref="run_8c" startline="25">LOG_M_COST_DEF</references>
        <references refid="run_8c_1a1155217fb8cfc9f44d4214ce17244279" compoundref="run_8c" startline="24">T_COST_DEF</references>
        <references refid="run_8c_1a35950ced2a86f3783801e45c506e88ad" compoundref="run_8c" startline="26">LANES_DEF</references>
        <references refid="run_8c_1a142481d539c784b0cf30c5cff36fdcfc" compoundref="run_8c" startline="27">THREADS_DEF</references>
        <references refid="run_8c_1a531df3ddc06621690d3ea6e7e05a4e62" compoundref="run_8c" startline="29">SALT_LEN</references>
        <references refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695ad879f03535165a16f3040eeae7eedefa" compoundref="argon2_8h" startline="197">Argon2_i</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a787a64ed6545a99430075e62573f9836" compoundref="argon2_8h" startline="126">ARGON2_MISSING_ARGS</references>
        <references refid="argon2_8h_1a4c4d65e5e1063b8b6eb4f09729c6f158" compoundref="argon2_8h" startline="48">ARGON2_MAX_MEMORY_BITS</references>
        <references refid="argon2_8h_1a878eeefe63674b6d2d66442570ec3d4d" compoundref="argon2_8h" startline="45">ARGON2_MIN</references>
        <references refid="argon2_8h_1abe6174038201b62c4325ab5ea5bc7e04" compoundref="argon2_8h" startline="50">ARGON2_MAX_MEMORY</references>
        <references refid="argon2_8h_1a149053ac3095ce5920558c4ebe8a21a2" compoundref="argon2_8h" startline="55">ARGON2_MAX_TIME</references>
        <references refid="argon2_8h_1a31f7df4a62c204beca19963fbc63c9fb" compoundref="argon2_8h" startline="33">ARGON2_MAX_THREADS</references>
        <references refid="argon2_8h_1ad63dc221341028d8c50ab847312a1063" compoundref="argon2_8h" startline="29">ARGON2_MAX_LANES</references>
        <references refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695a48ce300350099ad17bb3d5fe7da1c1cc" compoundref="argon2_8h" startline="197">Argon2_d</references>
        <references refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a19b53dfdd59a4e04632b2de23530b3e8" compoundref="argon2_8h" startline="80">ARGON2_OK</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Argon2<sp/>source<sp/>code<sp/>package</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Written<sp/>by<sp/>Daniel<sp/>Dinu<sp/>and<sp/>Dmitry<sp/>Khovratovich,<sp/>2015</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>is<sp/>licensed<sp/>under<sp/>a<sp/>Creative<sp/>Commons<sp/>CC0<sp/>1.0<sp/>License/Waiver.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>CC0<sp/>Public<sp/>Domain<sp/>Dedication<sp/>along</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>with</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>this<sp/>software.<sp/>If<sp/>not,<sp/>see</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>&lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="argon2_8h" kindref="compound">argon2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_8h" kindref="compound">core.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="run_8c_1a1155217fb8cfc9f44d4214ce17244279" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>T_COST_DEF<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="run_8c_1a53cd6b0aea9575cacfe1758a6124b6fc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_M_COST_DEF<sp/>12<sp/></highlight><highlight class="comment">/*<sp/>2^12<sp/>=<sp/>4<sp/>MiB<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="run_8c_1a35950ced2a86f3783801e45c506e88ad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LANES_DEF<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="run_8c_1a142481d539c784b0cf30c5cff36fdcfc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREADS_DEF<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="run_8c_1a62745b2186cad74a62ad07371470f66c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUT_LEN<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="run_8c_1a531df3ddc06621690d3ea6e7e05a4e62" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SALT_LEN<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Sample<sp/>encode:<sp/>$argon2i$m=65536,t=2,p=4$c29tZXNhbHQAAAAAAAAAAA$QWLzI4TY9HkL2ZTLc8g6SinwdhZewYrzz9zxCo0bkGY</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Maximumum<sp/>lengths<sp/>are<sp/>defined<sp/>as:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>strlen<sp/>$argon2i$<sp/>=<sp/>9</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>m=65536<sp/>with<sp/>strlen<sp/>(uint32_t)-1<sp/>=<sp/>10,<sp/>so<sp/>this<sp/>total<sp/>is<sp/>12</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>,t=2,p=4<sp/>If<sp/>we<sp/>consider<sp/>each<sp/>number<sp/>to<sp/>potentially<sp/>reach<sp/>four<sp/>digits<sp/>in<sp/>future,<sp/>this<sp/>=<sp/>14</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>$c29tZXNhbHQAAAAAAAAAAA<sp/>Formula<sp/>for<sp/>this<sp/>is<sp/>(SALT_LEN<sp/>*<sp/>4<sp/>+<sp/>3)<sp/>/<sp/>3<sp/>+<sp/>1<sp/>=<sp/>23</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>$QWLzI4TY9HkL2ZTLc8g6SinwdhZewYrzz9zxCo0bkGY<sp/>per<sp/>above<sp/>formula,<sp/>=<sp/>44</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>+<sp/>NULL<sp/>byte</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>9<sp/>+<sp/>12<sp/>+<sp/>14<sp/>+<sp/>23<sp/>+<sp/>44<sp/>+<sp/>1<sp/>=<sp/>103</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Rounded<sp/>to<sp/>4<sp/>byte<sp/>boundary:<sp/>104</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>WARNING:<sp/>104<sp/>is<sp/>only<sp/>for<sp/>the<sp/>parameters<sp/>supported<sp/>by<sp/>this</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>command-line<sp/>utility.<sp/>You&apos;ll<sp/>need<sp/>a<sp/>longer<sp/>ENCODED_LEN<sp/>to<sp/>support</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>longer<sp/>salts<sp/>and<sp/>ouputs,<sp/>as<sp/>supported<sp/>by<sp/>the<sp/>argon2<sp/>library</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="run_8c_1adc6222263e916dea841a0d6a82c84975" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENCODED_LEN<sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="run_8c_1a3c95a90e7806e4b0d21edfae15b73465" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNUSED_PARAMETER(x)<sp/>(void)(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>usage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmd)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Usage:<sp/><sp/>%s<sp/>salt<sp/>[-d]<sp/>[-t<sp/>iterations]<sp/>[-m<sp/>memory]<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[-p<sp/>parallelism]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\tPassword<sp/>is<sp/>read<sp/>from<sp/>stdin\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Parameters:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\tsalt\t\tThe<sp/>salt<sp/>to<sp/>use,<sp/>at<sp/>most<sp/>16<sp/>characters\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t-d\t\tUse<sp/>Argon2d<sp/>instead<sp/>of<sp/>Argon2i<sp/>(which<sp/>is<sp/>the<sp/>default)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t-t<sp/>N\t\tSets<sp/>the<sp/>number<sp/>of<sp/>iterations<sp/>to<sp/>N<sp/>(default<sp/>=<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="run_8c_1a1155217fb8cfc9f44d4214ce17244279" kindref="member">T_COST_DEF</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t-m<sp/>N\t\tSets<sp/>the<sp/>memory<sp/>usage<sp/>of<sp/>2^N<sp/>KiB<sp/>(default<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="run_8c_1a53cd6b0aea9575cacfe1758a6124b6fc" kindref="member">LOG_M_COST_DEF</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t-p<sp/>N\t\tSets<sp/>parallelism<sp/>to<sp/>N<sp/>threads<sp/>(default<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="run_8c_1a142481d539c784b0cf30c5cff36fdcfc" kindref="member">THREADS_DEF</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fatal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>error);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="71"><highlight class="comment">Runs<sp/>Argon2<sp/>with<sp/>certain<sp/>inputs<sp/>and<sp/>parameters,<sp/>inputs<sp/>not<sp/>cleared.<sp/>Prints<sp/>the</highlight></codeline>
<codeline lineno="72"><highlight class="comment">Base64-encoded<sp/>hash<sp/>string</highlight></codeline>
<codeline lineno="73"><highlight class="comment">@out<sp/>output<sp/>array<sp/>with<sp/>at<sp/>least<sp/>32<sp/>bytes<sp/>allocated</highlight></codeline>
<codeline lineno="74"><highlight class="comment">@pwd<sp/>NULL-terminated<sp/>string,<sp/>presumably<sp/>from<sp/>argv[]</highlight></codeline>
<codeline lineno="75"><highlight class="comment">@salt<sp/>salt<sp/>array<sp/>with<sp/>at<sp/>least<sp/>SALTLEN_DEF<sp/>bytes<sp/>allocated</highlight></codeline>
<codeline lineno="76"><highlight class="comment">@t_cost<sp/>number<sp/>of<sp/>iterations</highlight></codeline>
<codeline lineno="77"><highlight class="comment">@m_cost<sp/>amount<sp/>of<sp/>requested<sp/>memory<sp/>in<sp/>KB</highlight></codeline>
<codeline lineno="78"><highlight class="comment">@lanes<sp/>amount<sp/>of<sp/>requested<sp/>parallelism</highlight></codeline>
<codeline lineno="79"><highlight class="comment">@threads<sp/>actual<sp/>parallelism</highlight></codeline>
<codeline lineno="80"><highlight class="comment">@type<sp/>String,<sp/>only<sp/>&quot;d&quot;<sp/>and<sp/>&quot;i&quot;<sp/>are<sp/>accepted</highlight></codeline>
<codeline lineno="81"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pwd,<sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*salt,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>t_cost,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>m_cost,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>lanes,<sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>threads,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="argon2_8h_1af51eac9927f7f234943d076166aacf84" kindref="member">argon2_type</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_t<sp/>start_time,<sp/>stop_time;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pwdlen;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>encoded[<ref refid="run_8c_1adc6222263e916dea841a0d6a82c84975" kindref="member">ENCODED_LEN</ref>];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>i;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pwd)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;password<sp/>missing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!salt)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="core_8c_1a4dddd8d2a28d3d10722ce287579426aa" kindref="member">secure_wipe_memory</ref>(pwd,<sp/>strlen(pwd));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;salt<sp/>missing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>pwdlen<sp/>=<sp/>strlen(pwd);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="run_8c_1a3c95a90e7806e4b0d21edfae15b73465" kindref="member">UNUSED_PARAMETER</ref>(lanes);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="argon2_8c_1a49e50c1bc7f51a1230d1ce7bbcf18f9f" kindref="member">argon2_hash</ref>(t_cost,<sp/>m_cost,<sp/>threads,<sp/>pwd,<sp/>pwdlen,<sp/>salt,<sp/><ref refid="run_8c_1a531df3ddc06621690d3ea6e7e05a4e62" kindref="member">SALT_LEN</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,<sp/><ref refid="run_8c_1a62745b2186cad74a62ad07371470f66c" kindref="member">OUT_LEN</ref>,<sp/>encoded,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>encoded,<sp/>type);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a19b53dfdd59a4e04632b2de23530b3e8" kindref="member">ARGON2_OK</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(<ref refid="argon2_8c_1aecedea424e516e50709e8a7b08ece644" kindref="member">error_message</ref>(result));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>stop_time<sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Hash:\t\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="run_8c_1a62745b2186cad74a62ad07371470f66c" kindref="member">OUT_LEN</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>out[i]);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Encoded:\t%s\n&quot;</highlight><highlight class="normal">,<sp/>encoded);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%2.3f<sp/>seconds\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)stop_time<sp/>-<sp/>start_time)<sp/>/<sp/>(CLOCKS_PER_SEC));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="argon2_8c_1a6dbd567c6037a5c55987312158d5bb0a" kindref="member">argon2_verify</ref>(encoded,<sp/>pwd,<sp/>pwdlen,<sp/>type);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a19b53dfdd59a4e04632b2de23530b3e8" kindref="member">ARGON2_OK</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(<ref refid="argon2_8c_1aecedea424e516e50709e8a7b08ece644" kindref="member">error_message</ref>(result));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Verification<sp/>ok\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>out[<ref refid="run_8c_1a62745b2186cad74a62ad07371470f66c" kindref="member">OUT_LEN</ref>];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>m_cost<sp/>=<sp/>1<sp/>&lt;&lt;<sp/><ref refid="run_8c_1a53cd6b0aea9575cacfe1758a6124b6fc" kindref="member">LOG_M_COST_DEF</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>t_cost<sp/>=<sp/><ref refid="run_8c_1a1155217fb8cfc9f44d4214ce17244279" kindref="member">T_COST_DEF</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>lanes<sp/>=<sp/><ref refid="run_8c_1a35950ced2a86f3783801e45c506e88ad" kindref="member">LANES_DEF</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>threads<sp/>=<sp/><ref refid="run_8c_1a142481d539c784b0cf30c5cff36fdcfc" kindref="member">THREADS_DEF</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>salt[<ref refid="run_8c_1a531df3ddc06621690d3ea6e7e05a4e62" kindref="member">SALT_LEN</ref>];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="argon2_8h_1af51eac9927f7f234943d076166aacf84" kindref="member">argon2_type</ref><sp/>type<sp/>=<sp/><ref refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695ad879f03535165a16f3040eeae7eedefa" kindref="member">Argon2_i</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pwd[128];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usage(argv[0]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a787a64ed6545a99430075e62573f9836" kindref="member">ARGON2_MISSING_ARGS</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>password<sp/>from<sp/>stdin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>fread(pwd,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>pwd<sp/>-<sp/>1,<sp/>stdin))<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwd[n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwd[n<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwd[n<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>salt<sp/>from<sp/>command<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(argv[1])<sp/>&gt;<sp/><ref refid="run_8c_1a531df3ddc06621690d3ea6e7e05a4e62" kindref="member">SALT_LEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;salt<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(salt,<sp/>0x00,<sp/><ref refid="run_8c_1a531df3ddc06621690d3ea6e7e05a4e62" kindref="member">SALT_LEN</ref>);<sp/></highlight><highlight class="comment">/*<sp/>pad<sp/>with<sp/>null<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(salt,<sp/>argv[1],<sp/>strlen(argv[1]));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parse<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>input<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,<sp/></highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>argc<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>=<sp/>strtoul(argv[i],<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/>0<sp/>||<sp/>input<sp/>==<sp/>ULONG_MAX<sp/>||</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>&gt;<sp/><ref refid="argon2_8h_1a4c4d65e5e1063b8b6eb4f09729c6f158" kindref="member">ARGON2_MAX_MEMORY_BITS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;bad<sp/>numeric<sp/>input<sp/>for<sp/>-m&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cost<sp/>=<sp/><ref refid="argon2_8h_1a878eeefe63674b6d2d66442570ec3d4d" kindref="member">ARGON2_MIN</ref>(UINT64_C(1)<sp/>&lt;&lt;<sp/>input,<sp/>UINT32_C(0xFFFFFFFF));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_cost<sp/>&gt;<sp/><ref refid="argon2_8h_1abe6174038201b62c4325ab5ea5bc7e04" kindref="member">ARGON2_MAX_MEMORY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;m_cost<sp/>overflow&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;missing<sp/>-m<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,<sp/></highlight><highlight class="stringliteral">&quot;-t&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>argc<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>=<sp/>strtoul(argv[i],<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/>0<sp/>||<sp/>input<sp/>==<sp/>ULONG_MAX<sp/>||</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>&gt;<sp/><ref refid="argon2_8h_1a149053ac3095ce5920558c4ebe8a21a2" kindref="member">ARGON2_MAX_TIME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;bad<sp/>numeric<sp/>input<sp/>for<sp/>-t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_cost<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;missing<sp/>-t<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,<sp/></highlight><highlight class="stringliteral">&quot;-p&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>argc<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>=<sp/>strtoul(argv[i],<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/>0<sp/>||<sp/>input<sp/>==<sp/>ULONG_MAX<sp/>||</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>&gt;<sp/><ref refid="argon2_8h_1a31f7df4a62c204beca19963fbc63c9fb" kindref="member">ARGON2_MAX_THREADS</ref><sp/>||<sp/>input<sp/>&gt;<sp/><ref refid="argon2_8h_1ad63dc221341028d8c50ab847312a1063" kindref="member">ARGON2_MAX_LANES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;bad<sp/>numeric<sp/>input<sp/>for<sp/>-p&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threads<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lanes<sp/>=<sp/>threads;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;missing<sp/>-p<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,<sp/></highlight><highlight class="stringliteral">&quot;-d&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/><ref refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695a48ce300350099ad17bb3d5fe7da1c1cc" kindref="member">Argon2_d</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal(</highlight><highlight class="stringliteral">&quot;unknown<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="argon2_8h_1a5d5d088fc49f3e133161c81e15fe1695ad879f03535165a16f3040eeae7eedefa" kindref="member">Argon2_i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Type:\t\tArgon2i\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Type:\t\tArgon2d\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Iterations:\t%&quot;</highlight><highlight class="normal"><sp/>PRIu32<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>t_cost);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Memory:\t\t%&quot;</highlight><highlight class="normal"><sp/>PRIu32<sp/></highlight><highlight class="stringliteral">&quot;<sp/>KiB\n&quot;</highlight><highlight class="normal">,<sp/>m_cost);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Parallelism:\t%&quot;</highlight><highlight class="normal"><sp/>PRIu32<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>lanes);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>run(out,<sp/>pwd,<sp/>salt,<sp/>t_cost,<sp/>m_cost,<sp/>lanes,<sp/>threads,<sp/>type);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="argon2_8h_1a08c31200596bf26c39b07c1734f654b9a19b53dfdd59a4e04632b2de23530b3e8" kindref="member">ARGON2_OK</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/crypto/argon2/run.c"/>
  </compounddef>
</doxygen>
