<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="i2psam_8cpp" kind="file" language="C++">
    <compoundname>i2psam.cpp</compoundname>
    <includes refid="i2psam_8h" local="yes">i2psam.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="34678">
        <label>list</label>
      </node>
      <node id="34690">
        <label>stdarg.h</label>
      </node>
      <node id="34683">
        <label>netinet/in.h</label>
      </node>
      <node id="34684">
        <label>arpa/inet.h</label>
      </node>
      <node id="34688">
        <label>stdlib.h</label>
      </node>
      <node id="34691">
        <label>errno.h</label>
      </node>
      <node id="34677">
        <label>string</label>
      </node>
      <node id="34687">
        <label>string.h</label>
      </node>
      <node id="34692">
        <label>unistd.h</label>
      </node>
      <node id="34681">
        <label>utility</label>
      </node>
      <node id="34689">
        <label>time.h</label>
      </node>
      <node id="34679">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="34675">
        <label>/home/dev/ds-160209/src/i2psam.cpp</label>
        <link refid="i2psam.cpp"/>
        <childnode refid="34676" relation="include">
        </childnode>
        <childnode refid="34682" relation="include">
        </childnode>
        <childnode refid="34683" relation="include">
        </childnode>
        <childnode refid="34684" relation="include">
        </childnode>
        <childnode refid="34685" relation="include">
        </childnode>
        <childnode refid="34686" relation="include">
        </childnode>
        <childnode refid="34687" relation="include">
        </childnode>
        <childnode refid="34688" relation="include">
        </childnode>
        <childnode refid="34689" relation="include">
        </childnode>
        <childnode refid="34690" relation="include">
        </childnode>
        <childnode refid="34691" relation="include">
        </childnode>
        <childnode refid="34692" relation="include">
        </childnode>
      </node>
      <node id="34676">
        <label>i2psam.h</label>
        <link refid="i2psam_8h"/>
        <childnode refid="34677" relation="include">
        </childnode>
        <childnode refid="34678" relation="include">
        </childnode>
        <childnode refid="34679" relation="include">
        </childnode>
        <childnode refid="34680" relation="include">
        </childnode>
        <childnode refid="34681" relation="include">
        </childnode>
        <childnode refid="34682" relation="include">
        </childnode>
        <childnode refid="34683" relation="include">
        </childnode>
        <childnode refid="34684" relation="include">
        </childnode>
      </node>
      <node id="34685">
        <label>iostream</label>
      </node>
      <node id="34682">
        <label>sys/socket.h</label>
      </node>
      <node id="34686">
        <label>stdio.h</label>
      </node>
      <node id="34680">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_s_a_m">SAM</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="i2psam_8cpp_1afdbb9d84bd17efd2ae7290e664992c48" prot="public" static="no">
        <name>closesocket</name>
        <initializer>close</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2psam.cpp" line="31" column="9" bodyfile="/home/dev/ds-160209/src/i2psam.cpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" compoundref="i2psam_8cpp" startline="204" endline="209">SAM::Socket::close</referencedby>
      </memberdef>
      <memberdef kind="define" id="i2psam_8cpp_1af210419ef90774c70688aca59df0defe" prot="public" static="no">
        <name>SAM_BUFSIZE</name>
        <initializer>65536</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2psam.cpp" line="34" column="9" bodyfile="/home/dev/ds-160209/src/i2psam.cpp" bodystart="34" bodyend="-1"/>
        <referencedby refid="class_s_a_m_1_1_socket_1a3455043c16c8ca5c64855e6ea3ff15e1" compoundref="i2psam_8cpp" startline="179" endline="202">SAM::Socket::read</referencedby>
      </memberdef>
      <memberdef kind="define" id="i2psam_8cpp_1ab52a24da8d22e420019d4e97a9ba42ca" prot="public" static="no">
        <name>I2P_DESTINATION_SIZE</name>
        <initializer>516</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2psam.cpp" line="35" column="9" bodyfile="/home/dev/ds-160209/src/i2psam.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="i2psam_8cpp_1a8a88c6398fb4156cf0bc569f32e50111" prot="public" static="no">
        <name>SAM_MAKESTRING</name>
        <param><defname>X</defname></param>
        <initializer><ref refid="i2psam_8cpp_1ad80dba005ca0f39f8a5b6a23ce40f227" kindref="member">SAM_MAKESTRING2</ref>(<ref refid="net_8cpp_1a826edd40636cbaa44266b97c8c6a4fa3" kindref="member">X</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2psam.cpp" line="747" column="9" bodyfile="/home/dev/ds-160209/src/i2psam.cpp" bodystart="747" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="i2psam_8cpp_1ad80dba005ca0f39f8a5b6a23ce40f227" prot="public" static="no">
        <name>SAM_MAKESTRING2</name>
        <param><defname>X</defname></param>
        <initializer>#<ref refid="net_8cpp_1a826edd40636cbaa44266b97c8c6a4fa3" kindref="member">X</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2psam.cpp" line="748" column="9" bodyfile="/home/dev/ds-160209/src/i2psam.cpp" bodystart="748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" prot="public" static="no">
        <name>SAM_CHECK_RESULT</name>
        <param><defname>value</defname></param>
        <initializer>if (result == <ref refid="i2psam_8cpp_1a8a88c6398fb4156cf0bc569f32e50111" kindref="member">SAM_MAKESTRING</ref>(<ref refid="cache_8cc_1a0f61d63b009d0880a89c843bd50d8d76" kindref="member">value</ref>)) return <ref refid="cache_8cc_1a0f61d63b009d0880a89c843bd50d8d76" kindref="member">value</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/i2psam.cpp" line="750" column="9" bodyfile="/home/dev/ds-160209/src/i2psam.cpp" bodystart="750" bodyend="-1"/>
        <referencedby refid="class_s_a_m_1_1_message_1a1d976198d4f36ab56f838f560d536d37" compoundref="i2psam_8cpp" startline="753" endline="774">SAM::Message::checkAnswer</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012-2016<sp/>giv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="i2psam_8h" kindref="compound">i2psam.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>_WIN32_WINNT<sp/>0x0501</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIN32_LEAN_AND_MEAN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FD_SETSIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;winsock2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>sockaddr_in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>ntohs<sp/>and<sp/>htons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>memset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="i2psam_8cpp_1afdbb9d84bd17efd2ae7290e664992c48" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>closesocket<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="i2psam_8cpp_1af210419ef90774c70688aca59df0defe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAM_BUFSIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>65536</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="i2psam_8cpp_1ab52a24da8d22e420019d4e97a9ba42ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>I2P_DESTINATION_SIZE<sp/>516</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_a_m" kindref="compound">SAM</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>err)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="compat_8h_1a6d24fe3ab2906c21c373505ca244f90b" kindref="member">WSAGetLastError</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>errno<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Socket::instances_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Socket::initWSA()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>WSADATA<sp/>wsadata;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>WSAStartup(MAKEWORD(2,2),<sp/>&amp;wsadata);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>NO_ERROR)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>winsock<sp/>library&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Socket::freeWSA()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>WSACleanup();</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_s_a_m_1_1_socket_1ab1373984617b43dc2108491181de49b3" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_socket_1ab1373984617b43dc2108491181de49b3" kindref="member">Socket::Socket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>SAMHost,<sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/>SAMPort,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>minVer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;maxVer)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>socket_(<ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>),<sp/>SAMHost_(SAMHost),<sp/>SAMPort_(SAMPort),<sp/>minVer_(minVer),<sp/>maxVer_(maxVer)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instances_++<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initWSA();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;servAddr_,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(servAddr_));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>servAddr_.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>servAddr_.sin_addr.s_addr<sp/>=<sp/>inet_addr(SAMHost.c_str());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>servAddr_.sin_port<sp/>=<sp/>htons(SAMPort);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_a_m_1_1_socket_1a1455a6eec384bbdeda6382f33b49843b" kindref="member">isOk</ref>())</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handshake();</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_s_a_m_1_1_socket_1a8198a7e58a724ed21c4b74d933fccce1" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_socket_1ab1373984617b43dc2108491181de49b3" kindref="member">Socket::Socket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sockaddr_in&amp;<sp/>addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;minVer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>maxVer)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>socket_(<ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>),<sp/>servAddr_(addr),<sp/>minVer_(minVer),<sp/>maxVer_(maxVer)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instances_++<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initWSA();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_a_m_1_1_socket_1a1455a6eec384bbdeda6382f33b49843b" kindref="member">isOk</ref>())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handshake();</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_s_a_m_1_1_socket_1a37bdef8fc2f5c74b84878372a924645a" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_socket_1ab1373984617b43dc2108491181de49b3" kindref="member">Socket::Socket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_socket" kindref="compound">Socket</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>socket_(<ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>),<sp/>servAddr_(rhs.servAddr_),<sp/>minVer_(rhs.minVer_),<sp/>maxVer_(rhs.maxVer_)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instances_++<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initWSA();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_a_m_1_1_socket_1a1455a6eec384bbdeda6382f33b49843b" kindref="member">isOk</ref>())</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handshake();</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_s_a_m_1_1_socket_1ae05c892b5b1dec9dc3d4e0db093cb48c" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_socket_1ae05c892b5b1dec9dc3d4e0db093cb48c" kindref="member">Socket::~Socket</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--instances_<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeWSA();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Socket::init()</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>socket_<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_<sp/>==<sp/><ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connect(socket_,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sockaddr*)&amp;servAddr_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(servAddr_))<sp/>==<sp/><ref refid="i2psam_8h_1a6f2c53880df69517bed9beb8e7cebd9a" kindref="member">SAM_SOCKET_ERROR</ref>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>connect<sp/>to<sp/>SAM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_s_a_m_1_1_socket_1a1ae8f5a54a2293338b29c83ba4e56934" refkind="member"><highlight class="normal"><ref refid="namespace_s_a_m_1a346e18b1c3780d27cc960b8a432dfdf7" kindref="member">SOCKET</ref><sp/><ref refid="class_s_a_m_1_1_socket_1a1ae8f5a54a2293338b29c83ba4e56934" kindref="member">Socket::release</ref>()</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_s_a_m_1a346e18b1c3780d27cc960b8a432dfdf7" kindref="member">SOCKET</ref><sp/>temp<sp/>=<sp/>socket_;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>socket_<sp/>=<sp/><ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Socket::handshake()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_s_a_m_1_1_socket_1ae19e83b3127dc1560f164a05b1acd763" kindref="member">write</ref>(<ref refid="class_s_a_m_1_1_message_1a586e92a2047246d9bc1d54b2fe184531" kindref="member">Message::hello</ref>(minVer_,<sp/>maxVer_));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>answer<sp/>=<sp/>this-&gt;<ref refid="class_s_a_m_1_1_socket_1a3455043c16c8ca5c64855e6ea3ff15e1" kindref="member">read</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/>answerStatus<sp/>=<sp/><ref refid="class_s_a_m_1_1_message_1a1d976198d4f36ab56f838f560d536d37" kindref="member">Message::checkAnswer</ref>(answer);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(answerStatus<sp/>==<sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">Message::OK</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version_<sp/>=<sp/><ref refid="class_s_a_m_1_1_message_1a134481a97dd531c7e5e11aeff965ea6c" kindref="member">Message::getValue</ref>(answer,<sp/></highlight><highlight class="stringliteral">&quot;VERSION&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Handshake<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_s_a_m_1_1_socket_1ae19e83b3127dc1560f164a05b1acd763" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_socket_1ae19e83b3127dc1560f164a05b1acd763" kindref="member">Socket::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_s_a_m_1_1_socket_1a1455a6eec384bbdeda6382f33b49843b" kindref="member">isOk</ref>())</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>send<sp/>data<sp/>because<sp/>socket<sp/>is<sp/>closed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Send:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>sentBytes<sp/>=<sp/>send(socket_,<sp/>msg.c_str(),<sp/>msg.length(),<sp/>0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sentBytes<sp/>==<sp/><ref refid="i2psam_8h_1a6f2c53880df69517bed9beb8e7cebd9a" kindref="member">SAM_SOCKET_ERROR</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>send<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sentBytes<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Socket<sp/>was<sp/>closed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_s_a_m_1_1_socket_1a3455043c16c8ca5c64855e6ea3ff15e1" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_socket_1a3455043c16c8ca5c64855e6ea3ff15e1" kindref="member">Socket::read</ref>()</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_s_a_m_1_1_socket_1a1455a6eec384bbdeda6382f33b49843b" kindref="member">isOk</ref>())</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>data<sp/>because<sp/>socket<sp/>is<sp/>closed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[<ref refid="i2psam_8cpp_1af210419ef90774c70688aca59df0defe" kindref="member">SAM_BUFSIZE</ref>];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(buffer,<sp/>0,<sp/><ref refid="i2psam_8cpp_1af210419ef90774c70688aca59df0defe" kindref="member">SAM_BUFSIZE</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>recievedBytes<sp/>=<sp/>recv(socket_,<sp/>buffer,<sp/><ref refid="i2psam_8cpp_1af210419ef90774c70688aca59df0defe" kindref="member">SAM_BUFSIZE</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recievedBytes<sp/>==<sp/><ref refid="i2psam_8h_1a6f2c53880df69517bed9beb8e7cebd9a" kindref="member">SAM_SOCKET_ERROR</ref>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>receive<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recievedBytes<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Socket<sp/>was<sp/>closed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reply:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>buffer<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(buffer);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" kindref="member">Socket::close</ref>()</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_<sp/>!=<sp/><ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1afdbb9d84bd17efd2ae7290e664992c48" kindref="member">::closesocket</ref>(socket_);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>socket_<sp/>=<sp/><ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_s_a_m_1_1_socket_1a1455a6eec384bbdeda6382f33b49843b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_socket_1a1455a6eec384bbdeda6382f33b49843b" kindref="member">Socket::isOk</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="212"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>socket_<sp/>!=<sp/><ref refid="i2psam_8h_1a7b81076ad8af0cf96b9cf0683b6c58ba" kindref="member">SAM_INVALID_SOCKET</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_s_a_m_1_1_socket_1abfd0ebd986ade7cb5f1dbdf0ae46ef29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_socket_1abfd0ebd986ade7cb5f1dbdf0ae46ef29" kindref="member">Socket::getHost</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SAMHost_;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_s_a_m_1_1_socket_1abf30c1cd04433cd08364685063fa9c92" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/><ref refid="class_s_a_m_1_1_socket_1abf30c1cd04433cd08364685063fa9c92" kindref="member">Socket::getPort</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="222"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SAMPort_;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_s_a_m_1_1_socket_1a513c5e443cd8c6265520a7602ab678c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_socket_1a513c5e443cd8c6265520a7602ab678c3" kindref="member">Socket::getVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="227"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>version_;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_s_a_m_1_1_socket_1a381bb95e90cfc2f0f8170ee497a28e1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_socket_1a381bb95e90cfc2f0f8170ee497a28e1d" kindref="member">Socket::getMinVer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="232"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minVer_;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="class_s_a_m_1_1_socket_1a9dc5718ac337a935e3144b60f86f969c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_socket_1a9dc5718ac337a935e3144b60f86f969c" kindref="member">Socket::getMaxVer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="237"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxVer_;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_s_a_m_1_1_socket_1aabf6192dbde4829cf9d42fbcec31398d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sockaddr_in&amp;<sp/><ref refid="class_s_a_m_1_1_socket_1aabf6192dbde4829cf9d42fbcec31398d" kindref="member">Socket::getAddress</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="242"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>servAddr_;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="class_s_a_m_1_1_stream_session_1a8c0e662f65ac3b0bf9da6dac1f051400" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_stream_session_1a8c0e662f65ac3b0bf9da6dac1f051400" kindref="member">StreamSession::StreamSession</ref>(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nickname,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>SAMHost<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_ADDRESS*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/>SAMPort<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_PORT*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>destination<sp/></highlight><highlight class="comment">/*=<sp/>SAM_GENERATE_MY_DESTINATION*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>i2pOptions<sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_I2P_OPTIONS*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>minVer<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_MIN_VER*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>maxVer<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=<sp/>SAM_DEFAULT_MAX_VER*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>socket_(SAMHost,<sp/>SAMPort,<sp/>minVer,<sp/>maxVer)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>nickname_(nickname)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sessionID_(generateSessionID())</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>i2pOptions_(i2pOptions)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>isSick_(false)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>myDestination_<sp/>=<sp/>createStreamSession(destination);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>a<sp/>brand<sp/>new<sp/>SAM<sp/>session<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sessionID_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="class_s_a_m_1_1_stream_session_1acf0524038cc788a6d4833beb23090e53" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_stream_session_1a8c0e662f65ac3b0bf9da6dac1f051400" kindref="member">StreamSession::StreamSession</ref>(<ref refid="class_s_a_m_1_1_stream_session" kindref="compound">StreamSession</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>socket_(rhs.socket_)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>nickname_(rhs.nickname_)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sessionID_(generateSessionID())</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>myDestination_(rhs.myDestination_)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>i2pOptions_(rhs.i2pOptions_)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>isSick_(false)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fallSick();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.socket_.<ref refid="class_s_a_m_1_1_socket_1a4255f1f63449dfc32d012089ea73f5e7" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)createStreamSession(myDestination_.<ref refid="struct_s_a_m_1_1_full_destination_1a9ce0281e2f9cd55dcfc773c7fbd09f0f" kindref="member">priv</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ForwardedStreamsContainer::const_iterator<sp/>it<sp/>=<sp/>rhs.forwardedStreams_.begin(),<sp/>end<sp/>=<sp/>rhs.forwardedStreams_.end();<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_a_m_1_1_stream_session_1a3bedd8a940e2aaa7f4f8d48104f76f10" kindref="member">forward</ref>(it-&gt;host,<sp/>it-&gt;port,<sp/>it-&gt;silent);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>a<sp/>new<sp/>SAM<sp/>session<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sessionID_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/><sp/>from<sp/>another<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rhs.sessionID_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_s_a_m_1_1_stream_session_1a651f8f24fca3be7aa942ca705e54d377" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_stream_session_1a651f8f24fca3be7aa942ca705e54d377" kindref="member">StreamSession::~StreamSession</ref>()</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_a_m_1_1_stream_session_1a3dc7da81392eb7d1b29d35c3855407ba" kindref="member">stopForwardingAll</ref>();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Closing<sp/>SAM<sp/>session<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sessionID_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="class_s_a_m_1_1_stream_session_1abe3c3463ae7985a8f506c091d756d6b9" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_stream_session_1abe3c3463ae7985a8f506c091d756d6b9" kindref="member">StreamSession::generateSessionID</ref>()</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSessionIDLength<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSessionIDLength<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sessionIDAlphabet[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>minSessionIDLength<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(length<sp/>&lt;<sp/>minSessionIDLength)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/><ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()<sp/>%<sp/>maxSessionIDLength;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(length--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>sessionIDAlphabet[<ref refid="db__bench_8cc_1a2391b9dab13f09bae65ae349c8d4c271" kindref="member">rand</ref>()<sp/>%<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sessionIDAlphabet)-1)];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_s_a_m_1_1_stream_session_1a438d8c25762f240775717f7952110351" refkind="member"><highlight class="normal"><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">RequestResult&lt;std::auto_ptr&lt;Socket&gt;</ref><sp/>&gt;<sp/><ref refid="class_s_a_m_1_1_stream_session_1a438d8c25762f240775717f7952110351" kindref="member">StreamSession::accept</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">RequestResult&lt;std::auto_ptr&lt;Socket&gt;</ref><sp/>&gt;<sp/>ResultType;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Socket&gt;<sp/>streamSocket(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_socket" kindref="compound">Socket</ref>(socket_));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/>status<sp/>=<sp/><ref refid="class_s_a_m_1_1_stream_session_1a438d8c25762f240775717f7952110351" kindref="member">accept</ref>(*streamSocket,<sp/>sessionID_,<sp/>silent);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(status)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">Message::OK</ref>:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">RequestResult&lt;std::auto_ptr&lt;Socket&gt;</ref><sp/>&gt;(streamSocket);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a54fb3c8963ca6a694f1d81b567421634" kindref="member">Message::EMPTY_ANSWER</ref>:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a488d4ef18a57b9fa8bcac1c6812ed61b" kindref="member">Message::CLOSED_SOCKET</ref>:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9abf3cd2fa0e49f194b3d5504e7e114f97" kindref="member">Message::INVALID_ID</ref>:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a730c2f1c512a12bba42d88a25302ad9f" kindref="member">Message::I2P_ERROR</ref>:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fallSick();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType();</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="class_s_a_m_1_1_stream_session_1abc8b96738b75e87f5bee150a3cc429de" refkind="member"><highlight class="normal"><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">RequestResult&lt;std::auto_ptr&lt;Socket&gt;</ref><sp/>&gt;<sp/><ref refid="class_s_a_m_1_1_stream_session_1abc8b96738b75e87f5bee150a3cc429de" kindref="member">StreamSession::connect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>destination,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">RequestResult&lt;std::auto_ptr&lt;Socket&gt;</ref><sp/>&gt;<sp/>ResultType;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Socket&gt;<sp/>streamSocket(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_socket" kindref="compound">Socket</ref>(socket_));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/>status<sp/>=<sp/><ref refid="class_s_a_m_1_1_stream_session_1abc8b96738b75e87f5bee150a3cc429de" kindref="member">connect</ref>(*streamSocket,<sp/>sessionID_,<sp/>destination,<sp/>silent);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(status)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">Message::OK</ref>:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType(streamSocket);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a54fb3c8963ca6a694f1d81b567421634" kindref="member">Message::EMPTY_ANSWER</ref>:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a488d4ef18a57b9fa8bcac1c6812ed61b" kindref="member">Message::CLOSED_SOCKET</ref>:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9abf3cd2fa0e49f194b3d5504e7e114f97" kindref="member">Message::INVALID_ID</ref>:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a730c2f1c512a12bba42d88a25302ad9f" kindref="member">Message::I2P_ERROR</ref>:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fallSick();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType();</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="class_s_a_m_1_1_stream_session_1a3bedd8a940e2aaa7f4f8d48104f76f10" refkind="member"><highlight class="normal"><ref refid="struct_s_a_m_1_1_request_result_3_01void_01_4" kindref="compound">RequestResult&lt;void&gt;</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_1a3bedd8a940e2aaa7f4f8d48104f76f10" kindref="member">StreamSession::forward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/>port,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_request_result_3_01void_01_4" kindref="compound">RequestResult&lt;void&gt;</ref><sp/>ResultType;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Socket&gt;<sp/>newSocket(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_socket" kindref="compound">Socket</ref>(socket_));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/>status<sp/>=<sp/><ref refid="class_s_a_m_1_1_stream_session_1a3bedd8a940e2aaa7f4f8d48104f76f10" kindref="member">forward</ref>(*newSocket,<sp/>sessionID_,<sp/>host,<sp/>port,<sp/>silent);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(status)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">Message::OK</ref>:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardedStreams_.push_back(ForwardedStream(newSocket.get(),<sp/>host,<sp/>port,<sp/>silent));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSocket.release();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>release<sp/>after<sp/>successful<sp/>push_back<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a54fb3c8963ca6a694f1d81b567421634" kindref="member">Message::EMPTY_ANSWER</ref>:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a488d4ef18a57b9fa8bcac1c6812ed61b" kindref="member">Message::CLOSED_SOCKET</ref>:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9abf3cd2fa0e49f194b3d5504e7e114f97" kindref="member">Message::INVALID_ID</ref>:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a730c2f1c512a12bba42d88a25302ad9f" kindref="member">Message::I2P_ERROR</ref>:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fallSick();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType();</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="class_s_a_m_1_1_stream_session_1a0012bce074246b8e2835454ff9b07b64" refkind="member"><highlight class="normal"><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">RequestResult&lt;const std::string&gt;</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_1a0012bce074246b8e2835454ff9b07b64" kindref="member">StreamSession::namingLookup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="380"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">RequestResult&lt;const std::string&gt;</ref><sp/>ResultType;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_message_1_1_answer" kindref="compound">Message::Answer&lt;const std::string&gt;</ref><sp/>AnswerType;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Socket&gt;<sp/>newSocket(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_socket" kindref="compound">Socket</ref>(socket_));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AnswerType<sp/>answer<sp/>=<sp/><ref refid="class_s_a_m_1_1_stream_session_1a0012bce074246b8e2835454ff9b07b64" kindref="member">namingLookup</ref>(*newSocket,<sp/>name);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(answer.status)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">Message::OK</ref>:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType(answer.value);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a54fb3c8963ca6a694f1d81b567421634" kindref="member">Message::EMPTY_ANSWER</ref>:</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a488d4ef18a57b9fa8bcac1c6812ed61b" kindref="member">Message::CLOSED_SOCKET</ref>:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fallSick();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType();</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="class_s_a_m_1_1_stream_session_1a72e00a933a57b4ca043d5fab8ce893cc" refkind="member"><highlight class="normal"><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">RequestResult&lt;const FullDestination&gt;</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_1a72e00a933a57b4ca043d5fab8ce893cc" kindref="member">StreamSession::destGenerate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="401"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_request_result" kindref="compound">RequestResult&lt;const FullDestination&gt;</ref><sp/>ResultType;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_message_1_1_answer" kindref="compound">Message::Answer&lt;const FullDestination&gt;</ref><sp/>AnswerType;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Socket&gt;<sp/>newSocket(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_socket" kindref="compound">Socket</ref>(socket_));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AnswerType<sp/>answer<sp/>=<sp/><ref refid="class_s_a_m_1_1_stream_session_1a72e00a933a57b4ca043d5fab8ce893cc" kindref="member">destGenerate</ref>(*newSocket);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(answer.status)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">Message::OK</ref>:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType(answer.value);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a54fb3c8963ca6a694f1d81b567421634" kindref="member">Message::EMPTY_ANSWER</ref>:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a488d4ef18a57b9fa8bcac1c6812ed61b" kindref="member">Message::CLOSED_SOCKET</ref>:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fallSick();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType();</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">FullDestination</ref><sp/>StreamSession::createStreamSession(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>destination)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_message_1_1_answer" kindref="compound">Message::Answer&lt;const std::string&gt;</ref><sp/>AnswerType;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AnswerType<sp/>answer<sp/>=<sp/>createStreamSession(socket_,<sp/>sessionID_,<sp/>nickname_,<sp/>destination,<sp/>i2pOptions_);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(answer.status<sp/>!=<sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">Message::OK</ref>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fallSick();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">FullDestination</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FullDestination(answer.value.substr(0,<sp/><ref refid="i2psam_8cpp_1ab52a24da8d22e420019d4e97a9ba42ca" kindref="member">I2P_DESTINATION_SIZE</ref>),<sp/>answer.value,<sp/>(destination<sp/>==<sp/><ref refid="i2psam_8h_1a7106d11b70e8d692b4f3ee6cbac5d1f1" kindref="member">SAM_GENERATE_MY_DESTINATION</ref>));</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StreamSession::fallSick()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="435"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>isSick_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="class_s_a_m_1_1_stream_session_1a127c62ec5650d71753950189a60c98af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session_1a127c62ec5650d71753950189a60c98af" kindref="member">StreamSession::stopForwarding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/>port)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ForwardedStreamsContainer::iterator<sp/>it<sp/>=<sp/>forwardedStreams_.begin();<sp/>it<sp/>!=<sp/>forwardedStreams_.end();<sp/>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;port<sp/>==<sp/>port<sp/>&amp;&amp;<sp/>it-&gt;host<sp/>==<sp/>host)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(it-&gt;socket);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>forwardedStreams_.erase(it);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="class_s_a_m_1_1_stream_session_1a3dc7da81392eb7d1b29d35c3855407ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session_1a3dc7da81392eb7d1b29d35c3855407ba" kindref="member">StreamSession::stopForwardingAll</ref>()</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ForwardedStreamsContainer::iterator<sp/>it<sp/>=<sp/>forwardedStreams_.begin();<sp/>it<sp/>!=<sp/>forwardedStreams_.end();<sp/>++it)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(it-&gt;socket);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>forwardedStreams_.clear();</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><ref refid="struct_s_a_m_1_1_message_1_1_answer" kindref="compound">Message::Answer&lt;const std::string&gt;</ref><sp/>StreamSession::rawRequest(<ref refid="class_s_a_m_1_1_socket" kindref="compound">Socket</ref>&amp;<sp/>socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>requestStr)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_message_1_1_answer" kindref="compound">Message::Answer&lt;const std::string&gt;</ref><sp/>AnswerType;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!socket.<ref refid="class_s_a_m_1_1_socket_1a1455a6eec384bbdeda6382f33b49843b" kindref="member">isOk</ref>())</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AnswerType(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a488d4ef18a57b9fa8bcac1c6812ed61b" kindref="member">Message::CLOSED_SOCKET</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>socket.<ref refid="class_s_a_m_1_1_socket_1ae19e83b3127dc1560f164a05b1acd763" kindref="member">write</ref>(requestStr);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>answer<sp/>=<sp/>socket.<ref refid="class_s_a_m_1_1_socket_1a3455043c16c8ca5c64855e6ea3ff15e1" kindref="member">read</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/>status<sp/>=<sp/><ref refid="class_s_a_m_1_1_message_1a1d976198d4f36ab56f838f560d536d37" kindref="member">Message::checkAnswer</ref>(answer);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AnswerType(status,<sp/>answer);</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">Message::Answer&lt;const<sp/>std::string&gt;<sp/>StreamSession::request(Socket&amp;<sp/>socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>requestStr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>keyOnSuccess)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Message::Answer&lt;const<sp/>std::string&gt;<sp/>AnswerType;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AnswerType<sp/>answer<sp/>=<sp/>rawRequest(socket,<sp/>requestStr);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(answer.status<sp/>==<sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">Message::OK</ref>)<sp/>?</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnswerType(answer.status,<sp/><ref refid="class_s_a_m_1_1_message_1a134481a97dd531c7e5e11aeff965ea6c" kindref="member">Message::getValue</ref>(answer.value,<sp/>keyOnSuccess))<sp/>:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>answer;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/>StreamSession::request(Socket&amp;<sp/>socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>requestStr)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rawRequest(socket,<sp/>requestStr).status;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal">Message::Answer&lt;const<sp/>std::string&gt;<sp/>StreamSession::createStreamSession(Socket&amp;<sp/>socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nickname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>destination,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>options)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request(socket,<sp/><ref refid="class_s_a_m_1_1_message_1a48370ea8f0b6990e7182ffeef5672a9a" kindref="member">Message::sessionCreate</ref>(<ref refid="class_s_a_m_1_1_message_1aa83727780ef088263c251feef048a4d5a7223abc40dec9c59c98e9fbe7a04a9de" kindref="member">Message::sssStream</ref>,<sp/>sessionID,<sp/>nickname,<sp/>destination,<sp/>options),<sp/></highlight><highlight class="stringliteral">&quot;DESTINATION&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal">Message::Answer&lt;const<sp/>std::string&gt;<sp/><ref refid="class_s_a_m_1_1_stream_session_1a0012bce074246b8e2835454ff9b07b64" kindref="member">StreamSession::namingLookup</ref>(Socket&amp;<sp/>socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="testharness_8cc_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request(socket,<sp/><ref refid="class_s_a_m_1_1_message_1a4c8f89d31339e18137960a70cbbc902d" kindref="member">Message::namingLookup</ref>(name),<sp/></highlight><highlight class="stringliteral">&quot;VALUE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">Message::Answer&lt;const<sp/>FullDestination&gt;<sp/><ref refid="class_s_a_m_1_1_stream_session_1a72e00a933a57b4ca043d5fab8ce893cc" kindref="member">StreamSession::destGenerate</ref>(Socket&amp;<sp/>socket)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>answer<sp/>for<sp/>a<sp/>DEST<sp/>GENERATE<sp/>request<sp/>doesn&apos;t<sp/>contain<sp/>a<sp/>&quot;RESULT&quot;<sp/>field<sp/>we<sp/>parse<sp/>it<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Message::Answer&lt;const<sp/>FullDestination&gt;<sp/>ResultType;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!socket.isOk())</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultType(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a488d4ef18a57b9fa8bcac1c6812ed61b" kindref="member">Message::CLOSED_SOCKET</ref>,<sp/>FullDestination());</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>socket.write(<ref refid="class_s_a_m_1_1_message_1a6c454eb827a3ba8d5b6cb842b5ff23b7" kindref="member">Message::destGenerate</ref>());</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>answer<sp/>=<sp/>socket.read();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>pub<sp/>=<sp/><ref refid="class_s_a_m_1_1_message_1a134481a97dd531c7e5e11aeff965ea6c" kindref="member">Message::getValue</ref>(answer,<sp/></highlight><highlight class="stringliteral">&quot;PUB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>priv<sp/>=<sp/><ref refid="class_s_a_m_1_1_message_1a134481a97dd531c7e5e11aeff965ea6c" kindref="member">Message::getValue</ref>(answer,<sp/></highlight><highlight class="stringliteral">&quot;PRIV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!pub.empty()<sp/>&amp;&amp;<sp/>!priv.empty())<sp/>?<sp/>ResultType(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">Message::OK</ref>,<sp/>FullDestination(pub,<sp/>priv,<sp/></highlight><highlight class="comment">/*isGenerated*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>:<sp/>ResultType(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a54fb3c8963ca6a694f1d81b567421634" kindref="member">Message::EMPTY_ANSWER</ref>,<sp/>FullDestination());</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_1a438d8c25762f240775717f7952110351" kindref="member">StreamSession::accept</ref>(Socket&amp;<sp/>socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sessionID,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request(socket,<sp/><ref refid="class_s_a_m_1_1_message_1a2b4f1f665af4d53cdb21edf138d531e4" kindref="member">Message::streamAccept</ref>(sessionID,<sp/>silent));</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_1abc8b96738b75e87f5bee150a3cc429de" kindref="member">StreamSession::connect</ref>(Socket&amp;<sp/>socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>destination,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent)</highlight></codeline>
<codeline lineno="525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request(socket,<sp/><ref refid="class_s_a_m_1_1_message_1a27daf74a6a683c28b239de366ae02a8f" kindref="member">Message::streamConnect</ref>(sessionID,<sp/>destination,<sp/>silent));</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">/*static*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_1a3bedd8a940e2aaa7f4f8d48104f76f10" kindref="member">StreamSession::forward</ref>(Socket&amp;<sp/>socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/>port,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request(socket,<sp/><ref refid="class_s_a_m_1_1_message_1a3ec2da4e4b3649416637154ca6e9938b" kindref="member">Message::streamForward</ref>(sessionID,<sp/>host,<sp/>port,<sp/>silent));</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="class_s_a_m_1_1_stream_session_1a8883fa512aad5b7fac95559c45682c5b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_1a8883fa512aad5b7fac95559c45682c5b" kindref="member">StreamSession::getNickname</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="536"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nickname_;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="class_s_a_m_1_1_stream_session_1aa56685f7eb722fa6263f3b846403dfd7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_1aa56685f7eb722fa6263f3b846403dfd7" kindref="member">StreamSession::getSessionID</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="541"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sessionID_;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="class_s_a_m_1_1_stream_session_1ac92dbb8ac26fbd0b100e79402a9f42d3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_1ac92dbb8ac26fbd0b100e79402a9f42d3" kindref="member">StreamSession::getOptions</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="546"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i2pOptions_;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="class_s_a_m_1_1_stream_session_1aee96e585ccb015b67d62f3e1da6d2b9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">FullDestination</ref>&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_1aee96e585ccb015b67d62f3e1da6d2b9d" kindref="member">StreamSession::getMyDestination</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="551"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>myDestination_;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="class_s_a_m_1_1_stream_session_1a75d2823d28c7f31c0a19533ad4cd0abd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_stream_session_1a75d2823d28c7f31c0a19533ad4cd0abd" kindref="member">StreamSession::isSick</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="556"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSick_;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="class_s_a_m_1_1_stream_session_1a19c6827c117adbba8ac397b7e83cbaba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sockaddr_in&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_1a19c6827c117adbba8ac397b7e83cbaba" kindref="member">StreamSession::getSAMAddress</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="561"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>socket_.<ref refid="class_s_a_m_1_1_socket_1aabf6192dbde4829cf9d42fbcec31398d" kindref="member">getAddress</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="class_s_a_m_1_1_stream_session_1a0a2f78d4ae80e6748a7f936516987e0b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_1a0a2f78d4ae80e6748a7f936516987e0b" kindref="member">StreamSession::getSAMHost</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="566"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>socket_.<ref refid="class_s_a_m_1_1_socket_1abfd0ebd986ade7cb5f1dbdf0ae46ef29" kindref="member">getHost</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="class_s_a_m_1_1_stream_session_1a5951e00617284abfc95f8885ccd178ad" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/><ref refid="class_s_a_m_1_1_stream_session_1a5951e00617284abfc95f8885ccd178ad" kindref="member">StreamSession::getSAMPort</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="571"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>socket_.<ref refid="class_s_a_m_1_1_socket_1abf30c1cd04433cd08364685063fa9c92" kindref="member">getPort</ref>();</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="class_s_a_m_1_1_stream_session_1a52994ee722b876372798e6c7b8e0e6fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_1a52994ee722b876372798e6c7b8e0e6fd" kindref="member">StreamSession::getSAMMinVer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="576"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>socket_.<ref refid="class_s_a_m_1_1_socket_1a381bb95e90cfc2f0f8170ee497a28e1d" kindref="member">getMinVer</ref>();</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="class_s_a_m_1_1_stream_session_1ae7e0768be0d970be5f24aeea72cde44e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_1ae7e0768be0d970be5f24aeea72cde44e" kindref="member">StreamSession::getSAMMaxVer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="581"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>socket_.<ref refid="class_s_a_m_1_1_socket_1a9dc5718ac337a935e3144b60f86f969c" kindref="member">getMaxVer</ref>();</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="class_s_a_m_1_1_stream_session_1aaedeb73600e08b48e1a7d13686e668e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_s_a_m_1_1_stream_session_1aaedeb73600e08b48e1a7d13686e668e5" kindref="member">StreamSession::getSAMVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="586"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>socket_.<ref refid="class_s_a_m_1_1_socket_1a513c5e443cd8c6265520a7602ab678c3" kindref="member">getVersion</ref>();</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">std::string<sp/>Message::createSAMRequest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>,<sp/>...)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[<ref refid="i2psam_8cpp_1af210419ef90774c70688aca59df0defe" kindref="member">SAM_BUFSIZE</ref>];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(buffer,<sp/>0,<sp/><ref refid="i2psam_8cpp_1af210419ef90774c70688aca59df0defe" kindref="member">SAM_BUFSIZE</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start<sp/>(args,<sp/>format);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeToSend<sp/>=<sp/>vsnprintf(buffer,<sp/><ref refid="i2psam_8cpp_1af210419ef90774c70688aca59df0defe" kindref="member">SAM_BUFSIZE</ref>,<sp/>format,<sp/>args);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeToSend<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>format<sp/>message&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(buffer);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="class_s_a_m_1_1_message_1a586e92a2047246d9bc1d54b2fe184531" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_message_1a586e92a2047246d9bc1d54b2fe184531" kindref="member">Message::hello</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;minVer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;maxVer)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-&gt;<sp/><sp/>HELLO<sp/>VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN=$min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX=$max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;-<sp/><sp/>HELLO<sp/>REPLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESULT=OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VERSION=$version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="624"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>helloFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;HELLO<sp/>VERSION<sp/>MIN=%s<sp/>MAX=%s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createSAMRequest(helloFormat,<sp/>minVer.c_str(),<sp/>maxVer.c_str());</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="class_s_a_m_1_1_message_1a48370ea8f0b6990e7182ffeef5672a9a" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_message_1a48370ea8f0b6990e7182ffeef5672a9a" kindref="member">Message::sessionCreate</ref>(<ref refid="class_s_a_m_1_1_message_1aa83727780ef088263c251feef048a4d5" kindref="member">SessionStyle</ref><sp/>style,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nickname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>destination<sp/></highlight><highlight class="comment">/*=<sp/>SAM_GENERATE_MY_DESTINATION*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>options<sp/></highlight><highlight class="comment">/*=<sp/>&quot;&quot;*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-&gt;<sp/><sp/>SESSION<sp/>CREATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STYLE={STREAM,DATAGRAM,RAW}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID={$nickname}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DESTINATION={$private_destination_key,TRANSIENT}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[option=value]*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;-<sp/><sp/>SESSION<sp/>STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESULT=OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DESTINATION=$private_destination_key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="644"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sessionStyle;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(style)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1aa83727780ef088263c251feef048a4d5a7223abc40dec9c59c98e9fbe7a04a9de" kindref="member">sssStream</ref>:<sp/><sp/><sp/>sessionStyle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;STREAM&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1aa83727780ef088263c251feef048a4d5a97f8d5425a65c49eb0cd715cfe7cc35a" kindref="member">sssDatagram</ref>:<sp/>sessionStyle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DATAGRAM&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1aa83727780ef088263c251feef048a4d5a34691c7370e61a423450d1b7006f8e91" kindref="member">sssRaw</ref>:<sp/><sp/><sp/><sp/><sp/><sp/>sessionStyle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RAW&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sessionCreateFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SESSION<sp/>CREATE<sp/>STYLE=%s<sp/>ID=%s<sp/>DESTINATION=%s<sp/>inbound.nickname=%s<sp/>%s\n&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>add<sp/>inbound.nickname<sp/>option</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createSAMRequest(sessionCreateFormat,<sp/>sessionStyle.c_str(),<sp/>sessionID.c_str(),<sp/>destination.c_str(),<sp/>nickname.c_str(),<sp/>options.c_str());</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657" refid="class_s_a_m_1_1_message_1a2b4f1f665af4d53cdb21edf138d531e4" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_message_1a2b4f1f665af4d53cdb21edf138d531e4" kindref="member">Message::streamAccept</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sessionID,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-&gt;<sp/><sp/>STREAM<sp/>ACCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID={$nickname}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SILENT={true,false}]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;-<sp/><sp/>STREAM<sp/>STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESULT=$result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[MESSAGE=...]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="670"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>streamAcceptFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;STREAM<sp/>ACCEPT<sp/>ID=%s<sp/>SILENT=%s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createSAMRequest(streamAcceptFormat,<sp/>sessionID.c_str(),<sp/>silent<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="class_s_a_m_1_1_message_1a27daf74a6a683c28b239de366ae02a8f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_message_1a27daf74a6a683c28b239de366ae02a8f" kindref="member">Message::streamConnect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>destination,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-&gt;<sp/><sp/>STREAM<sp/>CONNECT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID={$nickname}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DESTINATION=$peer_public_base64_key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SILENT={true,false}]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;-<sp/><sp/>STREAM<sp/>STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESULT=$result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[MESSAGE=...]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="689"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>streamConnectFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;STREAM<sp/>CONNECT<sp/>ID=%s<sp/>DESTINATION=%s<sp/>SILENT=%s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createSAMRequest(streamConnectFormat,<sp/>sessionID.c_str(),<sp/>destination.c_str(),<sp/>silent<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="class_s_a_m_1_1_message_1a3ec2da4e4b3649416637154ca6e9938b" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_message_1a3ec2da4e4b3649416637154ca6e9938b" kindref="member">Message::streamForward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sessionID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>host,<sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/>port,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>silent<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-&gt;<sp/><sp/>STREAM<sp/>FORWARD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID={$nickname}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORT={$port}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[HOST={$host}]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[SILENT={true,false}]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;-<sp/><sp/>STREAM<sp/>STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESULT=$result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[MESSAGE=...]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="709"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>streamForwardFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;STREAM<sp/>FORWARD<sp/>ID=%s<sp/>PORT=%u<sp/>HOST=%s<sp/>SILENT=%s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createSAMRequest(streamForwardFormat,<sp/>sessionID.c_str(),<sp/>(unsigned)port,<sp/>host.c_str(),<sp/>silent<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="class_s_a_m_1_1_message_1a4c8f89d31339e18137960a70cbbc902d" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_message_1a4c8f89d31339e18137960a70cbbc902d" kindref="member">Message::namingLookup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-&gt;<sp/>NAMING<sp/>LOOKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NAME=$name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;-<sp/>NAMING<sp/>REPLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESULT=OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NAME=$name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUE=$base64key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="726"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>namingLookupFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NAMING<sp/>LOOKUP<sp/>NAME=%s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createSAMRequest(namingLookupFormat,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731" refid="class_s_a_m_1_1_message_1a6c454eb827a3ba8d5b6cb842b5ff23b7" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_message_1a6c454eb827a3ba8d5b6cb842b5ff23b7" kindref="member">Message::destGenerate</ref>()</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-&gt;<sp/>DEST<sp/>GENERATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;-<sp/>DEST<sp/>REPLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUB=$pubkey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRIV=$privkey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="742"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>destGenerateFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DEST<sp/>GENERATE\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createSAMRequest(destGenerateFormat);</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="i2psam_8cpp_1a8a88c6398fb4156cf0bc569f32e50111" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAM_MAKESTRING(X)<sp/>SAM_MAKESTRING2(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748" refid="i2psam_8cpp_1ad80dba005ca0f39f8a5b6a23ce40f227" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAM_MAKESTRING2(X)<sp/>#X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAM_CHECK_RESULT(value)<sp/>\</highlight></codeline>
<codeline lineno="751"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>==<sp/>SAM_MAKESTRING(value))<sp/>return<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753" refid="class_s_a_m_1_1_message_1a1d976198d4f36ab56f838f560d536d37" refkind="member"><highlight class="normal"><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9" kindref="member">Message::eStatus</ref><sp/><ref refid="class_s_a_m_1_1_message_1a1d976198d4f36ab56f838f560d536d37" kindref="member">Message::checkAnswer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>answer)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(answer.empty())</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a54fb3c8963ca6a694f1d81b567421634" kindref="member">EMPTY_ANSWER</ref>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>result<sp/>=<sp/><ref refid="class_s_a_m_1_1_message_1a134481a97dd531c7e5e11aeff965ea6c" kindref="member">getValue</ref>(answer,<sp/></highlight><highlight class="stringliteral">&quot;RESULT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9aa714810b0bce3c90a0bc8a1ba5dfe87f" kindref="member">OK</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a60c4f8b74323a76ccc33d343d3be2be2" kindref="member">DUPLICATED_DEST</ref>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9ac910cf4ebbd28ea0b278ff7d5e68db7e" kindref="member">DUPLICATED_ID</ref>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a730c2f1c512a12bba42d88a25302ad9f" kindref="member">I2P_ERROR</ref>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9abf3cd2fa0e49f194b3d5504e7e114f97" kindref="member">INVALID_ID</ref>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a428f741a66d4250f8de084a1112a80f9" kindref="member">INVALID_KEY</ref>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a17187a89ef29a266046502d15c4be0ef" kindref="member">CANT_REACH_PEER</ref>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a29fd481477ade1418bdf74abcc61f6d8" kindref="member">TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a2ca97a4f91b1e4c57357b341953f5a8c" kindref="member">NOVERSION</ref>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9afd3f5c321f37a123533b0fabe2649d81" kindref="member">KEY_NOT_FOUND</ref>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9adae6ecb2a1136183a3772520c4972725" kindref="member">PEER_NOT_FOUND</ref>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="i2psam_8cpp_1aad5453c913ff884ac88465d31ce075c6" kindref="member">SAM_CHECK_RESULT</ref>(<ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9a651ae8ccc399e4729f54f3a75cdd6eea" kindref="member">ALREADY_ACCEPTING</ref>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_a_m_1_1_message_1a5f7e317defb90f107fc1a017a4552ae9ad4c04f6dfbd2bd0c7ff81908407b4892" kindref="member">CANNOT_PARSE_ERROR</ref>;</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>SAM_CHECK_RESULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>SAM_MAKESTRING2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>SAM_MAKESTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="class_s_a_m_1_1_message_1a134481a97dd531c7e5e11aeff965ea6c" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_s_a_m_1_1_message_1a134481a97dd531c7e5e11aeff965ea6c" kindref="member">Message::getValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>answer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight></codeline>
<codeline lineno="781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.empty())</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>keyPattern<sp/>=<sp/>key<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>valueStart<sp/>=<sp/>answer.find(keyPattern);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueStart<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>valueStart<sp/>+=<sp/>keyPattern.length();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>valueEnd<sp/>=<sp/>answer.find_first_of(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>valueStart);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueEnd<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueEnd<sp/>=<sp/>answer.find_first_of(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>valueStart);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>answer.substr(valueStart,<sp/>valueEnd<sp/>-<sp/>valueStart);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SAM</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/i2psam.cpp"/>
  </compounddef>
</doxygen>
