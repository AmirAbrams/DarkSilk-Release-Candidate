<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classleveldb_1_1_env_wrapper" kind="class" language="C++" prot="public">
    <compoundname>leveldb::EnvWrapper</compoundname>
    <basecompoundref refid="classleveldb_1_1_env" prot="public" virt="non-virtual">leveldb::Env</basecompoundref>
    <derivedcompoundref refid="classleveldb_1_1_special_env" prot="public" virt="non-virtual">leveldb::SpecialEnv</derivedcompoundref>
    <derivedcompoundref refid="classleveldb_1_1test_1_1_error_env" prot="public" virt="non-virtual">leveldb::test::ErrorEnv</derivedcompoundref>
    <includes refid="env_8h" local="no">env.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classleveldb_1_1_env_wrapper_1aa5f60f55ace84b8c311ba543025dbcdc" prot="private" static="no" mutable="no">
        <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
        <definition>Env* leveldb::EnvWrapper::target_</definition>
        <argsstring></argsstring>
        <name>target_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="328" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1a724d3740db2663034c8974c0378e49cb" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::EnvWrapper::EnvWrapper</definition>
        <argsstring>(Env *t)</argsstring>
        <name>EnvWrapper</name>
        <param>
          <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="276" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="276" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1a4bdf170510b585276e41671ae1910837" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>leveldb::EnvWrapper::~EnvWrapper</definition>
        <argsstring>()</argsstring>
        <name>~EnvWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="277" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env.cc" bodystart="93" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1a7b147ba21760b3545e757abcdc6dd9c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref> *</type>
        <definition>Env* leveldb::EnvWrapper::target</definition>
        <argsstring>() const </argsstring>
        <name>target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="280" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="280" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1acd23f5803f7841cfcee9a29ffc1c5b04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::NewSequentialFile</definition>
        <argsstring>(const std::string &amp;f, SequentialFile **r)</argsstring>
        <name>NewSequentialFile</name>
        <reimplements refid="classleveldb_1_1_env_1ad73810059f48c1d7b91125d357e7d351">NewSequentialFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_sequential_file" kindref="compound">SequentialFile</ref> **</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="283" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="283" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1ab8c78959e0d52f3c1beeeffc11ca0a34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::NewRandomAccessFile</definition>
        <argsstring>(const std::string &amp;f, RandomAccessFile **r)</argsstring>
        <name>NewRandomAccessFile</name>
        <reimplements refid="classleveldb_1_1_env_1a1df3e0bb2d47ee914448df9bb9ca0734">NewRandomAccessFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref> **</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="286" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="286" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1a2d2b29a658e80c326ddaeb9c4d74c483" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::NewWritableFile</definition>
        <argsstring>(const std::string &amp;f, WritableFile **r)</argsstring>
        <name>NewWritableFile</name>
        <reimplements refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de">NewWritableFile</reimplements>
        <reimplementedby refid="classleveldb_1_1test_1_1_error_env_1a2990be71c7fb9473bd1fa0f8da8fd078">NewWritableFile</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref> **</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="289" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="289" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1ac72ceac6f4e2a6140e2835b2fa15f4df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool leveldb::EnvWrapper::FileExists</definition>
        <argsstring>(const std::string &amp;f)</argsstring>
        <name>FileExists</name>
        <reimplements refid="classleveldb_1_1_env_1acbb85047fdf7bf441bd365cfb09f9ecb">FileExists</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="292" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="292" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::GetChildren</definition>
        <argsstring>(const std::string &amp;dir, std::vector&lt; std::string &gt; *r)</argsstring>
        <name>GetChildren</name>
        <reimplements refid="classleveldb_1_1_env_1a53028e3112d7bb3bf6574ddaab18d6f6">GetChildren</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="293" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="293" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1af99d37829c3806a0e05979f5a7eb35af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::DeleteFile</definition>
        <argsstring>(const std::string &amp;f)</argsstring>
        <name>DeleteFile</name>
        <reimplements refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af">DeleteFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="296" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1af8c26728d198a44627e08bb557ab4730" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::CreateDir</definition>
        <argsstring>(const std::string &amp;d)</argsstring>
        <name>CreateDir</name>
        <reimplements refid="classleveldb_1_1_env_1ae6b7c8122df5a8020b2a3439ac39646e">CreateDir</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="297" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1adedc51823cd8e4bdd55e4f10068f5d22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::DeleteDir</definition>
        <argsstring>(const std::string &amp;d)</argsstring>
        <name>DeleteDir</name>
        <reimplements refid="classleveldb_1_1_env_1a4e1a1c4495541e426b146cba56c59627">DeleteDir</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="298" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1af6caee1ccef32332c9f26f97944f2afe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::GetFileSize</definition>
        <argsstring>(const std::string &amp;f, uint64_t *s)</argsstring>
        <name>GetFileSize</name>
        <reimplements refid="classleveldb_1_1_env_1aacb66541dcb3bd586e6cc5a87489690c">GetFileSize</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="299" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1afbd271f58ef0f0db8f2973f0c947fdec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::RenameFile</definition>
        <argsstring>(const std::string &amp;s, const std::string &amp;t)</argsstring>
        <name>RenameFile</name>
        <reimplements refid="classleveldb_1_1_env_1abd743b3d4751ada1ab307427827ed5b0">RenameFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="302" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="302" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1a5cfd04849bbfc67ad60259dcbb2e0ec0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::LockFile</definition>
        <argsstring>(const std::string &amp;f, FileLock **l)</argsstring>
        <name>LockFile</name>
        <reimplements refid="classleveldb_1_1_env_1a9b7266f0444f832e428328ff19b7b54c">LockFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref> **</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="305" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1ab1779dda39167eaa38e660bcc69988c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::EnvWrapper::UnlockFile</definition>
        <argsstring>(FileLock *l)</argsstring>
        <name>UnlockFile</name>
        <reimplements refid="classleveldb_1_1_env_1a194a2ee3c21bc0b204ad0e5bc3b81d4b">UnlockFile</reimplements>
        <param>
          <type><ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="308" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="308" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1a58677bfd9b3b32a50184b51852b11755" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::EnvWrapper::Schedule</definition>
        <argsstring>(void(*f)(void *), void *a)</argsstring>
        <name>Schedule</name>
        <param>
          <type>void(*)(void *)</type>
          <declname>f</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="309" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1a8c910a8ab40a7f4a6eb7bc41bc39f78b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::EnvWrapper::StartThread</definition>
        <argsstring>(void(*f)(void *), void *a)</argsstring>
        <name>StartThread</name>
        <param>
          <type>void(*)(void *)</type>
          <declname>f</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="312" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="312" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1a62fdf74a9991e4226091bfdc58e97f16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::EnvWrapper::GetTestDirectory</definition>
        <argsstring>(std::string *path)</argsstring>
        <name>GetTestDirectory</name>
        <reimplements refid="classleveldb_1_1_env_1ab57a55be37d4d57bf3c0ff83ee689f95">GetTestDirectory</reimplements>
        <param>
          <type>std::string *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="315" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1af065b31ff6876780896be1c8f197e556" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::EnvWrapper::NewLogger</definition>
        <argsstring>(const std::string &amp;fname, Logger **result)</argsstring>
        <name>NewLogger</name>
        <reimplements refid="classleveldb_1_1_env_1a53a4c41d294fe619f13ec5b697ffc933">NewLogger</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_logger" kindref="compound">Logger</ref> **</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="318" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="318" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1ad3a36da82ba4ca10a34b45f3b9edfeaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t leveldb::EnvWrapper::NowMicros</definition>
        <argsstring>()</argsstring>
        <name>NowMicros</name>
        <reimplements refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f">NowMicros</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="321" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_env_wrapper_1a6e05455e32edd8cd4657fc22f4e422e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void leveldb::EnvWrapper::SleepForMicroseconds</definition>
        <argsstring>(int micros)</argsstring>
        <name>SleepForMicroseconds</name>
        <reimplements refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312">SleepForMicroseconds</reimplements>
        <param>
          <type>int</type>
          <declname>micros</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="324" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="324" bodyend="326"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1116">
        <label>leveldb::Env</label>
        <link refid="classleveldb_1_1_env"/>
      </node>
      <node id="1117">
        <label>leveldb::SpecialEnv</label>
        <link refid="classleveldb_1_1_special_env"/>
        <childnode refid="1115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1118">
        <label>leveldb::test::ErrorEnv</label>
        <link refid="classleveldb_1_1test_1_1_error_env"/>
        <childnode refid="1115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1115">
        <label>leveldb::EnvWrapper</label>
        <link refid="classleveldb_1_1_env_wrapper"/>
        <childnode refid="1116" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1120">
        <label>leveldb::Env</label>
        <link refid="classleveldb_1_1_env"/>
      </node>
      <node id="1119">
        <label>leveldb::EnvWrapper</label>
        <link refid="classleveldb_1_1_env_wrapper"/>
        <childnode refid="1120" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" line="273" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h" bodystart="273" bodyend="329"/>
    <listofallmembers>
      <member refid="classleveldb_1_1_env_wrapper_1af8c26728d198a44627e08bb557ab4730" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>CreateDir</name></member>
      <member refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" prot="public" virt="non-virtual"><scope>leveldb::EnvWrapper</scope><name>Default</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1adedc51823cd8e4bdd55e4f10068f5d22" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>DeleteDir</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1af99d37829c3806a0e05979f5a7eb35af" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>DeleteFile</name></member>
      <member refid="classleveldb_1_1_env_1a90f3648c740e3f5901f5843cd0dd07c4" prot="public" virt="non-virtual"><scope>leveldb::EnvWrapper</scope><name>Env</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1a724d3740db2663034c8974c0378e49cb" prot="public" virt="non-virtual"><scope>leveldb::EnvWrapper</scope><name>EnvWrapper</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1ac72ceac6f4e2a6140e2835b2fa15f4df" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>FileExists</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>GetChildren</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1af6caee1ccef32332c9f26f97944f2afe" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>GetFileSize</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1a62fdf74a9991e4226091bfdc58e97f16" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>GetTestDirectory</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1a5cfd04849bbfc67ad60259dcbb2e0ec0" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>LockFile</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1af065b31ff6876780896be1c8f197e556" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>NewLogger</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1ab8c78959e0d52f3c1beeeffc11ca0a34" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>NewRandomAccessFile</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1acd23f5803f7841cfcee9a29ffc1c5b04" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>NewSequentialFile</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1a2d2b29a658e80c326ddaeb9c4d74c483" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>NewWritableFile</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1ad3a36da82ba4ca10a34b45f3b9edfeaf" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>NowMicros</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1afbd271f58ef0f0db8f2973f0c947fdec" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>RenameFile</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1a58677bfd9b3b32a50184b51852b11755" prot="public" virt="non-virtual"><scope>leveldb::EnvWrapper</scope><name>Schedule</name></member>
      <member refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724" prot="public" virt="pure-virtual" ambiguityscope="leveldb::Env::"><scope>leveldb::EnvWrapper</scope><name>Schedule</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1a6e05455e32edd8cd4657fc22f4e422e9" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>SleepForMicroseconds</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1a8c910a8ab40a7f4a6eb7bc41bc39f78b" prot="public" virt="non-virtual"><scope>leveldb::EnvWrapper</scope><name>StartThread</name></member>
      <member refid="classleveldb_1_1_env_1a25eafd1622a2cf2a415ee8b2325bc808" prot="public" virt="pure-virtual" ambiguityscope="leveldb::Env::"><scope>leveldb::EnvWrapper</scope><name>StartThread</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1a7b147ba21760b3545e757abcdc6dd9c5" prot="public" virt="non-virtual"><scope>leveldb::EnvWrapper</scope><name>target</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1aa5f60f55ace84b8c311ba543025dbcdc" prot="private" virt="non-virtual"><scope>leveldb::EnvWrapper</scope><name>target_</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1ab1779dda39167eaa38e660bcc69988c4" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>UnlockFile</name></member>
      <member refid="classleveldb_1_1_env_1a2b9321c6176f8824b3ba65f0a36453fe" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>~Env</name></member>
      <member refid="classleveldb_1_1_env_wrapper_1a4bdf170510b585276e41671ae1910837" prot="public" virt="virtual"><scope>leveldb::EnvWrapper</scope><name>~EnvWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
