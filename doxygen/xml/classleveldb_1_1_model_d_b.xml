<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classleveldb_1_1_model_d_b" kind="class" language="C++" prot="public">
    <compoundname>leveldb::ModelDB</compoundname>
    <basecompoundref refid="classleveldb_1_1_d_b" prot="public" virt="non-virtual">leveldb::DB</basecompoundref>
    <innerclass refid="classleveldb_1_1_model_d_b_1_1_model_iter" prot="private">leveldb::ModelDB::ModelIter</innerclass>
    <innerclass refid="classleveldb_1_1_model_d_b_1_1_model_snapshot" prot="public">leveldb::ModelDB::ModelSnapshot</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classleveldb_1_1_model_d_b_1ae5aee6801bcd1c2d8843607abb2e723a" prot="private" static="no" mutable="no">
        <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref></type>
        <definition>const Options leveldb::ModelDB::options_</definition>
        <argsstring></argsstring>
        <name>options_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1929" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1929" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_model_d_b_1ada58b7989a2d120b45f5fed2e4391c65" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref></type>
        <definition>KVMap leveldb::ModelDB::map_</definition>
        <argsstring></argsstring>
        <name>map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1930" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1930" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1ac0117ce964631ff7977b465de053a282" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::ModelDB::ModelDB</definition>
        <argsstring>(const Options &amp;options)</argsstring>
        <name>ModelDB</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1838" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1838" bodyend="1838"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1a35e9042c7ed06e8324d5e40318771825" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::ModelDB::~ModelDB</definition>
        <argsstring>()</argsstring>
        <name>~ModelDB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1839" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1839" bodyend="1839"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::ModelDB::Put</definition>
        <argsstring>(const WriteOptions &amp;o, const Slice &amp;k, const Slice &amp;v)</argsstring>
        <name>Put</name>
        <reimplements refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae">Put</reimplements>
        <param>
          <type>const <ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1840" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1840" bodyend="1842"/>
        <references refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" compoundref="db__impl_8cc" startline="1431" endline="1435">leveldb::DB::Put</references>
        <referencedby refid="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be" compoundref="db__test_8cc" startline="1871" endline="1885">Write</referencedby>
        <referencedby refid="namespaceleveldb_1a028ed215c12e1998d7073b18fce4c24c" compoundref="db__test_8cc" startline="1988" endline="2057">leveldb::TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::ModelDB::Delete</definition>
        <argsstring>(const WriteOptions &amp;o, const Slice &amp;key)</argsstring>
        <name>Delete</name>
        <reimplements refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9">Delete</reimplements>
        <param>
          <type>const <ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1843" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1843" bodyend="1845"/>
        <references refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" compoundref="db__impl_8cc" startline="1437" endline="1441">leveldb::DB::Delete</references>
        <referencedby refid="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be" compoundref="db__test_8cc" startline="1871" endline="1885">Write</referencedby>
        <referencedby refid="namespaceleveldb_1a028ed215c12e1998d7073b18fce4c24c" compoundref="db__test_8cc" startline="1988" endline="2057">leveldb::TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1ab7744a74b5c0d2cd812dd87e83ca561b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::ModelDB::Get</definition>
        <argsstring>(const ReadOptions &amp;options, const Slice &amp;key, std::string *value)</argsstring>
        <name>Get</name>
        <reimplements refid="classleveldb_1_1_d_b_1ad43bd7937b9af88ff856eb8158890911">Get</reimplements>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1846" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1846" bodyend="1850"/>
        <references refid="classleveldb_1_1_status_1a9e5beb5b2e758f041e0c012426e7b1b8" compoundref="status_8h" startline="35" endline="37">leveldb::Status::NotFound</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1a5acf23bae313f2e2f3ea9f0ab95450cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>virtual Iterator* leveldb::ModelDB::NewIterator</definition>
        <argsstring>(const ReadOptions &amp;options)</argsstring>
        <name>NewIterator</name>
        <reimplements refid="classleveldb_1_1_d_b_1a5629308235de24c05c286c353d4e7d32">NewIterator</reimplements>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1851" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1851" bodyend="1861"/>
        <references refid="structleveldb_1_1_read_options_1a1fa3fffc267dff89fce7c39d7c7b5b50" compoundref="options_8h" startline="159">leveldb::ReadOptions::snapshot</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1aa82849af6a149d122e65a4aac412903f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
        <definition>virtual const Snapshot* leveldb::ModelDB::GetSnapshot</definition>
        <argsstring>()</argsstring>
        <name>GetSnapshot</name>
        <reimplements refid="classleveldb_1_1_d_b_1a7d13f6336c7c5f0bf79578d57c45568c">GetSnapshot</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1862" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1862" bodyend="1866"/>
        <references refid="classleveldb_1_1_model_d_b_1_1_model_snapshot_1a7ae02397c293072b78874d0c073a10c5" compoundref="db__test_8cc" startline="1835">leveldb::ModelDB::ModelSnapshot::map_</references>
        <referencedby refid="namespaceleveldb_1a028ed215c12e1998d7073b18fce4c24c" compoundref="db__test_8cc" startline="1988" endline="2057">leveldb::TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1a3f5d86ce612baaa88c11601c9a59df12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void leveldb::ModelDB::ReleaseSnapshot</definition>
        <argsstring>(const Snapshot *snapshot)</argsstring>
        <name>ReleaseSnapshot</name>
        <reimplements refid="classleveldb_1_1_d_b_1aa46de65e990bd179db0aee770af89144">ReleaseSnapshot</reimplements>
        <param>
          <type>const <ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref> *</type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1868" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1868" bodyend="1870"/>
        <referencedby refid="namespaceleveldb_1a028ed215c12e1998d7073b18fce4c24c" compoundref="db__test_8cc" startline="1988" endline="2057">leveldb::TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>virtual Status leveldb::ModelDB::Write</definition>
        <argsstring>(const WriteOptions &amp;options, WriteBatch *batch)</argsstring>
        <name>Write</name>
        <reimplements refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c">Write</reimplements>
        <param>
          <type>const <ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref> *</type>
          <declname>batch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1871" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1871" bodyend="1885"/>
        <references refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253" compoundref="db__test_8cc" startline="1840" endline="1842">Put</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
        <references refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6" compoundref="db__test_8cc" startline="1843" endline="1845">Delete</references>
        <references refid="classleveldb_1_1_write_batch_1ac6cb5a360bb095f4e9a6e817c4322a9d" compoundref="write__batch_8cc" startline="42" endline="80">leveldb::WriteBatch::Iterate</references>
        <referencedby refid="namespaceleveldb_1a028ed215c12e1998d7073b18fce4c24c" compoundref="db__test_8cc" startline="1988" endline="2057">leveldb::TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1a5c83a50a08e45c2564c39a650ea55b86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool leveldb::ModelDB::GetProperty</definition>
        <argsstring>(const Slice &amp;property, std::string *value)</argsstring>
        <name>GetProperty</name>
        <reimplements refid="classleveldb_1_1_d_b_1afcd557d80bac6668f20372c9e737d807">GetProperty</reimplements>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1887" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1887" bodyend="1889"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1aeb5502077fae602c5ca3c1153f29b693" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void leveldb::ModelDB::GetApproximateSizes</definition>
        <argsstring>(const Range *r, int n, uint64_t *sizes)</argsstring>
        <name>GetApproximateSizes</name>
        <reimplements refid="classleveldb_1_1_d_b_1ad4d54aa1dbcecc8583b013ab2d67aeff">GetApproximateSizes</reimplements>
        <param>
          <type>const <ref refid="structleveldb_1_1_range" kindref="compound">Range</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref> *</type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1890" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1890" bodyend="1894"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_model_d_b_1a7a04a6e5227079f861c26b920df6b833" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void leveldb::ModelDB::CompactRange</definition>
        <argsstring>(const Slice *start, const Slice *end)</argsstring>
        <name>CompactRange</name>
        <reimplements refid="classleveldb_1_1_d_b_1aeea500cbc6704454b3be6908d5da8b3a">CompactRange</reimplements>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1895" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1895" bodyend="1896"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3314">
        <label>leveldb::DB</label>
        <link refid="classleveldb_1_1_d_b"/>
      </node>
      <node id="3313">
        <label>leveldb::ModelDB</label>
        <link refid="classleveldb_1_1_model_d_b"/>
        <childnode refid="3314" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3316">
        <label>leveldb::DB</label>
        <link refid="classleveldb_1_1_d_b"/>
      </node>
      <node id="3315">
        <label>leveldb::ModelDB</label>
        <link refid="classleveldb_1_1_model_d_b"/>
        <childnode refid="3316" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/leveldb/db/db_test.cc" line="1831" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_test.cc" bodystart="1831" bodyend="1931"/>
    <listofallmembers>
      <member refid="classleveldb_1_1_model_d_b_1a7a04a6e5227079f861c26b920df6b833" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>CompactRange</name></member>
      <member refid="classleveldb_1_1_d_b_1a6b275339ff6194c598daf7091ad8d5c1" prot="public" virt="non-virtual"><scope>leveldb::ModelDB</scope><name>DB</name></member>
      <member refid="classleveldb_1_1_model_d_b_1a2c2690e07a206fd2197f592dd4478ff6" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>Delete</name></member>
      <member refid="classleveldb_1_1_model_d_b_1ab7744a74b5c0d2cd812dd87e83ca561b" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>Get</name></member>
      <member refid="classleveldb_1_1_model_d_b_1aeb5502077fae602c5ca3c1153f29b693" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>GetApproximateSizes</name></member>
      <member refid="classleveldb_1_1_model_d_b_1a5c83a50a08e45c2564c39a650ea55b86" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>GetProperty</name></member>
      <member refid="classleveldb_1_1_model_d_b_1aa82849af6a149d122e65a4aac412903f" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>GetSnapshot</name></member>
      <member refid="classleveldb_1_1_model_d_b_1ada58b7989a2d120b45f5fed2e4391c65" prot="private" virt="non-virtual"><scope>leveldb::ModelDB</scope><name>map_</name></member>
      <member refid="classleveldb_1_1_model_d_b_1ac0117ce964631ff7977b465de053a282" prot="public" virt="non-virtual"><scope>leveldb::ModelDB</scope><name>ModelDB</name></member>
      <member refid="classleveldb_1_1_model_d_b_1a5acf23bae313f2e2f3ea9f0ab95450cf" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>NewIterator</name></member>
      <member refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" prot="public" virt="non-virtual"><scope>leveldb::ModelDB</scope><name>Open</name></member>
      <member refid="classleveldb_1_1_model_d_b_1ae5aee6801bcd1c2d8843607abb2e723a" prot="private" virt="non-virtual"><scope>leveldb::ModelDB</scope><name>options_</name></member>
      <member refid="classleveldb_1_1_model_d_b_1a83d0ace11c8ff079f4e6eaa905744253" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>Put</name></member>
      <member refid="classleveldb_1_1_model_d_b_1a3f5d86ce612baaa88c11601c9a59df12" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>ReleaseSnapshot</name></member>
      <member refid="classleveldb_1_1_model_d_b_1ae3a20d2fc971376349b142b9c2d159be" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>Write</name></member>
      <member refid="classleveldb_1_1_d_b_1a15f516eb9ec41812419a7160b4740a22" prot="public" virt="virtual"><scope>leveldb::ModelDB</scope><name>~DB</name></member>
      <member refid="classleveldb_1_1_model_d_b_1a35e9042c7ed06e8324d5e40318771825" prot="public" virt="non-virtual"><scope>leveldb::ModelDB</scope><name>~ModelDB</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
