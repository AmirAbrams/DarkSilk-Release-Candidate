<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classleveldb_1_1_harness" kind="class" language="C++" prot="public">
    <compoundname>leveldb::Harness</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classleveldb_1_1_harness_1a503838bed7ecbdec2d06f577e54f522c" prot="private" static="no" mutable="no">
        <type><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref></type>
        <definition>Options leveldb::Harness::options_</definition>
        <argsstring></argsstring>
        <name>options_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="643" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classleveldb_1_1_harness_1a04b2410b1da9c47dd78240702e68c826" prot="private" static="no" mutable="no">
        <type><ref refid="classleveldb_1_1_constructor" kindref="compound">Constructor</ref> *</type>
        <definition>Constructor* leveldb::Harness::constructor_</definition>
        <argsstring></argsstring>
        <name>constructor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="644" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="644" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classleveldb_1_1_harness_1a37601b2f232e45cb7607aa8d2ecb25db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::Harness::Harness</definition>
        <argsstring>()</argsstring>
        <name>Harness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="439" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="439" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1a2aba24255691eaad2a57ee43cbc9ddc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Harness::Init</definition>
        <argsstring>(const TestArgs &amp;args)</argsstring>
        <name>Init</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_test_args" kindref="compound">TestArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="441" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="441" bodyend="467"/>
        <references refid="structleveldb_1_1_options_1ac71d66ae44e481edc3922d3a139c30b4" compoundref="options_8h" startline="113">leveldb::Options::block_restart_interval</references>
        <references refid="structleveldb_1_1_test_args_1a233f5e5e56ff872e26f543585824df1d" compoundref="table__test_8cc" startline="409">leveldb::TestArgs::restart_interval</references>
        <references refid="structleveldb_1_1_options_1a715c7941b43db641e76e598aa9ab52a0" compoundref="options_8h" startline="106">leveldb::Options::block_size</references>
        <references refid="structleveldb_1_1_test_args_1ab4c8bef944a4ddf845378f1fce2b6c22" compoundref="table__test_8cc" startline="408">leveldb::TestArgs::reverse_compare</references>
        <references refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" compoundref="options_8h" startline="41">leveldb::Options::comparator</references>
        <references refid="structleveldb_1_1_test_args_1a1c2c14e2506bf6c238a2685c38eb16ac" compoundref="table__test_8cc" startline="407">leveldb::TestArgs::type</references>
        <references refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342afcbbb26886c91919805d694a85d7a7d0" compoundref="table__test_8cc" startline="400">leveldb::TABLE_TEST</references>
        <references refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa6bc1b815c870f47c3c0288ab56ce3c9" compoundref="table__test_8cc" startline="401">leveldb::BLOCK_TEST</references>
        <references refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342a86f848bd8f163c760b4c661bdec7d46b" compoundref="table__test_8cc" startline="402">leveldb::MEMTABLE_TEST</references>
        <references refid="namespaceleveldb_1aefcb8349b9101fe6eeff98a1682f1342aa533718fc4477e8662fb49275ff8c908" compoundref="table__test_8cc" startline="403">leveldb::DB_TEST</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1a9956e6945c11e5024ae1f82fd8528343" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::Harness::~Harness</definition>
        <argsstring>()</argsstring>
        <name>~Harness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="469" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="469" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1a019ddc8e52dc5cfaac85f53993ab1ed4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Harness::Add</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>Add</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="473" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="473" bodyend="475"/>
        <references refid="classleveldb_1_1_constructor_1a5bb35f87d196065b8357200922aae69f" compoundref="table__test_8cc" startline="146" endline="148">leveldb::Constructor::Add</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1a78dbb5352b51e22bbc449bad7c1a9176" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Harness::Test</definition>
        <argsstring>(Random *rnd)</argsstring>
        <name>Test</name>
        <param>
          <type><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref> *</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="477" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="477" bodyend="485"/>
        <references refid="classleveldb_1_1_constructor_1a5c7f63378f8834cac3be93040e0e49fc" compoundref="table__test_8cc" startline="153" endline="166">leveldb::Constructor::Finish</references>
        <references refid="classleveldb_1_1_harness_1ac5ff108406a08a6e3e22318246d206ef" compoundref="table__test_8cc" startline="487" endline="500">TestForwardScan</references>
        <references refid="classleveldb_1_1_harness_1aba7a2c48101cd9d024be64080ebed363" compoundref="table__test_8cc" startline="502" endline="515">TestBackwardScan</references>
        <references refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" compoundref="table__test_8cc" startline="517" endline="585">TestRandomAccess</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1ac5ff108406a08a6e3e22318246d206ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Harness::TestForwardScan</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;keys, const KVMap &amp;data)</argsstring>
        <name>TestForwardScan</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="487" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="487" bodyend="500"/>
        <references refid="classleveldb_1_1_constructor_1a362b24b7194f605b655f5a136e0ae43c">leveldb::Constructor::NewIterator</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" compoundref="table__test_8cc" startline="587" endline="593">ToString</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
        <referencedby refid="classleveldb_1_1_harness_1a78dbb5352b51e22bbc449bad7c1a9176" compoundref="table__test_8cc" startline="477" endline="485">Test</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1aba7a2c48101cd9d024be64080ebed363" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Harness::TestBackwardScan</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;keys, const KVMap &amp;data)</argsstring>
        <name>TestBackwardScan</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="502" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="502" bodyend="515"/>
        <references refid="classleveldb_1_1_constructor_1a362b24b7194f605b655f5a136e0ae43c">leveldb::Constructor::NewIterator</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3">leveldb::Iterator::SeekToLast</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" compoundref="table__test_8cc" startline="587" endline="593">ToString</references>
        <references refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e">leveldb::Iterator::Prev</references>
        <referencedby refid="classleveldb_1_1_harness_1a78dbb5352b51e22bbc449bad7c1a9176" compoundref="table__test_8cc" startline="477" endline="485">Test</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Harness::TestRandomAccess</definition>
        <argsstring>(Random *rnd, const std::vector&lt; std::string &gt; &amp;keys, const KVMap &amp;data)</argsstring>
        <name>TestRandomAccess</name>
        <param>
          <type><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref> *</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="517" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="517" bodyend="585"/>
        <references refid="classleveldb_1_1_constructor_1a362b24b7194f605b655f5a136e0ae43c">leveldb::Constructor::NewIterator</references>
        <references refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" compoundref="testharness_8h" startline="105">ASSERT_TRUE</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" compoundref="random_8h" startline="48" endline="48">leveldb::Random::Uniform</references>
        <references refid="classleveldb_1_1_iterator_1aea54a5ca7eb942eb15770820529410e7">leveldb::Iterator::Next</references>
        <references refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" compoundref="testharness_8h" startline="107">ASSERT_EQ</references>
        <references refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" compoundref="table__test_8cc" startline="587" endline="593">ToString</references>
        <references refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e">leveldb::Iterator::SeekToFirst</references>
        <references refid="classleveldb_1_1_harness_1ab6f2d80f97eb56fc65d4a9177cd86c03" compoundref="table__test_8cc" startline="612" endline="637">PickRandomKey</references>
        <references refid="namespaceleveldb_1a6d50705a37d7459f152f8ad839513a73" compoundref="logging_8cc" startline="42" endline="46">leveldb::EscapeString</references>
        <references refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44">leveldb::Iterator::Seek</references>
        <references refid="classleveldb_1_1_iterator_1a28798d802a203788587dc6adc5bc729e">leveldb::Iterator::Prev</references>
        <references refid="classleveldb_1_1_iterator_1a8ad637f0a759e6d94cca6c5b4db440d3">leveldb::Iterator::SeekToLast</references>
        <referencedby refid="classleveldb_1_1_harness_1a78dbb5352b51e22bbc449bad7c1a9176" compoundref="table__test_8cc" startline="477" endline="485">Test</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::Harness::ToString</definition>
        <argsstring>(const KVMap &amp;data, const KVMap::const_iterator &amp;it)</argsstring>
        <name>ToString</name>
        <param>
          <type>const <ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const KVMap::const_iterator &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="587" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="587" bodyend="593"/>
        <referencedby refid="classleveldb_1_1_harness_1ac5ff108406a08a6e3e22318246d206ef" compoundref="table__test_8cc" startline="487" endline="500">TestForwardScan</referencedby>
        <referencedby refid="classleveldb_1_1_harness_1aba7a2c48101cd9d024be64080ebed363" compoundref="table__test_8cc" startline="502" endline="515">TestBackwardScan</referencedby>
        <referencedby refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" compoundref="table__test_8cc" startline="517" endline="585">TestRandomAccess</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1a7589308a4592b9edb4142825b743244c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::Harness::ToString</definition>
        <argsstring>(const KVMap &amp;data, const KVMap::const_reverse_iterator &amp;it)</argsstring>
        <name>ToString</name>
        <param>
          <type>const <ref refid="namespaceleveldb_1aac1e50450147be263e08252c6700f7a7" kindref="member">KVMap</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const KVMap::const_reverse_iterator &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="595" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="595" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1a1cdf351918a2e969bce1c29290317403" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::Harness::ToString</definition>
        <argsstring>(const Iterator *it)</argsstring>
        <name>ToString</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="604" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="604" bodyend="610"/>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_iterator_1ad17feced6e24a1b21db5ae6940c1f220">leveldb::Iterator::key</references>
        <references refid="classleveldb_1_1_slice_1a2cdd9fb649105033fde510afc9416732" compoundref="slice_8h" startline="66" endline="66">leveldb::Slice::ToString</references>
        <references refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c">leveldb::Iterator::value</references>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1ab6f2d80f97eb56fc65d4a9177cd86c03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string leveldb::Harness::PickRandomKey</definition>
        <argsstring>(Random *rnd, const std::vector&lt; std::string &gt; &amp;keys)</argsstring>
        <name>PickRandomKey</name>
        <param>
          <type><ref refid="classleveldb_1_1_random" kindref="compound">Random</ref> *</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="612" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="612" bodyend="637"/>
        <references refid="classleveldb_1_1_random_1a9281323c3f115fa47a0f329f72ad2a80" compoundref="random_8h" startline="48" endline="48">leveldb::Random::Uniform</references>
        <references refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" compoundref="options_8h" startline="41">leveldb::Options::comparator</references>
        <referencedby refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" compoundref="table__test_8cc" startline="517" endline="585">TestRandomAccess</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_harness_1ac278dc1cfc6a3b9f6ebc5ac93ccb42a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref> *</type>
        <definition>DB* leveldb::Harness::db</definition>
        <argsstring>() const </argsstring>
        <name>db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="640" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="640" bodyend="640"/>
        <references refid="classleveldb_1_1_constructor_1a207d6002cdb7ead23cecf6cfb4350a80" compoundref="table__test_8cc" startline="175" endline="175">leveldb::Constructor::db</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/leveldb/table/table_test.cc" line="437" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table_test.cc" bodystart="437" bodyend="645"/>
    <listofallmembers>
      <member refid="classleveldb_1_1_harness_1a019ddc8e52dc5cfaac85f53993ab1ed4" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>Add</name></member>
      <member refid="classleveldb_1_1_harness_1a04b2410b1da9c47dd78240702e68c826" prot="private" virt="non-virtual"><scope>leveldb::Harness</scope><name>constructor_</name></member>
      <member refid="classleveldb_1_1_harness_1ac278dc1cfc6a3b9f6ebc5ac93ccb42a7" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>db</name></member>
      <member refid="classleveldb_1_1_harness_1a37601b2f232e45cb7607aa8d2ecb25db" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>Harness</name></member>
      <member refid="classleveldb_1_1_harness_1a2aba24255691eaad2a57ee43cbc9ddc1" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>Init</name></member>
      <member refid="classleveldb_1_1_harness_1a503838bed7ecbdec2d06f577e54f522c" prot="private" virt="non-virtual"><scope>leveldb::Harness</scope><name>options_</name></member>
      <member refid="classleveldb_1_1_harness_1ab6f2d80f97eb56fc65d4a9177cd86c03" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>PickRandomKey</name></member>
      <member refid="classleveldb_1_1_harness_1a78dbb5352b51e22bbc449bad7c1a9176" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>Test</name></member>
      <member refid="classleveldb_1_1_harness_1aba7a2c48101cd9d024be64080ebed363" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>TestBackwardScan</name></member>
      <member refid="classleveldb_1_1_harness_1ac5ff108406a08a6e3e22318246d206ef" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>TestForwardScan</name></member>
      <member refid="classleveldb_1_1_harness_1adb4b24bd89b600a67b0cd52ff64af9cd" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>TestRandomAccess</name></member>
      <member refid="classleveldb_1_1_harness_1a69962f92cdd4fdc5d1f91d8c3cbebb3f" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>ToString</name></member>
      <member refid="classleveldb_1_1_harness_1a7589308a4592b9edb4142825b743244c" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>ToString</name></member>
      <member refid="classleveldb_1_1_harness_1a1cdf351918a2e969bce1c29290317403" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>ToString</name></member>
      <member refid="classleveldb_1_1_harness_1a9956e6945c11e5024ae1f82fd8528343" prot="public" virt="non-virtual"><scope>leveldb::Harness</scope><name>~Harness</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
