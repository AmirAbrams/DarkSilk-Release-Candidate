<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="serialize_8h" kind="file" language="C++">
    <compoundname>serialize.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">cassert</includes>
    <includes local="no">limits</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">boost/type_traits/is_fundamental.hpp</includes>
    <includes local="no">boost/tuple/tuple.hpp</includes>
    <includes refid="allocators_8h" local="yes">allocators.h</includes>
    <includes refid="version_8h" local="yes">version.h</includes>
    <includedby refid="netbase_8h" local="yes">/home/dev/ds-160209/src/netbase.h</includedby>
    <includedby refid="bignum_8h" local="yes">/home/dev/ds-160209/src/bignum.h</includedby>
    <includedby refid="protocol_8h" local="yes">/home/dev/ds-160209/src/protocol.h</includedby>
    <includedby refid="util_8h" local="yes">/home/dev/ds-160209/src/util.h</includedby>
    <includedby refid="amount_8h" local="yes">/home/dev/ds-160209/src/amount.h</includedby>
    <includedby refid="hash_8h" local="yes">/home/dev/ds-160209/src/hash.h</includedby>
    <includedby refid="pubkey_8h" local="yes">/home/dev/ds-160209/src/pubkey.h</includedby>
    <includedby refid="db_8h" local="yes">/home/dev/ds-160209/src/db.h</includedby>
    <includedby refid="streams_8h" local="yes">/home/dev/ds-160209/src/streams.h</includedby>
    <includedby refid="stealth_8h" local="yes">/home/dev/ds-160209/src/stealth.h</includedby>
    <includedby refid="transaction_8h" local="yes">/home/dev/ds-160209/src/primitives/transaction.h</includedby>
    <includedby refid="crypter_8h" local="yes">/home/dev/ds-160209/src/crypter.h</includedby>
    <includedby refid="leveldbwrapper_8h" local="yes">/home/dev/ds-160209/src/leveldbwrapper.h</includedby>
    <includedby refid="alert_8h" local="yes">/home/dev/ds-160209/src/alert.h</includedby>
    <includedby refid="ecwrapper_8cpp" local="yes">/home/dev/ds-160209/src/ecwrapper.cpp</includedby>
    <includedby refid="serialize__tests_8cpp" local="yes">/home/dev/ds-160209/src/test/serialize_tests.cpp</includedby>
    <includedby refid="utilstrencodings_8h" local="yes">/home/dev/ds-160209/src/utilstrencodings.h</includedby>
    <includedby refid="walletdb_8cpp" local="yes">/home/dev/ds-160209/src/walletdb.cpp</includedby>
    <incdepgraph>
      <node id="52426">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="52416">
        <label>limits</label>
      </node>
      <node id="52421">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="52430">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="52431" relation="include">
        </childnode>
        <childnode refid="52411" relation="include">
        </childnode>
      </node>
      <node id="52427">
        <label>sys/mman.h</label>
      </node>
      <node id="52424">
        <label>stdlib.h</label>
      </node>
      <node id="52415">
        <label>cassert</label>
      </node>
      <node id="52411">
        <label>string</label>
      </node>
      <node id="52413">
        <label>map</label>
      </node>
      <node id="52410">
        <label>/home/dev/ds-160209/src/serialize.h</label>
        <link refid="serialize.h"/>
        <childnode refid="52411" relation="include">
        </childnode>
        <childnode refid="52412" relation="include">
        </childnode>
        <childnode refid="52413" relation="include">
        </childnode>
        <childnode refid="52414" relation="include">
        </childnode>
        <childnode refid="52415" relation="include">
        </childnode>
        <childnode refid="52416" relation="include">
        </childnode>
        <childnode refid="52417" relation="include">
        </childnode>
        <childnode refid="52418" relation="include">
        </childnode>
        <childnode refid="52419" relation="include">
        </childnode>
        <childnode refid="52420" relation="include">
        </childnode>
        <childnode refid="52421" relation="include">
        </childnode>
        <childnode refid="52422" relation="include">
        </childnode>
        <childnode refid="52430" relation="include">
        </childnode>
      </node>
      <node id="52428">
        <label>limits.h</label>
      </node>
      <node id="52425">
        <label>string.h</label>
      </node>
      <node id="52431">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="52419">
        <label>cstdio</label>
      </node>
      <node id="52420">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="52429">
        <label>unistd.h</label>
      </node>
      <node id="52412">
        <label>vector</label>
      </node>
      <node id="52417">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="52422">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="52423" relation="include">
        </childnode>
        <childnode refid="52425" relation="include">
        </childnode>
        <childnode refid="52411" relation="include">
        </childnode>
        <childnode refid="52426" relation="include">
        </childnode>
        <childnode refid="52413" relation="include">
        </childnode>
        <childnode refid="52427" relation="include">
        </childnode>
        <childnode refid="52428" relation="include">
        </childnode>
        <childnode refid="52429" relation="include">
        </childnode>
      </node>
      <node id="52414">
        <label>set</label>
      </node>
      <node id="52423">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="52424" relation="include">
        </childnode>
      </node>
      <node id="52418">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="52468">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="52582">
        <label>/home/dev/ds-160209/src/test/base32_tests.cpp</label>
        <link refid="base32__tests_8cpp"/>
      </node>
      <node id="52578">
        <label>/home/dev/ds-160209/src/qt/i2poptionswidget.cpp</label>
        <link refid="i2poptionswidget_8cpp"/>
      </node>
      <node id="52598">
        <label>/home/dev/ds-160209/src/qt/coincontroltreewidget.cpp</label>
        <link refid="coincontroltreewidget_8cpp"/>
      </node>
      <node id="52452">
        <label>/home/dev/ds-160209/src/stormnodeman.cpp</label>
        <link refid="stormnodeman_8cpp"/>
      </node>
      <node id="52473">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="52587">
        <label>/home/dev/ds-160209/src/amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="52571" relation="include">
        </childnode>
        <childnode refid="52561" relation="include">
        </childnode>
        <childnode refid="52564" relation="include">
        </childnode>
        <childnode refid="52504" relation="include">
        </childnode>
        <childnode refid="52588" relation="include">
        </childnode>
        <childnode refid="52592" relation="include">
        </childnode>
        <childnode refid="52593" relation="include">
        </childnode>
        <childnode refid="52595" relation="include">
        </childnode>
        <childnode refid="52597" relation="include">
        </childnode>
        <childnode refid="52599" relation="include">
        </childnode>
        <childnode refid="52602" relation="include">
        </childnode>
        <childnode refid="52603" relation="include">
        </childnode>
        <childnode refid="52604" relation="include">
        </childnode>
        <childnode refid="52605" relation="include">
        </childnode>
        <childnode refid="52548" relation="include">
        </childnode>
      </node>
      <node id="52558">
        <label>/home/dev/ds-160209/src/rpcclient.cpp</label>
        <link refid="rpcclient_8cpp"/>
      </node>
      <node id="52554">
        <label>/home/dev/ds-160209/src/rpcserver.cpp</label>
        <link refid="rpcserver_8cpp"/>
      </node>
      <node id="52453">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="52610">
        <label>/home/dev/ds-160209/src/hash.cpp</label>
        <link refid="hash_8cpp"/>
      </node>
      <node id="52481">
        <label>/home/dev/ds-160209/src/qt/guiutil.cpp</label>
        <link refid="guiutil_8cpp"/>
      </node>
      <node id="52604">
        <label>/home/dev/ds-160209/src/qt/overviewpage.h</label>
        <link refid="overviewpage_8h"/>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52456" relation="include">
        </childnode>
      </node>
      <node id="52520">
        <label>/home/dev/ds-160209/src/stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52460" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52463" relation="include">
        </childnode>
        <childnode refid="52450" relation="include">
        </childnode>
        <childnode refid="52451" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52564">
        <label>/home/dev/ds-160209/src/primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="52533" relation="include">
        </childnode>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52504" relation="include">
        </childnode>
        <childnode refid="52501" relation="include">
        </childnode>
        <childnode refid="52565" relation="include">
        </childnode>
        <childnode refid="52566" relation="include">
        </childnode>
        <childnode refid="52454" relation="include">
        </childnode>
        <childnode refid="52567" relation="include">
        </childnode>
        <childnode refid="52568" relation="include">
        </childnode>
        <childnode refid="52481" relation="include">
        </childnode>
        <childnode refid="52511" relation="include">
        </childnode>
      </node>
      <node id="52466">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="52467" relation="include">
        </childnode>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52469" relation="include">
        </childnode>
        <childnode refid="52470" relation="include">
        </childnode>
        <childnode refid="52471" relation="include">
        </childnode>
        <childnode refid="52472" relation="include">
        </childnode>
      </node>
      <node id="52559">
        <label>/home/dev/ds-160209/src/script.h</label>
        <link refid="script_8h"/>
        <childnode refid="52560" relation="include">
        </childnode>
        <childnode refid="52564" relation="include">
        </childnode>
        <childnode refid="52437" relation="include">
        </childnode>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52551" relation="include">
        </childnode>
        <childnode refid="52441" relation="include">
        </childnode>
        <childnode refid="52537" relation="include">
        </childnode>
        <childnode refid="52477" relation="include">
        </childnode>
        <childnode refid="52462" relation="include">
        </childnode>
        <childnode refid="52529" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52569" relation="include">
        </childnode>
      </node>
      <node id="52479">
        <label>/home/dev/ds-160209/src/qt/addresstablemodel.cpp</label>
        <link refid="addresstablemodel_8cpp"/>
      </node>
      <node id="52536">
        <label>/home/dev/ds-160209/src/primitives/block.cpp</label>
        <link refid="block_8cpp"/>
      </node>
      <node id="52454">
        <label>/home/dev/ds-160209/src/net.cpp</label>
        <link refid="net_8cpp"/>
      </node>
      <node id="52561">
        <label>/home/dev/ds-160209/src/walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52477" relation="include">
        </childnode>
        <childnode refid="52493" relation="include">
        </childnode>
        <childnode refid="52457" relation="include">
        </childnode>
        <childnode refid="52447" relation="include">
        </childnode>
        <childnode refid="52495" relation="include">
        </childnode>
        <childnode refid="52496" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
        <childnode refid="52499" relation="include">
        </childnode>
      </node>
      <node id="52440">
        <label>/home/dev/ds-160209/src/sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="52441" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52454" relation="include">
        </childnode>
        <childnode refid="52455" relation="include">
        </childnode>
        <childnode refid="52456" relation="include">
        </childnode>
        <childnode refid="52457" relation="include">
        </childnode>
        <childnode refid="52458" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52460" relation="include">
        </childnode>
        <childnode refid="52461" relation="include">
        </childnode>
        <childnode refid="52462" relation="include">
        </childnode>
        <childnode refid="52463" relation="include">
        </childnode>
        <childnode refid="52450" relation="include">
        </childnode>
        <childnode refid="52464" relation="include">
        </childnode>
        <childnode refid="52452" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52515">
        <label>/home/dev/ds-160209/src/stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="52435" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52516" relation="include">
        </childnode>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
        <childnode refid="52448" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52460" relation="include">
        </childnode>
        <childnode refid="52462" relation="include">
        </childnode>
        <childnode refid="52463" relation="include">
        </childnode>
        <childnode refid="52450" relation="include">
        </childnode>
        <childnode refid="52451" relation="include">
        </childnode>
        <childnode refid="52464" relation="include">
        </childnode>
        <childnode refid="52452" relation="include">
        </childnode>
      </node>
      <node id="52504">
        <label>/home/dev/ds-160209/src/txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="52437" relation="include">
        </childnode>
        <childnode refid="52503" relation="include">
        </childnode>
        <childnode refid="52505" relation="include">
        </childnode>
      </node>
      <node id="52449">
        <label>/home/dev/ds-160209/src/spork.cpp</label>
        <link refid="spork_8cpp"/>
      </node>
      <node id="52594">
        <label>/home/dev/ds-160209/src/darksilkd.cpp</label>
        <link refid="darksilkd_8cpp"/>
      </node>
      <node id="52494">
        <label>/home/dev/ds-160209/src/qt/transactiondesc.cpp</label>
        <link refid="transactiondesc_8cpp"/>
      </node>
      <node id="52516">
        <label>/home/dev/ds-160209/src/qt/clientmodel.cpp</label>
        <link refid="clientmodel_8cpp"/>
      </node>
      <node id="52488">
        <label>/home/dev/ds-160209/src/qt/transactionview.cpp</label>
        <link refid="transactionview_8cpp"/>
      </node>
      <node id="52551">
        <label>/home/dev/ds-160209/src/base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="52517" relation="include">
        </childnode>
        <childnode refid="52518" relation="include">
        </childnode>
        <childnode refid="52441" relation="include">
        </childnode>
        <childnode refid="52552" relation="include">
        </childnode>
        <childnode refid="52520" relation="include">
        </childnode>
        <childnode refid="52465" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52477" relation="include">
        </childnode>
        <childnode refid="52479" relation="include">
        </childnode>
        <childnode refid="52489" relation="include">
        </childnode>
        <childnode refid="52490" relation="include">
        </childnode>
        <childnode refid="52455" relation="include">
        </childnode>
        <childnode refid="52491" relation="include">
        </childnode>
        <childnode refid="52469" relation="include">
        </childnode>
        <childnode refid="52483" relation="include">
        </childnode>
        <childnode refid="52485" relation="include">
        </childnode>
        <childnode refid="52492" relation="include">
        </childnode>
        <childnode refid="52494" relation="include">
        </childnode>
        <childnode refid="52458" relation="include">
        </childnode>
        <childnode refid="52447" relation="include">
        </childnode>
        <childnode refid="52553" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
        <childnode refid="52448" relation="include">
        </childnode>
        <childnode refid="52511" relation="include">
        </childnode>
        <childnode refid="52554" relation="include">
        </childnode>
        <childnode refid="52495" relation="include">
        </childnode>
        <childnode refid="52474" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52555" relation="include">
        </childnode>
        <childnode refid="52539" relation="include">
        </childnode>
        <childnode refid="52556" relation="include">
        </childnode>
        <childnode refid="52557" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
        <childnode refid="52499" relation="include">
        </childnode>
      </node>
      <node id="52460">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode_8cpp"/>
      </node>
      <node id="52546">
        <label>/home/dev/ds-160209/src/test/netbase_tests.cpp</label>
        <link refid="netbase__tests_8cpp"/>
      </node>
      <node id="52455">
        <label>/home/dev/ds-160209/src/qt/coincontroldialog.cpp</label>
        <link refid="coincontroldialog_8cpp"/>
      </node>
      <node id="52506">
        <label>/home/dev/ds-160209/src/coins.cpp</label>
        <link refid="coins_8cpp"/>
      </node>
      <node id="52469">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="52539">
        <label>/home/dev/ds-160209/src/stormnodeconfig.cpp</label>
        <link refid="stormnodeconfig_8cpp"/>
      </node>
      <node id="52503">
        <label>/home/dev/ds-160209/src/coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="52504" relation="include">
        </childnode>
        <childnode refid="52506" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
      </node>
      <node id="52597">
        <label>/home/dev/ds-160209/src/qt/coincontroldialog.h</label>
        <link refid="coincontroldialog_8h"/>
        <childnode refid="52455" relation="include">
        </childnode>
        <childnode refid="52598" relation="include">
        </childnode>
        <childnode refid="52483" relation="include">
        </childnode>
      </node>
      <node id="52534">
        <label>/home/dev/ds-160209/src/chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="52437" relation="include">
        </childnode>
        <childnode refid="52442" relation="include">
        </childnode>
        <childnode refid="52535" relation="include">
        </childnode>
      </node>
      <node id="52465">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52466" relation="include">
        </childnode>
        <childnode refid="52472" relation="include">
        </childnode>
        <childnode refid="52447" relation="include">
        </childnode>
        <childnode refid="52473" relation="include">
        </childnode>
        <childnode refid="52474" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52467">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="52567">
        <label>/home/dev/ds-160209/src/primitives/transaction.cpp</label>
        <link refid="transaction_8cpp"/>
      </node>
      <node id="52495">
        <label>/home/dev/ds-160209/src/rpcwallet.cpp</label>
        <link refid="rpcwallet_8cpp"/>
      </node>
      <node id="52590">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.h</label>
        <link refid="darksilkgui_8h"/>
        <childnode refid="52591" relation="include">
        </childnode>
        <childnode refid="52467" relation="include">
        </childnode>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52470" relation="include">
        </childnode>
      </node>
      <node id="52527">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="52492" relation="include">
        </childnode>
      </node>
      <node id="52505">
        <label>/home/dev/ds-160209/src/txmempool.cpp</label>
        <link refid="txmempool_8cpp"/>
      </node>
      <node id="52514">
        <label>/home/dev/ds-160209/src/stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="52515" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52446" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52460" relation="include">
        </childnode>
        <childnode refid="52462" relation="include">
        </childnode>
        <childnode refid="52450" relation="include">
        </childnode>
        <childnode refid="52451" relation="include">
        </childnode>
        <childnode refid="52464" relation="include">
        </childnode>
        <childnode refid="52452" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52492">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="52484">
        <label>/home/dev/ds-160209/src/qt/sendcoinsentry.cpp</label>
        <link refid="sendcoinsentry_8cpp"/>
      </node>
      <node id="52571">
        <label>/home/dev/ds-160209/src/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="52434" relation="include">
        </childnode>
        <childnode refid="52559" relation="include">
        </childnode>
        <childnode refid="52572" relation="include">
        </childnode>
        <childnode refid="52564" relation="include">
        </childnode>
        <childnode refid="52573" relation="include">
        </childnode>
        <childnode refid="52534" relation="include">
        </childnode>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52517" relation="include">
        </childnode>
        <childnode refid="52518" relation="include">
        </childnode>
        <childnode refid="52441" relation="include">
        </childnode>
        <childnode refid="52531" relation="include">
        </childnode>
        <childnode refid="52506" relation="include">
        </childnode>
        <childnode refid="52532" relation="include">
        </childnode>
        <childnode refid="52541" relation="include">
        </childnode>
        <childnode refid="52575" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52520" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52576" relation="include">
        </childnode>
        <childnode refid="52544" relation="include">
        </childnode>
        <childnode refid="52543" relation="include">
        </childnode>
        <childnode refid="52577" relation="include">
        </childnode>
        <childnode refid="52477" relation="include">
        </childnode>
        <childnode refid="52467" relation="include">
        </childnode>
        <childnode refid="52481" relation="include">
        </childnode>
        <childnode refid="52578" relation="include">
        </childnode>
        <childnode refid="52579" relation="include">
        </childnode>
        <childnode refid="52558" relation="include">
        </childnode>
        <childnode refid="52448" relation="include">
        </childnode>
        <childnode refid="52528" relation="include">
        </childnode>
        <childnode refid="52580" relation="include">
        </childnode>
        <childnode refid="52554" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52495" relation="include">
        </childnode>
        <childnode refid="52462" relation="include">
        </childnode>
        <childnode refid="52538" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52463" relation="include">
        </childnode>
        <childnode refid="52450" relation="include">
        </childnode>
        <childnode refid="52451" relation="include">
        </childnode>
        <childnode refid="52464" relation="include">
        </childnode>
        <childnode refid="52539" relation="include">
        </childnode>
        <childnode refid="52452" relation="include">
        </childnode>
        <childnode refid="52581" relation="include">
        </childnode>
        <childnode refid="52530" relation="include">
        </childnode>
        <childnode refid="52582" relation="include">
        </childnode>
        <childnode refid="52556" relation="include">
        </childnode>
        <childnode refid="52497" relation="include">
        </childnode>
        <childnode refid="52570" relation="include">
        </childnode>
        <childnode refid="52583" relation="include">
        </childnode>
        <childnode refid="52584" relation="include">
        </childnode>
        <childnode refid="52585" relation="include">
        </childnode>
        <childnode refid="52557" relation="include">
        </childnode>
        <childnode refid="52586" relation="include">
        </childnode>
        <childnode refid="52547" relation="include">
        </childnode>
        <childnode refid="52512" relation="include">
        </childnode>
        <childnode refid="52548" relation="include">
        </childnode>
      </node>
      <node id="52524">
        <label>/home/dev/ds-160209/src/qt/debugconsole.h</label>
        <link refid="debugconsole_8h"/>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52525" relation="include">
        </childnode>
      </node>
      <node id="52542">
        <label>/home/dev/ds-160209/src/protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="52434" relation="include">
        </childnode>
        <childnode refid="52435" relation="include">
        </childnode>
        <childnode refid="52436" relation="include">
        </childnode>
        <childnode refid="52441" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52543" relation="include">
        </childnode>
        <childnode refid="52528" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52499" relation="include">
        </childnode>
      </node>
      <node id="52522">
        <label>/home/dev/ds-160209/src/chainparams.cpp</label>
        <link refid="chainparams_8cpp"/>
      </node>
      <node id="52447">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="52508">
        <label>/home/dev/ds-160209/src/compressor.cpp</label>
        <link refid="compressor_8cpp"/>
      </node>
      <node id="52486">
        <label>/home/dev/ds-160209/src/qt/test/uritests.cpp</label>
        <link refid="uritests_8cpp"/>
      </node>
      <node id="52438">
        <label>/home/dev/ds-160209/src/wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="52439" relation="include">
        </childnode>
        <childnode refid="52442" relation="include">
        </childnode>
        <childnode refid="52465" relation="include">
        </childnode>
        <childnode refid="52475" relation="include">
        </childnode>
        <childnode refid="52454" relation="include">
        </childnode>
        <childnode refid="52477" relation="include">
        </childnode>
        <childnode refid="52478" relation="include">
        </childnode>
        <childnode refid="52479" relation="include">
        </childnode>
        <childnode refid="52489" relation="include">
        </childnode>
        <childnode refid="52490" relation="include">
        </childnode>
        <childnode refid="52455" relation="include">
        </childnode>
        <childnode refid="52467" relation="include">
        </childnode>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52491" relation="include">
        </childnode>
        <childnode refid="52493" relation="include">
        </childnode>
        <childnode refid="52485" relation="include">
        </childnode>
        <childnode refid="52492" relation="include">
        </childnode>
        <childnode refid="52457" relation="include">
        </childnode>
        <childnode refid="52494" relation="include">
        </childnode>
        <childnode refid="52458" relation="include">
        </childnode>
        <childnode refid="52487" relation="include">
        </childnode>
        <childnode refid="52447" relation="include">
        </childnode>
        <childnode refid="52495" relation="include">
        </childnode>
        <childnode refid="52496" relation="include">
        </childnode>
        <childnode refid="52497" relation="include">
        </childnode>
        <childnode refid="52498" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
        <childnode refid="52499" relation="include">
        </childnode>
      </node>
      <node id="52532">
        <label>/home/dev/ds-160209/src/scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="52533" relation="include">
        </childnode>
        <childnode refid="52537" relation="include">
        </childnode>
        <childnode refid="52538" relation="include">
        </childnode>
      </node>
      <node id="52528">
        <label>/home/dev/ds-160209/src/rpcnet.cpp</label>
        <link refid="rpcnet_8cpp"/>
      </node>
      <node id="52513">
        <label>/home/dev/ds-160209/src/txdb.cpp</label>
        <link refid="txdb_8cpp"/>
      </node>
      <node id="52485">
        <label>/home/dev/ds-160209/src/qt/signverifymessagedialog.cpp</label>
        <link refid="signverifymessagedialog_8cpp"/>
      </node>
      <node id="52446">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="52451">
        <label>/home/dev/ds-160209/src/stormnode-sync.cpp</label>
        <link refid="stormnode-sync_8cpp"/>
      </node>
      <node id="52579">
        <label>/home/dev/ds-160209/src/qt/paymentserver.cpp</label>
        <link refid="paymentserver_8cpp"/>
      </node>
      <node id="52476">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="52544">
        <label>/home/dev/ds-160209/src/netbase.cpp</label>
        <link refid="netbase_8cpp"/>
      </node>
      <node id="52575">
        <label>/home/dev/ds-160209/src/i2p.cpp</label>
        <link refid="i2p_8cpp"/>
      </node>
      <node id="52519">
        <label>/home/dev/ds-160209/src/sandstorm-relay.h</label>
        <link refid="sandstorm-relay_8h"/>
        <childnode refid="52461" relation="include">
        </childnode>
      </node>
      <node id="52434">
        <label>/home/dev/ds-160209/src/addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="52435" relation="include">
        </childnode>
        <childnode refid="52436" relation="include">
        </childnode>
        <childnode refid="52540" relation="include">
        </childnode>
        <childnode refid="52541" relation="include">
        </childnode>
        <childnode refid="52463" relation="include">
        </childnode>
        <childnode refid="52450" relation="include">
        </childnode>
        <childnode refid="52451" relation="include">
        </childnode>
        <childnode refid="52464" relation="include">
        </childnode>
        <childnode refid="52452" relation="include">
        </childnode>
      </node>
      <node id="52490">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.cpp</label>
        <link refid="blockbrowser_8cpp"/>
      </node>
      <node id="52517">
        <label>/home/dev/ds-160209/src/stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="52514" relation="include">
        </childnode>
        <childnode refid="52518" relation="include">
        </childnode>
        <childnode refid="52520" relation="include">
        </childnode>
        <childnode refid="52457" relation="include">
        </childnode>
        <childnode refid="52463" relation="include">
        </childnode>
        <childnode refid="52451" relation="include">
        </childnode>
        <childnode refid="52464" relation="include">
        </childnode>
        <childnode refid="52452" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52588">
        <label>/home/dev/ds-160209/src/ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52531" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52454" relation="include">
        </childnode>
        <childnode refid="52589" relation="include">
        </childnode>
        <childnode refid="52477" relation="include">
        </childnode>
        <childnode refid="52590" relation="include">
        </childnode>
        <childnode refid="52516" relation="include">
        </childnode>
        <childnode refid="52467" relation="include">
        </childnode>
        <childnode refid="52469" relation="include">
        </childnode>
        <childnode refid="52579" relation="include">
        </childnode>
        <childnode refid="52494" relation="include">
        </childnode>
        <childnode refid="52487" relation="include">
        </childnode>
        <childnode refid="52447" relation="include">
        </childnode>
        <childnode refid="52558" relation="include">
        </childnode>
        <childnode refid="52553" relation="include">
        </childnode>
        <childnode refid="52554" relation="include">
        </childnode>
        <childnode refid="52462" relation="include">
        </childnode>
        <childnode refid="52547" relation="include">
        </childnode>
        <childnode refid="52548" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52573">
        <label>/home/dev/ds-160209/src/leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="52500" relation="include">
        </childnode>
        <childnode refid="52574" relation="include">
        </childnode>
      </node>
      <node id="52553">
        <label>/home/dev/ds-160209/src/rpcdump.cpp</label>
        <link refid="rpcdump_8cpp"/>
      </node>
      <node id="52591">
        <label>/home/dev/ds-160209/src/qt/addressbookpage.cpp</label>
        <link refid="addressbookpage_8cpp"/>
      </node>
      <node id="52566">
        <label>/home/dev/ds-160209/src/instantx.h</label>
        <link refid="instantx_8h"/>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52478" relation="include">
        </childnode>
        <childnode refid="52458" relation="include">
        </childnode>
        <childnode refid="52462" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52540">
        <label>/home/dev/ds-160209/src/addrman.cpp</label>
        <link refid="addrman_8cpp"/>
      </node>
      <node id="52614">
        <label>/home/dev/ds-160209/src/ecwrapper.cpp</label>
        <link refid="ecwrapper_8cpp"/>
      </node>
      <node id="52512">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="52545">
        <label>/home/dev/ds-160209/src/qt/optionsdialog.cpp</label>
        <link refid="optionsdialog_8cpp"/>
      </node>
      <node id="52458">
        <label>/home/dev/ds-160209/src/qt/transactionrecord.cpp</label>
        <link refid="transactionrecord_8cpp"/>
      </node>
      <node id="52502">
        <label>/home/dev/ds-160209/src/undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="52503" relation="include">
        </childnode>
        <childnode refid="52507" relation="include">
        </childnode>
      </node>
      <node id="52530">
        <label>/home/dev/ds-160209/src/test/allocator_tests.cpp</label>
        <link refid="allocator__tests_8cpp"/>
      </node>
      <node id="52552">
        <label>/home/dev/ds-160209/src/base58.cpp</label>
        <link refid="base58_8cpp"/>
      </node>
      <node id="52538">
        <label>/home/dev/ds-160209/src/scrypt.cpp</label>
        <link refid="scrypt_8cpp"/>
      </node>
      <node id="52602">
        <label>/home/dev/ds-160209/src/qt/darksilkamountfield.h</label>
        <link refid="darksilkamountfield_8h"/>
        <childnode refid="52600" relation="include">
        </childnode>
      </node>
      <node id="52565">
        <label>/home/dev/ds-160209/src/coincontrol.h</label>
        <link refid="coincontrol_8h"/>
        <childnode refid="52455" relation="include">
        </childnode>
        <childnode refid="52483" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52432">
        <label>/home/dev/ds-160209/src/serialize.h</label>
        <link refid="serialize.h"/>
        <childnode refid="52433" relation="include">
        </childnode>
        <childnode refid="52549" relation="include">
        </childnode>
        <childnode refid="52542" relation="include">
        </childnode>
        <childnode refid="52571" relation="include">
        </childnode>
        <childnode refid="52587" relation="include">
        </childnode>
        <childnode refid="52606" relation="include">
        </childnode>
        <childnode refid="52607" relation="include">
        </childnode>
        <childnode refid="52611" relation="include">
        </childnode>
        <childnode refid="52612" relation="include">
        </childnode>
        <childnode refid="52572" relation="include">
        </childnode>
        <childnode refid="52564" relation="include">
        </childnode>
        <childnode refid="52562" relation="include">
        </childnode>
        <childnode refid="52573" relation="include">
        </childnode>
        <childnode refid="52613" relation="include">
        </childnode>
        <childnode refid="52614" relation="include">
        </childnode>
        <childnode refid="52615" relation="include">
        </childnode>
        <childnode refid="52616" relation="include">
        </childnode>
        <childnode refid="52499" relation="include">
        </childnode>
      </node>
      <node id="52529">
        <label>/home/dev/ds-160209/src/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="52497">
        <label>/home/dev/ds-160209/src/test/base64_tests.cpp</label>
        <link refid="base64__tests_8cpp"/>
      </node>
      <node id="52457">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.cpp</label>
        <link refid="stormnodemanager_8cpp"/>
      </node>
      <node id="52601">
        <label>/home/dev/ds-160209/src/qt/qrcodedialog.cpp</label>
        <link refid="qrcodedialog_8cpp"/>
      </node>
      <node id="52547">
        <label>/home/dev/ds-160209/src/timedata.cpp</label>
        <link refid="timedata_8cpp"/>
      </node>
      <node id="52482">
        <label>/home/dev/ds-160209/src/qt/sandstormconfig.cpp</label>
        <link refid="sandstormconfig_8cpp"/>
      </node>
      <node id="52450">
        <label>/home/dev/ds-160209/src/stormnode-payments.cpp</label>
        <link refid="stormnode-payments_8cpp"/>
      </node>
      <node id="52531">
        <label>/home/dev/ds-160209/src/alert.cpp</label>
        <link refid="alert_8cpp"/>
      </node>
      <node id="52609">
        <label>/home/dev/ds-160209/src/pubkey.cpp</label>
        <link refid="pubkey_8cpp"/>
      </node>
      <node id="52562">
        <label>/home/dev/ds-160209/src/crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52537" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52433">
        <label>/home/dev/ds-160209/src/netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="52434" relation="include">
        </childnode>
        <childnode refid="52542" relation="include">
        </childnode>
        <childnode refid="52436" relation="include">
        </childnode>
        <childnode refid="52544" relation="include">
        </childnode>
        <childnode refid="52545" relation="include">
        </childnode>
        <childnode refid="52448" relation="include">
        </childnode>
        <childnode refid="52528" relation="include">
        </childnode>
        <childnode refid="52495" relation="include">
        </childnode>
        <childnode refid="52546" relation="include">
        </childnode>
        <childnode refid="52547" relation="include">
        </childnode>
        <childnode refid="52548" relation="include">
        </childnode>
      </node>
      <node id="52498">
        <label>/home/dev/ds-160209/src/test/wallet_tests.cpp</label>
        <link refid="wallet__tests_8cpp"/>
      </node>
      <node id="52560">
        <label>/home/dev/ds-160209/src/keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="52561" relation="include">
        </childnode>
        <childnode refid="52562" relation="include">
        </childnode>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52563" relation="include">
        </childnode>
        <childnode refid="52511" relation="include">
        </childnode>
        <childnode refid="52529" relation="include">
        </childnode>
      </node>
      <node id="52613">
        <label>/home/dev/ds-160209/src/alert.h</label>
        <link refid="alert_8h"/>
        <childnode refid="52531" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52516" relation="include">
        </childnode>
        <childnode refid="52528" relation="include">
        </childnode>
      </node>
      <node id="52493">
        <label>/home/dev/ds-160209/src/qt/optionsmodel.cpp</label>
        <link refid="optionsmodel_8cpp"/>
      </node>
      <node id="52606">
        <label>/home/dev/ds-160209/src/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="52607" relation="include">
        </childnode>
        <childnode refid="52436" relation="include">
        </childnode>
        <childnode refid="52540" relation="include">
        </childnode>
        <childnode refid="52552" relation="include">
        </childnode>
        <childnode refid="52508" relation="include">
        </childnode>
        <childnode refid="52541" relation="include">
        </childnode>
        <childnode refid="52610" relation="include">
        </childnode>
        <childnode refid="52575" relation="include">
        </childnode>
        <childnode refid="52544" relation="include">
        </childnode>
      </node>
      <node id="52541">
        <label>/home/dev/ds-160209/src/db.cpp</label>
        <link refid="db_8cpp"/>
      </node>
      <node id="52570">
        <label>/home/dev/ds-160209/src/test/bignum_tests.cpp</label>
        <link refid="bignum__tests_8cpp"/>
      </node>
      <node id="52572">
        <label>/home/dev/ds-160209/src/stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="52559" relation="include">
        </childnode>
        <childnode refid="52561" relation="include">
        </childnode>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52484" relation="include">
        </childnode>
        <childnode refid="52448" relation="include">
        </childnode>
        <childnode refid="52555" relation="include">
        </childnode>
      </node>
      <node id="52535">
        <label>/home/dev/ds-160209/src/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="52442" relation="include">
        </childnode>
        <childnode refid="52510" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52446" relation="include">
        </childnode>
        <childnode refid="52527" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
        <childnode refid="52512" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52496">
        <label>/home/dev/ds-160209/src/test/accounting_tests.cpp</label>
        <link refid="accounting__tests_8cpp"/>
      </node>
      <node id="52555">
        <label>/home/dev/ds-160209/src/stealth.cpp</label>
        <link refid="stealth_8cpp"/>
      </node>
      <node id="52511">
        <label>/home/dev/ds-160209/src/rpcrawtransaction.cpp</label>
        <link refid="rpcrawtransaction_8cpp"/>
      </node>
      <node id="52605">
        <label>/home/dev/ds-160209/src/qt/transactionfilterproxy.h</label>
        <link refid="transactionfilterproxy_8h"/>
        <childnode refid="52456" relation="include">
        </childnode>
        <childnode refid="52596" relation="include">
        </childnode>
        <childnode refid="52488" relation="include">
        </childnode>
      </node>
      <node id="52437">
        <label>/home/dev/ds-160209/src/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52500" relation="include">
        </childnode>
        <childnode refid="52514" relation="include">
        </childnode>
        <childnode refid="52517" relation="include">
        </childnode>
        <childnode refid="52515" relation="include">
        </childnode>
        <childnode refid="52518" relation="include">
        </childnode>
        <childnode refid="52441" relation="include">
        </childnode>
        <childnode refid="52521" relation="include">
        </childnode>
        <childnode refid="52522" relation="include">
        </childnode>
        <childnode refid="52509" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52520" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52454" relation="include">
        </childnode>
        <childnode refid="52489" relation="include">
        </childnode>
        <childnode refid="52490" relation="include">
        </childnode>
        <childnode refid="52523" relation="include">
        </childnode>
        <childnode refid="52516" relation="include">
        </childnode>
        <childnode refid="52491" relation="include">
        </childnode>
        <childnode refid="52485" relation="include">
        </childnode>
        <childnode refid="52492" relation="include">
        </childnode>
        <childnode refid="52494" relation="include">
        </childnode>
        <childnode refid="52527" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
        <childnode refid="52448" relation="include">
        </childnode>
        <childnode refid="52528" relation="include">
        </childnode>
        <childnode refid="52511" relation="include">
        </childnode>
        <childnode refid="52473" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52460" relation="include">
        </childnode>
        <childnode refid="52529" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52463" relation="include">
        </childnode>
        <childnode refid="52530" relation="include">
        </childnode>
        <childnode refid="52497" relation="include">
        </childnode>
        <childnode refid="52498" relation="include">
        </childnode>
        <childnode refid="52512" relation="include">
        </childnode>
      </node>
      <node id="52461">
        <label>/home/dev/ds-160209/src/sandstorm-relay.cpp</label>
        <link refid="sandstorm-relay_8cpp"/>
      </node>
      <node id="52589">
        <label>/home/dev/ds-160209/src/noui.cpp</label>
        <link refid="noui_8cpp"/>
      </node>
      <node id="52518">
        <label>/home/dev/ds-160209/src/stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="52435" relation="include">
        </childnode>
        <childnode refid="52440" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52446" relation="include">
        </childnode>
        <childnode refid="52516" relation="include">
        </childnode>
        <childnode refid="52457" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52460" relation="include">
        </childnode>
        <childnode refid="52519" relation="include">
        </childnode>
        <childnode refid="52463" relation="include">
        </childnode>
        <childnode refid="52450" relation="include">
        </childnode>
        <childnode refid="52451" relation="include">
        </childnode>
        <childnode refid="52464" relation="include">
        </childnode>
        <childnode refid="52452" relation="include">
        </childnode>
      </node>
      <node id="52596">
        <label>/home/dev/ds-160209/src/qt/transactionfilterproxy.cpp</label>
        <link refid="transactionfilterproxy_8cpp"/>
      </node>
      <node id="52569">
        <label>/home/dev/ds-160209/src/test/sigopcount_tests.cpp</label>
        <link refid="sigopcount__tests_8cpp"/>
      </node>
      <node id="52603">
        <label>/home/dev/ds-160209/src/qt/sendcoinsdialog.h</label>
        <link refid="sendcoinsdialog_8h"/>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52483" relation="include">
        </childnode>
      </node>
      <node id="52607">
        <label>/home/dev/ds-160209/src/pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="52608" relation="include">
        </childnode>
        <childnode refid="52560" relation="include">
        </childnode>
        <childnode refid="52559" relation="include">
        </childnode>
        <childnode refid="52551" relation="include">
        </childnode>
        <childnode refid="52531" relation="include">
        </childnode>
        <childnode refid="52508" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52576" relation="include">
        </childnode>
        <childnode refid="52609" relation="include">
        </childnode>
      </node>
      <node id="52510">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
      </node>
      <node id="52480">
        <label>/home/dev/ds-160209/src/qt/askpassphrasedialog.cpp</label>
        <link refid="askpassphrasedialog_8cpp"/>
      </node>
      <node id="52549">
        <label>/home/dev/ds-160209/src/bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="52550" relation="include">
        </childnode>
        <childnode refid="52559" relation="include">
        </childnode>
        <childnode refid="52441" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52570" relation="include">
        </childnode>
      </node>
      <node id="52436">
        <label>/home/dev/ds-160209/src/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="52437" relation="include">
        </childnode>
        <childnode refid="52517" relation="include">
        </childnode>
        <childnode refid="52518" relation="include">
        </childnode>
        <childnode refid="52441" relation="include">
        </childnode>
        <childnode refid="52531" relation="include">
        </childnode>
        <childnode refid="52532" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52520" relation="include">
        </childnode>
        <childnode refid="52465" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52454" relation="include">
        </childnode>
        <childnode refid="52523" relation="include">
        </childnode>
        <childnode refid="52526" relation="include">
        </childnode>
        <childnode refid="52448" relation="include">
        </childnode>
        <childnode refid="52528" relation="include">
        </childnode>
        <childnode refid="52511" relation="include">
        </childnode>
        <childnode refid="52495" relation="include">
        </childnode>
        <childnode refid="52538" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52539" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52585">
        <label>/home/dev/ds-160209/src/test/hmac_tests.cpp</label>
        <link refid="hmac__tests_8cpp"/>
      </node>
      <node id="52615">
        <label>/home/dev/ds-160209/src/test/serialize_tests.cpp</label>
        <link refid="serialize__tests_8cpp"/>
      </node>
      <node id="52459">
        <label>/home/dev/ds-160209/src/rpcstormnode-budget.cpp</label>
        <link refid="rpcstormnode-budget_8cpp"/>
      </node>
      <node id="52574">
        <label>/home/dev/ds-160209/src/leveldbwrapper.cpp</label>
        <link refid="leveldbwrapper_8cpp"/>
      </node>
      <node id="52501">
        <label>/home/dev/ds-160209/src/compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="52502" relation="include">
        </childnode>
        <childnode refid="52508" relation="include">
        </childnode>
      </node>
      <node id="52599">
        <label>/home/dev/ds-160209/src/qt/darksilkunits.h</label>
        <link refid="darksilkunits_8h"/>
        <childnode refid="52455" relation="include">
        </childnode>
        <childnode refid="52600" relation="include">
        </childnode>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52568" relation="include">
        </childnode>
        <childnode refid="52481" relation="include">
        </childnode>
        <childnode refid="52469" relation="include">
        </childnode>
        <childnode refid="52545" relation="include">
        </childnode>
        <childnode refid="52493" relation="include">
        </childnode>
        <childnode refid="52456" relation="include">
        </childnode>
        <childnode refid="52601" relation="include">
        </childnode>
        <childnode refid="52482" relation="include">
        </childnode>
        <childnode refid="52483" relation="include">
        </childnode>
        <childnode refid="52484" relation="include">
        </childnode>
        <childnode refid="52494" relation="include">
        </childnode>
        <childnode refid="52487" relation="include">
        </childnode>
        <childnode refid="52488" relation="include">
        </childnode>
      </node>
      <node id="52435">
        <label>/home/dev/ds-160209/src/activestormnode.cpp</label>
        <link refid="activestormnode_8cpp"/>
      </node>
      <node id="52499">
        <label>/home/dev/ds-160209/src/walletdb.cpp</label>
        <link refid="walletdb_8cpp"/>
      </node>
      <node id="52577">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.h</label>
        <link refid="stormnodemanager_8h"/>
        <childnode refid="52477" relation="include">
        </childnode>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52457" relation="include">
        </childnode>
      </node>
      <node id="52442">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="52463">
        <label>/home/dev/ds-160209/src/stormnode-budget.cpp</label>
        <link refid="stormnode-budget_8cpp"/>
      </node>
      <node id="52507">
        <label>/home/dev/ds-160209/src/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="52521">
        <label>/home/dev/ds-160209/src/txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="52442" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52510" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52446" relation="include">
        </childnode>
        <childnode refid="52494" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
        <childnode refid="52511" relation="include">
        </childnode>
        <childnode refid="52474" relation="include">
        </childnode>
        <childnode refid="52512" relation="include">
        </childnode>
        <childnode refid="52513" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52580">
        <label>/home/dev/ds-160209/src/rpcprotocol.cpp</label>
        <link refid="rpcprotocol_8cpp"/>
      </node>
      <node id="52608">
        <label>/home/dev/ds-160209/src/key.h</label>
        <link refid="key_8h"/>
        <childnode refid="52439" relation="include">
        </childnode>
        <childnode refid="52560" relation="include">
        </childnode>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52514" relation="include">
        </childnode>
        <childnode refid="52517" relation="include">
        </childnode>
        <childnode refid="52551" relation="include">
        </childnode>
        <childnode refid="52518" relation="include">
        </childnode>
        <childnode refid="52441" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52520" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52576" relation="include">
        </childnode>
        <childnode refid="52477" relation="include">
        </childnode>
        <childnode refid="52528" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52557" relation="include">
        </childnode>
        <childnode refid="52569" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52477">
        <label>/home/dev/ds-160209/src/qt/addeditstormnode.cpp</label>
        <link refid="addeditstormnode_8cpp"/>
      </node>
      <node id="52444">
        <label>/home/dev/ds-160209/src/instantx.cpp</label>
        <link refid="instantx_8cpp"/>
      </node>
      <node id="52443">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="52600">
        <label>/home/dev/ds-160209/src/qt/darksilkamountfield.cpp</label>
        <link refid="darksilkamountfield_8cpp"/>
      </node>
      <node id="52611">
        <label>/home/dev/ds-160209/src/db.h</label>
        <link refid="db_8h"/>
        <childnode refid="52561" relation="include">
        </childnode>
        <childnode refid="52541" relation="include">
        </childnode>
        <childnode refid="52465" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52454" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
        <childnode refid="52554" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52460" relation="include">
        </childnode>
        <childnode refid="52474" relation="include">
        </childnode>
      </node>
      <node id="52523">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.h</label>
        <link refid="peertablemodel_8h"/>
        <childnode refid="52516" relation="include">
        </childnode>
        <childnode refid="52524" relation="include">
        </childnode>
        <childnode refid="52526" relation="include">
        </childnode>
      </node>
      <node id="52616">
        <label>/home/dev/ds-160209/src/utilstrencodings.h</label>
        <link refid="utilstrencodings_8h"/>
        <childnode refid="52617" relation="include">
        </childnode>
        <childnode refid="52618" relation="include">
        </childnode>
      </node>
      <node id="52612">
        <label>/home/dev/ds-160209/src/streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="52611" relation="include">
        </childnode>
        <childnode refid="52573" relation="include">
        </childnode>
        <childnode refid="52436" relation="include">
        </childnode>
        <childnode refid="52437" relation="include">
        </childnode>
        <childnode refid="52540" relation="include">
        </childnode>
        <childnode refid="52521" relation="include">
        </childnode>
      </node>
      <node id="52548">
        <label>/home/dev/ds-160209/src/util.cpp</label>
        <link refid="util_8cpp"/>
      </node>
      <node id="52470">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="52441">
        <label>/home/dev/ds-160209/src/spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="52435" relation="include">
        </childnode>
        <childnode refid="52442" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52446" relation="include">
        </childnode>
        <childnode refid="52447" relation="include">
        </childnode>
        <childnode refid="52448" relation="include">
        </childnode>
        <childnode refid="52449" relation="include">
        </childnode>
        <childnode refid="52450" relation="include">
        </childnode>
        <childnode refid="52451" relation="include">
        </childnode>
        <childnode refid="52452" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52593">
        <label>/home/dev/ds-160209/src/rpcserver.h</label>
        <link refid="rpcserver_8h"/>
        <childnode refid="52594" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52490" relation="include">
        </childnode>
        <childnode refid="52525" relation="include">
        </childnode>
        <childnode refid="52457" relation="include">
        </childnode>
        <childnode refid="52527" relation="include">
        </childnode>
        <childnode refid="52553" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
        <childnode refid="52448" relation="include">
        </childnode>
        <childnode refid="52528" relation="include">
        </childnode>
        <childnode refid="52511" relation="include">
        </childnode>
        <childnode refid="52554" relation="include">
        </childnode>
        <childnode refid="52473" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52460" relation="include">
        </childnode>
        <childnode refid="52495" relation="include">
        </childnode>
      </node>
      <node id="52583">
        <label>/home/dev/ds-160209/src/test/Checkpoints_tests.cpp</label>
        <link refid="_checkpoints__tests_8cpp"/>
      </node>
      <node id="52471">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="52581">
        <label>/home/dev/ds-160209/src/sync.cpp</label>
        <link refid="sync_8cpp"/>
      </node>
      <node id="52472">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="52557">
        <label>/home/dev/ds-160209/src/test/key_tests.cpp</label>
        <link refid="key__tests_8cpp"/>
      </node>
      <node id="52475">
        <label>/home/dev/ds-160209/src/miner.h</label>
        <link refid="miner_8h"/>
        <childnode refid="52446" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
      </node>
      <node id="52474">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="52526">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.cpp</label>
        <link refid="peertablemodel_8cpp"/>
      </node>
      <node id="52491">
        <label>/home/dev/ds-160209/src/qt/statisticspage.h</label>
        <link refid="statisticspage_8h"/>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52492" relation="include">
        </childnode>
      </node>
      <node id="52584">
        <label>/home/dev/ds-160209/src/test/getarg_tests.cpp</label>
        <link refid="getarg__tests_8cpp"/>
      </node>
      <node id="52618">
        <label>/home/dev/ds-160209/src/utilstrencodings.cpp</label>
        <link refid="utilstrencodings_8cpp"/>
      </node>
      <node id="52556">
        <label>/home/dev/ds-160209/src/test/base58_tests.cpp</label>
        <link refid="base58__tests_8cpp"/>
      </node>
      <node id="52568">
        <label>/home/dev/ds-160209/src/qt/darksilkunits.cpp</label>
        <link refid="darksilkunits_8cpp"/>
      </node>
      <node id="52617">
        <label>/home/dev/ds-160209/src/uint256.cpp</label>
        <link refid="uint256_8cpp"/>
      </node>
      <node id="52592">
        <label>/home/dev/ds-160209/src/amount.cpp</label>
        <link refid="amount_8cpp"/>
      </node>
      <node id="52500">
        <label>/home/dev/ds-160209/src/txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="52501" relation="include">
        </childnode>
        <childnode refid="52437" relation="include">
        </childnode>
        <childnode refid="52509" relation="include">
        </childnode>
        <childnode refid="52506" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52510" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52446" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
        <childnode refid="52511" relation="include">
        </childnode>
        <childnode refid="52474" relation="include">
        </childnode>
        <childnode refid="52512" relation="include">
        </childnode>
        <childnode refid="52513" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52543">
        <label>/home/dev/ds-160209/src/protocol.cpp</label>
        <link refid="protocol_8cpp"/>
      </node>
      <node id="52487">
        <label>/home/dev/ds-160209/src/qt/transactiontablemodel.cpp</label>
        <link refid="transactiontablemodel_8cpp"/>
      </node>
      <node id="52550">
        <label>/home/dev/ds-160209/src/chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="52542" relation="include">
        </childnode>
        <childnode refid="52534" relation="include">
        </childnode>
        <childnode refid="52551" relation="include">
        </childnode>
        <childnode refid="52531" relation="include">
        </childnode>
        <childnode refid="52522" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52445" relation="include">
        </childnode>
        <childnode refid="52454" relation="include">
        </childnode>
        <childnode refid="52536" relation="include">
        </childnode>
        <childnode refid="52516" relation="include">
        </childnode>
        <childnode refid="52558" relation="include">
        </childnode>
        <childnode refid="52476" relation="include">
        </childnode>
        <childnode refid="52512" relation="include">
        </childnode>
        <childnode refid="52548" relation="include">
        </childnode>
        <childnode refid="52453" relation="include">
        </childnode>
      </node>
      <node id="52586">
        <label>/home/dev/ds-160209/src/test/mruset_tests.cpp</label>
        <link refid="mruset__tests_8cpp"/>
      </node>
      <node id="52445">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="52448">
        <label>/home/dev/ds-160209/src/rpcmisc.cpp</label>
        <link refid="rpcmisc_8cpp"/>
      </node>
      <node id="52483">
        <label>/home/dev/ds-160209/src/qt/sendcoinsdialog.cpp</label>
        <link refid="sendcoinsdialog_8cpp"/>
      </node>
      <node id="52439">
        <label>/home/dev/ds-160209/src/activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="52435" relation="include">
        </childnode>
        <childnode refid="52440" relation="include">
        </childnode>
        <childnode refid="52443" relation="include">
        </childnode>
        <childnode refid="52444" relation="include">
        </childnode>
        <childnode refid="52457" relation="include">
        </childnode>
        <childnode refid="52459" relation="include">
        </childnode>
        <childnode refid="52460" relation="include">
        </childnode>
        <childnode refid="52451" relation="include">
        </childnode>
        <childnode refid="52452" relation="include">
        </childnode>
      </node>
      <node id="52563">
        <label>/home/dev/ds-160209/src/keystore.cpp</label>
        <link refid="keystore_8cpp"/>
      </node>
      <node id="52478">
        <label>/home/dev/ds-160209/src/qt/walletmodel.h</label>
        <link refid="walletmodel_8h"/>
        <childnode refid="52479" relation="include">
        </childnode>
        <childnode refid="52480" relation="include">
        </childnode>
        <childnode refid="52455" relation="include">
        </childnode>
        <childnode refid="52467" relation="include">
        </childnode>
        <childnode refid="52468" relation="include">
        </childnode>
        <childnode refid="52481" relation="include">
        </childnode>
        <childnode refid="52469" relation="include">
        </childnode>
        <childnode refid="52456" relation="include">
        </childnode>
        <childnode refid="52482" relation="include">
        </childnode>
        <childnode refid="52483" relation="include">
        </childnode>
        <childnode refid="52484" relation="include">
        </childnode>
        <childnode refid="52471" relation="include">
        </childnode>
        <childnode refid="52472" relation="include">
        </childnode>
        <childnode refid="52485" relation="include">
        </childnode>
        <childnode refid="52457" relation="include">
        </childnode>
        <childnode refid="52486" relation="include">
        </childnode>
        <childnode refid="52487" relation="include">
        </childnode>
        <childnode refid="52488" relation="include">
        </childnode>
        <childnode refid="52447" relation="include">
        </childnode>
      </node>
      <node id="52576">
        <label>/home/dev/ds-160209/src/key.cpp</label>
        <link refid="key_8cpp"/>
      </node>
      <node id="52462">
        <label>/home/dev/ds-160209/src/sandstorm.cpp</label>
        <link refid="sandstorm_8cpp"/>
      </node>
      <node id="52595">
        <label>/home/dev/ds-160209/src/qt/transactionrecord.h</label>
        <link refid="transactionrecord_8h"/>
        <childnode refid="52490" relation="include">
        </childnode>
        <childnode refid="52494" relation="include">
        </childnode>
        <childnode refid="52596" relation="include">
        </childnode>
        <childnode refid="52458" relation="include">
        </childnode>
        <childnode refid="52487" relation="include">
        </childnode>
        <childnode refid="52488" relation="include">
        </childnode>
      </node>
      <node id="52489">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.h</label>
        <link refid="blockbrowser_8h"/>
        <childnode refid="52490" relation="include">
        </childnode>
        <childnode refid="52468" relation="include">
        </childnode>
      </node>
      <node id="52456">
        <label>/home/dev/ds-160209/src/qt/overviewpage.cpp</label>
        <link refid="overviewpage_8cpp"/>
      </node>
      <node id="52509">
        <label>/home/dev/ds-160209/src/checkpoints.cpp</label>
        <link refid="checkpoints_8cpp"/>
      </node>
      <node id="52464">
        <label>/home/dev/ds-160209/src/stormnode.cpp</label>
        <link refid="stormnode_8cpp"/>
      </node>
      <node id="52533">
        <label>/home/dev/ds-160209/src/primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="52438" relation="include">
        </childnode>
        <childnode refid="52534" relation="include">
        </childnode>
        <childnode refid="52446" relation="include">
        </childnode>
        <childnode refid="52536" relation="include">
        </childnode>
      </node>
      <node id="52525">
        <label>/home/dev/ds-160209/src/qt/debugconsole.cpp</label>
        <link refid="debugconsole_8cpp"/>
      </node>
      <node id="52537">
        <label>/home/dev/ds-160209/src/crypter.cpp</label>
        <link refid="crypter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_flat_data" prot="public">CFlatData</innerclass>
    <innerclass refid="class_c_var_int" prot="public">CVarInt</innerclass>
    <innerclass refid="class_limited_string" prot="public">LimitedString</innerclass>
    <innerclass refid="class_c_ser_action_get_serialize_size" prot="public">CSerActionGetSerializeSize</innerclass>
    <innerclass refid="struct_c_ser_action_serialize" prot="public">CSerActionSerialize</innerclass>
    <innerclass refid="struct_c_ser_action_unserialize" prot="public">CSerActionUnserialize</innerclass>
    <innerclass refid="structser__streamplaceholder" prot="public">ser_streamplaceholder</innerclass>
    <innerclass refid="class_c_size_computer" prot="public">CSizeComputer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" prot="public" static="no">
        <name>READWRITE</name>
        <param><defname>obj</defname></param>
        <initializer>(::<ref refid="serialize_8h_1a3f746e0ed1975fa9447ef30050218aa9" kindref="member">SerReadWrite</ref>(s, (obj), nType, nVersion, ser_action))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="101" column="9" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="101" bodyend="-1"/>
        <referencedby refid="class_c_addr_info_1ae80fdec7d3b48278033ea2280f66e68b" compoundref="addrman_8h" startline="48" endline="54">CAddrInfo::SerializationOp</referencedby>
        <referencedby refid="class_c_unsigned_alert_1acdf81abb731f9fc8d2c04618f2f4d79d" compoundref="alert_8h" startline="53" endline="69">CUnsignedAlert::SerializationOp</referencedby>
        <referencedby refid="class_c_alert_1a51d73ab316bb42e65b87ec14ac536b14" compoundref="alert_8h" startline="92" endline="95">CAlert::SerializationOp</referencedby>
        <referencedby refid="class_c_fee_rate_1aface850a2c1af316cedf87d24f04fda3" compoundref="amount_8h" startline="48" endline="50">CFeeRate::SerializationOp</referencedby>
        <referencedby refid="struct_c_disk_block_pos_1a821bb4eebc99ae39c20133d80244325f" compoundref="chain_8h" startline="36" endline="39">CDiskBlockPos::SerializationOp</referencedby>
        <referencedby refid="class_c_disk_block_index_1a2ef7b51f2777fcc1b9625a0ee000f9b5" compoundref="chain_8h" startline="356" endline="389">CDiskBlockIndex::SerializationOp</referencedby>
        <referencedby refid="class_c_block_locator_1a29de31101d53c3a40d140695c4857c24" compoundref="chain_8h" startline="454" endline="458">CBlockLocator::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_out_compressor_coin_1af04e3ec57767b22e69c9596865575666" compoundref="coins_8h" startline="34" endline="45">CTxOutCompressorCoin::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_out_compressor_1aad933ec09f7d6a764bd49da399f9083b" compoundref="compressor_8h" startline="108" endline="119">CTxOutCompressor::SerializationOp</referencedby>
        <referencedby refid="class_c_master_key_1a32456e3080cf3a9818850f3c458594ea" compoundref="crypter_8h" startline="47" endline="53">CMasterKey::SerializationOp</referencedby>
        <referencedby refid="class_c_consensus_vote_1a103f72505be81d78565e52331b6c563b" compoundref="instantx_8h" startline="73" endline="78">CConsensusVote::SerializationOp</referencedby>
        <referencedby refid="class_c_block_header_1ae564e96da45702d79c83e3ad0ce19873" compoundref="primitives_2block_8h" startline="63" endline="71">CBlockHeader::SerializationOp</referencedby>
        <referencedby refid="class_c_block_1aa83bbf64300154e8919249f7778f4c17" compoundref="primitives_2block_8h" startline="145" endline="158">CBlock::SerializationOp</referencedby>
        <referencedby refid="class_c_disk_tx_pos_1a1a68f1de894f0791a7ad64e3e6ea6fd6" compoundref="main_8h" startline="247" endline="249">CDiskTxPos::SerializationOp</referencedby>
        <referencedby refid="class_c_transaction_po_s_1a869ab87a63c21805ddff3cdec279817f" compoundref="main_8h" startline="298" endline="301">CTransactionPoS::SerializationOp</referencedby>
        <referencedby refid="class_c_merkle_tx_1afefd3a26c9505f1fa81587c19c22f09c" compoundref="main_8h" startline="413" endline="421">CMerkleTx::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_index_1a8d7003336ce67c83268dac7dcae14199" compoundref="main_8h" startline="463" endline="468">CTxIndex::SerializationOp</referencedby>
        <referencedby refid="class_c_block_file_info_1a5d48a4fe1f8b3903131d121fc14a5a6f" compoundref="main_8h" startline="594" endline="602">CBlockFileInfo::SerializationOp</referencedby>
        <referencedby refid="class_c_net_addr_1a7c914d155a533f64f8aa0d2f9bfff8a7" compoundref="netbase_8h" startline="102" endline="110">CNetAddr::SerializationOp</referencedby>
        <referencedby refid="class_c_service_1a0673ebec7bdc8558ce3fe1d63ea4d2e1" compoundref="netbase_8h" startline="147" endline="160">CService::SerializationOp</referencedby>
        <referencedby refid="class_c_out_point_1a171ccb3afa9bf9443a91e5ba3fdb911b" compoundref="transaction_8h" startline="39" endline="41">COutPoint::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_in_1a3d23c5264c6d93ecf3cf65dd13c55db3" compoundref="transaction_8h" startline="124" endline="128">CTxIn::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_out_1a88e5e2f069325d6bb1936ee75935f121" compoundref="transaction_8h" startline="187" endline="190">CTxOut::SerializationOp</referencedby>
        <referencedby refid="class_c_transaction_1aa79659fab1e973a058494393209b0a59" compoundref="transaction_8h" startline="285" endline="292">CTransaction::SerializationOp</referencedby>
        <referencedby refid="struct_c_mutable_transaction_1a31e7420656b9a31ca6ea44095ce726d9" compoundref="transaction_8h" startline="375" endline="382">CMutableTransaction::SerializationOp</referencedby>
        <referencedby refid="class_c_message_header_1a3881923a93297c3a7a8e413ab3730408" compoundref="protocol_8h" startline="40" endline="45">CMessageHeader::SerializationOp</referencedby>
        <referencedby refid="class_c_address_1aec10c7075404eefbcf6f7a4c5671be02" compoundref="protocol_8h" startline="85" endline="97">CAddress::SerializationOp</referencedby>
        <referencedby refid="class_c_inv_1a7f56c1696e6c5c7ca36c1637f94dd1a0" compoundref="protocol_8h" startline="123" endline="126">CInv::SerializationOp</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1a8fba7af50034e76090056c3bed8b7378" compoundref="sandstorm-relay_8h" startline="27" endline="35">CSandStormRelay::SerializationOp</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1a9179d7339eb373473bc79c2ac1eb5e9e" compoundref="sandstorm_8h" startline="171" endline="177">CSandstormQueue::SerializationOp</referencedby>
        <referencedby refid="class_sec_msg_address_1a6bdc333f6fa806bd842233b50a314329" compoundref="smessage_8h" startline="208" endline="212">SecMsgAddress::SerializationOp</referencedby>
        <referencedby refid="class_sec_msg_stored_1a04684c852fb85f4bb0bfa3248a057e7f" compoundref="smessage_8h" startline="281" endline="288">SecMsgStored::SerializationOp</referencedby>
        <referencedby refid="class_c_spork_message_1a9c8cdb184cb0f7ddcf490eb9efe147ec" compoundref="spork_8h" startline="87" endline="93">CSporkMessage::SerializationOp</referencedby>
        <referencedby refid="class_c_stealth_address_1aa69f3712f4f7fdd8a4644223b5b7690a" compoundref="stealth_8h" startline="91" endline="99">CStealthAddress::SerializationOp</referencedby>
        <referencedby refid="class_c_budget_manager_1a9749cf834f0877a49d3c0db0eb3b9a3c" compoundref="stormnode-budget_8h" startline="165" endline="175">CBudgetManager::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_budget_payment_1a31bd09c40afac565c4cc2dfd48a5b564" compoundref="stormnode-budget_8h" startline="194" endline="198">CTxBudgetPayment::SerializationOp</referencedby>
        <referencedby refid="class_c_finalized_budget_1a1bbf758b27a7fb175e2889290f5ef78f" compoundref="stormnode-budget_8h" startline="284" endline="292">CFinalizedBudget::SerializationOp</referencedby>
        <referencedby refid="class_c_finalized_budget_broadcast_1a2c9bac4bb653dbae4c3861fd12380dcd" compoundref="stormnode-budget_8h" startline="332" endline="338">CFinalizedBudgetBroadcast::SerializationOp</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1a751d723816089e73debb2cdafea5699a" compoundref="stormnode-budget_8h" startline="373" endline="378">CFinalizedBudgetVote::SerializationOp</referencedby>
        <referencedby refid="class_c_budget_proposal_1a583bd01ff4267cf5491033ab57a09094" compoundref="stormnode-budget_8h" startline="469" endline="483">CBudgetProposal::SerializationOp</referencedby>
        <referencedby refid="class_c_budget_proposal_broadcast_1ab0c507f96fb17fd51eb874f7532ae887" compoundref="stormnode-budget_8h" startline="524" endline="533">CBudgetProposalBroadcast::SerializationOp</referencedby>
        <referencedby refid="class_c_budget_vote_1a9899da97644defecdd4d64984cdbcd97" compoundref="stormnode-budget_8h" startline="576" endline="582">CBudgetVote::SerializationOp</referencedby>
        <referencedby refid="class_c_stormnode_payee_1a780614332a751cd2be40e81992029707" compoundref="stormnode-payments_8h" startline="79" endline="82">CStormnodePayee::SerializationOp</referencedby>
        <referencedby refid="class_c_stormnode_block_payees_1a70e1bc2a9a4dee9c1d00706857009004" compoundref="stormnode-payments_8h" startline="147" endline="150">CStormnodeBlockPayees::SerializationOp</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1a049f6ab099e6521be3a670523d7ac6fd" compoundref="stormnode-payments_8h" startline="196" endline="201">CStormnodePaymentWinner::SerializationOp</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a00b73c24ef476465db57c93a880343d6" compoundref="stormnode-payments_8h" startline="277" endline="280">CStormnodePayments::SerializationOp</referencedby>
        <referencedby refid="class_c_stormnode_ping_1ab41f768e659b72da337e2f28d226c286" compoundref="stormnode_8h" startline="54" endline="59">CStormnodePing::SerializationOp</referencedby>
        <referencedby refid="class_c_stormnode_1a7942368f526da3cfd40e77b8dd7cffd1" compoundref="stormnode_8h" startline="188" endline="207">CStormnode::SerializationOp</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a5a56ebaf1e2e97ee84186e55440202b7" compoundref="stormnode_8h" startline="301" endline="311">CStormnodeBroadcast::SerializationOp</referencedby>
        <referencedby refid="class_c_stormnode_man_1a2eb7be1ad46598e33b6c60248bc7b7e1" compoundref="stormnodeman_8h" startline="79" endline="89">CStormnodeMan::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_out_compressor_undo_1a8954471df1084f43cb8c379cacd8bd39" compoundref="undo_8h" startline="32" endline="43">CTxOutCompressorUndo::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_undo_1acded3ea0adf0309c160ea756a2361bf2" compoundref="undo_8h" startline="93" endline="95">CTxUndo::SerializationOp</referencedby>
        <referencedby refid="class_c_key_pool_1a2589572f0eb90da9237684a16484c03d" compoundref="wallet_8h" startline="89" endline="94">CKeyPool::SerializationOp</referencedby>
        <referencedby refid="class_c_wallet_tx_1a94e65d0105f2a75a627e374b0bbefe06" compoundref="wallet_8h" startline="636" endline="692">CWalletTx::SerializationOp</referencedby>
        <referencedby refid="class_c_wallet_key_1aa91831d60fc789bddcd7ea7339fef316" compoundref="wallet_8h" startline="1130" endline="1137">CWalletKey::SerializationOp</referencedby>
        <referencedby refid="class_c_account_1a645167419dead15544700e6ab2280a10" compoundref="wallet_8h" startline="1166" endline="1170">CAccount::SerializationOp</referencedby>
        <referencedby refid="class_c_accounting_entry_1ab30195f9f97f8f7ceb17360c24a39676" compoundref="wallet_8h" startline="1208" endline="1249">CAccountingEntry::SerializationOp</referencedby>
        <referencedby refid="class_c_key_metadata_1aeba08a154d4b3f6ddac96c25b852d342" compoundref="walletdb_8h" startline="61" endline="65">CKeyMetadata::SerializationOp</referencedby>
        <referencedby refid="class_c_stealth_key_metadata_1a4aa4f82e29e709287100972b4790c6c2" compoundref="walletdb_8h" startline="92" endline="95">CStealthKeyMetadata::SerializationOp</referencedby>
      </memberdef>
      <memberdef kind="define" id="serialize_8h_1ae3f1f459edee39316fb42da787e2d266" prot="public" static="no">
        <name>ADD_SERIALIZE_METHODS</name>
        <initializer>size_t <ref refid="serialize_8h_1aac816a6c7028a0c84c501ff199289e02" kindref="member">GetSerializeSize</ref>(int nType, int nVersion) const {                         \
        <ref refid="class_c_size_computer" kindref="compound">CSizeComputer</ref> s(nType, nVersion);                                            \
        <ref refid="serialize_8h_1ae634e39c103baab132dad9beef83ceb5" kindref="member">NCONST_PTR</ref>(this)-&gt;SerializationOp(s, <ref refid="struct_c_ser_action_serialize" kindref="compound">CSerActionSerialize</ref>(), nType, nVersion);\
        return s.size();                                                             \
    }                                                                                \
    template&lt;typename Stream&gt;                                                        \
    void <ref refid="serialize_8h_1a86951da9392b208f3e0c322d6569af14" kindref="member">Serialize</ref>(Stream&amp; s, int nType, int nVersion) const {                       \
        <ref refid="serialize_8h_1ae634e39c103baab132dad9beef83ceb5" kindref="member">NCONST_PTR</ref>(this)-&gt;SerializationOp(s, <ref refid="struct_c_ser_action_serialize" kindref="compound">CSerActionSerialize</ref>(), nType, nVersion);\
    }                                                                                \
    template&lt;typename Stream&gt;                                                        \
    void <ref refid="serialize_8h_1acd56ffe7d06efdae43157de0da994d4d" kindref="member">Unserialize</ref>(Stream&amp; s, int nType, int nVersion) {                           \
        SerializationOp(s, <ref refid="struct_c_ser_action_unserialize" kindref="compound">CSerActionUnserialize</ref>(), nType, nVersion);                \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement three methods for serializable objects. These are actually wrappers over &quot;SerializationOp&quot; template, which implements the body of each class&apos; serialization code. Adding &quot;ADD_SERIALIZE_METHODS&quot; in the body of the class causes these wrappers to be added as members. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="109" column="9" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" prot="public" static="no">
        <name>WRITEDATA</name>
        <param><defname>s</defname></param>
        <param><defname>obj</defname></param>
        <initializer>s.write((char*)&amp;(obj), sizeof(obj))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="127" column="9" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="127" bodyend="-1"/>
        <referencedby refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</referencedby>
        <referencedby refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" compoundref="serialize_8h" startline="192" endline="221">WriteCompactSize</referencedby>
        <referencedby refid="serialize_8h_1af2cf364ed9c068fd7092f0207a756c22" compoundref="serialize_8h" startline="298" endline="312">WriteVarInt</referencedby>
      </memberdef>
      <memberdef kind="define" id="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" prot="public" static="no">
        <name>READDATA</name>
        <param><defname>s</defname></param>
        <param><defname>obj</defname></param>
        <initializer>s.read((char*)&amp;(obj), sizeof(obj))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="128" column="9" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="128" bodyend="-1"/>
        <referencedby refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</referencedby>
        <referencedby refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" compoundref="serialize_8h" startline="224" endline="260">ReadCompactSize</referencedby>
        <referencedby refid="serialize_8h_1a6f8a5966f156fb3d7e4acc7121eea648" compoundref="serialize_8h" startline="315" endline="327">ReadVarInt</referencedby>
      </memberdef>
      <memberdef kind="define" id="serialize_8h_1a9393dd1b6a30ae7fe9cc42240241f741" prot="public" static="no">
        <name>FLATDATA</name>
        <param><defname>obj</defname></param>
        <initializer><ref refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" kindref="member">REF</ref>(<ref refid="class_c_flat_data" kindref="compound">CFlatData</ref>((char*)&amp;(obj), (char*)&amp;(obj) + sizeof(obj)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="329" column="9" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="329" bodyend="-1"/>
        <referencedby refid="class_c_block_1a606df2cab7dc67e5dd11b157d288cf2b" compoundref="chain_8cpp" startline="830" endline="854">CBlock::WriteToDisk</referencedby>
        <referencedby refid="class_c_disk_tx_pos_1a1a68f1de894f0791a7ad64e3e6ea6fd6" compoundref="main_8h" startline="247" endline="249">CDiskTxPos::SerializationOp</referencedby>
        <referencedby refid="class_c_addr_d_b_1aaec90dba59cd69a2f25bc5630a1dde39" compoundref="net_8cpp" startline="2022" endline="2058">CAddrDB::Write</referencedby>
        <referencedby refid="class_c_addr_d_b_1aed4b567fb7c2dd15b2856e7c769967b7" compoundref="net_8cpp" startline="2060" endline="2111">CAddrDB::Read</referencedby>
        <referencedby refid="class_c_net_addr_1a7c914d155a533f64f8aa0d2f9bfff8a7" compoundref="netbase_8h" startline="102" endline="110">CNetAddr::SerializationOp</referencedby>
        <referencedby refid="class_c_service_1a0673ebec7bdc8558ce3fe1d63ea4d2e1" compoundref="netbase_8h" startline="147" endline="160">CService::SerializationOp</referencedby>
        <referencedby refid="class_c_out_point_1a171ccb3afa9bf9443a91e5ba3fdb911b" compoundref="transaction_8h" startline="39" endline="41">COutPoint::SerializationOp</referencedby>
        <referencedby refid="class_c_message_header_1a3881923a93297c3a7a8e413ab3730408" compoundref="protocol_8h" startline="40" endline="45">CMessageHeader::SerializationOp</referencedby>
        <referencedby refid="class_c_budget_d_b_1a7c9bd15eefe04f87e822cc1bc0887b76" compoundref="stormnode-budget_8cpp" startline="210" endline="243">CBudgetDB::Write</referencedby>
        <referencedby refid="class_c_budget_d_b_1aecdde2af475070d9fafdcacf93f2e4f2" compoundref="stormnode-budget_8cpp" startline="245" endline="333">CBudgetDB::Read</referencedby>
        <referencedby refid="class_c_stormnode_payment_d_b_1a6dc05426079d7bcf41f2587899e422fd" compoundref="stormnode-payments_8cpp" startline="34" endline="64">CStormnodePaymentDB::Write</referencedby>
        <referencedby refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" compoundref="stormnode-payments_8cpp" startline="66" endline="154">CStormnodePaymentDB::Read</referencedby>
        <referencedby refid="class_c_stormnode_d_b_1af60b25c3f72317d363fd6584045c6f5f" compoundref="stormnodeman_8cpp" startline="57" endline="89">CStormnodeDB::Write</referencedby>
        <referencedby refid="class_c_stormnode_d_b_1a574f76256d8032a4c4e437d800d3795b" compoundref="stormnodeman_8cpp" startline="91" endline="176">CStormnodeDB::Read</referencedby>
      </memberdef>
      <memberdef kind="define" id="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" prot="public" static="no">
        <name>VARINT</name>
        <param><defname>obj</defname></param>
        <initializer><ref refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" kindref="member">REF</ref>(<ref refid="serialize_8h_1a5748d9d17982b234b10a4b9e6f8e9f53" kindref="member">WrapVarInt</ref>(<ref refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" kindref="member">REF</ref>(obj)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="330" column="9" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="330" bodyend="-1"/>
        <referencedby refid="struct_c_disk_block_pos_1a821bb4eebc99ae39c20133d80244325f" compoundref="chain_8h" startline="36" endline="39">CDiskBlockPos::SerializationOp</referencedby>
        <referencedby refid="class_c_coins_view_d_b_1a6bbe15962b0efd519e30dada872f01c5" compoundref="coins_8cpp" startline="302" endline="353">CCoinsViewDB::GetStats</referencedby>
        <referencedby refid="class_c_tx_out_compressor_coin_1af04e3ec57767b22e69c9596865575666" compoundref="coins_8h" startline="34" endline="45">CTxOutCompressorCoin::SerializationOp</referencedby>
        <referencedby refid="class_c_coins_1a74ddd9230570c084ea56feaf4b9d7e06" compoundref="coins_8h" startline="185" endline="208">CCoins::GetSerializeSize</referencedby>
        <referencedby refid="class_c_coins_1a0932a94966083092cbceabec1ef65d73" compoundref="coins_8h" startline="211" endline="237">CCoins::Serialize</referencedby>
        <referencedby refid="class_c_coins_1adaa98cb6d8da3a4d573cd799ddd11051" compoundref="coins_8h" startline="240" endline="271">CCoins::Unserialize</referencedby>
        <referencedby refid="class_c_script_compressor_1a3b3dd61547c3dc2f7ba9325f74b9ec5f" compoundref="compressor_8h" startline="57" endline="63">CScriptCompressor::GetSerializeSize</referencedby>
        <referencedby refid="class_c_script_compressor_1a9d8168293e0a6d0fd8c4aeb63a346525" compoundref="compressor_8h" startline="66" endline="75">CScriptCompressor::Serialize</referencedby>
        <referencedby refid="class_c_script_compressor_1a016fa6e3d2735d95fcf773271da073d5" compoundref="compressor_8h" startline="78" endline="90">CScriptCompressor::Unserialize</referencedby>
        <referencedby refid="class_c_tx_out_compressor_1aad933ec09f7d6a764bd49da399f9083b" compoundref="compressor_8h" startline="108" endline="119">CTxOutCompressor::SerializationOp</referencedby>
        <referencedby refid="class_c_block_file_info_1a5d48a4fe1f8b3903131d121fc14a5a6f" compoundref="main_8h" startline="594" endline="602">CBlockFileInfo::SerializationOp</referencedby>
        <referencedby refid="serialize__tests_8cpp_1a0528829bf2541df9b7c85e3a309ee435" compoundref="serialize__tests_8cpp" startline="12" endline="43">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="class_c_tx_out_compressor_undo_1a8954471df1084f43cb8c379cacd8bd39" compoundref="undo_8h" startline="32" endline="43">CTxOutCompressorUndo::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_in_undo_1a6f992d64f9d4ee6299cbd3305e4fd90f" compoundref="undo_8h" startline="57" endline="61">CTxInUndo::GetSerializeSize</referencedby>
        <referencedby refid="class_c_tx_in_undo_1a37cebff3e836226b36e51d91e7cc2739" compoundref="undo_8h" startline="64" endline="69">CTxInUndo::Serialize</referencedby>
        <referencedby refid="class_c_tx_in_undo_1a0a2b82f03edad7ad85a66e63e4552af9" compoundref="undo_8h" startline="72" endline="80">CTxInUndo::Unserialize</referencedby>
      </memberdef>
      <memberdef kind="define" id="serialize_8h_1a78e63691a056ce2368984400605e4f6e" prot="public" static="no">
        <name>LIMITED_STRING</name>
        <param><defname>obj</defname></param>
        <param><defname>n</defname></param>
        <initializer><ref refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" kindref="member">REF</ref>(<ref refid="class_limited_string" kindref="compound">LimitedString</ref>&lt; n &gt;(<ref refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" kindref="member">REF</ref>(obj)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="331" column="9" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="331" bodyend="-1"/>
        <referencedby refid="class_c_unsigned_alert_1acdf81abb731f9fc8d2c04618f2f4d79d" compoundref="alert_8h" startline="53" endline="69">CUnsignedAlert::SerializationOp</referencedby>
        <referencedby refid="class_c_finalized_budget_1a1bbf758b27a7fb175e2889290f5ef78f" compoundref="stormnode-budget_8h" startline="284" endline="292">CFinalizedBudget::SerializationOp</referencedby>
        <referencedby refid="class_c_finalized_budget_broadcast_1a2c9bac4bb653dbae4c3861fd12380dcd" compoundref="stormnode-budget_8h" startline="332" endline="338">CFinalizedBudgetBroadcast::SerializationOp</referencedby>
        <referencedby refid="class_c_budget_proposal_1a583bd01ff4267cf5491033ab57a09094" compoundref="stormnode-budget_8h" startline="469" endline="483">CBudgetProposal::SerializationOp</referencedby>
        <referencedby refid="class_c_budget_proposal_broadcast_1ab0c507f96fb17fd51eb874f7532ae887" compoundref="stormnode-budget_8h" startline="524" endline="533">CBudgetProposalBroadcast::SerializationOp</referencedby>
        <referencedby refid="class_c_wallet_key_1aa91831d60fc789bddcd7ea7339fef316" compoundref="wallet_8h" startline="1130" endline="1137">CWalletKey::SerializationOp</referencedby>
        <referencedby refid="class_c_accounting_entry_1ab30195f9f97f8f7ceb17360c24a39676" compoundref="wallet_8h" startline="1208" endline="1249">CAccountingEntry::SerializationOp</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="serialize_8h_1a6b7b47dd702d9e331586d485013fd1ea" prot="public" static="no">
        <name>@18</name>
        <enumvalue id="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" prot="public">
          <name>SER_NETWORK</name>
          <initializer>= (1 &lt;&lt; 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" prot="public">
          <name>SER_DISK</name>
          <initializer>= (1 &lt;&lt; 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" prot="public">
          <name>SER_GETHASH</name>
          <initializer>= (1 &lt;&lt; 2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa0d7b459667b662cab8c9a95be7bc72f0" prot="public">
          <name>SER_SKIPSIG</name>
          <initializer>= (1 &lt;&lt; 16)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa4f355599a80a433c2b6d27f236eb420a" prot="public">
          <name>SER_BLOCKHEADERONLY</name>
          <initializer>= (1 &lt;&lt; 17)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="87" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="86" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="serialize_8h_1a77935f92ff5ba1d71d692166f6ce0c1b" prot="public" static="no">
        <type>std::vector&lt; char, <ref refid="structzero__after__free__allocator" kindref="compound">zero_after_free_allocator</ref>&lt; char &gt; &gt;</type>
        <definition>typedef std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; CSerializeData</definition>
        <argsstring></argsstring>
        <name>CSerializeData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="836" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="836" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="serialize_8h_1a849636cca14fcbcfdd38f70254c0da58" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MAX_SIZE</definition>
        <argsstring></argsstring>
        <name>MAX_SIZE</name>
        <initializer>= 0x02000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="31" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; REF</definition>
        <argsstring>(const T &amp;val)</argsstring>
        <name>REF</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="36" bodyend="39"/>
        <referencedby refid="class_c_tx_out_compressor_coin_1af04e3ec57767b22e69c9596865575666" compoundref="coins_8h" startline="34" endline="45">CTxOutCompressorCoin::SerializationOp</referencedby>
        <referencedby refid="class_c_coins_1a74ddd9230570c084ea56feaf4b9d7e06" compoundref="coins_8h" startline="185" endline="208">CCoins::GetSerializeSize</referencedby>
        <referencedby refid="class_c_coins_1a0932a94966083092cbceabec1ef65d73" compoundref="coins_8h" startline="211" endline="237">CCoins::Serialize</referencedby>
        <referencedby refid="class_c_coins_1adaa98cb6d8da3a4d573cd799ddd11051" compoundref="coins_8h" startline="240" endline="271">CCoins::Unserialize</referencedby>
        <referencedby refid="class_c_script_compressor_1a016fa6e3d2735d95fcf773271da073d5" compoundref="compressor_8h" startline="78" endline="90">CScriptCompressor::Unserialize</referencedby>
        <referencedby refid="class_c_tx_out_compressor_1aad933ec09f7d6a764bd49da399f9083b" compoundref="compressor_8h" startline="108" endline="119">CTxOutCompressor::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_out_compressor_undo_1a8954471df1084f43cb8c379cacd8bd39" compoundref="undo_8h" startline="32" endline="43">CTxOutCompressorUndo::SerializationOp</referencedby>
        <referencedby refid="class_c_tx_in_undo_1a6f992d64f9d4ee6299cbd3305e4fd90f" compoundref="undo_8h" startline="57" endline="61">CTxInUndo::GetSerializeSize</referencedby>
        <referencedby refid="class_c_tx_in_undo_1a37cebff3e836226b36e51d91e7cc2739" compoundref="undo_8h" startline="64" endline="69">CTxInUndo::Serialize</referencedby>
        <referencedby refid="class_c_tx_in_undo_1a0a2b82f03edad7ad85a66e63e4552af9" compoundref="undo_8h" startline="72" endline="80">CTxInUndo::Unserialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ae634e39c103baab132dad9beef83ceb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* NCONST_PTR</definition>
        <argsstring>(const T *val)</argsstring>
        <name>NCONST_PTR</name>
        <param>
          <type>const T *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to acquire a non-const pointer &quot;this&quot; to generate bodies of const serialization operations from a template </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="46" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a19966d167c527d2be493ac9aba27c249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class TAl</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* begin_ptr</definition>
        <argsstring>(std::vector&lt; T, TAl &gt; &amp;v)</argsstring>
        <name>begin_ptr</name>
        <param>
          <type>std::vector&lt; T, TAl &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get begin pointer of vector (non-const version). <simplesect kind="note"><para>These functions avoid the undefined case of indexing into an empty vector, as well as that of indexing after the end of the vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="57" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="57" bodyend="60"/>
        <referencedby refid="class_c_e_c_key_1ab3cb52ca6bf3bdd55be9152a76da9112" compoundref="ecwrapper_8cpp" startline="181" endline="191">CECKey::GetPubKey</referencedby>
        <referencedby refid="script_8h_1a95e4207f5f6abd316a0678f3ed8ee2f2" compoundref="script_8cpp" startline="1393" endline="2090">EvalScript</referencedby>
        <referencedby refid="class_c_flat_data_1aa536a3fe59b6cde08cf7ed57ecebedfb" compoundref="serialize_8h" startline="342" endline="346">CFlatData::CFlatData</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ac542eee802a7ab8054a1c4cae6061296" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class TAl</type>
          </param>
        </templateparamlist>
        <type>const T *</type>
        <definition>const T* begin_ptr</definition>
        <argsstring>(const std::vector&lt; T, TAl &gt; &amp;v)</argsstring>
        <name>begin_ptr</name>
        <param>
          <type>const std::vector&lt; T, TAl &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get begin pointer of vector (const version) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="63" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a9a94418dd6160d4dfd04aa4ef07219f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class TAl</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* end_ptr</definition>
        <argsstring>(std::vector&lt; T, TAl &gt; &amp;v)</argsstring>
        <name>end_ptr</name>
        <param>
          <type>std::vector&lt; T, TAl &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get end pointer of vector (non-const version) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="69" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="69" bodyend="72"/>
        <referencedby refid="class_c_flat_data_1aa536a3fe59b6cde08cf7ed57ecebedfb" compoundref="serialize_8h" startline="342" endline="346">CFlatData::CFlatData</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a75886e8bb81b99c85327544f42425058" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class TAl</type>
          </param>
        </templateparamlist>
        <type>const T *</type>
        <definition>const T* end_ptr</definition>
        <argsstring>(const std::vector&lt; T, TAl &gt; &amp;v)</argsstring>
        <name>end_ptr</name>
        <param>
          <type>const std::vector&lt; T, TAl &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get end pointer of vector (const version) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="75" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a48239e478ae730373d1984fe304ca025" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(char a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="130" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="130" bodyend="130"/>
        <referencedby refid="class_c_big_num_1afea3e99a3610f44c90c1242a324fd002" compoundref="bignum_8h" startline="407" endline="410">CBigNum::GetSerializeSize</referencedby>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" compoundref="main_8cpp" startline="865" endline="1023">AcceptToMemoryPool</referencedby>
        <referencedby refid="main_8h_1a4d2373d0ce79227c95358116aae667f3" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="class_c_transaction_1ad2452fe2ae424f43e5fd767c28517b3b" compoundref="transaction_8cpp" startline="30" endline="47">CTransaction::ComputePriority</referencedby>
        <referencedby refid="class_c_transaction_1afa2875bea30d31900a30baf7fd56b96b" compoundref="transaction_8cpp" startline="49" endline="98">CTransaction::CheckTransaction</referencedby>
        <referencedby refid="class_c_tx_out_1aebf080be8a28855321e3581dfe3abcaf" compoundref="transaction_8h" startline="220" endline="231">CTxOut::IsDust</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="serialize_8h_1a0b138a9106a3690113f0797571843022" compoundref="serialize_8h" startline="540" endline="546">GetSerializeSize_impl</referencedby>
        <referencedby refid="serialize_8h_1a111324194564a4e799f5b1ac9b0932eb" compoundref="serialize_8h" startline="621" endline="624">GetSerializeSize</referencedby>
        <referencedby refid="serialize_8h_1a9cd643cfa4ca2da679b6f9843bf319aa" compoundref="serialize_8h" startline="811" endline="814">SerReadWrite</referencedby>
        <referencedby refid="class_c_data_stream_1aaf2b9e953793ce5a4fc438a7ecb00dc2" compoundref="streams_8h" startline="288" endline="292">CDataStream::GetSerializeSize</referencedby>
        <referencedby refid="class_c_auto_file_1a883a261f0d7d0320f72152ff2167fd24" compoundref="streams_8h" startline="404" endline="408">CAutoFile::GetSerializeSize</referencedby>
        <referencedby refid="serialize__tests_8cpp_1a0528829bf2541df9b7c85e3a309ee435" compoundref="serialize__tests_8cpp" startline="12" endline="43">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="class_c_tx_in_undo_1a6f992d64f9d4ee6299cbd3305e4fd90f" compoundref="undo_8h" startline="57" endline="61">CTxInUndo::GetSerializeSize</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a89340ca6c5c4813911e75b037dae5c57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(signed char a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>signed char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="131" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a7e67cdca5b5c7a2876cc4ac1ad9e5d21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(unsigned char a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>unsigned char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a38b194303f4eea667c23a17d0c0888bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(signed short a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>signed short</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="133" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ae67cb45d7bd13659118d8cbc5ee28d26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(unsigned short a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>unsigned short</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="134" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a60fbfe51f8d379aa7e63b2ebffb0b727" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(signed int a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>signed int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="135" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a3b76fb86c0b530430df97f5019393fc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(unsigned int a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="136" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a17aa6a3c676b623db0024ab4f6f82e8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(signed long a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>signed long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="137" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a8b01f8d853d363005c24e22a14f929d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(unsigned long a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="138" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a9593ac8e2ea7fb7831b9a3a2ef23028d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(signed long long a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>signed long long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="139" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1afee2c07aa76bc1738be2f4db53a905d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(unsigned long long a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>unsigned long long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="140" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ab3efcc232be0a7c668bf0f44bf033265" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(float a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="141" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ad0b9f055f57604e77b6efe1a20b90069" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(double a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="142" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, char a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="144" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="144" bodyend="144"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
        <referencedby refid="class_c_hash_writer_1a6551aed7315be5ba750680df18562f3a" compoundref="hash_8h" startline="195" endline="199">CHashWriter::operator&lt;&lt;</referencedby>
        <referencedby refid="serialize_8h_1a5ad2f90be2a49996f40cabf489e87cc3" compoundref="serialize_8h" startline="564" endline="569">Serialize_impl</referencedby>
        <referencedby refid="serialize_8h_1a4abc2780ddc1498c4a390f1fb88cfea8" compoundref="serialize_8h" startline="627" endline="630">Serialize</referencedby>
        <referencedby refid="serialize_8h_1a776251b2973c5c9242ac3478ac1512a5" compoundref="serialize_8h" startline="817" endline="821">SerReadWrite</referencedby>
        <referencedby refid="class_c_size_computer_1a03a29c76f82dca1559e7922b35bebd0d" compoundref="serialize_8h" startline="856" endline="860">CSizeComputer::operator&lt;&lt;</referencedby>
        <referencedby refid="class_c_auto_file_1a8e194596d1f8f64059247724b25df82c" compoundref="streams_8h" startline="411" endline="418">CAutoFile::operator&lt;&lt;</referencedby>
        <referencedby refid="sigopcount__tests_8cpp_1aef2e9baa5f7a374852166d1c3945d620" compoundref="sigopcount__tests_8cpp" startline="20" endline="58">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a5d531916ca0be3e68a7699c5d54458e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, signed char a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="145" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="145" bodyend="145"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aa4dffb2013e9982474abb195374a1170" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, unsigned char a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="146" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="146" bodyend="146"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1afa4b9fe12b2c57f916faf0ccb6380b4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, signed short a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed short</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="147" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="147" bodyend="147"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a772fde82dfb5ff4f38d74e8200221578" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, unsigned short a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="148" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="148" bodyend="148"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a9136a9754e353ddf4c3d5cc9b5fcccf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, signed int a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="149" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="149" bodyend="149"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a4c7a12746abd3d5f41f9aefe97257e7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, unsigned int a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="150" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="150" bodyend="150"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1afc49d4e1b716e8acc02f9c5d7b1f2b78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, signed long a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="151" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="151" bodyend="151"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a34517393955fc4e15ebc5563e9b6382f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, unsigned long a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="152" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="152" bodyend="152"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a7625fb2eae7d26763340602cf33c54f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, signed long long a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed long long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="153" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="153" bodyend="153"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a90c9c43b91ca1bb2771868d3816d960b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, unsigned long long a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="154" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="154" bodyend="154"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a8b8f1dc74e379a9d3308d8d22017e482" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, float a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="155" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="155" bodyend="155"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aa261de518247991286be0e2dc515982d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, double a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="156" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="156" bodyend="156"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, char &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="158" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="158" bodyend="158"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
        <referencedby refid="serialize_8h_1a75bd9f1bb034294d1eb6d602ec98ff59" compoundref="serialize_8h" startline="595" endline="610">Unserialize_impl</referencedby>
        <referencedby refid="serialize_8h_1aef8c207825b645e4156ab2a371101f3a" compoundref="serialize_8h" startline="633" endline="636">Unserialize</referencedby>
        <referencedby refid="serialize_8h_1a3f746e0ed1975fa9447ef30050218aa9" compoundref="serialize_8h" startline="824" endline="828">SerReadWrite</referencedby>
        <referencedby refid="class_c_data_stream_1ac80cfc65569416f8c23e328edb4cadae" compoundref="streams_8h" startline="303" endline="308">CDataStream::operator&gt;&gt;</referencedby>
        <referencedby refid="class_c_auto_file_1ae6826219322626d2ac8229e022c41dd7" compoundref="streams_8h" startline="421" endline="428">CAutoFile::operator&gt;&gt;</referencedby>
        <referencedby refid="class_c_buffered_file_1ab570d5f1a173a41100e7b42b4aacbbc5" compoundref="streams_8h" startline="558" endline="562">CBufferedFile::operator&gt;&gt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a8dce0e0a85c9d38b700e700dc9dda057" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, signed char &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed char &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="159" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="159" bodyend="159"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aebbb104570e2ff054626fdd0410894b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, unsigned char &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned char &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="160" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="160" bodyend="160"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a984ad5e9f245dc49521f4caee9b59118" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, signed short &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed short &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="161" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="161" bodyend="161"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a055bba904b0bbf1290b30491a8cfe228" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, unsigned short &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned short &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="162" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="162" bodyend="162"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1adc4aa8c2ea1f3a2402c22ca2a95ffce2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, signed int &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed int &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="163" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="163" bodyend="163"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1acdb803cab003e2a109d9e813974edf5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, unsigned int &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="164" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="164" bodyend="164"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aa80f0ffc269713ccbc33d90fe2769381" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, signed long &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed long &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="165" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="165" bodyend="165"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ae44cef267cf2667912e3ae0394df2f33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, unsigned long &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned long &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="166" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="166" bodyend="166"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a1c98bde2b0a04fbbd79d68963478cdb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, signed long long &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>signed long long &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="167" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="167" bodyend="167"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a69b64027fde2d915b2a1b575c8d6eb40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, unsigned long long &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned long long &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="168" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="168" bodyend="168"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a578d64a23aa8dcada47a3c82a1e4c362" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, float &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="169" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="169" bodyend="169"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1afb55277651526f6e0554e92d5ff129bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, double &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="170" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="170" bodyend="170"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a6eb6e1d345d527f1826a8d0731d06ccb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(bool a, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="172" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aac3cce93274829a6d598f85f17d09bf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;s, bool a, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="173" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="173" bodyend="173"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a6d54c28b93b58ccfaeeaf7e89b17c54e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;s, bool &amp;a, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="174" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="174" bodyend="174"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSizeOfCompactSize</definition>
        <argsstring>(uint64_t nSize)</argsstring>
        <name>GetSizeOfCompactSize</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>nSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="183" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="183" bodyend="189"/>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="class_limited_string_1a9864565cf21b4f2ca09f78acc77d9563" compoundref="serialize_8h" startline="421" endline="424">LimitedString&lt; Limit &gt;::GetSerializeSize</referencedby>
        <referencedby refid="serialize_8h_1af2f7bd0287726e890b7d465e09fd7f73" compoundref="serialize_8h" startline="508" endline="511">GetSerializeSize</referencedby>
        <referencedby refid="serialize_8h_1a35c2e36c213f8331ad0cc3c03f88e8d1" compoundref="serialize_8h" startline="534" endline="537">GetSerializeSize_impl</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WriteCompactSize</definition>
        <argsstring>(Stream &amp;os, uint64_t nSize)</argsstring>
        <name>WriteCompactSize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>nSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="192" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="192" bodyend="221"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
        <referencedby refid="class_c_pub_key_1a315865ee4c45726c01fae44d53b180a1" compoundref="pubkey_8h" startline="113" endline="117">CPubKey::Serialize</referencedby>
        <referencedby refid="class_limited_string_1a4421821da094900bf15f79768a13e8b9" compoundref="serialize_8h" startline="414" endline="419">LimitedString&lt; Limit &gt;::Serialize</referencedby>
        <referencedby refid="serialize_8h_1adee5a9a0b11fd58c829855619c222ab7" compoundref="serialize_8h" startline="514" endline="519">Serialize</referencedby>
        <referencedby refid="serialize_8h_1a4267253fd8a7173f0a9e6f642ac6538d" compoundref="serialize_8h" startline="556" endline="561">Serialize_impl</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t ReadCompactSize</definition>
        <argsstring>(Stream &amp;is)</argsstring>
        <name>ReadCompactSize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="224" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="224" bodyend="260"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
        <references refid="mruset__tests_8cpp_1a0592dba56693fad79136250c11e5a7fe" compoundref="mruset__tests_8cpp" startline="9">MAX_SIZE</references>
        <referencedby refid="class_c_pub_key_1a1cfd8e3c711f5298eecdacd5979f6e6c" compoundref="pubkey_8h" startline="118" endline="129">CPubKey::Unserialize</referencedby>
        <referencedby refid="class_limited_string_1a21ec9b742da8f8ff7b9a8b89131f943b" compoundref="serialize_8h" startline="402" endline="411">LimitedString&lt; Limit &gt;::Unserialize</referencedby>
        <referencedby refid="serialize_8h_1aa688c53c27044d715917e33769b4f415" compoundref="serialize_8h" startline="522" endline="528">Unserialize</referencedby>
        <referencedby refid="serialize_8h_1a92432e5377aca757f1e248516214932d" compoundref="serialize_8h" startline="579" endline="592">Unserialize_impl</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aecf191cfbaec6bfce1292f7f9c3dc7ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSizeOfVarInt</definition>
        <argsstring>(I n)</argsstring>
        <name>GetSizeOfVarInt</name>
        <param>
          <type>I</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="285" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="285" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1af2cf364ed9c068fd7092f0207a756c22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WriteVarInt</definition>
        <argsstring>(Stream &amp;os, I n)</argsstring>
        <name>WriteVarInt</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>I</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="298" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="298" bodyend="312"/>
        <references refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" compoundref="serialize_8h" startline="127">WRITEDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a6f8a5966f156fb3d7e4acc7121eea648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename I</type>
          </param>
        </templateparamlist>
        <type>I</type>
        <definition>I ReadVarInt</definition>
        <argsstring>(Stream &amp;is)</argsstring>
        <name>ReadVarInt</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="315" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="315" bodyend="327"/>
        <references refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" compoundref="serialize_8h" startline="128">READDATA</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a5748d9d17982b234b10a4b9e6f8e9f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_c_var_int" kindref="compound">CVarInt</ref>&lt; I &gt;</type>
        <definition>CVarInt&lt;I&gt; WrapVarInt</definition>
        <argsstring>(I &amp;n)</argsstring>
        <name>WrapVarInt</name>
        <param>
          <type>I &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="428" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="428" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1af2f7bd0287726e890b7d465e09fd7f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(const std::basic_string&lt; C &gt; &amp;str, int, int=0)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const std::basic_string&lt; C &gt; &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="435" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="508" bodyend="511"/>
        <references refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" compoundref="serialize_8h" startline="183" endline="189">GetSizeOfCompactSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1adee5a9a0b11fd58c829855619c222ab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;os, const std::basic_string&lt; C &gt; &amp;str, int, int=0)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::basic_string&lt; C &gt; &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="436" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="514" bodyend="519"/>
        <references refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" compoundref="serialize_8h" startline="192" endline="221">WriteCompactSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aa688c53c27044d715917e33769b4f415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;is, std::basic_string&lt; C &gt; &amp;str, int, int=0)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::basic_string&lt; C &gt; &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="437" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="522" bodyend="528"/>
        <references refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" compoundref="serialize_8h" startline="224" endline="260">ReadCompactSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a3bbd240ce556fd6d0006f77012177cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize_impl</definition>
        <argsstring>(const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const boost::true_type &amp;)</argsstring>
        <name>GetSerializeSize_impl</name>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const boost::true_type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="440" column="1"/>
        <referencedby refid="serialize_8h_1a335ff86321a72847697b886ec6a73b83" compoundref="serialize_8h" startline="549" endline="552">GetSerializeSize</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a329d6980a25c10b1e34913ac11329fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize_impl</definition>
        <argsstring>(const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const boost::false_type &amp;)</argsstring>
        <name>GetSerializeSize_impl</name>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const boost::false_type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a335ff86321a72847697b886ec6a73b83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="442" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="549" bodyend="552"/>
        <references refid="serialize_8h_1a3bbd240ce556fd6d0006f77012177cdf">GetSerializeSize_impl</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1afb0ab8a2a3c9e6accec44b9310665e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize_impl</definition>
        <argsstring>(Stream &amp;os, const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const boost::true_type &amp;)</argsstring>
        <name>Serialize_impl</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const boost::true_type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="443" column="1"/>
        <referencedby refid="serialize_8h_1a0d1c9a136a2cc812c3080bd65a20f63c" compoundref="serialize_8h" startline="572" endline="575">Serialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aafb4b2795cb998fdcf76b19a959a1ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize_impl</definition>
        <argsstring>(Stream &amp;os, const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const boost::false_type &amp;)</argsstring>
        <name>Serialize_impl</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const boost::false_type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a0d1c9a136a2cc812c3080bd65a20f63c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;os, const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="445" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="572" bodyend="575"/>
        <references refid="serialize_8h_1afb0ab8a2a3c9e6accec44b9310665e75">Serialize_impl</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ae8594814bba47036e603e447fbfd79ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize_impl</definition>
        <argsstring>(Stream &amp;is, std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const boost::true_type &amp;)</argsstring>
        <name>Unserialize_impl</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const boost::true_type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="446" column="1"/>
        <referencedby refid="serialize_8h_1aefdf63d8c997767d3e3535a54f35025c" compoundref="serialize_8h" startline="613" endline="616">Unserialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ac81185ca595a48045a6808b69bf2eb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize_impl</definition>
        <argsstring>(Stream &amp;is, std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const boost::false_type &amp;)</argsstring>
        <name>Unserialize_impl</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const boost::false_type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aefdf63d8c997767d3e3535a54f35025c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;is, std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="448" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="613" bodyend="616"/>
        <references refid="serialize_8h_1ae8594814bba47036e603e447fbfd79ac">Unserialize_impl</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a111324194564a4e799f5b1ac9b0932eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(const CScript &amp;v, int nType, int nVersion)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const <ref refid="class_c_script" kindref="compound">CScript</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="451" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="621" bodyend="624"/>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a4abc2780ddc1498c4a390f1fb88cfea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;os, const CScript &amp;v, int nType, int nVersion)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_script" kindref="compound">CScript</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="452" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="627" bodyend="630"/>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aef8c207825b645e4156ab2a371101f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;is, CScript &amp;v, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="class_c_script" kindref="compound">CScript</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="453" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="633" bodyend="636"/>
        <references refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ad79f12b1ba05119c0d2460699dcf01d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(const std::pair&lt; K, T &gt; &amp;item, int nType, int nVersion)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const std::pair&lt; K, T &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="456" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="642" bodyend="645"/>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ab485c675206b85cf5b2800ce1d3ca2c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;os, const std::pair&lt; K, T &gt; &amp;item, int nType, int nVersion)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::pair&lt; K, T &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="457" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="648" bodyend="652"/>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1af0fc057388ad1dbd793bccf02282ec18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;is, std::pair&lt; K, T &gt; &amp;item, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::pair&lt; K, T &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="458" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="655" bodyend="659"/>
        <references refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ac1fabe16fa95a50b78866fa9f2eb633a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(const boost::tuple&lt; T0, T1, T2 &gt; &amp;item, int nType, int nVersion)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const boost::tuple&lt; T0, T1, T2 &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="461" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="665" bodyend="672"/>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a499ddf572293fe1c114b2c1b1c25c5e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;os, const boost::tuple&lt; T0, T1, T2 &gt; &amp;item, int nType, int nVersion)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const boost::tuple&lt; T0, T1, T2 &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="462" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="675" bodyend="680"/>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aa00de3cbf1e973ac2d468e91b79eab2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;is, boost::tuple&lt; T0, T1, T2 &gt; &amp;item, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>boost::tuple&lt; T0, T1, T2 &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="463" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="683" bodyend="688"/>
        <references refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1acffc58951c084ec48df3d3a87d3e398a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
          <param>
            <type>typename T3</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(const boost::tuple&lt; T0, T1, T2, T3 &gt; &amp;item, int nType, int nVersion)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const boost::tuple&lt; T0, T1, T2, T3 &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="466" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="694" bodyend="702"/>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1ae185a8090e06661c56a897c09cdf39d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
          <param>
            <type>typename T3</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;os, const boost::tuple&lt; T0, T1, T2, T3 &gt; &amp;item, int nType, int nVersion)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const boost::tuple&lt; T0, T1, T2, T3 &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="467" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="705" bodyend="711"/>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a11f168f2ad0355ad6794090c3035b3d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
          <param>
            <type>typename T3</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;is, boost::tuple&lt; T0, T1, T2, T3 &gt; &amp;item, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>boost::tuple&lt; T0, T1, T2, T3 &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="468" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="714" bodyend="720"/>
        <references refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1af3b9d5bc8cc267300cf8ca893c51929e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Pred</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(const std::map&lt; K, T, Pred, A &gt; &amp;m, int nType, int nVersion)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const std::map&lt; K, T, Pred, A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="471" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="726" bodyend="732"/>
        <references refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" compoundref="serialize_8h" startline="183" endline="189">GetSizeOfCompactSize</references>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a54baab64cf0b60a61c712546dab7305a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Pred</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;os, const std::map&lt; K, T, Pred, A &gt; &amp;m, int nType, int nVersion)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::map&lt; K, T, Pred, A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="472" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="735" bodyend="740"/>
        <references refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" compoundref="serialize_8h" startline="192" endline="221">WriteCompactSize</references>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1acda54e31ea371de4eb0787a3e1565aa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Pred</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;is, std::map&lt; K, T, Pred, A &gt; &amp;m, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::map&lt; K, T, Pred, A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="473" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="743" bodyend="754"/>
        <references refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" compoundref="serialize_8h" startline="224" endline="260">ReadCompactSize</references>
        <references refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1af597c56aff2d6291fdc3c56cac1551b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename Pred</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(const std::set&lt; K, Pred, A &gt; &amp;m, int nType, int nVersion)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const std::set&lt; K, Pred, A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="476" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="760" bodyend="766"/>
        <references refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" compoundref="serialize_8h" startline="183" endline="189">GetSizeOfCompactSize</references>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a05fbc0a7955ac4f4d7082870474658d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename Pred</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;os, const std::set&lt; K, Pred, A &gt; &amp;m, int nType, int nVersion)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::set&lt; K, Pred, A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="477" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="769" bodyend="774"/>
        <references refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" compoundref="serialize_8h" startline="192" endline="221">WriteCompactSize</references>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a229b67f4ffe4f0c3b3c52dc6cff98db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename Pred</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;is, std::set&lt; K, Pred, A &gt; &amp;m, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::set&lt; K, Pred, A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="478" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="777" bodyend="788"/>
        <references refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" compoundref="serialize_8h" startline="224" endline="260">ReadCompactSize</references>
        <references refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1aac816a6c7028a0c84c501ff199289e02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize</definition>
        <argsstring>(const T &amp;a, long nType, int nVersion)</argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="487" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a86951da9392b208f3e0c322d6569af14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize</definition>
        <argsstring>(Stream &amp;os, const T &amp;a, long nType, int nVersion)</argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="493" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="493" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1acd56ffe7d06efdae43157de0da994d4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize</definition>
        <argsstring>(Stream &amp;is, T &amp;a, long nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="499" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a35c2e36c213f8331ad0cc3c03f88e8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize_impl</definition>
        <argsstring>(const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const unsigned char &amp;)</argsstring>
        <name>GetSerializeSize_impl</name>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const unsigned char &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>vector </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="534" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="534" bodyend="537"/>
        <references refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" compoundref="serialize_8h" startline="183" endline="189">GetSizeOfCompactSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a0b138a9106a3690113f0797571843022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int GetSerializeSize_impl</definition>
        <argsstring>(const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const V &amp;)</argsstring>
        <name>GetSerializeSize_impl</name>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const V &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="540" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="540" bodyend="546"/>
        <references refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" compoundref="serialize_8h" startline="183" endline="189">GetSizeOfCompactSize</references>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a4267253fd8a7173f0a9e6f642ac6538d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize_impl</definition>
        <argsstring>(Stream &amp;os, const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const unsigned char &amp;)</argsstring>
        <name>Serialize_impl</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const unsigned char &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="556" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="556" bodyend="561"/>
        <references refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" compoundref="serialize_8h" startline="192" endline="221">WriteCompactSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a5ad2f90be2a49996f40cabf489e87cc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Serialize_impl</definition>
        <argsstring>(Stream &amp;os, const std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const V &amp;)</argsstring>
        <name>Serialize_impl</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const V &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="564" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="564" bodyend="569"/>
        <references refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" compoundref="serialize_8h" startline="192" endline="221">WriteCompactSize</references>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a92432e5377aca757f1e248516214932d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize_impl</definition>
        <argsstring>(Stream &amp;is, std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const unsigned char &amp;)</argsstring>
        <name>Unserialize_impl</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const unsigned char &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="579" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="579" bodyend="592"/>
        <references refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" compoundref="serialize_8h" startline="224" endline="260">ReadCompactSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a75bd9f1bb034294d1eb6d602ec98ff59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Unserialize_impl</definition>
        <argsstring>(Stream &amp;is, std::vector&lt; T, A &gt; &amp;v, int nType, int nVersion, const V &amp;)</argsstring>
        <name>Unserialize_impl</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::vector&lt; T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type>const V &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="595" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="595" bodyend="610"/>
        <references refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" compoundref="serialize_8h" startline="224" endline="260">ReadCompactSize</references>
        <references refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a9cd643cfa4ca2da679b6f9843bf319aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int SerReadWrite</definition>
        <argsstring>(Stream &amp;s, const T &amp;obj, int nType, int nVersion, CSerActionGetSerializeSize ser_action)</argsstring>
        <name>SerReadWrite</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type><ref refid="class_c_ser_action_get_serialize_size" kindref="compound">CSerActionGetSerializeSize</ref></type>
          <declname>ser_action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="811" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="811" bodyend="814"/>
        <references refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" compoundref="serialize_8h" startline="130" endline="130">GetSerializeSize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a776251b2973c5c9242ac3478ac1512a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int SerReadWrite</definition>
        <argsstring>(Stream &amp;s, const T &amp;obj, int nType, int nVersion, CSerActionSerialize ser_action)</argsstring>
        <name>SerReadWrite</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type><ref refid="struct_c_ser_action_serialize" kindref="compound">CSerActionSerialize</ref></type>
          <declname>ser_action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="817" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="817" bodyend="821"/>
        <references refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" compoundref="serialize_8h" startline="144" endline="144">Serialize</references>
      </memberdef>
      <memberdef kind="function" id="serialize_8h_1a3f746e0ed1975fa9447ef30050218aa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int SerReadWrite</definition>
        <argsstring>(Stream &amp;s, T &amp;obj, int nType, int nVersion, CSerActionUnserialize ser_action)</argsstring>
        <name>SerReadWrite</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <param>
          <type><ref refid="struct_c_ser_action_unserialize" kindref="compound">CSerActionUnserialize</ref></type>
          <declname>ser_action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/serialize.h" line="824" column="1" bodyfile="/home/dev/ds-160209/src/serialize.h" bodystart="824" bodyend="828"/>
        <references refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" compoundref="serialize_8h" startline="158" endline="158">Unserialize</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Silk<sp/>Network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DARKSILK_SERIALIZE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DARKSILK_SERIALIZE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/is_fundamental.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/tuple/tuple.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="allocators_8h" kindref="compound">allocators.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="version_8h" kindref="compound">version.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_script" kindref="compound">CScript</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_tx_out_compressor" kindref="compound">CTxOutCompressor</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mruset__tests_8cpp_1a0592dba56693fad79136250c11e5a7fe" kindref="member">MAX_SIZE</ref><sp/>=<sp/>0x02000000;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>bypass<sp/>the<sp/>rule<sp/>against<sp/>non-const<sp/>reference<sp/>to<sp/>temporary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>it<sp/>makes<sp/>sense<sp/>with<sp/>wrappers<sp/>such<sp/>as<sp/>CFlatData<sp/>or<sp/>CTxDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="36" refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="serialize_8h_1abd1caa7e45d4ba31b7dfdda9949c3b05" kindref="member">REF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">T&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="46" refid="serialize_8h_1ae634e39c103baab132dad9beef83ceb5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="serialize_8h_1ae634e39c103baab132dad9beef83ceb5" kindref="member">NCONST_PTR</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>val)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TAl&gt;</highlight></codeline>
<codeline lineno="57" refid="serialize_8h_1a19966d167c527d2be493ac9aba27c249" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="serialize_8h_1a19966d167c527d2be493ac9aba27c249" kindref="member">begin_ptr</ref>(std::vector&lt;T,TAl&gt;&amp;<sp/>v)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.empty()<sp/>?<sp/>NULL<sp/>:<sp/>&amp;v[0];</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TAl&gt;</highlight></codeline>
<codeline lineno="63" refid="serialize_8h_1ac542eee802a7ab8054a1c4cae6061296" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="serialize_8h_1a19966d167c527d2be493ac9aba27c249" kindref="member">begin_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,TAl&gt;&amp;<sp/>v)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.empty()<sp/>?<sp/>NULL<sp/>:<sp/>&amp;v[0];</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TAl&gt;</highlight></codeline>
<codeline lineno="69" refid="serialize_8h_1a9a94418dd6160d4dfd04aa4ef07219f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="serialize_8h_1a9a94418dd6160d4dfd04aa4ef07219f7" kindref="member">end_ptr</ref>(std::vector&lt;T,TAl&gt;&amp;<sp/>v)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.empty()<sp/>?<sp/>NULL<sp/>:<sp/>(&amp;v[0]<sp/>+<sp/>v.size());</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TAl&gt;</highlight></codeline>
<codeline lineno="75" refid="serialize_8h_1a75886e8bb81b99c85327544f42425058" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="serialize_8h_1a9a94418dd6160d4dfd04aa4ef07219f7" kindref="member">end_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,TAl&gt;&amp;<sp/>v)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.empty()<sp/>?<sp/>NULL<sp/>:<sp/>(&amp;v[0]<sp/>+<sp/>v.size());</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Templates<sp/>for<sp/>serializing<sp/>to<sp/>anything<sp/>that<sp/>looks<sp/>like<sp/>a<sp/>stream,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>i.e.<sp/>anything<sp/>that<sp/>supports<sp/>.read(char*,<sp/>size_t)<sp/>and<sp/>.write(char*,<sp/>size_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>primary<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa652754eeaf79fba4fcf4c18597a6961c" kindref="member">SER_NETWORK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>0),</highlight></codeline>
<codeline lineno="90" refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>1),</highlight></codeline>
<codeline lineno="91" refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>2),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa0d7b459667b662cab8c9a95be7bc72f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa0d7b459667b662cab8c9a95be7bc72f0" kindref="member">SER_SKIPSIG</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>16),</highlight></codeline>
<codeline lineno="94" refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa4f355599a80a433c2b6d27f236eb420a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa4f355599a80a433c2b6d27f236eb420a" kindref="member">SER_BLOCKHEADERONLY</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>17),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">#ifdef<sp/>USE_NATIVE_I2P</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>SER_IPADDRONLY<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>18),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READWRITE(obj)<sp/><sp/><sp/><sp/><sp/><sp/>(::SerReadWrite(s,<sp/>(obj),<sp/>nType,<sp/>nVersion,<sp/>ser_action))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="serialize_8h_1ae3f1f459edee39316fb42da787e2d266" refkind="member"><highlight class="preprocessor">#define<sp/>ADD_SERIALIZE_METHODS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>size_t<sp/>GetSerializeSize(int<sp/>nType,<sp/>int<sp/>nVersion)<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CSizeComputer<sp/>s(nType,<sp/>nVersion);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NCONST_PTR(this)-&gt;SerializationOp(s,<sp/>CSerActionSerialize(),<sp/>nType,<sp/>nVersion);\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>s.size();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>Stream&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>Serialize(Stream&amp;<sp/>s,<sp/>int<sp/>nType,<sp/>int<sp/>nVersion)<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NCONST_PTR(this)-&gt;SerializationOp(s,<sp/>CSerActionSerialize(),<sp/>nType,<sp/>nVersion);\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>Stream&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>Unserialize(Stream&amp;<sp/>s,<sp/>int<sp/>nType,<sp/>int<sp/>nVersion)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializationOp(s,<sp/>CSerActionUnserialize(),<sp/>nType,<sp/>nVersion);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Basic<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WRITEDATA(s,<sp/>obj)<sp/><sp/><sp/>s.write((char*)&amp;(obj),<sp/>sizeof(obj))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READDATA(s,<sp/>obj)<sp/><sp/><sp/><sp/>s.read((char*)&amp;(obj),<sp/>sizeof(obj))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="131" refid="serialize_8h_1a89340ca6c5c4813911e75b037dae5c57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="132" refid="serialize_8h_1a7e67cdca5b5c7a2876cc4ac1ad9e5d21" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="133" refid="serialize_8h_1a38b194303f4eea667c23a17d0c0888bc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="134" refid="serialize_8h_1ae67cb45d7bd13659118d8cbc5ee28d26" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="135" refid="serialize_8h_1a60fbfe51f8d379aa7e63b2ebffb0b727" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="136" refid="serialize_8h_1a3b76fb86c0b530430df97f5019393fc4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="137" refid="serialize_8h_1a17aa6a3c676b623db0024ab4f6f82e8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="138" refid="serialize_8h_1a8b01f8d853d363005c24e22a14f929d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="139" refid="serialize_8h_1a9593ac8e2ea7fb7831b9a3a2ef23028d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="140" refid="serialize_8h_1afee2c07aa76bc1738be2f4db53a905d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="141" refid="serialize_8h_1ab3efcc232be0a7c668bf0f44bf033265" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="142" refid="serialize_8h_1ad0b9f055f57604e77b6efe1a20b90069" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a);<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="145" refid="serialize_8h_1a5d531916ca0be3e68a7699c5d54458e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="146" refid="serialize_8h_1aa4dffb2013e9982474abb195374a1170" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="147" refid="serialize_8h_1afa4b9fe12b2c57f916faf0ccb6380b4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="148" refid="serialize_8h_1a772fde82dfb5ff4f38d74e8200221578" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="149" refid="serialize_8h_1a9136a9754e353ddf4c3d5cc9b5fcccf1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="150" refid="serialize_8h_1a4c7a12746abd3d5f41f9aefe97257e7e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="151" refid="serialize_8h_1afc49d4e1b716e8acc02f9c5d7b1f2b78" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="152" refid="serialize_8h_1a34517393955fc4e15ebc5563e9b6382f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="153" refid="serialize_8h_1a7625fb2eae7d26763340602cf33c54f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="154" refid="serialize_8h_1a90c9c43b91ca1bb2771868d3816d960b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="155" refid="serialize_8h_1a8b8f1dc74e379a9d3308d8d22017e482" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="156" refid="serialize_8h_1aa261de518247991286be0e2dc515982d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="159" refid="serialize_8h_1a8dce0e0a85c9d38b700e700dc9dda057" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="160" refid="serialize_8h_1aebbb104570e2ff054626fdd0410894b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="161" refid="serialize_8h_1a984ad5e9f245dc49521f4caee9b59118" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="162" refid="serialize_8h_1a055bba904b0bbf1290b30491a8cfe228" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="163" refid="serialize_8h_1adc4aa8c2ea1f3a2402c22ca2a95ffce2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="164" refid="serialize_8h_1acdb803cab003e2a109d9e813974edf5e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="165" refid="serialize_8h_1aa80f0ffc269713ccbc33d90fe2769381" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="166" refid="serialize_8h_1ae44cef267cf2667912e3ae0394df2f33" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="167" refid="serialize_8h_1a1c98bde2b0a04fbbd79d68963478cdb1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="168" refid="serialize_8h_1a69b64027fde2d915b2a1b575c8d6eb40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="169" refid="serialize_8h_1a578d64a23aa8dcada47a3c82a1e4c362" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="170" refid="serialize_8h_1afb55277651526f6e0554e92d5ff129bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>a);<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="serialize_8h_1a6eb6e1d345d527f1826a8d0731d06ccb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char);<sp/>}</highlight></codeline>
<codeline lineno="173" refid="serialize_8h_1aac3cce93274829a6d598f85f17d09bf0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>f=a;<sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(s,<sp/>f);<sp/>}</highlight></codeline>
<codeline lineno="174" refid="serialize_8h_1a6d54c28b93b58ccfaeeaf7e89b17c54e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)<sp/>{<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>f;<sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(s,<sp/>f);<sp/>a=f;<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compact<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>size<sp/>&lt;<sp/><sp/>253<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>1<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>size<sp/>&lt;=<sp/>USHRT_MAX<sp/><sp/>--<sp/>3<sp/>bytes<sp/><sp/>(253<sp/>+<sp/>2<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>size<sp/>&lt;=<sp/>UINT_MAX<sp/><sp/><sp/>--<sp/>5<sp/>bytes<sp/><sp/>(254<sp/>+<sp/>4<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>size<sp/>&gt;<sp/><sp/>UINT_MAX<sp/><sp/><sp/>--<sp/>9<sp/>bytes<sp/><sp/>(255<sp/>+<sp/>8<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" kindref="member">GetSizeOfCompactSize</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nSize)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>&lt;<sp/>253)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>&lt;=<sp/>std::numeric_limits&lt;unsigned<sp/>short&gt;::max())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>&lt;=<sp/>std::numeric_limits&lt;unsigned<sp/>int&gt;::max())<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="192" refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" kindref="member">WriteCompactSize</ref>(Stream&amp;<sp/>os,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nSize)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>&lt;<sp/>253)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chSize<sp/>=<sp/>nSize;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(os,<sp/>chSize);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>&lt;=<sp/>std::numeric_limits&lt;unsigned<sp/>short&gt;::max())</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chSize<sp/>=<sp/>253;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>xSize<sp/>=<sp/>nSize;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(os,<sp/>chSize);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(os,<sp/>xSize);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>&lt;=<sp/>std::numeric_limits&lt;unsigned<sp/>int&gt;::max())</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chSize<sp/>=<sp/>254;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xSize<sp/>=<sp/>nSize;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(os,<sp/>chSize);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(os,<sp/>xSize);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chSize<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>xSize<sp/>=<sp/>nSize;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(os,<sp/>chSize);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(os,<sp/>xSize);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="224" refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" kindref="member">ReadCompactSize</ref>(Stream&amp;<sp/>is)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chSize;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(is,<sp/>chSize);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>nSizeRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chSize<sp/>&lt;<sp/>253)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSizeRet<sp/>=<sp/>chSize;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chSize<sp/>==<sp/>253)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>xSize;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(is,<sp/>xSize);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSizeRet<sp/>=<sp/>xSize;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSizeRet<sp/>&lt;<sp/>253)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::ios_base::failure(</highlight><highlight class="stringliteral">&quot;non-canonical<sp/>ReadCompactSize()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chSize<sp/>==<sp/>254)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xSize;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(is,<sp/>xSize);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSizeRet<sp/>=<sp/>xSize;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSizeRet<sp/>&lt;<sp/>0x10000u)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::ios_base::failure(</highlight><highlight class="stringliteral">&quot;non-canonical<sp/>ReadCompactSize()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>xSize;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(is,<sp/>xSize);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSizeRet<sp/>=<sp/>xSize;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSizeRet<sp/>&lt;<sp/>0x100000000ULL)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::ios_base::failure(</highlight><highlight class="stringliteral">&quot;non-canonical<sp/>ReadCompactSize()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSizeRet<sp/>&gt;<sp/>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>)<ref refid="mruset__tests_8cpp_1a0592dba56693fad79136250c11e5a7fe" kindref="member">MAX_SIZE</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::ios_base::failure(</highlight><highlight class="stringliteral">&quot;ReadCompactSize()<sp/>:<sp/>size<sp/>too<sp/>large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nSizeRet;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Variable-length<sp/>integers:<sp/>bytes<sp/>are<sp/>a<sp/>MSB<sp/>base-128<sp/>encoding<sp/>of<sp/>the<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>high<sp/>bit<sp/>in<sp/>each<sp/>byte<sp/>signifies<sp/>whether<sp/>another<sp/>digit<sp/>follows.<sp/>To<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>encoding<sp/>is<sp/>one-to-one,<sp/>one<sp/>is<sp/>subtracted<sp/>from<sp/>all<sp/>but<sp/>the<sp/>last<sp/>digit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thus,<sp/>the<sp/>byte<sp/>sequence<sp/>a[]<sp/>with<sp/>length<sp/>len,<sp/>where<sp/>all<sp/>but<sp/>the<sp/>last<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>has<sp/>bit<sp/>128<sp/>set,<sp/>encodes<sp/>the<sp/>number:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>(a[len-1]<sp/>&amp;<sp/>0x7F)<sp/>+<sp/>sum(i=1..len-1,<sp/>128^i*((a[len-i-1]<sp/>&amp;<sp/>0x7F)+1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Properties:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Very<sp/>small<sp/>(0-127:<sp/>1<sp/>byte,<sp/>128-16511:<sp/>2<sp/>bytes,<sp/>16512-2113663:<sp/>3<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Every<sp/>integer<sp/>has<sp/>exactly<sp/>one<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Encoding<sp/>does<sp/>not<sp/>depend<sp/>on<sp/>size<sp/>of<sp/>original<sp/>integer<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>No<sp/>redundancy:<sp/>every<sp/>(infinite)<sp/>byte<sp/>sequence<sp/>corresponds<sp/>to<sp/>a<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>of<sp/>encoded<sp/>integers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0x00]<sp/><sp/>256:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0x81<sp/>0x00]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0x01]<sp/><sp/>16383:<sp/><sp/><sp/><sp/><sp/><sp/>[0xFE<sp/>0x7F]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>127:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0x7F]<sp/><sp/>16384:<sp/><sp/><sp/><sp/><sp/><sp/>[0xFF<sp/>0x00]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>128:<sp/><sp/>[0x80<sp/>0x00]<sp/><sp/>16511:<sp/>[0x80<sp/>0xFF<sp/>0x7F]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>255:<sp/><sp/>[0x80<sp/>0x7F]<sp/><sp/>65535:<sp/>[0x82<sp/>0xFD<sp/>0x7F]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2^32:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0x8E<sp/>0xFE<sp/>0xFE<sp/>0xFF<sp/>0x00]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="285" refid="serialize_8h_1aecf191cfbaec6bfce1292f7f9c3dc7ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1aecf191cfbaec6bfce1292f7f9c3dc7ba" kindref="member">GetSizeOfVarInt</ref>(I<sp/>n)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRet++;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0x7F)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(n<sp/>&gt;&gt;<sp/>7)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nRet;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="298" refid="serialize_8h_1af2cf364ed9c068fd7092f0207a756c22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1af2cf364ed9c068fd7092f0207a756c22" kindref="member">WriteVarInt</ref>(Stream&amp;<sp/>os,<sp/>I<sp/>n)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp[(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n)*8+6)/7];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len=0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp[len]<sp/>=<sp/>(n<sp/>&amp;<sp/>0x7F)<sp/>|<sp/>(len<sp/>?<sp/>0x80<sp/>:<sp/>0x00);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0x7F)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(n<sp/>&gt;&gt;<sp/>7)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ace4c987b030b7520a3a297fc91478d4e" kindref="member">WRITEDATA</ref>(os,<sp/>tmp[len]);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(len--);</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="315" refid="serialize_8h_1a6f8a5966f156fb3d7e4acc7121eea648" refkind="member"><highlight class="normal">I<sp/><ref refid="serialize_8h_1a6f8a5966f156fb3d7e4acc7121eea648" kindref="member">ReadVarInt</ref>(Stream&amp;<sp/>is)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>I<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chData;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a979640faec36eb3983c4f8b44eaac217" kindref="member">READDATA</ref>(is,<sp/>chData);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(n<sp/>&lt;&lt;<sp/>7)<sp/>|<sp/>(chData<sp/>&amp;<sp/>0x7F);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chData<sp/>&amp;<sp/>0x80)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="serialize_8h_1a9393dd1b6a30ae7fe9cc42240241f741" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLATDATA(obj)<sp/><sp/>REF(CFlatData((char*)&amp;(obj),<sp/>(char*)&amp;(obj)<sp/>+<sp/>sizeof(obj)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="serialize_8h_1a1383f2a4c22ffaeba9b2924d90459f76" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VARINT(obj)<sp/><sp/><sp/><sp/>REF(WrapVarInt(REF(obj)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="serialize_8h_1a78e63691a056ce2368984400605e4f6e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIMITED_STRING(obj,n)<sp/>REF(LimitedString&lt;<sp/>n<sp/>&gt;(REF(obj)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="class_c_flat_data" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_flat_data" kindref="compound">CFlatData</ref></highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="337" refid="class_c_flat_data_1ad5f93a9d4e1cc71eb5fc94e9c9d4d89d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_c_flat_data_1ad5f93a9d4e1cc71eb5fc94e9c9d4d89d" kindref="member">pbegin</ref>;</highlight></codeline>
<codeline lineno="338" refid="class_c_flat_data_1add53aa6440254a30392bcf660f3f8057" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_c_flat_data_1add53aa6440254a30392bcf660f3f8057" kindref="member">pend</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="340" refid="class_c_flat_data_1afd4036c45c69e6b080f57d793e1bdf57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_flat_data_1afd4036c45c69e6b080f57d793e1bdf57" kindref="member">CFlatData</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pbeginIn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pendIn)<sp/>:<sp/>pbegin((char*)pbeginIn),<sp/>pend((char*)pendIn)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TAl&gt;</highlight></codeline>
<codeline lineno="342" refid="class_c_flat_data_1aa536a3fe59b6cde08cf7ed57ecebedfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_c_flat_data_1aa536a3fe59b6cde08cf7ed57ecebedfb" kindref="member">CFlatData</ref>(std::vector&lt;T,TAl&gt;<sp/>&amp;v)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbegin<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="serialize_8h_1a19966d167c527d2be493ac9aba27c249" kindref="member">begin_ptr</ref>(v);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pend<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="serialize_8h_1a9a94418dd6160d4dfd04aa4ef07219f7" kindref="member">end_ptr</ref>(v);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347" refid="class_c_flat_data_1ac8131cc3aec84905d7786fb19ff8953d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_c_flat_data_1ac8131cc3aec84905d7786fb19ff8953d" kindref="member">begin</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_flat_data_1ad5f93a9d4e1cc71eb5fc94e9c9d4d89d" kindref="member">pbegin</ref>;<sp/>}</highlight></codeline>
<codeline lineno="348" refid="class_c_flat_data_1abf086875237d322ea9aa4f3e6ac371e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_c_flat_data_1abf086875237d322ea9aa4f3e6ac371e4" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_flat_data_1ad5f93a9d4e1cc71eb5fc94e9c9d4d89d" kindref="member">pbegin</ref>;<sp/>}</highlight></codeline>
<codeline lineno="349" refid="class_c_flat_data_1ae88ae9f4121ff18aa8e29a3a40d7ee67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_c_flat_data_1ae88ae9f4121ff18aa8e29a3a40d7ee67" kindref="member">end</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_flat_data_1add53aa6440254a30392bcf660f3f8057" kindref="member">pend</ref>;<sp/>}</highlight></codeline>
<codeline lineno="350" refid="class_c_flat_data_1a3619008f211e2f02873cf37e597b64af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_c_flat_data_1a3619008f211e2f02873cf37e597b64af" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_flat_data_1add53aa6440254a30392bcf660f3f8057" kindref="member">pend</ref>;<sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_c_flat_data_1a9205cfe1bca792dd8605ed8cf4f2d7b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_flat_data_1a9205cfe1bca792dd8605ed8cf4f2d7b7" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="353"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pend<sp/>-<sp/><ref refid="class_c_flat_data_1ad5f93a9d4e1cc71eb5fc94e9c9d4d89d" kindref="member">pbegin</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="358" refid="class_c_flat_data_1a99e4a9e9c2c68ea484a102b8f08a7c5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_flat_data_1a99e4a9e9c2c68ea484a102b8f08a7c5a" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="359"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.write(pbegin,<sp/>pend<sp/>-<sp/>pbegin);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="364" refid="class_c_flat_data_1a3da79327bf2937113de502182ee227b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_flat_data_1a3da79327bf2937113de502182ee227b9" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.read(pbegin,<sp/>pend<sp/>-<sp/>pbegin);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal">};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="371" refid="class_c_var_int" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_var_int" kindref="compound">CVarInt</ref></highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="374" refid="class_c_var_int_1a4514adc82b41754d9ac22ee627744614" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>I<sp/>&amp;<ref refid="class_c_var_int_1a4514adc82b41754d9ac22ee627744614" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376" refid="class_c_var_int_1ab26b9de1b43d4b9ce844eaa7cf6a6b4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_var_int_1ab26b9de1b43d4b9ce844eaa7cf6a6b4f" kindref="member">CVarInt</ref>(I&amp;<sp/>nIn)<sp/>:<sp/>n(nIn)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="class_c_var_int_1a0fb5d15dfab5807439c1260096a10742" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_var_int_1a0fb5d15dfab5807439c1260096a10742" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetSizeOfVarInt&lt;I&gt;(<ref refid="class_c_var_int_1a4514adc82b41754d9ac22ee627744614" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="383" refid="class_c_var_int_1ac9d49fe76d15de74952dfa1b1765d60d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_var_int_1ac9d49fe76d15de74952dfa1b1765d60d" kindref="member">Serialize</ref>(Stream<sp/>&amp;s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteVarInt&lt;Stream,I&gt;(s,<sp/><ref refid="class_c_var_int_1a4514adc82b41754d9ac22ee627744614" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="388" refid="class_c_var_int_1aba87b78443378273b4f335dcd858c29c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_var_int_1aba87b78443378273b4f335dcd858c29c" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>ReadVarInt&lt;Stream,I&gt;(s);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal">};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Limit&gt;</highlight></codeline>
<codeline lineno="394" refid="class_limited_string" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_limited_string" kindref="compound">LimitedString</ref></highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="397" refid="class_limited_string_1a3f1d004f4632f7b2fda1a5a5afc266f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string&amp;<sp/><ref refid="class_limited_string_1a3f1d004f4632f7b2fda1a5a5afc266f7" kindref="member">string</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="399" refid="class_limited_string_1afd9b0daa877f4d28c6b909bd34fd597d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_limited_string_1afd9b0daa877f4d28c6b909bd34fd597d" kindref="member">LimitedString</ref>(std::string&amp;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>:<sp/>string(string)<sp/>{}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="402" refid="class_limited_string_1a21ec9b742da8f8ff7b9a8b89131f943b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_limited_string_1a21ec9b742da8f8ff7b9a8b89131f943b" kindref="member">Unserialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/><ref refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" kindref="member">ReadCompactSize</ref>(s);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>Limit)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::ios_base::failure(</highlight><highlight class="stringliteral">&quot;String<sp/>length<sp/>limit<sp/>exceeded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.resize(size);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[0],<sp/>size);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="414" refid="class_limited_string_1a4421821da094900bf15f79768a13e8b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_limited_string_1a4421821da094900bf15f79768a13e8b9" kindref="member">Serialize</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="415"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" kindref="member">WriteCompactSize</ref>(s,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.size());</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.empty())</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[0],<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.size());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="class_limited_string_1a9864565cf21b4f2ca09f78acc77d9563" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_limited_string_1a9864565cf21b4f2ca09f78acc77d9563" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="422"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" kindref="member">GetSizeOfCompactSize</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.size())<sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.size();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal">};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="428" refid="serialize_8h_1a5748d9d17982b234b10a4b9e6f8e9f53" refkind="member"><highlight class="normal"><ref refid="class_c_var_int" kindref="compound">CVarInt&lt;I&gt;</ref><sp/><ref refid="serialize_8h_1a5748d9d17982b234b10a4b9e6f8e9f53" kindref="member">WrapVarInt</ref>(I&amp;<sp/>n)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_var_int" kindref="compound">CVarInt&lt;I&gt;</ref>(n);<sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;C&gt;&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;C&gt;&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::basic_string&lt;C&gt;&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">=0);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a3bbd240ce556fd6d0006f77012177cdf" kindref="member">GetSerializeSize_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::true_type&amp;);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a3bbd240ce556fd6d0006f77012177cdf" kindref="member">GetSerializeSize_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::false_type&amp;);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1afb0ab8a2a3c9e6accec44b9310665e75" kindref="member">Serialize_impl</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::true_type&amp;);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1afb0ab8a2a3c9e6accec44b9310665e75" kindref="member">Serialize_impl</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::false_type&amp;);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1ae8594814bba47036e603e447fbfd79ac" kindref="member">Unserialize_impl</ref>(Stream&amp;<sp/>is,<sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::true_type&amp;);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1ae8594814bba47036e603e447fbfd79ac" kindref="member">Unserialize_impl</ref>(Stream&amp;<sp/>is,<sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::false_type&amp;);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/>others<sp/>derived<sp/>from<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;K,<sp/>T&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;K,<sp/>T&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::pair&lt;K,<sp/>T&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;K,<sp/>T,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;K,<sp/>T,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::map&lt;K,<sp/>T,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;K,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;K,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::set&lt;K,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>none<sp/>of<sp/>the<sp/>specialized<sp/>versions<sp/>above<sp/>matched,<sp/>default<sp/>to<sp/>calling<sp/>member<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;int<sp/>nType&quot;<sp/>is<sp/>changed<sp/>to<sp/>&quot;long<sp/>nType&quot;<sp/>to<sp/>keep<sp/>from<sp/>getting<sp/>an<sp/>ambiguous<sp/>overload<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>compiler<sp/>will<sp/>only<sp/>cast<sp/>int<sp/>to<sp/>long<sp/>if<sp/>none<sp/>of<sp/>the<sp/>other<sp/>templates<sp/>matched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thanks<sp/>to<sp/>Boost<sp/>serialization<sp/>for<sp/>this<sp/>idea.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="487" refid="serialize_8h_1aac816a6c7028a0c84c501ff199289e02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.GetSerializeSize((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="493" refid="serialize_8h_1a86951da9392b208f3e0c322d6569af14" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>a.Serialize(os,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="499" refid="serialize_8h_1acd56ffe7d06efdae43157de0da994d4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>T&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>a.Unserialize(is,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="508" refid="serialize_8h_1af2f7bd0287726e890b7d465e09fd7f73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;C&gt;&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" kindref="member">GetSizeOfCompactSize</ref>(str.size())<sp/>+<sp/>str.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(str[0]);</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="514" refid="serialize_8h_1adee5a9a0b11fd58c829855619c222ab7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;C&gt;&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" kindref="member">WriteCompactSize</ref>(os,<sp/>str.size());</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str.empty())</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;str[0],<sp/>str.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(str[0]));</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="522" refid="serialize_8h_1aa688c53c27044d715917e33769b4f415" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::basic_string&lt;C&gt;&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" kindref="member">ReadCompactSize</ref>(is);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>str.resize(nSize);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;str[0],<sp/>nSize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(str[0]));</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="534" refid="serialize_8h_1a35c2e36c213f8331ad0cc3c03f88e8d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a3bbd240ce556fd6d0006f77012177cdf" kindref="member">GetSerializeSize_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" kindref="member">GetSizeOfCompactSize</ref>(v.size())<sp/>+<sp/>v.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="540" refid="serialize_8h_1a0b138a9106a3690113f0797571843022" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a3bbd240ce556fd6d0006f77012177cdf" kindref="member">GetSerializeSize_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" kindref="member">GetSizeOfCompactSize</ref>(v.size());</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;::const_iterator<sp/>vi<sp/>=<sp/>v.begin();<sp/>vi<sp/>!=<sp/>v.end();<sp/>++vi)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>((*vi),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nSize;</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="549" refid="serialize_8h_1a335ff86321a72847697b886ec6a73b83" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a3bbd240ce556fd6d0006f77012177cdf" kindref="member">GetSerializeSize_impl</ref>(v,<sp/>nType,<sp/>nVersion,<sp/>T());</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="556" refid="serialize_8h_1a4267253fd8a7173f0a9e6f642ac6538d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1afb0ab8a2a3c9e6accec44b9310665e75" kindref="member">Serialize_impl</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" kindref="member">WriteCompactSize</ref>(os,<sp/>v.size());</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!v.empty())</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;v[0],<sp/>v.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="564" refid="serialize_8h_1a5ad2f90be2a49996f40cabf489e87cc3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1afb0ab8a2a3c9e6accec44b9310665e75" kindref="member">Serialize_impl</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" kindref="member">WriteCompactSize</ref>(os,<sp/>v.size());</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;::const_iterator<sp/>vi<sp/>=<sp/>v.begin();<sp/>vi<sp/>!=<sp/>v.end();<sp/>++vi)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>(*vi),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="572" refid="serialize_8h_1a0d1c9a136a2cc812c3080bd65a20f63c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1afb0ab8a2a3c9e6accec44b9310665e75" kindref="member">Serialize_impl</ref>(os,<sp/>v,<sp/>nType,<sp/>nVersion,<sp/>T());</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="579" refid="serialize_8h_1a92432e5377aca757f1e248516214932d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1ae8594814bba47036e603e447fbfd79ac" kindref="member">Unserialize_impl</ref>(Stream&amp;<sp/>is,<sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>size<sp/>per<sp/>read<sp/>so<sp/>bogus<sp/>size<sp/>value<sp/>won&apos;t<sp/>cause<sp/>out<sp/>of<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>v.clear();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" kindref="member">ReadCompactSize</ref>(is);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>nSize)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blk<sp/>=<sp/>std::min(nSize<sp/>-<sp/>i,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(1<sp/>+<sp/>4999999<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)));</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.resize(i<sp/>+<sp/>blk);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;v[i],<sp/>blk<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>blk;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="595" refid="serialize_8h_1a75bd9f1bb034294d1eb6d602ec98ff59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1ae8594814bba47036e603e447fbfd79ac" kindref="member">Unserialize_impl</ref>(Stream&amp;<sp/>is,<sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;)</highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>v.clear();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" kindref="member">ReadCompactSize</ref>(is);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nMid<sp/>&lt;<sp/>nSize)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMid<sp/>+=<sp/>5000000<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nMid<sp/>&gt;<sp/>nSize)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMid<sp/>=<sp/>nSize;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.resize(nMid);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>nMid;<sp/>i++)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>v[i],<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="613" refid="serialize_8h_1aefdf63d8c997767d3e3535a54f35025c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::vector&lt;T,<sp/>A&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1ae8594814bba47036e603e447fbfd79ac" kindref="member">Unserialize_impl</ref>(is,<sp/>v,<sp/>nType,<sp/>nVersion,<sp/>T());</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>others<sp/>derived<sp/>from<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="serialize_8h_1a111324194564a4e799f5b1ac9b0932eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;)v,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="627" refid="serialize_8h_1a4abc2780ddc1498c4a390f1fb88cfea8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;)v,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;</highlight></codeline>
<codeline lineno="633" refid="serialize_8h_1aef8c207825b645e4156ab2a371101f3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>(std::vector&lt;unsigned<sp/>char&gt;&amp;)v,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="642" refid="serialize_8h_1ad79f12b1ba05119c0d2460699dcf01d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;K,<sp/>T&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(item.first,<sp/>nType,<sp/>nVersion)<sp/>+<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(item.second,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="648" refid="serialize_8h_1ab485c675206b85cf5b2800ce1d3ca2c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;K,<sp/>T&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>item.first,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>item.second,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="655" refid="serialize_8h_1af0fc057388ad1dbd793bccf02282ec18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::pair&lt;K,<sp/>T&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>item.first,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>item.second,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="665" refid="serialize_8h_1ac1fabe16fa95a50b78866fa9f2eb633a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(boost::get&lt;0&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(boost::get&lt;1&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(boost::get&lt;2&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nSize;</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="675" refid="serialize_8h_1a499ddf572293fe1c114b2c1b1c25c5e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>boost::get&lt;0&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>boost::get&lt;1&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>boost::get&lt;2&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="683" refid="serialize_8h_1aa00de3cbf1e973ac2d468e91b79eab2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>boost::get&lt;0&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>boost::get&lt;1&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>boost::get&lt;2&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;</highlight></codeline>
<codeline lineno="694" refid="serialize_8h_1acffc58951c084ec48df3d3a87d3e398a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(boost::get&lt;0&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(boost::get&lt;1&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(boost::get&lt;2&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(boost::get&lt;3&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nSize;</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;</highlight></codeline>
<codeline lineno="705" refid="serialize_8h_1ae185a8090e06661c56a897c09cdf39d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>boost::get&lt;0&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>boost::get&lt;1&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>boost::get&lt;2&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>boost::get&lt;3&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;</highlight></codeline>
<codeline lineno="714" refid="serialize_8h_1a11f168f2ad0355ad6794090c3035b3d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>boost::tuple&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3&gt;&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>boost::get&lt;0&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>boost::get&lt;1&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>boost::get&lt;2&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>boost::get&lt;3&gt;(item),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="726" refid="serialize_8h_1af3b9d5bc8cc267300cf8ca893c51929e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;K,<sp/>T,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" kindref="member">GetSizeOfCompactSize</ref>(m.size());</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;K,<sp/>T,<sp/>Pred,<sp/>A&gt;::const_iterator<sp/>mi<sp/>=<sp/>m.begin();<sp/>mi<sp/>!=<sp/>m.end();<sp/>++mi)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>((*mi),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nSize;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="735" refid="serialize_8h_1a54baab64cf0b60a61c712546dab7305a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;K,<sp/>T,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" kindref="member">WriteCompactSize</ref>(os,<sp/>m.size());</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;K,<sp/>T,<sp/>Pred,<sp/>A&gt;::const_iterator<sp/>mi<sp/>=<sp/>m.begin();<sp/>mi<sp/>!=<sp/>m.end();<sp/>++mi)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>(*mi),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="743" refid="serialize_8h_1acda54e31ea371de4eb0787a3e1565aa5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::map&lt;K,<sp/>T,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>m.clear();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" kindref="member">ReadCompactSize</ref>(is);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;K,<sp/>T,<sp/>Pred,<sp/>A&gt;::iterator<sp/>mi<sp/>=<sp/>m.begin();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nSize;<sp/>i++)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;K,<sp/>T&gt;<sp/>item;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>item,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>=<sp/>m.insert(mi,<sp/>item);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="760" refid="serialize_8h_1af597c56aff2d6291fdc3c56cac1551b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;K,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="serialize_8h_1a404beecbf8d7aec8d2cdac3cbb71e808" kindref="member">GetSizeOfCompactSize</ref>(m.size());</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::set&lt;K,<sp/>Pred,<sp/>A&gt;::const_iterator<sp/>it<sp/>=<sp/>m.begin();<sp/>it<sp/>!=<sp/>m.end();<sp/>++it)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSize<sp/>+=<sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">GetSerializeSize</ref>((*it),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nSize;</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="769" refid="serialize_8h_1a05fbc0a7955ac4f4d7082870474658d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(Stream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;K,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a02cf7f551f8876dcd142e7c6c8a27e3b" kindref="member">WriteCompactSize</ref>(os,<sp/>m.size());</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::set&lt;K,<sp/>Pred,<sp/>A&gt;::const_iterator<sp/>it<sp/>=<sp/>m.begin();<sp/>it<sp/>!=<sp/>m.end();<sp/>++it)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">Serialize</ref>(os,<sp/>(*it),<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="777" refid="serialize_8h_1a229b67f4ffe4f0c3b3c52dc6cff98db3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(Stream&amp;<sp/>is,<sp/>std::set&lt;K,<sp/>Pred,<sp/>A&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion)</highlight></codeline>
<codeline lineno="778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>m.clear();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/><ref refid="serialize_8h_1ae3fd928949b7361accfec79c314aa90f" kindref="member">ReadCompactSize</ref>(is);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::set&lt;K,<sp/>Pred,<sp/>A&gt;::iterator<sp/>it<sp/>=<sp/>m.begin();</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nSize;<sp/>i++)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K<sp/>key;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">Unserialize</ref>(is,<sp/>key,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>m.insert(it,<sp/>key);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Support<sp/>for<sp/>IMPLEMENT_SERIALIZE<sp/>and<sp/>READWRITE<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="class_c_ser_action_get_serialize_size" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_ser_action_get_serialize_size" kindref="compound">CSerActionGetSerializeSize</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment">//class<sp/>CSerActionSerialize<sp/>{<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="comment">//class<sp/>CSerActionUnserialize<sp/>{<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="struct_c_ser_action_serialize" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_ser_action_serialize" kindref="compound">CSerActionSerialize</ref></highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802" refid="struct_c_ser_action_serialize_1a23cb37386f29541f2d3f859f473226a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_c_ser_action_serialize_1a23cb37386f29541f2d3f859f473226a8" kindref="member">ForRead</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal">};</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="struct_c_ser_action_unserialize" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_ser_action_unserialize" kindref="compound">CSerActionUnserialize</ref></highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807" refid="struct_c_ser_action_unserialize_1a7b82400e5924c076b290a7d1ec8f7f34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_c_ser_action_unserialize_1a7b82400e5924c076b290a7d1ec8f7f34" kindref="member">ForRead</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal">};</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="811" refid="serialize_8h_1a9cd643cfa4ca2da679b6f9843bf319aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a9cd643cfa4ca2da679b6f9843bf319aa" kindref="member">SerReadWrite</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/><ref refid="class_c_ser_action_get_serialize_size" kindref="compound">CSerActionGetSerializeSize</ref><sp/>ser_action)</highlight></codeline>
<codeline lineno="812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a48239e478ae730373d1984fe304ca025" kindref="member">return ::GetSerializeSize</ref>(obj,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="817" refid="serialize_8h_1a776251b2973c5c9242ac3478ac1512a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a9cd643cfa4ca2da679b6f9843bf319aa" kindref="member">SerReadWrite</ref>(Stream&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/><ref refid="struct_c_ser_action_serialize" kindref="compound">CSerActionSerialize</ref><sp/>ser_action)</highlight></codeline>
<codeline lineno="818"><highlight class="normal">{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">::Serialize</ref>(s,<sp/>obj,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="824" refid="serialize_8h_1a3f746e0ed1975fa9447ef30050218aa9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serialize_8h_1a9cd643cfa4ca2da679b6f9843bf319aa" kindref="member">SerReadWrite</ref>(Stream&amp;<sp/>s,<sp/>T&amp;<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersion,<sp/><ref refid="struct_c_ser_action_unserialize" kindref="compound">CSerActionUnserialize</ref><sp/>ser_action)</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a6535b70fa93811f2b1df307a424eb317" kindref="member">::Unserialize</ref>(s,<sp/>obj,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="structser__streamplaceholder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structser__streamplaceholder" kindref="compound">ser_streamplaceholder</ref></highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832" refid="structser__streamplaceholder_1a789184cb41dc03b494be3ea0d83d3c3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structser__streamplaceholder_1a789184cb41dc03b494be3ea0d83d3c3c" kindref="member">nType</ref>;</highlight></codeline>
<codeline lineno="833" refid="structser__streamplaceholder_1adcc5fb4893156366e8491e37c59ecd87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structser__streamplaceholder_1adcc5fb4893156366e8491e37c59ecd87" kindref="member">nVersion</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal">};</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="serialize_8h_1a77935f92ff5ba1d71d692166f6ce0c1b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;char,<sp/>zero_after_free_allocator&lt;char&gt;<sp/>&gt;<sp/><ref refid="serialize_8h_1a77935f92ff5ba1d71d692166f6ce0c1b" kindref="member">CSerializeData</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="class_c_size_computer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_size_computer" kindref="compound">CSizeComputer</ref></highlight></codeline>
<codeline lineno="839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="841" refid="class_c_size_computer_1a3ea758bb100dd9ce38071e040cd3c597" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_c_size_computer_1a3ea758bb100dd9ce38071e040cd3c597" kindref="member">nSize</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="844" refid="class_c_size_computer_1a1f166e95dc06a6f3718b2fac9cda18ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_size_computer_1a1f166e95dc06a6f3718b2fac9cda18ee" kindref="member">nType</ref>;</highlight></codeline>
<codeline lineno="845" refid="class_c_size_computer_1a25759db1089e475fcba2f408633dc7bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_size_computer_1a25759db1089e475fcba2f408633dc7bf" kindref="member">nVersion</ref>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="class_c_size_computer_1a475a1a15be285c38c4b94ad0ab0ce73c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_size_computer_1a475a1a15be285c38c4b94ad0ab0ce73c" kindref="member">CSizeComputer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTypeIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVersionIn)<sp/>:<sp/>nSize(0),<sp/>nType(nTypeIn),<sp/>nVersion(nVersionIn)<sp/>{}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849" refid="class_c_size_computer_1ad4b4f5e37acacf894f60c728e694ee89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_size_computer" kindref="compound">CSizeComputer</ref>&amp;<sp/><ref refid="class_c_size_computer_1ad4b4f5e37acacf894f60c728e694ee89" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*psz,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSize)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;nSize<sp/>+=<sp/><ref refid="class_c_size_computer_1a3ea758bb100dd9ce38071e040cd3c597" kindref="member">nSize</ref>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="856" refid="class_c_size_computer_1a03a29c76f82dca1559e7922b35bebd0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_size_computer" kindref="compound">CSizeComputer</ref>&amp;<sp/><ref refid="class_c_size_computer_1a03a29c76f82dca1559e7922b35bebd0d" kindref="member">operator&lt;&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serialize_8h_1a57a07500f5e1eb9589dc8d57bbd73a18" kindref="member">::Serialize</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>obj,<sp/>nType,<sp/>nVersion);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862" refid="class_c_size_computer_1afe9389c4e6ed520192cca477d99ca483" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_c_size_computer_1afe9389c4e6ed520192cca477d99ca483" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_size_computer_1a3ea758bb100dd9ce38071e040cd3c597" kindref="member">nSize</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal">};</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DARKSILK_SERIALIZE_H</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/serialize.h"/>
  </compounddef>
</doxygen>
