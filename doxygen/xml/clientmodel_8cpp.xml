<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="clientmodel_8cpp" kind="file" language="C++">
    <compoundname>clientmodel.cpp</compoundname>
    <includes refid="clientmodel_8h" local="yes">clientmodel.h</includes>
    <includes refid="guiconstants_8h" local="yes">guiconstants.h</includes>
    <includes refid="peertablemodel_8h" local="yes">peertablemodel.h</includes>
    <includes refid="optionsmodel_8h" local="yes">optionsmodel.h</includes>
    <includes refid="addresstablemodel_8h" local="yes">addresstablemodel.h</includes>
    <includes refid="transactiontablemodel_8h" local="yes">transactiontablemodel.h</includes>
    <includes refid="chainparams_8h" local="yes">chainparams.h</includes>
    <includes refid="alert_8h" local="yes">alert.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="ui__interface_8h" local="yes">ui_interface.h</includes>
    <includes refid="stormnodeman_8h" local="yes">stormnodeman.h</includes>
    <includes refid="stormnode-sync_8h" local="yes">stormnode-sync.h</includes>
    <includes local="no">QDateTime</includes>
    <includes local="no">QTimer</includes>
    <includes local="no">QDebug</includes>
    <incdepgraph>
      <node id="43219">
        <label>list</label>
      </node>
      <node id="43188">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="43253">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43251" relation="include">
        </childnode>
      </node>
      <node id="43267">
        <label>netinet/in.h</label>
      </node>
      <node id="43171">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43186" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
      </node>
      <node id="43260">
        <label>arpa/inet.h</label>
      </node>
      <node id="43237">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="43178">
        <label>limits</label>
      </node>
      <node id="43206">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43186" relation="include">
        </childnode>
      </node>
      <node id="43207">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="43208" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43190" relation="include">
        </childnode>
      </node>
      <node id="43170">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="43171" relation="include">
        </childnode>
        <childnode refid="43194" relation="include">
        </childnode>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43197" relation="include">
        </childnode>
        <childnode refid="43198" relation="include">
        </childnode>
        <childnode refid="43234" relation="include">
        </childnode>
        <childnode refid="43232" relation="include">
        </childnode>
      </node>
      <node id="43198">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43199" relation="include">
        </childnode>
        <childnode refid="43200" relation="include">
        </childnode>
        <childnode refid="43201" relation="include">
        </childnode>
        <childnode refid="43210" relation="include">
        </childnode>
        <childnode refid="43212" relation="include">
        </childnode>
        <childnode refid="43231" relation="include">
        </childnode>
      </node>
      <node id="43230">
        <label>openssl/rand.h</label>
      </node>
      <node id="43195">
        <label>assert.h</label>
      </node>
      <node id="43183">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="43266">
        <label>net/if.h</label>
      </node>
      <node id="43290">
        <label>stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="43291" relation="include">
        </childnode>
        <childnode refid="43168" relation="include">
        </childnode>
      </node>
      <node id="43169">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="43170" relation="include">
        </childnode>
        <childnode refid="43235" relation="include">
        </childnode>
        <childnode refid="43240" relation="include">
        </childnode>
        <childnode refid="43171" relation="include">
        </childnode>
        <childnode refid="43255" relation="include">
        </childnode>
      </node>
      <node id="43163">
        <label>/home/dev/ds-160209/src/qt/clientmodel.cpp</label>
        <link refid="clientmodel.cpp"/>
        <childnode refid="43164" relation="include">
        </childnode>
        <childnode refid="43166" relation="include">
        </childnode>
        <childnode refid="43167" relation="include">
        </childnode>
        <childnode refid="43279" relation="include">
        </childnode>
        <childnode refid="43281" relation="include">
        </childnode>
        <childnode refid="43282" relation="include">
        </childnode>
        <childnode refid="43272" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
        <childnode refid="43168" relation="include">
        </childnode>
        <childnode refid="43284" relation="include">
        </childnode>
        <childnode refid="43286" relation="include">
        </childnode>
        <childnode refid="43290" relation="include">
        </childnode>
        <childnode refid="43293" relation="include">
        </childnode>
        <childnode refid="43294" relation="include">
        </childnode>
        <childnode refid="43295" relation="include">
        </childnode>
      </node>
      <node id="43292">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="43293">
        <label>QDateTime</label>
      </node>
      <node id="43252">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="43208" relation="include">
        </childnode>
      </node>
      <node id="43166">
        <label>guiconstants.h</label>
        <link refid="guiconstants_8h"/>
      </node>
      <node id="43165">
        <label>QObject</label>
      </node>
      <node id="43239">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="43288">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="43272" relation="include">
        </childnode>
        <childnode refid="43201" relation="include">
        </childnode>
        <childnode refid="43287" relation="include">
        </childnode>
        <childnode refid="43198" relation="include">
        </childnode>
        <childnode refid="43184" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
      </node>
      <node id="43192">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="43193" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
      </node>
      <node id="43240">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="43241" relation="include">
        </childnode>
        <childnode refid="43169" relation="include">
        </childnode>
        <childnode refid="43195" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43199" relation="include">
        </childnode>
        <childnode refid="43254" relation="include">
        </childnode>
      </node>
      <node id="43189">
        <label>sys/mman.h</label>
      </node>
      <node id="43186">
        <label>stdlib.h</label>
      </node>
      <node id="43274">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="43275" relation="include">
        </childnode>
        <childnode refid="43212" relation="include">
        </childnode>
        <childnode refid="43272" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
        <childnode refid="43199" relation="include">
        </childnode>
      </node>
      <node id="43279">
        <label>optionsmodel.h</label>
        <link refid="optionsmodel_8h"/>
        <childnode refid="43280" relation="include">
        </childnode>
      </node>
      <node id="43199">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="43164">
        <label>clientmodel.h</label>
        <link refid="clientmodel_8h"/>
        <childnode refid="43165" relation="include">
        </childnode>
      </node>
      <node id="43229">
        <label>openssl/crypto.h</label>
      </node>
      <node id="43291">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="43287" relation="include">
        </childnode>
        <childnode refid="43168" relation="include">
        </childnode>
        <childnode refid="43289" relation="include">
        </childnode>
        <childnode refid="43292" relation="include">
        </childnode>
      </node>
      <node id="43263">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="43264" relation="include">
        </childnode>
        <childnode refid="43189" relation="include">
        </childnode>
        <childnode refid="43265" relation="include">
        </childnode>
        <childnode refid="43213" relation="include">
        </childnode>
        <childnode refid="43266" relation="include">
        </childnode>
        <childnode refid="43267" relation="include">
        </childnode>
        <childnode refid="43260" relation="include">
        </childnode>
        <childnode refid="43268" relation="include">
        </childnode>
        <childnode refid="43190" relation="include">
        </childnode>
        <childnode refid="43269" relation="include">
        </childnode>
        <childnode refid="43191" relation="include">
        </childnode>
        <childnode refid="43270" relation="include">
        </childnode>
      </node>
      <node id="43225">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="43203">
        <label>openssl/sha.h</label>
      </node>
      <node id="43270">
        <label>errno.h</label>
      </node>
      <node id="43177">
        <label>cassert</label>
      </node>
      <node id="43196">
        <label>stdexcept</label>
      </node>
      <node id="43212">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="43213" relation="include">
        </childnode>
        <childnode refid="43214" relation="include">
        </childnode>
        <childnode refid="43215" relation="include">
        </childnode>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43216" relation="include">
        </childnode>
        <childnode refid="43171" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
        <childnode refid="43219" relation="include">
        </childnode>
        <childnode refid="43220" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43221" relation="include">
        </childnode>
        <childnode refid="43222" relation="include">
        </childnode>
        <childnode refid="43223" relation="include">
        </childnode>
        <childnode refid="43224" relation="include">
        </childnode>
        <childnode refid="43225" relation="include">
        </childnode>
        <childnode refid="43226" relation="include">
        </childnode>
        <childnode refid="43227" relation="include">
        </childnode>
        <childnode refid="43228" relation="include">
        </childnode>
        <childnode refid="43229" relation="include">
        </childnode>
        <childnode refid="43230" relation="include">
        </childnode>
        <childnode refid="43211" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
      </node>
      <node id="43271">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="43272" relation="include">
        </childnode>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43262" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
      </node>
      <node id="43224">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="43248">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43232" relation="include">
        </childnode>
        <childnode refid="43249" relation="include">
        </childnode>
        <childnode refid="43252" relation="include">
        </childnode>
      </node>
      <node id="43173">
        <label>string</label>
      </node>
      <node id="43276">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43186" relation="include">
        </childnode>
        <childnode refid="43212" relation="include">
        </childnode>
        <childnode refid="43256" relation="include">
        </childnode>
      </node>
      <node id="43175">
        <label>map</label>
      </node>
      <node id="43221">
        <label>boost/thread.hpp</label>
      </node>
      <node id="43273">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="43262" relation="include">
        </childnode>
        <childnode refid="43271" relation="include">
        </childnode>
        <childnode refid="43235" relation="include">
        </childnode>
        <childnode refid="43234" relation="include">
        </childnode>
        <childnode refid="43212" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
      </node>
      <node id="43289">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="43235" relation="include">
        </childnode>
        <childnode refid="43256" relation="include">
        </childnode>
        <childnode refid="43287" relation="include">
        </childnode>
        <childnode refid="43212" relation="include">
        </childnode>
        <childnode refid="43288" relation="include">
        </childnode>
        <childnode refid="43168" relation="include">
        </childnode>
        <childnode refid="43234" relation="include">
        </childnode>
      </node>
      <node id="43284">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="43171" relation="include">
        </childnode>
        <childnode refid="43285" relation="include">
        </childnode>
        <childnode refid="43259" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
      </node>
      <node id="43244">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43245" relation="include">
        </childnode>
        <childnode refid="43212" relation="include">
        </childnode>
        <childnode refid="43223" relation="include">
        </childnode>
        <childnode refid="43248" relation="include">
        </childnode>
        <childnode refid="43253" relation="include">
        </childnode>
      </node>
      <node id="43208">
        <label>stddef.h</label>
      </node>
      <node id="43200">
        <label>boost/variant.hpp</label>
      </node>
      <node id="43269">
        <label>netdb.h</label>
      </node>
      <node id="43264">
        <label>sys/fcntl.h</label>
      </node>
      <node id="43241">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="43242" relation="include">
        </childnode>
      </node>
      <node id="43251">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43250" relation="include">
        </childnode>
      </node>
      <node id="43255">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="43172">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
        <childnode refid="43176" relation="include">
        </childnode>
        <childnode refid="43177" relation="include">
        </childnode>
        <childnode refid="43178" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43180" relation="include">
        </childnode>
        <childnode refid="43181" relation="include">
        </childnode>
        <childnode refid="43182" relation="include">
        </childnode>
        <childnode refid="43183" relation="include">
        </childnode>
        <childnode refid="43184" relation="include">
        </childnode>
        <childnode refid="43192" relation="include">
        </childnode>
      </node>
      <node id="43190">
        <label>limits.h</label>
      </node>
      <node id="43236">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="43261">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="43176" relation="include">
        </childnode>
        <childnode refid="43257" relation="include">
        </childnode>
      </node>
      <node id="43215">
        <label>sys/resource.h</label>
      </node>
      <node id="43226">
        <label>openssl/bio.h</label>
      </node>
      <node id="43259">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="43262">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43263" relation="include">
        </childnode>
      </node>
      <node id="43283">
        <label>alert.h</label>
        <link refid="alert_8h"/>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43235" relation="include">
        </childnode>
        <childnode refid="43194" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
        <childnode refid="43176" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
      </node>
      <node id="43202">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="43194" relation="include">
        </childnode>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43203" relation="include">
        </childnode>
        <childnode refid="43204" relation="include">
        </childnode>
        <childnode refid="43205" relation="include">
        </childnode>
        <childnode refid="43206" relation="include">
        </childnode>
        <childnode refid="43207" relation="include">
        </childnode>
        <childnode refid="43209" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
      </node>
      <node id="43268">
        <label>ifaddrs.h</label>
      </node>
      <node id="43231">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="43212" relation="include">
        </childnode>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43186" relation="include">
        </childnode>
        <childnode refid="43232" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
        <childnode refid="43233" relation="include">
        </childnode>
      </node>
      <node id="43213">
        <label>sys/types.h</label>
      </node>
      <node id="43247">
        <label>ios</label>
      </node>
      <node id="43187">
        <label>string.h</label>
      </node>
      <node id="43193">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="43181">
        <label>cstdio</label>
      </node>
      <node id="43238">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="43228">
        <label>openssl/buffer.h</label>
      </node>
      <node id="43182">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="43168">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="43169" relation="include">
        </childnode>
        <childnode refid="43256" relation="include">
        </childnode>
        <childnode refid="43198" relation="include">
        </childnode>
        <childnode refid="43245" relation="include">
        </childnode>
        <childnode refid="43243" relation="include">
        </childnode>
        <childnode refid="43274" relation="include">
        </childnode>
        <childnode refid="43219" relation="include">
        </childnode>
        <childnode refid="43254" relation="include">
        </childnode>
      </node>
      <node id="43223">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="43286">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="43235" relation="include">
        </childnode>
        <childnode refid="43256" relation="include">
        </childnode>
        <childnode refid="43287" relation="include">
        </childnode>
        <childnode refid="43212" relation="include">
        </childnode>
        <childnode refid="43288" relation="include">
        </childnode>
        <childnode refid="43168" relation="include">
        </childnode>
        <childnode refid="43289" relation="include">
        </childnode>
      </node>
      <node id="43254">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="43201">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="43202" relation="include">
        </childnode>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43194" relation="include">
        </childnode>
        <childnode refid="43196" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
      </node>
      <node id="43295">
        <label>QDebug</label>
      </node>
      <node id="43191">
        <label>unistd.h</label>
      </node>
      <node id="43294">
        <label>QTimer</label>
      </node>
      <node id="43174">
        <label>vector</label>
      </node>
      <node id="43210">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43194" relation="include">
        </childnode>
        <childnode refid="43211" relation="include">
        </childnode>
        <childnode refid="43196" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
      </node>
      <node id="43256">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="43257" relation="include">
        </childnode>
        <childnode refid="43258" relation="include">
        </childnode>
        <childnode refid="43199" relation="include">
        </childnode>
        <childnode refid="43259" relation="include">
        </childnode>
        <childnode refid="43230" relation="include">
        </childnode>
        <childnode refid="43260" relation="include">
        </childnode>
        <childnode refid="43261" relation="include">
        </childnode>
        <childnode refid="43262" relation="include">
        </childnode>
        <childnode refid="43271" relation="include">
        </childnode>
        <childnode refid="43273" relation="include">
        </childnode>
        <childnode refid="43202" relation="include">
        </childnode>
        <childnode refid="43245" relation="include">
        </childnode>
      </node>
      <node id="43204">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="43222">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="43220">
        <label>utility</label>
      </node>
      <node id="43242">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="43170" relation="include">
        </childnode>
        <childnode refid="43243" relation="include">
        </childnode>
      </node>
      <node id="43218">
        <label>sstream</label>
      </node>
      <node id="43285">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="43287">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="43184" relation="include">
        </childnode>
        <childnode refid="43201" relation="include">
        </childnode>
        <childnode refid="43196" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
      </node>
      <node id="43227">
        <label>openssl/evp.h</label>
      </node>
      <node id="43216">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="43177" relation="include">
        </childnode>
        <childnode refid="43217" relation="include">
        </childnode>
        <childnode refid="43218" relation="include">
        </childnode>
        <childnode refid="43196" relation="include">
        </childnode>
      </node>
      <node id="43179">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="43167">
        <label>peertablemodel.h</label>
        <link refid="peertablemodel_8h"/>
        <childnode refid="43168" relation="include">
        </childnode>
        <childnode refid="43256" relation="include">
        </childnode>
        <childnode refid="43277" relation="include">
        </childnode>
        <childnode refid="43278" relation="include">
        </childnode>
      </node>
      <node id="43245">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="43184" relation="include">
        </childnode>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43246" relation="include">
        </childnode>
        <childnode refid="43195" relation="include">
        </childnode>
        <childnode refid="43247" relation="include">
        </childnode>
        <childnode refid="43178" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
        <childnode refid="43176" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43187" relation="include">
        </childnode>
        <childnode refid="43220" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
      </node>
      <node id="43209">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43208" relation="include">
        </childnode>
        <childnode refid="43190" relation="include">
        </childnode>
      </node>
      <node id="43282">
        <label>transactiontablemodel.h</label>
        <link refid="transactiontablemodel_8h"/>
        <childnode refid="43277" relation="include">
        </childnode>
        <childnode refid="43278" relation="include">
        </childnode>
      </node>
      <node id="43214">
        <label>sys/time.h</label>
      </node>
      <node id="43217">
        <label>iostream</label>
      </node>
      <node id="43257">
        <label>deque</label>
      </node>
      <node id="43194">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="43195" relation="include">
        </childnode>
        <childnode refid="43180" relation="include">
        </childnode>
        <childnode refid="43196" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
      </node>
      <node id="43265">
        <label>sys/socket.h</label>
      </node>
      <node id="43250">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="43195" relation="include">
        </childnode>
        <childnode refid="43208" relation="include">
        </childnode>
        <childnode refid="43187" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
      </node>
      <node id="43258">
        <label>boost/array.hpp</label>
      </node>
      <node id="43211">
        <label>openssl/bn.h</label>
      </node>
      <node id="43243">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="43244" relation="include">
        </childnode>
        <childnode refid="43168" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43220" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
      </node>
      <node id="43234">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="43179" relation="include">
        </childnode>
      </node>
      <node id="43184">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="43185" relation="include">
        </childnode>
        <childnode refid="43187" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43188" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
        <childnode refid="43189" relation="include">
        </childnode>
        <childnode refid="43190" relation="include">
        </childnode>
        <childnode refid="43191" relation="include">
        </childnode>
      </node>
      <node id="43280">
        <label>QAbstractListModel</label>
      </node>
      <node id="43272">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="43210" relation="include">
        </childnode>
        <childnode refid="43194" relation="include">
        </childnode>
        <childnode refid="43174" relation="include">
        </childnode>
      </node>
      <node id="43176">
        <label>set</label>
      </node>
      <node id="43246">
        <label>algorithm</label>
      </node>
      <node id="43278">
        <label>QStringList</label>
      </node>
      <node id="43205">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="43179" relation="include">
        </childnode>
        <childnode refid="43186" relation="include">
        </childnode>
      </node>
      <node id="43197">
        <label>util.h</label>
      </node>
      <node id="43232">
        <label>stdio.h</label>
      </node>
      <node id="43185">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="43186" relation="include">
        </childnode>
      </node>
      <node id="43180">
        <label>cstring</label>
      </node>
      <node id="43281">
        <label>addresstablemodel.h</label>
        <link refid="addresstablemodel_8h"/>
        <childnode refid="43277" relation="include">
        </childnode>
        <childnode refid="43278" relation="include">
        </childnode>
      </node>
      <node id="43235">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="43236" relation="include">
        </childnode>
        <childnode refid="43237" relation="include">
        </childnode>
        <childnode refid="43238" relation="include">
        </childnode>
        <childnode refid="43188" relation="include">
        </childnode>
        <childnode refid="43239" relation="include">
        </childnode>
      </node>
      <node id="43277">
        <label>QAbstractTableModel</label>
      </node>
      <node id="43233">
        <label>inttypes.h</label>
      </node>
      <node id="43249">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="43250" relation="include">
        </childnode>
        <childnode refid="43251" relation="include">
        </childnode>
      </node>
      <node id="43275">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="43170" relation="include">
        </childnode>
        <childnode refid="43209" relation="include">
        </childnode>
        <childnode refid="43276" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="clientmodel_8cpp_1a62ed25c3b34918a9550a90f4c4fb0dd5" prot="public" static="yes" mutable="no">
        <type>const <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>const int64_t nClientStartupTime</definition>
        <argsstring></argsstring>
        <name>nClientStartupTime</name>
        <initializer>= <ref refid="util_8h_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/qt/clientmodel.cpp" line="25" column="1" bodyfile="/home/dev/ds-160209/src/qt/clientmodel.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="clientmodel_8cpp_1a2a0f0b996679bcf94acb2c877ee2e497" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ShowProgress</definition>
        <argsstring>(ClientModel *clientmodel, const std::string &amp;title, int nProgress)</argsstring>
        <name>ShowProgress</name>
        <param>
          <type><ref refid="class_client_model" kindref="compound">ClientModel</ref> *</type>
          <declname>clientmodel</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nProgress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/qt/clientmodel.cpp" line="264" column="1" bodyfile="/home/dev/ds-160209/src/qt/clientmodel.cpp" bodystart="264" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="clientmodel_8cpp_1ab423505e8b4ea206176a9a97521e2e6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void NotifyNumConnectionsChanged</definition>
        <argsstring>(ClientModel *clientmodel, int newNumConnections)</argsstring>
        <name>NotifyNumConnectionsChanged</name>
        <param>
          <type><ref refid="class_client_model" kindref="compound">ClientModel</ref> *</type>
          <declname>clientmodel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newNumConnections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/qt/clientmodel.cpp" line="272" column="1" bodyfile="/home/dev/ds-160209/src/qt/clientmodel.cpp" bodystart="272" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="clientmodel_8cpp_1a56d7176c1c1b26f7108c096790d136d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void NotifyAlertChanged</definition>
        <argsstring>(ClientModel *clientmodel, const uint256 &amp;hash, ChangeType status)</argsstring>
        <name>NotifyAlertChanged</name>
        <param>
          <type><ref refid="class_client_model" kindref="compound">ClientModel</ref> *</type>
          <declname>clientmodel</declname>
        </param>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969" kindref="member">ChangeType</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/qt/clientmodel.cpp" line="287" column="1" bodyfile="/home/dev/ds-160209/src/qt/clientmodel.cpp" bodystart="287" bodyend="293"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clientmodel_8h" kindref="compound">clientmodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="guiconstants_8h" kindref="compound">guiconstants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="peertablemodel_8h" kindref="compound">peertablemodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="optionsmodel_8h" kindref="compound">optionsmodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="addresstablemodel_8h" kindref="compound">addresstablemodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="transactiontablemodel_8h" kindref="compound">transactiontablemodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chainparams_8h" kindref="compound">chainparams.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="alert_8h" kindref="compound">alert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui__interface_8h" kindref="compound">ui_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeman_8h" kindref="compound">stormnodeman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-sync_8h" kindref="compound">stormnode-sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDateTime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="i2p_8h" kindref="compound">i2p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nClientStartupTime<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_client_model_1aec1d32d5dc8c094eba66036a19a22854" refkind="member"><highlight class="normal"><ref refid="class_client_model_1aec1d32d5dc8c094eba66036a19a22854" kindref="member">ClientModel::ClientModel</ref>(<ref refid="class_options_model" kindref="compound">OptionsModel</ref><sp/>*optionsModel,<sp/>QObject<sp/>*parent)<sp/>:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject(parent),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>optionsModel(optionsModel),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>peerTableModel(0),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>cachedNumBlocks(0),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>cachedStormnodeCountString(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>numBlocksAtStartup(-1),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>pollTimer(0)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>peerTableModel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_peer_table_model" kindref="compound">PeerTableModel</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>pollTimer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QTimer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(pollTimer,<sp/>SIGNAL(timeout()),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_client_model_1a82d434ebd032c00736e043ce2d36ac5e" kindref="member">updateTimer</ref>()));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>pollTimer-&gt;start(MODEL_UPDATE_DELAY);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>pollSnTimer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QTimer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(pollSnTimer,<sp/>SIGNAL(timeout()),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_client_model_1a52aad7741f3c1d1fb4f6177fbf2ae45a" kindref="member">updateSnTimer</ref>()));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>update<sp/>as<sp/>frequent<sp/>as<sp/>data<sp/>for<sp/>balances/txes/blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>pollSnTimer-&gt;start(MODEL_UPDATE_DELAY<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>subscribeToCoreSignals();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_client_model_1ab20086c4e6220c59b8464ee0e3fbb9da" refkind="member"><highlight class="normal"><ref refid="class_client_model_1ab20086c4e6220c59b8464ee0e3fbb9da" kindref="member">ClientModel::~ClientModel</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>unsubscribeFromCoreSignals();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_client_model_1a46a5b1e03c1dfdf151e440abc47946c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1a46a5b1e03c1dfdf151e440abc47946c7" kindref="member">ClientModel::getNumConnections</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="55"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="net_8cpp_1aa5a11f8873e230cea77bc7e91ee51918" kindref="member">vNodes</ref>.size();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_client_model_1a7d932efdb3a5722ff32f99abb3ab0325" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_client_model_1a7d932efdb3a5722ff32f99abb3ab0325" kindref="member">ClientModel::getStormnodeCountString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="60"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::number((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>/<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_client_model_1a9c298b0c2eb9c8e9ff18c6ff37725b0a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1a9c298b0c2eb9c8e9ff18c6ff37725b0a" kindref="member">ClientModel::getNumBlocks</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a843f1984796a7e44a9e23fccd6a8af34" kindref="member">nBestHeight</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_client_model_1a6bc7b2b076e7d4f999f189b6db74d909" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1a6bc7b2b076e7d4f999f189b6db74d909" kindref="member">ClientModel::getNumBlocksAtStartup</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numBlocksAtStartup<sp/>==<sp/>-1)<sp/>numBlocksAtStartup<sp/>=<sp/><ref refid="class_client_model_1a9c298b0c2eb9c8e9ff18c6ff37725b0a" kindref="member">getNumBlocks</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numBlocksAtStartup;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_client_model_1a175c96ffc4d793777316e36c501a7f94" refkind="member"><highlight class="normal">quint64<sp/><ref refid="class_client_model_1a175c96ffc4d793777316e36c501a7f94" kindref="member">ClientModel::getTotalBytesRecv</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="77"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_node_1a1988b63b48fdc9b72014bdf9588b0168" kindref="member">CNode::GetTotalBytesRecv</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_client_model_1a4229224bf8a2df52e44438a449da6ba3" refkind="member"><highlight class="normal">quint64<sp/><ref refid="class_client_model_1a4229224bf8a2df52e44438a449da6ba3" kindref="member">ClientModel::getTotalBytesSent</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_node_1af318a64e7ddad50d1e1b6fc123a5f0b9" kindref="member">CNode::GetTotalBytesSent</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_client_model_1a3dd65362947749364c48ff53a37820db" refkind="member"><highlight class="normal">QDateTime<sp/><ref refid="class_client_model_1a3dd65362947749364c48ff53a37820db" kindref="member">ClientModel::getLastBlockDate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QDateTime::fromTime_t(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1ab63b774ae798f5f9e54b400ac8b5ef4b" kindref="member">GetBlockTime</ref>());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QDateTime::fromTime_t(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().GenesisBlock().nTime);<sp/></highlight><highlight class="comment">//<sp/>Genesis<sp/>block&apos;s<sp/>time<sp/>of<sp/>current<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_client_model_1a82d434ebd032c00736e043ce2d36ac5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1a82d434ebd032c00736e043ce2d36ac5e" kindref="member">ClientModel::updateTimer</ref>()</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>required<sp/>lock<sp/>upfront.<sp/>This<sp/>avoids<sp/>the<sp/>GUI<sp/>from<sp/>getting<sp/>stuck<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>periodical<sp/>polls<sp/>if<sp/>the<sp/>core<sp/>is<sp/>holding<sp/>the<sp/>locks<sp/>for<sp/>a<sp/>longer<sp/>time<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>example,<sp/>during<sp/>a<sp/>wallet<sp/>rescan.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>lockMain);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lockMain)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>quantities<sp/>(such<sp/>as<sp/>number<sp/>of<sp/>blocks)<sp/>change<sp/>so<sp/>fast<sp/>that<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>be<sp/>notified<sp/>for<sp/>each<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Periodically<sp/>check<sp/>and<sp/>update<sp/>with<sp/>a<sp/>timer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newNumBlocks<sp/>=<sp/><ref refid="class_client_model_1a9c298b0c2eb9c8e9ff18c6ff37725b0a" kindref="member">getNumBlocks</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cachedNumBlocks<sp/>!=<sp/>newNumBlocks)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cachedNumBlocks<sp/>=<sp/>newNumBlocks;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_client_model_1a649c53bba0c617d026cdcd22c243fa26" kindref="member">numBlocksChanged</ref>(newNumBlocks);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_client_model_1a06dd7e0e518b70e73684ca679bdf93b5" kindref="member">bytesChanged</ref>(<ref refid="class_client_model_1a175c96ffc4d793777316e36c501a7f94" kindref="member">getTotalBytesRecv</ref>(),<sp/><ref refid="class_client_model_1a4229224bf8a2df52e44438a449da6ba3" kindref="member">getTotalBytesSent</ref>());</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_client_model_1a52aad7741f3c1d1fb4f6177fbf2ae45a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1a52aad7741f3c1d1fb4f6177fbf2ae45a" kindref="member">ClientModel::updateSnTimer</ref>()</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>required<sp/>lock<sp/>upfront.<sp/>This<sp/>avoids<sp/>the<sp/>GUI<sp/>from<sp/>getting<sp/>stuck<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>periodical<sp/>polls<sp/>if<sp/>the<sp/>core<sp/>is<sp/>holding<sp/>the<sp/>locks<sp/>for<sp/>a<sp/>longer<sp/>time<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>example,<sp/>during<sp/>a<sp/>wallet<sp/>rescan.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>lockMain);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lockMain)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>newStormnodeCountString<sp/>=<sp/><ref refid="class_client_model_1a7d932efdb3a5722ff32f99abb3ab0325" kindref="member">getStormnodeCountString</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cachedStormnodeCountString<sp/>!=<sp/>newStormnodeCountString)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cachedStormnodeCountString<sp/>=<sp/>newStormnodeCountString;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_client_model_1a02aa81bb6710add3a3e4ec2ac88616c6" kindref="member">strStormnodesChanged</ref>(cachedStormnodeCountString);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_client_model_1a75f5a1a83e65aeb8fa01140584904967" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1a75f5a1a83e65aeb8fa01140584904967" kindref="member">ClientModel::updateNumConnections</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numConnections)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_client_model_1a8eea0203366271384b0bf62f1f39a56c" kindref="member">numConnectionsChanged</ref>(numConnections);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_client_model_1a16758b18ded91ceba202d6023cad4b51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1a16758b18ded91ceba202d6023cad4b51" kindref="member">ClientModel::updateAlert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>error<sp/>message<sp/>notification<sp/>for<sp/>new<sp/>alert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>==<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969ae975c67c7f3a5386de0bbde38221b32f" kindref="member">CT_NEW</ref>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash_256;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_256.<ref refid="classbase__uint_1ade1a897fac931f28f54998c92c797228" kindref="member">SetHex</ref>(hash.toStdString());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_alert" kindref="compound">CAlert</ref><sp/>alert<sp/>=<sp/><ref refid="class_c_alert_1aa37df9d177a6841ec5fa1e611c42b968" kindref="member">CAlert::getAlertByHash</ref>(hash_256);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!alert.<ref refid="class_c_alert_1ae7e110993e592a1a4f99379ab4fcfa08" kindref="member">IsNull</ref>())</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_client_model_1a67d8c0971df370d8098960df3d51a645" kindref="member">message</ref>(tr(</highlight><highlight class="stringliteral">&quot;Network<sp/>Alert&quot;</highlight><highlight class="normal">),<sp/>QString::fromStdString(alert.<ref refid="class_c_unsigned_alert_1a97cfbf9a49b770bb84e49389ac1489c2" kindref="member">strStatusBar</ref>),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1a54415d26bda61103f9a08367ff6a2675" kindref="member">CClientUIInterface::ICON_ERROR</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_client_model_1ae40a55475e8a39d928ce861e67f5497f" kindref="member">alertsChanged</ref>(<ref refid="class_client_model_1ae44eb0943b8528d5a0b22d063e5cc95c" kindref="member">getStatusBarWarnings</ref>());</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_client_model_1a019ce3b2d978d5bef4299eb381a3838f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1a019ce3b2d978d5bef4299eb381a3838f" kindref="member">ClientModel::isTestNet</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="chainparams_8h_1abc8c1af875107f5eac0f327bd3b8363d" kindref="member">TestNet</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_client_model_1afc3389cd7eef94a0f20b6913beb05f40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1afc3389cd7eef94a0f20b6913beb05f40" kindref="member">ClientModel::inInitialBlockDownload</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="164"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="chain_8cpp_1a5edcd96316574fd4a7f3ae0922a5cfd6" kindref="member">IsInitialBlockDownload</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_client_model_1aaf4587934ea90ba6ceeee4e4a950ab6b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1aaf4587934ea90ba6ceeee4e4a950ab6b" kindref="member">ClientModel::isImporting</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="169"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1aaf87d0dd26c4a7c9bcc5bdd1127e8637" kindref="member">fImporting</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="class_client_model_1ae44eb0943b8528d5a0b22d063e5cc95c" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_client_model_1ae44eb0943b8528d5a0b22d063e5cc95c" kindref="member">ClientModel::getStatusBarWarnings</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="174"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromStdString(<ref refid="main_8cpp_1a70b1d1b79f1c760e65c960713b87b732" kindref="member">GetWarnings</ref>(</highlight><highlight class="stringliteral">&quot;statusbar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_client_model_1ae8da1e2eabfbbcc49a7eed821908bdb6" refkind="member"><highlight class="normal"><ref refid="class_options_model" kindref="compound">OptionsModel</ref><sp/>*<ref refid="class_client_model_1ae8da1e2eabfbbcc49a7eed821908bdb6" kindref="member">ClientModel::getOptionsModel</ref>()</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>optionsModel;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="class_client_model_1a643fc112ce94f50ac7187ecdf3c75360" refkind="member"><highlight class="normal"><ref refid="class_peer_table_model" kindref="compound">PeerTableModel</ref><sp/>*<ref refid="class_client_model_1a643fc112ce94f50ac7187ecdf3c75360" kindref="member">ClientModel::getPeerTableModel</ref>()</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>peerTableModel;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">QString<sp/>ClientModel::formatI2PNativeFullVersion()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="190"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromStdString(FormatI2PNativeFullVersion());</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClientModel::updateNumI2PConnections(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numI2PConnections)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/>numI2PConnectionsChanged(numI2PConnections);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ClientModel::getNumI2PConnections()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="200"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nI2PNodeCount;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">QString<sp/>ClientModel::getPublicI2PKey()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromStdString(<ref refid="class_i2_p_session_1a0b2a285f34224a7fdc8ffcb0d1f6d48e" kindref="member">I2PSession::Instance</ref>().getMyDestination().pub);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">QString<sp/>ClientModel::getPrivateI2PKey()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="210"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromStdString(<ref refid="class_i2_p_session_1a0b2a285f34224a7fdc8ffcb0d1f6d48e" kindref="member">I2PSession::Instance</ref>().getMyDestination().priv);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ClientModel::isI2PAddressGenerated()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="215"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i2_p_session_1a0b2a285f34224a7fdc8ffcb0d1f6d48e" kindref="member">I2PSession::Instance</ref>().<ref refid="class_s_a_m_1_1_stream_session_adapter_1a80d5e268298b1970dbb1119df2bc76d5" kindref="member">getMyDestination</ref>().<ref refid="struct_s_a_m_1_1_full_destination_1a1331a1c5cc053781fa127c0c23bb7b9b" kindref="member">isGenerated</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ClientModel::isI2POnly()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="220"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsI2POnly();</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">QString<sp/>ClientModel::getB32Address(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>destination)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="225"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromStdString(<ref refid="class_i2_p_session_1a4daa60a1a5767f354ebc5af8cabc4691" kindref="member">I2PSession::GenerateB32AddressFromDestination</ref>(destination.toStdString()));</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClientModel::generateI2PDestination(QString&amp;<sp/>pub,<sp/>QString&amp;<sp/>priv)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="230"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_a_m_1_1_full_destination" kindref="compound">SAM::FullDestination</ref><sp/>generatedDest<sp/>=<sp/><ref refid="class_i2_p_session_1a0b2a285f34224a7fdc8ffcb0d1f6d48e" kindref="member">I2PSession::Instance</ref>().<ref refid="class_s_a_m_1_1_stream_session_adapter_1a62c02a359e9e36459f13180189bed974" kindref="member">destGenerate</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>pub<sp/>=<sp/>QString::fromStdString(generatedDest.<ref refid="struct_s_a_m_1_1_full_destination_1abd0be9a7b3b430ca750f1e876f2d6b4b" kindref="member">pub</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>priv<sp/>=<sp/>QString::fromStdString(generatedDest.<ref refid="struct_s_a_m_1_1_full_destination_1a9ce0281e2f9cd55dcfc773c7fbd09f0f" kindref="member">priv</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_client_model_1a1c93d11fd03ef9aabf9b694e73698710" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_client_model_1a1c93d11fd03ef9aabf9b694e73698710" kindref="member">ClientModel::formatFullVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="239"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromStdString(<ref refid="util_8cpp_1ac2170cca99e9347171fca492ae533d96" kindref="member">FormatFullVersion</ref>());</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="class_client_model_1a8b7886e6acbb255dab6cbc297bb67a22" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_client_model_1a8b7886e6acbb255dab6cbc297bb67a22" kindref="member">ClientModel::formatBuildDate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="244"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromStdString(<ref refid="version_8h_1a9d36ad6318ca298d6b7d38701212ce20" kindref="member">CLIENT_DATE</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="class_client_model_1ab3b37f93614c973c8b39295eeaa7bfc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_client_model_1ab3b37f93614c973c8b39295eeaa7bfc1" kindref="member">ClientModel::isReleaseVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="249"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="clientversion_8h_1a025f9205720e2c4c155eefb01fd150ba" kindref="member">CLIENT_VERSION_IS_RELEASE</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="class_client_model_1a6c7619b3dbe33ce32456ec1f7a17f454" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_client_model_1a6c7619b3dbe33ce32456ec1f7a17f454" kindref="member">ClientModel::clientName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="254"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString::fromStdString(<ref refid="version_8h_1ad087f1f283f087089d3d86d1a196a5cb" kindref="member">CLIENT_NAME</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="class_client_model_1a9a6238dec8eb12b7d742ce1879a92ec8" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_client_model_1a9a6238dec8eb12b7d742ce1879a92ec8" kindref="member">ClientModel::formatClientStartupTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="259"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QDateTime::fromTime_t(nClientStartupTime).toString();</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handlers<sp/>for<sp/>core<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShowProgress(<ref refid="class_client_model" kindref="compound">ClientModel</ref><sp/>*clientmodel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;title,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nProgress)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emits<sp/>signal<sp/>&quot;showProgress&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(clientmodel,<sp/></highlight><highlight class="stringliteral">&quot;showProgress&quot;</highlight><highlight class="normal">,<sp/>Qt::QueuedConnection,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(QString,<sp/>QString::fromStdString(title)),</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>nProgress));</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NotifyNumConnectionsChanged(<ref refid="class_client_model" kindref="compound">ClientModel</ref><sp/>*clientmodel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newNumConnections)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Too<sp/>noisy:<sp/>qDebug()<sp/>&lt;&lt;<sp/>&quot;NotifyNumConnectionsChanged<sp/>:<sp/>&quot;<sp/>+<sp/>QString::number(newNumConnections);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(clientmodel,<sp/></highlight><highlight class="stringliteral">&quot;updateNumConnections&quot;</highlight><highlight class="normal">,<sp/>Qt::QueuedConnection,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>newNumConnections));</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NotifyNumI2PConnectionsChanged(<ref refid="class_client_model" kindref="compound">ClientModel</ref><sp/>*clientmodel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newNumI2PConnections)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(clientmodel,<sp/></highlight><highlight class="stringliteral">&quot;updateNumI2PConnections&quot;</highlight><highlight class="normal">,<sp/>Qt::QueuedConnection,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>newNumI2PConnections));</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NotifyAlertChanged(<ref refid="class_client_model" kindref="compound">ClientModel</ref><sp/>*clientmodel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>&amp;<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/><ref refid="ui__interface_8h_1a293ba931937e469a6327b8d6b4872969" kindref="member">ChangeType</ref><sp/>status)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NotifyAlertChanged<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::fromStdString(hash.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>status=&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(status);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(clientmodel,<sp/></highlight><highlight class="stringliteral">&quot;updateAlert&quot;</highlight><highlight class="normal">,<sp/>Qt::QueuedConnection,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(QString,<sp/>QString::fromStdString(hash.<ref refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" kindref="member">GetHex</ref>())),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>status));</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClientModel::subscribeToCoreSignals()</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>signals<sp/>to<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.<ref refid="class_c_client_u_i_interface_1a64e516e507dd74f3639c51dffa645af2" kindref="member">ShowProgress</ref>.connect(boost::bind(ShowProgress,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.<ref refid="class_c_client_u_i_interface_1a496995d44db8dc3e3ef84d345e25967d" kindref="member">NotifyNumConnectionsChanged</ref>.connect(boost::bind(NotifyNumConnectionsChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.<ref refid="class_c_client_u_i_interface_1a2c42ebdda06512513445cd86881b157a" kindref="member">NotifyAlertChanged</ref>.connect(boost::bind(NotifyAlertChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.NotifyNumI2PConnectionsChanged.connect(boost::bind(NotifyNumI2PConnectionsChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClientModel::unsubscribeFromCoreSignals()</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disconnect<sp/>signals<sp/>from<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.<ref refid="class_c_client_u_i_interface_1a64e516e507dd74f3639c51dffa645af2" kindref="member">ShowProgress</ref>.disconnect(boost::bind(ShowProgress,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.<ref refid="class_c_client_u_i_interface_1a496995d44db8dc3e3ef84d345e25967d" kindref="member">NotifyNumConnectionsChanged</ref>.disconnect(boost::bind(NotifyNumConnectionsChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.<ref refid="class_c_client_u_i_interface_1a2c42ebdda06512513445cd86881b157a" kindref="member">NotifyAlertChanged</ref>.disconnect(boost::bind(NotifyAlertChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_NATIVE_I2P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.NotifyNumI2PConnectionsChanged.disconnect(boost::bind(NotifyNumI2PConnectionsChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/qt/clientmodel.cpp"/>
  </compounddef>
</doxygen>
