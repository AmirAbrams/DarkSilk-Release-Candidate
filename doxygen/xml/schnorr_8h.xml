<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="schnorr_8h" kind="file" language="C++">
    <compoundname>schnorr.h</compoundname>
    <includes refid="scalar_8h" local="yes">scalar.h</includes>
    <includes refid="group_8h" local="yes">group.h</includes>
    <includedby refid="schnorr__impl_8h" local="yes">/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr_impl.h</includedby>
    <incdepgraph>
      <node id="52013">
        <label>scalar.h</label>
        <link refid="scalar_8h"/>
        <childnode refid="52014" relation="include">
        </childnode>
      </node>
      <node id="52012">
        <label>/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr.h</label>
        <link refid="schnorr.h"/>
        <childnode refid="52013" relation="include">
        </childnode>
        <childnode refid="52015" relation="include">
        </childnode>
      </node>
      <node id="52014">
        <label>num.h</label>
        <link refid="num_8h"/>
      </node>
      <node id="52015">
        <label>group.h</label>
        <link refid="group_8h"/>
        <childnode refid="52014" relation="include">
        </childnode>
        <childnode refid="52016" relation="include">
        </childnode>
      </node>
      <node id="52016">
        <label>field.h</label>
        <link refid="field_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="52017">
        <label>/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr.h</label>
        <link refid="schnorr.h"/>
        <childnode refid="52018" relation="include">
        </childnode>
      </node>
      <node id="52018">
        <label>/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr_impl.h</label>
        <link refid="schnorr__impl_8h"/>
        <childnode refid="52019" relation="include">
        </childnode>
      </node>
      <node id="52019">
        <label>/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/main_impl.h</label>
        <link refid="schnorr_2main__impl_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="schnorr_8h_1a4543078e8c14fe94160f35b293dff0e4" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* secp256k1_schnorr_msghash) (unsigned char *h32, const unsigned char *r32, const unsigned char *msg32)</definition>
        <argsstring>)(unsigned char *h32, const unsigned char *r32, const unsigned char *msg32)</argsstring>
        <name>secp256k1_schnorr_msghash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr.h" line="13" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="schnorr_8h_1ab58ca77446a7d8daff985d07d43e7175" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int secp256k1_schnorr_sig_sign</definition>
        <argsstring>(const secp256k1_ecmult_gen_context *ctx, unsigned char *sig64, const secp256k1_scalar *key, const secp256k1_scalar *nonce, const secp256k1_ge *pubnonce, secp256k1_schnorr_msghash hash, const unsigned char *msg32)</argsstring>
        <name>secp256k1_schnorr_sig_sign</name>
        <param>
          <type>const <ref refid="structsecp256k1__ecmult__gen__context" kindref="compound">secp256k1_ecmult_gen_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>sig64</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref> *</type>
          <declname>nonce</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__ge" kindref="compound">secp256k1_ge</ref> *</type>
          <declname>pubnonce</declname>
        </param>
        <param>
          <type><ref refid="schnorr_8h_1a4543078e8c14fe94160f35b293dff0e4" kindref="member">secp256k1_schnorr_msghash</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>msg32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="schnorr_8h_1ad8ac32b20746524ea3b97ab609117daa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int secp256k1_schnorr_sig_verify</definition>
        <argsstring>(const secp256k1_ecmult_context *ctx, const unsigned char *sig64, const secp256k1_ge *pubkey, secp256k1_schnorr_msghash hash, const unsigned char *msg32)</argsstring>
        <name>secp256k1_schnorr_sig_verify</name>
        <param>
          <type>const <ref refid="structsecp256k1__ecmult__context" kindref="compound">secp256k1_ecmult_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>sig64</declname>
        </param>
        <param>
          <type>const <ref refid="structsecp256k1__ge" kindref="compound">secp256k1_ge</ref> *</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type><ref refid="schnorr_8h_1a4543078e8c14fe94160f35b293dff0e4" kindref="member">secp256k1_schnorr_msghash</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>msg32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr.h" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="schnorr_8h_1a41cf1a1167f3b8c7b6fdd4fea6abdbce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int secp256k1_schnorr_sig_recover</definition>
        <argsstring>(const secp256k1_ecmult_context *ctx, const unsigned char *sig64, secp256k1_ge *pubkey, secp256k1_schnorr_msghash hash, const unsigned char *msg32)</argsstring>
        <name>secp256k1_schnorr_sig_recover</name>
        <param>
          <type>const <ref refid="structsecp256k1__ecmult__context" kindref="compound">secp256k1_ecmult_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>sig64</declname>
        </param>
        <param>
          <type><ref refid="structsecp256k1__ge" kindref="compound">secp256k1_ge</ref> *</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type><ref refid="schnorr_8h_1a4543078e8c14fe94160f35b293dff0e4" kindref="member">secp256k1_schnorr_msghash</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>msg32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr.h" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="schnorr_8h_1ad2c15e4e57e6bf00cde3a4b229330b12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int secp256k1_schnorr_sig_combine</definition>
        <argsstring>(unsigned char *sig64, size_t n, const unsigned char *const *sig64ins)</argsstring>
        <name>secp256k1_schnorr_sig_combine</name>
        <param>
          <type>unsigned char *</type>
          <declname>sig64</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const unsigned char *const *</type>
          <declname>sig64ins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr.h" line="18" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014-2015<sp/>Pieter<sp/>Wuille<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.<sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>***********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SECP256K1_MODULE_SCHNORR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SECP256K1_MODULE_SCHNORR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scalar_8h" kindref="compound">scalar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="group_8h" kindref="compound">group.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="schnorr_8h_1a4543078e8c14fe94160f35b293dff0e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="schnorr_8h_1a4543078e8c14fe94160f35b293dff0e4" kindref="member">secp256k1_schnorr_msghash</ref>)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*h32,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*r32,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg32);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_schnorr_sig_sign(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__ecmult__gen__context" kindref="compound">secp256k1_ecmult_gen_context</ref>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sig64,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__scalar" kindref="compound">secp256k1_scalar</ref><sp/>*nonce,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__ge" kindref="compound">secp256k1_ge</ref><sp/>*pubnonce,<sp/><ref refid="schnorr_8h_1a4543078e8c14fe94160f35b293dff0e4" kindref="member">secp256k1_schnorr_msghash</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg32);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_schnorr_sig_verify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__ecmult__context" kindref="compound">secp256k1_ecmult_context</ref>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sig64,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__ge" kindref="compound">secp256k1_ge</ref><sp/>*pubkey,<sp/><ref refid="schnorr_8h_1a4543078e8c14fe94160f35b293dff0e4" kindref="member">secp256k1_schnorr_msghash</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg32);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_schnorr_sig_recover(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsecp256k1__ecmult__context" kindref="compound">secp256k1_ecmult_context</ref>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sig64,<sp/><ref refid="structsecp256k1__ge" kindref="compound">secp256k1_ge</ref><sp/>*pubkey,<sp/><ref refid="schnorr_8h_1a4543078e8c14fe94160f35b293dff0e4" kindref="member">secp256k1_schnorr_msghash</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg32);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secp256k1_schnorr_sig_combine(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sig64,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*sig64ins);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/modules/schnorr/schnorr.h"/>
  </compounddef>
</doxygen>
