<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classleveldb_1_1_table" kind="class" language="C++" prot="public">
    <compoundname>leveldb::Table</compoundname>
    <includes refid="table_8h" local="no">table.h</includes>
    <innerclass refid="structleveldb_1_1_table_1_1_rep" prot="public">leveldb::Table::Rep</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classleveldb_1_1_table_1a5f452efeff7114793e2943215d4c6121" prot="private" static="no" mutable="no">
        <type><ref refid="structleveldb_1_1_table_1_1_rep" kindref="compound">Rep</ref> *</type>
        <definition>Rep* leveldb::Table::rep_</definition>
        <argsstring></argsstring>
        <name>rep_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="60" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classleveldb_1_1_table_1ae1e5f7bae4682672cfcc68d0add43199" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TableCache</definition>
        <argsstring></argsstring>
        <name>TableCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="68" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classleveldb_1_1_table_1aa25d0e074ab4de46e583522a8c0e9582" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::Table::Open</definition>
        <argsstring>(const Options &amp;options, RandomAccessFile *file, uint64_t file_size, Table **table)</argsstring>
        <name>Open</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>file_size</declname>
        </param>
        <param>
          <type><ref refid="classleveldb_1_1_table" kindref="compound">Table</ref> **</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="38" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="38" bodyend="89"/>
        <references refid="classleveldb_1_1_footer_1a83b9789b124c3963f4d9cedd47b58ff6a52c5b622f817edcfaf2bb274851a3791" compoundref="format_8h" startline="70">leveldb::Footer::kEncodedLength</references>
        <references refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" compoundref="status_8h" startline="38" endline="40">leveldb::Status::Corruption</references>
        <references refid="classleveldb_1_1_random_access_file_1a1a09fadcec904d9791a968acabca98d0">leveldb::RandomAccessFile::Read</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_footer_1a3cbcb311694e4cf410358f97d53d94e3" compoundref="format_8cc" startline="44" endline="64">leveldb::Footer::DecodeFrom</references>
        <references refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" compoundref="options_8h" startline="57">leveldb::Options::paranoid_checks</references>
        <references refid="structleveldb_1_1_read_options_1a43731d67b707995e20571ad33c1f53f2" compoundref="options_8h" startline="147">leveldb::ReadOptions::verify_checksums</references>
        <references refid="namespaceleveldb_1a63198fc7656081fd62695dade629790b" compoundref="format_8cc" startline="66" endline="143">leveldb::ReadBlock</references>
        <references refid="classleveldb_1_1_footer_1aae1a72a668da9eae3fa2f6620e3ea559" compoundref="format_8h" startline="56" endline="58">leveldb::Footer::index_handle</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1a96ff2b389369e1b0706b090961065740" compoundref="table_8cc" startline="27">leveldb::Table::Rep::options</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1a5b96b0d545bb3dbe2bccdefab1a83092" compoundref="table_8cc" startline="29">leveldb::Table::Rep::file</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1a11500653a2db8ba301bca5027a508789" compoundref="table_8cc" startline="34">leveldb::Table::Rep::metaindex_handle</references>
        <references refid="classleveldb_1_1_footer_1a44f2334ed064f7045d76b898f5fadb6a" compoundref="format_8h" startline="52" endline="52">leveldb::Footer::metaindex_handle</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1ae69d991c9b8ec7330b22acc06a932fe8" compoundref="table_8cc" startline="35">leveldb::Table::Rep::index_block</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1af5beb2186a60560f5381271ad53420b8" compoundref="table_8cc" startline="30">leveldb::Table::Rep::cache_id</references>
        <references refid="structleveldb_1_1_options_1a4e87749ebac1ba28dff6bb63eb2059e5" compoundref="options_8h" startline="98">leveldb::Options::block_cache</references>
        <references refid="classleveldb_1_1_cache_1ae2d79bfe747fc6c165c77398cc31e125">leveldb::Cache::NewId</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1a2dd458aa96c0a357414f13354810cea9" compoundref="table_8cc" startline="32">leveldb::Table::Rep::filter_data</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1a35acf83732a3dea3df5869cb05c1cb5f" compoundref="table_8cc" startline="31">leveldb::Table::Rep::filter</references>
        <referencedby refid="classleveldb_1_1_table_constructor_1aa8ce3799a55859c2dee50d3e08f56ef2" compoundref="table__test_8cc" startline="230" endline="251">leveldb::TableConstructor::FinishImpl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classleveldb_1_1_table_1a945f1f97b4f53402f5d55422a4dd3af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::Table::~Table</definition>
        <argsstring>()</argsstring>
        <name>~Table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_1ad354f57ece050ca0c5f42669b7c01cc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>Iterator * leveldb::Table::NewIterator</definition>
        <argsstring>(const ReadOptions &amp;) const </argsstring>
        <name>NewIterator</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <defname>options</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="48" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="220" bodyend="224"/>
        <references refid="namespaceleveldb_1a44a9b2f992cf66b7046581b72a095ea1" compoundref="two__level__iterator_8cc" startline="174" endline="180">leveldb::NewTwoLevelIterator</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1ae69d991c9b8ec7330b22acc06a932fe8" compoundref="table_8cc" startline="35">leveldb::Table::Rep::index_block</references>
        <references refid="classleveldb_1_1_block_1a336289029f37d18d31a1a3c178afc7b3" compoundref="block_8cc" startline="256" endline="266">leveldb::Block::NewIterator</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1a96ff2b389369e1b0706b090961065740" compoundref="table_8cc" startline="27">leveldb::Table::Rep::options</references>
        <references refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" compoundref="options_8h" startline="41">leveldb::Options::comparator</references>
        <referencedby refid="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" compoundref="table__cache_8cc" startline="82" endline="103">leveldb::TableCache::NewIterator</referencedby>
        <referencedby refid="classleveldb_1_1_table_constructor_1a4897f3cb58fed2bd3a9f7f6468b6a105" compoundref="table__test_8cc" startline="253" endline="255">leveldb::TableConstructor::NewIterator</referencedby>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_1a1795d45c54945ee7652b19e6ad6c030b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t leveldb::Table::ApproximateOffsetOf</definition>
        <argsstring>(const Slice &amp;key) const </argsstring>
        <name>ApproximateOffsetOf</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="56" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="258" bodyend="283"/>
        <references refid="structleveldb_1_1_table_1_1_rep_1ae69d991c9b8ec7330b22acc06a932fe8" compoundref="table_8cc" startline="35">leveldb::Table::Rep::index_block</references>
        <references refid="classleveldb_1_1_block_1a336289029f37d18d31a1a3c178afc7b3" compoundref="block_8cc" startline="256" endline="266">leveldb::Block::NewIterator</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1a96ff2b389369e1b0706b090961065740" compoundref="table_8cc" startline="27">leveldb::Table::Rep::options</references>
        <references refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" compoundref="options_8h" startline="41">leveldb::Options::comparator</references>
        <references refid="classleveldb_1_1_iterator_1a97a556e97ded60c677fbf4de7321ec44">leveldb::Iterator::Seek</references>
        <references refid="classleveldb_1_1_iterator_1a38614978bfa0586327b8e237bcb46012">leveldb::Iterator::Valid</references>
        <references refid="classleveldb_1_1_iterator_1a613ac2e965518aad7a064c64c72bcf7c">leveldb::Iterator::value</references>
        <references refid="classleveldb_1_1_block_handle_1a1660fd202984d8d5bfa4bed6c5613621" compoundref="format_8cc" startline="23" endline="30">leveldb::BlockHandle::DecodeFrom</references>
        <references refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" compoundref="status_8h" startline="52" endline="52">leveldb::Status::ok</references>
        <references refid="classleveldb_1_1_block_handle_1a31071c24f77e52a3bfc3a228f9f6c133" compoundref="format_8h" startline="27" endline="27">leveldb::BlockHandle::offset</references>
        <references refid="structleveldb_1_1_table_1_1_rep_1a11500653a2db8ba301bca5027a508789" compoundref="table_8cc" startline="34">leveldb::Table::Rep::metaindex_handle</references>
        <referencedby refid="classleveldb_1_1_version_set_1ada7f3ed63b1c48adb6e5b38348b300e1" compoundref="version__set_8cc" startline="1105" endline="1135">leveldb::VersionSet::ApproximateOffsetOf</referencedby>
        <referencedby refid="classleveldb_1_1_table_constructor_1a798ee199e8fdc5ec020725dba32a4cb6" compoundref="table__test_8cc" startline="257" endline="259">leveldb::TableConstructor::ApproximateOffsetOf</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classleveldb_1_1_table_1a145d0ed70dfb8cb92956bb554db222e5" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>leveldb::Table::Table</definition>
        <argsstring>(Rep *rep)</argsstring>
        <name>Table</name>
        <param>
          <type><ref refid="structleveldb_1_1_table_1_1_rep" kindref="compound">Rep</ref> *</type>
          <declname>rep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="62" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_1aea7233eff55aec8dad19befe6de5bd99" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref></type>
        <definition>Status leveldb::Table::InternalGet</definition>
        <argsstring>(const ReadOptions &amp;, const Slice &amp;key, void *arg, void(*handle_result)(void *arg, const Slice &amp;k, const Slice &amp;v))</argsstring>
        <name>InternalGet</name>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>void(*)(void *<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>, const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;k, const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;v)</type>
          <declname>handle_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="69" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="226" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_1ac7b765e08d8285b2019e1faa6905368e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Table::ReadMeta</definition>
        <argsstring>(const Footer &amp;footer)</argsstring>
        <name>ReadMeta</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_footer" kindref="compound">Footer</ref> &amp;</type>
          <declname>footer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="75" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="91" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_1abe6a44b25318fa50b8e73b5570ef3911" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Table::ReadFilter</definition>
        <argsstring>(const Slice &amp;filter_handle_value)</argsstring>
        <name>ReadFilter</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <declname>filter_handle_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="76" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="120" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_1ae65d769b917c37227f66221dbd3fe850" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>leveldb::Table::Table</definition>
        <argsstring>(const Table &amp;)</argsstring>
        <name>Table</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_table" kindref="compound">Table</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classleveldb_1_1_table_1a859ec9ca8d2745df17559b0613ac9cba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leveldb::Table::operator=</definition>
        <argsstring>(const Table &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classleveldb_1_1_table" kindref="compound">Table</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classleveldb_1_1_table_1a93b3e7e277493cbc63a55e2b141b1f30" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref> *</type>
        <definition>Iterator * leveldb::Table::BlockReader</definition>
        <argsstring>(void *, const ReadOptions &amp;, const Slice &amp;)</argsstring>
        <name>BlockReader</name>
        <param>
          <type>void *</type>
          <defname>arg</defname>
        </param>
        <param>
          <type>const <ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref> &amp;</type>
          <defname>options</defname>
        </param>
        <param>
          <type>const <ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref> &amp;</type>
          <defname>index_value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="63" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/table/table.cc" bodystart="164" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" line="24" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/include/leveldb/table.h" bodystart="24" bodyend="81"/>
    <listofallmembers>
      <member refid="classleveldb_1_1_table_1a1795d45c54945ee7652b19e6ad6c030b" prot="public" virt="non-virtual"><scope>leveldb::Table</scope><name>ApproximateOffsetOf</name></member>
      <member refid="classleveldb_1_1_table_1a93b3e7e277493cbc63a55e2b141b1f30" prot="private" virt="non-virtual"><scope>leveldb::Table</scope><name>BlockReader</name></member>
      <member refid="classleveldb_1_1_table_1aea7233eff55aec8dad19befe6de5bd99" prot="private" virt="non-virtual"><scope>leveldb::Table</scope><name>InternalGet</name></member>
      <member refid="classleveldb_1_1_table_1ad354f57ece050ca0c5f42669b7c01cc2" prot="public" virt="non-virtual"><scope>leveldb::Table</scope><name>NewIterator</name></member>
      <member refid="classleveldb_1_1_table_1aa25d0e074ab4de46e583522a8c0e9582" prot="public" virt="non-virtual"><scope>leveldb::Table</scope><name>Open</name></member>
      <member refid="classleveldb_1_1_table_1a859ec9ca8d2745df17559b0613ac9cba" prot="private" virt="non-virtual"><scope>leveldb::Table</scope><name>operator=</name></member>
      <member refid="classleveldb_1_1_table_1abe6a44b25318fa50b8e73b5570ef3911" prot="private" virt="non-virtual"><scope>leveldb::Table</scope><name>ReadFilter</name></member>
      <member refid="classleveldb_1_1_table_1ac7b765e08d8285b2019e1faa6905368e" prot="private" virt="non-virtual"><scope>leveldb::Table</scope><name>ReadMeta</name></member>
      <member refid="classleveldb_1_1_table_1a5f452efeff7114793e2943215d4c6121" prot="private" virt="non-virtual"><scope>leveldb::Table</scope><name>rep_</name></member>
      <member refid="classleveldb_1_1_table_1a145d0ed70dfb8cb92956bb554db222e5" prot="private" virt="non-virtual"><scope>leveldb::Table</scope><name>Table</name></member>
      <member refid="classleveldb_1_1_table_1ae65d769b917c37227f66221dbd3fe850" prot="private" virt="non-virtual"><scope>leveldb::Table</scope><name>Table</name></member>
      <member refid="classleveldb_1_1_table_1ae1e5f7bae4682672cfcc68d0add43199" prot="private" virt="non-virtual"><scope>leveldb::Table</scope><name>TableCache</name></member>
      <member refid="classleveldb_1_1_table_1a945f1f97b4f53402f5d55422a4dd3af2" prot="public" virt="non-virtual"><scope>leveldb::Table</scope><name>~Table</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
