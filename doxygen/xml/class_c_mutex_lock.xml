<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_mutex_lock" kind="class" language="C++" prot="public">
    <compoundname>CMutexLock</compoundname>
    <includes refid="sync_8h" local="no">sync.h</includes>
    <templateparamlist>
      <param>
        <type>typename Mutex</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_mutex_lock_1a2f3b4666271388be42da0198ba717744" prot="private" static="no" mutable="no">
        <type>boost::unique_lock&lt; Mutex &gt;</type>
        <definition>boost::unique_lock&lt;Mutex&gt; CMutexLock&lt; Mutex &gt;::lock</definition>
        <argsstring></argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sync.h" line="111" column="1" bodyfile="/home/dev/ds-160209/src/sync.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_c_mutex_lock_1a8a9f734c76f1b766445bec41b91393dd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CMutexLock&lt; Mutex &gt;::Enter</definition>
        <argsstring>(const char *pszName, const char *pszFile, int nLine)</argsstring>
        <name>Enter</name>
        <param>
          <type>const char *</type>
          <declname>pszName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszFile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sync.h" line="113" column="1" bodyfile="/home/dev/ds-160209/src/sync.h" bodystart="113" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_c_mutex_lock_1a9ba3770fa3e256a183b0ee52ebf048c4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMutexLock&lt; Mutex &gt;::TryEnter</definition>
        <argsstring>(const char *pszName, const char *pszFile, int nLine)</argsstring>
        <name>TryEnter</name>
        <param>
          <type>const char *</type>
          <declname>pszName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszFile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sync.h" line="127" column="1" bodyfile="/home/dev/ds-160209/src/sync.h" bodystart="127" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_mutex_lock_1ad08e2df1cad4c5732dafb1552abe6106" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMutexLock&lt; Mutex &gt;::CMutexLock</definition>
        <argsstring>(Mutex &amp;mutexIn, const char *pszName, const char *pszFile, int nLine, bool fTry=false)</argsstring>
        <name>CMutexLock</name>
        <param>
          <type>Mutex &amp;</type>
          <declname>mutexIn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszFile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nLine</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fTry</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sync.h" line="137" column="1" bodyfile="/home/dev/ds-160209/src/sync.h" bodystart="137" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_c_mutex_lock_1af213c60c9abee229f5dc841670021c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMutexLock&lt; Mutex &gt;::~CMutexLock</definition>
        <argsstring>()</argsstring>
        <name>~CMutexLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sync.h" line="145" column="1" bodyfile="/home/dev/ds-160209/src/sync.h" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_c_mutex_lock_1a4358803c87a873252abebdd1b625d293" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMutexLock&lt; Mutex &gt;::operator bool</definition>
        <argsstring>()</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sync.h" line="151" column="1" bodyfile="/home/dev/ds-160209/src/sync.h" bodystart="151" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Wrapper around boost::unique_lock&lt;Mutex&gt; </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/sync.h" line="109" column="1" bodyfile="/home/dev/ds-160209/src/sync.h" bodystart="108" bodyend="155"/>
    <listofallmembers>
      <member refid="class_c_mutex_lock_1ad08e2df1cad4c5732dafb1552abe6106" prot="public" virt="non-virtual"><scope>CMutexLock</scope><name>CMutexLock</name></member>
      <member refid="class_c_mutex_lock_1a8a9f734c76f1b766445bec41b91393dd" prot="private" virt="non-virtual"><scope>CMutexLock</scope><name>Enter</name></member>
      <member refid="class_c_mutex_lock_1a2f3b4666271388be42da0198ba717744" prot="private" virt="non-virtual"><scope>CMutexLock</scope><name>lock</name></member>
      <member refid="class_c_mutex_lock_1a4358803c87a873252abebdd1b625d293" prot="public" virt="non-virtual"><scope>CMutexLock</scope><name>operator bool</name></member>
      <member refid="class_c_mutex_lock_1a9ba3770fa3e256a183b0ee52ebf048c4" prot="private" virt="non-virtual"><scope>CMutexLock</scope><name>TryEnter</name></member>
      <member refid="class_c_mutex_lock_1af213c60c9abee229f5dc841670021c5a" prot="public" virt="non-virtual"><scope>CMutexLock</scope><name>~CMutexLock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
