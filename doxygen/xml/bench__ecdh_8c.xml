<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="bench__ecdh_8c" kind="file" language="C++">
    <compoundname>bench_ecdh.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="secp256k1_8h" local="yes">include/secp256k1.h</includes>
    <includes refid="secp256k1__ecdh_8h" local="yes">include/secp256k1_ecdh.h</includes>
    <includes refid="secp256k1_2src_2util_8h" local="yes">util.h</includes>
    <includes refid="bench_8h" local="yes">bench.h</includes>
    <incdepgraph>
      <node id="22132">
        <label>stdlib.h</label>
      </node>
      <node id="22128">
        <label>include/secp256k1.h</label>
        <link refid="secp256k1_8h"/>
        <childnode refid="22129" relation="include">
        </childnode>
      </node>
      <node id="22129">
        <label>stddef.h</label>
      </node>
      <node id="22127">
        <label>string.h</label>
      </node>
      <node id="22131">
        <label>util.h</label>
        <link refid="secp256k1_2src_2util_8h"/>
        <childnode refid="22132" relation="include">
        </childnode>
        <childnode refid="22133" relation="include">
        </childnode>
        <childnode refid="22134" relation="include">
        </childnode>
      </node>
      <node id="22136">
        <label>math.h</label>
      </node>
      <node id="22133">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="22130">
        <label>include/secp256k1_ecdh.h</label>
        <link refid="secp256k1__ecdh_8h"/>
        <childnode refid="22128" relation="include">
        </childnode>
      </node>
      <node id="22137">
        <label>sys/time.h</label>
      </node>
      <node id="22134">
        <label>stdio.h</label>
      </node>
      <node id="22126">
        <label>/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c</label>
        <link refid="bench_ecdh.c"/>
        <childnode refid="22127" relation="include">
        </childnode>
        <childnode refid="22128" relation="include">
        </childnode>
        <childnode refid="22130" relation="include">
        </childnode>
        <childnode refid="22131" relation="include">
        </childnode>
        <childnode refid="22135" relation="include">
        </childnode>
      </node>
      <node id="22135">
        <label>bench.h</label>
        <link refid="bench_8h"/>
        <childnode refid="22134" relation="include">
        </childnode>
        <childnode refid="22136" relation="include">
        </childnode>
        <childnode refid="22137" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structbench__ecdh__t" prot="public">bench_ecdh_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="bench__ecdh_8c_1a2afcc388be168d338b21eb22c4991df0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bench_ecdh_setup</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_ecdh_setup</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c" line="20" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c" bodystart="20" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="bench__ecdh_8c_1a859eabd44b49e17c9450975ea03c4a0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bench_ecdh</definition>
        <argsstring>(void *arg)</argsstring>
        <name>bench_ecdh</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c" line="38" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="bench__ecdh_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c" line="48" column="1" bodyfile="/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c" bodystart="48" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Pieter<sp/>Wuille,<sp/>Andrew<sp/>Poelstra<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1_8h" kindref="compound">include/secp256k1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1__ecdh_8h" kindref="compound">include/secp256k1_ecdh.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="secp256k1_2src_2util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bench_8h" kindref="compound">bench.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="structbench__ecdh__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15" refid="structbench__ecdh__t_1a1e080318ae111032a3068748e2a50a57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__context__struct" kindref="compound">secp256k1_context</ref><sp/>*<ref refid="structbench__ecdh__t_1a1e080318ae111032a3068748e2a50a57" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="16" refid="structbench__ecdh__t_1aa2d9806cee2be627fc76ce1bca9dd5e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsecp256k1__pubkey" kindref="compound">secp256k1_pubkey</ref><sp/><ref refid="structbench__ecdh__t_1aa2d9806cee2be627fc76ce1bca9dd5e8" kindref="member">point</ref>;</highlight></codeline>
<codeline lineno="17" refid="structbench__ecdh__t_1a2641f51e954a515683720afab29009c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>scalar[32];</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}<sp/><ref refid="structbench__ecdh__t" kindref="compound">bench_ecdh_t</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bench_ecdh_setup(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__ecdh__t" kindref="compound">bench_ecdh_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__ecdh__t" kindref="compound">bench_ecdh_t</ref>*)arg;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>point[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x54,<sp/>0x94,<sp/>0xc1,<sp/>0x5d,<sp/>0x32,<sp/>0x09,<sp/>0x97,<sp/>0x06,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xc2,<sp/>0x39,<sp/>0x5f,<sp/>0x94,<sp/>0x34,<sp/>0x87,<sp/>0x45,<sp/>0xfd,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x75,<sp/>0x7c,<sp/>0xe3,<sp/>0x0e,<sp/>0x4e,<sp/>0x8c,<sp/>0x90,<sp/>0xfb,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xa2,<sp/>0xba,<sp/>0xd1,<sp/>0x84,<sp/>0xf8,<sp/>0x83,<sp/>0xc6,<sp/>0x9f</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbench__ecdh__t_1a1e080318ae111032a3068748e2a50a57" kindref="member">ctx</ref><sp/>=<sp/><ref refid="secp256k1_8h_1a769d478f352afbb55200e33970533a3c" kindref="member">secp256k1_context_create</ref>(0);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbench__ecdh__t_1a2641f51e954a515683720afab29009c4" kindref="member">scalar</ref>[i]<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1_8h_1a4e5dc8952c9a7e791376505ef2023ca1" kindref="member">secp256k1_ec_pubkey_parse</ref>(data-&gt;<ref refid="structbench__ecdh__t_1a1e080318ae111032a3068748e2a50a57" kindref="member">ctx</ref>,<sp/>&amp;data-&gt;<ref refid="structbench__ecdh__t_1aa2d9806cee2be627fc76ce1bca9dd5e8" kindref="member">point</ref>,<sp/>point,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(point))<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bench_ecdh(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>res[32];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__ecdh__t" kindref="compound">bench_ecdh_t</ref><sp/>*data<sp/>=<sp/>(<ref refid="structbench__ecdh__t" kindref="compound">bench_ecdh_t</ref>*)arg;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secp256k1_2src_2util_8h_1aba1590ff86288c886c47dc8a27b30467" kindref="member">CHECK</ref>(<ref refid="secp256k1__ecdh_8h_1a4b0ce331dd8a723475e934aa6461b75a" kindref="member">secp256k1_ecdh</ref>(data-&gt;<ref refid="structbench__ecdh__t_1a1e080318ae111032a3068748e2a50a57" kindref="member">ctx</ref>,<sp/>res,<sp/>&amp;data-&gt;<ref refid="structbench__ecdh__t_1aa2d9806cee2be627fc76ce1bca9dd5e8" kindref="member">point</ref>,<sp/>data-&gt;<ref refid="structbench__ecdh__t_1a2641f51e954a515683720afab29009c4" kindref="member">scalar</ref>)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="bench__ecdh_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bench__ecdh_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbench__ecdh__t" kindref="compound">bench_ecdh_t</ref><sp/>data;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bench_8h_1a62a3537c97d14006568dd6f8b2bc5472" kindref="member">run_benchmark</ref>(</highlight><highlight class="stringliteral">&quot;ecdh&quot;</highlight><highlight class="normal">,<sp/>bench_ecdh,<sp/>bench_ecdh_setup,<sp/>NULL,<sp/>&amp;data,<sp/>10,<sp/>20000);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/secp256k1/src/bench_ecdh.c"/>
  </compounddef>
</doxygen>
