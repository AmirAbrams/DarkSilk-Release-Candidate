<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classjson__spirit_1_1_json__grammer" kind="class" language="C++" prot="public">
    <compoundname>json_spirit::Json_grammer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">spirit_namespace::grammar&lt; Json_grammer&lt; Value_type, Iter_type &gt; &gt;</basecompoundref>
    <includes refid="json__spirit__reader__template_8h" local="no">json_spirit_reader_template.h</includes>
    <innerclass refid="classjson__spirit_1_1_json__grammer_1_1definition" prot="public">json_spirit::Json_grammer::definition</innerclass>
    <templateparamlist>
      <param>
        <type>class <ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref></type>
      </param>
      <param>
        <type>class Iter_type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classjson__spirit_1_1_json__grammer_1af002d620720009cf1d1a8b7bdebcd704" prot="public" static="no">
        <type><ref refid="classjson__spirit_1_1_semantic__actions" kindref="compound">Semantic_actions</ref>&lt; <ref refid="namespacejson__spirit_1aeaad57c912e0370a76f60cd510ad3d74" kindref="member">Value_type</ref>, Iter_type &gt;</type>
        <definition>typedef Semantic_actions&lt; Value_type, Iter_type &gt; json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::Semantic_actions_t</definition>
        <argsstring></argsstring>
        <name>Semantic_actions_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="374" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classjson__spirit_1_1_json__grammer_1a372b6b33f53c11e0fc207ad56947f77c" prot="private" static="no" mutable="no">
        <type><ref refid="classjson__spirit_1_1_json__grammer_1af002d620720009cf1d1a8b7bdebcd704" kindref="member">Semantic_actions_t</ref> &amp;</type>
        <definition>Semantic_actions_t&amp; json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::actions_</definition>
        <argsstring></argsstring>
        <name>actions_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="514" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classjson__spirit_1_1_json__grammer_1a366061eedf4a7f49161418491c09aa9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::Json_grammer</definition>
        <argsstring>(Semantic_actions_t &amp;semantic_actions)</argsstring>
        <name>Json_grammer</name>
        <param>
          <type><ref refid="classjson__spirit_1_1_json__grammer_1af002d620720009cf1d1a8b7bdebcd704" kindref="member">Semantic_actions_t</ref> &amp;</type>
          <declname>semantic_actions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="376" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="376" bodyend="379"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classjson__spirit_1_1_json__grammer_1a1227fb5b6bcd501b6d05d7e9cceee02b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::throw_not_value</definition>
        <argsstring>(Iter_type begin, Iter_type end)</argsstring>
        <name>throw_not_value</name>
        <param>
          <type>Iter_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="381" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="381" bodyend="384"/>
        <references refid="namespacejson__spirit_1a64cacddc2cc8e854f25b4447c610f823" compoundref="json__spirit__reader__template_8h" startline="356" endline="359">json_spirit::throw_error</references>
        <referencedby refid="classjson__spirit_1_1_json__grammer_1_1definition_1a00806fdc7bd694565d5106a61f62e3af" compoundref="json__spirit__reader__template_8h" startline="416" endline="503">json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::definition&lt; ScannerT &gt;::definition</referencedby>
      </memberdef>
      <memberdef kind="function" id="classjson__spirit_1_1_json__grammer_1ac64bb4d2e31662e43ef613ae52bfacfa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::throw_not_array</definition>
        <argsstring>(Iter_type begin, Iter_type end)</argsstring>
        <name>throw_not_array</name>
        <param>
          <type>Iter_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="386" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="386" bodyend="389"/>
        <references refid="namespacejson__spirit_1a64cacddc2cc8e854f25b4447c610f823" compoundref="json__spirit__reader__template_8h" startline="356" endline="359">json_spirit::throw_error</references>
        <referencedby refid="classjson__spirit_1_1_json__grammer_1_1definition_1a00806fdc7bd694565d5106a61f62e3af" compoundref="json__spirit__reader__template_8h" startline="416" endline="503">json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::definition&lt; ScannerT &gt;::definition</referencedby>
      </memberdef>
      <memberdef kind="function" id="classjson__spirit_1_1_json__grammer_1af243428007c7698e3d0a004c56986e30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::throw_not_object</definition>
        <argsstring>(Iter_type begin, Iter_type end)</argsstring>
        <name>throw_not_object</name>
        <param>
          <type>Iter_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="391" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="391" bodyend="394"/>
        <references refid="namespacejson__spirit_1a64cacddc2cc8e854f25b4447c610f823" compoundref="json__spirit__reader__template_8h" startline="356" endline="359">json_spirit::throw_error</references>
        <referencedby refid="classjson__spirit_1_1_json__grammer_1_1definition_1a00806fdc7bd694565d5106a61f62e3af" compoundref="json__spirit__reader__template_8h" startline="416" endline="503">json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::definition&lt; ScannerT &gt;::definition</referencedby>
      </memberdef>
      <memberdef kind="function" id="classjson__spirit_1_1_json__grammer_1ab3c938c81f4bb25ec28c8f2d8fb9deb3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::throw_not_pair</definition>
        <argsstring>(Iter_type begin, Iter_type end)</argsstring>
        <name>throw_not_pair</name>
        <param>
          <type>Iter_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="396" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="396" bodyend="399"/>
        <references refid="namespacejson__spirit_1a64cacddc2cc8e854f25b4447c610f823" compoundref="json__spirit__reader__template_8h" startline="356" endline="359">json_spirit::throw_error</references>
      </memberdef>
      <memberdef kind="function" id="classjson__spirit_1_1_json__grammer_1aba1fb3ab7a896435c92abf353e120d49" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::throw_not_colon</definition>
        <argsstring>(Iter_type begin, Iter_type end)</argsstring>
        <name>throw_not_colon</name>
        <param>
          <type>Iter_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="401" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="401" bodyend="404"/>
        <references refid="namespacejson__spirit_1a64cacddc2cc8e854f25b4447c610f823" compoundref="json__spirit__reader__template_8h" startline="356" endline="359">json_spirit::throw_error</references>
        <referencedby refid="classjson__spirit_1_1_json__grammer_1_1definition_1a00806fdc7bd694565d5106a61f62e3af" compoundref="json__spirit__reader__template_8h" startline="416" endline="503">json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::definition&lt; ScannerT &gt;::definition</referencedby>
      </memberdef>
      <memberdef kind="function" id="classjson__spirit_1_1_json__grammer_1a3697b8b95612a64914f7118af86a08c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::throw_not_string</definition>
        <argsstring>(Iter_type begin, Iter_type end)</argsstring>
        <name>throw_not_string</name>
        <param>
          <type>Iter_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter_type</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="406" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="406" bodyend="409"/>
        <references refid="namespacejson__spirit_1a64cacddc2cc8e854f25b4447c610f823" compoundref="json__spirit__reader__template_8h" startline="356" endline="359">json_spirit::throw_error</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classjson__spirit_1_1_json__grammer_1a4c9fc32ee04e3715182b303ec0d524ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classjson__spirit_1_1_json__grammer" kindref="compound">Json_grammer</ref> &amp;</type>
        <definition>Json_grammer&amp; json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;::operator=</definition>
        <argsstring>(const Json_grammer &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classjson__spirit_1_1_json__grammer" kindref="compound">Json_grammer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="512" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3158">
        <label>spirit_namespace::grammar&lt; Json_grammer&lt; Value_type, Iter_type &gt; &gt;</label>
      </node>
      <node id="3157">
        <label>json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;</label>
        <link refid="classjson__spirit_1_1_json__grammer"/>
        <childnode refid="3158" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3160">
        <label>spirit_namespace::grammar&lt; Json_grammer&lt; Value_type, Iter_type &gt; &gt;</label>
      </node>
      <node id="3159">
        <label>json_spirit::Json_grammer&lt; Value_type, Iter_type &gt;</label>
        <link refid="classjson__spirit_1_1_json__grammer"/>
        <childnode refid="3160" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" line="371" column="1" bodyfile="/home/dev/ds-160209/src/json/json_spirit_reader_template.h" bodystart="370" bodyend="515"/>
    <listofallmembers>
      <member refid="classjson__spirit_1_1_json__grammer_1a372b6b33f53c11e0fc207ad56947f77c" prot="private" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>actions_</name></member>
      <member refid="classjson__spirit_1_1_json__grammer_1a366061eedf4a7f49161418491c09aa9d" prot="public" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>Json_grammer</name></member>
      <member refid="classjson__spirit_1_1_json__grammer_1a4c9fc32ee04e3715182b303ec0d524ce" prot="private" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>operator=</name></member>
      <member refid="classjson__spirit_1_1_json__grammer_1af002d620720009cf1d1a8b7bdebcd704" prot="public" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>Semantic_actions_t</name></member>
      <member refid="classjson__spirit_1_1_json__grammer_1ac64bb4d2e31662e43ef613ae52bfacfa" prot="public" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>throw_not_array</name></member>
      <member refid="classjson__spirit_1_1_json__grammer_1aba1fb3ab7a896435c92abf353e120d49" prot="public" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>throw_not_colon</name></member>
      <member refid="classjson__spirit_1_1_json__grammer_1af243428007c7698e3d0a004c56986e30" prot="public" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>throw_not_object</name></member>
      <member refid="classjson__spirit_1_1_json__grammer_1ab3c938c81f4bb25ec28c8f2d8fb9deb3" prot="public" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>throw_not_pair</name></member>
      <member refid="classjson__spirit_1_1_json__grammer_1a3697b8b95612a64914f7118af86a08c4" prot="public" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>throw_not_string</name></member>
      <member refid="classjson__spirit_1_1_json__grammer_1a1227fb5b6bcd501b6d05d7e9cceee02b" prot="public" virt="non-virtual"><scope>json_spirit::Json_grammer</scope><name>throw_not_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
