<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_stormnode" kind="class" language="C++" prot="public">
    <compoundname>CStormnode</compoundname>
    <derivedcompoundref refid="class_c_stormnode_broadcast" prot="public" virt="non-virtual">CStormnodeBroadcast</derivedcompoundref>
    <includes refid="stormnode_8h" local="no">stormnode.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0" prot="public" static="no">
        <name>state</name>
        <enumvalue id="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4d96c08f8f4c62ae9e43b0d82db5e2f1" prot="public">
          <name>STORMNODE_PRE_ENABLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" prot="public">
          <name>STORMNODE_ENABLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0ab3e35c4e3e07236ee4bdd2fc0cc11f99" prot="public">
          <name>STORMNODE_EXPIRED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0abe760cfa737f943c06d449afc2b03f1d" prot="public">
          <name>STORMNODE_VIN_SPENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a89fa3f4b7441a2d2add5334396a88b06" prot="public">
          <name>STORMNODE_REMOVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a61dac974c55abf841bb617fa4beba96e" prot="public">
          <name>STORMNODE_POS_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="113" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="113" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_stormnode_1acf90628a4c7cf6ecc804f46e3c20968f" prot="private" static="no" mutable="yes">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection CStormnode::cs</definition>
        <argsstring></argsstring>
        <name>cs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="110" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a1303d7ea524e5213f8aa1628661dff2e" prot="private" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CStormnode::lastTimeChecked</definition>
        <argsstring></argsstring>
        <name>lastTimeChecked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="111" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref></type>
        <definition>CTxIn CStormnode::vin</definition>
        <argsstring></argsstring>
        <name>vin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="122" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="122" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aae19bf2ba52f3b864bfaf70206bcb29a" compoundref="rpcstormnode-budget_8cpp" startline="22" endline="515">snbudget</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aaff1bdc7f9f32708efc9094bb6ab0e0d" compoundref="rpcstormnode-budget_8cpp" startline="569" endline="761">snfinalbudget</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" compoundref="stormnode_8cpp" startline="152" endline="176">CalculateScore</referencedby>
        <referencedby refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" compoundref="stormnode_8cpp" startline="228" endline="244">SecondsSincePayment</referencedby>
        <referencedby refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" compoundref="stormnode_8cpp" startline="246" endline="289">GetLastPaid</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
        <referencedby refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" compoundref="stormnodeman_8cpp" startline="211" endline="227">CStormnodeMan::Add</referencedby>
        <referencedby refid="class_c_stormnode_man_1a64b6022d93220e65e739c5cf8ba74918" compoundref="stormnodeman_8cpp" startline="414" endline="424">CStormnodeMan::Find</referencedby>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
        <referencedby refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" compoundref="stormnodeman_8cpp" startline="504" endline="534">CStormnodeMan::FindRandomNotInVec</referencedby>
        <referencedby refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" compoundref="stormnodeman_8cpp" startline="560" endline="592">CStormnodeMan::GetStormnodeRank</referencedby>
        <referencedby refid="class_c_stormnode_man_1af631f4c124f3022e4c388d759ca69605" compoundref="stormnodeman_8cpp" startline="630" endline="660">CStormnodeMan::GetStormnodeByRank</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_service" kindref="compound">CService</ref></type>
        <definition>CService CStormnode::addr</definition>
        <argsstring></argsstring>
        <name>addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="123" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="123" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="instantx_8h_1a5d4434bfb70f64f95aa4de9286cbae94" compoundref="instantx_8cpp" startline="302" endline="394">ProcessConsensusVote</referencedby>
        <referencedby refid="class_stormnode_manager_1a8176df10b7594a5d37aeb8d41941a52b" compoundref="stormnodemanager_8cpp" startline="247" endline="269">StormnodeManager::on_UpdateButton_clicked</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1aea4471c128eb07bb1b70b4344ac38564" compoundref="rpcstormnode_8cpp" startline="65" endline="78">getpoolinfo</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1aae4c929f8831a4c678812b1da8f82a55" compoundref="sandstorm-relay_8cpp" startline="105" endline="120">CSandStormRelay::RelayThroughNode</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1a0e1739e9a0c517f0de35807c92db1256" compoundref="sandstorm_8h" startline="179" endline="188">CSandstormQueue::GetAddress</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" compoundref="stormnode_8cpp" startline="128" endline="145">UpdateFromNewBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
        <referencedby refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" compoundref="stormnodeman_8cpp" startline="211" endline="227">CStormnodeMan::Add</referencedby>
        <referencedby refid="class_c_stormnode_man_1a52708159ad91808d18a0b6082ed6daca" compoundref="stormnodeman_8cpp" startline="662" endline="672">CStormnodeMan::ProcessStormnodeConnections</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref></type>
        <definition>CPubKey CStormnode::pubkey</definition>
        <argsstring></argsstring>
        <name>pubkey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="124" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="124" bodyend="-1"/>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="class_c_stormnode_payments_1accaeb923fe36e73d4228fc043771c4ad" compoundref="stormnode-payments_8cpp" startline="294" endline="346">CStormnodePayments::FillBlockPayee</referencedby>
        <referencedby refid="class_c_stormnode_payments_1ac2a8e2a9bef3c4c68c1e464903a1988f" compoundref="stormnode-payments_8cpp" startline="465" endline="488">CStormnodePayments::IsScheduled</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" compoundref="stormnode-payments_8cpp" startline="683" endline="762">CStormnodePayments::ProcessBlock</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" compoundref="stormnode_8cpp" startline="228" endline="244">SecondsSincePayment</referencedby>
        <referencedby refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" compoundref="stormnode_8cpp" startline="246" endline="289">GetLastPaid</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
        <referencedby refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" compoundref="stormnodeman_8cpp" startline="400" endline="412">CStormnodeMan::Find</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref></type>
        <definition>CPubKey CStormnode::pubkey2</definition>
        <argsstring></argsstring>
        <name>pubkey2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="125" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="125" bodyend="-1"/>
        <referencedby refid="class_c_sandstorm_queue_1a8ef2f37969599d3b30bbe479eff56460" compoundref="sandstorm_8cpp" startline="2132" endline="2149">CSandstormQueue::CheckSignature</referencedby>
        <referencedby refid="class_c_budget_vote_1ab01d2ab30c3761318a7da919bff26697" compoundref="stormnode-budget_8cpp" startline="1623" endline="1644">CBudgetVote::SignatureValid</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1a7c86a0fbc7e6fb5f6e07a0248ed04a43" compoundref="stormnode-payments_8cpp" startline="770" endline="790">CStormnodePaymentWinner::SignatureValid</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" compoundref="stormnode_8cpp" startline="128" endline="145">UpdateFromNewBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
        <referencedby refid="class_c_stormnode_man_1a8daba6b955faaf839f9441b754bd7eef" compoundref="stormnodeman_8cpp" startline="427" endline="437">CStormnodeMan::Find</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" prot="public" static="no" mutable="no">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CStormnode::sig</definition>
        <argsstring></argsstring>
        <name>sig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="126" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="126" bodyend="-1"/>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" compoundref="stormnode_8cpp" startline="128" endline="145">UpdateFromNewBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CStormnode::activeState</definition>
        <argsstring></argsstring>
        <name>activeState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="127" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="127" bodyend="-1"/>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" compoundref="stormnode_8cpp" startline="178" endline="226">Check</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CStormnode::sigTime</definition>
        <argsstring></argsstring>
        <name>sigTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="128" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="128" bodyend="-1"/>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" compoundref="stormnode_8cpp" startline="128" endline="145">UpdateFromNewBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" compoundref="stormnode_8cpp" startline="178" endline="226">Check</referencedby>
        <referencedby refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" compoundref="stormnode_8cpp" startline="228" endline="244">SecondsSincePayment</referencedby>
        <referencedby refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" compoundref="stormnode_8cpp" startline="246" endline="289">GetLastPaid</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CStormnode::cacheInputAge</definition>
        <argsstring></argsstring>
        <name>cacheInputAge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="129" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="129" bodyend="-1"/>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CStormnode::cacheInputAgeBlock</definition>
        <argsstring></argsstring>
        <name>cacheInputAgeBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="130" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="130" bodyend="-1"/>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CStormnode::unitTest</definition>
        <argsstring></argsstring>
        <name>unitTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="131" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="131" bodyend="-1"/>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" compoundref="stormnode_8cpp" startline="178" endline="226">Check</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CStormnode::allowFreeTx</definition>
        <argsstring></argsstring>
        <name>allowFreeTx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="132" bodyend="-1"/>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CStormnode::protocolVersion</definition>
        <argsstring></argsstring>
        <name>protocolVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="133" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="133" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1acaa6374baeb707ed1726ec60c67c1624" compoundref="sandstorm_8h" startline="191" endline="200">CSandstormQueue::GetProtocolVersion</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1ae8e5cecfd1f95eed8fdd14f019360fa0" compoundref="stormnode-payments_8cpp" startline="644" endline="681">CStormnodePaymentWinner::IsValid</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" compoundref="stormnode_8cpp" startline="128" endline="145">UpdateFromNewBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
        <referencedby refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" compoundref="stormnodeman_8cpp" startline="364" endline="376">CStormnodeMan::CountEnabled</referencedby>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
        <referencedby refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" compoundref="stormnodeman_8cpp" startline="504" endline="534">CStormnodeMan::FindRandomNotInVec</referencedby>
        <referencedby refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" compoundref="stormnodeman_8cpp" startline="536" endline="558">CStormnodeMan::GetCurrentStormNode</referencedby>
        <referencedby refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" compoundref="stormnodeman_8cpp" startline="560" endline="592">CStormnodeMan::GetStormnodeRank</referencedby>
        <referencedby refid="class_c_stormnode_man_1a5337440744bbc51b2e7a9752c3613a26" compoundref="stormnodeman_8cpp" startline="594" endline="628">CStormnodeMan::GetStormnodeRanks</referencedby>
        <referencedby refid="class_c_stormnode_man_1af631f4c124f3022e4c388d759ca69605" compoundref="stormnodeman_8cpp" startline="630" endline="660">CStormnodeMan::GetStormnodeByRank</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CStormnode::nLastSsq</definition>
        <argsstring></argsstring>
        <name>nLastSsq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="134" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="134" bodyend="-1"/>
        <referencedby refid="class_c_sandstorm_pool_1acf0b5b0e5703c88b7d3c9cb121ec6533" compoundref="sandstorm_8cpp" startline="38" endline="374">CSandstormPool::ProcessMessageSandstorm</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a459d1986058ad736773fa9857390ba96" compoundref="sandstorm_8cpp" startline="1353" endline="1625">CSandstormPool::DoAutomaticDenominating</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CStormnode::nScanningErrorCount</definition>
        <argsstring></argsstring>
        <name>nScanningErrorCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="135" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="135" bodyend="-1"/>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CStormnode::nLastScanningErrorBlockHeight</definition>
        <argsstring></argsstring>
        <name>nLastScanningErrorBlockHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="136" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="136" bodyend="-1"/>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref></type>
        <definition>CStormnodePing CStormnode::lastPing</definition>
        <argsstring></argsstring>
        <name>lastPing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="137" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="137" bodyend="-1"/>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" compoundref="stormnode_8cpp" startline="128" endline="145">UpdateFromNewBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" compoundref="stormnode_8cpp" startline="178" endline="226">Check</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" compoundref="stormnode_8h" startline="144" endline="167">swap</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_1a7dabb832beef5f761352a4799c55bbec" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CStormnode::ADD_SERIALIZE_METHODS</definition>
        <argsstring></argsstring>
        <name>ADD_SERIALIZE_METHODS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="185" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CStormnode::CStormnode</definition>
        <argsstring>()</argsstring>
        <name>CStormnode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="139" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="59" bodyend="79"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">vin</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">addr</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">pubkey</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">pubkey2</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">sig</references>
        <references refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" compoundref="stormnode_8h" startline="127">activeState</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" compoundref="stormnode_8h" startline="115">STORMNODE_ENABLED</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">sigTime</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" compoundref="stormnode_8h" startline="137">lastPing</references>
        <references refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" compoundref="stormnode_8h" startline="129">cacheInputAge</references>
        <references refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" compoundref="stormnode_8h" startline="130">cacheInputAgeBlock</references>
        <references refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" compoundref="stormnode_8h" startline="131">unitTest</references>
        <references refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" compoundref="stormnode_8h" startline="132">allowFreeTx</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">protocolVersion</references>
        <references refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" compoundref="stormnode_8h" startline="134">nLastSsq</references>
        <references refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" compoundref="stormnode_8h" startline="135">nScanningErrorCount</references>
        <references refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" compoundref="stormnode_8h" startline="136">nLastScanningErrorBlockHeight</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1ac5d7c79ce5e3187bf1703bdf968e4c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CStormnode::CStormnode</definition>
        <argsstring>(const CStormnode &amp;other)</argsstring>
        <name>CStormnode</name>
        <param>
          <type>const <ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="140" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="81" bodyend="101"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">vin</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">addr</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">pubkey</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">pubkey2</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">sig</references>
        <references refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" compoundref="stormnode_8h" startline="127">activeState</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">sigTime</references>
        <references refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" compoundref="stormnode_8h" startline="137">lastPing</references>
        <references refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" compoundref="stormnode_8h" startline="129">cacheInputAge</references>
        <references refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" compoundref="stormnode_8h" startline="130">cacheInputAgeBlock</references>
        <references refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" compoundref="stormnode_8h" startline="131">unitTest</references>
        <references refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" compoundref="stormnode_8h" startline="132">allowFreeTx</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">protocolVersion</references>
        <references refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" compoundref="stormnode_8h" startline="134">nLastSsq</references>
        <references refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" compoundref="stormnode_8h" startline="135">nScanningErrorCount</references>
        <references refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" compoundref="stormnode_8h" startline="136">nLastScanningErrorBlockHeight</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a81bcdb5b9c2b0219667edc3bfd62c1af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CStormnode::CStormnode</definition>
        <argsstring>(const CStormnodeBroadcast &amp;snb)</argsstring>
        <name>CStormnode</name>
        <param>
          <type>const <ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref> &amp;</type>
          <declname>snb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="141" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="103" bodyend="123"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">vin</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">addr</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">pubkey</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">pubkey2</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">sig</references>
        <references refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" compoundref="stormnode_8h" startline="127">activeState</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" compoundref="stormnode_8h" startline="115">STORMNODE_ENABLED</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">sigTime</references>
        <references refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" compoundref="stormnode_8h" startline="137">lastPing</references>
        <references refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" compoundref="stormnode_8h" startline="129">cacheInputAge</references>
        <references refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" compoundref="stormnode_8h" startline="130">cacheInputAgeBlock</references>
        <references refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" compoundref="stormnode_8h" startline="131">unitTest</references>
        <references refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" compoundref="stormnode_8h" startline="132">allowFreeTx</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">protocolVersion</references>
        <references refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" compoundref="stormnode_8h" startline="134">nLastSsq</references>
        <references refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" compoundref="stormnode_8h" startline="135">nScanningErrorCount</references>
        <references refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" compoundref="stormnode_8h" startline="136">nLastScanningErrorBlockHeight</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CStormnode::swap</definition>
        <argsstring>(CStormnode &amp;first, CStormnode &amp;second)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> &amp;</type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="144" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="144" bodyend="167"/>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">vin</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">addr</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">pubkey</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">pubkey2</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">sig</references>
        <references refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" compoundref="stormnode_8h" startline="127">activeState</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">sigTime</references>
        <references refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" compoundref="stormnode_8h" startline="137">lastPing</references>
        <references refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" compoundref="stormnode_8h" startline="129">cacheInputAge</references>
        <references refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" compoundref="stormnode_8h" startline="130">cacheInputAgeBlock</references>
        <references refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" compoundref="stormnode_8h" startline="131">unitTest</references>
        <references refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" compoundref="stormnode_8h" startline="132">allowFreeTx</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">protocolVersion</references>
        <references refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" compoundref="stormnode_8h" startline="134">nLastSsq</references>
        <references refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" compoundref="stormnode_8h" startline="135">nScanningErrorCount</references>
        <references refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" compoundref="stormnode_8h" startline="136">nLastScanningErrorBlockHeight</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1af951dafbb25b9e659ef86cd52683aa7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> &amp;</type>
        <definition>CStormnode&amp; CStormnode::operator=</definition>
        <argsstring>(CStormnode from)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref></type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="169" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CStormnode::CalculateScore</definition>
        <argsstring>(int mod=1, int64_t nBlockHeight=0)</argsstring>
        <name>CalculateScore</name>
        <param>
          <type>int</type>
          <declname>mod</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nBlockHeight</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="183" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="152" bodyend="176"/>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">vin</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" compoundref="transaction_8h" startline="31">COutPoint::n</references>
        <references refid="stormnode_8cpp_1a32f5cbabfc2bd53c2f2daedf122a83cb" compoundref="stormnode_8cpp" startline="22" endline="57">GetBlockHash</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" compoundref="hash_8h" startline="186" endline="192">CHashWriter::GetHash</references>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
        <referencedby refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" compoundref="stormnodeman_8cpp" startline="536" endline="558">CStormnodeMan::GetCurrentStormNode</referencedby>
        <referencedby refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" compoundref="stormnodeman_8cpp" startline="560" endline="592">CStormnodeMan::GetStormnodeRank</referencedby>
        <referencedby refid="class_c_stormnode_man_1a5337440744bbc51b2e7a9752c3613a26" compoundref="stormnodeman_8cpp" startline="594" endline="628">CStormnodeMan::GetStormnodeRanks</referencedby>
        <referencedby refid="class_c_stormnode_man_1af631f4c124f3022e4c388d759ca69605" compoundref="stormnodeman_8cpp" startline="630" endline="660">CStormnodeMan::GetStormnodeByRank</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a7942368f526da3cfd40e77b8dd7cffd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CStormnode::SerializationOp</definition>
        <argsstring>(Stream &amp;s, Operation ser_action, int nType, int nVersion)</argsstring>
        <name>SerializationOp</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>ser_action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="188" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="188" bodyend="207"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" compoundref="serialize_8h" startline="101">READWRITE</references>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CStormnode::SecondsSincePayment</definition>
        <argsstring>()</argsstring>
        <name>SecondsSincePayment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="209" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="228" bodyend="244"/>
        <references refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" compoundref="script_8cpp" startline="3226" endline="3232">GetScriptForDestination</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">pubkey</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" compoundref="stormnode_8cpp" startline="246" endline="289">GetLastPaid</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">vin</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">sigTime</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" compoundref="hash_8h" startline="186" endline="192">CHashWriter::GetHash</references>
        <references refid="classuint256_1af30486eee47f077f91ed762d0db6ddca" compoundref="uint256_8cpp" startline="274" endline="295">uint256::GetCompact</references>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnode::UpdateFromNewBroadcast</definition>
        <argsstring>(CStormnodeBroadcast &amp;snb)</argsstring>
        <name>UpdateFromNewBroadcast</name>
        <param>
          <type><ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref> &amp;</type>
          <declname>snb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="211" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="128" bodyend="145"/>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">sigTime</references>
        <references refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" compoundref="stormnode_8h" startline="125">pubkey2</references>
        <references refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" compoundref="stormnode_8h" startline="126">sig</references>
        <references refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" compoundref="stormnode_8h" startline="133">protocolVersion</references>
        <references refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" compoundref="stormnode_8h" startline="123">addr</references>
        <references refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" compoundref="stormnode_8h" startline="137">lastPing</references>
        <references refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" compoundref="stormnode_8cpp" startline="578" endline="664">CStormnodePing::CheckAndUpdate</references>
        <references refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" compoundref="stormnodeman_8cpp" startline="18">snodeman</references>
        <references refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" compoundref="stormnodeman_8h" startline="71">CStormnodeMan::mapSeenStormnodePing</references>
        <references refid="class_c_stormnode_ping_1a3e2dbb87bd2fd09f87d6306606a48acb" compoundref="stormnode_8h" startline="65" endline="70">CStormnodePing::GetHash</references>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a2231073a0817c566e0d5c3fa08f53b5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t CStormnode::SliceHash</definition>
        <argsstring>(uint256 &amp;hash, int slice)</argsstring>
        <name>SliceHash</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="213" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CStormnode::Check</definition>
        <argsstring>(bool forceCheck=false)</argsstring>
        <name>Check</name>
        <param>
          <type>bool</type>
          <declname>forceCheck</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="220" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="178" bodyend="226"/>
        <references refid="init_8cpp_1a6f201ca9fe6b594f1985c12b4482ea5a" compoundref="init_8cpp" startline="125" endline="128">ShutdownRequested</references>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" compoundref="stormnode_8h" startline="127">activeState</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0abe760cfa737f943c06d449afc2b03f1d" compoundref="stormnode_8h" startline="117">STORMNODE_VIN_SPENT</references>
        <references refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" compoundref="stormnode_8h" startline="137">lastPing</references>
        <references refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" compoundref="stormnode_8h" startline="44">CStormnodePing::sigTime</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">sigTime</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4d96c08f8f4c62ae9e43b0d82db5e2f1" compoundref="stormnode_8h" startline="114">STORMNODE_PRE_ENABLED</references>
        <references refid="class_c_stormnode_1a5f19595c1ccbb539f2d369871671ab70" compoundref="stormnode_8h" startline="227" endline="234">IsPingedWithin</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a89fa3f4b7441a2d2add5334396a88b06" compoundref="stormnode_8h" startline="118">STORMNODE_REMOVE</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0ab3e35c4e3e07236ee4bdd2fc0cc11f99" compoundref="stormnode_8h" startline="116">STORMNODE_EXPIRED</references>
        <references refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" compoundref="stormnode_8h" startline="131">unitTest</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" compoundref="stormnode_8h" startline="115">STORMNODE_ENABLED</references>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_man_1a2e0f73af79892b3f86b7d1b07eaa85ce" compoundref="stormnodeman_8cpp" startline="246" endline="253">CStormnodeMan::Check</referencedby>
        <referencedby refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" compoundref="stormnodeman_8cpp" startline="364" endline="376">CStormnodeMan::CountEnabled</referencedby>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
        <referencedby refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" compoundref="stormnodeman_8cpp" startline="536" endline="558">CStormnodeMan::GetCurrentStormNode</referencedby>
        <referencedby refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" compoundref="stormnodeman_8cpp" startline="560" endline="592">CStormnodeMan::GetStormnodeRank</referencedby>
        <referencedby refid="class_c_stormnode_man_1a5337440744bbc51b2e7a9752c3613a26" compoundref="stormnodeman_8cpp" startline="594" endline="628">CStormnodeMan::GetStormnodeRanks</referencedby>
        <referencedby refid="class_c_stormnode_man_1af631f4c124f3022e4c388d759ca69605" compoundref="stormnodeman_8cpp" startline="630" endline="660">CStormnodeMan::GetStormnodeByRank</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a01713cf27e8c36c1677a5e3bad2674b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnode::IsBroadcastedWithin</definition>
        <argsstring>(int seconds)</argsstring>
        <name>IsBroadcastedWithin</name>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="222" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="222" bodyend="225"/>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a5f19595c1ccbb539f2d369871671ab70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnode::IsPingedWithin</definition>
        <argsstring>(int seconds, int64_t now=-1)</argsstring>
        <name>IsPingedWithin</name>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>now</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="227" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="227" bodyend="234"/>
        <references refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</references>
        <references refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" compoundref="stormnode_8h" startline="44">CStormnodePing::sigTime</references>
        <referencedby refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" compoundref="stormnode_8cpp" startline="178" endline="226">Check</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1ab97bb31f794c0cfd4d740c0a3cc1efbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CStormnode::Disable</definition>
        <argsstring>()</argsstring>
        <name>Disable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="236" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="236" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnode::IsEnabled</definition>
        <argsstring>()</argsstring>
        <name>IsEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="242" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="242" bodyend="245"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" compoundref="stormnodeman_8cpp" startline="211" endline="227">CStormnodeMan::Add</referencedby>
        <referencedby refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" compoundref="stormnodeman_8cpp" startline="364" endline="376">CStormnodeMan::CountEnabled</referencedby>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
        <referencedby refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" compoundref="stormnodeman_8cpp" startline="504" endline="534">CStormnodeMan::FindRandomNotInVec</referencedby>
        <referencedby refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" compoundref="stormnodeman_8cpp" startline="536" endline="558">CStormnodeMan::GetCurrentStormNode</referencedby>
        <referencedby refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" compoundref="stormnodeman_8cpp" startline="560" endline="592">CStormnodeMan::GetStormnodeRank</referencedby>
        <referencedby refid="class_c_stormnode_man_1a5337440744bbc51b2e7a9752c3613a26" compoundref="stormnodeman_8cpp" startline="594" endline="628">CStormnodeMan::GetStormnodeRanks</referencedby>
        <referencedby refid="class_c_stormnode_man_1af631f4c124f3022e4c388d759ca69605" compoundref="stormnodeman_8cpp" startline="630" endline="660">CStormnodeMan::GetStormnodeByRank</referencedby>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1adb7b900b9608f2360b9cf97f7b836679" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnode::IsPreEnabled</definition>
        <argsstring>()</argsstring>
        <name>IsPreEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="247" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="247" bodyend="250"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" compoundref="stormnode_8cpp" startline="424" endline="507">CStormnodeBroadcast::CheckInputsAndAdd</referencedby>
        <referencedby refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" compoundref="stormnodeman_8cpp" startline="211" endline="227">CStormnodeMan::Add</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a8a82685a7b1ea42d49e44459b35932fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CStormnode::GetStormnodeInputAge</definition>
        <argsstring>()</argsstring>
        <name>GetStormnodeInputAge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="252" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="252" bodyend="262"/>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="main_8cpp_1ae137d76bbcaf8d65fab905889b504e26" compoundref="main_8cpp" startline="1487" endline="1504">GetInputAge</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1aa96a9dc4e1c835657fe5d9c8410adf83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CStormnode::Status</definition>
        <argsstring>()</argsstring>
        <name>Status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="264" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="264" bodyend="275"/>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4d96c08f8f4c62ae9e43b0d82db5e2f1" compoundref="stormnode_8h" startline="114">STORMNODE_PRE_ENABLED</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" compoundref="stormnode_8h" startline="115">STORMNODE_ENABLED</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0ab3e35c4e3e07236ee4bdd2fc0cc11f99" compoundref="stormnode_8h" startline="116">STORMNODE_EXPIRED</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0abe760cfa737f943c06d449afc2b03f1d" compoundref="stormnode_8h" startline="117">STORMNODE_VIN_SPENT</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a89fa3f4b7441a2d2add5334396a88b06" compoundref="stormnode_8h" startline="118">STORMNODE_REMOVE</references>
        <references refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a61dac974c55abf841bb617fa4beba96e" compoundref="stormnode_8h" startline="119">STORMNODE_POS_ERROR</references>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CStormnode::GetLastPaid</definition>
        <argsstring>()</argsstring>
        <name>GetLastPaid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="277" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="246" bodyend="289"/>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" compoundref="script_8cpp" startline="3226" endline="3232">GetScriptForDestination</references>
        <references refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" compoundref="stormnode_8h" startline="124">pubkey</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" compoundref="stormnode_8h" startline="122">vin</references>
        <references refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" compoundref="stormnode_8h" startline="128">sigTime</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="classuint256_1af30486eee47f077f91ed762d0db6ddca" compoundref="uint256_8cpp" startline="274" endline="295">uint256::GetCompact</references>
        <references refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" compoundref="stormnodeman_8cpp" startline="18">snodeman</references>
        <references refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" compoundref="stormnodeman_8cpp" startline="364" endline="376">CStormnodeMan::CountEnabled</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" compoundref="stormnode-payments_8cpp" startline="18">stormnodePayments</references>
        <references refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" compoundref="stormnode-payments_8h" startline="227">CStormnodePayments::mapStormnodeBlocks</references>
        <references refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" compoundref="chain_8h" startline="141">CBlockIndex::nTime</references>
        <references refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" compoundref="chain_8h" startline="111">CBlockIndex::pprev</references>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" compoundref="stormnode_8cpp" startline="228" endline="244">SecondsSincePayment</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_stormnode_1a121484799f6f30f52d4c867ea52a6bca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CStormnode &amp;a, const CStormnode &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="174" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_stormnode_1ab037406f267a8477e18d96d04b6080f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const CStormnode &amp;a, const CStormnode &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_stormnode" kindref="compound">CStormnode</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="178" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="178" bodyend="181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2757">
        <label>CStormnodeBroadcast</label>
        <link refid="class_c_stormnode_broadcast"/>
        <childnode refid="2756" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2756">
        <label>CStormnode</label>
        <link refid="class_c_stormnode"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2765">
        <label>base_uint&lt; 256 &gt;</label>
        <link refid="classbase__uint"/>
      </node>
      <node id="2759">
        <label>CStormnodePing</label>
        <link refid="class_c_stormnode_ping"/>
        <childnode refid="2760" relation="usage">
          <edgelabel>vin</edgelabel>
        </childnode>
        <childnode refid="2764" relation="usage">
          <edgelabel>blockHash</edgelabel>
        </childnode>
      </node>
      <node id="2766">
        <label>CPubKey</label>
        <link refid="class_c_pub_key"/>
      </node>
      <node id="2760">
        <label>CTxIn</label>
        <link refid="class_c_tx_in"/>
        <childnode refid="2761" relation="usage">
          <edgelabel>scriptSig</edgelabel>
          <edgelabel>prevPubKey</edgelabel>
        </childnode>
        <childnode refid="2763" relation="usage">
          <edgelabel>prevout</edgelabel>
        </childnode>
      </node>
      <node id="2764">
        <label>uint256</label>
        <link refid="classuint256"/>
        <childnode refid="2765" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2768">
        <label>CNetAddr</label>
        <link refid="class_c_net_addr"/>
      </node>
      <node id="2763">
        <label>COutPoint</label>
        <link refid="class_c_out_point"/>
        <childnode refid="2764" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="2758">
        <label>CStormnode</label>
        <link refid="class_c_stormnode"/>
        <childnode refid="2759" relation="usage">
          <edgelabel>lastPing</edgelabel>
        </childnode>
        <childnode refid="2760" relation="usage">
          <edgelabel>vin</edgelabel>
        </childnode>
        <childnode refid="2766" relation="usage">
          <edgelabel>pubkey</edgelabel>
          <edgelabel>pubkey2</edgelabel>
        </childnode>
        <childnode refid="2767" relation="usage">
          <edgelabel>addr</edgelabel>
        </childnode>
      </node>
      <node id="2761">
        <label>CScript</label>
        <link refid="class_c_script"/>
        <childnode refid="2762" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2762">
        <label>std::vector&lt; unsigned char &gt;</label>
      </node>
      <node id="2767">
        <label>CService</label>
        <link refid="class_c_service"/>
        <childnode refid="2768" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/stormnode.h" line="107" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="106" bodyend="279"/>
    <listofallmembers>
      <member refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>activeState</name></member>
      <member refid="class_c_stormnode_1a7dabb832beef5f761352a4799c55bbec" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>ADD_SERIALIZE_METHODS</name></member>
      <member refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>addr</name></member>
      <member refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>allowFreeTx</name></member>
      <member refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>cacheInputAge</name></member>
      <member refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>cacheInputAgeBlock</name></member>
      <member refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>CalculateScore</name></member>
      <member refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>Check</name></member>
      <member refid="class_c_stormnode_1acf90628a4c7cf6ecc804f46e3c20968f" prot="private" virt="non-virtual"><scope>CStormnode</scope><name>cs</name></member>
      <member refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>CStormnode</name></member>
      <member refid="class_c_stormnode_1ac5d7c79ce5e3187bf1703bdf968e4c2e" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>CStormnode</name></member>
      <member refid="class_c_stormnode_1a81bcdb5b9c2b0219667edc3bfd62c1af" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>CStormnode</name></member>
      <member refid="class_c_stormnode_1ab97bb31f794c0cfd4d740c0a3cc1efbe" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>Disable</name></member>
      <member refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>GetLastPaid</name></member>
      <member refid="class_c_stormnode_1a8a82685a7b1ea42d49e44459b35932fe" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>GetStormnodeInputAge</name></member>
      <member refid="class_c_stormnode_1a01713cf27e8c36c1677a5e3bad2674b5" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>IsBroadcastedWithin</name></member>
      <member refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>IsEnabled</name></member>
      <member refid="class_c_stormnode_1a5f19595c1ccbb539f2d369871671ab70" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>IsPingedWithin</name></member>
      <member refid="class_c_stormnode_1adb7b900b9608f2360b9cf97f7b836679" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>IsPreEnabled</name></member>
      <member refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>lastPing</name></member>
      <member refid="class_c_stormnode_1a1303d7ea524e5213f8aa1628661dff2e" prot="private" virt="non-virtual"><scope>CStormnode</scope><name>lastTimeChecked</name></member>
      <member refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>nLastScanningErrorBlockHeight</name></member>
      <member refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>nLastSsq</name></member>
      <member refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>nScanningErrorCount</name></member>
      <member refid="class_c_stormnode_1ab037406f267a8477e18d96d04b6080f1" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>operator!=</name></member>
      <member refid="class_c_stormnode_1af951dafbb25b9e659ef86cd52683aa7f" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>operator=</name></member>
      <member refid="class_c_stormnode_1a121484799f6f30f52d4c867ea52a6bca" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>operator==</name></member>
      <member refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>protocolVersion</name></member>
      <member refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>pubkey</name></member>
      <member refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>pubkey2</name></member>
      <member refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>SecondsSincePayment</name></member>
      <member refid="class_c_stormnode_1a7942368f526da3cfd40e77b8dd7cffd1" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>SerializationOp</name></member>
      <member refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>sig</name></member>
      <member refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>sigTime</name></member>
      <member refid="class_c_stormnode_1a2231073a0817c566e0d5c3fa08f53b5c" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>SliceHash</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>state</name></member>
      <member refid="class_c_stormnode_1aa96a9dc4e1c835657fe5d9c8410adf83" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>Status</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>STORMNODE_ENABLED</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0ab3e35c4e3e07236ee4bdd2fc0cc11f99" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>STORMNODE_EXPIRED</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a61dac974c55abf841bb617fa4beba96e" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>STORMNODE_POS_ERROR</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4d96c08f8f4c62ae9e43b0d82db5e2f1" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>STORMNODE_PRE_ENABLED</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a89fa3f4b7441a2d2add5334396a88b06" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>STORMNODE_REMOVE</name></member>
      <member refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0abe760cfa737f943c06d449afc2b03f1d" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>STORMNODE_VIN_SPENT</name></member>
      <member refid="class_c_stormnode_1aefe9e633b4f4f7ce4af12a64faf100d4" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>swap</name></member>
      <member refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>unitTest</name></member>
      <member refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>UpdateFromNewBroadcast</name></member>
      <member refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" prot="public" virt="non-virtual"><scope>CStormnode</scope><name>vin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
