<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_sand_storm_signer" kind="class" language="C++" prot="public">
    <compoundname>CSandStormSigner</compoundname>
    <includes refid="sandstorm_8h" local="no">sandstorm.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_sand_storm_signer_1a21af58bfa950441f5d61e789a876ddda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandStormSigner::IsVinAssociatedWithPubkey</definition>
        <argsstring>(CTxIn &amp;vin, CPubKey &amp;pubkey)</argsstring>
        <name>IsVinAssociatedWithPubkey</name>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>vin</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
<para>Is the inputs associated with this public key? (and there is 1000 DASH - checking if valid stormnode) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="241" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2027" bodyend="2042"/>
        <references refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" compoundref="script_8cpp" startline="3226" endline="3232">GetScriptForDestination</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" compoundref="cache_8cc" startline="34">hash</references>
        <references refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</references>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" compoundref="transaction_8h" startline="30">COutPoint::hash</references>
        <references refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" compoundref="transaction_8h" startline="168">CTxOut::nValue</references>
        <references refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" compoundref="transaction_8h" startline="170">CTxOut::scriptPubKey</references>
        <referencedby refid="class_c_stormnode_man_1ae30d0b9b493e23c3d14ec48c77be7b6f" compoundref="stormnodeman_8cpp" startline="674" endline="803">CStormnodeMan::ProcessMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandStormSigner::SetKey</definition>
        <argsstring>(std::string strSecret, std::string &amp;errorMessage, CKey &amp;key, CPubKey &amp;pubkey)</argsstring>
        <name>SetKey</name>
        <param>
          <type>std::string</type>
          <declname>strSecret</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
<para>Set the private/public key values, returns true if successful. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="243" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2044" bodyend="2057"/>
        <references refid="class_c_dark_silk_secret_1a06075192fb631c3b406a6ca231d2f926" compoundref="base58_8cpp" startline="271" endline="273">CDarkSilkSecret::SetString</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="class_c_dark_silk_secret_1af7b026d90efb897f6e592ce424c8d2c9" compoundref="base58_8cpp" startline="258" endline="263">CDarkSilkSecret::GetKey</references>
        <references refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" compoundref="key_8cpp" startline="169" endline="180">CKey::GetPubKey</references>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" compoundref="activestormnode_8cpp" startline="209" endline="252">CActiveStormnode::Register</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="class_c_consensus_vote_1a687495887aa75f5d5bb70f93ecb820d0" compoundref="instantx_8cpp" startline="493" endline="520">CConsensusVote::Sign</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aae19bf2ba52f3b864bfaf70206bcb29a" compoundref="rpcstormnode-budget_8cpp" startline="22" endline="515">snbudget</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aaff1bdc7f9f32708efc9094bb6ab0e0d" compoundref="rpcstormnode-budget_8cpp" startline="569" endline="761">snfinalbudget</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1a7263335082b2638b8eafc59e21e79baa" compoundref="sandstorm-relay_8cpp" startline="40" endline="65">CSandStormRelay::Sign</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1add9d29eac76800e8d07ced2e0b3eec4b" compoundref="sandstorm-relay_8cpp" startline="67" endline="87">CSandStormRelay::VerifyMessage</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" compoundref="sandstorm_8cpp" startline="2091" endline="2118">CSandstormQueue::Sign</referencedby>
        <referencedby refid="class_c_spork_manager_1adf1b5d40f378c4bd3a5ea31905b11f30" compoundref="spork_8cpp" startline="190" endline="215">CSporkManager::Sign</referencedby>
        <referencedby refid="class_c_finalized_budget_1a8d5710eaf0fe541dcdce1d5f2ebee51c" compoundref="stormnode-budget_8cpp" startline="1914" endline="1940">CFinalizedBudget::SubmitVote</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" compoundref="stormnode-payments_8cpp" startline="683" endline="762">CStormnodePayments::ProcessBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandStormSigner::SignMessage</definition>
        <argsstring>(std::string strMessage, std::string &amp;errorMessage, std::vector&lt; unsigned char &gt; &amp;vchSig, CKey key)</argsstring>
        <name>SignMessage</name>
        <param>
          <type>std::string</type>
          <declname>strMessage</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <param>
          <type>std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Sign the message, returns true if successful. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="245" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2059" bodyend="2071"/>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="main_8cpp_1a1cad9567b6474e6096232b14ed6a8476" compoundref="main_8cpp" startline="106">strMessageMagic</references>
        <references refid="class_c_key_1a59afeabf3f63d99dfdbd3722087853a1" compoundref="key_8cpp" startline="211" endline="224">CKey::SignCompact</references>
        <references refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" compoundref="hash_8h" startline="186" endline="192">CHashWriter::GetHash</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <referencedby refid="class_c_consensus_vote_1a687495887aa75f5d5bb70f93ecb820d0" compoundref="instantx_8cpp" startline="493" endline="520">CConsensusVote::Sign</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1a7263335082b2638b8eafc59e21e79baa" compoundref="sandstorm-relay_8cpp" startline="40" endline="65">CSandStormRelay::Sign</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" compoundref="sandstorm_8cpp" startline="2091" endline="2118">CSandstormQueue::Sign</referencedby>
        <referencedby refid="class_c_spork_manager_1adf1b5d40f378c4bd3a5ea31905b11f30" compoundref="spork_8cpp" startline="190" endline="215">CSporkManager::Sign</referencedby>
        <referencedby refid="class_c_budget_vote_1a112c52bed648dd66fe2898e002fc3f09" compoundref="stormnode-budget_8cpp" startline="1601" endline="1621">CBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1ac417b917ae18df17838b49371435c64a" compoundref="stormnode-budget_8cpp" startline="2002" endline="2022">CFinalizedBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1a2ee621a52030230a8e3307886f5f45be" compoundref="stormnode-payments_8cpp" startline="432" endline="452">CStormnodePaymentWinner::Sign</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" compoundref="stormnode_8cpp" startline="557" endline="576">CStormnodePing::Sign</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSandStormSigner::VerifyMessage</definition>
        <argsstring>(CPubKey pubkey, std::vector&lt; unsigned char &gt; &amp;vchSig, std::string strMessage, std::string &amp;errorMessage)</argsstring>
        <name>VerifyMessage</name>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref></type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type>std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>strMessage</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <briefdescription>
<para>Verify the message, returns true if succcessful. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/sandstorm.h" line="247" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.cpp" bodystart="2073" bodyend="2089"/>
        <references refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" compoundref="serialize_8h" startline="91">SER_GETHASH</references>
        <references refid="main_8cpp_1a1cad9567b6474e6096232b14ed6a8476" compoundref="main_8cpp" startline="106">strMessageMagic</references>
        <references refid="class_c_pub_key_1a169505e735a02db385486b0affeb565c" compoundref="pubkey_8cpp" startline="187" endline="205">CPubKey::RecoverCompact</references>
        <references refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" compoundref="hash_8h" startline="186" endline="192">CHashWriter::GetHash</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
        <references refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" compoundref="pubkey_8h" startline="132" endline="134">CPubKey::GetID</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" compoundref="uint256_8cpp" startline="198" endline="201">base_uint&lt; BITS &gt;::ToString</references>
        <referencedby refid="class_c_consensus_vote_1ac6550a89acee255e0035e189a42a6310" compoundref="instantx_8cpp" startline="471" endline="491">CConsensusVote::SignatureValid</referencedby>
        <referencedby refid="class_c_consensus_vote_1a687495887aa75f5d5bb70f93ecb820d0" compoundref="instantx_8cpp" startline="493" endline="520">CConsensusVote::Sign</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1a7263335082b2638b8eafc59e21e79baa" compoundref="sandstorm-relay_8cpp" startline="40" endline="65">CSandStormRelay::Sign</referencedby>
        <referencedby refid="class_c_sand_storm_relay_1add9d29eac76800e8d07ced2e0b3eec4b" compoundref="sandstorm-relay_8cpp" startline="67" endline="87">CSandStormRelay::VerifyMessage</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1a7a9c9b05136c8dfe75d9c1d4c81df83b" compoundref="sandstorm_8cpp" startline="2091" endline="2118">CSandstormQueue::Sign</referencedby>
        <referencedby refid="class_c_sandstorm_queue_1a8ef2f37969599d3b30bbe479eff56460" compoundref="sandstorm_8cpp" startline="2132" endline="2149">CSandstormQueue::CheckSignature</referencedby>
        <referencedby refid="class_c_spork_manager_1a697d8c0ce5c422ea125eee96687aa7b3" compoundref="spork_8cpp" startline="175" endline="188">CSporkManager::CheckSignature</referencedby>
        <referencedby refid="class_c_spork_manager_1adf1b5d40f378c4bd3a5ea31905b11f30" compoundref="spork_8cpp" startline="190" endline="215">CSporkManager::Sign</referencedby>
        <referencedby refid="class_c_budget_vote_1a112c52bed648dd66fe2898e002fc3f09" compoundref="stormnode-budget_8cpp" startline="1601" endline="1621">CBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_budget_vote_1ab01d2ab30c3761318a7da919bff26697" compoundref="stormnode-budget_8cpp" startline="1623" endline="1644">CBudgetVote::SignatureValid</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1ac417b917ae18df17838b49371435c64a" compoundref="stormnode-budget_8cpp" startline="2002" endline="2022">CFinalizedBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1aadcc860c6efe5122388a372641297014" compoundref="stormnode-budget_8cpp" startline="2024" endline="2046">CFinalizedBudgetVote::SignatureValid</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1a2ee621a52030230a8e3307886f5f45be" compoundref="stormnode-payments_8cpp" startline="432" endline="452">CStormnodePaymentWinner::Sign</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1a7c86a0fbc7e6fb5f6e07a0248ed04a43" compoundref="stormnode-payments_8cpp" startline="770" endline="790">CStormnodePaymentWinner::SignatureValid</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" compoundref="stormnode_8cpp" startline="557" endline="576">CStormnodePing::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" compoundref="stormnode_8cpp" startline="578" endline="664">CStormnodePing::CheckAndUpdate</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Helper object for signing and checking signatures </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/sandstorm.h" line="238" column="1" bodyfile="/home/dev/ds-160209/src/sandstorm.h" bodystart="237" bodyend="248"/>
    <listofallmembers>
      <member refid="class_c_sand_storm_signer_1a21af58bfa950441f5d61e789a876ddda" prot="public" virt="non-virtual"><scope>CSandStormSigner</scope><name>IsVinAssociatedWithPubkey</name></member>
      <member refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" prot="public" virt="non-virtual"><scope>CSandStormSigner</scope><name>SetKey</name></member>
      <member refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" prot="public" virt="non-virtual"><scope>CSandStormSigner</scope><name>SignMessage</name></member>
      <member refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" prot="public" virt="non-virtual"><scope>CSandStormSigner</scope><name>VerifyMessage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
