<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_stormnode_ping" kind="class" language="C++" prot="public">
    <compoundname>CStormnodePing</compoundname>
    <includes refid="stormnode_8h" local="no">stormnode.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref></type>
        <definition>CTxIn CStormnodePing::vin</definition>
        <argsstring></argsstring>
        <name>vin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="42" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_ping_1a8a77ddaf2c49e48d306c05022e4e6b28" prot="public" static="no" mutable="no">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CStormnodePing::blockHash</definition>
        <argsstring></argsstring>
        <name>blockHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CStormnodePing::sigTime</definition>
        <argsstring></argsstring>
        <name>sigTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_ping_1af0e27eadd1e12a8c75540c012d835ce1" prot="public" static="no" mutable="no">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; CStormnodePing::vchSig</definition>
        <argsstring></argsstring>
        <name>vchSig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="45" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_stormnode_ping_1af7de3b992f923d3fef5d2796264c1698" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CStormnodePing::ADD_SERIALIZE_METHODS</definition>
        <argsstring></argsstring>
        <name>ADD_SERIALIZE_METHODS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_stormnode_ping_1a68d6a920cf9edf6abdd95daf7001c309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CStormnodePing::CStormnodePing</definition>
        <argsstring>()</argsstring>
        <name>CStormnodePing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="48" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="539" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_ping_1a6c1ab32c3bb00188b9328e3b923198df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CStormnodePing::CStormnodePing</definition>
        <argsstring>(CTxIn &amp;newVin)</argsstring>
        <name>CStormnodePing</name>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>newVin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="49" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="547" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_ping_1ab41f768e659b72da337e2f28d226c286" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CStormnodePing::SerializationOp</definition>
        <argsstring>(Stream &amp;s, Operation ser_action, int nType, int nVersion)</argsstring>
        <name>SerializationOp</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>ser_action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="54" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnodePing::CheckAndUpdate</definition>
        <argsstring>(int &amp;nDos, bool fRequireEnabled=true)</argsstring>
        <name>CheckAndUpdate</name>
        <param>
          <type>int &amp;</type>
          <declname>nDos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fRequireEnabled</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="578" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CStormnodePing::Sign</definition>
        <argsstring>(CKey &amp;keyStormnode, CPubKey &amp;pubKeyStormnode)</argsstring>
        <name>Sign</name>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>keyStormnode</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>pubKeyStormnode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="62" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="557" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_ping_1a1f9010915780b43dffae9965531a951a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CStormnodePing::Relay</definition>
        <argsstring>()</argsstring>
        <name>Relay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="63" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="666" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_ping_1a3e2dbb87bd2fd09f87d6306606a48acb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CStormnodePing::GetHash</definition>
        <argsstring>()</argsstring>
        <name>GetHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_ping_1a6d5cdf09bf1f0fef6d02e1efc3557ce1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CStormnodePing::swap</definition>
        <argsstring>(CStormnodePing &amp;first, CStormnodePing &amp;second)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref> &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref> &amp;</type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="72" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="72" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_c_stormnode_ping_1ac6dbda886713de4642d10872595f19c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref> &amp;</type>
        <definition>CStormnodePing&amp; CStormnodePing::operator=</definition>
        <argsstring>(CStormnodePing from)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref></type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="85" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="85" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_stormnode_ping_1ab11e655925feefb19b90952072ae8371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CStormnodePing &amp;a, const CStormnodePing &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="90" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="friend" id="class_c_stormnode_ping_1adeed36dead5e3d3b539466408bee7915" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const CStormnodePing &amp;a, const CStormnodePing &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.h" line="94" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="94" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="903">
        <label>base_uint&lt; 256 &gt;</label>
        <link refid="classbase__uint"/>
      </node>
      <node id="897">
        <label>CStormnodePing</label>
        <link refid="class_c_stormnode_ping"/>
        <childnode refid="898" relation="usage">
          <edgelabel>vin</edgelabel>
        </childnode>
        <childnode refid="902" relation="usage">
          <edgelabel>blockHash</edgelabel>
        </childnode>
      </node>
      <node id="898">
        <label>CTxIn</label>
        <link refid="class_c_tx_in"/>
        <childnode refid="899" relation="usage">
          <edgelabel>scriptSig</edgelabel>
          <edgelabel>prevPubKey</edgelabel>
        </childnode>
        <childnode refid="901" relation="usage">
          <edgelabel>prevout</edgelabel>
        </childnode>
      </node>
      <node id="902">
        <label>uint256</label>
        <link refid="classuint256"/>
        <childnode refid="903" relation="public-inheritance">
        </childnode>
      </node>
      <node id="901">
        <label>COutPoint</label>
        <link refid="class_c_out_point"/>
        <childnode refid="902" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="899">
        <label>CScript</label>
        <link refid="class_c_script"/>
        <childnode refid="900" relation="public-inheritance">
        </childnode>
      </node>
      <node id="900">
        <label>std::vector&lt; unsigned char &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/stormnode.h" line="39" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.h" bodystart="38" bodyend="99"/>
    <listofallmembers>
      <member refid="class_c_stormnode_ping_1af7de3b992f923d3fef5d2796264c1698" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>ADD_SERIALIZE_METHODS</name></member>
      <member refid="class_c_stormnode_ping_1a8a77ddaf2c49e48d306c05022e4e6b28" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>blockHash</name></member>
      <member refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>CheckAndUpdate</name></member>
      <member refid="class_c_stormnode_ping_1a68d6a920cf9edf6abdd95daf7001c309" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>CStormnodePing</name></member>
      <member refid="class_c_stormnode_ping_1a6c1ab32c3bb00188b9328e3b923198df" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>CStormnodePing</name></member>
      <member refid="class_c_stormnode_ping_1a3e2dbb87bd2fd09f87d6306606a48acb" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>GetHash</name></member>
      <member refid="class_c_stormnode_ping_1adeed36dead5e3d3b539466408bee7915" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>operator!=</name></member>
      <member refid="class_c_stormnode_ping_1ac6dbda886713de4642d10872595f19c7" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>operator=</name></member>
      <member refid="class_c_stormnode_ping_1ab11e655925feefb19b90952072ae8371" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>operator==</name></member>
      <member refid="class_c_stormnode_ping_1a1f9010915780b43dffae9965531a951a" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>Relay</name></member>
      <member refid="class_c_stormnode_ping_1ab41f768e659b72da337e2f28d226c286" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>SerializationOp</name></member>
      <member refid="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>Sign</name></member>
      <member refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>sigTime</name></member>
      <member refid="class_c_stormnode_ping_1a6d5cdf09bf1f0fef6d02e1efc3557ce1" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>swap</name></member>
      <member refid="class_c_stormnode_ping_1af0e27eadd1e12a8c75540c012d835ce1" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>vchSig</name></member>
      <member refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" prot="public" virt="non-virtual"><scope>CStormnodePing</scope><name>vin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
