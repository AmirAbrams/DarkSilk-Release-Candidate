<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_block_header" kind="class" language="C++" prot="public">
    <compoundname>CBlockHeader</compoundname>
    <derivedcompoundref refid="class_c_block" prot="public" virt="non-virtual">CBlock</derivedcompoundref>
    <includes refid="primitives_2block_8h" local="no">block.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_c_block_header_1a1da5740e22d124df509383a1ff96eb7c" prot="public" static="yes" mutable="no">
        <type>const <ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref></type>
        <definition>const int32_t CBlockHeader::CURRENT_VERSION</definition>
        <argsstring></argsstring>
        <name>CURRENT_VERSION</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="38" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="38" bodyend="-1"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_header_1a9afed57bea877bbd25b5eb6740c6990d" compoundref="primitives_2block_8h" startline="50" endline="58">CBlockHeader</referencedby>
        <referencedby refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">CBlock::SetNull</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref></type>
        <definition>int32_t CBlockHeader::nVersion</definition>
        <argsstring></argsstring>
        <name>nVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="39" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_index_1a59e8716601432cd20856d45bc2f10633" compoundref="chain_8h" startline="186" endline="218">CBlockIndex::CBlockIndex</referencedby>
        <referencedby refid="class_c_block_index_1a34041486523d190d9ede5d83461fdc00" compoundref="chain_8h" startline="220" endline="231">CBlockIndex::GetBlockHeader</referencedby>
        <referencedby refid="class_c_disk_block_index_1adbe404c55c68be782360b4594d355fad" compoundref="chain_8h" startline="391" endline="407">CDiskBlockIndex::GetBlockHash</referencedby>
        <referencedby refid="class_c_block_header_1ae564e96da45702d79c83e3ad0ce19873" compoundref="primitives_2block_8h" startline="63" endline="71">SerializationOp</referencedby>
        <referencedby refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">CBlock::SetNull</referencedby>
        <referencedby refid="miner_8h_1a391a5a462c3f60bbb7dbf6a09fe2e78f" compoundref="miner_8cpp" startline="401" endline="444">FormatHashBuffers</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" prot="public" static="no" mutable="no">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CBlockHeader::hashPrevBlock</definition>
        <argsstring></argsstring>
        <name>hashPrevBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="40" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="40" bodyend="-1"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_index_1a34041486523d190d9ede5d83461fdc00" compoundref="chain_8h" startline="220" endline="231">CBlockIndex::GetBlockHeader</referencedby>
        <referencedby refid="class_c_disk_block_index_1adbe404c55c68be782360b4594d355fad" compoundref="chain_8h" startline="391" endline="407">CDiskBlockIndex::GetBlockHash</referencedby>
        <referencedby refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">CBlock::SetNull</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="miner_8h_1a6f07c738a8aadffe748358e985b43d3f" compoundref="miner_8cpp" startline="383" endline="399">IncrementExtraNonce</referencedby>
        <referencedby refid="miner_8h_1a391a5a462c3f60bbb7dbf6a09fe2e78f" compoundref="miner_8cpp" startline="401" endline="444">FormatHashBuffers</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="stormnode-payments_8h_1a775fd7f6eef6c395268172c278b9100b" compoundref="stormnode-payments_8cpp" startline="185" endline="228">IsBlockValueValid</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" prot="public" static="no" mutable="no">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CBlockHeader::hashMerkleRoot</definition>
        <argsstring></argsstring>
        <name>hashMerkleRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="41" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="41" bodyend="-1"/>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="class_c_block_index_1a59e8716601432cd20856d45bc2f10633" compoundref="chain_8h" startline="186" endline="218">CBlockIndex::CBlockIndex</referencedby>
        <referencedby refid="class_c_block_index_1a34041486523d190d9ede5d83461fdc00" compoundref="chain_8h" startline="220" endline="231">CBlockIndex::GetBlockHeader</referencedby>
        <referencedby refid="class_c_disk_block_index_1adbe404c55c68be782360b4594d355fad" compoundref="chain_8h" startline="391" endline="407">CDiskBlockIndex::GetBlockHash</referencedby>
        <referencedby refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">CBlock::SetNull</referencedby>
        <referencedby refid="miner_8h_1a6f07c738a8aadffe748358e985b43d3f" compoundref="miner_8cpp" startline="383" endline="399">IncrementExtraNonce</referencedby>
        <referencedby refid="miner_8h_1a391a5a462c3f60bbb7dbf6a09fe2e78f" compoundref="miner_8cpp" startline="401" endline="444">FormatHashBuffers</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t CBlockHeader::nTime</definition>
        <argsstring></argsstring>
        <name>nTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="42" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="42" bodyend="-1"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_index_1a59e8716601432cd20856d45bc2f10633" compoundref="chain_8h" startline="186" endline="218">CBlockIndex::CBlockIndex</referencedby>
        <referencedby refid="class_c_block_index_1a34041486523d190d9ede5d83461fdc00" compoundref="chain_8h" startline="220" endline="231">CBlockIndex::GetBlockHeader</referencedby>
        <referencedby refid="class_c_disk_block_index_1adbe404c55c68be782360b4594d355fad" compoundref="chain_8h" startline="391" endline="407">CDiskBlockIndex::GetBlockHash</referencedby>
        <referencedby refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" compoundref="primitives_2block_8h" startline="97" endline="100">GetBlockTime</referencedby>
        <referencedby refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">CBlock::SetNull</referencedby>
        <referencedby refid="class_c_block_1aee66480cbb9bc01b5f1d27e6ab71f512" compoundref="primitives_2block_8h" startline="182" endline="185">CBlock::GetProofOfStake</referencedby>
        <referencedby refid="miner_8h_1a391a5a462c3f60bbb7dbf6a09fe2e78f" compoundref="miner_8cpp" startline="401" endline="444">FormatHashBuffers</referencedby>
        <referencedby refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" compoundref="block_8cpp" startline="52" endline="55">CBlock::UpdateTime</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t CBlockHeader::nBits</definition>
        <argsstring></argsstring>
        <name>nBits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="43" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="43" bodyend="-1"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</referencedby>
        <referencedby refid="class_c_block_index_1a59e8716601432cd20856d45bc2f10633" compoundref="chain_8h" startline="186" endline="218">CBlockIndex::CBlockIndex</referencedby>
        <referencedby refid="class_c_block_index_1a34041486523d190d9ede5d83461fdc00" compoundref="chain_8h" startline="220" endline="231">CBlockIndex::GetBlockHeader</referencedby>
        <referencedby refid="class_c_disk_block_index_1adbe404c55c68be782360b4594d355fad" compoundref="chain_8h" startline="391" endline="407">CDiskBlockIndex::GetBlockHash</referencedby>
        <referencedby refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">CBlock::SetNull</referencedby>
        <referencedby refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</referencedby>
        <referencedby refid="miner_8h_1a391a5a462c3f60bbb7dbf6a09fe2e78f" compoundref="miner_8cpp" startline="401" endline="444">FormatHashBuffers</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t CBlockHeader::nNonce</definition>
        <argsstring></argsstring>
        <name>nNonce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="44" bodyend="-1"/>
        <referencedby refid="class_c_block_index_1a59e8716601432cd20856d45bc2f10633" compoundref="chain_8h" startline="186" endline="218">CBlockIndex::CBlockIndex</referencedby>
        <referencedby refid="class_c_block_index_1a34041486523d190d9ede5d83461fdc00" compoundref="chain_8h" startline="220" endline="231">CBlockIndex::GetBlockHeader</referencedby>
        <referencedby refid="class_c_disk_block_index_1adbe404c55c68be782360b4594d355fad" compoundref="chain_8h" startline="391" endline="407">CDiskBlockIndex::GetBlockHash</referencedby>
        <referencedby refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">CBlock::SetNull</referencedby>
        <referencedby refid="miner_8h_1a391a5a462c3f60bbb7dbf6a09fe2e78f" compoundref="miner_8cpp" startline="401" endline="444">FormatHashBuffers</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcmining_8cpp_1a356be62c93d38267a7da9e1cb644d547" compoundref="rpcmining_8cpp" startline="363" endline="473">getwork</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_header_1af07deb221708fa7a992e65ec20d13534" prot="public" static="no" mutable="yes">
        <type>int</type>
        <definition>int CBlockHeader::nDoS</definition>
        <argsstring></argsstring>
        <name>nDoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="47" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="class_c_block_1a0410d7ba8d60679c4cf364b82ffffea5" compoundref="primitives_2block_8h" startline="127" endline="140">CBlock::SetNull</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_block_header_1abddc9307695fbe6bd9bb1a7f48d38011" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CBlockHeader::ADD_SERIALIZE_METHODS</definition>
        <argsstring></argsstring>
        <name>ADD_SERIALIZE_METHODS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="60" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_block_header_1a514e4d5250fa700272ac467fecf7fa7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlockHeader::DoS</definition>
        <argsstring>(int nDoSIn, bool fIn) const </argsstring>
        <name>DoS</name>
        <param>
          <type>int</type>
          <declname>nDoSIn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="48" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="48" bodyend="48"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_header_1a9afed57bea877bbd25b5eb6740c6990d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBlockHeader::CBlockHeader</definition>
        <argsstring>()</argsstring>
        <name>CBlockHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="50" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="50" bodyend="58"/>
        <references refid="class_c_block_header_1a1da5740e22d124df509383a1ff96eb7c" compoundref="primitives_2block_8h" startline="38">CURRENT_VERSION</references>
      </memberdef>
      <memberdef kind="function" id="class_c_block_header_1ae564e96da45702d79c83e3ad0ce19873" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CBlockHeader::SerializationOp</definition>
        <argsstring>(Stream &amp;s, Operation ser_action, int nType, int nVersion)</argsstring>
        <name>SerializationOp</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Operation</type>
          <declname>ser_action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="63" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="63" bodyend="71"/>
        <references refid="serialize_8h_1a4d7fc7040e01003a01f367b8d90324f1" compoundref="serialize_8h" startline="101">READWRITE</references>
        <references refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" compoundref="primitives_2block_8h" startline="39">nVersion</references>
      </memberdef>
      <memberdef kind="function" id="class_c_block_header_1a5c179f4a8b5728ba381a26d0450403b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBlockHeader::IsNull</definition>
        <argsstring>() const </argsstring>
        <name>IsNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="73" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CBlockHeader::GetHash</definition>
        <argsstring>() const </argsstring>
        <name>GetHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="78" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="78" bodyend="85"/>
        <references refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" compoundref="hash_8h" startline="77" endline="85">Hash</references>
        <references refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" compoundref="util_8h" startline="45">BEGIN</references>
        <references refid="util_8h_1ac32457d3f041434e57a2924847796fda" compoundref="util_8h" startline="46">END</references>
        <references refid="class_c_block_header_1ace82f72f060caa4fd96759b4ff99a25e" compoundref="primitives_2block_8h" startline="87" endline="90">GetPoWHash</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1ad31bb55c819816d722ebc0980d85cfc7" compoundref="chain_8cpp" startline="816" endline="828">CBlock::ReadFromDisk</referencedby>
        <referencedby refid="class_c_disk_block_index_1adbe404c55c68be782360b4594d355fad" compoundref="chain_8h" startline="391" endline="407">CDiskBlockIndex::GetBlockHash</referencedby>
        <referencedby refid="class_c_block_1aa3e358ffbd3c15aa937fd8a4f8cdf0d7" compoundref="primitives_2block_8h" startline="163" endline="169">CBlock::GetStakeEntropyBit</referencedby>
        <referencedby refid="class_c_merkle_tx_1a7286c83e09ddaebc6bba39ee38a5a012" compoundref="main_8cpp" startline="786" endline="829">CMerkleTx::SetMerkleBranch</referencedby>
        <referencedby refid="class_c_tx_index_1ab6119cf086e8e4b2c690f36c15479220" compoundref="main_8cpp" startline="1540" endline="1554">CTxIndex::GetDepthInMainChain</referencedby>
        <referencedby refid="main_8h_1a7d2a4633e4e0e8e4cb9c881d45a496b5" compoundref="main_8cpp" startline="1557" endline="1597">GetTransaction</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="class_c_block_1a7e0103e7a0117173cb9c975702e06392" compoundref="block_8cpp" startline="10" endline="50">CBlock::CheckBlockSignature</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_header_1ace82f72f060caa4fd96759b4ff99a25e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CBlockHeader::GetPoWHash</definition>
        <argsstring>() const </argsstring>
        <name>GetPoWHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="87" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="87" bodyend="90"/>
        <references refid="scrypt_8cpp_1a9c2a05477bf96657b45817f16ce02084" compoundref="scrypt_8cpp" startline="193" endline="197">scrypt_blockhash</references>
        <references refid="util_8h_1ac232a2a614f4296d5917c5701f80aca1" compoundref="util_8h" startline="52">CVOIDBEGIN</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</referencedby>
        <referencedby refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" compoundref="primitives_2block_8h" startline="78" endline="85">GetHash</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_block_header_1a795e040a33329757f6b31dfbcabbb2a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 CBlockHeader::GetPoWArgonHash</definition>
        <argsstring>() const </argsstring>
        <name>GetPoWArgonHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="92" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="92" bodyend="95"/>
        <references refid="hash_8h_1a56d12e978cb15670e334b04e9ee22059" compoundref="hash_8h" startline="151" endline="161">hashArgon2d</references>
        <references refid="util_8h_1a5f5e63e2c340bc52049e38c09b37e6e1" compoundref="util_8h" startline="45">BEGIN</references>
        <references refid="util_8h_1ac32457d3f041434e57a2924847796fda" compoundref="util_8h" startline="46">END</references>
      </memberdef>
      <memberdef kind="function" id="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t CBlockHeader::GetBlockTime</definition>
        <argsstring>() const </argsstring>
        <name>GetBlockTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.h" line="97" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="97" bodyend="100"/>
        <references refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" compoundref="primitives_2block_8h" startline="42">nTime</references>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" compoundref="kernel_8cpp" startline="286" endline="320">CheckProofOfStake</referencedby>
        <referencedby refid="kernel_8h_1a65bf2727fbb2781621c1b66999fb0f98" compoundref="kernel_8cpp" startline="328" endline="353">CheckKernel</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</referencedby>
        <referencedby refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" compoundref="block_8cpp" startline="52" endline="55">CBlock::UpdateTime</referencedby>
        <referencedby refid="class_dark_silk_g_u_i_1a2a303132be32277f46691fe91803f766" compoundref="darksilkgui_8cpp" startline="860" endline="944">DarkSilkGUI::setNumBlocks</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Nodes collect new transactions into a block, hash them into a hash tree, and scan through nonce values to make the block&apos;s hash satisfy proof-of-work requirements. When they solve the proof-of-work, they broadcast the block to everyone and the block is added to the block chain. The first transaction in the block is a special one that creates a new coin owned by the creator of the block.</para><para>Blocks are appended to blk0001.dat files on disk. Their location on disk is indexed by <ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref> objects in memory. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2190">
        <label>CBlockHeader</label>
        <link refid="class_c_block_header"/>
      </node>
      <node id="2191">
        <label>CBlock</label>
        <link refid="class_c_block"/>
        <childnode refid="2190" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2194">
        <label>base_uint&lt; 256 &gt;</label>
        <link refid="classbase__uint"/>
      </node>
      <node id="2192">
        <label>CBlockHeader</label>
        <link refid="class_c_block_header"/>
        <childnode refid="2193" relation="usage">
          <edgelabel>hashPrevBlock</edgelabel>
          <edgelabel>hashMerkleRoot</edgelabel>
        </childnode>
      </node>
      <node id="2193">
        <label>uint256</label>
        <link refid="classuint256"/>
        <childnode refid="2194" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/primitives/block.h" line="35" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.h" bodystart="34" bodyend="101"/>
    <listofallmembers>
      <member refid="class_c_block_header_1abddc9307695fbe6bd9bb1a7f48d38011" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>ADD_SERIALIZE_METHODS</name></member>
      <member refid="class_c_block_header_1a9afed57bea877bbd25b5eb6740c6990d" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>CBlockHeader</name></member>
      <member refid="class_c_block_header_1a1da5740e22d124df509383a1ff96eb7c" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>CURRENT_VERSION</name></member>
      <member refid="class_c_block_header_1a514e4d5250fa700272ac467fecf7fa7b" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>DoS</name></member>
      <member refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>GetBlockTime</name></member>
      <member refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>GetHash</name></member>
      <member refid="class_c_block_header_1a795e040a33329757f6b31dfbcabbb2a5" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>GetPoWArgonHash</name></member>
      <member refid="class_c_block_header_1ace82f72f060caa4fd96759b4ff99a25e" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>GetPoWHash</name></member>
      <member refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>hashMerkleRoot</name></member>
      <member refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>hashPrevBlock</name></member>
      <member refid="class_c_block_header_1a5c179f4a8b5728ba381a26d0450403b8" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>IsNull</name></member>
      <member refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>nBits</name></member>
      <member refid="class_c_block_header_1af07deb221708fa7a992e65ec20d13534" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>nDoS</name></member>
      <member refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>nNonce</name></member>
      <member refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>nTime</name></member>
      <member refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>nVersion</name></member>
      <member refid="class_c_block_header_1ae564e96da45702d79c83e3ad0ce19873" prot="public" virt="non-virtual"><scope>CBlockHeader</scope><name>SerializationOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
