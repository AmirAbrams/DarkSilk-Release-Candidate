<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="arena_8h" kind="file" language="C++">
    <compoundname>arena.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includedby refid="memtable_8h" local="yes">/home/dev/ds-160209/src/leveldb/db/memtable.h</includedby>
    <includedby refid="skiplist_8h" local="yes">/home/dev/ds-160209/src/leveldb/db/skiplist.h</includedby>
    <includedby refid="skiplist__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc</includedby>
    <includedby refid="arena_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/arena.cc</includedby>
    <includedby refid="arena__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/arena_test.cc</includedby>
    <incdepgraph>
      <node id="39503">
        <label>assert.h</label>
      </node>
      <node id="39501">
        <label>/home/dev/ds-160209/src/leveldb/util/arena.h</label>
        <link refid="arena.h"/>
        <childnode refid="39502" relation="include">
        </childnode>
        <childnode refid="39503" relation="include">
        </childnode>
        <childnode refid="39504" relation="include">
        </childnode>
        <childnode refid="39505" relation="include">
        </childnode>
      </node>
      <node id="39504">
        <label>stddef.h</label>
      </node>
      <node id="39502">
        <label>vector</label>
      </node>
      <node id="39505">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="39515">
        <label>/home/dev/ds-160209/src/leveldb/db/skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39516" relation="include">
        </childnode>
      </node>
      <node id="39508">
        <label>/home/dev/ds-160209/src/leveldb/db/db_impl.cc</label>
        <link refid="db__impl_8cc"/>
      </node>
      <node id="39506">
        <label>/home/dev/ds-160209/src/leveldb/util/arena.h</label>
        <link refid="arena.h"/>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39516" relation="include">
        </childnode>
        <childnode refid="39517" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
      </node>
      <node id="39517">
        <label>/home/dev/ds-160209/src/leveldb/util/arena.cc</label>
        <link refid="arena_8cc"/>
      </node>
      <node id="39513">
        <label>/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc</label>
        <link refid="write__batch__test_8cc"/>
      </node>
      <node id="39511">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set.cc</label>
        <link refid="version__set_8cc"/>
      </node>
      <node id="39510">
        <label>/home/dev/ds-160209/src/leveldb/db/repair.cc</label>
        <link refid="repair_8cc"/>
      </node>
      <node id="39512">
        <label>/home/dev/ds-160209/src/leveldb/db/write_batch.cc</label>
        <link refid="write__batch_8cc"/>
      </node>
      <node id="39516">
        <label>/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc</label>
        <link refid="skiplist__test_8cc"/>
      </node>
      <node id="39507">
        <label>/home/dev/ds-160209/src/leveldb/db/memtable.h</label>
        <link refid="memtable_8h"/>
        <childnode refid="39508" relation="include">
        </childnode>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39510" relation="include">
        </childnode>
        <childnode refid="39511" relation="include">
        </childnode>
        <childnode refid="39512" relation="include">
        </childnode>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39514" relation="include">
        </childnode>
      </node>
      <node id="39514">
        <label>/home/dev/ds-160209/src/leveldb/table/table_test.cc</label>
        <link refid="table__test_8cc"/>
      </node>
      <node id="39509">
        <label>/home/dev/ds-160209/src/leveldb/db/memtable.cc</label>
        <link refid="memtable_8cc"/>
      </node>
      <node id="39518">
        <label>/home/dev/ds-160209/src/leveldb/util/arena_test.cc</label>
        <link refid="arena__test_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classleveldb_1_1_arena" prot="public">leveldb::Arena</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STORAGE_LEVELDB_UTIL_ARENA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STORAGE_LEVELDB_UTIL_ARENA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classleveldb_1_1_arena" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_arena" kindref="compound">Arena</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_arena_1a612fe3668024ddf7b92f632afa1361ca" kindref="member">Arena</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_arena_1a39130691c948dec339cd4649b39c965c" kindref="member">~Arena</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>newly<sp/>allocated<sp/>memory<sp/>block<sp/>of<sp/>&quot;bytes&quot;<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classleveldb_1_1_arena_1add4bc4b1c8fdf5be7a96a7ec00a0732e" kindref="member">Allocate</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>with<sp/>the<sp/>normal<sp/>alignment<sp/>guarantees<sp/>provided<sp/>by<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classleveldb_1_1_arena_1a9c1e8e695fe25ac96063f9fbacefee9e" kindref="member">AllocateAligned</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>total<sp/>memory<sp/>usage<sp/>of<sp/>data<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>arena<sp/>(including<sp/>space<sp/>allocated<sp/>but<sp/>not<sp/>yet<sp/>used<sp/>for<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocations).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classleveldb_1_1_arena_1aaf8db075d5d1130106bbbf66b1d267b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_arena_1aaf8db075d5d1130106bbbf66b1d267b2" kindref="member">MemoryUsage</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocks_memory_<sp/>+<sp/>blocks_.capacity()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>AllocateFallback(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>AllocateNewBlock(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>block_bytes);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocation<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>alloc_ptr_;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alloc_bytes_remaining_;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>of<sp/>new[]<sp/>allocated<sp/>memory<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::vector&lt;char*&gt;<sp/>blocks_;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bytes<sp/>of<sp/>memory<sp/>in<sp/>blocks<sp/>allocated<sp/>so<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blocks_memory_;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_arena_1a612fe3668024ddf7b92f632afa1361ca" kindref="member">Arena</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_arena" kindref="compound">Arena</ref>&amp;);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_arena" kindref="compound">Arena</ref>&amp;);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classleveldb_1_1_arena_1add4bc4b1c8fdf5be7a96a7ec00a0732e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classleveldb_1_1_arena_1add4bc4b1c8fdf5be7a96a7ec00a0732e" kindref="member">Arena::Allocate</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>semantics<sp/>of<sp/>what<sp/>to<sp/>return<sp/>are<sp/>a<sp/>bit<sp/>messy<sp/>if<sp/>we<sp/>allow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>0-byte<sp/>allocations,<sp/>so<sp/>we<sp/>disallow<sp/>them<sp/>here<sp/>(we<sp/>don&apos;t<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>them<sp/>for<sp/>our<sp/>internal<sp/>use).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>assert(bytes<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>&lt;=<sp/>alloc_bytes_remaining_)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>result<sp/>=<sp/>alloc_ptr_;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>alloc_ptr_<sp/>+=<sp/>bytes;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>alloc_bytes_remaining_<sp/>-=<sp/>bytes;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AllocateFallback(bytes);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>STORAGE_LEVELDB_UTIL_ARENA_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/util/arena.h"/>
  </compounddef>
</doxygen>
