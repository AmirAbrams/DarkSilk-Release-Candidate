<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="scrypt_8cpp" kind="file" language="C++">
    <compoundname>scrypt.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes refid="scrypt_8h" local="yes">scrypt.h</includes>
    <includes refid="pbkdf2_8h" local="yes">pbkdf2.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="net_8h" local="yes">net.h</includes>
    <incdepgraph>
      <node id="21799">
        <label>list</label>
      </node>
      <node id="21788">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="21824">
        <label>netinet/in.h</label>
      </node>
      <node id="21798">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="21774" relation="include">
        </childnode>
        <childnode refid="21767" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
      </node>
      <node id="21817">
        <label>arpa/inet.h</label>
      </node>
      <node id="21836">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="21780">
        <label>limits</label>
      </node>
      <node id="21844">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21767" relation="include">
        </childnode>
      </node>
      <node id="21845">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="21846" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21790" relation="include">
        </childnode>
      </node>
      <node id="21810">
        <label>openssl/rand.h</label>
      </node>
      <node id="21832">
        <label>assert.h</label>
      </node>
      <node id="21784">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="21823">
        <label>net/if.h</label>
      </node>
      <node id="21838">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="21792">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="21793" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
      </node>
      <node id="21789">
        <label>sys/mman.h</label>
      </node>
      <node id="21767">
        <label>stdlib.h</label>
      </node>
      <node id="21815">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="21809">
        <label>openssl/crypto.h</label>
      </node>
      <node id="21820">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="21821" relation="include">
        </childnode>
        <childnode refid="21789" relation="include">
        </childnode>
        <childnode refid="21822" relation="include">
        </childnode>
        <childnode refid="21771" relation="include">
        </childnode>
        <childnode refid="21823" relation="include">
        </childnode>
        <childnode refid="21824" relation="include">
        </childnode>
        <childnode refid="21817" relation="include">
        </childnode>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21790" relation="include">
        </childnode>
        <childnode refid="21826" relation="include">
        </childnode>
        <childnode refid="21791" relation="include">
        </childnode>
        <childnode refid="21827" relation="include">
        </childnode>
      </node>
      <node id="21805">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="21841">
        <label>openssl/sha.h</label>
      </node>
      <node id="21827">
        <label>errno.h</label>
      </node>
      <node id="21779">
        <label>cassert</label>
      </node>
      <node id="21797">
        <label>stdexcept</label>
      </node>
      <node id="21770">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="21771" relation="include">
        </childnode>
        <childnode refid="21772" relation="include">
        </childnode>
        <childnode refid="21773" relation="include">
        </childnode>
        <childnode refid="21774" relation="include">
        </childnode>
        <childnode refid="21794" relation="include">
        </childnode>
        <childnode refid="21798" relation="include">
        </childnode>
        <childnode refid="21777" relation="include">
        </childnode>
        <childnode refid="21799" relation="include">
        </childnode>
        <childnode refid="21800" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21801" relation="include">
        </childnode>
        <childnode refid="21802" relation="include">
        </childnode>
        <childnode refid="21803" relation="include">
        </childnode>
        <childnode refid="21804" relation="include">
        </childnode>
        <childnode refid="21805" relation="include">
        </childnode>
        <childnode refid="21806" relation="include">
        </childnode>
        <childnode refid="21807" relation="include">
        </childnode>
        <childnode refid="21808" relation="include">
        </childnode>
        <childnode refid="21809" relation="include">
        </childnode>
        <childnode refid="21810" relation="include">
        </childnode>
        <childnode refid="21811" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
      </node>
      <node id="21828">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21774" relation="include">
        </childnode>
        <childnode refid="21819" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
      </node>
      <node id="21804">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="21775">
        <label>string</label>
      </node>
      <node id="21769">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21767" relation="include">
        </childnode>
        <childnode refid="21770" relation="include">
        </childnode>
        <childnode refid="21812" relation="include">
        </childnode>
      </node>
      <node id="21777">
        <label>map</label>
      </node>
      <node id="21801">
        <label>boost/thread.hpp</label>
      </node>
      <node id="21833">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="21819" relation="include">
        </childnode>
        <childnode refid="21828" relation="include">
        </childnode>
        <childnode refid="21834" relation="include">
        </childnode>
        <childnode refid="21839" relation="include">
        </childnode>
        <childnode refid="21770" relation="include">
        </childnode>
        <childnode refid="21777" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
      </node>
      <node id="21846">
        <label>stddef.h</label>
      </node>
      <node id="21826">
        <label>netdb.h</label>
      </node>
      <node id="21821">
        <label>sys/fcntl.h</label>
      </node>
      <node id="21766">
        <label>/home/dev/ds-160209/src/scrypt.cpp</label>
        <link refid="scrypt.cpp"/>
        <childnode refid="21767" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21769" relation="include">
        </childnode>
        <childnode refid="21851" relation="include">
        </childnode>
        <childnode refid="21770" relation="include">
        </childnode>
        <childnode refid="21812" relation="include">
        </childnode>
      </node>
      <node id="21774">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
        <childnode refid="21777" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21779" relation="include">
        </childnode>
        <childnode refid="21780" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21781" relation="include">
        </childnode>
        <childnode refid="21782" relation="include">
        </childnode>
        <childnode refid="21783" relation="include">
        </childnode>
        <childnode refid="21784" relation="include">
        </childnode>
        <childnode refid="21785" relation="include">
        </childnode>
        <childnode refid="21792" relation="include">
        </childnode>
      </node>
      <node id="21790">
        <label>limits.h</label>
      </node>
      <node id="21835">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="21818">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21813" relation="include">
        </childnode>
      </node>
      <node id="21773">
        <label>sys/resource.h</label>
      </node>
      <node id="21806">
        <label>openssl/bio.h</label>
      </node>
      <node id="21816">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="21819">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
        <childnode refid="21774" relation="include">
        </childnode>
        <childnode refid="21820" relation="include">
        </childnode>
      </node>
      <node id="21840">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="21831" relation="include">
        </childnode>
        <childnode refid="21774" relation="include">
        </childnode>
        <childnode refid="21841" relation="include">
        </childnode>
        <childnode refid="21842" relation="include">
        </childnode>
        <childnode refid="21843" relation="include">
        </childnode>
        <childnode refid="21844" relation="include">
        </childnode>
        <childnode refid="21845" relation="include">
        </childnode>
        <childnode refid="21847" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
      </node>
      <node id="21825">
        <label>ifaddrs.h</label>
      </node>
      <node id="21771">
        <label>sys/types.h</label>
      </node>
      <node id="21850">
        <label>ios</label>
      </node>
      <node id="21787">
        <label>string.h</label>
      </node>
      <node id="21793">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="21782">
        <label>cstdio</label>
      </node>
      <node id="21837">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="21808">
        <label>openssl/buffer.h</label>
      </node>
      <node id="21783">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="21803">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="21791">
        <label>unistd.h</label>
      </node>
      <node id="21776">
        <label>vector</label>
      </node>
      <node id="21830">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="21774" relation="include">
        </childnode>
        <childnode refid="21831" relation="include">
        </childnode>
        <childnode refid="21811" relation="include">
        </childnode>
        <childnode refid="21797" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
      </node>
      <node id="21812">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="21813" relation="include">
        </childnode>
        <childnode refid="21814" relation="include">
        </childnode>
        <childnode refid="21815" relation="include">
        </childnode>
        <childnode refid="21816" relation="include">
        </childnode>
        <childnode refid="21810" relation="include">
        </childnode>
        <childnode refid="21817" relation="include">
        </childnode>
        <childnode refid="21818" relation="include">
        </childnode>
        <childnode refid="21819" relation="include">
        </childnode>
        <childnode refid="21828" relation="include">
        </childnode>
        <childnode refid="21833" relation="include">
        </childnode>
        <childnode refid="21840" relation="include">
        </childnode>
        <childnode refid="21848" relation="include">
        </childnode>
      </node>
      <node id="21842">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="21802">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="21800">
        <label>utility</label>
      </node>
      <node id="21851">
        <label>pbkdf2.h</label>
        <link refid="pbkdf2_8h"/>
        <childnode refid="21841" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
      </node>
      <node id="21796">
        <label>sstream</label>
      </node>
      <node id="21807">
        <label>openssl/evp.h</label>
      </node>
      <node id="21794">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="21779" relation="include">
        </childnode>
        <childnode refid="21795" relation="include">
        </childnode>
        <childnode refid="21796" relation="include">
        </childnode>
        <childnode refid="21797" relation="include">
        </childnode>
      </node>
      <node id="21768">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="21848">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="21785" relation="include">
        </childnode>
        <childnode refid="21774" relation="include">
        </childnode>
        <childnode refid="21849" relation="include">
        </childnode>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21850" relation="include">
        </childnode>
        <childnode refid="21780" relation="include">
        </childnode>
        <childnode refid="21777" relation="include">
        </childnode>
        <childnode refid="21778" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21787" relation="include">
        </childnode>
        <childnode refid="21800" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
      </node>
      <node id="21847">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21846" relation="include">
        </childnode>
        <childnode refid="21790" relation="include">
        </childnode>
      </node>
      <node id="21772">
        <label>sys/time.h</label>
      </node>
      <node id="21795">
        <label>iostream</label>
      </node>
      <node id="21813">
        <label>deque</label>
      </node>
      <node id="21831">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="21832" relation="include">
        </childnode>
        <childnode refid="21781" relation="include">
        </childnode>
        <childnode refid="21797" relation="include">
        </childnode>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
      </node>
      <node id="21822">
        <label>sys/socket.h</label>
      </node>
      <node id="21814">
        <label>boost/array.hpp</label>
      </node>
      <node id="21811">
        <label>openssl/bn.h</label>
      </node>
      <node id="21839">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="21768" relation="include">
        </childnode>
      </node>
      <node id="21785">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="21786" relation="include">
        </childnode>
        <childnode refid="21787" relation="include">
        </childnode>
        <childnode refid="21775" relation="include">
        </childnode>
        <childnode refid="21788" relation="include">
        </childnode>
        <childnode refid="21777" relation="include">
        </childnode>
        <childnode refid="21789" relation="include">
        </childnode>
        <childnode refid="21790" relation="include">
        </childnode>
        <childnode refid="21791" relation="include">
        </childnode>
      </node>
      <node id="21829">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="21830" relation="include">
        </childnode>
        <childnode refid="21831" relation="include">
        </childnode>
        <childnode refid="21776" relation="include">
        </childnode>
      </node>
      <node id="21778">
        <label>set</label>
      </node>
      <node id="21849">
        <label>algorithm</label>
      </node>
      <node id="21843">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="21768" relation="include">
        </childnode>
        <childnode refid="21767" relation="include">
        </childnode>
      </node>
      <node id="21786">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="21767" relation="include">
        </childnode>
      </node>
      <node id="21781">
        <label>cstring</label>
      </node>
      <node id="21834">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="21835" relation="include">
        </childnode>
        <childnode refid="21836" relation="include">
        </childnode>
        <childnode refid="21837" relation="include">
        </childnode>
        <childnode refid="21788" relation="include">
        </childnode>
        <childnode refid="21838" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="scrypt_8cpp_1ac62c7210d8703c77228a6900dbe58bfe" prot="public" static="no">
        <name>SCRYPT_BUFFER_SIZE</name>
        <initializer>(131072 + 63)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="39" column="9" bodyfile="/home/dev/ds-160209/src/scrypt.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" prot="public" static="no">
        <name>R</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((a) &lt;&lt; (b)) | ((a) &gt;&gt; (32 - (b))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="68" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="scrypt_8cpp_1aab0736b5e006cb417ec724b566793d07" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void xor_salsa8</definition>
        <argsstring>(unsigned int B[16], const unsigned int Bx[16])</argsstring>
        <name>xor_salsa8</name>
        <param>
          <type>unsigned int</type>
          <declname>B</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>Bx</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="46" column="1" bodyfile="/home/dev/ds-160209/src/scrypt.cpp" bodystart="46" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="scrypt_8cpp_1a264733c8f9d7258b5ac61415d239be08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void scrypt_core</definition>
        <argsstring>(unsigned int *X, unsigned int *V)</argsstring>
        <name>scrypt_core</name>
        <param>
          <type>unsigned int *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>V</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="114" column="1" bodyfile="/home/dev/ds-160209/src/scrypt.cpp" bodystart="114" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="scrypt_8cpp_1a84d48cffe34f5203893f03d56dfc24d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 scrypt_nosalt</definition>
        <argsstring>(const void *input, size_t inputlen, void *scratchpad)</argsstring>
        <name>scrypt_nosalt</name>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>inputlen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>scratchpad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="139" column="1" bodyfile="/home/dev/ds-160209/src/scrypt.cpp" bodystart="139" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="scrypt_8cpp_1af51489d460b3e77446a7db8fa068e19d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 scrypt</definition>
        <argsstring>(const void *data, size_t datalen, const void *salt, size_t saltlen, void *scratchpad)</argsstring>
        <name>scrypt</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>datalen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>saltlen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>scratchpad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="153" column="1" bodyfile="/home/dev/ds-160209/src/scrypt.cpp" bodystart="153" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="scrypt_8cpp_1acff318c1964d18cf77a9841ad0990fa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 scrypt_hash</definition>
        <argsstring>(const void *input, size_t inputlen)</argsstring>
        <name>scrypt_hash</name>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>inputlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="167" column="1" bodyfile="/home/dev/ds-160209/src/scrypt.cpp" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="scrypt_8cpp_1a958e72eeb122162c560096e6295fdd5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 scrypt_salted_hash</definition>
        <argsstring>(const void *input, size_t inputlen, const void *salt, size_t saltlen)</argsstring>
        <name>scrypt_salted_hash</name>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>inputlen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>saltlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="173" column="1" bodyfile="/home/dev/ds-160209/src/scrypt.cpp" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="scrypt_8cpp_1a6adfc1349327d008e38ee6749c0eb986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 scrypt_salted_multiround_hash</definition>
        <argsstring>(const void *input, size_t inputlen, const void *salt, size_t saltlen, const unsigned int nRounds)</argsstring>
        <name>scrypt_salted_multiround_hash</name>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>inputlen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>saltlen</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>nRounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="179" column="1" bodyfile="/home/dev/ds-160209/src/scrypt.cpp" bodystart="179" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="scrypt_8cpp_1a9c2a05477bf96657b45817f16ce02084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
        <definition>uint256 scrypt_blockhash</definition>
        <argsstring>(const void *input)</argsstring>
        <name>scrypt_blockhash</name>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/scrypt.cpp" line="193" column="1" bodyfile="/home/dev/ds-160209/src/scrypt.cpp" bodystart="193" bodyend="197"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2009<sp/>Colin<sp/>Percival,<sp/>2011<sp/>ArtForz,<sp/>2011<sp/>pooler,<sp/>2013<sp/>Balthazar</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>AND<sp/>CONTRIBUTORS<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>originally<sp/>written<sp/>by<sp/>Colin<sp/>Percival<sp/>as<sp/>part<sp/>of<sp/>the<sp/>Tarsnap</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>online<sp/>backup<sp/>system.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scrypt_8h" kindref="compound">scrypt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pbkdf2_8h" kindref="compound">pbkdf2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="net_8h" kindref="compound">net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="scrypt_8cpp_1ac62c7210d8703c77228a6900dbe58bfe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCRYPT_BUFFER_SIZE<sp/>(131072<sp/>+<sp/>63)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(OPTIMIZED_SALSA)<sp/>&amp;&amp;<sp/>(<sp/>defined<sp/>(__x86_64__)<sp/>||<sp/>defined<sp/>(__i386__)<sp/>||<sp/>defined(__arm__)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scrypt_core(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="net_8cpp_1a826edd40636cbaa44266b97c8c6a4fa3" kindref="member">X</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*V);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generic<sp/>scrypt_core<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>xor_salsa8(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>B[16],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bx[16])</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x00,x01,x02,x03,x04,x05,x06,x07,x08,x09,x10,x11,x12,x13,x14,x15;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>x00<sp/>=<sp/>(B[0]<sp/>^=<sp/>Bx[0]);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>x01<sp/>=<sp/>(B[1]<sp/>^=<sp/>Bx[1]);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>x02<sp/>=<sp/>(B[2]<sp/>^=<sp/>Bx[2]);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>x03<sp/>=<sp/>(B[3]<sp/>^=<sp/>Bx[3]);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>x04<sp/>=<sp/>(B[4]<sp/>^=<sp/>Bx[4]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>x05<sp/>=<sp/>(B[5]<sp/>^=<sp/>Bx[5]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>x06<sp/>=<sp/>(B[6]<sp/>^=<sp/>Bx[6]);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>x07<sp/>=<sp/>(B[7]<sp/>^=<sp/>Bx[7]);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>x08<sp/>=<sp/>(B[8]<sp/>^=<sp/>Bx[8]);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>x09<sp/>=<sp/>(B[9]<sp/>^=<sp/>Bx[9]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>x10<sp/>=<sp/>(B[10]<sp/>^=<sp/>Bx[10]);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>x11<sp/>=<sp/>(B[11]<sp/>^=<sp/>Bx[11]);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>x12<sp/>=<sp/>(B[12]<sp/>^=<sp/>Bx[12]);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>x13<sp/>=<sp/>(B[13]<sp/>^=<sp/>Bx[13]);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>x14<sp/>=<sp/>(B[14]<sp/>^=<sp/>Bx[14]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>x15<sp/>=<sp/>(B[15]<sp/>^=<sp/>Bx[15]);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R(a,<sp/>b)<sp/>(((a)<sp/>&lt;&lt;<sp/>(b))<sp/>|<sp/>((a)<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/>(b))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Operate<sp/>on<sp/>columns.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x04<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x00+x12,<sp/>7);<sp/>x09<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x05+x01,<sp/>7);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x14<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x10+x06,<sp/>7);<sp/>x03<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x15+x11,<sp/>7);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x08<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x04+x00,<sp/>9);<sp/>x13<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x09+x05,<sp/>9);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x02<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x14+x10,<sp/>9);<sp/>x07<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x03+x15,<sp/>9);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x12<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x08+x04,13);<sp/>x01<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x13+x09,13);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x06<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x02+x14,13);<sp/>x11<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x07+x03,13);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x00<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x12+x08,18);<sp/>x05<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x01+x13,18);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x10<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x06+x02,18);<sp/>x15<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x11+x07,18);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Operate<sp/>on<sp/>rows.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x01<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x00+x03,<sp/>7);<sp/>x06<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x05+x04,<sp/>7);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x11<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x10+x09,<sp/>7);<sp/>x12<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x15+x14,<sp/>7);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x02<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x01+x00,<sp/>9);<sp/>x07<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x06+x05,<sp/>9);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x08<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x11+x10,<sp/>9);<sp/>x13<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x12+x15,<sp/>9);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x03<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x02+x01,13);<sp/>x04<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x07+x06,13);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x09<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x08+x11,13);<sp/>x14<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x13+x12,13);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x00<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x03+x02,18);<sp/>x05<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x04+x07,18);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x10<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x09+x08,18);<sp/>x15<sp/>^=<sp/><ref refid="scrypt_8cpp_1a8011d6dab73e8808981c948e35610884" kindref="member">R</ref>(x14+x13,18);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0]<sp/>+=<sp/>x00;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1]<sp/>+=<sp/>x01;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2]<sp/>+=<sp/>x02;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>B[3]<sp/>+=<sp/>x03;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>B[4]<sp/>+=<sp/>x04;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>B[5]<sp/>+=<sp/>x05;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>B[6]<sp/>+=<sp/>x06;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>B[7]<sp/>+=<sp/>x07;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>B[8]<sp/>+=<sp/>x08;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>B[9]<sp/>+=<sp/>x09;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>B[10]<sp/>+=<sp/>x10;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>B[11]<sp/>+=<sp/>x11;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>B[12]<sp/>+=<sp/>x12;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>B[13]<sp/>+=<sp/>x13;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>B[14]<sp/>+=<sp/>x14;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>B[15]<sp/>+=<sp/>x15;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scrypt_core(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="net_8cpp_1a826edd40636cbaa44266b97c8c6a4fa3" kindref="member">X</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*V)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1024;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;V[i<sp/>*<sp/>32],<sp/>X,<sp/>128);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xor_salsa8(&amp;X[0],<sp/>&amp;X[16]);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xor_salsa8(&amp;X[16],<sp/>&amp;X[0]);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1024;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>32<sp/>*<sp/>(X[16]<sp/>&amp;<sp/>1023);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>32;<sp/>k++)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X[k]<sp/>^=<sp/>V[j<sp/>+<sp/>k];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xor_salsa8(&amp;X[0],<sp/>&amp;X[16]);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xor_salsa8(&amp;X[16],<sp/>&amp;X[0]);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cpu<sp/>and<sp/>memory<sp/>intensive<sp/>function<sp/>to<sp/>transform<sp/>a<sp/>80<sp/>byte<sp/>buffer<sp/>into<sp/>a<sp/>32<sp/>byte<sp/>output</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>scratchpad<sp/>size<sp/>needs<sp/>to<sp/>be<sp/>at<sp/>least<sp/>63<sp/>+<sp/>(128<sp/>*<sp/>r<sp/>*<sp/>p)<sp/>+<sp/>(256<sp/>*<sp/>r<sp/>+<sp/>64)<sp/>+<sp/>(128<sp/>*<sp/>r<sp/>*<sp/>N)<sp/>bytes</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>r<sp/>=<sp/>1,<sp/>p<sp/>=<sp/>1,<sp/>N<sp/>=<sp/>1024</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="scrypt_8cpp_1a84d48cffe34f5203893f03d56dfc24d5" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="scrypt_8cpp_1a84d48cffe34f5203893f03d56dfc24d5" kindref="member">scrypt_nosalt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputlen,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*scratchpad)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*V;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X[32];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>V<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)(((uintptr_t)(scratchpad)<sp/>+<sp/>63)<sp/>&amp;<sp/>~<sp/>(uintptr_t)(63));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1aee9e3622e2f69c23a5891ddc86fd1228" kindref="member">PBKDF2_SHA256</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)input,<sp/>inputlen,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)input,<sp/>inputlen,<sp/>1,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*)X,<sp/>128);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>scrypt_core(X,<sp/>V);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1aee9e3622e2f69c23a5891ddc86fd1228" kindref="member">PBKDF2_SHA256</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)input,<sp/>inputlen,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*)X,<sp/>128,<sp/>1,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)&amp;result,<sp/>32);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="scrypt_8cpp_1af51489d460b3e77446a7db8fa068e19d" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="scrypt_8cpp_1af51489d460b3e77446a7db8fa068e19d" kindref="member">scrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datalen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>salt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>saltlen,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*scratchpad)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*V;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X[32];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>V<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)(((uintptr_t)(scratchpad)<sp/>+<sp/>63)<sp/>&amp;<sp/>~<sp/>(uintptr_t)(63));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1aee9e3622e2f69c23a5891ddc86fd1228" kindref="member">PBKDF2_SHA256</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)data,<sp/>datalen,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)salt,<sp/>saltlen,<sp/>1,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*)X,<sp/>128);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>scrypt_core(X,<sp/>V);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pbkdf2_8cpp_1aee9e3622e2f69c23a5891ddc86fd1228" kindref="member">PBKDF2_SHA256</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)data,<sp/>datalen,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*)X,<sp/>128,<sp/>1,<sp/>(<ref refid="stdint_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>*)&amp;result,<sp/>32);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="scrypt_8h_1acff318c1964d18cf77a9841ad0990fa1" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="scrypt_8cpp_1acff318c1964d18cf77a9841ad0990fa1" kindref="member">scrypt_hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputlen)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>scratchpad[<ref refid="scrypt_8cpp_1ac62c7210d8703c77228a6900dbe58bfe" kindref="member">SCRYPT_BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="scrypt_8cpp_1a84d48cffe34f5203893f03d56dfc24d5" kindref="member">scrypt_nosalt</ref>(input,<sp/>inputlen,<sp/>scratchpad);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="scrypt_8h_1a958e72eeb122162c560096e6295fdd5b" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="scrypt_8cpp_1a958e72eeb122162c560096e6295fdd5b" kindref="member">scrypt_salted_hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>salt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>saltlen)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>scratchpad[<ref refid="scrypt_8cpp_1ac62c7210d8703c77228a6900dbe58bfe" kindref="member">SCRYPT_BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="scrypt_8cpp_1af51489d460b3e77446a7db8fa068e19d" kindref="member">scrypt</ref>(input,<sp/>inputlen,<sp/>salt,<sp/>saltlen,<sp/>scratchpad);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="scrypt_8h_1a6adfc1349327d008e38ee6749c0eb986" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="scrypt_8cpp_1a6adfc1349327d008e38ee6749c0eb986" kindref="member">scrypt_salted_multiround_hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>salt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>saltlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRounds)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>resultHash<sp/>=<sp/><ref refid="scrypt_8cpp_1a958e72eeb122162c560096e6295fdd5b" kindref="member">scrypt_salted_hash</ref>(input,<sp/>inputlen,<sp/>salt,<sp/>saltlen);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>transitionalHash<sp/>=<sp/>resultHash;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>nRounds;<sp/>i++)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultHash<sp/>=<sp/><ref refid="scrypt_8cpp_1a958e72eeb122162c560096e6295fdd5b" kindref="member">scrypt_salted_hash</ref>(input,<sp/>inputlen,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;transitionalHash,<sp/>32);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitionalHash<sp/>=<sp/>resultHash;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resultHash;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="scrypt_8h_1a9c2a05477bf96657b45817f16ce02084" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="scrypt_8cpp_1a9c2a05477bf96657b45817f16ce02084" kindref="member">scrypt_blockhash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>scratchpad[<ref refid="scrypt_8cpp_1ac62c7210d8703c77228a6900dbe58bfe" kindref="member">SCRYPT_BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="scrypt_8cpp_1a84d48cffe34f5203893f03d56dfc24d5" kindref="member">scrypt_nosalt</ref>(input,<sp/>80,<sp/>scratchpad);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/scrypt.cpp"/>
  </compounddef>
</doxygen>
