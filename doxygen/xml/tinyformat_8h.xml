<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="tinyformat_8h" kind="file" language="C++">
    <compoundname>tinyformat.h</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">stdexcept</includes>
    <includedby refid="util_8h" local="yes">/home/dev/ds-160209/src/util.h</includedby>
    <includedby refid="amount_8cpp" local="yes">/home/dev/ds-160209/src/amount.cpp</includedby>
    <includedby refid="utilstrencodings_8cpp" local="yes">/home/dev/ds-160209/src/utilstrencodings.cpp</includedby>
    <incdepgraph>
      <node id="56342">
        <label>cassert</label>
      </node>
      <node id="56345">
        <label>stdexcept</label>
      </node>
      <node id="56344">
        <label>sstream</label>
      </node>
      <node id="56341">
        <label>/home/dev/ds-160209/src/tinyformat.h</label>
        <link refid="tinyformat.h"/>
        <childnode refid="56342" relation="include">
        </childnode>
        <childnode refid="56343" relation="include">
        </childnode>
        <childnode refid="56344" relation="include">
        </childnode>
        <childnode refid="56345" relation="include">
        </childnode>
      </node>
      <node id="56343">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="56382">
        <label>/home/dev/ds-160209/src/qt/darksilkgui.cpp</label>
        <link refid="darksilkgui_8cpp"/>
      </node>
      <node id="56487">
        <label>/home/dev/ds-160209/src/test/base32_tests.cpp</label>
        <link refid="base32__tests_8cpp"/>
      </node>
      <node id="56482">
        <label>/home/dev/ds-160209/src/qt/i2poptionswidget.cpp</label>
        <link refid="i2poptionswidget_8cpp"/>
      </node>
      <node id="56366">
        <label>/home/dev/ds-160209/src/stormnodeman.cpp</label>
        <link refid="stormnodeman_8cpp"/>
      </node>
      <node id="56387">
        <label>/home/dev/ds-160209/src/rpcsmessage.cpp</label>
        <link refid="rpcsmessage_8cpp"/>
      </node>
      <node id="56484">
        <label>/home/dev/ds-160209/src/rpcclient.cpp</label>
        <link refid="rpcclient_8cpp"/>
      </node>
      <node id="56469">
        <label>/home/dev/ds-160209/src/rpcserver.cpp</label>
        <link refid="rpcserver_8cpp"/>
      </node>
      <node id="56367">
        <label>/home/dev/ds-160209/src/wallet.cpp</label>
        <link refid="wallet_8cpp"/>
      </node>
      <node id="56395">
        <label>/home/dev/ds-160209/src/qt/guiutil.cpp</label>
        <link refid="guiutil_8cpp"/>
      </node>
      <node id="56434">
        <label>/home/dev/ds-160209/src/stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56373" relation="include">
        </childnode>
        <childnode refid="56374" relation="include">
        </childnode>
        <childnode refid="56363" relation="include">
        </childnode>
        <childnode refid="56377" relation="include">
        </childnode>
        <childnode refid="56364" relation="include">
        </childnode>
        <childnode refid="56365" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56461">
        <label>/home/dev/ds-160209/src/primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="56447" relation="include">
        </childnode>
        <childnode refid="56352" relation="include">
        </childnode>
        <childnode refid="56418" relation="include">
        </childnode>
        <childnode refid="56415" relation="include">
        </childnode>
        <childnode refid="56462" relation="include">
        </childnode>
        <childnode refid="56463" relation="include">
        </childnode>
        <childnode refid="56368" relation="include">
        </childnode>
        <childnode refid="56464" relation="include">
        </childnode>
        <childnode refid="56465" relation="include">
        </childnode>
        <childnode refid="56395" relation="include">
        </childnode>
        <childnode refid="56425" relation="include">
        </childnode>
      </node>
      <node id="56380">
        <label>/home/dev/ds-160209/src/qt/messagemodel.h</label>
        <link refid="messagemodel_8h"/>
        <childnode refid="56381" relation="include">
        </childnode>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56383" relation="include">
        </childnode>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56385" relation="include">
        </childnode>
        <childnode refid="56386" relation="include">
        </childnode>
      </node>
      <node id="56456">
        <label>/home/dev/ds-160209/src/script.h</label>
        <link refid="script_8h"/>
        <childnode refid="56457" relation="include">
        </childnode>
        <childnode refid="56461" relation="include">
        </childnode>
        <childnode refid="56351" relation="include">
        </childnode>
        <childnode refid="56352" relation="include">
        </childnode>
        <childnode refid="56466" relation="include">
        </childnode>
        <childnode refid="56355" relation="include">
        </childnode>
        <childnode refid="56451" relation="include">
        </childnode>
        <childnode refid="56391" relation="include">
        </childnode>
        <childnode refid="56376" relation="include">
        </childnode>
        <childnode refid="56443" relation="include">
        </childnode>
        <childnode refid="56363" relation="include">
        </childnode>
        <childnode refid="56473" relation="include">
        </childnode>
      </node>
      <node id="56393">
        <label>/home/dev/ds-160209/src/qt/addresstablemodel.cpp</label>
        <link refid="addresstablemodel_8cpp"/>
      </node>
      <node id="56450">
        <label>/home/dev/ds-160209/src/primitives/block.cpp</label>
        <link refid="block_8cpp"/>
      </node>
      <node id="56368">
        <label>/home/dev/ds-160209/src/net.cpp</label>
        <link refid="net_8cpp"/>
      </node>
      <node id="56458">
        <label>/home/dev/ds-160209/src/walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="56352" relation="include">
        </childnode>
        <childnode refid="56391" relation="include">
        </childnode>
        <childnode refid="56407" relation="include">
        </childnode>
        <childnode refid="56371" relation="include">
        </childnode>
        <childnode refid="56361" relation="include">
        </childnode>
        <childnode refid="56409" relation="include">
        </childnode>
        <childnode refid="56410" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
        <childnode refid="56413" relation="include">
        </childnode>
      </node>
      <node id="56354">
        <label>/home/dev/ds-160209/src/sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="56355" relation="include">
        </childnode>
        <childnode refid="56358" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56368" relation="include">
        </childnode>
        <childnode refid="56369" relation="include">
        </childnode>
        <childnode refid="56370" relation="include">
        </childnode>
        <childnode refid="56371" relation="include">
        </childnode>
        <childnode refid="56372" relation="include">
        </childnode>
        <childnode refid="56373" relation="include">
        </childnode>
        <childnode refid="56374" relation="include">
        </childnode>
        <childnode refid="56375" relation="include">
        </childnode>
        <childnode refid="56376" relation="include">
        </childnode>
        <childnode refid="56377" relation="include">
        </childnode>
        <childnode refid="56364" relation="include">
        </childnode>
        <childnode refid="56378" relation="include">
        </childnode>
        <childnode refid="56366" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56429">
        <label>/home/dev/ds-160209/src/stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="56349" relation="include">
        </childnode>
        <childnode refid="56358" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56430" relation="include">
        </childnode>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
        <childnode refid="56362" relation="include">
        </childnode>
        <childnode refid="56373" relation="include">
        </childnode>
        <childnode refid="56374" relation="include">
        </childnode>
        <childnode refid="56376" relation="include">
        </childnode>
        <childnode refid="56377" relation="include">
        </childnode>
        <childnode refid="56364" relation="include">
        </childnode>
        <childnode refid="56365" relation="include">
        </childnode>
        <childnode refid="56378" relation="include">
        </childnode>
        <childnode refid="56366" relation="include">
        </childnode>
      </node>
      <node id="56418">
        <label>/home/dev/ds-160209/src/txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="56351" relation="include">
        </childnode>
        <childnode refid="56417" relation="include">
        </childnode>
        <childnode refid="56419" relation="include">
        </childnode>
      </node>
      <node id="56363">
        <label>/home/dev/ds-160209/src/spork.cpp</label>
        <link refid="spork_8cpp"/>
      </node>
      <node id="56408">
        <label>/home/dev/ds-160209/src/qt/transactiondesc.cpp</label>
        <link refid="transactiondesc_8cpp"/>
      </node>
      <node id="56430">
        <label>/home/dev/ds-160209/src/qt/clientmodel.cpp</label>
        <link refid="clientmodel_8cpp"/>
      </node>
      <node id="56402">
        <label>/home/dev/ds-160209/src/qt/transactionview.cpp</label>
        <link refid="transactionview_8cpp"/>
      </node>
      <node id="56466">
        <label>/home/dev/ds-160209/src/base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="56431" relation="include">
        </childnode>
        <childnode refid="56432" relation="include">
        </childnode>
        <childnode refid="56355" relation="include">
        </childnode>
        <childnode refid="56467" relation="include">
        </childnode>
        <childnode refid="56434" relation="include">
        </childnode>
        <childnode refid="56379" relation="include">
        </childnode>
        <childnode refid="56358" relation="include">
        </childnode>
        <childnode refid="56391" relation="include">
        </childnode>
        <childnode refid="56393" relation="include">
        </childnode>
        <childnode refid="56403" relation="include">
        </childnode>
        <childnode refid="56404" relation="include">
        </childnode>
        <childnode refid="56369" relation="include">
        </childnode>
        <childnode refid="56405" relation="include">
        </childnode>
        <childnode refid="56383" relation="include">
        </childnode>
        <childnode refid="56397" relation="include">
        </childnode>
        <childnode refid="56399" relation="include">
        </childnode>
        <childnode refid="56406" relation="include">
        </childnode>
        <childnode refid="56408" relation="include">
        </childnode>
        <childnode refid="56372" relation="include">
        </childnode>
        <childnode refid="56361" relation="include">
        </childnode>
        <childnode refid="56468" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
        <childnode refid="56362" relation="include">
        </childnode>
        <childnode refid="56425" relation="include">
        </childnode>
        <childnode refid="56469" relation="include">
        </childnode>
        <childnode refid="56409" relation="include">
        </childnode>
        <childnode refid="56388" relation="include">
        </childnode>
        <childnode refid="56363" relation="include">
        </childnode>
        <childnode refid="56470" relation="include">
        </childnode>
        <childnode refid="56453" relation="include">
        </childnode>
        <childnode refid="56471" relation="include">
        </childnode>
        <childnode refid="56472" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
        <childnode refid="56413" relation="include">
        </childnode>
      </node>
      <node id="56374">
        <label>/home/dev/ds-160209/src/rpcstormnode.cpp</label>
        <link refid="rpcstormnode_8cpp"/>
      </node>
      <node id="56369">
        <label>/home/dev/ds-160209/src/qt/coincontroldialog.cpp</label>
        <link refid="coincontroldialog_8cpp"/>
      </node>
      <node id="56420">
        <label>/home/dev/ds-160209/src/coins.cpp</label>
        <link refid="coins_8cpp"/>
      </node>
      <node id="56383">
        <label>/home/dev/ds-160209/src/qt/messagemodel.cpp</label>
        <link refid="messagemodel_8cpp"/>
      </node>
      <node id="56453">
        <label>/home/dev/ds-160209/src/stormnodeconfig.cpp</label>
        <link refid="stormnodeconfig_8cpp"/>
      </node>
      <node id="56417">
        <label>/home/dev/ds-160209/src/coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="56418" relation="include">
        </childnode>
        <childnode refid="56420" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
      </node>
      <node id="56448">
        <label>/home/dev/ds-160209/src/chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="56351" relation="include">
        </childnode>
        <childnode refid="56356" relation="include">
        </childnode>
        <childnode refid="56449" relation="include">
        </childnode>
      </node>
      <node id="56379">
        <label>/home/dev/ds-160209/src/smessage.h</label>
        <link refid="smessage_8h"/>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56380" relation="include">
        </childnode>
        <childnode refid="56386" relation="include">
        </childnode>
        <childnode refid="56361" relation="include">
        </childnode>
        <childnode refid="56387" relation="include">
        </childnode>
        <childnode refid="56388" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56381">
        <label>/home/dev/ds-160209/src/qt/darksilk.cpp</label>
        <link refid="darksilk_8cpp"/>
      </node>
      <node id="56464">
        <label>/home/dev/ds-160209/src/primitives/transaction.cpp</label>
        <link refid="transaction_8cpp"/>
      </node>
      <node id="56409">
        <label>/home/dev/ds-160209/src/rpcwallet.cpp</label>
        <link refid="rpcwallet_8cpp"/>
      </node>
      <node id="56441">
        <label>/home/dev/ds-160209/src/rpcblockchain.cpp</label>
        <link refid="rpcblockchain_8cpp"/>
        <childnode refid="56406" relation="include">
        </childnode>
      </node>
      <node id="56419">
        <label>/home/dev/ds-160209/src/txmempool.cpp</label>
        <link refid="txmempool_8cpp"/>
      </node>
      <node id="56428">
        <label>/home/dev/ds-160209/src/stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="56429" relation="include">
        </childnode>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56360" relation="include">
        </childnode>
        <childnode refid="56373" relation="include">
        </childnode>
        <childnode refid="56374" relation="include">
        </childnode>
        <childnode refid="56376" relation="include">
        </childnode>
        <childnode refid="56364" relation="include">
        </childnode>
        <childnode refid="56365" relation="include">
        </childnode>
        <childnode refid="56378" relation="include">
        </childnode>
        <childnode refid="56366" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56406">
        <label>/home/dev/ds-160209/src/qt/statisticspage.cpp</label>
        <link refid="statisticspage_8cpp"/>
      </node>
      <node id="56398">
        <label>/home/dev/ds-160209/src/qt/sendcoinsentry.cpp</label>
        <link refid="sendcoinsentry_8cpp"/>
      </node>
      <node id="56438">
        <label>/home/dev/ds-160209/src/qt/debugconsole.h</label>
        <link refid="debugconsole_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56439" relation="include">
        </childnode>
      </node>
      <node id="56347">
        <label>/home/dev/ds-160209/src/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="56348" relation="include">
        </childnode>
        <childnode refid="56456" relation="include">
        </childnode>
        <childnode refid="56474" relation="include">
        </childnode>
        <childnode refid="56461" relation="include">
        </childnode>
        <childnode refid="56475" relation="include">
        </childnode>
        <childnode refid="56448" relation="include">
        </childnode>
        <childnode refid="56352" relation="include">
        </childnode>
        <childnode refid="56431" relation="include">
        </childnode>
        <childnode refid="56432" relation="include">
        </childnode>
        <childnode refid="56355" relation="include">
        </childnode>
        <childnode refid="56445" relation="include">
        </childnode>
        <childnode refid="56420" relation="include">
        </childnode>
        <childnode refid="56446" relation="include">
        </childnode>
        <childnode refid="56455" relation="include">
        </childnode>
        <childnode refid="56477" relation="include">
        </childnode>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56434" relation="include">
        </childnode>
        <childnode refid="56358" relation="include">
        </childnode>
        <childnode refid="56478" relation="include">
        </childnode>
        <childnode refid="56479" relation="include">
        </childnode>
        <childnode refid="56480" relation="include">
        </childnode>
        <childnode refid="56481" relation="include">
        </childnode>
        <childnode refid="56391" relation="include">
        </childnode>
        <childnode refid="56381" relation="include">
        </childnode>
        <childnode refid="56395" relation="include">
        </childnode>
        <childnode refid="56482" relation="include">
        </childnode>
        <childnode refid="56483" relation="include">
        </childnode>
        <childnode refid="56484" relation="include">
        </childnode>
        <childnode refid="56362" relation="include">
        </childnode>
        <childnode refid="56442" relation="include">
        </childnode>
        <childnode refid="56485" relation="include">
        </childnode>
        <childnode refid="56469" relation="include">
        </childnode>
        <childnode refid="56373" relation="include">
        </childnode>
        <childnode refid="56409" relation="include">
        </childnode>
        <childnode refid="56376" relation="include">
        </childnode>
        <childnode refid="56452" relation="include">
        </childnode>
        <childnode refid="56363" relation="include">
        </childnode>
        <childnode refid="56377" relation="include">
        </childnode>
        <childnode refid="56364" relation="include">
        </childnode>
        <childnode refid="56365" relation="include">
        </childnode>
        <childnode refid="56378" relation="include">
        </childnode>
        <childnode refid="56453" relation="include">
        </childnode>
        <childnode refid="56366" relation="include">
        </childnode>
        <childnode refid="56486" relation="include">
        </childnode>
        <childnode refid="56444" relation="include">
        </childnode>
        <childnode refid="56487" relation="include">
        </childnode>
        <childnode refid="56471" relation="include">
        </childnode>
        <childnode refid="56411" relation="include">
        </childnode>
        <childnode refid="56488" relation="include">
        </childnode>
        <childnode refid="56489" relation="include">
        </childnode>
        <childnode refid="56490" relation="include">
        </childnode>
        <childnode refid="56491" relation="include">
        </childnode>
        <childnode refid="56472" relation="include">
        </childnode>
        <childnode refid="56492" relation="include">
        </childnode>
        <childnode refid="56493" relation="include">
        </childnode>
        <childnode refid="56426" relation="include">
        </childnode>
        <childnode refid="56494" relation="include">
        </childnode>
      </node>
      <node id="56436">
        <label>/home/dev/ds-160209/src/chainparams.cpp</label>
        <link refid="chainparams_8cpp"/>
      </node>
      <node id="56361">
        <label>/home/dev/ds-160209/src/qt/walletmodel.cpp</label>
        <link refid="walletmodel_8cpp"/>
      </node>
      <node id="56422">
        <label>/home/dev/ds-160209/src/compressor.cpp</label>
        <link refid="compressor_8cpp"/>
      </node>
      <node id="56400">
        <label>/home/dev/ds-160209/src/qt/test/uritests.cpp</label>
        <link refid="uritests_8cpp"/>
      </node>
      <node id="56352">
        <label>/home/dev/ds-160209/src/wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="56353" relation="include">
        </childnode>
        <childnode refid="56356" relation="include">
        </childnode>
        <childnode refid="56379" relation="include">
        </childnode>
        <childnode refid="56389" relation="include">
        </childnode>
        <childnode refid="56368" relation="include">
        </childnode>
        <childnode refid="56391" relation="include">
        </childnode>
        <childnode refid="56392" relation="include">
        </childnode>
        <childnode refid="56393" relation="include">
        </childnode>
        <childnode refid="56403" relation="include">
        </childnode>
        <childnode refid="56404" relation="include">
        </childnode>
        <childnode refid="56369" relation="include">
        </childnode>
        <childnode refid="56381" relation="include">
        </childnode>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56405" relation="include">
        </childnode>
        <childnode refid="56407" relation="include">
        </childnode>
        <childnode refid="56399" relation="include">
        </childnode>
        <childnode refid="56406" relation="include">
        </childnode>
        <childnode refid="56371" relation="include">
        </childnode>
        <childnode refid="56408" relation="include">
        </childnode>
        <childnode refid="56372" relation="include">
        </childnode>
        <childnode refid="56401" relation="include">
        </childnode>
        <childnode refid="56361" relation="include">
        </childnode>
        <childnode refid="56409" relation="include">
        </childnode>
        <childnode refid="56410" relation="include">
        </childnode>
        <childnode refid="56411" relation="include">
        </childnode>
        <childnode refid="56412" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
        <childnode refid="56413" relation="include">
        </childnode>
      </node>
      <node id="56446">
        <label>/home/dev/ds-160209/src/scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="56447" relation="include">
        </childnode>
        <childnode refid="56451" relation="include">
        </childnode>
        <childnode refid="56452" relation="include">
        </childnode>
      </node>
      <node id="56442">
        <label>/home/dev/ds-160209/src/rpcnet.cpp</label>
        <link refid="rpcnet_8cpp"/>
      </node>
      <node id="56427">
        <label>/home/dev/ds-160209/src/txdb.cpp</label>
        <link refid="txdb_8cpp"/>
      </node>
      <node id="56399">
        <label>/home/dev/ds-160209/src/qt/signverifymessagedialog.cpp</label>
        <link refid="signverifymessagedialog_8cpp"/>
      </node>
      <node id="56360">
        <label>/home/dev/ds-160209/src/miner.cpp</label>
        <link refid="miner_8cpp"/>
      </node>
      <node id="56365">
        <label>/home/dev/ds-160209/src/stormnode-sync.cpp</label>
        <link refid="stormnode-sync_8cpp"/>
      </node>
      <node id="56483">
        <label>/home/dev/ds-160209/src/qt/paymentserver.cpp</label>
        <link refid="paymentserver_8cpp"/>
      </node>
      <node id="56390">
        <label>/home/dev/ds-160209/src/rpcmining.cpp</label>
        <link refid="rpcmining_8cpp"/>
      </node>
      <node id="56479">
        <label>/home/dev/ds-160209/src/netbase.cpp</label>
        <link refid="netbase_8cpp"/>
      </node>
      <node id="56477">
        <label>/home/dev/ds-160209/src/i2p.cpp</label>
        <link refid="i2p_8cpp"/>
      </node>
      <node id="56433">
        <label>/home/dev/ds-160209/src/sandstorm-relay.h</label>
        <link refid="sandstorm-relay_8h"/>
        <childnode refid="56375" relation="include">
        </childnode>
      </node>
      <node id="56348">
        <label>/home/dev/ds-160209/src/addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="56349" relation="include">
        </childnode>
        <childnode refid="56350" relation="include">
        </childnode>
        <childnode refid="56454" relation="include">
        </childnode>
        <childnode refid="56455" relation="include">
        </childnode>
        <childnode refid="56377" relation="include">
        </childnode>
        <childnode refid="56364" relation="include">
        </childnode>
        <childnode refid="56365" relation="include">
        </childnode>
        <childnode refid="56378" relation="include">
        </childnode>
        <childnode refid="56366" relation="include">
        </childnode>
      </node>
      <node id="56404">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.cpp</label>
        <link refid="blockbrowser_8cpp"/>
      </node>
      <node id="56431">
        <label>/home/dev/ds-160209/src/stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="56428" relation="include">
        </childnode>
        <childnode refid="56432" relation="include">
        </childnode>
        <childnode refid="56434" relation="include">
        </childnode>
        <childnode refid="56371" relation="include">
        </childnode>
        <childnode refid="56377" relation="include">
        </childnode>
        <childnode refid="56365" relation="include">
        </childnode>
        <childnode refid="56378" relation="include">
        </childnode>
        <childnode refid="56366" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56475">
        <label>/home/dev/ds-160209/src/leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="56414" relation="include">
        </childnode>
        <childnode refid="56476" relation="include">
        </childnode>
      </node>
      <node id="56468">
        <label>/home/dev/ds-160209/src/rpcdump.cpp</label>
        <link refid="rpcdump_8cpp"/>
      </node>
      <node id="56463">
        <label>/home/dev/ds-160209/src/instantx.h</label>
        <link refid="instantx_8h"/>
        <childnode refid="56358" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56392" relation="include">
        </childnode>
        <childnode refid="56372" relation="include">
        </childnode>
        <childnode refid="56376" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56454">
        <label>/home/dev/ds-160209/src/addrman.cpp</label>
        <link refid="addrman_8cpp"/>
      </node>
      <node id="56426">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="56372">
        <label>/home/dev/ds-160209/src/qt/transactionrecord.cpp</label>
        <link refid="transactionrecord_8cpp"/>
      </node>
      <node id="56416">
        <label>/home/dev/ds-160209/src/undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="56417" relation="include">
        </childnode>
        <childnode refid="56421" relation="include">
        </childnode>
      </node>
      <node id="56444">
        <label>/home/dev/ds-160209/src/test/allocator_tests.cpp</label>
        <link refid="allocator__tests_8cpp"/>
      </node>
      <node id="56467">
        <label>/home/dev/ds-160209/src/base58.cpp</label>
        <link refid="base58_8cpp"/>
      </node>
      <node id="56452">
        <label>/home/dev/ds-160209/src/scrypt.cpp</label>
        <link refid="scrypt_8cpp"/>
      </node>
      <node id="56462">
        <label>/home/dev/ds-160209/src/coincontrol.h</label>
        <link refid="coincontrol_8h"/>
        <childnode refid="56369" relation="include">
        </childnode>
        <childnode refid="56397" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56443">
        <label>/home/dev/ds-160209/src/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="56411">
        <label>/home/dev/ds-160209/src/test/base64_tests.cpp</label>
        <link refid="base64__tests_8cpp"/>
      </node>
      <node id="56371">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.cpp</label>
        <link refid="stormnodemanager_8cpp"/>
      </node>
      <node id="56493">
        <label>/home/dev/ds-160209/src/timedata.cpp</label>
        <link refid="timedata_8cpp"/>
      </node>
      <node id="56396">
        <label>/home/dev/ds-160209/src/qt/sandstormconfig.cpp</label>
        <link refid="sandstormconfig_8cpp"/>
      </node>
      <node id="56364">
        <label>/home/dev/ds-160209/src/stormnode-payments.cpp</label>
        <link refid="stormnode-payments_8cpp"/>
      </node>
      <node id="56445">
        <label>/home/dev/ds-160209/src/alert.cpp</label>
        <link refid="alert_8cpp"/>
      </node>
      <node id="56459">
        <label>/home/dev/ds-160209/src/crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="56352" relation="include">
        </childnode>
        <childnode refid="56451" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56412">
        <label>/home/dev/ds-160209/src/test/wallet_tests.cpp</label>
        <link refid="wallet__tests_8cpp"/>
      </node>
      <node id="56457">
        <label>/home/dev/ds-160209/src/keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="56458" relation="include">
        </childnode>
        <childnode refid="56459" relation="include">
        </childnode>
        <childnode refid="56352" relation="include">
        </childnode>
        <childnode refid="56460" relation="include">
        </childnode>
        <childnode refid="56425" relation="include">
        </childnode>
        <childnode refid="56443" relation="include">
        </childnode>
      </node>
      <node id="56407">
        <label>/home/dev/ds-160209/src/qt/optionsmodel.cpp</label>
        <link refid="optionsmodel_8cpp"/>
      </node>
      <node id="56455">
        <label>/home/dev/ds-160209/src/db.cpp</label>
        <link refid="db_8cpp"/>
      </node>
      <node id="56488">
        <label>/home/dev/ds-160209/src/test/bignum_tests.cpp</label>
        <link refid="bignum__tests_8cpp"/>
      </node>
      <node id="56474">
        <label>/home/dev/ds-160209/src/stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="56456" relation="include">
        </childnode>
        <childnode refid="56458" relation="include">
        </childnode>
        <childnode refid="56352" relation="include">
        </childnode>
        <childnode refid="56398" relation="include">
        </childnode>
        <childnode refid="56362" relation="include">
        </childnode>
        <childnode refid="56470" relation="include">
        </childnode>
      </node>
      <node id="56449">
        <label>/home/dev/ds-160209/src/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="56356" relation="include">
        </childnode>
        <childnode refid="56424" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56360" relation="include">
        </childnode>
        <childnode refid="56441" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
        <childnode refid="56426" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56410">
        <label>/home/dev/ds-160209/src/test/accounting_tests.cpp</label>
        <link refid="accounting__tests_8cpp"/>
      </node>
      <node id="56470">
        <label>/home/dev/ds-160209/src/stealth.cpp</label>
        <link refid="stealth_8cpp"/>
      </node>
      <node id="56425">
        <label>/home/dev/ds-160209/src/rpcrawtransaction.cpp</label>
        <link refid="rpcrawtransaction_8cpp"/>
      </node>
      <node id="56351">
        <label>/home/dev/ds-160209/src/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="56352" relation="include">
        </childnode>
        <childnode refid="56414" relation="include">
        </childnode>
        <childnode refid="56428" relation="include">
        </childnode>
        <childnode refid="56431" relation="include">
        </childnode>
        <childnode refid="56429" relation="include">
        </childnode>
        <childnode refid="56432" relation="include">
        </childnode>
        <childnode refid="56355" relation="include">
        </childnode>
        <childnode refid="56435" relation="include">
        </childnode>
        <childnode refid="56436" relation="include">
        </childnode>
        <childnode refid="56423" relation="include">
        </childnode>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56434" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56368" relation="include">
        </childnode>
        <childnode refid="56403" relation="include">
        </childnode>
        <childnode refid="56404" relation="include">
        </childnode>
        <childnode refid="56437" relation="include">
        </childnode>
        <childnode refid="56430" relation="include">
        </childnode>
        <childnode refid="56405" relation="include">
        </childnode>
        <childnode refid="56399" relation="include">
        </childnode>
        <childnode refid="56406" relation="include">
        </childnode>
        <childnode refid="56408" relation="include">
        </childnode>
        <childnode refid="56441" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
        <childnode refid="56362" relation="include">
        </childnode>
        <childnode refid="56442" relation="include">
        </childnode>
        <childnode refid="56425" relation="include">
        </childnode>
        <childnode refid="56387" relation="include">
        </childnode>
        <childnode refid="56373" relation="include">
        </childnode>
        <childnode refid="56374" relation="include">
        </childnode>
        <childnode refid="56443" relation="include">
        </childnode>
        <childnode refid="56363" relation="include">
        </childnode>
        <childnode refid="56377" relation="include">
        </childnode>
        <childnode refid="56444" relation="include">
        </childnode>
        <childnode refid="56411" relation="include">
        </childnode>
        <childnode refid="56412" relation="include">
        </childnode>
        <childnode refid="56426" relation="include">
        </childnode>
      </node>
      <node id="56375">
        <label>/home/dev/ds-160209/src/sandstorm-relay.cpp</label>
        <link refid="sandstorm-relay_8cpp"/>
      </node>
      <node id="56432">
        <label>/home/dev/ds-160209/src/stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="56349" relation="include">
        </childnode>
        <childnode refid="56354" relation="include">
        </childnode>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56358" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56360" relation="include">
        </childnode>
        <childnode refid="56430" relation="include">
        </childnode>
        <childnode refid="56371" relation="include">
        </childnode>
        <childnode refid="56373" relation="include">
        </childnode>
        <childnode refid="56374" relation="include">
        </childnode>
        <childnode refid="56433" relation="include">
        </childnode>
        <childnode refid="56377" relation="include">
        </childnode>
        <childnode refid="56364" relation="include">
        </childnode>
        <childnode refid="56365" relation="include">
        </childnode>
        <childnode refid="56378" relation="include">
        </childnode>
        <childnode refid="56366" relation="include">
        </childnode>
      </node>
      <node id="56473">
        <label>/home/dev/ds-160209/src/test/sigopcount_tests.cpp</label>
        <link refid="sigopcount__tests_8cpp"/>
      </node>
      <node id="56424">
        <label>/home/dev/ds-160209/src/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
      </node>
      <node id="56394">
        <label>/home/dev/ds-160209/src/qt/askpassphrasedialog.cpp</label>
        <link refid="askpassphrasedialog_8cpp"/>
      </node>
      <node id="56350">
        <label>/home/dev/ds-160209/src/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="56351" relation="include">
        </childnode>
        <childnode refid="56431" relation="include">
        </childnode>
        <childnode refid="56432" relation="include">
        </childnode>
        <childnode refid="56355" relation="include">
        </childnode>
        <childnode refid="56445" relation="include">
        </childnode>
        <childnode refid="56446" relation="include">
        </childnode>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56434" relation="include">
        </childnode>
        <childnode refid="56379" relation="include">
        </childnode>
        <childnode refid="56358" relation="include">
        </childnode>
        <childnode refid="56368" relation="include">
        </childnode>
        <childnode refid="56437" relation="include">
        </childnode>
        <childnode refid="56440" relation="include">
        </childnode>
        <childnode refid="56362" relation="include">
        </childnode>
        <childnode refid="56442" relation="include">
        </childnode>
        <childnode refid="56425" relation="include">
        </childnode>
        <childnode refid="56409" relation="include">
        </childnode>
        <childnode refid="56452" relation="include">
        </childnode>
        <childnode refid="56363" relation="include">
        </childnode>
        <childnode refid="56453" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56491">
        <label>/home/dev/ds-160209/src/test/hmac_tests.cpp</label>
        <link refid="hmac__tests_8cpp"/>
      </node>
      <node id="56373">
        <label>/home/dev/ds-160209/src/rpcstormnode-budget.cpp</label>
        <link refid="rpcstormnode-budget_8cpp"/>
      </node>
      <node id="56476">
        <label>/home/dev/ds-160209/src/leveldbwrapper.cpp</label>
        <link refid="leveldbwrapper_8cpp"/>
      </node>
      <node id="56415">
        <label>/home/dev/ds-160209/src/compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56422" relation="include">
        </childnode>
      </node>
      <node id="56349">
        <label>/home/dev/ds-160209/src/activestormnode.cpp</label>
        <link refid="activestormnode_8cpp"/>
      </node>
      <node id="56413">
        <label>/home/dev/ds-160209/src/walletdb.cpp</label>
        <link refid="walletdb_8cpp"/>
      </node>
      <node id="56481">
        <label>/home/dev/ds-160209/src/qt/stormnodemanager.h</label>
        <link refid="stormnodemanager_8h"/>
        <childnode refid="56391" relation="include">
        </childnode>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56371" relation="include">
        </childnode>
      </node>
      <node id="56356">
        <label>/home/dev/ds-160209/src/chain.cpp</label>
        <link refid="chain_8cpp"/>
      </node>
      <node id="56377">
        <label>/home/dev/ds-160209/src/stormnode-budget.cpp</label>
        <link refid="stormnode-budget_8cpp"/>
      </node>
      <node id="56421">
        <label>/home/dev/ds-160209/src/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="56435">
        <label>/home/dev/ds-160209/src/txdb-leveldb.h</label>
        <link refid="txdb-leveldb_8h"/>
        <childnode refid="56356" relation="include">
        </childnode>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56424" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56360" relation="include">
        </childnode>
        <childnode refid="56408" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
        <childnode refid="56425" relation="include">
        </childnode>
        <childnode refid="56388" relation="include">
        </childnode>
        <childnode refid="56426" relation="include">
        </childnode>
        <childnode refid="56427" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56485">
        <label>/home/dev/ds-160209/src/rpcprotocol.cpp</label>
        <link refid="rpcprotocol_8cpp"/>
      </node>
      <node id="56391">
        <label>/home/dev/ds-160209/src/qt/addeditstormnode.cpp</label>
        <link refid="addeditstormnode_8cpp"/>
      </node>
      <node id="56358">
        <label>/home/dev/ds-160209/src/instantx.cpp</label>
        <link refid="instantx_8cpp"/>
      </node>
      <node id="56346">
        <label>/home/dev/ds-160209/src/tinyformat.h</label>
        <link refid="tinyformat.h"/>
        <childnode refid="56347" relation="include">
        </childnode>
        <childnode refid="56495" relation="include">
        </childnode>
        <childnode refid="56496" relation="include">
        </childnode>
      </node>
      <node id="56357">
        <label>/home/dev/ds-160209/src/init.cpp</label>
        <link refid="init_8cpp"/>
      </node>
      <node id="56437">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.h</label>
        <link refid="peertablemodel_8h"/>
        <childnode refid="56430" relation="include">
        </childnode>
        <childnode refid="56438" relation="include">
        </childnode>
        <childnode refid="56440" relation="include">
        </childnode>
      </node>
      <node id="56494">
        <label>/home/dev/ds-160209/src/util.cpp</label>
        <link refid="util_8cpp"/>
      </node>
      <node id="56384">
        <label>/home/dev/ds-160209/src/qt/messagepage.cpp</label>
        <link refid="messagepage_8cpp"/>
      </node>
      <node id="56355">
        <label>/home/dev/ds-160209/src/spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="56349" relation="include">
        </childnode>
        <childnode refid="56356" relation="include">
        </childnode>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56358" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56360" relation="include">
        </childnode>
        <childnode refid="56361" relation="include">
        </childnode>
        <childnode refid="56362" relation="include">
        </childnode>
        <childnode refid="56363" relation="include">
        </childnode>
        <childnode refid="56364" relation="include">
        </childnode>
        <childnode refid="56365" relation="include">
        </childnode>
        <childnode refid="56366" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56489">
        <label>/home/dev/ds-160209/src/test/Checkpoints_tests.cpp</label>
        <link refid="_checkpoints__tests_8cpp"/>
      </node>
      <node id="56385">
        <label>/home/dev/ds-160209/src/qt/sendmessagesdialog.cpp</label>
        <link refid="sendmessagesdialog_8cpp"/>
      </node>
      <node id="56486">
        <label>/home/dev/ds-160209/src/sync.cpp</label>
        <link refid="sync_8cpp"/>
      </node>
      <node id="56386">
        <label>/home/dev/ds-160209/src/qt/sendmessagesentry.cpp</label>
        <link refid="sendmessagesentry_8cpp"/>
      </node>
      <node id="56472">
        <label>/home/dev/ds-160209/src/test/key_tests.cpp</label>
        <link refid="key__tests_8cpp"/>
      </node>
      <node id="56389">
        <label>/home/dev/ds-160209/src/miner.h</label>
        <link refid="miner_8h"/>
        <childnode refid="56360" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
      </node>
      <node id="56388">
        <label>/home/dev/ds-160209/src/smessage.cpp</label>
        <link refid="smessage_8cpp"/>
      </node>
      <node id="56440">
        <label>/home/dev/ds-160209/src/qt/peertablemodel.cpp</label>
        <link refid="peertablemodel_8cpp"/>
      </node>
      <node id="56405">
        <label>/home/dev/ds-160209/src/qt/statisticspage.h</label>
        <link refid="statisticspage_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56406" relation="include">
        </childnode>
      </node>
      <node id="56490">
        <label>/home/dev/ds-160209/src/test/getarg_tests.cpp</label>
        <link refid="getarg__tests_8cpp"/>
      </node>
      <node id="56496">
        <label>/home/dev/ds-160209/src/utilstrencodings.cpp</label>
        <link refid="utilstrencodings_8cpp"/>
      </node>
      <node id="56471">
        <label>/home/dev/ds-160209/src/test/base58_tests.cpp</label>
        <link refid="base58__tests_8cpp"/>
      </node>
      <node id="56465">
        <label>/home/dev/ds-160209/src/qt/darksilkunits.cpp</label>
        <link refid="darksilkunits_8cpp"/>
      </node>
      <node id="56495">
        <label>/home/dev/ds-160209/src/amount.cpp</label>
        <link refid="amount_8cpp"/>
      </node>
      <node id="56414">
        <label>/home/dev/ds-160209/src/txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="56415" relation="include">
        </childnode>
        <childnode refid="56351" relation="include">
        </childnode>
        <childnode refid="56423" relation="include">
        </childnode>
        <childnode refid="56420" relation="include">
        </childnode>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56424" relation="include">
        </childnode>
        <childnode refid="56359" relation="include">
        </childnode>
        <childnode refid="56360" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
        <childnode refid="56425" relation="include">
        </childnode>
        <childnode refid="56388" relation="include">
        </childnode>
        <childnode refid="56426" relation="include">
        </childnode>
        <childnode refid="56427" relation="include">
        </childnode>
        <childnode refid="56367" relation="include">
        </childnode>
      </node>
      <node id="56480">
        <label>/home/dev/ds-160209/src/protocol.cpp</label>
        <link refid="protocol_8cpp"/>
      </node>
      <node id="56401">
        <label>/home/dev/ds-160209/src/qt/transactiontablemodel.cpp</label>
        <link refid="transactiontablemodel_8cpp"/>
      </node>
      <node id="56492">
        <label>/home/dev/ds-160209/src/test/mruset_tests.cpp</label>
        <link refid="mruset__tests_8cpp"/>
      </node>
      <node id="56359">
        <label>/home/dev/ds-160209/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="56362">
        <label>/home/dev/ds-160209/src/rpcmisc.cpp</label>
        <link refid="rpcmisc_8cpp"/>
      </node>
      <node id="56397">
        <label>/home/dev/ds-160209/src/qt/sendcoinsdialog.cpp</label>
        <link refid="sendcoinsdialog_8cpp"/>
      </node>
      <node id="56353">
        <label>/home/dev/ds-160209/src/activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="56349" relation="include">
        </childnode>
        <childnode refid="56354" relation="include">
        </childnode>
        <childnode refid="56357" relation="include">
        </childnode>
        <childnode refid="56358" relation="include">
        </childnode>
        <childnode refid="56371" relation="include">
        </childnode>
        <childnode refid="56373" relation="include">
        </childnode>
        <childnode refid="56374" relation="include">
        </childnode>
        <childnode refid="56365" relation="include">
        </childnode>
        <childnode refid="56366" relation="include">
        </childnode>
      </node>
      <node id="56460">
        <label>/home/dev/ds-160209/src/keystore.cpp</label>
        <link refid="keystore_8cpp"/>
      </node>
      <node id="56392">
        <label>/home/dev/ds-160209/src/qt/walletmodel.h</label>
        <link refid="walletmodel_8h"/>
        <childnode refid="56393" relation="include">
        </childnode>
        <childnode refid="56394" relation="include">
        </childnode>
        <childnode refid="56369" relation="include">
        </childnode>
        <childnode refid="56381" relation="include">
        </childnode>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56395" relation="include">
        </childnode>
        <childnode refid="56383" relation="include">
        </childnode>
        <childnode refid="56370" relation="include">
        </childnode>
        <childnode refid="56396" relation="include">
        </childnode>
        <childnode refid="56397" relation="include">
        </childnode>
        <childnode refid="56398" relation="include">
        </childnode>
        <childnode refid="56385" relation="include">
        </childnode>
        <childnode refid="56386" relation="include">
        </childnode>
        <childnode refid="56399" relation="include">
        </childnode>
        <childnode refid="56371" relation="include">
        </childnode>
        <childnode refid="56400" relation="include">
        </childnode>
        <childnode refid="56401" relation="include">
        </childnode>
        <childnode refid="56402" relation="include">
        </childnode>
        <childnode refid="56361" relation="include">
        </childnode>
      </node>
      <node id="56478">
        <label>/home/dev/ds-160209/src/key.cpp</label>
        <link refid="key_8cpp"/>
      </node>
      <node id="56376">
        <label>/home/dev/ds-160209/src/sandstorm.cpp</label>
        <link refid="sandstorm_8cpp"/>
      </node>
      <node id="56403">
        <label>/home/dev/ds-160209/src/qt/blockbrowser.h</label>
        <link refid="blockbrowser_8h"/>
        <childnode refid="56404" relation="include">
        </childnode>
        <childnode refid="56382" relation="include">
        </childnode>
      </node>
      <node id="56370">
        <label>/home/dev/ds-160209/src/qt/overviewpage.cpp</label>
        <link refid="overviewpage_8cpp"/>
      </node>
      <node id="56423">
        <label>/home/dev/ds-160209/src/checkpoints.cpp</label>
        <link refid="checkpoints_8cpp"/>
      </node>
      <node id="56378">
        <label>/home/dev/ds-160209/src/stormnode.cpp</label>
        <link refid="stormnode_8cpp"/>
      </node>
      <node id="56447">
        <label>/home/dev/ds-160209/src/primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="56352" relation="include">
        </childnode>
        <childnode refid="56448" relation="include">
        </childnode>
        <childnode refid="56360" relation="include">
        </childnode>
        <childnode refid="56450" relation="include">
        </childnode>
      </node>
      <node id="56439">
        <label>/home/dev/ds-160209/src/qt/debugconsole.cpp</label>
        <link refid="debugconsole_8cpp"/>
      </node>
      <node id="56451">
        <label>/home/dev/ds-160209/src/crypter.cpp</label>
        <link refid="crypter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtinyformat_1_1detail_1_1is__convertible" prot="public">tinyformat::detail::is_convertible</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__convertible_1_1fail" prot="private">tinyformat::detail::is_convertible::fail</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__convertible_1_1succeed" prot="private">tinyformat::detail::is_convertible::succeed</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar" prot="public">tinyformat::detail::is_wchar</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar_3_01wchar__t_01_5_01_4" prot="public">tinyformat::detail::is_wchar&lt; wchar_t * &gt;</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar_3_01const_01wchar__t_01_5_01_4" prot="public">tinyformat::detail::is_wchar&lt; const wchar_t * &gt;</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar_3_01const_01wchar__t[n]_4" prot="public">tinyformat::detail::is_wchar&lt; const wchar_t[n]&gt;</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1is__wchar_3_01wchar__t[n]_4" prot="public">tinyformat::detail::is_wchar&lt; wchar_t[n]&gt;</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1format_value_as_type" prot="public">tinyformat::detail::formatValueAsType</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1format_value_as_type_3_01_t_00_01fmt_t_00_01true_01_4" prot="public">tinyformat::detail::formatValueAsType&lt; T, fmtT, true &gt;</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1convert_to_int" prot="public">tinyformat::detail::convertToInt</innerclass>
    <innerclass refid="structtinyformat_1_1detail_1_1convert_to_int_3_01_t_00_01true_01_4" prot="public">tinyformat::detail::convertToInt&lt; T, true &gt;</innerclass>
    <innerclass refid="classtinyformat_1_1detail_1_1_format_iterator" prot="public">tinyformat::detail::FormatIterator</innerclass>
    <innernamespace refid="namespacetinyformat">tinyformat</innernamespace>
    <innernamespace refid="namespacetinyformat_1_1detail">tinyformat::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tinyformat_8h_1aab516d7d4e92fe18eca4a9d40f450a80" prot="public" static="no">
        <name>TINYFORMAT_ERROR</name>
        <param><defname>reasonString</defname></param>
        <initializer>throw std::runtime_error(reasonString)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="112" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="112" bodyend="-1"/>
        <referencedby refid="structtinyformat_1_1detail_1_1convert_to_int_1a1e1c0d85c6afc3bb21d2bc9458b3feb1" compoundref="tinyformat_8h" startline="236" endline="241">tinyformat::detail::convertToInt&lt; T, convertible &gt;::invoke</referencedby>
        <referencedby refid="classtinyformat_1_1detail_1_1_format_iterator_1a46377a804f72dbad1e508d2fbaa18ce9" compoundref="tinyformat_8h" startline="469" endline="476">tinyformat::detail::FormatIterator::finish</referencedby>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a6aa2353acc671b972658fd73a813b960" prot="public" static="no">
        <name>TINYFORMAT_NOINLINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="141" column="13" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ae166167e47ad25bdbd4a494ab46083b2" prot="public" static="no">
        <name>TINYFORMAT_DEFINE_FORMATVALUE_CHAR</name>
        <param><defname>charType</defname></param>
        <initializer>inline void formatValue(std::ostream&amp; out, const char* /*fmtBegin*/,  \
                        const char* fmtEnd, charType <ref refid="cache_8cc_1a0f61d63b009d0880a89c843bd50d8d76" kindref="member">value</ref>)           \
{                                                                     \
    switch(*(fmtEnd-1))                                               \
    {                                                                 \
        case &apos;u&apos;: case &apos;d&apos;: case &apos;i&apos;: case &apos;o&apos;: case &apos;<ref refid="net_8cpp_1a826edd40636cbaa44266b97c8c6a4fa3" kindref="member">X</ref>&apos;: case &apos;x&apos;:   \
            out &lt;&lt; static_cast&lt;int&gt;(<ref refid="cache_8cc_1a0f61d63b009d0880a89c843bd50d8d76" kindref="member">value</ref>); break;                    \
        default:                                                      \
            out &lt;&lt; <ref refid="cache_8cc_1a0f61d63b009d0880a89c843bd50d8d76" kindref="member">value</ref>;                   break;                    \
    }                                                                 \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="297" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES</name>
        <param><defname>n</defname></param>
        <initializer>TINYFORMAT_ARGTYPES_ ## n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="321" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" prot="public" static="no">
        <name>TINYFORMAT_VARARGS</name>
        <param><defname>n</defname></param>
        <initializer>TINYFORMAT_VARARGS_ ## n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="322" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS</name>
        <param><defname>n</defname></param>
        <initializer>TINYFORMAT_PASSARGS_ ## n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="323" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ab99d1f9cde63cde80f0dfdfa44434931" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL</name>
        <param><defname>n</defname></param>
        <initializer>TINYFORMAT_PASSARGS_TAIL_ ## n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="324" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ab4da2fa12b549afc3fd57975615bd200" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_1</name>
        <initializer>class T1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="362" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a62a40a5308fc407370578ab6459b4851" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_2</name>
        <initializer>class T1, class T2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="363" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1aeac3038358152135e1b8df44bf1b8ea8" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_3</name>
        <initializer>class T1, class T2, class T3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="364" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ac7ecb64215a0b08825a883876007ac19" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_4</name>
        <initializer>class T1, class T2, class T3, class T4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="365" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a66993ab97cb9b4904c160e1cd5d59b8a" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_5</name>
        <initializer>class T1, class T2, class T3, class T4, class T5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="366" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a7bcc65431b8d13010af7420187683749" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_6</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="367" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a5a3f46acfdd0a56f13d38618c37cdef8" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_7</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="368" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a4b23b9b563f577458248652aa8044103" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_8</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="369" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a8d1dd0210087dfc81c121df66ee33e52" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_9</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="370" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a4b0d66d958ff38575a9a93170d694c24" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_10</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="371" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a8cd46da003d9fe59167940fe25867595" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_11</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="372" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a1aa959b2b483db19f1176306b4d06629" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_12</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="373" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a85223937916fef166b3508a912d7668b" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_13</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12, class T13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="374" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ae206bc85a6e4ff3d6c7b93292d73c0f4" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_14</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12, class T13, class T14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="375" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a0b90055a32894652d2afa0e8c33e652e" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_15</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12, class T13, class T14, class T15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="376" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ad4215441d9a2f690d0782652d29c93b9" prot="public" static="no">
        <name>TINYFORMAT_ARGTYPES_16</name>
        <initializer>class T1, class T2, class T3, class T4, class T5, class T6, class T7, class T8, class T9, class T10, class T11, class T12, class T13, class T14, class T15, class T16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="377" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1abf6c1d485da51e840e8e14e1bda2ad79" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_1</name>
        <initializer>const T1&amp; v1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="379" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a1e4ffcae5a12f54d6455bd8aa4e76213" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_2</name>
        <initializer>const T1&amp; v1, const T2&amp; v2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="380" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a83d9dc2d60eccb797765288b8572ba4b" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_3</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="381" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ae6483027e89fb4eec2fcaa694af693e0" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_4</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="382" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a83ae4d59f4423a7e711bb655e5046468" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_5</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="383" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ad5726325042f45f3360a075857c4546d" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_6</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="384" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a62c588966a11bd3889e4d6c771e81003" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_7</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="385" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a9c70447bc42824aeaae231a7e8a04cd5" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_8</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7, const T8&amp; v8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="386" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a5a8a23a3c9f9e193fe47abebac6a6f01" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_9</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7, const T8&amp; v8, const T9&amp; v9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="387" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a67c637e7ce786effe532c6f0acedc114" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_10</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7, const T8&amp; v8, const T9&amp; v9, const T10&amp; v10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="388" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1af74cfc89db3063127ac552b2096ee202" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_11</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7, const T8&amp; v8, const T9&amp; v9, const T10&amp; v10, const T11&amp; v11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="389" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1aecc96e4607757418cdd4a02dd3820c6f" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_12</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7, const T8&amp; v8, const T9&amp; v9, const T10&amp; v10, const T11&amp; v11, const T12&amp; v12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="390" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a923c19355d6b85fd5d9fb2b7a1185a44" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_13</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7, const T8&amp; v8, const T9&amp; v9, const T10&amp; v10, const T11&amp; v11, const T12&amp; v12, const T13&amp; v13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="391" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1aa6613ba107f054252cd79d758ce90f9a" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_14</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7, const T8&amp; v8, const T9&amp; v9, const T10&amp; v10, const T11&amp; v11, const T12&amp; v12, const T13&amp; v13, const T14&amp; v14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="392" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a821d86c7d772cd6827d6edfd2455c827" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_15</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7, const T8&amp; v8, const T9&amp; v9, const T10&amp; v10, const T11&amp; v11, const T12&amp; v12, const T13&amp; v13, const T14&amp; v14, const T15&amp; v15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="393" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a65aa95c2886701f0789cf4cc8db446a8" prot="public" static="no">
        <name>TINYFORMAT_VARARGS_16</name>
        <initializer>const T1&amp; v1, const T2&amp; v2, const T3&amp; v3, const T4&amp; v4, const T5&amp; v5, const T6&amp; v6, const T7&amp; v7, const T8&amp; v8, const T9&amp; v9, const T10&amp; v10, const T11&amp; v11, const T12&amp; v12, const T13&amp; v13, const T14&amp; v14, const T15&amp; v15, const T16&amp; v16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="394" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a882de29f30658025cb7a40ab2a3c5385" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_1</name>
        <initializer>v1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="396" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a3f61f8cbf29da3bb9d71621bd368b692" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_2</name>
        <initializer>v1, v2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="397" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1abc73b631680468d2827adfedaec43714" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_3</name>
        <initializer>v1, v2, v3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="398" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a4567123058003aa4858cc09129ccf43f" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_4</name>
        <initializer>v1, v2, v3, v4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="399" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a4f6a35f5aac8ee7e256cccbe79f1bb11" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_5</name>
        <initializer>v1, v2, v3, v4, v5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="400" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a3ca1aeaff8efc518c77191bd2beff211" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_6</name>
        <initializer>v1, v2, v3, v4, v5, v6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="401" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ac15651ba5ff3a843fbcca70ca001a96b" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_7</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="402" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a3d27abbb9cc12dbf329bc65598e09407" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_8</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7, v8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="403" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a6df839f402e8139bd0bbd836a47c5f3c" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_9</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7, v8, v9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="404" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a62ab6727c0fef3078b61479189b844bc" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_10</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7, v8, v9, v10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="405" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ad9bb86846d4e126423a6b7665d27cf25" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_11</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="406" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a09fab8f9299475206beee5cc402857cc" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_12</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="407" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a54de297a7daf6d056adaaf7bb149f9ed" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_13</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="408" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a6de6060bb4fcfd22665b5eb0bb53d73d" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_14</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="409" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a4c1b30542fbec366b19d9e7c19c49d68" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_15</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="410" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a24b8083c54138016c06383e1653e5a85" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_16</name>
        <initializer>v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="411" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a132e0319e39d703769b7f9c38ef8bcd9" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="413" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1aa1e0f54c8b0a13299caab5a24fc851e2" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_2</name>
        <initializer>, v2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="414" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a11e31b6fbafaf14301334626fc7518c4" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_3</name>
        <initializer>, v2, v3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="415" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a90b438d5af0c4b428798867efe470b7e" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_4</name>
        <initializer>, v2, v3, v4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="416" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ae6cea9440458a47e5eb8dd6b6665f0e8" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_5</name>
        <initializer>, v2, v3, v4, v5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="417" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a07f18fe198b905273366c0811107153d" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_6</name>
        <initializer>, v2, v3, v4, v5, v6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="418" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a8734eb33449039f3d565dafddc81929b" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_7</name>
        <initializer>, v2, v3, v4, v5, v6, v7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="419" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1aa063f0470e12605d4b349519a5a6f5e0" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_8</name>
        <initializer>, v2, v3, v4, v5, v6, v7, v8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="420" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a05975c0013b310e6e1f842675a789a81" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_9</name>
        <initializer>, v2, v3, v4, v5, v6, v7, v8, v9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="421" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1af6e45a7311fa17280c6ee209ec781228" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_10</name>
        <initializer>, v2, v3, v4, v5, v6, v7, v8, v9, v10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="422" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a4b08bbe2fc6b399a447bf1d60de7339a" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_11</name>
        <initializer>, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="423" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a1ab11bb125792323f42b70d53038c3e5" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_12</name>
        <initializer>, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="424" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a24c9395894209040cf21d85db47fface" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_13</name>
        <initializer>, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="425" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a3554f8d025bcd3897b543d2228449964" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_14</name>
        <initializer>, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="426" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ae58e378659770c1376d4bdb54190a87d" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_15</name>
        <initializer>, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="427" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a3f0a63604ce0d7f73ff55a54c57b42c5" prot="public" static="no">
        <name>TINYFORMAT_PASSARGS_TAIL_16</name>
        <initializer>, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="428" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1ae2e4f3482a2c4746b3f7429d62e252a7" prot="public" static="no">
        <name>TINYFORMAT_FOREACH_ARGNUM</name>
        <param><defname>m</defname></param>
        <initializer>m(1) m(2) m(3) m(4) m(5) m(6) m(7) m(8) m(9) m(10) m(11) m(12) m(13) m(14) m(15) m(16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="430" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1abec92c1222dcfd430881422760e85c58" prot="public" static="no">
        <name>TINYFORMAT_DEFINE_FORMAT_C_STRING_TRUNCATE</name>
        <param><defname>type</defname></param>
        <initializer>static bool formatCStringTruncate(std::ostream&amp; out, type* <ref refid="cache_8cc_1a0f61d63b009d0880a89c843bd50d8d76" kindref="member">value</ref>,  \
                                        std::streamsize truncLen)          \
        {                                                                  \
            std::streamsize len = 0;                                       \
            while(len &lt; truncLen &amp;&amp; <ref refid="cache_8cc_1a0f61d63b009d0880a89c843bd50d8d76" kindref="member">value</ref>[len] != 0)                       \
                ++len;                                                     \
            out.write(<ref refid="cache_8cc_1a0f61d63b009d0880a89c843bd50d8d76" kindref="member">value</ref>, len);                                         \
            return true;                                                   \
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="510" column="16" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1af638bd299ae847906bd2bd3e00e57772" prot="public" static="no">
        <name>TINYFORMAT_MAKE_FORMAT_DETAIL</name>
        <param><defname>n</defname></param>
        <initializer>template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                          \
void format(detail::FormatIterator&amp; fmtIter, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))       \
{                                                                         \
    fmtIter.accept(v1);                                                   \
    format(fmtIter <ref refid="tinyformat_8h_1ab99d1f9cde63cde80f0dfdfa44434931" kindref="member">TINYFORMAT_PASSARGS_TAIL</ref>(n));                          \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="876" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="876" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a85c1bcb25897c3da7820c02e7ba63f11" prot="public" static="no">
        <name>TINYFORMAT_MAKE_FORMAT_FUNCS</name>
        <param><defname>n</defname></param>
        <initializer>\
template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                          \
void format(std::ostream&amp; out, const char* fmt, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))    \
{                                                                         \
    <ref refid="classtinyformat_1_1detail_1_1_format_iterator" kindref="compound">tinyformat::detail::FormatIterator</ref> fmtIter(out, fmt);                 \
    <ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">tinyformat::detail::format</ref>(fmtIter, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n));          \
}                                                                         \
                                                                          \
template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                          \
std::string format(const char* fmt, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))                \
{                                                                         \
    std::ostringstream oss;                                               \
    tinyformat::format(oss, fmt, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n));                 \
    return oss.str();                                                     \
}                                                                         \
                                                                          \
template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                          \
std::string format(const std::string &amp;fmt, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))         \
{                                                                         \
    std::ostringstream oss;                                               \
    tinyformat::format(oss, fmt.c_str(), <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n));         \
    return oss.str();                                                     \
}                                                                         \
                                                                          \
template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                          \
void printf(const char* fmt, <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n))                       \
{                                                                         \
    tinyformat::format(std::cout, fmt, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n));           \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="930" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a28eda6fd28712f6a26ecd7900c524a8a" prot="public" static="no">
        <name>TINYFORMAT_WRAP_FORMAT_EXTRA_ARGS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="969" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="969" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" prot="public" static="no">
        <name>TINYFORMAT_WRAP_FORMAT_N</name>
        <param><defname>n</defname></param>
        <param><defname>returnType</defname></param>
        <param><defname>funcName</defname></param>
        <param><defname>funcDeclSuffix</defname></param>
        <param><defname>bodyPrefix</defname></param>
        <param><defname>streamName</defname></param>
        <param><defname>bodySuffix</defname></param>
        <initializer>template&lt;<ref refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" kindref="member">TINYFORMAT_ARGTYPES</ref>(n)&gt;                                           \
returnType funcName(<ref refid="tinyformat_8h_1a28eda6fd28712f6a26ecd7900c524a8a" kindref="member">TINYFORMAT_WRAP_FORMAT_EXTRA_ARGS</ref> const char* fmt,     \
                    <ref refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" kindref="member">TINYFORMAT_VARARGS</ref>(n)) funcDeclSuffix                  \
{                                                                          \
    bodyPrefix                                                             \
    tinyformat::format(streamName, fmt, <ref refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" kindref="member">TINYFORMAT_PASSARGS</ref>(n));           \
    bodySuffix                                                             \
}                                                                          \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="971" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a7bb15ef501a1f264311828ae36bd9017" prot="public" static="no">
        <name>TINYFORMAT_WRAP_FORMAT</name>
        <param><defname>returnType</defname></param>
        <param><defname>funcName</defname></param>
        <param><defname>funcDeclSuffix</defname></param>
        <param><defname>bodyPrefix</defname></param>
        <param><defname>streamName</defname></param>
        <param><defname>bodySuffix</defname></param>
        <initializer>inline                                                                     \
returnType funcName(<ref refid="tinyformat_8h_1a28eda6fd28712f6a26ecd7900c524a8a" kindref="member">TINYFORMAT_WRAP_FORMAT_EXTRA_ARGS</ref> const char* fmt      \
                    ) funcDeclSuffix                                       \
{                                                                          \
    bodyPrefix                                                             \
    <ref refid="classtinyformat_1_1detail_1_1_format_iterator" kindref="compound">tinyformat::detail::FormatIterator</ref>(streamName, fmt).finish();          \
    bodySuffix                                                             \
}                                                                          \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(1 , returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(2 , returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(3 , returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(4 , returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(5 , returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(6 , returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(7 , returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(8 , returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(9 , returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(10, returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(11, returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(12, returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(13, returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(14, returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(15, returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \
<ref refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" kindref="member">TINYFORMAT_WRAP_FORMAT_N</ref>(16, returnType, funcName, funcDeclSuffix, bodyPrefix, streamName, bodySuffix) \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="982" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="981" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" prot="public" static="no">
        <name>strprintf</name>
        <initializer>tfm::format</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/tinyformat.h" line="1011" column="9" bodyfile="/home/dev/ds-160209/src/tinyformat.h" bodystart="1011" bodyend="-1"/>
        <referencedby refid="class_c_active_stormnode_1a9532e0804ea4c96ad7d58ab3e9da6891" compoundref="activestormnode_8cpp" startline="17" endline="140">CActiveStormnode::ManageStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1ad52331446d221f1369870dbc6d92eaa7" compoundref="activestormnode_8cpp" startline="142" endline="151">CActiveStormnode::GetStatus</referencedby>
        <referencedby refid="class_c_active_stormnode_1a23b6459a057d50230f258050e9b2d6f8" compoundref="activestormnode_8cpp" startline="209" endline="252">CActiveStormnode::Register</referencedby>
        <referencedby refid="class_c_unsigned_alert_1a326fbf3fae6b9ac2b7043350570b770f" compoundref="alert_8cpp" startline="45" endline="80">CUnsignedAlert::ToString</referencedby>
        <referencedby refid="class_c_fee_rate_1ab517bd05a9b78fbd02aabe7d74d7049f" compoundref="amount_8cpp" startline="27" endline="30">CFeeRate::ToString</referencedby>
        <referencedby refid="class_c_block_index_1abed1fcbcd372db6b9efa6bb9da317469" compoundref="chain_8h" startline="316" endline="327">CBlockIndex::ToString</referencedby>
        <referencedby refid="class_c_disk_block_index_1a86ef9d71fb72868699145b73f3e3e583" compoundref="chain_8h" startline="409" endline="418">CDiskBlockIndex::ToString</referencedby>
        <referencedby refid="class_c_d_b_env_1ab352b9f28a8329037fd942f9912797e3" compoundref="db_8cpp" startline="116" endline="148">CDBEnv::MakeMock</referencedby>
        <referencedby refid="class_c_d_b_1aa5f2317ab28c6424bfebdaa969aa2b2c" compoundref="db_8cpp" startline="230" endline="286">CDB::CDB</referencedby>
        <referencedby refid="init_8h_1a60c54061faf43bd9cca8ab8bfa38055a" compoundref="init_8cpp" startline="243" endline="353">HelpMessage</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="main_8h_1a2f26f074aac584c3398de1dcdac59de9" compoundref="main_8cpp" startline="4008" endline="4011">GetBlockPosFilename</referencedby>
        <referencedby refid="class_c_disk_tx_pos_1ada1de4b95f6be78bd290c28bcb8628a5" compoundref="main_8h" startline="267" endline="273">CDiskTxPos::ToString</referencedby>
        <referencedby refid="net_8cpp_1a0c8010ad96acff7cca6aca684ec42b71" compoundref="net_8cpp" startline="1702" endline="1805">BindListenPort</referencedby>
        <referencedby refid="class_c_addr_d_b_1aaec90dba59cd69a2f25bc5630a1dde39" compoundref="net_8cpp" startline="2022" endline="2058">CAddrDB::Write</referencedby>
        <referencedby refid="class_c_net_addr_1a7ec845c27b63853fb0db08a4d154266f" compoundref="netbase_8cpp" startline="822" endline="848">CNetAddr::ToStringIP</referencedby>
        <referencedby refid="class_c_service_1a1e0f0b98239a9097044695a9e439bb46" compoundref="netbase_8cpp" startline="1208" endline="1211">CService::ToStringPort</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" compoundref="transaction_8cpp" startline="12" endline="28">CTransaction::ToString</referencedby>
        <referencedby refid="struct_c_mutable_transaction_1a235803da94d1cb222d51b6f81146de18" compoundref="transaction_8cpp" startline="130" endline="145">CMutableTransaction::ToString</referencedby>
        <referencedby refid="class_c_out_point_1afcfc33fde94fce212e99099c78162612" compoundref="transaction_8h" startline="61" endline="64">COutPoint::ToString</referencedby>
        <referencedby refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" compoundref="transaction_8h" startline="66" endline="69">COutPoint::ToStringShort</referencedby>
        <referencedby refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" compoundref="transaction_8h" startline="147" endline="160">CTxIn::ToString</referencedby>
        <referencedby refid="class_c_tx_out_1aee479c0d4a3786c44e2bc4c35d93b105" compoundref="transaction_8h" startline="245" endline="249">CTxOut::ToString</referencedby>
        <referencedby refid="class_c_inv_1a412cb8fdd0bfe185f770fec91a3e13c4" compoundref="protocol_8cpp" startline="125" endline="139">CInv::CInv</referencedby>
        <referencedby refid="class_c_inv_1a393dc4726f105b25090a6ee4952e71b5" compoundref="protocol_8cpp" startline="151" endline="156">CInv::GetCommand</referencedby>
        <referencedby refid="class_c_inv_1a87a826a842d549c2747ced0c1a90bc18" compoundref="protocol_8cpp" startline="158" endline="161">CInv::ToString</referencedby>
        <referencedby refid="class_transaction_record_1a9b643dd885a790ae511705a1446556be" compoundref="transactionrecord_8cpp" startline="165" endline="249">TransactionRecord::updateStatus</referencedby>
        <referencedby refid="class_transaction_record_1a7664c0127a66cdc42d3d56d6a85a5f1e" compoundref="transactionrecord_8cpp" startline="262" endline="265">TransactionRecord::formatSubTxId</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="rpcclient_8cpp_1ae0b4394f271db49671cf894dbe94c484" compoundref="rpcclient_8cpp" startline="33" endline="95">CallRPC</referencedby>
        <referencedby refid="rpcdump_8cpp_1a831ddf746d4f2500ba6f6c07f63445cd" compoundref="rpcdump_8cpp" startline="345" endline="401">dumpwallet</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="rpcnet_8cpp_1aee93daaf3d283447eae5d8765e0e5ddb" compoundref="rpcnet_8cpp" startline="65" endline="104">getpeerinfo</referencedby>
        <referencedby refid="rpcnet_8cpp_1a3a10a507386b9bbcc48ebd3004bfe58a" compoundref="rpcnet_8cpp" startline="338" endline="398">getnetworkinfo</referencedby>
        <referencedby refid="rpcprotocol_8cpp_1afa39f57077df4d88ad60373f58d793e1" compoundref="rpcprotocol_8cpp" startline="61" endline="103">HTTPReply</referencedby>
        <referencedby refid="rpcserver_8cpp_1a6f9782b3c0efdb472b355c60bd90f2b6" compoundref="rpcserver_8cpp" startline="47" endline="66">RPCTypeCheck</referencedby>
        <referencedby refid="class_c_r_p_c_table_1a220ae5b4ce013c79d097bfe96a94e2f0" compoundref="rpcserver_8cpp" startline="145" endline="184">CRPCTable::help</referencedby>
        <referencedby refid="rpcserver_8h_1af4d692a884c24c4abe2fc3f2b165542d" compoundref="rpcserver_8cpp" startline="517" endline="634">StartRPCThreads</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aae19bf2ba52f3b864bfaf70206bcb29a" compoundref="rpcstormnode-budget_8cpp" startline="22" endline="515">snbudget</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aaff1bdc7f9f32708efc9094bb6ab0e0d" compoundref="rpcstormnode-budget_8cpp" startline="569" endline="761">snfinalbudget</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="rpcwallet_8cpp_1aca53a9372c92e81fc665cbdeb8fcdbc5" compoundref="rpcwallet_8cpp" startline="89" endline="142">_createmultisig</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a33a914aa20f1ded289040800898a0e79" compoundref="rpcwallet_8cpp" startline="421" endline="454">SendMoney</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a01e8a83cbd4209f10c71719383d7ca2d" compoundref="rpcwallet_8cpp" startline="1091" endline="1180">addmultisigaddress</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1abf8b2c93df923f599639502bfaa165ec" compoundref="sandstorm_8cpp" startline="438" endline="490">CSandstormPool::GetStatus</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ab7fac1067376f91b53aaf6862c15e914" compoundref="sandstorm_8cpp" startline="1707" endline="1798">CSandstormPool::CreateDenominated</referencedby>
        <referencedby refid="script_8h_1ab545c0a3638ba9151370e91fac78f48d" compoundref="script_8h" startline="354" endline="360">ValueString</referencedby>
        <referencedby refid="utilstrencodings_8h_1ab7a07cad3bcdf95935f4f6b5c039c546" compoundref="util_8h" startline="287" endline="290">i64tostr</referencedby>
        <referencedby refid="utilstrencodings_8h_1a565b3ea015b133d01dc52b4ec6e45f07" compoundref="util_8h" startline="292" endline="295">itostr</referencedby>
        <referencedby refid="util_8h_1ac6be85b683de5d9b41dc3046e50d6acd" compoundref="util_8h" startline="597" endline="621">LoopForever</referencedby>
        <referencedby refid="util_8h_1ac481a378af0229bf71e3d9fee7b938ad" compoundref="util_8h" startline="623" endline="644">TraceThread</referencedby>
        <referencedby refid="stormnode-budget_8h_1af987fefd1417be5dcd356634986dbf83" compoundref="stormnode-budget_8cpp" startline="35" endline="90">IsBudgetCollateralValid</referencedby>
        <referencedby refid="class_c_budget_proposal_1afaa5e910085e8f0aea26aad6fa99ed2b" compoundref="stormnode-budget_8cpp" startline="1326" endline="1420">CBudgetProposal::IsValid</referencedby>
        <referencedby refid="class_c_budget_proposal_1ad153df04aa541d0c06eb068d79d0cf96" compoundref="stormnode-budget_8cpp" startline="1422" endline="1449">CBudgetProposal::AddOrUpdateVote</referencedby>
        <referencedby refid="class_c_finalized_budget_1a63fadb286f5d0f9f735bc33deba56b02" compoundref="stormnode-budget_8cpp" startline="1670" endline="1696">CFinalizedBudget::AddOrUpdateVote</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1ae8e5cecfd1f95eed8fdd14f019360fa0" compoundref="stormnode-payments_8cpp" startline="644" endline="681">CStormnodePaymentWinner::IsValid</referencedby>
        <referencedby refid="key__tests_8cpp_1add8f8fb6aeee707149cdf29db2eca2b2" compoundref="key__tests_8cpp" startline="56" endline="139">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="util_8h_1a9b8dfe28f5d12bf84ab1f179606f338b" compoundref="util_8cpp" startline="339" endline="360">FormatMoney</referencedby>
        <referencedby refid="util_8h_1a6476623f1d1477b76ae3f751f6db644b" compoundref="util_8cpp" startline="1314" endline="1326">bytesReadable</referencedby>
        <referencedby refid="util_8cpp_1a184f6760badcf145f3430cdf6cc5dfa2" compoundref="util_8cpp" startline="1385" endline="1391">FormatVersion</referencedby>
        <referencedby refid="class_c_wallet_1a509492fe45395af29a4a16045686c239" compoundref="wallet_8cpp" startline="3347" endline="3383">CWallet::SendStealthMoney</referencedby>
        <referencedby refid="class_c_wallet_1a356d16f6df1f109674adf1d1dc577f2e" compoundref="wallet_8cpp" startline="4019" endline="4059">CWallet::SendMoney</referencedby>
        <referencedby refid="class_c_wallet_1aeeeca131336b2ec20cede9a2fccc203a" compoundref="wallet_8cpp" startline="4331" endline="4363">CWallet::TopUpKeyPool</referencedby>
        <referencedby refid="class_c_wallet_tx_1a94e65d0105f2a75a627e374b0bbefe06" compoundref="wallet_8h" startline="636" endline="692">CWalletTx::SerializationOp</referencedby>
        <referencedby refid="class_c_output_1a30a78d31f6667803c613efdef28cbe52" compoundref="wallet_8h" startline="1085" endline="1088">COutput::ToString</referencedby>
        <referencedby refid="walletdb_8cpp_1ad1f171cf096f5479805a06fc20480343" compoundref="walletdb_8cpp" startline="357" endline="622">ReadKeyValue</referencedby>
        <referencedby refid="class_c_wallet_d_b_1a3ebeb12f37d9c66512e2bc2903a6854a" compoundref="walletdb_8cpp" startline="837" endline="913">CWalletDB::Recover</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>tinyformat.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011,<sp/>Chris<sp/>Foster<sp/>[chris42f<sp/>(at)<sp/>gmail<sp/>(d0t)<sp/>com]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Boost<sp/>Software<sp/>License<sp/>-<sp/>Version<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>or<sp/>organization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>software<sp/>and<sp/>accompanying<sp/>documentation<sp/>covered<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>license<sp/>(the<sp/>&quot;Software&quot;)<sp/>to<sp/>use,<sp/>reproduce,<sp/>display,<sp/>distribute,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>execute,<sp/>and<sp/>transmit<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>prepare<sp/>derivative<sp/>works<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>third-parties<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>do<sp/>so,<sp/>all<sp/>subject<sp/>to<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>copyright<sp/>notices<sp/>in<sp/>the<sp/>Software<sp/>and<sp/>this<sp/>entire<sp/>statement,<sp/>including</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>above<sp/>license<sp/>grant,<sp/>this<sp/>restriction<sp/>and<sp/>the<sp/>following<sp/>disclaimer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>in<sp/>whole<sp/>or<sp/>in<sp/>part,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>derivative<sp/>works<sp/>of<sp/>the<sp/>Software,<sp/>unless<sp/>such<sp/>copies<sp/>or<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>works<sp/>are<sp/>solely<sp/>in<sp/>the<sp/>form<sp/>of<sp/>machine-executable<sp/>object<sp/>code<sp/>generated<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>source<sp/>language<sp/>processor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE,<sp/>TITLE<sp/>AND<sp/>NON-INFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>OR<sp/>ANYONE<sp/>DISTRIBUTING<sp/>THE<sp/>SOFTWARE<sp/>BE<sp/>LIABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FOR<sp/>ANY<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tinyformat:<sp/>A<sp/>minimal<sp/>type<sp/>safe<sp/>printf<sp/>replacement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tinyformat.h<sp/>is<sp/>a<sp/>type<sp/>safe<sp/>printf<sp/>replacement<sp/>library<sp/>in<sp/>a<sp/>single<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>header<sp/>file.<sp/><sp/>Design<sp/>goals<sp/>include:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Type<sp/>safety<sp/>and<sp/>extensibility<sp/>for<sp/>user<sp/>defined<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>C99<sp/>printf()<sp/>compatibility,<sp/>to<sp/>the<sp/>extent<sp/>possible<sp/>using<sp/>std::ostream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Simplicity<sp/>and<sp/>minimalism.<sp/><sp/>A<sp/>single<sp/>header<sp/>file<sp/>to<sp/>include<sp/>and<sp/>distribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>your<sp/>projects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Augment<sp/>rather<sp/>than<sp/>replace<sp/>the<sp/>standard<sp/>stream<sp/>formatting<sp/>mechanism</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>C++98<sp/>support,<sp/>with<sp/>optional<sp/>C++11<sp/>niceties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Main<sp/>interface<sp/>example<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>print<sp/>a<sp/>date<sp/>to<sp/>std::cout:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::string<sp/>weekday<sp/>=<sp/>&quot;Wednesday&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>char*<sp/>month<sp/>=<sp/>&quot;July&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>size_t<sp/>day<sp/>=<sp/>27;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>long<sp/>hour<sp/>=<sp/>14;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/>min<sp/>=<sp/>44;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>tfm::printf(&quot;%s,<sp/>%s<sp/>%d,<sp/>%.2d:%.2d\n&quot;,<sp/>weekday,<sp/>month,<sp/>day,<sp/>hour,<sp/>min);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>strange<sp/>types<sp/>here<sp/>emphasize<sp/>the<sp/>type<sp/>safety<sp/>of<sp/>the<sp/>interface;<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>possible<sp/>to<sp/>print<sp/>a<sp/>std::string<sp/>using<sp/>the<sp/>&quot;%s&quot;<sp/>conversion,<sp/>and<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>size_t<sp/>using<sp/>the<sp/>&quot;%d&quot;<sp/>conversion.<sp/><sp/>A<sp/>similar<sp/>result<sp/>could<sp/>be<sp/>achieved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>either<sp/>of<sp/>the<sp/>tfm::format()<sp/>functions.<sp/><sp/>One<sp/>prints<sp/>on<sp/>a<sp/>user<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stream:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>tfm::format(std::cerr,<sp/>&quot;%s,<sp/>%s<sp/>%d,<sp/>%.2d:%.2d\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weekday,<sp/>month,<sp/>day,<sp/>hour,<sp/>min);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>other<sp/>returns<sp/>a<sp/>std::string:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::string<sp/>date<sp/>=<sp/>tfm::format(&quot;%s,<sp/>%s<sp/>%d,<sp/>%.2d:%.2d\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weekday,<sp/>month,<sp/>day,<sp/>hour,<sp/>min);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>date;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>the<sp/>three<sp/>primary<sp/>interface<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>User<sp/>defined<sp/>format<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simulating<sp/>variadic<sp/>templates<sp/>in<sp/>C++98<sp/>is<sp/>pretty<sp/>painful<sp/>since<sp/>it<sp/>requires</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>writing<sp/>out<sp/>the<sp/>same<sp/>function<sp/>for<sp/>each<sp/>desired<sp/>number<sp/>of<sp/>arguments.<sp/><sp/>To<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>bearable<sp/>tinyformat<sp/>comes<sp/>with<sp/>a<sp/>set<sp/>of<sp/>macros<sp/>which<sp/>are<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internally<sp/>to<sp/>generate<sp/>the<sp/>API,<sp/>but<sp/>which<sp/>may<sp/>also<sp/>be<sp/>used<sp/>in<sp/>user<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>three<sp/>macros<sp/>TINYFORMAT_ARGTYPES(n),<sp/>TINYFORMAT_VARARGS(n)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TINYFORMAT_PASSARGS(n)<sp/>will<sp/>generate<sp/>a<sp/>list<sp/>of<sp/>n<sp/>argument<sp/>types,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>type/name<sp/>pairs<sp/>and<sp/>argument<sp/>names<sp/>respectively<sp/>when<sp/>called<sp/>with<sp/>an<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>n<sp/>between<sp/>1<sp/>and<sp/>16.<sp/><sp/>We<sp/>can<sp/>use<sp/>these<sp/>to<sp/>define<sp/>a<sp/>macro<sp/>which<sp/>generates<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>desired<sp/>user<sp/>defined<sp/>function<sp/>with<sp/>n<sp/>arguments.<sp/><sp/>To<sp/>generate<sp/>all<sp/>16<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defined<sp/>function<sp/>bodies,<sp/>use<sp/>the<sp/>macro<sp/>TINYFORMAT_FOREACH_ARGNUM.<sp/><sp/>For<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>example,<sp/>see<sp/>the<sp/>implementation<sp/>of<sp/>printf()<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>source<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additional<sp/>API<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Error<sp/>handling:<sp/>Define<sp/>TINYFORMAT_ERROR<sp/>to<sp/>customize<sp/>the<sp/>error<sp/>handling<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>format<sp/>strings<sp/>which<sp/>are<sp/>unsupported<sp/>or<sp/>have<sp/>the<sp/>wrong<sp/>number<sp/>of<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specifiers<sp/>(calls<sp/>assert()<sp/>by<sp/>default).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>User<sp/>defined<sp/>types:<sp/>Uses<sp/>operator&lt;&lt;<sp/>for<sp/>user<sp/>defined<sp/>types<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Overload<sp/>formatValue()<sp/>for<sp/>more<sp/>control.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TINYFORMAT_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="namespacetinyformat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetinyformat" kindref="compound">tinyformat</ref><sp/>{}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Config<sp/>section.<sp/><sp/>Customize<sp/>to<sp/>your<sp/>liking!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Namespace<sp/>alias<sp/>to<sp/>encourage<sp/>brevity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetinyformat" kindref="compound">tfm</ref><sp/>=<sp/><ref refid="namespacetinyformat" kindref="compound">tinyformat</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Error<sp/>handling;<sp/>calls<sp/>assert()<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="tinyformat_8h_1aab516d7d4e92fe18eca4a9d40f450a80" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ERROR(reasonString)<sp/>throw<sp/>std::runtime_error(reasonString)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>for<sp/>C++11<sp/>variadic<sp/>templates<sp/>which<sp/>make<sp/>the<sp/>code<sp/>shorter<sp/>&amp;<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>general.<sp/><sp/>If<sp/>you<sp/>don&apos;t<sp/>define<sp/>this,<sp/>C++11<sp/>support<sp/>is<sp/>autodetected<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>TINYFORMAT_USE_VARIADIC_TEMPLATES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TINYFORMAT_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TINYFORMAT_ERROR(reason)<sp/>assert(0<sp/>&amp;&amp;<sp/>reason)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(TINYFORMAT_USE_VARIADIC_TEMPLATES)<sp/>&amp;&amp;<sp/>!defined(TINYFORMAT_NO_VARIADIC_TEMPLATES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>__GXX_EXPERIMENTAL_CXX0X__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>TINYFORMAT_USE_VARIADIC_TEMPLATES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TINYFORMAT_NOINLINE<sp/>__attribute__((noinline))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TINYFORMAT_NOINLINE<sp/>__declspec(noinline)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="tinyformat_8h_1a6aa2353acc671b972658fd73a813b960" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TINYFORMAT_NOINLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GLIBCXX__)<sp/>&amp;&amp;<sp/>__GLIBCXX__<sp/>&lt;<sp/>20080201</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::showpos<sp/>is<sp/>broken<sp/>on<sp/>old<sp/>libstdc++<sp/>as<sp/>provided<sp/>with<sp/>OSX.<sp/><sp/>See</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>http://gcc.gnu.org/ml/libstdc++/2007-11/msg00075.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TINYFORMAT_OLD_LIBSTDCPLUSPLUS_WORKAROUND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetinyformat" kindref="compound">tinyformat</ref><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="namespacetinyformat_1_1detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>whether<sp/>type<sp/>T1<sp/>is<sp/>convertible<sp/>to<sp/>type<sp/>T2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="157" refid="structtinyformat_1_1detail_1_1is__convertible" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1is__convertible" kindref="compound">is_convertible</ref></highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>types<sp/>of<sp/>different<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fail<sp/>{<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dummy[2];<sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">succeed<sp/>{<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dummy;<sp/>};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>convert<sp/>a<sp/>T1<sp/>to<sp/>a<sp/>T2<sp/>by<sp/>plugging<sp/>into<sp/>tryConvert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>fail<sp/>tryConvert(...);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>succeed<sp/>tryConvert(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>makeT1();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>spurious<sp/>loss<sp/>of<sp/>precision<sp/>warnings<sp/>in<sp/>tryConvert(makeT1())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(disable:4244)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(disable:4267)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Standard<sp/>trick:<sp/>the<sp/>(...)<sp/>version<sp/>of<sp/>tryConvert<sp/>will<sp/>be<sp/>chosen<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>overload<sp/>set<sp/>only<sp/>if<sp/>the<sp/>version<sp/>taking<sp/>a<sp/>T2<sp/>doesn&apos;t<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>we<sp/>compare<sp/>the<sp/>sizes<sp/>of<sp/>the<sp/>return<sp/>types<sp/>to<sp/>check<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>matched.<sp/><sp/>Very<sp/>neat,<sp/>in<sp/>a<sp/>disgusting<sp/>kind<sp/>of<sp/>way<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="structtinyformat_1_1detail_1_1is__convertible_1a399ca4333bd68f88a5d5a2430f804df2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtinyformat_1_1detail_1_1is__convertible_1a399ca4333bd68f88a5d5a2430f804df2" kindref="member">value</ref><sp/>=</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tryConvert(makeT1()))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(succeed);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Detect<sp/>when<sp/>a<sp/>type<sp/>is<sp/>not<sp/>a<sp/>wchar_t<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="structtinyformat_1_1detail_1_1is__wchar_1a2006c700bf3264d6002993949bbaaac9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1is__wchar" kindref="compound">is_wchar</ref><sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtinyformat_1_1detail_1_1is__wchar_1a2006c700bf3264d6002993949bbaaac9" kindref="member">tinyformat_wchar_is_not_supported</ref>;<sp/>};</highlight></codeline>
<codeline lineno="188" refid="structtinyformat_1_1detail_1_1is__wchar_3_01wchar__t_01_5_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1is__wchar" kindref="compound">is_wchar</ref>&lt;wchar_t*&gt;<sp/>{};</highlight></codeline>
<codeline lineno="189" refid="structtinyformat_1_1detail_1_1is__wchar_3_01const_01wchar__t_01_5_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1is__wchar" kindref="compound">is_wchar</ref>&lt;const<sp/>wchar_t*&gt;<sp/>{};</highlight></codeline>
<codeline lineno="190" refid="structtinyformat_1_1detail_1_1is__wchar_3_01const_01wchar__t[n]_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1is__wchar" kindref="compound">is_wchar</ref>&lt;const<sp/>wchar_t[n]&gt;<sp/>{};</highlight></codeline>
<codeline lineno="191" refid="structtinyformat_1_1detail_1_1is__wchar_3_01wchar__t[n]_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1is__wchar" kindref="compound">is_wchar</ref>&lt;wchar_t[n]&gt;<sp/>{};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Format<sp/>the<sp/>value<sp/>by<sp/>casting<sp/>to<sp/>type<sp/>fmtT.<sp/><sp/>This<sp/>default<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>be<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">template&lt;typename T, typename fmtT, bool convertible = is_convertible&lt;T, fmtT&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="197" refid="structtinyformat_1_1detail_1_1format_value_as_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1format_value_as_type" kindref="compound">formatValueAsType</ref></highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199" refid="structtinyformat_1_1detail_1_1format_value_as_type_1a126bc5958024c456851f08fa380d1cac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtinyformat_1_1detail_1_1format_value_as_type_1a126bc5958024c456851f08fa380d1cac" kindref="member">invoke</ref>(std::ostream&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/></highlight><highlight class="comment">/*value*/</highlight><highlight class="normal">)<sp/>{<sp/>assert(0);<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialized<sp/>version<sp/>for<sp/>types<sp/>that<sp/>can<sp/>actually<sp/>be<sp/>converted<sp/>to<sp/>fmtT,<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>indicated<sp/>by<sp/>the<sp/>&quot;convertible&quot;<sp/>template<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>fmtT&gt;</highlight></codeline>
<codeline lineno="204" refid="structtinyformat_1_1detail_1_1format_value_as_type_3_01_t_00_01fmt_t_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1format_value_as_type" kindref="compound">formatValueAsType</ref>&lt;T,fmtT,true&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206" refid="structtinyformat_1_1detail_1_1format_value_as_type_3_01_t_00_01fmt_t_00_01true_01_4_1a7680bc0f7b6b5eee0e27c494812fb667" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtinyformat_1_1detail_1_1format_value_as_type_3_01_t_00_01fmt_t_00_01true_01_4_1a7680bc0f7b6b5eee0e27c494812fb667" kindref="member">invoke</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>out<sp/>&lt;&lt;<sp/>static_cast&lt;fmtT&gt;(<ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>);<sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TINYFORMAT_OLD_LIBSTDCPLUSPLUS_WORKAROUND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">template&lt;typename T, bool convertible = is_convertible&lt;T, int&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">formatZeroIntegerWorkaround</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invoke(std::ostream&amp;<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">formatZeroIntegerWorkaround&lt;T,true&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invoke(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;int&gt;(value)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>out.flags()<sp/>&amp;<sp/>std::ios::showpos)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;+0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>TINYFORMAT_OLD_LIBSTDCPLUSPLUS_WORKAROUND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>an<sp/>arbitrary<sp/>type<sp/>to<sp/>integer.<sp/><sp/>The<sp/>version<sp/>with<sp/>convertible=false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>throws<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">template&lt;typename T, bool convertible = is_convertible&lt;T,int&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="234" refid="structtinyformat_1_1detail_1_1convert_to_int" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1convert_to_int" kindref="compound">convertToInt</ref></highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236" refid="structtinyformat_1_1detail_1_1convert_to_int_1a1e1c0d85c6afc3bb21d2bc9458b3feb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtinyformat_1_1detail_1_1convert_to_int_1a1e1c0d85c6afc3bb21d2bc9458b3feb1" kindref="member">invoke</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/></highlight><highlight class="comment">/*value*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tinyformat_8h_1aab516d7d4e92fe18eca4a9d40f450a80" kindref="member">TINYFORMAT_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;tinyformat:<sp/>Cannot<sp/>convert<sp/>from<sp/>argument<sp/>type<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;integer<sp/>for<sp/>use<sp/>as<sp/>variable<sp/>width<sp/>or<sp/>precision&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialization<sp/>for<sp/>convertToInt<sp/>when<sp/>conversion<sp/>is<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="245" refid="structtinyformat_1_1detail_1_1convert_to_int_3_01_t_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtinyformat_1_1detail_1_1convert_to_int" kindref="compound">convertToInt</ref>&lt;T,true&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247" refid="structtinyformat_1_1detail_1_1convert_to_int_3_01_t_00_01true_01_4_1a7d03793b995eb4428bb13349004f5fcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtinyformat_1_1detail_1_1convert_to_int_3_01_t_00_01true_01_4_1a7d03793b995eb4428bb13349004f5fcd" kindref="member">invoke</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>);<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Variable<sp/>formatting<sp/>functions.<sp/><sp/>May<sp/>be<sp/>overridden<sp/>for<sp/>user-defined<sp/>types<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>desired.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Format<sp/>a<sp/>value<sp/>into<sp/>a<sp/>stream.<sp/>Called<sp/>from<sp/>format()<sp/>for<sp/>all<sp/>types<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Users<sp/>may<sp/>override<sp/>this<sp/>for<sp/>their<sp/>own<sp/>types.<sp/><sp/>When<sp/>this<sp/>function<sp/>is<sp/>called,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>stream<sp/>flags<sp/>will<sp/>have<sp/>been<sp/>modified<sp/>according<sp/>to<sp/>the<sp/>format<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>specification<sp/>is<sp/>provided<sp/>in<sp/>the<sp/>range<sp/>[fmtBegin,<sp/>fmtEnd).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>formatValue()<sp/>uses<sp/>the<sp/>usual<sp/>stream<sp/>insertion<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator&lt;&lt;<sp/>to<sp/>format<sp/>the<sp/>type<sp/>T,<sp/>with<sp/>special<sp/>cases<sp/>for<sp/>the<sp/>%c<sp/>and<sp/>%p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conversions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="268" refid="namespacetinyformat_1adc03c92f312158ae351d38ac867b9296" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetinyformat_1adc03c92f312158ae351d38ac867b9296" kindref="member">formatValue</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*fmtBegin*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmtEnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TINYFORMAT_ALLOW_WCHAR_STRINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>don&apos;t<sp/>support<sp/>printing<sp/>of<sp/>wchar_t<sp/>using<sp/>&quot;%ls&quot;,<sp/>make<sp/>it<sp/>fail<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compile<sp/>time<sp/>in<sp/>preference<sp/>to<sp/>printing<sp/>as<sp/>a<sp/>void*<sp/>at<sp/>runtime.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtinyformat_1_1detail_1_1is__wchar_1a2006c700bf3264d6002993949bbaaac9" kindref="member">detail::is_wchar&lt;T&gt;::tinyformat_wchar_is_not_supported</ref><sp/>DummyType;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>DummyType();<sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>unused<sp/>type<sp/>warning<sp/>with<sp/>gcc-4.8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>mess<sp/>here<sp/>is<sp/>to<sp/>support<sp/>the<sp/>%c<sp/>and<sp/>%p<sp/>conversions:<sp/>if<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conversions<sp/>are<sp/>active<sp/>we<sp/>try<sp/>to<sp/>convert<sp/>the<sp/>type<sp/>to<sp/>a<sp/>char<sp/>or<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void*<sp/>respectively<sp/>and<sp/>format<sp/>that<sp/>instead<sp/>of<sp/>the<sp/>value<sp/>itself.<sp/><sp/>For<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>%p<sp/>conversion<sp/>it&apos;s<sp/>important<sp/>to<sp/>avoid<sp/>dereferencing<sp/>the<sp/>pointer,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>otherwise<sp/>lead<sp/>to<sp/>a<sp/>crash<sp/>when<sp/>printing<sp/>a<sp/>dangling<sp/>(const<sp/>char*).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canConvertToChar<sp/>=<sp/><ref refid="structtinyformat_1_1detail_1_1is__convertible" kindref="compound">detail::is_convertible&lt;T,char&gt;::value</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canConvertToVoidPtr<sp/>=<sp/><ref refid="structtinyformat_1_1detail_1_1is__convertible" kindref="compound">detail::is_convertible&lt;T, const void*&gt;::value</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(canConvertToChar<sp/>&amp;&amp;<sp/>*(fmtEnd-1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtinyformat_1_1detail_1_1format_value_as_type" kindref="compound">detail::formatValueAsType&lt;T, char&gt;::invoke</ref>(out,<sp/>value);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(canConvertToVoidPtr<sp/>&amp;&amp;<sp/>*(fmtEnd-1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtinyformat_1_1detail_1_1format_value_as_type" kindref="compound">detail::formatValueAsType&lt;T, const void*&gt;::invoke</ref>(out,<sp/>value);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TINYFORMAT_OLD_LIBSTDCPLUSPLUS_WORKAROUND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail::formatZeroIntegerWorkaround&lt;T&gt;::invoke(out,<sp/>value))<sp/>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Overloaded<sp/>version<sp/>for<sp/>char<sp/>types<sp/>to<sp/>support<sp/>printing<sp/>as<sp/>an<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="tinyformat_8h_1ae166167e47ad25bdbd4a494ab46083b2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_DEFINE_FORMATVALUE_CHAR(charType)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor">inline<sp/>void<sp/>formatValue(std::ostream&amp;<sp/>out,<sp/>const<sp/>char*<sp/></highlight><highlight class="comment">/*fmtBegin*/</highlight><highlight class="preprocessor">,<sp/><sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>fmtEnd,<sp/>charType<sp/>value)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>switch(*(fmtEnd-1))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>&apos;u&apos;:<sp/>case<sp/>&apos;d&apos;:<sp/>case<sp/>&apos;i&apos;:<sp/>case<sp/>&apos;o&apos;:<sp/>case<sp/>&apos;X&apos;:<sp/>case<sp/>&apos;x&apos;:<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>static_cast&lt;int&gt;(value);<sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>value;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>per<sp/>3.9.1:<sp/>char,<sp/>signed<sp/>char<sp/>and<sp/>unsigned<sp/>char<sp/>are<sp/>all<sp/>distinct<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="tinyformat_8h_1ae166167e47ad25bdbd4a494ab46083b2" kindref="member">TINYFORMAT_DEFINE_FORMATVALUE_CHAR</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><ref refid="tinyformat_8h_1ae166167e47ad25bdbd4a494ab46083b2" kindref="member">TINYFORMAT_DEFINE_FORMATVALUE_CHAR</ref>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="tinyformat_8h_1ae166167e47ad25bdbd4a494ab46083b2" kindref="member">TINYFORMAT_DEFINE_FORMATVALUE_CHAR</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TINYFORMAT_DEFINE_FORMATVALUE_CHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tools<sp/>for<sp/>emulating<sp/>variadic<sp/>templates<sp/>in<sp/>C++98.<sp/><sp/>The<sp/>basic<sp/>idea<sp/>here<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stolen<sp/>from<sp/>the<sp/>boost<sp/>preprocessor<sp/>metaprogramming<sp/>library<sp/>and<sp/>cut<sp/>down<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>just<sp/>general<sp/>enough<sp/>for<sp/>what<sp/>we<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="tinyformat_8h_1a3002f76b13b5ca71ddd6dbe1fbdfdd24" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES(n)<sp/>TINYFORMAT_ARGTYPES_<sp/>##<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="tinyformat_8h_1adc183998bebc5b1304836a3e1c1a15ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS(n)<sp/>TINYFORMAT_VARARGS_<sp/>##<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="tinyformat_8h_1a082db58a9dbf56ce60ecc8fa7041f640" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS(n)<sp/>TINYFORMAT_PASSARGS_<sp/>##<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="tinyformat_8h_1ab99d1f9cde63cde80f0dfdfa44434931" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL(n)<sp/>TINYFORMAT_PASSARGS_TAIL_<sp/>##<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>keep<sp/>it<sp/>as<sp/>transparent<sp/>as<sp/>possible,<sp/>the<sp/>macros<sp/>below<sp/>have<sp/>been<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>python<sp/>via<sp/>the<sp/>excellent<sp/>cog.py<sp/>code<sp/>generation<sp/>script.<sp/><sp/>This<sp/>avoids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>need<sp/>for<sp/>a<sp/>bunch<sp/>of<sp/>complex<sp/>(but<sp/>more<sp/>general)<sp/>preprocessor<sp/>tricks<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used<sp/>in<sp/>boost.preprocessor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>rerun<sp/>the<sp/>code<sp/>generation<sp/>in<sp/>place,<sp/>use<sp/>`cog.py<sp/>-r<sp/>tinyformat.h`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(see<sp/>http://nedbatchelder.com/code/cog).<sp/><sp/>Alternatively<sp/>you<sp/>can<sp/>just<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extra<sp/>versions<sp/>by<sp/>hand.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">/*[[[cog</highlight></codeline>
<codeline lineno="336"><highlight class="comment">maxParams<sp/>=<sp/>16</highlight></codeline>
<codeline lineno="337"><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">def<sp/>makeCommaSepLists(lineTemplate,<sp/>elemTemplate,<sp/>startInd=1):</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>j<sp/>in<sp/>range(startInd,maxParams+1):</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>&apos;,<sp/>&apos;.join([elemTemplate<sp/>%<sp/>{&apos;i&apos;:i}<sp/>for<sp/>i<sp/>in<sp/>range(startInd,j+1)])</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cog.outl(lineTemplate<sp/>%<sp/>{&apos;j&apos;:j,<sp/>&apos;list&apos;:list})</highlight></codeline>
<codeline lineno="342"><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment">makeCommaSepLists(&apos;#define<sp/>TINYFORMAT_ARGTYPES_%(j)d<sp/>%(list)s&apos;,</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;class<sp/>T%(i)d&apos;)</highlight></codeline>
<codeline lineno="345"><highlight class="comment"></highlight></codeline>
<codeline lineno="346"><highlight class="comment">cog.outl()</highlight></codeline>
<codeline lineno="347"><highlight class="comment">makeCommaSepLists(&apos;#define<sp/>TINYFORMAT_VARARGS_%(j)d<sp/>%(list)s&apos;,</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;const<sp/>T%(i)d&amp;<sp/>v%(i)d&apos;)</highlight></codeline>
<codeline lineno="349"><highlight class="comment"></highlight></codeline>
<codeline lineno="350"><highlight class="comment">cog.outl()</highlight></codeline>
<codeline lineno="351"><highlight class="comment">makeCommaSepLists(&apos;#define<sp/>TINYFORMAT_PASSARGS_%(j)d<sp/>%(list)s&apos;,<sp/>&apos;v%(i)d&apos;)</highlight></codeline>
<codeline lineno="352"><highlight class="comment"></highlight></codeline>
<codeline lineno="353"><highlight class="comment">cog.outl()</highlight></codeline>
<codeline lineno="354"><highlight class="comment">cog.outl(&apos;#define<sp/>TINYFORMAT_PASSARGS_TAIL_1&apos;)</highlight></codeline>
<codeline lineno="355"><highlight class="comment">makeCommaSepLists(&apos;#define<sp/>TINYFORMAT_PASSARGS_TAIL_%(j)d<sp/>,<sp/>%(list)s&apos;,</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;v%(i)d&apos;,<sp/>startInd<sp/>=<sp/>2)</highlight></codeline>
<codeline lineno="357"><highlight class="comment"></highlight></codeline>
<codeline lineno="358"><highlight class="comment">cog.outl()</highlight></codeline>
<codeline lineno="359"><highlight class="comment">cog.outl(&apos;#define<sp/>TINYFORMAT_FOREACH_ARGNUM(m)<sp/>\\\n<sp/><sp/><sp/><sp/>&apos;<sp/>+</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;<sp/>&apos;.join([&apos;m(%d)&apos;<sp/>%<sp/>(j,)<sp/>for<sp/>j<sp/>in<sp/>range(1,maxParams+1)]))</highlight></codeline>
<codeline lineno="361"><highlight class="comment">]]]*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="tinyformat_8h_1ab4da2fa12b549afc3fd57975615bd200" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_1<sp/>class<sp/>T1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="tinyformat_8h_1a62a40a5308fc407370578ab6459b4851" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_2<sp/>class<sp/>T1,<sp/>class<sp/>T2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="tinyformat_8h_1aeac3038358152135e1b8df44bf1b8ea8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_3<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="tinyformat_8h_1ac7ecb64215a0b08825a883876007ac19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_4<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="tinyformat_8h_1a66993ab97cb9b4904c160e1cd5d59b8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_5<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="tinyformat_8h_1a7bcc65431b8d13010af7420187683749" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_6<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="tinyformat_8h_1a5a3f46acfdd0a56f13d38618c37cdef8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_7<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="tinyformat_8h_1a4b23b9b563f577458248652aa8044103" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_8<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7,<sp/>class<sp/>T8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="tinyformat_8h_1a8d1dd0210087dfc81c121df66ee33e52" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_9<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7,<sp/>class<sp/>T8,<sp/>class<sp/>T9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="tinyformat_8h_1a4b0d66d958ff38575a9a93170d694c24" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_10<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7,<sp/>class<sp/>T8,<sp/>class<sp/>T9,<sp/>class<sp/>T10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="tinyformat_8h_1a8cd46da003d9fe59167940fe25867595" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_11<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7,<sp/>class<sp/>T8,<sp/>class<sp/>T9,<sp/>class<sp/>T10,<sp/>class<sp/>T11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="tinyformat_8h_1a1aa959b2b483db19f1176306b4d06629" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_12<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7,<sp/>class<sp/>T8,<sp/>class<sp/>T9,<sp/>class<sp/>T10,<sp/>class<sp/>T11,<sp/>class<sp/>T12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="tinyformat_8h_1a85223937916fef166b3508a912d7668b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_13<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7,<sp/>class<sp/>T8,<sp/>class<sp/>T9,<sp/>class<sp/>T10,<sp/>class<sp/>T11,<sp/>class<sp/>T12,<sp/>class<sp/>T13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="tinyformat_8h_1ae206bc85a6e4ff3d6c7b93292d73c0f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_14<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7,<sp/>class<sp/>T8,<sp/>class<sp/>T9,<sp/>class<sp/>T10,<sp/>class<sp/>T11,<sp/>class<sp/>T12,<sp/>class<sp/>T13,<sp/>class<sp/>T14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="tinyformat_8h_1a0b90055a32894652d2afa0e8c33e652e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_15<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7,<sp/>class<sp/>T8,<sp/>class<sp/>T9,<sp/>class<sp/>T10,<sp/>class<sp/>T11,<sp/>class<sp/>T12,<sp/>class<sp/>T13,<sp/>class<sp/>T14,<sp/>class<sp/>T15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="tinyformat_8h_1ad4215441d9a2f690d0782652d29c93b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_ARGTYPES_16<sp/>class<sp/>T1,<sp/>class<sp/>T2,<sp/>class<sp/>T3,<sp/>class<sp/>T4,<sp/>class<sp/>T5,<sp/>class<sp/>T6,<sp/>class<sp/>T7,<sp/>class<sp/>T8,<sp/>class<sp/>T9,<sp/>class<sp/>T10,<sp/>class<sp/>T11,<sp/>class<sp/>T12,<sp/>class<sp/>T13,<sp/>class<sp/>T14,<sp/>class<sp/>T15,<sp/>class<sp/>T16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="tinyformat_8h_1abf6c1d485da51e840e8e14e1bda2ad79" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_1<sp/>const<sp/>T1&amp;<sp/>v1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="tinyformat_8h_1a1e4ffcae5a12f54d6455bd8aa4e76213" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_2<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="tinyformat_8h_1a83d9dc2d60eccb797765288b8572ba4b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_3<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="tinyformat_8h_1ae6483027e89fb4eec2fcaa694af693e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_4<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="tinyformat_8h_1a83ae4d59f4423a7e711bb655e5046468" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_5<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="tinyformat_8h_1ad5726325042f45f3360a075857c4546d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_6<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="tinyformat_8h_1a62c588966a11bd3889e4d6c771e81003" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_7<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="tinyformat_8h_1a9c70447bc42824aeaae231a7e8a04cd5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_8<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7,<sp/>const<sp/>T8&amp;<sp/>v8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="tinyformat_8h_1a5a8a23a3c9f9e193fe47abebac6a6f01" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_9<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7,<sp/>const<sp/>T8&amp;<sp/>v8,<sp/>const<sp/>T9&amp;<sp/>v9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="tinyformat_8h_1a67c637e7ce786effe532c6f0acedc114" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_10<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7,<sp/>const<sp/>T8&amp;<sp/>v8,<sp/>const<sp/>T9&amp;<sp/>v9,<sp/>const<sp/>T10&amp;<sp/>v10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="tinyformat_8h_1af74cfc89db3063127ac552b2096ee202" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_11<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7,<sp/>const<sp/>T8&amp;<sp/>v8,<sp/>const<sp/>T9&amp;<sp/>v9,<sp/>const<sp/>T10&amp;<sp/>v10,<sp/>const<sp/>T11&amp;<sp/>v11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="tinyformat_8h_1aecc96e4607757418cdd4a02dd3820c6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_12<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7,<sp/>const<sp/>T8&amp;<sp/>v8,<sp/>const<sp/>T9&amp;<sp/>v9,<sp/>const<sp/>T10&amp;<sp/>v10,<sp/>const<sp/>T11&amp;<sp/>v11,<sp/>const<sp/>T12&amp;<sp/>v12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="tinyformat_8h_1a923c19355d6b85fd5d9fb2b7a1185a44" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_13<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7,<sp/>const<sp/>T8&amp;<sp/>v8,<sp/>const<sp/>T9&amp;<sp/>v9,<sp/>const<sp/>T10&amp;<sp/>v10,<sp/>const<sp/>T11&amp;<sp/>v11,<sp/>const<sp/>T12&amp;<sp/>v12,<sp/>const<sp/>T13&amp;<sp/>v13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="tinyformat_8h_1aa6613ba107f054252cd79d758ce90f9a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_14<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7,<sp/>const<sp/>T8&amp;<sp/>v8,<sp/>const<sp/>T9&amp;<sp/>v9,<sp/>const<sp/>T10&amp;<sp/>v10,<sp/>const<sp/>T11&amp;<sp/>v11,<sp/>const<sp/>T12&amp;<sp/>v12,<sp/>const<sp/>T13&amp;<sp/>v13,<sp/>const<sp/>T14&amp;<sp/>v14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="tinyformat_8h_1a821d86c7d772cd6827d6edfd2455c827" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_15<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7,<sp/>const<sp/>T8&amp;<sp/>v8,<sp/>const<sp/>T9&amp;<sp/>v9,<sp/>const<sp/>T10&amp;<sp/>v10,<sp/>const<sp/>T11&amp;<sp/>v11,<sp/>const<sp/>T12&amp;<sp/>v12,<sp/>const<sp/>T13&amp;<sp/>v13,<sp/>const<sp/>T14&amp;<sp/>v14,<sp/>const<sp/>T15&amp;<sp/>v15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="tinyformat_8h_1a65aa95c2886701f0789cf4cc8db446a8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_VARARGS_16<sp/>const<sp/>T1&amp;<sp/>v1,<sp/>const<sp/>T2&amp;<sp/>v2,<sp/>const<sp/>T3&amp;<sp/>v3,<sp/>const<sp/>T4&amp;<sp/>v4,<sp/>const<sp/>T5&amp;<sp/>v5,<sp/>const<sp/>T6&amp;<sp/>v6,<sp/>const<sp/>T7&amp;<sp/>v7,<sp/>const<sp/>T8&amp;<sp/>v8,<sp/>const<sp/>T9&amp;<sp/>v9,<sp/>const<sp/>T10&amp;<sp/>v10,<sp/>const<sp/>T11&amp;<sp/>v11,<sp/>const<sp/>T12&amp;<sp/>v12,<sp/>const<sp/>T13&amp;<sp/>v13,<sp/>const<sp/>T14&amp;<sp/>v14,<sp/>const<sp/>T15&amp;<sp/>v15,<sp/>const<sp/>T16&amp;<sp/>v16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="tinyformat_8h_1a882de29f30658025cb7a40ab2a3c5385" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_1<sp/>v1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="tinyformat_8h_1a3f61f8cbf29da3bb9d71621bd368b692" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_2<sp/>v1,<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="tinyformat_8h_1abc73b631680468d2827adfedaec43714" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_3<sp/>v1,<sp/>v2,<sp/>v3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="tinyformat_8h_1a4567123058003aa4858cc09129ccf43f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_4<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="tinyformat_8h_1a4f6a35f5aac8ee7e256cccbe79f1bb11" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_5<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="tinyformat_8h_1a3ca1aeaff8efc518c77191bd2beff211" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_6<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="tinyformat_8h_1ac15651ba5ff3a843fbcca70ca001a96b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_7<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="tinyformat_8h_1a3d27abbb9cc12dbf329bc65598e09407" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_8<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="tinyformat_8h_1a6df839f402e8139bd0bbd836a47c5f3c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_9<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="tinyformat_8h_1a62ab6727c0fef3078b61479189b844bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_10<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="tinyformat_8h_1ad9bb86846d4e126423a6b7665d27cf25" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_11<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="tinyformat_8h_1a09fab8f9299475206beee5cc402857cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_12<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="tinyformat_8h_1a54de297a7daf6d056adaaf7bb149f9ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_13<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12,<sp/>v13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="tinyformat_8h_1a6de6060bb4fcfd22665b5eb0bb53d73d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_14<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12,<sp/>v13,<sp/>v14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="tinyformat_8h_1a4c1b30542fbec366b19d9e7c19c49d68" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_15<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12,<sp/>v13,<sp/>v14,<sp/>v15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="tinyformat_8h_1a24b8083c54138016c06383e1653e5a85" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_16<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12,<sp/>v13,<sp/>v14,<sp/>v15,<sp/>v16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="tinyformat_8h_1a132e0319e39d703769b7f9c38ef8bcd9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="tinyformat_8h_1aa1e0f54c8b0a13299caab5a24fc851e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_2<sp/>,<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="tinyformat_8h_1a11e31b6fbafaf14301334626fc7518c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_3<sp/>,<sp/>v2,<sp/>v3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="tinyformat_8h_1a90b438d5af0c4b428798867efe470b7e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_4<sp/>,<sp/>v2,<sp/>v3,<sp/>v4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="tinyformat_8h_1ae6cea9440458a47e5eb8dd6b6665f0e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_5<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="tinyformat_8h_1a07f18fe198b905273366c0811107153d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_6<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="tinyformat_8h_1a8734eb33449039f3d565dafddc81929b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_7<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="tinyformat_8h_1aa063f0470e12605d4b349519a5a6f5e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_8<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="tinyformat_8h_1a05975c0013b310e6e1f842675a789a81" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_9<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="tinyformat_8h_1af6e45a7311fa17280c6ee209ec781228" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_10<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="tinyformat_8h_1a4b08bbe2fc6b399a447bf1d60de7339a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_11<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="tinyformat_8h_1a1ab11bb125792323f42b70d53038c3e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_12<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="tinyformat_8h_1a24c9395894209040cf21d85db47fface" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_13<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12,<sp/>v13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="tinyformat_8h_1a3554f8d025bcd3897b543d2228449964" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_14<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12,<sp/>v13,<sp/>v14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="tinyformat_8h_1ae58e378659770c1376d4bdb54190a87d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_15<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12,<sp/>v13,<sp/>v14,<sp/>v15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="tinyformat_8h_1a3f0a63604ce0d7f73ff55a54c57b42c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_PASSARGS_TAIL_16<sp/>,<sp/>v2,<sp/>v3,<sp/>v4,<sp/>v5,<sp/>v6,<sp/>v7,<sp/>v8,<sp/>v9,<sp/>v10,<sp/>v11,<sp/>v12,<sp/>v13,<sp/>v14,<sp/>v15,<sp/>v16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="tinyformat_8h_1ae2e4f3482a2c4746b3f7429d62e252a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_FOREACH_ARGNUM(m)<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>m(1)<sp/>m(2)<sp/>m(3)<sp/>m(4)<sp/>m(5)<sp/>m(6)<sp/>m(7)<sp/>m(8)<sp/>m(9)<sp/>m(10)<sp/>m(11)<sp/>m(12)<sp/>m(13)<sp/>m(14)<sp/>m(15)<sp/>m(16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//[[[end]]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>holding<sp/>current<sp/>position<sp/>in<sp/>format<sp/>string<sp/>and<sp/>an<sp/>output<sp/>stream<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>arguments<sp/>are<sp/>formatted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classtinyformat_1_1detail_1_1_format_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtinyformat_1_1detail_1_1_format_iterator" kindref="compound">FormatIterator</ref></highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flags<sp/>for<sp/>features<sp/>not<sp/>representable<sp/>with<sp/>standard<sp/>stream<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4" kindref="member">ExtraFormatFlags</ref></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446" refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9ab97a1e3a40d92f84e93fa8358482aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9ab97a1e3a40d92f84e93fa8358482aa" kindref="member">Flag_None</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="447" refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5b65abd67b2208298644ddc94687e390" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5b65abd67b2208298644ddc94687e390" kindref="member">Flag_TruncateToPrecision</ref><sp/>=<sp/>1&lt;&lt;0,<sp/></highlight><highlight class="comment">//<sp/>truncate<sp/>length<sp/>to<sp/>stream<sp/>precision()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9d39e70884631652913a219fc8c631a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9d39e70884631652913a219fc8c631a9" kindref="member">Flag_SpacePadPositive</ref><sp/><sp/><sp/><sp/>=<sp/>1&lt;&lt;1,<sp/></highlight><highlight class="comment">//<sp/>pad<sp/>positive<sp/>values<sp/>with<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5d0e44bf22d5a33b12af70fab06a595d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5d0e44bf22d5a33b12af70fab06a595d" kindref="member">Flag_VariableWidth</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1&lt;&lt;2,<sp/></highlight><highlight class="comment">//<sp/>variable<sp/>field<sp/>width<sp/>in<sp/>arg<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a19e53a79433733d40dc1349ce52f3284" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a19e53a79433733d40dc1349ce52f3284" kindref="member">Flag_VariablePrecision</ref><sp/><sp/><sp/>=<sp/>1&lt;&lt;3<sp/><sp/></highlight><highlight class="comment">//<sp/>variable<sp/>field<sp/>precision<sp/>in<sp/>arg<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>is<sp/>the<sp/>output<sp/>stream,<sp/>fmt<sp/>is<sp/>the<sp/>full<sp/>format<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="classtinyformat_1_1detail_1_1_format_iterator_1a798e0f475996df1b0a4f93540d96791b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a798e0f475996df1b0a4f93540d96791b" kindref="member">FormatIterator</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_out(out),</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fmt(fmt),</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_extraFlags(<ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9ab97a1e3a40d92f84e93fa8358482aa" kindref="member">Flag_None</ref>),</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wantWidth(false),</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wantPrecision(false),</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_variableWidth(0),</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_variablePrecision(0),</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_origWidth(out.width()),</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_origPrecision(out.precision()),</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_origFlags(out.flags()),</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_origFill(out.fill())</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>remaining<sp/>part<sp/>of<sp/>format<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="classtinyformat_1_1detail_1_1_format_iterator_1a46377a804f72dbad1e508d2fbaa18ce9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a46377a804f72dbad1e508d2fbaa18ce9" kindref="member">finish</ref>()</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>would<sp/>be<sp/>nice<sp/>if<sp/>we<sp/>could<sp/>do<sp/>this<sp/>from<sp/>the<sp/>destructor,<sp/>but<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>if<sp/>TINFORMAT_ERROR<sp/>is<sp/>used<sp/>to<sp/>throw<sp/>an<sp/>exception!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fmt<sp/>=<sp/>printFormatStringLiteral(m_out,<sp/>m_fmt);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*m_fmt<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tinyformat_8h_1aab516d7d4e92fe18eca4a9d40f450a80" kindref="member">TINYFORMAT_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;tinyformat:<sp/>Too<sp/>many<sp/>conversion<sp/>specifiers<sp/>in<sp/>format<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="classtinyformat_1_1detail_1_1_format_iterator_1a700ea30dbed93c28c499ac01c59a78a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a700ea30dbed93c28c499ac01c59a78a4" kindref="member">~FormatIterator</ref>()</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>stream<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_out.width(m_origWidth);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_out.precision(m_origPrecision);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_out.flags(m_origFlags);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_out.fill(m_origFill);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a2a2b99ea3a371e1ff8d56d8c8b801bdb" kindref="member">accept</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>and<sp/>return<sp/>an<sp/>integer<sp/>from<sp/>the<sp/>string<sp/>c,<sp/>as<sp/>atoi()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>return,<sp/>c<sp/>is<sp/>set<sp/>to<sp/>one<sp/>past<sp/>the<sp/>end<sp/>of<sp/>the<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parseIntAndAdvance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*&amp;<sp/>c)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;*c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">;<sp/>++c)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>10*i<sp/>+<sp/>(*c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>at<sp/>most<sp/>truncLen<sp/>characters<sp/>of<sp/>a<sp/>C<sp/>string<sp/>to<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stream.<sp/><sp/>Return<sp/>true<sp/>if<sp/>formatting<sp/>proceeded<sp/>(generic<sp/>version<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>formatCStringTruncate(std::ostream&amp;<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/></highlight><highlight class="comment">/*value*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::streamsize<sp/></highlight><highlight class="comment">/*truncLen*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510" refid="tinyformat_8h_1abec92c1222dcfd430881422760e85c58" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>TINYFORMAT_DEFINE_FORMAT_C_STRING_TRUNCATE(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>bool<sp/>formatCStringTruncate(std::ostream&amp;<sp/>out,<sp/>type*<sp/>value,<sp/><sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::streamsize<sp/>truncLen)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::streamsize<sp/>len<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(len<sp/>&lt;<sp/>truncLen<sp/>&amp;&amp;<sp/>value[len]<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.write(value,<sp/>len);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overload<sp/>for<sp/>const<sp/>char*<sp/>and<sp/>char*.<sp/><sp/>Could<sp/>overload<sp/>for<sp/>signed<sp/>&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unsigned<sp/>char<sp/>too,<sp/>but<sp/>these<sp/>are<sp/>technically<sp/>unneeded<sp/>for<sp/>printf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compatibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tinyformat_8h_1abec92c1222dcfd430881422760e85c58" kindref="member">TINYFORMAT_DEFINE_FORMAT_C_STRING_TRUNCATE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tinyformat_8h_1abec92c1222dcfd430881422760e85c58" kindref="member">TINYFORMAT_DEFINE_FORMAT_C_STRING_TRUNCATE</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>TINYFORMAT_DEFINE_FORMAT_C_STRING_TRUNCATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>literal<sp/>part<sp/>of<sp/>format<sp/>string<sp/>and<sp/>return<sp/>next<sp/>format<sp/>spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skips<sp/>over<sp/>any<sp/>occurrences<sp/>of<sp/>&apos;%%&apos;,<sp/>printing<sp/>a<sp/>literal<sp/>&apos;%&apos;<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output.<sp/><sp/>The<sp/>position<sp/>of<sp/>the<sp/>first<sp/>%<sp/>character<sp/>of<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nontrivial<sp/>format<sp/>spec<sp/>is<sp/>returned,<sp/>or<sp/>the<sp/>end<sp/>of<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printFormatStringLiteral(std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>++c)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(*c)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.write(fmt,<sp/>static_cast&lt;std::streamsize&gt;(c<sp/>-<sp/>fmt));</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.write(fmt,<sp/>static_cast&lt;std::streamsize&gt;(c<sp/>-<sp/>fmt));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*(c+1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>&quot;%%&quot;,<sp/>tack<sp/>trailing<sp/>%<sp/>onto<sp/>next<sp/>literal<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/>++c;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>streamStateFromFormat(std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>extraFlags,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmtStart,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>variableWidth,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>variablePrecision);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Private<sp/>copy<sp/>&amp;<sp/>assign:<sp/>Kill<sp/>gcc<sp/>warnings<sp/>with<sp/>-Weffc++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a798e0f475996df1b0a4f93540d96791b" kindref="member">FormatIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a798e0f475996df1b0a4f93540d96791b" kindref="member">FormatIterator</ref>&amp;);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a798e0f475996df1b0a4f93540d96791b" kindref="member">FormatIterator</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a798e0f475996df1b0a4f93540d96791b" kindref="member">FormatIterator</ref>&amp;);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream,<sp/>current<sp/>format<sp/>string<sp/>&amp;<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/>m_out;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>m_fmt;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_extraFlags;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>machine<sp/>info<sp/>for<sp/>handling<sp/>of<sp/>variable<sp/>width<sp/>&amp;<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_wantWidth;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_wantPrecision;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_variableWidth;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_variablePrecision;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Saved<sp/>stream<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::streamsize<sp/>m_origWidth;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::streamsize<sp/>m_origPrecision;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::fmtflags<sp/>m_origFlags;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>m_origFill;</highlight></codeline>
<codeline lineno="579"><highlight class="normal">};</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accept<sp/>a<sp/>value<sp/>for<sp/>formatting<sp/>into<sp/>the<sp/>internal<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><ref refid="tinyformat_8h_1a6aa2353acc671b972658fd73a813b960" kindref="member">TINYFORMAT_NOINLINE</ref><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;<sp/>greatly<sp/>reduces<sp/>bloat<sp/>in<sp/>optimized<sp/>builds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="classtinyformat_1_1detail_1_1_format_iterator_1a914be2066071c01cac4c2ea867c9d89a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a2a2b99ea3a371e1ff8d56d8c8b801bdb" kindref="member">FormatIterator::accept</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>the<sp/>format<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmtEnd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_extraFlags<sp/>==<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9ab97a1e3a40d92f84e93fa8358482aa" kindref="member">Flag_None</ref><sp/>&amp;&amp;<sp/>!m_wantWidth<sp/>&amp;&amp;<sp/>!m_wantPrecision)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fmt<sp/>=<sp/>printFormatStringLiteral(m_out,<sp/>m_fmt);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmtEnd<sp/>=<sp/>streamStateFromFormat(m_out,<sp/>m_extraFlags,<sp/>m_fmt,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wantWidth<sp/><sp/><sp/><sp/><sp/>=<sp/>(m_extraFlags<sp/>&amp;<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5d0e44bf22d5a33b12af70fab06a595d" kindref="member">Flag_VariableWidth</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wantPrecision<sp/>=<sp/>(m_extraFlags<sp/>&amp;<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a19e53a79433733d40dc1349ce52f3284" kindref="member">Flag_VariablePrecision</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consume<sp/>value<sp/>as<sp/>variable<sp/>width<sp/>and<sp/>precision<sp/>specifier<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_extraFlags<sp/>&amp;<sp/>(<ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5d0e44bf22d5a33b12af70fab06a595d" kindref="member">Flag_VariableWidth</ref><sp/>|<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a19e53a79433733d40dc1349ce52f3284" kindref="member">Flag_VariablePrecision</ref>))</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_wantWidth<sp/>||<sp/>m_wantPrecision)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="structtinyformat_1_1detail_1_1convert_to_int_1a1e1c0d85c6afc3bb21d2bc9458b3feb1" kindref="member">convertToInt&lt;T&gt;::invoke</ref>(value);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_wantWidth)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_variableWidth<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wantWidth<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_wantPrecision)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_variablePrecision<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wantPrecision<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>get<sp/>here,<sp/>we&apos;ve<sp/>set<sp/>both<sp/>the<sp/>variable<sp/>precision<sp/>and<sp/>width<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>required<sp/>and<sp/>we<sp/>need<sp/>to<sp/>rerun<sp/>the<sp/>stream<sp/>state<sp/>setup<sp/>to<sp/>insert<sp/>these.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmtEnd<sp/>=<sp/>streamStateFromFormat(m_out,<sp/>m_extraFlags,<sp/>m_fmt,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_variableWidth,<sp/>m_variablePrecision);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>the<sp/>value<sp/>into<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(m_extraFlags<sp/>&amp;<sp/>(<ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9d39e70884631652913a219fc8c631a9" kindref="member">Flag_SpacePadPositive</ref><sp/>|<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5b65abd67b2208298644ddc94687e390" kindref="member">Flag_TruncateToPrecision</ref>)))</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetinyformat_1adc03c92f312158ae351d38ac867b9296" kindref="member">formatValue</ref>(m_out,<sp/>m_fmt,<sp/>fmtEnd,<sp/>value);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>are<sp/>special<sp/>cases<sp/>where<sp/>there&apos;s<sp/>no<sp/>direct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correspondence<sp/>between<sp/>stream<sp/>formatting<sp/>and<sp/>the<sp/>printf()<sp/>behaviour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instead,<sp/>we<sp/>simulate<sp/>the<sp/>behaviour<sp/>crudely<sp/>by<sp/>formatting<sp/>into<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>string<sp/>stream<sp/>and<sp/>munging<sp/>the<sp/>resulting<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>tmpStream;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpStream.copyfmt(m_out);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_extraFlags<sp/>&amp;<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9d39e70884631652913a219fc8c631a9" kindref="member">Flag_SpacePadPositive</ref>)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpStream.setf(std::ios::showpos);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>formatCStringTruncate<sp/>is<sp/>required<sp/>for<sp/>truncating<sp/>conversions<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;%.4s&quot;<sp/>where<sp/>at<sp/>most<sp/>4<sp/>characters<sp/>of<sp/>the<sp/>c-string<sp/>should<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>didn&apos;t<sp/>include<sp/>this<sp/>special<sp/>case,<sp/>we<sp/>might<sp/>read<sp/>off<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(<sp/>(m_extraFlags<sp/>&amp;<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5b65abd67b2208298644ddc94687e390" kindref="member">Flag_TruncateToPrecision</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formatCStringTruncate(tmpStream,<sp/>value,<sp/>m_out.precision())<sp/>))</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>a<sp/>truncated<sp/>c-string;<sp/>just<sp/>format<sp/>normally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetinyformat_1adc03c92f312158ae351d38ac867b9296" kindref="member">formatValue</ref>(tmpStream,<sp/>m_fmt,<sp/>fmtEnd,<sp/>value);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>result<sp/>=<sp/>tmpStream.str();<sp/></highlight><highlight class="comment">//<sp/>allocates...<sp/>yuck.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_extraFlags<sp/>&amp;<sp/>Flag_SpacePadPositive)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>iend<sp/>=<sp/>result.size();<sp/>i<sp/>&lt;<sp/>iend;<sp/>++i)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((m_extraFlags<sp/>&amp;<sp/>Flag_TruncateToPrecision)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)result.size()<sp/>&gt;<sp/>(int)m_out.precision())</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_out.write(result.c_str(),<sp/>m_out.precision());</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_out<sp/>&lt;&lt;<sp/>result;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>m_extraFlags<sp/>=<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9ab97a1e3a40d92f84e93fa8358482aa" kindref="member">Flag_None</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fmt<sp/>=<sp/>fmtEnd;</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parse<sp/>a<sp/>format<sp/>string<sp/>and<sp/>set<sp/>the<sp/>stream<sp/>state<sp/>accordingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>mini-language<sp/>recognized<sp/>here<sp/>is<sp/>meant<sp/>to<sp/>be<sp/>the<sp/>one<sp/>from<sp/>C99,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>form<sp/>&quot;%[flags][width][.precision][length]type&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Formatting<sp/>options<sp/>which<sp/>can&apos;t<sp/>be<sp/>natively<sp/>represented<sp/>using<sp/>the<sp/>ostream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">//<sp/>state<sp/>are<sp/>returned<sp/>in<sp/>the<sp/>extraFlags<sp/>parameter<sp/>which<sp/>is<sp/>a<sp/>bitwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">//<sp/>combination<sp/>of<sp/>values<sp/>from<sp/>the<sp/>ExtraFormatFlags<sp/>enum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>FormatIterator::streamStateFromFormat(std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>extraFlags,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmtStart,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>variableWidth,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>variablePrecision)</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*fmtStart<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tinyformat_8h_1aab516d7d4e92fe18eca4a9d40f450a80" kindref="member">TINYFORMAT_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;tinyformat:<sp/>Not<sp/>enough<sp/>conversion<sp/>specifiers<sp/>in<sp/>format<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmtStart;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>stream<sp/>state<sp/>to<sp/>defaults.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>out.width(0);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>out.precision(6);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>out.fill(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>most<sp/>flags;<sp/>ignore<sp/>irrelevant<sp/>unitbuf<sp/>&amp;<sp/>skipws.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>out.unsetf(std::ios::adjustfield<sp/>|<sp/>std::ios::basefield<sp/>|</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::floatfield<sp/>|<sp/>std::ios::showbase<sp/>|<sp/>std::ios::boolalpha<sp/>|</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::showpoint<sp/>|<sp/>std::ios::showpos<sp/>|<sp/>std::ios::uppercase);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>extraFlags<sp/>=<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9ab97a1e3a40d92f84e93fa8358482aa" kindref="member">Flag_None</ref>;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>precisionSet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>widthSet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c<sp/>=<sp/>fmtStart<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>Parse<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;<sp/>++c)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(*c)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::showpoint<sp/>|<sp/>std::ios::showbase);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overridden<sp/>by<sp/>left<sp/>alignment<sp/>(&apos;-&apos;<sp/>flag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(out.flags()<sp/>&amp;<sp/>std::ios::left))</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>internal<sp/>padding<sp/>so<sp/>that<sp/>numeric<sp/>values<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>formatted<sp/>correctly,<sp/>eg<sp/>-00010<sp/>rather<sp/>than<sp/>000-10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.fill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::internal,<sp/>std::ios::adjustfield);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.fill(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::left,<sp/>std::ios::adjustfield);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overridden<sp/>by<sp/>show<sp/>positive<sp/>sign,<sp/>&apos;+&apos;<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(out.flags()<sp/>&amp;<sp/>std::ios::showpos))</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraFlags<sp/>|=<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9d39e70884631652913a219fc8c631a9" kindref="member">Flag_SpacePadPositive</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::showpos);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraFlags<sp/>&amp;=<sp/>~<ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a9d39e70884631652913a219fc8c631a9" kindref="member">Flag_SpacePadPositive</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>Parse<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>widthSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.width(parseIntAndAdvance(c));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>widthSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(variableWidth<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>widths<sp/>correspond<sp/>to<sp/>&apos;-&apos;<sp/>flag<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.fill(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::left,<sp/>std::ios::adjustfield);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variableWidth<sp/>=<sp/>-variableWidth;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.width(variableWidth);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraFlags<sp/>|=<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5d0e44bf22d5a33b12af70fab06a595d" kindref="member">Flag_VariableWidth</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3)<sp/>Parse<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraFlags<sp/>|=<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a19e53a79433733d40dc1349ce52f3284" kindref="member">Flag_VariablePrecision</ref>;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision<sp/>=<sp/>variablePrecision;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision<sp/>=<sp/>parseIntAndAdvance(c);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>negative<sp/>precisions<sp/>ignored,<sp/>treated<sp/>as<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseIntAndAdvance(++c);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.precision(precision);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precisionSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4)<sp/>Ignore<sp/>any<sp/>C99<sp/>length<sp/>modifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;j&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5)<sp/>We&apos;re<sp/>up<sp/>to<sp/>the<sp/>conversion<sp/>specifier<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>stream<sp/>flags<sp/>based<sp/>on<sp/>conversion<sp/>specifier<sp/>(thanks<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boost::format<sp/>class<sp/>for<sp/>forging<sp/>the<sp/>way<sp/>here).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>intConversion<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(*c)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::dec,<sp/>std::ios::basefield);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intConversion<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::oct,<sp/>std::ios::basefield);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intConversion<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::uppercase);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::hex,<sp/>std::ios::basefield);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intConversion<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::uppercase);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::scientific,<sp/>std::ios::floatfield);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::dec,<sp/>std::ios::basefield);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::uppercase);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::fixed,<sp/>std::ios::floatfield);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::uppercase);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;g&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::dec,<sp/>std::ios::basefield);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>in<sp/>boost::format,<sp/>let<sp/>stream<sp/>decide<sp/>float<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.flags(out.flags()<sp/>&amp;<sp/>~<ref refid="namespacestd" kindref="compound">std</ref>::ios::floatfield);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tinyformat_8h_1aab516d7d4e92fe18eca4a9d40f450a80" kindref="member">TINYFORMAT_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;tinyformat:<sp/>the<sp/>%a<sp/>and<sp/>%A<sp/>conversion<sp/>specs<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;are<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handled<sp/>as<sp/>special<sp/>case<sp/>inside<sp/>formatValue()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(precisionSet)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraFlags<sp/>|=<sp/><ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a219d15b3b08e2e2039043d2e992cc0b4a5b65abd67b2208298644ddc94687e390" kindref="member">Flag_TruncateToPrecision</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>%s<sp/>print<sp/>booleans<sp/>as<sp/>&quot;true&quot;<sp/>and<sp/>&quot;false&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::boolalpha);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>supported<sp/>-<sp/>will<sp/>cause<sp/>problems!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tinyformat_8h_1aab516d7d4e92fe18eca4a9d40f450a80" kindref="member">TINYFORMAT_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;tinyformat:<sp/>%n<sp/>conversion<sp/>spec<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tinyformat_8h_1aab516d7d4e92fe18eca4a9d40f450a80" kindref="member">TINYFORMAT_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;tinyformat:<sp/>Conversion<sp/>spec<sp/>incorrectly<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;terminated<sp/>by<sp/>end<sp/>of<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(intConversion<sp/>&amp;&amp;<sp/>precisionSet<sp/>&amp;&amp;<sp/>!widthSet)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;precision&quot;<sp/>for<sp/>integers<sp/>gives<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>digits<sp/>(to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>padded<sp/>with<sp/>zeros<sp/>on<sp/>the<sp/>left).<sp/><sp/>This<sp/>isn&apos;t<sp/>really<sp/>supported<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iostreams,<sp/>but<sp/>we<sp/>can<sp/>approximately<sp/>simulate<sp/>it<sp/>with<sp/>the<sp/>width<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>width<sp/>isn&apos;t<sp/>otherwise<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.width(out.precision());</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.setf(std::ios::internal,<sp/>std::ios::adjustfield);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.fill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+1;</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>format<sp/>function<sp/>on<sp/>top<sp/>of<sp/>which<sp/>the<sp/>public<sp/>interface<sp/>is<sp/>implemented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>enforce<sp/>a<sp/>mimimum<sp/>of<sp/>one<sp/>value<sp/>to<sp/>be<sp/>formatted<sp/>to<sp/>prevent<sp/>bugs<sp/>looking<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>char*<sp/>myStr<sp/>=<sp/>&quot;100%<sp/>broken&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>printf(myStr);<sp/><sp/><sp/>//<sp/>Parses<sp/>%<sp/>as<sp/>a<sp/>format<sp/>specifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TINYFORMAT_USE_VARIADIC_TEMPLATES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1&gt;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(FormatIterator&amp;<sp/>fmtIter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>value1)</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>fmtIter.accept(value1);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>fmtIter.finish();</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">//<sp/>General<sp/>version<sp/>for<sp/>C++11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(FormatIterator&amp;<sp/>fmtIter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>value1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>fmtIter.accept(value1);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(fmtIter,<sp/>args...);</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(<ref refid="classtinyformat_1_1detail_1_1_format_iterator" kindref="compound">FormatIterator</ref>&amp;<sp/>fmtIter)</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>fmtIter.<ref refid="classtinyformat_1_1detail_1_1_format_iterator_1a46377a804f72dbad1e508d2fbaa18ce9" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>General<sp/>version<sp/>for<sp/>C++98</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876" refid="tinyformat_8h_1af638bd299ae847906bd2bd3e00e57772" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_MAKE_FORMAT_DETAIL(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="877"><highlight class="preprocessor">template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="878"><highlight class="preprocessor">void<sp/>format(detail::FormatIterator&amp;<sp/>fmtIter,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="879"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="880"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>fmtIter.accept(v1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="881"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>format(fmtIter<sp/>TINYFORMAT_PASSARGS_TAIL(n));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="882"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><ref refid="tinyformat_8h_1ae2e4f3482a2c4746b3f7429d62e252a7" kindref="member">TINYFORMAT_FOREACH_ARGNUM</ref>(<ref refid="tinyformat_8h_1af638bd299ae847906bd2bd3e00e57772" kindref="member">TINYFORMAT_MAKE_FORMAT_DETAIL</ref>)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TINYFORMAT_MAKE_FORMAT_DETAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>End<sp/>C++98<sp/>variadic<sp/>template<sp/>emulation<sp/>for<sp/>format()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implement<sp/>all<sp/>the<sp/>main<sp/>interface<sp/>functions<sp/>here<sp/>in<sp/>terms<sp/>of<sp/>detail::format()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TINYFORMAT_USE_VARIADIC_TEMPLATES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++11<sp/>-<sp/>the<sp/>simple<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::FormatIterator<sp/>fmtIter(out,<sp/>fmt);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(fmtIter,<sp/>v1,<sp/>args...);</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="906"><highlight class="normal">std::string<sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="907"><highlight class="normal">{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(oss,<sp/>fmt,<sp/>v1,<sp/>args...);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oss.str();</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="914"><highlight class="normal">std::string<sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(oss,<sp/>fmt.c_str(),<sp/>v1,<sp/>args...);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oss.str();</highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>(std::cout,<sp/>fmt,<sp/>v1,<sp/>args...);</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++98<sp/>-<sp/>define<sp/>the<sp/>interface<sp/>functions<sp/>using<sp/>the<sp/>wrapping<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930" refid="tinyformat_8h_1a85c1bcb25897c3da7820c02e7ba63f11" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_MAKE_FORMAT_FUNCS(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="931"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="932"><highlight class="preprocessor">template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="933"><highlight class="preprocessor">void<sp/>format(std::ostream&amp;<sp/>out,<sp/>const<sp/>char*<sp/>fmt,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="934"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="935"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tinyformat::detail::FormatIterator<sp/>fmtIter(out,<sp/>fmt);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="936"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tinyformat::detail::format(fmtIter,<sp/>TINYFORMAT_PASSARGS(n));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="937"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="938"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="939"><highlight class="preprocessor">template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="940"><highlight class="preprocessor">std::string<sp/>format(const<sp/>char*<sp/>fmt,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="941"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="942"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="943"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tinyformat::format(oss,<sp/>fmt,<sp/>TINYFORMAT_PASSARGS(n));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="944"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>oss.str();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="945"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="946"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="947"><highlight class="preprocessor">template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="948"><highlight class="preprocessor">std::string<sp/>format(const<sp/>std::string<sp/>&amp;fmt,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="949"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="950"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="951"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tinyformat::format(oss,<sp/>fmt.c_str(),<sp/>TINYFORMAT_PASSARGS(n));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="952"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>oss.str();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="953"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="954"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="955"><highlight class="preprocessor">template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="956"><highlight class="preprocessor">void<sp/>printf(const<sp/>char*<sp/>fmt,<sp/>TINYFORMAT_VARARGS(n))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="957"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="958"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tinyformat::format(std::cout,<sp/>fmt,<sp/>TINYFORMAT_PASSARGS(n));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="959"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><ref refid="tinyformat_8h_1ae2e4f3482a2c4746b3f7429d62e252a7" kindref="member">TINYFORMAT_FOREACH_ARGNUM</ref>(<ref refid="tinyformat_8h_1a85c1bcb25897c3da7820c02e7ba63f11" kindref="member">TINYFORMAT_MAKE_FORMAT_FUNCS</ref>)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TINYFORMAT_MAKE_FORMAT_FUNCS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>deprecated<sp/>wrapping<sp/>macro<sp/>for<sp/>backward<sp/>compatibility<sp/>in<sp/>tinyformat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.x.<sp/><sp/>Will<sp/>be<sp/>removed<sp/>in<sp/>version<sp/>2!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969" refid="tinyformat_8h_1a28eda6fd28712f6a26ecd7900c524a8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_WRAP_FORMAT_EXTRA_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970" refid="tinyformat_8h_1acc1b10ae0323e230271bb6f9ed02b0ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_WRAP_FORMAT_N(n,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/><sp/>\</highlight></codeline>
<codeline lineno="971"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="972"><highlight class="preprocessor">template&lt;TINYFORMAT_ARGTYPES(n)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="973"><highlight class="preprocessor">returnType<sp/>funcName(TINYFORMAT_WRAP_FORMAT_EXTRA_ARGS<sp/>const<sp/>char*<sp/>fmt,<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="974"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TINYFORMAT_VARARGS(n))<sp/>funcDeclSuffix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="975"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="976"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bodyPrefix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="977"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tinyformat::format(streamName,<sp/>fmt,<sp/>TINYFORMAT_PASSARGS(n));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="978"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bodySuffix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="979"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="980"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="tinyformat_8h_1a7bb15ef501a1f264311828ae36bd9017" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYFORMAT_WRAP_FORMAT(returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="982"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="983"><highlight class="preprocessor">inline<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="984"><highlight class="preprocessor">returnType<sp/>funcName(TINYFORMAT_WRAP_FORMAT_EXTRA_ARGS<sp/>const<sp/>char*<sp/>fmt<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="985"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>funcDeclSuffix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="986"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="987"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bodyPrefix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="988"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tinyformat::detail::FormatIterator(streamName,<sp/>fmt).finish();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="989"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bodySuffix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="990"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="991"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(1<sp/>,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="992"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(2<sp/>,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="993"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(3<sp/>,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="994"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(4<sp/>,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="995"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(5<sp/>,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="996"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(6<sp/>,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="997"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(7<sp/>,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="998"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(8<sp/>,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="999"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(9<sp/>,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="1000"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(10,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="1001"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(11,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="1002"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(12,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="1003"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(13,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="1004"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(14,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="1005"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(15,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="1006"><highlight class="preprocessor">TINYFORMAT_WRAP_FORMAT_N(16,<sp/>returnType,<sp/>funcName,<sp/>funcDeclSuffix,<sp/>bodyPrefix,<sp/>streamName,<sp/>bodySuffix)<sp/>\</highlight></codeline>
<codeline lineno="1007"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tinyformat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011" refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>strprintf<sp/>tfm::format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>TINYFORMAT_H_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/tinyformat.h"/>
  </compounddef>
</doxygen>
