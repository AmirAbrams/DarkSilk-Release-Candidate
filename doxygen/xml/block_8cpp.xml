<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="block_8cpp" kind="file" language="C++">
    <compoundname>block.cpp</compoundname>
    <includes refid="primitives_2block_8h" local="yes">primitives/block.h</includes>
    <includes refid="chainparams_8h" local="yes">chainparams.h</includes>
    <includes local="no">boost/foreach.hpp</includes>
    <incdepgraph>
      <node id="41680">
        <label>list</label>
      </node>
      <node id="41649">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="41708">
        <label>netinet/in.h</label>
      </node>
      <node id="41632">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41647" relation="include">
        </childnode>
        <childnode refid="41634" relation="include">
        </childnode>
      </node>
      <node id="41701">
        <label>arpa/inet.h</label>
      </node>
      <node id="41717">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="41639">
        <label>limits</label>
      </node>
      <node id="41667">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41647" relation="include">
        </childnode>
      </node>
      <node id="41668">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="41669" relation="include">
        </childnode>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41651" relation="include">
        </childnode>
      </node>
      <node id="41631">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="41632" relation="include">
        </childnode>
        <childnode refid="41655" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41658" relation="include">
        </childnode>
        <childnode refid="41659" relation="include">
        </childnode>
        <childnode refid="41695" relation="include">
        </childnode>
        <childnode refid="41693" relation="include">
        </childnode>
      </node>
      <node id="41659">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="41634" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41660" relation="include">
        </childnode>
        <childnode refid="41661" relation="include">
        </childnode>
        <childnode refid="41662" relation="include">
        </childnode>
        <childnode refid="41671" relation="include">
        </childnode>
        <childnode refid="41673" relation="include">
        </childnode>
        <childnode refid="41692" relation="include">
        </childnode>
      </node>
      <node id="41691">
        <label>openssl/rand.h</label>
      </node>
      <node id="41629">
        <label>/home/dev/ds-160209/src/primitives/block.cpp</label>
        <link refid="block.cpp"/>
        <childnode refid="41630" relation="include">
        </childnode>
        <childnode refid="41713" relation="include">
        </childnode>
        <childnode refid="41660" relation="include">
        </childnode>
      </node>
      <node id="41656">
        <label>assert.h</label>
      </node>
      <node id="41644">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="41707">
        <label>net/if.h</label>
      </node>
      <node id="41719">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="41653">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="41654" relation="include">
        </childnode>
        <childnode refid="41634" relation="include">
        </childnode>
      </node>
      <node id="41650">
        <label>sys/mman.h</label>
      </node>
      <node id="41647">
        <label>stdlib.h</label>
      </node>
      <node id="41660">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="41690">
        <label>openssl/crypto.h</label>
      </node>
      <node id="41704">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="41705" relation="include">
        </childnode>
        <childnode refid="41650" relation="include">
        </childnode>
        <childnode refid="41706" relation="include">
        </childnode>
        <childnode refid="41674" relation="include">
        </childnode>
        <childnode refid="41707" relation="include">
        </childnode>
        <childnode refid="41708" relation="include">
        </childnode>
        <childnode refid="41701" relation="include">
        </childnode>
        <childnode refid="41709" relation="include">
        </childnode>
        <childnode refid="41651" relation="include">
        </childnode>
        <childnode refid="41710" relation="include">
        </childnode>
        <childnode refid="41652" relation="include">
        </childnode>
        <childnode refid="41711" relation="include">
        </childnode>
      </node>
      <node id="41686">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="41664">
        <label>openssl/sha.h</label>
      </node>
      <node id="41711">
        <label>errno.h</label>
      </node>
      <node id="41638">
        <label>cassert</label>
      </node>
      <node id="41657">
        <label>stdexcept</label>
      </node>
      <node id="41673">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="41674" relation="include">
        </childnode>
        <childnode refid="41675" relation="include">
        </childnode>
        <childnode refid="41676" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41677" relation="include">
        </childnode>
        <childnode refid="41632" relation="include">
        </childnode>
        <childnode refid="41636" relation="include">
        </childnode>
        <childnode refid="41680" relation="include">
        </childnode>
        <childnode refid="41681" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
        <childnode refid="41634" relation="include">
        </childnode>
        <childnode refid="41682" relation="include">
        </childnode>
        <childnode refid="41683" relation="include">
        </childnode>
        <childnode refid="41684" relation="include">
        </childnode>
        <childnode refid="41685" relation="include">
        </childnode>
        <childnode refid="41686" relation="include">
        </childnode>
        <childnode refid="41687" relation="include">
        </childnode>
        <childnode refid="41688" relation="include">
        </childnode>
        <childnode refid="41689" relation="include">
        </childnode>
        <childnode refid="41690" relation="include">
        </childnode>
        <childnode refid="41691" relation="include">
        </childnode>
        <childnode refid="41672" relation="include">
        </childnode>
        <childnode refid="41640" relation="include">
        </childnode>
      </node>
      <node id="41712">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="41713" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41703" relation="include">
        </childnode>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41634" relation="include">
        </childnode>
      </node>
      <node id="41685">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="41634">
        <label>string</label>
      </node>
      <node id="41696">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41647" relation="include">
        </childnode>
        <childnode refid="41673" relation="include">
        </childnode>
        <childnode refid="41697" relation="include">
        </childnode>
      </node>
      <node id="41636">
        <label>map</label>
      </node>
      <node id="41682">
        <label>boost/thread.hpp</label>
      </node>
      <node id="41714">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="41703" relation="include">
        </childnode>
        <childnode refid="41712" relation="include">
        </childnode>
        <childnode refid="41715" relation="include">
        </childnode>
        <childnode refid="41695" relation="include">
        </childnode>
        <childnode refid="41673" relation="include">
        </childnode>
        <childnode refid="41636" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
      </node>
      <node id="41669">
        <label>stddef.h</label>
      </node>
      <node id="41661">
        <label>boost/variant.hpp</label>
      </node>
      <node id="41710">
        <label>netdb.h</label>
      </node>
      <node id="41705">
        <label>sys/fcntl.h</label>
      </node>
      <node id="41633">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="41634" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
        <childnode refid="41636" relation="include">
        </childnode>
        <childnode refid="41637" relation="include">
        </childnode>
        <childnode refid="41638" relation="include">
        </childnode>
        <childnode refid="41639" relation="include">
        </childnode>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41641" relation="include">
        </childnode>
        <childnode refid="41642" relation="include">
        </childnode>
        <childnode refid="41643" relation="include">
        </childnode>
        <childnode refid="41644" relation="include">
        </childnode>
        <childnode refid="41645" relation="include">
        </childnode>
        <childnode refid="41653" relation="include">
        </childnode>
      </node>
      <node id="41651">
        <label>limits.h</label>
      </node>
      <node id="41716">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="41702">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="41637" relation="include">
        </childnode>
        <childnode refid="41698" relation="include">
        </childnode>
      </node>
      <node id="41676">
        <label>sys/resource.h</label>
      </node>
      <node id="41687">
        <label>openssl/bio.h</label>
      </node>
      <node id="41700">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="41703">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="41634" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41704" relation="include">
        </childnode>
      </node>
      <node id="41663">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="41655" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41664" relation="include">
        </childnode>
        <childnode refid="41665" relation="include">
        </childnode>
        <childnode refid="41666" relation="include">
        </childnode>
        <childnode refid="41667" relation="include">
        </childnode>
        <childnode refid="41668" relation="include">
        </childnode>
        <childnode refid="41670" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
      </node>
      <node id="41709">
        <label>ifaddrs.h</label>
      </node>
      <node id="41692">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="41673" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41647" relation="include">
        </childnode>
        <childnode refid="41693" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
        <childnode refid="41694" relation="include">
        </childnode>
      </node>
      <node id="41674">
        <label>sys/types.h</label>
      </node>
      <node id="41722">
        <label>ios</label>
      </node>
      <node id="41648">
        <label>string.h</label>
      </node>
      <node id="41654">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="41642">
        <label>cstdio</label>
      </node>
      <node id="41718">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="41689">
        <label>openssl/buffer.h</label>
      </node>
      <node id="41643">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="41684">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="41662">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="41663" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41655" relation="include">
        </childnode>
        <childnode refid="41657" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
      </node>
      <node id="41652">
        <label>unistd.h</label>
      </node>
      <node id="41635">
        <label>vector</label>
      </node>
      <node id="41671">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41655" relation="include">
        </childnode>
        <childnode refid="41672" relation="include">
        </childnode>
        <childnode refid="41657" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
        <childnode refid="41640" relation="include">
        </childnode>
      </node>
      <node id="41697">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="41698" relation="include">
        </childnode>
        <childnode refid="41699" relation="include">
        </childnode>
        <childnode refid="41660" relation="include">
        </childnode>
        <childnode refid="41700" relation="include">
        </childnode>
        <childnode refid="41691" relation="include">
        </childnode>
        <childnode refid="41701" relation="include">
        </childnode>
        <childnode refid="41702" relation="include">
        </childnode>
        <childnode refid="41703" relation="include">
        </childnode>
        <childnode refid="41712" relation="include">
        </childnode>
        <childnode refid="41714" relation="include">
        </childnode>
        <childnode refid="41663" relation="include">
        </childnode>
        <childnode refid="41720" relation="include">
        </childnode>
      </node>
      <node id="41665">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="41683">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="41681">
        <label>utility</label>
      </node>
      <node id="41679">
        <label>sstream</label>
      </node>
      <node id="41688">
        <label>openssl/evp.h</label>
      </node>
      <node id="41677">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="41638" relation="include">
        </childnode>
        <childnode refid="41678" relation="include">
        </childnode>
        <childnode refid="41679" relation="include">
        </childnode>
        <childnode refid="41657" relation="include">
        </childnode>
      </node>
      <node id="41640">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="41720">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="41645" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41721" relation="include">
        </childnode>
        <childnode refid="41656" relation="include">
        </childnode>
        <childnode refid="41722" relation="include">
        </childnode>
        <childnode refid="41639" relation="include">
        </childnode>
        <childnode refid="41636" relation="include">
        </childnode>
        <childnode refid="41637" relation="include">
        </childnode>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41634" relation="include">
        </childnode>
        <childnode refid="41648" relation="include">
        </childnode>
        <childnode refid="41681" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
      </node>
      <node id="41670">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41669" relation="include">
        </childnode>
        <childnode refid="41651" relation="include">
        </childnode>
      </node>
      <node id="41675">
        <label>sys/time.h</label>
      </node>
      <node id="41678">
        <label>iostream</label>
      </node>
      <node id="41698">
        <label>deque</label>
      </node>
      <node id="41655">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="41656" relation="include">
        </childnode>
        <childnode refid="41641" relation="include">
        </childnode>
        <childnode refid="41657" relation="include">
        </childnode>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41634" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
      </node>
      <node id="41706">
        <label>sys/socket.h</label>
      </node>
      <node id="41699">
        <label>boost/array.hpp</label>
      </node>
      <node id="41672">
        <label>openssl/bn.h</label>
      </node>
      <node id="41695">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="41640" relation="include">
        </childnode>
      </node>
      <node id="41645">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="41646" relation="include">
        </childnode>
        <childnode refid="41648" relation="include">
        </childnode>
        <childnode refid="41634" relation="include">
        </childnode>
        <childnode refid="41649" relation="include">
        </childnode>
        <childnode refid="41636" relation="include">
        </childnode>
        <childnode refid="41650" relation="include">
        </childnode>
        <childnode refid="41651" relation="include">
        </childnode>
        <childnode refid="41652" relation="include">
        </childnode>
      </node>
      <node id="41713">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="41671" relation="include">
        </childnode>
        <childnode refid="41655" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
      </node>
      <node id="41637">
        <label>set</label>
      </node>
      <node id="41721">
        <label>algorithm</label>
      </node>
      <node id="41666">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="41640" relation="include">
        </childnode>
        <childnode refid="41647" relation="include">
        </childnode>
      </node>
      <node id="41658">
        <label>util.h</label>
      </node>
      <node id="41693">
        <label>stdio.h</label>
      </node>
      <node id="41646">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="41647" relation="include">
        </childnode>
      </node>
      <node id="41641">
        <label>cstring</label>
      </node>
      <node id="41715">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="41716" relation="include">
        </childnode>
        <childnode refid="41717" relation="include">
        </childnode>
        <childnode refid="41718" relation="include">
        </childnode>
        <childnode refid="41649" relation="include">
        </childnode>
        <childnode refid="41719" relation="include">
        </childnode>
      </node>
      <node id="41694">
        <label>inttypes.h</label>
      </node>
      <node id="41630">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="41631" relation="include">
        </childnode>
        <childnode refid="41670" relation="include">
        </childnode>
        <childnode refid="41696" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="block_8cpp_1a20a76dbc6ac5b8a6e0aaef85522b1069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckProofOfWork</definition>
        <argsstring>(uint256 hash, unsigned int nBits)</argsstring>
        <name>CheckProofOfWork</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/primitives/block.cpp" line="57" column="1" bodyfile="/home/dev/ds-160209/src/primitives/block.cpp" bodystart="57" bodyend="71"/>
        <references refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" compoundref="bignum_8h" startline="321" endline="331">CBigNum::SetCompact</references>
        <references refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" compoundref="chainparams_8cpp" startline="186" endline="188">Params</references>
        <references refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" compoundref="bignum_8h" startline="278" endline="291">CBigNum::getuint256</references>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="class_c_block_1a77a1b1e9902e1e557d762f5a5f325cd8" compoundref="chain_8cpp" startline="856" endline="880">CBlock::ReadFromDisk</referencedby>
        <referencedby refid="class_c_block_tree_d_b_1a12be19bb1d7253eeb40e1aa88b032346" compoundref="txdb_8cpp" startline="86" endline="136">CBlockTreeDB::LoadBlockIndexGuts</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>Satoshi<sp/>Nakamoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="primitives_2block_8h" kindref="compound">primitives/block.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chainparams_8h" kindref="compound">chainparams.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/foreach.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_c_block_1a7e0103e7a0117173cb9c975702e06392" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_block_1a7e0103e7a0117173cb9c975702e06392" kindref="member">CBlock::CheckBlockSignature</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_block_1ac6aa1feb7deecb9fffef3978d2745903" kindref="member">IsProofOfWork</ref>())</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" kindref="member">vchBlockSig</ref>.empty();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" kindref="member">vchBlockSig</ref>.empty())</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;valtype&gt;<sp/>vSolutions;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09ad" kindref="member">txnouttype</ref><sp/>whichType;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>&amp;<sp/>txout<sp/>=<sp/><ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[1].vout[1];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1a6ee6be50bff44464e905680c6fcee6dc" kindref="member">Solver</ref>(txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>,<sp/>whichType,<sp/>vSolutions))</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whichType<sp/>==<sp/><ref refid="script_8h_1a750f89f617f934820d5371be790e09adab6494d355b65e346dac2cc16f901e0d2" kindref="member">TX_PUBKEY</ref>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8h_1a893ae190c4461e89b01441657f8975ed" kindref="member">valtype</ref>&amp;<sp/>vchPubKey<sp/>=<sp/>vSolutions[0];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>(vchPubKey).<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(<ref refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" kindref="member">GetHash</ref>(),<sp/><ref refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" kindref="member">vchBlockSig</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>signing<sp/>key<sp/>also<sp/>can<sp/>be<sp/>encoded<sp/>in<sp/>the<sp/>nonspendable<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>allows<sp/>to<sp/>not<sp/>pollute<sp/>UTXO<sp/>set<sp/>with<sp/>useless<sp/>outputs<sp/>e.g.<sp/>in<sp/>case<sp/>of<sp/>multisig<sp/>staking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>script<sp/>=<sp/>txout.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>CScript::const_iterator<sp/>pc<sp/>=<sp/>script.begin();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bd" kindref="member">opcodetype</ref><sp/>opcode;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="script_8h_1a893ae190c4461e89b01441657f8975ed" kindref="member">valtype</ref><sp/>vchPushValue;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!script.<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(pc,<sp/>opcode,<sp/>vchPushValue))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>!=<sp/><ref refid="script_8h_1a63e349a6089a54da9fe09a3d858648bdad436c18b194473f5ec64c28b774e41b3" kindref="member">OP_RETURN</ref>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!script.<ref refid="class_c_script_1a94635ed93d8d244ec3acfa83f9ecfe5f" kindref="member">GetOp</ref>(pc,<sp/>opcode,<sp/>vchPushValue))</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="script_8cpp_1a810f9eeea7027cd10732bc82fc21d6e1" kindref="member">IsCompressedOrUncompressedPubKey</ref>(vchPushValue))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>(vchPushValue).<ref refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" kindref="member">Verify</ref>(<ref refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" kindref="member">GetHash</ref>(),<sp/><ref refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" kindref="member">vchBlockSig</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" kindref="member">CBlock::UpdateTime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" kindref="member">nTime</ref><sp/>=<sp/>max(<ref refid="class_c_block_header_1a2972ebc9d970b4b12434876263c4c2b5" kindref="member">GetBlockTime</ref>(),<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>());</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="primitives_2block_8h_1a20a76dbc6ac5b8a6e0aaef85522b1069" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="block_8cpp_1a20a76dbc6ac5b8a6e0aaef85522b1069" kindref="member">CheckProofOfWork</ref>(<ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_big_num" kindref="compound">CBigNum</ref><sp/>bnTarget;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>bnTarget.<ref refid="class_c_big_num_1a27e3ca82a40ae0c34ac4c059e4d0d66c" kindref="member">SetCompact</ref>(nBits);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bnTarget<sp/>&lt;=<sp/>0<sp/>||<sp/>bnTarget<sp/>&gt;<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().ProofOfWorkLimit())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CheckProofOfWork()<sp/>:<sp/>nBits<sp/>below<sp/>minimum<sp/>work&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>proof<sp/>of<sp/>work<sp/>matches<sp/>claimed<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash<sp/>&gt;<sp/>bnTarget.<ref refid="class_c_big_num_1ad17ff84ee557ca5ad4b854e14d08099f" kindref="member">getuint256</ref>())</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CheckProofOfWork()<sp/>:<sp/>hash<sp/>doesn&apos;t<sp/>match<sp/>nBits&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" kindref="member">CBlock::ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>s;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;CBlock(hash=%s,<sp/>ver=%d,<sp/>hashPrevBlock=%s,<sp/>hashMerkleRoot=%s,<sp/>nTime=%u,<sp/>nBits=%08x,<sp/>nNonce=%u,<sp/>vtx=%u,<sp/>vchBlockSig=%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_header_1ae1165e54882d364b030fb33673d64dbd" kindref="member">GetHash</ref>().<ref refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" kindref="member">ToString</ref>(),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_header_1ad64b7a76914741861f55f0f38ed66fb5" kindref="member">nVersion</ref>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" kindref="member">hashPrevBlock</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_header_1ae9ef013abbcfbd9f8bc23dbcda0fd5af" kindref="member">hashMerkleRoot</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_header_1aa435a58a8f13a304681e797366e0d56d" kindref="member">nTime</ref>,<sp/><ref refid="class_c_block_header_1a88d501b1da4d34d7dc80c65bd4837670" kindref="member">nBits</ref>,<sp/><ref refid="class_c_block_header_1a3826d43cd36673027e17ecc674450e71" kindref="member">nNonce</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>.size(),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1ace13a819ca4e98c22847d26b3b357e75" kindref="member">HexStr</ref>(<ref refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" kindref="member">vchBlockSig</ref>.begin(),<sp/><ref refid="class_c_block_1a78f882e24c4416f42039cbc6a67faf6e" kindref="member">vchBlockSig</ref>.end()));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[i].ToString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>vMerkleTree:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_c_block_1a019ae6579acd08974653d3f443dd398a" kindref="member">vMerkleTree</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_c_block_1a019ae6579acd08974653d3f443dd398a" kindref="member">vMerkleTree</ref>[i].<ref refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.str();</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/primitives/block.cpp"/>
  </compounddef>
</doxygen>
