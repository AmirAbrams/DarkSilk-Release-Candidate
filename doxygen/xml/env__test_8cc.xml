<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="env__test_8cc" kind="file" language="C++">
    <compoundname>env_test.cc</compoundname>
    <includes refid="env_8h" local="yes">leveldb/env.h</includes>
    <includes refid="port_8h" local="yes">port/port.h</includes>
    <includes refid="testharness_8h" local="yes">util/testharness.h</includes>
    <incdepgraph>
      <node id="10328">
        <label>stdarg.h</label>
      </node>
      <node id="10340">
        <label>util/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="10329" relation="include">
        </childnode>
      </node>
      <node id="10332">
        <label>assert.h</label>
      </node>
      <node id="10338">
        <label>stdlib.h</label>
      </node>
      <node id="10326">
        <label>string</label>
      </node>
      <node id="10324">
        <label>/home/dev/ds-160209/src/leveldb/util/env_test.cc</label>
        <link refid="env_test.cc"/>
        <childnode refid="10325" relation="include">
        </childnode>
        <childnode refid="10335" relation="include">
        </childnode>
        <childnode refid="10336" relation="include">
        </childnode>
      </node>
      <node id="10333">
        <label>stddef.h</label>
      </node>
      <node id="10330">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
        <childnode refid="10331" relation="include">
        </childnode>
      </node>
      <node id="10334">
        <label>string.h</label>
      </node>
      <node id="10327">
        <label>vector</label>
      </node>
      <node id="10339">
        <label>sstream</label>
      </node>
      <node id="10335">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="10334" relation="include">
        </childnode>
      </node>
      <node id="10329">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="10336">
        <label>util/testharness.h</label>
        <link refid="testharness_8h"/>
        <childnode refid="10337" relation="include">
        </childnode>
        <childnode refid="10338" relation="include">
        </childnode>
        <childnode refid="10339" relation="include">
        </childnode>
        <childnode refid="10325" relation="include">
        </childnode>
        <childnode refid="10331" relation="include">
        </childnode>
        <childnode refid="10340" relation="include">
        </childnode>
      </node>
      <node id="10331">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="10332" relation="include">
        </childnode>
        <childnode refid="10333" relation="include">
        </childnode>
        <childnode refid="10334" relation="include">
        </childnode>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10325">
        <label>leveldb/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
        <childnode refid="10327" relation="include">
        </childnode>
        <childnode refid="10328" relation="include">
        </childnode>
        <childnode refid="10329" relation="include">
        </childnode>
        <childnode refid="10330" relation="include">
        </childnode>
      </node>
      <node id="10337">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classleveldb_1_1_env_posix_test" prot="public">leveldb::EnvPosixTest</innerclass>
    <innerclass refid="structleveldb_1_1_state" prot="public">leveldb::State</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="env__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/util/env_test.cc" line="102" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/util/env_test.cc" bodystart="102" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="env_8h" kindref="compound">leveldb/env.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="port_8h" kindref="compound">port/port.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testharness_8h" kindref="compound">util/testharness.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kDelayMicros<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classleveldb_1_1_env_posix_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_env_posix_test" kindref="compound">EnvPosixTest</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_mutex" kindref="compound">port::Mutex</ref><sp/>mu_;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>std::string<sp/>events_;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20" refid="classleveldb_1_1_env_posix_test_1a6d8ded8756fa7391e086fb31a865e639" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>*<sp/><ref refid="classleveldb_1_1_env_posix_test_1a6d8ded8756fa7391e086fb31a865e639" kindref="member">env_</ref>;</highlight></codeline>
<codeline lineno="21" refid="classleveldb_1_1_env_posix_test_1a05fceab267ecdc2948ec96a3a6145bb3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env_posix_test_1a05fceab267ecdc2948ec96a3a6145bb3" kindref="member">EnvPosixTest</ref>()<sp/>:<sp/>env_(<ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>::Default())<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetBool(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">port::AtomicPointer*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr)-&gt;NoBarrier_Store(ptr);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespaceleveldb_1a2e08263909f19a912b1a1ee9cb0a5e45" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_env_posix_test" kindref="compound">EnvPosixTest</ref>,<sp/>RunImmediately)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref><sp/>called<sp/>(NULL);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;<ref refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724" kindref="member">Schedule</ref>(&amp;SetBool,<sp/>&amp;called);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" kindref="member">Env::Default</ref>()-&gt;<ref refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312" kindref="member">SleepForMicroseconds</ref>(kDelayMicros);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1ac2101fb1ffd0c81c17520b82f0fcfe21" kindref="member">ASSERT_TRUE</ref>(called.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a6f1579bd734aa549f237eeb4f486cfd3" kindref="member">NoBarrier_Load</ref>()<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="namespaceleveldb_1aedbd4224fa9064ab1acb838efb84f337" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_env_posix_test" kindref="compound">EnvPosixTest</ref>,<sp/>RunMany)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref><sp/>last_id<sp/>(NULL);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CB<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref>*<sp/>last_id_ptr;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>to<sp/>shared<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uintptr_t<sp/><ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Order#<sp/>for<sp/>the<sp/>execution<sp/>of<sp/>this<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>CB(<ref refid="classleveldb_1_1port_1_1_atomic_pointer" kindref="compound">port::AtomicPointer</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>:<sp/>last_id_ptr(p),<sp/><ref refid="db__test_8cc_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>(i)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Run(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CB*<sp/>cb<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">CB*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(v);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cur<sp/>=<sp/>cb-&gt;last_id_ptr-&gt;NoBarrier_Load();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(cb-&gt;id-1,<sp/>reinterpret_cast&lt;uintptr_t&gt;(cur));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;last_id_ptr-&gt;Release_Store(reinterpret_cast&lt;void*&gt;(cb-&gt;id));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Schedule<sp/>in<sp/>different<sp/>order<sp/>than<sp/>start<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>CB<sp/>cb1(&amp;last_id,<sp/>1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>CB<sp/>cb2(&amp;last_id,<sp/>2);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>CB<sp/>cb3(&amp;last_id,<sp/>3);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>CB<sp/>cb4(&amp;last_id,<sp/>4);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;<ref refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724" kindref="member">Schedule</ref>(&amp;CB::Run,<sp/>&amp;cb1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;<ref refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724" kindref="member">Schedule</ref>(&amp;CB::Run,<sp/>&amp;cb2);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;<ref refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724" kindref="member">Schedule</ref>(&amp;CB::Run,<sp/>&amp;cb3);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;<ref refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724" kindref="member">Schedule</ref>(&amp;CB::Run,<sp/>&amp;cb4);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" kindref="member">Env::Default</ref>()-&gt;<ref refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312" kindref="member">SleepForMicroseconds</ref>(kDelayMicros);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cur<sp/>=<sp/>last_id.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(4,<sp/>reinterpret_cast&lt;uintptr_t&gt;(cur));</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structleveldb_1_1_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structleveldb_1_1_state" kindref="compound">State</ref><sp/>{</highlight></codeline>
<codeline lineno="68" refid="structleveldb_1_1_state_1aa5b0e460a6a87debeb211c47dce8ddd3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_mutex" kindref="compound">port::Mutex</ref><sp/><ref refid="structleveldb_1_1_state_1aa5b0e460a6a87debeb211c47dce8ddd3" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="69" refid="structleveldb_1_1_state_1adfc3479f732e7396e735991e48963981" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_state_1adfc3479f732e7396e735991e48963981" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="70" refid="structleveldb_1_1_state_1a6e84d8550d17c6c3edda2e114a634e61" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_state_1a6e84d8550d17c6c3edda2e114a634e61" kindref="member">num_running</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadBody(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_state" kindref="compound">State</ref>*<sp/>s<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structleveldb_1_1_state" kindref="compound">State</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structleveldb_1_1_state_1aa5b0e460a6a87debeb211c47dce8ddd3" kindref="member">mu</ref>.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structleveldb_1_1_state_1adfc3479f732e7396e735991e48963981" kindref="member">val</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structleveldb_1_1_state_1a6e84d8550d17c6c3edda2e114a634e61" kindref="member">num_running</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structleveldb_1_1_state_1aa5b0e460a6a87debeb211c47dce8ddd3" kindref="member">mu</ref>.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="namespaceleveldb_1a6467cc6adfde18076365ba7809804a0d" refkind="member"><highlight class="normal"><ref refid="namespaceleveldb_1a9c4f7d5038dfc2985100b60ae2549fde" kindref="member">TEST</ref>(<ref refid="classleveldb_1_1_env_posix_test" kindref="compound">EnvPosixTest</ref>,<sp/>StartThread)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_state" kindref="compound">State</ref><sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>state.<ref refid="structleveldb_1_1_state_1adfc3479f732e7396e735991e48963981" kindref="member">val</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>state.<ref refid="structleveldb_1_1_state_1a6e84d8550d17c6c3edda2e114a634e61" kindref="member">num_running</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>-&gt;<ref refid="classleveldb_1_1_env_1a25eafd1622a2cf2a415ee8b2325bc808" kindref="member">StartThread</ref>(&amp;ThreadBody,<sp/>&amp;state);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>state.<ref refid="structleveldb_1_1_state_1aa5b0e460a6a87debeb211c47dce8ddd3" kindref="member">mu</ref>.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>state.<ref refid="structleveldb_1_1_state_1a6e84d8550d17c6c3edda2e114a634e61" kindref="member">num_running</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>state.<ref refid="structleveldb_1_1_state_1aa5b0e460a6a87debeb211c47dce8ddd3" kindref="member">mu</ref>.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" kindref="member">Env::Default</ref>()-&gt;<ref refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312" kindref="member">SleepForMicroseconds</ref>(kDelayMicros);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="testharness_8h_1a9cc34fd87cb865c77439a5d39b3b111b" kindref="member">ASSERT_EQ</ref>(state.<ref refid="structleveldb_1_1_state_1adfc3479f732e7396e735991e48963981" kindref="member">val</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="env__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="env__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1_1test_1a3329162c54a0bff42d41c2ac86b2580a" kindref="member">leveldb::test::RunAllTests</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/util/env_test.cc"/>
  </compounddef>
</doxygen>
