<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="json__spirit__reader_8cpp" kind="file" language="C++">
    <compoundname>json_spirit_reader.cpp</compoundname>
    <includes refid="json__spirit__reader_8h" local="yes">json_spirit_reader.h</includes>
    <includes refid="json__spirit__reader__template_8h" local="yes">json_spirit_reader_template.h</includes>
    <incdepgraph>
      <node id="5719">
        <label>/home/dev/ds-160209/src/json/json_spirit_reader.cpp</label>
        <link refid="json_spirit_reader.cpp"/>
        <childnode refid="5720" relation="include">
        </childnode>
        <childnode refid="5734" relation="include">
        </childnode>
      </node>
      <node id="5737">
        <label>boost/version.hpp</label>
      </node>
      <node id="5730">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="5738">
        <label>boost/spirit/core.hpp</label>
      </node>
      <node id="5732">
        <label>json_spirit_error_position.h</label>
        <link refid="json__spirit__error__position_8h"/>
        <childnode refid="5724" relation="include">
        </childnode>
      </node>
      <node id="5742">
        <label>boost/spirit/iterator/position_iterator.hpp</label>
      </node>
      <node id="5725">
        <label>cassert</label>
      </node>
      <node id="5727">
        <label>stdexcept</label>
      </node>
      <node id="5724">
        <label>string</label>
      </node>
      <node id="5723">
        <label>map</label>
      </node>
      <node id="5734">
        <label>json_spirit_reader_template.h</label>
        <link refid="json__spirit__reader__template_8h"/>
        <childnode refid="5721" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5735" relation="include">
        </childnode>
        <childnode refid="5736" relation="include">
        </childnode>
        <childnode refid="5737" relation="include">
        </childnode>
        <childnode refid="5738" relation="include">
        </childnode>
        <childnode refid="5739" relation="include">
        </childnode>
        <childnode refid="5740" relation="include">
        </childnode>
        <childnode refid="5741" relation="include">
        </childnode>
        <childnode refid="5742" relation="include">
        </childnode>
      </node>
      <node id="5731">
        <label>boost/variant.hpp</label>
      </node>
      <node id="5736">
        <label>boost/function.hpp</label>
      </node>
      <node id="5722">
        <label>vector</label>
      </node>
      <node id="5740">
        <label>boost/spirit/utility/escape_char.hpp</label>
      </node>
      <node id="5726">
        <label>sstream</label>
      </node>
      <node id="5728">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="5733">
        <label>iostream</label>
      </node>
      <node id="5735">
        <label>boost/bind.hpp</label>
      </node>
      <node id="5729">
        <label>boost/config.hpp</label>
      </node>
      <node id="5720">
        <label>json_spirit_reader.h</label>
        <link refid="json__spirit__reader_8h"/>
        <childnode refid="5721" relation="include">
        </childnode>
        <childnode refid="5732" relation="include">
        </childnode>
        <childnode refid="5733" relation="include">
        </childnode>
      </node>
      <node id="5721">
        <label>json_spirit_value.h</label>
        <link refid="json__spirit__value_8h"/>
        <childnode refid="5722" relation="include">
        </childnode>
        <childnode refid="5723" relation="include">
        </childnode>
        <childnode refid="5724" relation="include">
        </childnode>
        <childnode refid="5725" relation="include">
        </childnode>
        <childnode refid="5726" relation="include">
        </childnode>
        <childnode refid="5727" relation="include">
        </childnode>
        <childnode refid="5728" relation="include">
        </childnode>
        <childnode refid="5729" relation="include">
        </childnode>
        <childnode refid="5730" relation="include">
        </childnode>
        <childnode refid="5731" relation="include">
        </childnode>
      </node>
      <node id="5741">
        <label>boost/spirit/iterator/multi_pass.hpp</label>
      </node>
      <node id="5739">
        <label>boost/spirit/utility/confix.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>John<sp/>W.<sp/>Wilkinson<sp/>2007<sp/>-<sp/>2016.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>License,<sp/>see<sp/>accompanying<sp/>file<sp/>LICENSE.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>json<sp/>spirit<sp/>version<sp/>4.03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__spirit__reader_8h" kindref="compound">json_spirit_reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__spirit__reader__template_8h" kindref="compound">json_spirit_reader_template.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacejson__spirit" kindref="compound">json_spirit</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1ad3468273008e225785eda58e04f534fe" kindref="member">read_string</ref>(<sp/>s,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a7c76113cd38b5ca0e5c24024a52116c1" kindref="member">read_string_or_throw</ref>(<sp/>s,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespacejson__spirit_1a0ed9d1adfd2e5a7a0d6513c84c28a319" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a89befb0829356b903a7379244f1c6a12" kindref="member">read_stream</ref>(<sp/>is,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="namespacejson__spirit_1ab9fc7fcf57980ae8cc83d6ceb22813ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1ac36ae8d0e650f1d2cd0f1b1baf83bbbe" kindref="member">read_stream_or_throw</ref>(<sp/>is,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespacejson__spirit_1a5e2c0bb72aebce09905ac59f8622213e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/>std::string::const_iterator&amp;<sp/>begin,<sp/>std::string::const_iterator<sp/>end,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7d872b9b58689ef3797d0b56556a3326" kindref="member">read_range</ref>(<sp/>begin,<sp/>end,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespacejson__spirit_1a3ca4eb69c9f7eeab6ac872059cbcd9c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/>std::string::const_iterator&amp;<sp/>begin,<sp/>std::string::const_iterator<sp/>end,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">Value</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>begin<sp/>=<sp/><ref refid="namespacejson__spirit_1a51fe762aa870e8b669cb7fdde4b8d5a1" kindref="member">read_range_or_throw</ref>(<sp/>begin,<sp/>end,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_NO_STD_WSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacejson__spirit_1a538a172b430526e4eb01135f83a1c1a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;<sp/>s,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1ad3468273008e225785eda58e04f534fe" kindref="member">read_string</ref>(<sp/>s,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespacejson__spirit_1ae08a5a85ec667e48c9600f13feceda76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;<sp/>s,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a7c76113cd38b5ca0e5c24024a52116c1" kindref="member">read_string_or_throw</ref>(<sp/>s,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespacejson__spirit_1aeafe75d70df613cb617a8a9b084fcb0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/>std::wistream&amp;<sp/>is,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a89befb0829356b903a7379244f1c6a12" kindref="member">read_stream</ref>(<sp/>is,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespacejson__spirit_1a398a27db2887002e93564f3ab06b25e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/>std::wistream&amp;<sp/>is,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1ac36ae8d0e650f1d2cd0f1b1baf83bbbe" kindref="member">read_stream_or_throw</ref>(<sp/>is,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="namespacejson__spirit_1ad6621b74ba6446cfda2a18fd1e8aaea4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/>std::wstring::const_iterator&amp;<sp/>begin,<sp/>std::wstring::const_iterator<sp/>end,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7d872b9b58689ef3797d0b56556a3326" kindref="member">read_range</ref>(<sp/>begin,<sp/>end,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="namespacejson__spirit_1ac360d2265e5ac8a0263b7961dc2ea589" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/>std::wstring::const_iterator&amp;<sp/>begin,<sp/>std::wstring::const_iterator<sp/>end,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>begin<sp/>=<sp/><ref refid="namespacejson__spirit_1a51fe762aa870e8b669cb7fdde4b8d5a1" kindref="member">read_range_or_throw</ref>(<sp/>begin,<sp/>end,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="namespacejson__spirit_1a5c5dbf8b42bd01e1bc8b6ee7f6653927" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1ad3468273008e225785eda58e04f534fe" kindref="member">read_string</ref>(<sp/>s,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="namespacejson__spirit_1a6795e273fb7304a083bcb6ad8430cf85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a7c76113cd38b5ca0e5c24024a52116c1" kindref="member">read_string_or_throw</ref>(<sp/>s,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="namespacejson__spirit_1a3be801f0f291800560a2104c66598cde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a89befb0829356b903a7379244f1c6a12" kindref="member">read_stream</ref>(<sp/>is,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="namespacejson__spirit_1ab89d300348df2281cd5f021f19cd02a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1ac36ae8d0e650f1d2cd0f1b1baf83bbbe" kindref="member">read_stream_or_throw</ref>(<sp/>is,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="namespacejson__spirit_1a80aa651af7d7b496a18f80fe591267c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/>std::string::const_iterator&amp;<sp/>begin,<sp/>std::string::const_iterator<sp/>end,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7d872b9b58689ef3797d0b56556a3326" kindref="member">read_range</ref>(<sp/>begin,<sp/>end,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="namespacejson__spirit_1a965fb92985785a8c65837a106f914834" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/>std::string::const_iterator&amp;<sp/>begin,<sp/>std::string::const_iterator<sp/>end,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">mValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>begin<sp/>=<sp/><ref refid="namespacejson__spirit_1a51fe762aa870e8b669cb7fdde4b8d5a1" kindref="member">read_range_or_throw</ref>(<sp/>begin,<sp/>end,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_NO_STD_WSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="namespacejson__spirit_1a40037a316f72030c69378d353352b74a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;<sp/>s,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1ad3468273008e225785eda58e04f534fe" kindref="member">read_string</ref>(<sp/>s,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="namespacejson__spirit_1a2664a86bf770543bf65dd02ae38b5af0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring&amp;<sp/>s,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1a7c76113cd38b5ca0e5c24024a52116c1" kindref="member">read_string_or_throw</ref>(<sp/>s,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="namespacejson__spirit_1a7539d141deb6f3e3e1146d862cd345bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/>std::wistream&amp;<sp/>is,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a89befb0829356b903a7379244f1c6a12" kindref="member">read_stream</ref>(<sp/>is,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="namespacejson__spirit_1afd54d0a469fdbc0fae6ce0ed69db00fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/>std::wistream&amp;<sp/>is,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacejson__spirit_1ac36ae8d0e650f1d2cd0f1b1baf83bbbe" kindref="member">read_stream_or_throw</ref>(<sp/>is,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="namespacejson__spirit_1aab9b4ea73ae430b93c108beee0731f14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7eba64a00505782ab25bba4f2ebe452a" kindref="member">json_spirit::read</ref>(<sp/>std::wstring::const_iterator&amp;<sp/>begin,<sp/>std::wstring::const_iterator<sp/>end,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1a7d872b9b58689ef3797d0b56556a3326" kindref="member">read_range</ref>(<sp/>begin,<sp/>end,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="namespacejson__spirit_1a33ed25ccb0affbd12914186dccda6c49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacejson__spirit_1aa16a84425d592a4be2400dacfc4f29b2" kindref="member">json_spirit::read_or_throw</ref>(<sp/>std::wstring::const_iterator&amp;<sp/>begin,<sp/>std::wstring::const_iterator<sp/>end,<sp/><ref refid="classjson__spirit_1_1_value__impl" kindref="compound">wmValue</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>begin<sp/>=<sp/><ref refid="namespacejson__spirit_1a51fe762aa870e8b669cb7fdde4b8d5a1" kindref="member">read_range_or_throw</ref>(<sp/>begin,<sp/>end,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/json/json_spirit_reader.cpp"/>
  </compounddef>
</doxygen>
