<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_key" kind="class" language="C++" prot="public">
    <compoundname>CKey</compoundname>
    <includes refid="key_8h" local="no">key.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_key_1a78cdd7f831519b5167f6c801f49fa977" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CKey::fValid</definition>
        <argsstring></argsstring>
        <name>fValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_key_1a9e5f8cac8811466c735d7af6f17a0dfe" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CKey::fCompressed</definition>
        <argsstring></argsstring>
        <name>fCompressed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_key_1a07f9e2b043670dfbaa9b7b4e782ed116" prot="private" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char CKey::vch[32]</definition>
        <argsstring>[32]</argsstring>
        <name>vch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="39" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_c_key_1acec869bc75fa8f4d619ab025d367a97c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CKey::Check</definition>
        <argsstring>(const unsigned char *vch)</argsstring>
        <name>Check</name>
        <param>
          <type>const unsigned char *</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="42" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="135" bodyend="137"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_key_1a8f4ca910c7b7e729a3f2a5c59d060d3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CKey::CKey</definition>
        <argsstring>()</argsstring>
        <name>CKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="46" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1afcea34cefd25675f4cf9b03eaa4bb7d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CKey::CKey</definition>
        <argsstring>(const CKey &amp;secret)</argsstring>
        <name>CKey</name>
        <param>
          <type>const <ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>secret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1a57d5b254748cef054c40f99c1c339147" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CKey::~CKey</definition>
        <argsstring>()</argsstring>
        <name>~CKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="57" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1aaa13d5f08456bba094210c5eeabf64c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CKey::Set</definition>
        <argsstring>(const T pbegin, const T pend, bool fCompressedIn)</argsstring>
        <name>Set</name>
        <param>
          <type>const T</type>
          <declname>pbegin</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>pend</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fCompressedIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="68" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="68" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1a6329a38926a8af8112d06da96afbfe39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CKey::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="83" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* CKey::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="84" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1a651d1e10b4085da5e4c4a764f3a384df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* CKey::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="85" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1a62094263b7422a45b45ac508396f19eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CKey::IsValid</definition>
        <argsstring>() const </argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="88" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1abdc7d807f7a1b27ff3ad9dd5164a2273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CKey::IsCompressed</definition>
        <argsstring>() const </argsstring>
        <name>IsCompressed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="91" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1aa62c082c9037565fce02b457cc335e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CKey::SetPrivKey</definition>
        <argsstring>(const CPrivKey &amp;vchPrivKey, bool fCompressed)</argsstring>
        <name>SetPrivKey</name>
        <param>
          <type>const <ref refid="key_8h_1a1da569b8b6e5b3fa1196cc1b877e7f54" kindref="member">CPrivKey</ref> &amp;</type>
          <declname>vchPrivKey</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fCompressed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="94" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="148" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CKey::MakeNewKey</definition>
        <argsstring>(bool fCompressed)</argsstring>
        <name>MakeNewKey</name>
        <param>
          <type>bool</type>
          <declname>fCompressed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="97" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="139" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1ab38813e7091f658612dfb14f17c9e317" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="key_8h_1a1da569b8b6e5b3fa1196cc1b877e7f54" kindref="member">CPrivKey</ref></type>
        <definition>CPrivKey CKey::GetPrivKey</definition>
        <argsstring>() const </argsstring>
        <name>GetPrivKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="101" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="156" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref></type>
        <definition>CPubKey CKey::GetPubKey</definition>
        <argsstring>() const </argsstring>
        <name>GetPubKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="105" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="169" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1a3b161899b4fa79f5a7036d2ccf12ce3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CKey::Sign</definition>
        <argsstring>(const uint256 &amp;hash, std::vector&lt; unsigned char &gt; &amp;vchSig, uint32_t test_case=0) const </argsstring>
        <name>Sign</name>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>test_case</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a DER-serialized signature. The test_case parameter tweaks the deterministic nonce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="111" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="182" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1a59afeabf3f63d99dfdbd3722087853a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CKey::SignCompact</definition>
        <argsstring>(const uint256 &amp;hash, std::vector&lt; unsigned char &gt; &amp;vchSig) const </argsstring>
        <name>SignCompact</name>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vchSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="118" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="211" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1abb0091d4390dcece3c56ea4c1fdd6036" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CKey::Derive</definition>
        <argsstring>(CKey &amp;keyChild, unsigned char ccChild[32], unsigned int nChild, const unsigned char cc[32]) const </argsstring>
        <name>Derive</name>
        <param>
          <type><ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>keyChild</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ccChild</declname>
          <array>[32]</array>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nChild</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>cc</declname>
          <array>[32]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="121" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="238" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1a3890764f7a2e5d9cdeffb3e102e4545d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CKey::VerifyPubKey</definition>
        <argsstring>(const CPubKey &amp;vchPubKey) const </argsstring>
        <name>VerifyPubKey</name>
        <param>
          <type>const <ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>vchPubKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify thoroughly whether a private key and a public key match. This is done using a different mechanism than just regenerating it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="127" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="197" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_c_key_1a141751588f8bfe5f1b6fc27f4e64b63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CKey::Load</definition>
        <argsstring>(CPrivKey &amp;privkey, CPubKey &amp;vchPubKey, bool fSkipCheck)</argsstring>
        <name>Load</name>
        <param>
          <type><ref refid="key_8h_1a1da569b8b6e5b3fa1196cc1b877e7f54" kindref="member">CPrivKey</ref> &amp;</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref> &amp;</type>
          <declname>vchPubKey</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fSkipCheck</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="130" column="1" bodyfile="/home/dev/ds-160209/src/key.cpp" bodystart="226" bodyend="236"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_c_key_1a381efd9184dc467e73e690329c70371d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CKey &amp;a, const CKey &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_key" kindref="compound">CKey</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="61" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="61" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_c_key_1a625c363d9adfbd4dda22f3a67a898cf4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool CKey::CheckSignatureElement</definition>
        <argsstring>(const unsigned char *vch, int len, bool half)</argsstring>
        <name>CheckSignatureElement</name>
        <param>
          <type>const unsigned char *</type>
          <declname>vch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>half</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/key.h" line="133" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An encapsulated private key. </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/key.h" line="29" column="1" bodyfile="/home/dev/ds-160209/src/key.h" bodystart="29" bodyend="134"/>
    <listofallmembers>
      <member refid="class_c_key_1aabd29e0d5faf30032cc8519a1ce62a5a" prot="public" virt="non-virtual"><scope>CKey</scope><name>begin</name></member>
      <member refid="class_c_key_1acec869bc75fa8f4d619ab025d367a97c" prot="private" virt="non-virtual"><scope>CKey</scope><name>Check</name></member>
      <member refid="class_c_key_1a625c363d9adfbd4dda22f3a67a898cf4" prot="public" virt="non-virtual"><scope>CKey</scope><name>CheckSignatureElement</name></member>
      <member refid="class_c_key_1a8f4ca910c7b7e729a3f2a5c59d060d3d" prot="public" virt="non-virtual"><scope>CKey</scope><name>CKey</name></member>
      <member refid="class_c_key_1afcea34cefd25675f4cf9b03eaa4bb7d9" prot="public" virt="non-virtual"><scope>CKey</scope><name>CKey</name></member>
      <member refid="class_c_key_1abb0091d4390dcece3c56ea4c1fdd6036" prot="public" virt="non-virtual"><scope>CKey</scope><name>Derive</name></member>
      <member refid="class_c_key_1a651d1e10b4085da5e4c4a764f3a384df" prot="public" virt="non-virtual"><scope>CKey</scope><name>end</name></member>
      <member refid="class_c_key_1a9e5f8cac8811466c735d7af6f17a0dfe" prot="private" virt="non-virtual"><scope>CKey</scope><name>fCompressed</name></member>
      <member refid="class_c_key_1a78cdd7f831519b5167f6c801f49fa977" prot="private" virt="non-virtual"><scope>CKey</scope><name>fValid</name></member>
      <member refid="class_c_key_1ab38813e7091f658612dfb14f17c9e317" prot="public" virt="non-virtual"><scope>CKey</scope><name>GetPrivKey</name></member>
      <member refid="class_c_key_1ae4b61da6ec62f676fe6362ac5fc26aca" prot="public" virt="non-virtual"><scope>CKey</scope><name>GetPubKey</name></member>
      <member refid="class_c_key_1abdc7d807f7a1b27ff3ad9dd5164a2273" prot="public" virt="non-virtual"><scope>CKey</scope><name>IsCompressed</name></member>
      <member refid="class_c_key_1a62094263b7422a45b45ac508396f19eb" prot="public" virt="non-virtual"><scope>CKey</scope><name>IsValid</name></member>
      <member refid="class_c_key_1a141751588f8bfe5f1b6fc27f4e64b63f" prot="public" virt="non-virtual"><scope>CKey</scope><name>Load</name></member>
      <member refid="class_c_key_1a9d12ed9d297e4286250fd7ea6b59e1a5" prot="public" virt="non-virtual"><scope>CKey</scope><name>MakeNewKey</name></member>
      <member refid="class_c_key_1a381efd9184dc467e73e690329c70371d" prot="public" virt="non-virtual"><scope>CKey</scope><name>operator==</name></member>
      <member refid="class_c_key_1aaa13d5f08456bba094210c5eeabf64c8" prot="public" virt="non-virtual"><scope>CKey</scope><name>Set</name></member>
      <member refid="class_c_key_1aa62c082c9037565fce02b457cc335e7b" prot="public" virt="non-virtual"><scope>CKey</scope><name>SetPrivKey</name></member>
      <member refid="class_c_key_1a3b161899b4fa79f5a7036d2ccf12ce3a" prot="public" virt="non-virtual"><scope>CKey</scope><name>Sign</name></member>
      <member refid="class_c_key_1a59afeabf3f63d99dfdbd3722087853a1" prot="public" virt="non-virtual"><scope>CKey</scope><name>SignCompact</name></member>
      <member refid="class_c_key_1a6329a38926a8af8112d06da96afbfe39" prot="public" virt="non-virtual"><scope>CKey</scope><name>size</name></member>
      <member refid="class_c_key_1a07f9e2b043670dfbaa9b7b4e782ed116" prot="private" virt="non-virtual"><scope>CKey</scope><name>vch</name></member>
      <member refid="class_c_key_1a3890764f7a2e5d9cdeffb3e102e4545d" prot="public" virt="non-virtual"><scope>CKey</scope><name>VerifyPubKey</name></member>
      <member refid="class_c_key_1a57d5b254748cef054c40f99c1c339147" prot="public" virt="non-virtual"><scope>CKey</scope><name>~CKey</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
