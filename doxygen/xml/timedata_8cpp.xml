<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="timedata_8cpp" kind="file" language="C++">
    <compoundname>timedata.cpp</compoundname>
    <includes refid="timedata_8h" local="yes">timedata.h</includes>
    <includes refid="netbase_8h" local="yes">netbase.h</includes>
    <includes refid="sync_8h" local="yes">sync.h</includes>
    <includes refid="ui__interface_8h" local="yes">ui_interface.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes local="no">boost/foreach.hpp</includes>
    <incdepgraph>
      <node id="56209">
        <label>list</label>
      </node>
      <node id="56177">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="56188">
        <label>netinet/in.h</label>
      </node>
      <node id="56199">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="56164" relation="include">
        </childnode>
        <childnode refid="56175" relation="include">
        </childnode>
        <childnode refid="56162" relation="include">
        </childnode>
      </node>
      <node id="56189">
        <label>arpa/inet.h</label>
      </node>
      <node id="56195">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="56168">
        <label>limits</label>
      </node>
      <node id="56220">
        <label>openssl/rand.h</label>
      </node>
      <node id="56172">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="56187">
        <label>net/if.h</label>
      </node>
      <node id="56197">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="56181">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="56182" relation="include">
        </childnode>
        <childnode refid="56162" relation="include">
        </childnode>
      </node>
      <node id="56178">
        <label>sys/mman.h</label>
      </node>
      <node id="56175">
        <label>stdlib.h</label>
      </node>
      <node id="56222">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="56219">
        <label>openssl/crypto.h</label>
      </node>
      <node id="56183">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="56184" relation="include">
        </childnode>
        <childnode refid="56178" relation="include">
        </childnode>
        <childnode refid="56185" relation="include">
        </childnode>
        <childnode refid="56186" relation="include">
        </childnode>
        <childnode refid="56187" relation="include">
        </childnode>
        <childnode refid="56188" relation="include">
        </childnode>
        <childnode refid="56189" relation="include">
        </childnode>
        <childnode refid="56190" relation="include">
        </childnode>
        <childnode refid="56179" relation="include">
        </childnode>
        <childnode refid="56191" relation="include">
        </childnode>
        <childnode refid="56180" relation="include">
        </childnode>
        <childnode refid="56192" relation="include">
        </childnode>
      </node>
      <node id="56215">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="56192">
        <label>errno.h</label>
      </node>
      <node id="56167">
        <label>cassert</label>
      </node>
      <node id="56208">
        <label>stdexcept</label>
      </node>
      <node id="56202">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="56186" relation="include">
        </childnode>
        <childnode refid="56203" relation="include">
        </childnode>
        <childnode refid="56204" relation="include">
        </childnode>
        <childnode refid="56164" relation="include">
        </childnode>
        <childnode refid="56205" relation="include">
        </childnode>
        <childnode refid="56199" relation="include">
        </childnode>
        <childnode refid="56165" relation="include">
        </childnode>
        <childnode refid="56209" relation="include">
        </childnode>
        <childnode refid="56210" relation="include">
        </childnode>
        <childnode refid="56163" relation="include">
        </childnode>
        <childnode refid="56162" relation="include">
        </childnode>
        <childnode refid="56211" relation="include">
        </childnode>
        <childnode refid="56212" relation="include">
        </childnode>
        <childnode refid="56213" relation="include">
        </childnode>
        <childnode refid="56214" relation="include">
        </childnode>
        <childnode refid="56215" relation="include">
        </childnode>
        <childnode refid="56216" relation="include">
        </childnode>
        <childnode refid="56217" relation="include">
        </childnode>
        <childnode refid="56218" relation="include">
        </childnode>
        <childnode refid="56219" relation="include">
        </childnode>
        <childnode refid="56220" relation="include">
        </childnode>
        <childnode refid="56221" relation="include">
        </childnode>
        <childnode refid="56160" relation="include">
        </childnode>
      </node>
      <node id="56214">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="56162">
        <label>string</label>
      </node>
      <node id="56165">
        <label>map</label>
      </node>
      <node id="56211">
        <label>boost/thread.hpp</label>
      </node>
      <node id="56198">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="56199" relation="include">
        </childnode>
        <childnode refid="56200" relation="include">
        </childnode>
        <childnode refid="56201" relation="include">
        </childnode>
        <childnode refid="56162" relation="include">
        </childnode>
        <childnode refid="56160" relation="include">
        </childnode>
      </node>
      <node id="56191">
        <label>netdb.h</label>
      </node>
      <node id="56184">
        <label>sys/fcntl.h</label>
      </node>
      <node id="56164">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="56162" relation="include">
        </childnode>
        <childnode refid="56163" relation="include">
        </childnode>
        <childnode refid="56165" relation="include">
        </childnode>
        <childnode refid="56166" relation="include">
        </childnode>
        <childnode refid="56167" relation="include">
        </childnode>
        <childnode refid="56168" relation="include">
        </childnode>
        <childnode refid="56160" relation="include">
        </childnode>
        <childnode refid="56169" relation="include">
        </childnode>
        <childnode refid="56170" relation="include">
        </childnode>
        <childnode refid="56171" relation="include">
        </childnode>
        <childnode refid="56172" relation="include">
        </childnode>
        <childnode refid="56173" relation="include">
        </childnode>
        <childnode refid="56181" relation="include">
        </childnode>
      </node>
      <node id="56179">
        <label>limits.h</label>
      </node>
      <node id="56194">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="56204">
        <label>sys/resource.h</label>
      </node>
      <node id="56158">
        <label>/home/dev/ds-160209/src/timedata.cpp</label>
        <link refid="timedata.cpp"/>
        <childnode refid="56159" relation="include">
        </childnode>
        <childnode refid="56161" relation="include">
        </childnode>
        <childnode refid="56193" relation="include">
        </childnode>
        <childnode refid="56198" relation="include">
        </childnode>
        <childnode refid="56202" relation="include">
        </childnode>
        <childnode refid="56222" relation="include">
        </childnode>
      </node>
      <node id="56216">
        <label>openssl/bio.h</label>
      </node>
      <node id="56201">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="56161">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="56162" relation="include">
        </childnode>
        <childnode refid="56163" relation="include">
        </childnode>
        <childnode refid="56164" relation="include">
        </childnode>
        <childnode refid="56183" relation="include">
        </childnode>
      </node>
      <node id="56190">
        <label>ifaddrs.h</label>
      </node>
      <node id="56186">
        <label>sys/types.h</label>
      </node>
      <node id="56176">
        <label>string.h</label>
      </node>
      <node id="56182">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="56170">
        <label>cstdio</label>
      </node>
      <node id="56196">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="56218">
        <label>openssl/buffer.h</label>
      </node>
      <node id="56171">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="56213">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="56180">
        <label>unistd.h</label>
      </node>
      <node id="56163">
        <label>vector</label>
      </node>
      <node id="56212">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="56210">
        <label>utility</label>
      </node>
      <node id="56207">
        <label>sstream</label>
      </node>
      <node id="56200">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="56217">
        <label>openssl/evp.h</label>
      </node>
      <node id="56205">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="56167" relation="include">
        </childnode>
        <childnode refid="56206" relation="include">
        </childnode>
        <childnode refid="56207" relation="include">
        </childnode>
        <childnode refid="56208" relation="include">
        </childnode>
      </node>
      <node id="56160">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="56203">
        <label>sys/time.h</label>
      </node>
      <node id="56206">
        <label>iostream</label>
      </node>
      <node id="56185">
        <label>sys/socket.h</label>
      </node>
      <node id="56221">
        <label>openssl/bn.h</label>
      </node>
      <node id="56159">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="56160" relation="include">
        </childnode>
      </node>
      <node id="56173">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="56174" relation="include">
        </childnode>
        <childnode refid="56176" relation="include">
        </childnode>
        <childnode refid="56162" relation="include">
        </childnode>
        <childnode refid="56177" relation="include">
        </childnode>
        <childnode refid="56165" relation="include">
        </childnode>
        <childnode refid="56178" relation="include">
        </childnode>
        <childnode refid="56179" relation="include">
        </childnode>
        <childnode refid="56180" relation="include">
        </childnode>
      </node>
      <node id="56166">
        <label>set</label>
      </node>
      <node id="56174">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="56175" relation="include">
        </childnode>
      </node>
      <node id="56169">
        <label>cstring</label>
      </node>
      <node id="56193">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="56194" relation="include">
        </childnode>
        <childnode refid="56195" relation="include">
        </childnode>
        <childnode refid="56196" relation="include">
        </childnode>
        <childnode refid="56177" relation="include">
        </childnode>
        <childnode refid="56197" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="timedata_8cpp_1a29e0bd894d7af0d55221d6ed0dfd0ad6" prot="public" static="no">
        <name>DARKSILK_TIMEDATA_MAX_SAMPLES</name>
        <initializer>200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/timedata.cpp" line="38" column="9" bodyfile="/home/dev/ds-160209/src/timedata.cpp" bodystart="38" bodyend="-1"/>
        <referencedby refid="timedata_8h_1ad8af089fc8835e11c7d77f6b473fccae" compoundref="timedata_8cpp" startline="40" endline="111">AddTimeData</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="timedata_8cpp_1ab0a28249575bce250ba98b6b82d2942e" prot="public" static="yes" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_nTimeOffset</definition>
        <argsstring></argsstring>
        <name>cs_nTimeOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/timedata.cpp" line="16" column="1" bodyfile="/home/dev/ds-160209/src/timedata.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timedata_8cpp_1af9b8f3d7f6fc349e8c8fffb2733896c5" prot="public" static="yes" mutable="no">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t nTimeOffset</definition>
        <argsstring></argsstring>
        <name>nTimeOffset</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/timedata.cpp" line="17" column="1" bodyfile="/home/dev/ds-160209/src/timedata.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="timedata_8cpp_1a50ca5344c75631267633f15cfe5e983e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetTimeOffset</definition>
        <argsstring>()</argsstring>
        <name>GetTimeOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/timedata.cpp" line="27" column="1" bodyfile="/home/dev/ds-160209/src/timedata.cpp" bodystart="27" bodyend="31"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <referencedby refid="rpcmisc_8cpp_1a70335b93783d51e48d276a1e08bd721a" compoundref="rpcmisc_8cpp" startline="34" endline="81">getinfo</referencedby>
        <referencedby refid="rpcnet_8cpp_1a3a10a507386b9bbcc48ebd3004bfe58a" compoundref="rpcnet_8cpp" startline="338" endline="398">getnetworkinfo</referencedby>
        <referencedby refid="timedata_8h_1a09f81b9c7650f898cf3cf305b87547e6" compoundref="timedata_8cpp" startline="33" endline="36">GetAdjustedTime</referencedby>
      </memberdef>
      <memberdef kind="function" id="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>int64_t GetAdjustedTime</definition>
        <argsstring>()</argsstring>
        <name>GetAdjustedTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/timedata.cpp" line="33" column="1" bodyfile="/home/dev/ds-160209/src/timedata.cpp" bodystart="33" bodyend="36"/>
        <references refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" compoundref="util_8cpp" startline="1352" endline="1357">GetTime</references>
        <references refid="timedata_8cpp_1a50ca5344c75631267633f15cfe5e983e" compoundref="timedata_8cpp" startline="27" endline="31">GetTimeOffset</references>
        <referencedby refid="class_c_addr_man_1a9dd6df8b1904548a86054d19d4a90724" compoundref="addrman_8cpp" startline="311" endline="366">CAddrMan::Add_</referencedby>
        <referencedby refid="class_c_alert_1a00a8ae5ba7bc54ac7943558c33021190" compoundref="alert_8cpp" startline="104" endline="107">CAlert::IsInEffect</referencedby>
        <referencedby refid="class_c_alert_1ae89d673f6f1285eefcc343b3c029dab5" compoundref="alert_8cpp" startline="129" endline="148">CAlert::RelayTo</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="class_c_disk_block_index_1adbe404c55c68be782360b4594d355fad" compoundref="chain_8h" startline="391" endline="407">CDiskBlockIndex::GetBlockHash</referencedby>
        <referencedby refid="main_8cpp_1acd163a09d0e4384ebe85dead57730dd7" compoundref="main_8cpp" startline="569" endline="663">IsStandardTx</referencedby>
        <referencedby refid="main_8h_1aa7ca31ac11bff224c6b0ac27fccce7b5" compoundref="main_8cpp" startline="665" endline="681">IsFinalTx</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="net_8h_1af0cb3bbd4d42cac8723e22004ffb43af" compoundref="net_8cpp" startline="133" endline="144">GetLocalAddress</referencedby>
        <referencedby refid="net_8h_1a57ffc895ab641207e0eb30fd7e00a585" compoundref="net_8cpp" startline="378" endline="443">ConnectNode</referencedby>
        <referencedby refid="class_c_node_1a4dbfe4f6c1fd162aaa905e4bd201d536" compoundref="net_8cpp" startline="465" endline="475">CNode::PushVersion</referencedby>
        <referencedby refid="net_8cpp_1a3b4720330e61127963a43df26b80f804" compoundref="net_8cpp" startline="1339" endline="1441">ThreadOpenConnections</referencedby>
        <referencedby refid="class_c_block_1a71bb61e73b1ab6b7d4e1867a0d3a2cf8" compoundref="block_8cpp" startline="52" endline="55">CBlock::UpdateTime</referencedby>
        <referencedby refid="struct_c_mutable_transaction_1a496bf823977ef8b178f5128b0f28dcb5" compoundref="transaction_8cpp" startline="112" endline="120">CMutableTransaction::CMutableTransaction</referencedby>
        <referencedby refid="class_c_transaction_1a1aa7a38971e9c045b12a3efab67647e9" compoundref="transaction_8h" startline="294" endline="302">CTransaction::SetNull</referencedby>
        <referencedby refid="class_transaction_record_1a9b643dd885a790ae511705a1446556be" compoundref="transactionrecord_8cpp" startline="165" endline="249">TransactionRecord::updateStatus</referencedby>
        <referencedby refid="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" compoundref="rpcmining_8cpp" startline="150" endline="234">checkkernel</referencedby>
        <referencedby refid="rpcmining_8cpp_1aa40f86dc468a3f2ef4a3bba99e20a069" compoundref="rpcmining_8cpp" startline="236" endline="360">getworkex</referencedby>
        <referencedby refid="rpcnet_8cpp_1a89a8e338923aea165bb7d8d572d76203" compoundref="rpcnet_8cpp" startline="244" endline="301">sendalert</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a7dcb5aa63b46944bc4874719c8e1db15" compoundref="rpcwallet_8cpp" startline="854" endline="919">movecmd</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
        <referencedby refid="class_c_budget_vote_1ae6c7bba44af43bbeb1a33f830e0b352e" compoundref="stormnode-budget_8cpp" startline="1585" endline="1593">CBudgetVote::CBudgetVote</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1adc08bd33a9dde17ab5617d99d1f94f89" compoundref="stormnode-budget_8cpp" startline="1986" endline="1994">CFinalizedBudgetVote::CFinalizedBudgetVote</referencedby>
        <referencedby refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" compoundref="stormnode_8cpp" startline="59" endline="79">CStormnode::CStormnode</referencedby>
        <referencedby refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" compoundref="stormnode_8cpp" startline="228" endline="244">CStormnode::SecondsSincePayment</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" compoundref="stormnode_8cpp" startline="291" endline="309">CStormnodeBroadcast::CStormnodeBroadcast</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" compoundref="stormnode_8cpp" startline="515" endline="537">CStormnodeBroadcast::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1a6c1ab32c3bb00188b9328e3b923198df" compoundref="stormnode_8cpp" startline="547" endline="554">CStormnodePing::CStormnodePing</referencedby>
        <referencedby refid="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" compoundref="stormnode_8cpp" startline="557" endline="576">CStormnodePing::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" compoundref="stormnode_8cpp" startline="578" endline="664">CStormnodePing::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_1a01713cf27e8c36c1677a5e3bad2674b5" compoundref="stormnode_8h" startline="222" endline="225">CStormnode::IsBroadcastedWithin</referencedby>
        <referencedby refid="class_c_stormnode_1a5f19595c1ccbb539f2d369871671ab70" compoundref="stormnode_8h" startline="227" endline="234">CStormnode::IsPingedWithin</referencedby>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
        <referencedby refid="class_c_wallet_1adf34c789fd6eab1eeed22ef16837f558" compoundref="wallet_8cpp" startline="644" endline="761">CWallet::AddToWallet</referencedby>
      </memberdef>
      <memberdef kind="function" id="timedata_8cpp_1ac2624434f4891e8d74f9b13ec91f95d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddTimeData</definition>
        <argsstring>(const CNetAddr &amp;ip, int64_t nOffsetSample)</argsstring>
        <name>AddTimeData</name>
        <param>
          <type>const <ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref> &amp;</type>
          <declname>ip</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
          <declname>nOffsetSample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/timedata.cpp" line="40" column="1" bodyfile="/home/dev/ds-160209/src/timedata.cpp" bodystart="40" bodyend="111"/>
        <references refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" compoundref="sync_8h" startline="159">LOCK</references>
        <references refid="timedata_8cpp_1a29e0bd894d7af0d55221d6ed0dfd0ad6" compoundref="timedata_8cpp" startline="38">DARKSILK_TIMEDATA_MAX_SAMPLES</references>
        <references refid="class_c_median_filter_1ae10cde98866b034ec73c530be4c60874" compoundref="util_8h" startline="520" endline="531">CMedianFilter&lt; T &gt;::input</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" compoundref="util_8h" startline="547" endline="550">CMedianFilter&lt; T &gt;::size</references>
        <references refid="class_c_median_filter_1aab6b67fbb63024c462bfa30bbe789c31" compoundref="util_8h" startline="533" endline="545">CMedianFilter&lt; T &gt;::median</references>
        <references refid="class_c_median_filter_1afbfe7258f17cec5cc7f2f105d03b0567" compoundref="util_8h" startline="552" endline="555">CMedianFilter&lt; T &gt;::sorted</references>
        <references refid="util_8h_1a351cbd451bee96e6badbaa284ba3c614" compoundref="util_8h" startline="330" endline="333">abs64</references>
        <references refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" compoundref="ui__interface_8h" startline="117" endline="121">_</references>
        <references refid="util_8cpp_1a396fd0b4e52260e1ddf379fa6e09d887" compoundref="util_8cpp" startline="104">strMiscWarning</references>
        <references refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" compoundref="init_8cpp" startline="52">uiInterface</references>
        <references refid="class_c_client_u_i_interface_1ab3f23c730300df11cf9ff369fbae0635" compoundref="ui__interface_8h" startline="78">CClientUIInterface::ThreadSafeMessageBox</references>
        <references refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1a72b206c5d6304b4e2257281a5ca551eb" compoundref="ui__interface_8h" startline="73">CClientUIInterface::MSG_WARNING</references>
        <references refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" compoundref="util_8cpp" startline="96">fDebug</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016<sp/>The<sp/>Bitcoin<sp/>Developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timedata_8h" kindref="compound">timedata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="netbase_8h" kindref="compound">netbase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sync_8h" kindref="compound">sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui__interface_8h" kindref="compound">ui_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/foreach.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/>cs_nTimeOffset;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nTimeOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Never<sp/>go<sp/>to<sp/>sea<sp/>with<sp/>two<sp/>chronometers;<sp/>take<sp/>one<sp/>or<sp/>three.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>three<sp/>time<sp/>sources<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>System<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>Median<sp/>of<sp/>other<sp/>nodes<sp/>clocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>The<sp/>user<sp/>(asking<sp/>the<sp/>user<sp/>to<sp/>fix<sp/>the<sp/>system<sp/>clock<sp/>if<sp/>the<sp/>first<sp/>two<sp/>disagree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="timedata_8h_1a50ca5344c75631267633f15cfe5e983e" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="timedata_8cpp_1a50ca5344c75631267633f15cfe5e983e" kindref="member">GetTimeOffset</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_nTimeOffset);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTimeOffset;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="timedata_8h_1a09f81b9c7650f898cf3cf305b87547e6" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>+<sp/><ref refid="timedata_8cpp_1a50ca5344c75631267633f15cfe5e983e" kindref="member">GetTimeOffset</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="timedata_8cpp_1a29e0bd894d7af0d55221d6ed0dfd0ad6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DARKSILK_TIMEDATA_MAX_SAMPLES<sp/>200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="timedata_8h_1ad8af089fc8835e11c7d77f6b473fccae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timedata_8cpp_1ac2624434f4891e8d74f9b13ec91f95d2" kindref="member">AddTimeData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_net_addr" kindref="compound">CNetAddr</ref>&amp;<sp/>ip,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nOffsetSample)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_nTimeOffset);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>duplicates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>set&lt;CNetAddr&gt;<sp/>setKnown;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setKnown.size()<sp/>==<sp/><ref refid="timedata_8cpp_1a29e0bd894d7af0d55221d6ed0dfd0ad6" kindref="member">DARKSILK_TIMEDATA_MAX_SAMPLES</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!setKnown.insert(ip).second)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_median_filter" kindref="compound">CMedianFilter&lt;int64_t&gt;</ref><sp/>vTimeOffsets(<ref refid="timedata_8cpp_1a29e0bd894d7af0d55221d6ed0dfd0ad6" kindref="member">DARKSILK_TIMEDATA_MAX_SAMPLES</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>vTimeOffsets.<ref refid="class_c_median_filter_1ae10cde98866b034ec73c530be4c60874" kindref="member">input</ref>(nOffsetSample);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Added<sp/>time<sp/>data,<sp/>samples<sp/>%d,<sp/>offset<sp/>%+d<sp/>(%+d<sp/>minutes)\n&quot;</highlight><highlight class="normal">,<sp/>vTimeOffsets.<ref refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" kindref="member">size</ref>(),<sp/>nOffsetSample,<sp/>nOffsetSample/60);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>a<sp/>known<sp/>issue<sp/>here<sp/>(see<sp/>issue<sp/>#4521):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>structure<sp/>vTimeOffsets<sp/>contains<sp/>up<sp/>to<sp/>200<sp/>elements,<sp/>after<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>new<sp/>element<sp/>added<sp/>to<sp/>it<sp/>will<sp/>not<sp/>increase<sp/>its<sp/>size,<sp/>replacing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>oldest<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>condition<sp/>to<sp/>update<sp/>nTimeOffset<sp/>includes<sp/>checking<sp/>whether<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>vTimeOffsets<sp/>is<sp/>odd,<sp/>which<sp/>will<sp/>never<sp/>happen<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>are<sp/>200<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>in<sp/>this<sp/>case<sp/>the<sp/>&apos;bug&apos;<sp/>is<sp/>protective<sp/>against<sp/>some<sp/>attacks,<sp/>and<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>explain<sp/>why<sp/>we&apos;ve<sp/>never<sp/>seen<sp/>attacks<sp/>which<sp/>manipulate<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clock<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>should<sp/>hold<sp/>off<sp/>on<sp/>fixing<sp/>this<sp/>and<sp/>clean<sp/>it<sp/>up<sp/>as<sp/>part<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>timing<sp/>cleanup<sp/>that<sp/>strengthens<sp/>it<sp/>in<sp/>a<sp/>number<sp/>of<sp/>other<sp/>ways.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vTimeOffsets.<ref refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" kindref="member">size</ref>()<sp/>&gt;=<sp/>5<sp/>&amp;&amp;<sp/>vTimeOffsets.<ref refid="class_c_median_filter_1a0791303910a3a11adbc127f9fe4e3a9e" kindref="member">size</ref>()<sp/>%<sp/>2<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nMedian<sp/>=<sp/>vTimeOffsets.<ref refid="class_c_median_filter_1aab6b67fbb63024c462bfa30bbe789c31" kindref="member">median</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>vSorted<sp/>=<sp/>vTimeOffsets.<ref refid="class_c_median_filter_1afbfe7258f17cec5cc7f2f105d03b0567" kindref="member">sorted</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>let<sp/>other<sp/>nodes<sp/>change<sp/>our<sp/>time<sp/>by<sp/>so<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8h_1a351cbd451bee96e6badbaa284ba3c614" kindref="member">abs64</ref>(nMedian)<sp/>&lt;<sp/>70<sp/>*<sp/>60)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeOffset<sp/>=<sp/>nMedian;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDone;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fDone)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>nobody<sp/>has<sp/>a<sp/>time<sp/>different<sp/>than<sp/>ours<sp/>but<sp/>within<sp/>5<sp/>minutes<sp/>of<sp/>ours,<sp/>give<sp/>a<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fMatch<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nOffset,<sp/>vSorted)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nOffset<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="util_8h_1a351cbd451bee96e6badbaa284ba3c614" kindref="member">abs64</ref>(nOffset)<sp/>&lt;<sp/>5<sp/>*<sp/>60)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMatch<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fMatch)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strMessage<sp/>=<sp/><ref refid="ui__interface_8h_1aad133bb6103b53cebf03fd01e2f11ba1" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>Please<sp/>check<sp/>that<sp/>your<sp/>computer&apos;s<sp/>date<sp/>and<sp/>time<sp/>are<sp/>correct!<sp/>If<sp/>your<sp/>clock<sp/>is<sp/>wrong<sp/>DarkSilk<sp/>will<sp/>not<sp/>work<sp/>properly.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8cpp_1a396fd0b4e52260e1ddf379fa6e09d887" kindref="member">strMiscWarning</ref><sp/>=<sp/>strMessage;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;***<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strMessage);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="init_8cpp_1a4fe31b510fc1c2b95321cedb9f89e8de" kindref="member">uiInterface</ref>.<ref refid="class_c_client_u_i_interface_1ab3f23c730300df11cf9ff369fbae0635" kindref="member">ThreadSafeMessageBox</ref>(strMessage,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_client_u_i_interface_1a568cf07ecac3fac224d63b42a32e8bc1a72b206c5d6304b4e2257281a5ca551eb" kindref="member">CClientUIInterface::MSG_WARNING</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util_8cpp_1a2ba7badc843121dde40a6f109d224a42" kindref="member">fDebug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>n,<sp/>vSorted)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%+d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;|<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;nTimeOffset<sp/>=<sp/>%+d<sp/><sp/>(%+d<sp/>minutes)\n&quot;</highlight><highlight class="normal">,<sp/>nTimeOffset,<sp/>nTimeOffset/60);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/timedata.cpp"/>
  </compounddef>
</doxygen>
