<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classmruset" kind="class" language="C++" prot="public">
    <compoundname>mruset</compoundname>
    <includes refid="mruset_8h" local="no">mruset.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmruset_1a282941ee7f0438b0c09274b10c78cda0" prot="public" static="no">
        <type>T</type>
        <definition>typedef T mruset&lt; T &gt;::key_type</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="14" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmruset_1a834c3e7f8e9cf615ebe27752443f9a3a" prot="public" static="no">
        <type>T</type>
        <definition>typedef T mruset&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="15" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmruset_1a246172eda1afff45be47a013c14b1ad6" prot="public" static="no">
        <type>std::set&lt; T &gt;::<ref refid="classmruset_1a246172eda1afff45be47a013c14b1ad6" kindref="member">iterator</ref></type>
        <definition>typedef std::set&lt;T&gt;::iterator mruset&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="16" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmruset_1a74c77f7642e8e4db7cc79991c4345692" prot="public" static="no">
        <type>std::set&lt; T &gt;::<ref refid="classmruset_1a74c77f7642e8e4db7cc79991c4345692" kindref="member">const_iterator</ref></type>
        <definition>typedef std::set&lt;T&gt;::const_iterator mruset&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="17" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmruset_1aaee46af18d8a5bdc503e9570e499a335" prot="public" static="no">
        <type>std::set&lt; T &gt;::<ref refid="classmruset_1aaee46af18d8a5bdc503e9570e499a335" kindref="member">size_type</ref></type>
        <definition>typedef std::set&lt;T&gt;::size_type mruset&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="18" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmruset_1a4981fc3556b61600418b2ddad98cc685" prot="protected" static="no" mutable="no">
        <type>std::set&lt; T &gt;</type>
        <definition>std::set&lt;T&gt; mruset&lt; T &gt;::set</definition>
        <argsstring></argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="21" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmruset_1a6be1fe81dc472e25e160911288373663" prot="protected" static="no" mutable="no">
        <type>std::deque&lt; T &gt;</type>
        <definition>std::deque&lt;T&gt; mruset&lt; T &gt;::queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="22" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmruset_1a6d3d6963e3ca5689e846b12a29dd09ab" prot="protected" static="no" mutable="no">
        <type><ref refid="classmruset_1aaee46af18d8a5bdc503e9570e499a335" kindref="member">size_type</ref></type>
        <definition>size_type mruset&lt; T &gt;::nMaxSize</definition>
        <argsstring></argsstring>
        <name>nMaxSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="23" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmruset_1a708b11a33448c283f6f4c8e18fd3098f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mruset&lt; T &gt;::mruset</definition>
        <argsstring>(size_type nMaxSizeIn=0)</argsstring>
        <name>mruset</name>
        <param>
          <type><ref refid="classmruset_1aaee46af18d8a5bdc503e9570e499a335" kindref="member">size_type</ref></type>
          <declname>nMaxSizeIn</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="26" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1acaa144dd3b3c3b9999254b6fcc37be5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmruset_1a246172eda1afff45be47a013c14b1ad6" kindref="member">iterator</ref></type>
        <definition>iterator mruset&lt; T &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="27" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1ab52cef4e172f0a8428451ac3cc2e3033" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmruset_1a246172eda1afff45be47a013c14b1ad6" kindref="member">iterator</ref></type>
        <definition>iterator mruset&lt; T &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="28" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1a7739fdd19c7f28ccfa5565969106c3a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmruset_1aaee46af18d8a5bdc503e9570e499a335" kindref="member">size_type</ref></type>
        <definition>size_type mruset&lt; T &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="29" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1a3dc4b001997d723fd8c79134ac54574f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mruset&lt; T &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="30" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1a030a8b36c8c34ae7b7b30cc0b0204bfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmruset_1a246172eda1afff45be47a013c14b1ad6" kindref="member">iterator</ref></type>
        <definition>iterator mruset&lt; T &gt;::find</definition>
        <argsstring>(const key_type &amp;k) const </argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="classmruset_1a282941ee7f0438b0c09274b10c78cda0" kindref="member">key_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="31" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1abf122b956abffbf3ce190c80d215660c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmruset_1aaee46af18d8a5bdc503e9570e499a335" kindref="member">size_type</ref></type>
        <definition>size_type mruset&lt; T &gt;::count</definition>
        <argsstring>(const key_type &amp;k) const </argsstring>
        <name>count</name>
        <param>
          <type>const <ref refid="classmruset_1a282941ee7f0438b0c09274b10c78cda0" kindref="member">key_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="32" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1ac7a85b54646e9d9d1962ce7f30b2a1fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mruset&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="33" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1aced009504f86176bd82426aa24a38e37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool friend</type>
        <definition>bool friend mruset&lt; T &gt;::operator==</definition>
        <argsstring>(const mruset&lt; T &gt; &amp;a, const mruset&lt; T &gt; &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmruset" kindref="compound">mruset</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classmruset" kindref="compound">mruset</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="34" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1a4d7231441276ef8a6c0fa3edf9712f5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool friend</type>
        <definition>bool friend mruset&lt; T &gt;::operator==</definition>
        <argsstring>(const mruset&lt; T &gt; &amp;a, const std::set&lt; T &gt; &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmruset" kindref="compound">mruset</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const std::set&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="35" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1a5a95239f76da8ba675ba748baf1f07c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool friend</type>
        <definition>bool friend mruset&lt; T &gt;::operator&lt;</definition>
        <argsstring>(const mruset&lt; T &gt; &amp;a, const mruset&lt; T &gt; &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classmruset" kindref="compound">mruset</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classmruset" kindref="compound">mruset</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="36" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1af2e0dfe9d8b029bde78457797cdc42a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classmruset_1a246172eda1afff45be47a013c14b1ad6" kindref="member">iterator</ref>, bool &gt;</type>
        <definition>std::pair&lt;iterator, bool&gt; mruset&lt; T &gt;::insert</definition>
        <argsstring>(const key_type &amp;x)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="classmruset_1a282941ee7f0438b0c09274b10c78cda0" kindref="member">key_type</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="37" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="37" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1a6c802b89a72c474bdfad1059be1dec09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmruset_1aaee46af18d8a5bdc503e9570e499a335" kindref="member">size_type</ref></type>
        <definition>size_type mruset&lt; T &gt;::max_size</definition>
        <argsstring>() const </argsstring>
        <name>max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="51" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classmruset_1a030aa4599dfb54074183e2cdfbe2373f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmruset_1aaee46af18d8a5bdc503e9570e499a335" kindref="member">size_type</ref></type>
        <definition>size_type mruset&lt; T &gt;::max_size</definition>
        <argsstring>(size_type s)</argsstring>
        <name>max_size</name>
        <param>
          <type><ref refid="classmruset_1aaee46af18d8a5bdc503e9570e499a335" kindref="member">size_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/mruset.h" line="52" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="52" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>STL-like set container that only keeps the most recent N elements. </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/mruset.h" line="12" column="1" bodyfile="/home/dev/ds-160209/src/mruset.h" bodystart="11" bodyend="63"/>
    <listofallmembers>
      <member refid="classmruset_1acaa144dd3b3c3b9999254b6fcc37be5f" prot="public" virt="non-virtual"><scope>mruset</scope><name>begin</name></member>
      <member refid="classmruset_1ac7a85b54646e9d9d1962ce7f30b2a1fc" prot="public" virt="non-virtual"><scope>mruset</scope><name>clear</name></member>
      <member refid="classmruset_1a74c77f7642e8e4db7cc79991c4345692" prot="public" virt="non-virtual"><scope>mruset</scope><name>const_iterator</name></member>
      <member refid="classmruset_1abf122b956abffbf3ce190c80d215660c" prot="public" virt="non-virtual"><scope>mruset</scope><name>count</name></member>
      <member refid="classmruset_1a3dc4b001997d723fd8c79134ac54574f" prot="public" virt="non-virtual"><scope>mruset</scope><name>empty</name></member>
      <member refid="classmruset_1ab52cef4e172f0a8428451ac3cc2e3033" prot="public" virt="non-virtual"><scope>mruset</scope><name>end</name></member>
      <member refid="classmruset_1a030a8b36c8c34ae7b7b30cc0b0204bfa" prot="public" virt="non-virtual"><scope>mruset</scope><name>find</name></member>
      <member refid="classmruset_1af2e0dfe9d8b029bde78457797cdc42a9" prot="public" virt="non-virtual"><scope>mruset</scope><name>insert</name></member>
      <member refid="classmruset_1a246172eda1afff45be47a013c14b1ad6" prot="public" virt="non-virtual"><scope>mruset</scope><name>iterator</name></member>
      <member refid="classmruset_1a282941ee7f0438b0c09274b10c78cda0" prot="public" virt="non-virtual"><scope>mruset</scope><name>key_type</name></member>
      <member refid="classmruset_1a6c802b89a72c474bdfad1059be1dec09" prot="public" virt="non-virtual"><scope>mruset</scope><name>max_size</name></member>
      <member refid="classmruset_1a030aa4599dfb54074183e2cdfbe2373f" prot="public" virt="non-virtual"><scope>mruset</scope><name>max_size</name></member>
      <member refid="classmruset_1a708b11a33448c283f6f4c8e18fd3098f" prot="public" virt="non-virtual"><scope>mruset</scope><name>mruset</name></member>
      <member refid="classmruset_1a6d3d6963e3ca5689e846b12a29dd09ab" prot="protected" virt="non-virtual"><scope>mruset</scope><name>nMaxSize</name></member>
      <member refid="classmruset_1a5a95239f76da8ba675ba748baf1f07c8" prot="public" virt="non-virtual"><scope>mruset</scope><name>operator&lt;</name></member>
      <member refid="classmruset_1aced009504f86176bd82426aa24a38e37" prot="public" virt="non-virtual"><scope>mruset</scope><name>operator==</name></member>
      <member refid="classmruset_1a4d7231441276ef8a6c0fa3edf9712f5c" prot="public" virt="non-virtual"><scope>mruset</scope><name>operator==</name></member>
      <member refid="classmruset_1a6be1fe81dc472e25e160911288373663" prot="protected" virt="non-virtual"><scope>mruset</scope><name>queue</name></member>
      <member refid="classmruset_1a4981fc3556b61600418b2ddad98cc685" prot="protected" virt="non-virtual"><scope>mruset</scope><name>set</name></member>
      <member refid="classmruset_1a7739fdd19c7f28ccfa5565969106c3a9" prot="public" virt="non-virtual"><scope>mruset</scope><name>size</name></member>
      <member refid="classmruset_1aaee46af18d8a5bdc503e9570e499a335" prot="public" virt="non-virtual"><scope>mruset</scope><name>size_type</name></member>
      <member refid="classmruset_1a834c3e7f8e9cf615ebe27752443f9a3a" prot="public" virt="non-virtual"><scope>mruset</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
