<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classbase__uint" kind="class" language="C++" prot="public">
    <compoundname>base_uint</compoundname>
    <includes refid="uint256_8h" local="no">uint256.h</includes>
    <templateparamlist>
      <param>
        <type>unsigned int</type>
        <declname>BITS</declname>
        <defname>BITS</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="enum" id="classbase__uint_1ac5863fc3d36ac3e887fbca5e08efe046" prot="protected" static="no">
        <name>@19</name>
        <enumvalue id="classbase__uint_1ac5863fc3d36ac3e887fbca5e08efe046adf579395d753e2d9607ecd61424f0853" prot="protected">
          <name>WIDTH</name>
          <initializer>=BITS/32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="34" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="34" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classbase__uint_1a0edb1465d540fadd92b21659f27083a2" prot="protected" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t base_uint&lt; BITS &gt;::pn[WIDTH]</definition>
        <argsstring>[WIDTH]</argsstring>
        <name>pn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="35" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classbase__uint_1aa02da58f540b087723acd9a92ceca5f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class uint160</definition>
        <argsstring></argsstring>
        <name>uint160</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="299" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a2748616a40a1e4fdd6db14b92e9619e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class uint256</definition>
        <argsstring></argsstring>
        <name>uint256</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="300" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a0d7ebbc9f372d8d9d46f50083d0aaad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class uint512</definition>
        <argsstring></argsstring>
        <name>uint512</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="301" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1ab46abc7a4c02bbbe6ee4d44db58f36fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator+</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="217" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a42603f675219a79c1087da39677dd6d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator-</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="218" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a7cc93af608b4d2b8e45f8a18bb085cf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator*</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="219" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a3027097ea3718db496e486d5c64a6bbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator/</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="220" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1af11d7776598f6633c139636314f065d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator|</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator|</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="221" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a7dd38f6935c35d4b534b669c3baf21a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator&amp;</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="222" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1aa9c66282ad78846e8310984aeb2df49d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator^</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator^</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="223" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a9d619adcbf9ad5539f5e98f739edd15d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator&gt;&gt;</definition>
        <argsstring>(const base_uint &amp;a, int shift)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="224" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1acee16d973ae59087cd962720773f53dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator&lt;&lt;</definition>
        <argsstring>(const base_uint &amp;a, int shift)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="225" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a3490f0aef12712d434cda33f913b586f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator*</definition>
        <argsstring>(const base_uint &amp;a, uint32_t b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="226" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1aafca305decdfd2ded4688213ab4a55fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="227" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a3cc3bccf252004fbbd2b96dc769378e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="228" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1ac59719bd052d5dc2afcc35ae4a8843ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="229" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a89272b5112f90ba683c0f066ba1426c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="230" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a9eb243df5a6dfa3d0cd326427d99bfa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="231" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1ac7f1bdba7208bd852f7b00f7c49624f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="232" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a977dbbe7e78bbdcc2aea2dc16292d424" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const base_uint &amp;a, uint64_t b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="233" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1ab7b366cc0883f25fa57fb09d4bc33807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const base_uint &amp;a, uint64_t b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="234" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="234" bodyend="234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__uint_1aafd4418923a92b58a1c360e657fa7d83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>()</argsstring>
        <name>base_uint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="38" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a5d4e4c28c82c3a12b3689860081579c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>base_uint</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a0425a3c4d342b6fc9a68b1766cee9ede" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="50" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a217f9750f0ca9cdeefffb7bb1f1952d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>(uint64_t b)</argsstring>
        <name>base_uint</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="57" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1aa1ebaba47302da3e120879d186355736" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>base_uint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ab6dd7d7921572078a4733e4acc22b2a9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>base_uint</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="66" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a0f528438872245b8fc54ff60bbb6118a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool base_uint&lt; BITS &gt;::operator!</definition>
        <argsstring>() const </argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="68" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ad64a83e128fcf2d2ac072811a3e36300" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint base_uint&lt; BITS &gt;::operator~</definition>
        <argsstring>() const </argsstring>
        <name>operator~</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="76" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a29b620fba192a191054b35bf269ea221" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint base_uint&lt; BITS &gt;::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="84" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1aa701be5115bacf02c299b05598cf616d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_uint&lt; BITS &gt;::getdouble</definition>
        <argsstring>() const </argsstring>
        <name>getdouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="142" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a115a5ddb2f2637e09703a25cfc580483" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator=</definition>
        <argsstring>(uint64_t b)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="95" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="95" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ad5ec10977ebeab115fe857637990e267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator^=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator^=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="104" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a6cb549b322e5bbcca794366f5fd3fb15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator&amp;=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator&amp;=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="111" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ab116d89cbae68b32fbecf5d1de98bb2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator|=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator|=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="118" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a3d77324f5c5166e4dabadac360bea6e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator^=</definition>
        <argsstring>(uint64_t b)</argsstring>
        <name>operator^=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="125" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ac8edb6e097d9eede21f8fa44e9184913" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator|=</definition>
        <argsstring>(uint64_t b)</argsstring>
        <name>operator|=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1acb449d2fcb5af767fa6b01890e836a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator&lt;&lt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&lt;&lt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="139" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="28" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a4e0344432bbcce79525fd2c182173b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator&gt;&gt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&gt;&gt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="140" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="45" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a8fb3109e7c46536bb66ac41242176246" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator+=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="142" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="142" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a89d8332840076ec102839b8a10dda9b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator-=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="154" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a14f2b12970b3198d65abafb2615207ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator+=</definition>
        <argsstring>(uint64_t b64)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b64</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="160" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="160" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ab64f7a7a87b9af5ea345e4678b4cc1e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator-=</definition>
        <argsstring>(uint64_t b64)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b64</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="168" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1aa70b7d954258d2cd4bb77721e357fd40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator*=</definition>
        <argsstring>(uint32_t b32)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>b32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="176" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="62" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a806b2ba843181e9dd4c824414fbcc13d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator*=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="177" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="74" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ad6fa7e22ab995247c0bf298069732e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator/=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="178" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="90" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a56b54869886808961092d3f764fadd9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="180" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a2d5a123c856b2b31fae5f65891832486" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint base_uint&lt; BITS &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="189" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="189" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a2cc581d32afac619acd12601ddea4180" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="197" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="197" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a78a8e46c434c0e61be86282fe9543587" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint base_uint&lt; BITS &gt;::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="206" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="206" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ac9777c80cfcf1355cf17258027ca35bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int base_uint&lt; BITS &gt;::CompareTo</definition>
        <argsstring>(const base_uint &amp;b) const </argsstring>
        <name>CompareTo</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="214" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="116" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a39817436d7ba143e8d52abc475097384" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool base_uint&lt; BITS &gt;::EqualTo</definition>
        <argsstring>(uint64_t b) const </argsstring>
        <name>EqualTo</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="215" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="128" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ac9929c28600796a9acf75881bb750576" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string base_uint&lt; BITS &gt;::GetHex</definition>
        <argsstring>() const </argsstring>
        <name>GetHex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="236" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="154" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ade1a897fac931f28f54998c92c797228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_uint&lt; BITS &gt;::SetHex</definition>
        <argsstring>(const char *psz)</argsstring>
        <name>SetHex</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="237" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="163" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1afe3600e6ae4e9f69e1c036581a2716c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_uint&lt; BITS &gt;::SetHex</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>SetHex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="238" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string base_uint&lt; BITS &gt;::ToString</definition>
        <argsstring>() const </argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="239" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1aaa32054bf4e8fbb31d54a75f6065174d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* base_uint&lt; BITS &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="241" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a76539ef6be800bc02e4038f457a4f74a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* base_uint&lt; BITS &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="246" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ae2049504988d5024ccfe71fb52b2009a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* base_uint&lt; BITS &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="251" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a4e073e41505b8fb901881342a7ea397a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* base_uint&lt; BITS &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="256" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ae0e221686cd63384569a8db5cc06d4c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int base_uint&lt; BITS &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="261" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a0cb831d93f1580c1355b9665c21629f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t base_uint&lt; BITS &gt;::Get64</definition>
        <argsstring>(int n=0) const </argsstring>
        <name>Get64</name>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="266" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a4867652ab4163a10ac4e3d04f0352423" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int base_uint&lt; BITS &gt;::bits</definition>
        <argsstring>() const </argsstring>
        <name>bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the position of the highest bit set plus one, or zero if the value is zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="274" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="204" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1abf39b71afc016b333b8996def4c6bc40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t base_uint&lt; BITS &gt;::GetLow64</definition>
        <argsstring>() const </argsstring>
        <name>GetLow64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="276" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="276" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a16f0848f568f519885b799f0eb388dcd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int base_uint&lt; BITS &gt;::GetSerializeSize</definition>
        <argsstring>(int nType, int nVersion) const </argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="282" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a0c2c978306503bb188caabc873ed0b2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void base_uint&lt; BITS &gt;::Serialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="288" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1adf1ad639d94997a9cda95e0c424ab51a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void base_uint&lt; BITS &gt;::Unserialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="294" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="294" bodyend="297"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Template base class for unsigned big integers. </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/uint256.h" line="32" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="31" bodyend="302"/>
    <listofallmembers>
      <member refid="classbase__uint_1aafd4418923a92b58a1c360e657fa7d83" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1a5d4e4c28c82c3a12b3689860081579c1" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1a217f9750f0ca9cdeefffb7bb1f1952d6" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1aa1ebaba47302da3e120879d186355736" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1ab6dd7d7921572078a4733e4acc22b2a9" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1aaa32054bf4e8fbb31d54a75f6065174d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>begin</name></member>
      <member refid="classbase__uint_1ae2049504988d5024ccfe71fb52b2009a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>begin</name></member>
      <member refid="classbase__uint_1a4867652ab4163a10ac4e3d04f0352423" prot="public" virt="non-virtual"><scope>base_uint</scope><name>bits</name></member>
      <member refid="classbase__uint_1ac9777c80cfcf1355cf17258027ca35bb" prot="public" virt="non-virtual"><scope>base_uint</scope><name>CompareTo</name></member>
      <member refid="classbase__uint_1a76539ef6be800bc02e4038f457a4f74a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>end</name></member>
      <member refid="classbase__uint_1a4e073e41505b8fb901881342a7ea397a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>end</name></member>
      <member refid="classbase__uint_1a39817436d7ba143e8d52abc475097384" prot="public" virt="non-virtual"><scope>base_uint</scope><name>EqualTo</name></member>
      <member refid="classbase__uint_1a0cb831d93f1580c1355b9665c21629f2" prot="public" virt="non-virtual"><scope>base_uint</scope><name>Get64</name></member>
      <member refid="classbase__uint_1aa701be5115bacf02c299b05598cf616d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>getdouble</name></member>
      <member refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" prot="public" virt="non-virtual"><scope>base_uint</scope><name>GetHex</name></member>
      <member refid="classbase__uint_1abf39b71afc016b333b8996def4c6bc40" prot="public" virt="non-virtual"><scope>base_uint</scope><name>GetLow64</name></member>
      <member refid="classbase__uint_1a16f0848f568f519885b799f0eb388dcd" prot="public" virt="non-virtual"><scope>base_uint</scope><name>GetSerializeSize</name></member>
      <member refid="classbase__uint_1a0f528438872245b8fc54ff60bbb6118a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator!</name></member>
      <member refid="classbase__uint_1a3cc3bccf252004fbbd2b96dc769378e7" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator!=</name></member>
      <member refid="classbase__uint_1ab7b366cc0883f25fa57fb09d4bc33807" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator!=</name></member>
      <member refid="classbase__uint_1a7dd38f6935c35d4b534b669c3baf21a6" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&amp;</name></member>
      <member refid="classbase__uint_1a6cb549b322e5bbcca794366f5fd3fb15" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&amp;=</name></member>
      <member refid="classbase__uint_1a7cc93af608b4d2b8e45f8a18bb085cf0" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator*</name></member>
      <member refid="classbase__uint_1a3490f0aef12712d434cda33f913b586f" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator*</name></member>
      <member refid="classbase__uint_1aa70b7d954258d2cd4bb77721e357fd40" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator*=</name></member>
      <member refid="classbase__uint_1a806b2ba843181e9dd4c824414fbcc13d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator*=</name></member>
      <member refid="classbase__uint_1ab46abc7a4c02bbbe6ee4d44db58f36fd" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator+</name></member>
      <member refid="classbase__uint_1a56b54869886808961092d3f764fadd9f" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator++</name></member>
      <member refid="classbase__uint_1a2d5a123c856b2b31fae5f65891832486" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator++</name></member>
      <member refid="classbase__uint_1a8fb3109e7c46536bb66ac41242176246" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator+=</name></member>
      <member refid="classbase__uint_1a14f2b12970b3198d65abafb2615207ca" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator+=</name></member>
      <member refid="classbase__uint_1a29b620fba192a191054b35bf269ea221" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator-</name></member>
      <member refid="classbase__uint_1a42603f675219a79c1087da39677dd6d3" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator-</name></member>
      <member refid="classbase__uint_1a2cc581d32afac619acd12601ddea4180" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator--</name></member>
      <member refid="classbase__uint_1a78a8e46c434c0e61be86282fe9543587" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator--</name></member>
      <member refid="classbase__uint_1a89d8332840076ec102839b8a10dda9b4" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator-=</name></member>
      <member refid="classbase__uint_1ab64f7a7a87b9af5ea345e4678b4cc1e9" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator-=</name></member>
      <member refid="classbase__uint_1a3027097ea3718db496e486d5c64a6bbd" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator/</name></member>
      <member refid="classbase__uint_1ad6fa7e22ab995247c0bf298069732e1d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator/=</name></member>
      <member refid="classbase__uint_1a89272b5112f90ba683c0f066ba1426c1" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&lt;</name></member>
      <member refid="classbase__uint_1acee16d973ae59087cd962720773f53dd" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&lt;&lt;</name></member>
      <member refid="classbase__uint_1acb449d2fcb5af767fa6b01890e836a4e" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&lt;&lt;=</name></member>
      <member refid="classbase__uint_1ac7f1bdba7208bd852f7b00f7c49624f8" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&lt;=</name></member>
      <member refid="classbase__uint_1a0425a3c4d342b6fc9a68b1766cee9ede" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator=</name></member>
      <member refid="classbase__uint_1a115a5ddb2f2637e09703a25cfc580483" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator=</name></member>
      <member refid="classbase__uint_1aafca305decdfd2ded4688213ab4a55fa" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator==</name></member>
      <member refid="classbase__uint_1a977dbbe7e78bbdcc2aea2dc16292d424" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator==</name></member>
      <member refid="classbase__uint_1ac59719bd052d5dc2afcc35ae4a8843ab" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&gt;</name></member>
      <member refid="classbase__uint_1a9eb243df5a6dfa3d0cd326427d99bfa6" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&gt;=</name></member>
      <member refid="classbase__uint_1a9d619adcbf9ad5539f5e98f739edd15d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&gt;&gt;</name></member>
      <member refid="classbase__uint_1a4e0344432bbcce79525fd2c182173b3b" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&gt;&gt;=</name></member>
      <member refid="classbase__uint_1aa9c66282ad78846e8310984aeb2df49d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator^</name></member>
      <member refid="classbase__uint_1ad5ec10977ebeab115fe857637990e267" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator^=</name></member>
      <member refid="classbase__uint_1a3d77324f5c5166e4dabadac360bea6e7" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator^=</name></member>
      <member refid="classbase__uint_1af11d7776598f6633c139636314f065d6" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator|</name></member>
      <member refid="classbase__uint_1ab116d89cbae68b32fbecf5d1de98bb2e" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator|=</name></member>
      <member refid="classbase__uint_1ac8edb6e097d9eede21f8fa44e9184913" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator|=</name></member>
      <member refid="classbase__uint_1ad64a83e128fcf2d2ac072811a3e36300" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator~</name></member>
      <member refid="classbase__uint_1a0edb1465d540fadd92b21659f27083a2" prot="protected" virt="non-virtual"><scope>base_uint</scope><name>pn</name></member>
      <member refid="classbase__uint_1a0c2c978306503bb188caabc873ed0b2f" prot="public" virt="non-virtual"><scope>base_uint</scope><name>Serialize</name></member>
      <member refid="classbase__uint_1ade1a897fac931f28f54998c92c797228" prot="public" virt="non-virtual"><scope>base_uint</scope><name>SetHex</name></member>
      <member refid="classbase__uint_1afe3600e6ae4e9f69e1c036581a2716c8" prot="public" virt="non-virtual"><scope>base_uint</scope><name>SetHex</name></member>
      <member refid="classbase__uint_1ae0e221686cd63384569a8db5cc06d4c9" prot="public" virt="non-virtual"><scope>base_uint</scope><name>size</name></member>
      <member refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" prot="public" virt="non-virtual"><scope>base_uint</scope><name>ToString</name></member>
      <member refid="classbase__uint_1aa02da58f540b087723acd9a92ceca5f1" prot="public" virt="non-virtual"><scope>base_uint</scope><name>uint160</name></member>
      <member refid="classbase__uint_1a2748616a40a1e4fdd6db14b92e9619e2" prot="public" virt="non-virtual"><scope>base_uint</scope><name>uint256</name></member>
      <member refid="classbase__uint_1a0d7ebbc9f372d8d9d46f50083d0aaad7" prot="public" virt="non-virtual"><scope>base_uint</scope><name>uint512</name></member>
      <member refid="classbase__uint_1adf1ad639d94997a9cda95e0c424ab51a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>Unserialize</name></member>
      <member refid="classbase__uint_1ac5863fc3d36ac3e887fbca5e08efe046adf579395d753e2d9607ecd61424f0853" prot="protected" virt="non-virtual"><scope>base_uint</scope><name>WIDTH</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
