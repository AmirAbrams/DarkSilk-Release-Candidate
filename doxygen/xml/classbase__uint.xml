<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classbase__uint" kind="class" language="C++" prot="public">
    <compoundname>base_uint</compoundname>
    <includes refid="uint256_8h" local="no">uint256.h</includes>
    <templateparamlist>
      <param>
        <type>unsigned int</type>
        <declname>BITS</declname>
        <defname>BITS</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="enum" id="classbase__uint_1ac5863fc3d36ac3e887fbca5e08efe046" prot="protected" static="no">
        <name>@19</name>
        <enumvalue id="classbase__uint_1ac5863fc3d36ac3e887fbca5e08efe046adf579395d753e2d9607ecd61424f0853" prot="protected">
          <name>WIDTH</name>
          <initializer>=BITS/32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="34" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="34" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classbase__uint_1a0edb1465d540fadd92b21659f27083a2" prot="protected" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>uint32_t base_uint&lt; BITS &gt;::pn[WIDTH]</definition>
        <argsstring>[WIDTH]</argsstring>
        <name>pn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="35" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="classbase__uint_1acb449d2fcb5af767fa6b01890e836a4e" compoundref="uint256_8cpp" startline="28" endline="42">base_uint&lt; BITS &gt;::operator&lt;&lt;=</referencedby>
        <referencedby refid="classbase__uint_1a4e0344432bbcce79525fd2c182173b3b" compoundref="uint256_8cpp" startline="45" endline="59">base_uint&lt; BITS &gt;::operator&gt;&gt;=</referencedby>
        <referencedby refid="classbase__uint_1a806b2ba843181e9dd4c824414fbcc13d" compoundref="uint256_8cpp" startline="74" endline="87">base_uint&lt; BITS &gt;::operator*=</referencedby>
        <referencedby refid="classbase__uint_1ac9777c80cfcf1355cf17258027ca35bb" compoundref="uint256_8cpp" startline="116" endline="125">base_uint&lt; BITS &gt;::CompareTo</referencedby>
        <referencedby refid="classuint256_1a2ed8bd4e54421a37430768374a7e91b3" compoundref="uint256_8cpp" startline="339" endline="357">uint256::GetHash</referencedby>
        <referencedby refid="classbase__uint_1a5d4e4c28c82c3a12b3689860081579c1" compoundref="uint256_8h" startline="44" endline="48">base_uint&lt; 512 &gt;::base_uint</referencedby>
        <referencedby refid="classbase__uint_1a0425a3c4d342b6fc9a68b1766cee9ede" compoundref="uint256_8h" startline="50" endline="55">base_uint&lt; 512 &gt;::operator=</referencedby>
        <referencedby refid="classbase__uint_1ad64a83e128fcf2d2ac072811a3e36300" compoundref="uint256_8h" startline="76" endline="82">base_uint&lt; 512 &gt;::operator~</referencedby>
        <referencedby refid="classbase__uint_1a29b620fba192a191054b35bf269ea221" compoundref="uint256_8h" startline="84" endline="91">base_uint&lt; 512 &gt;::operator-</referencedby>
        <referencedby refid="classbase__uint_1ad5ec10977ebeab115fe857637990e267" compoundref="uint256_8h" startline="104" endline="109">base_uint&lt; 512 &gt;::operator^=</referencedby>
        <referencedby refid="classbase__uint_1a6cb549b322e5bbcca794366f5fd3fb15" compoundref="uint256_8h" startline="111" endline="116">base_uint&lt; 512 &gt;::operator&amp;=</referencedby>
        <referencedby refid="classbase__uint_1ab116d89cbae68b32fbecf5d1de98bb2e" compoundref="uint256_8h" startline="118" endline="123">base_uint&lt; 512 &gt;::operator|=</referencedby>
        <referencedby refid="classbase__uint_1a8fb3109e7c46536bb66ac41242176246" compoundref="uint256_8h" startline="142" endline="152">base_uint&lt; 512 &gt;::operator+=</referencedby>
        <referencedby refid="classbase__uint_1ae0e221686cd63384569a8db5cc06d4c9" compoundref="uint256_8h" startline="261" endline="264">base_uint&lt; 512 &gt;::size</referencedby>
        <referencedby refid="classbase__uint_1a16f0848f568f519885b799f0eb388dcd" compoundref="uint256_8h" startline="282" endline="285">base_uint&lt; 512 &gt;::GetSerializeSize</referencedby>
        <referencedby refid="classuint512_1adbe0526a9ef6eedc10a530834b4ab89a" compoundref="uint256_8h" startline="357" endline="364">uint512::trim256</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classbase__uint_1aa02da58f540b087723acd9a92ceca5f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class uint160</definition>
        <argsstring></argsstring>
        <name>uint160</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="299" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a2748616a40a1e4fdd6db14b92e9619e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class uint256</definition>
        <argsstring></argsstring>
        <name>uint256</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="300" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a0d7ebbc9f372d8d9d46f50083d0aaad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class uint512</definition>
        <argsstring></argsstring>
        <name>uint512</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="301" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1ab46abc7a4c02bbbe6ee4d44db58f36fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator+</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="217" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a42603f675219a79c1087da39677dd6d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator-</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="218" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a7cc93af608b4d2b8e45f8a18bb085cf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator*</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="219" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a3027097ea3718db496e486d5c64a6bbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator/</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="220" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1af11d7776598f6633c139636314f065d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator|</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator|</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="221" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a7dd38f6935c35d4b534b669c3baf21a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator&amp;</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="222" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1aa9c66282ad78846e8310984aeb2df49d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator^</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator^</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="223" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a9d619adcbf9ad5539f5e98f739edd15d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator&gt;&gt;</definition>
        <argsstring>(const base_uint &amp;a, int shift)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="224" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1acee16d973ae59087cd962720773f53dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator&lt;&lt;</definition>
        <argsstring>(const base_uint &amp;a, int shift)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="225" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a3490f0aef12712d434cda33f913b586f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint operator*</definition>
        <argsstring>(const base_uint &amp;a, uint32_t b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="226" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1aafca305decdfd2ded4688213ab4a55fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="227" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a3cc3bccf252004fbbd2b96dc769378e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="228" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1ac59719bd052d5dc2afcc35ae4a8843ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="229" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a89272b5112f90ba683c0f066ba1426c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="230" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a9eb243df5a6dfa3d0cd326427d99bfa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="231" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1ac7f1bdba7208bd852f7b00f7c49624f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const base_uint &amp;a, const base_uint &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="232" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1a977dbbe7e78bbdcc2aea2dc16292d424" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const base_uint &amp;a, uint64_t b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="233" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="friend" id="classbase__uint_1ab7b366cc0883f25fa57fb09d4bc33807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const base_uint &amp;a, uint64_t b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="234" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="234" bodyend="234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__uint_1aafd4418923a92b58a1c360e657fa7d83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>()</argsstring>
        <name>base_uint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="38" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a5d4e4c28c82c3a12b3689860081579c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>base_uint</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="44" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a0425a3c4d342b6fc9a68b1766cee9ede" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="50" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a217f9750f0ca9cdeefffb7bb1f1952d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>(uint64_t b)</argsstring>
        <name>base_uint</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="57" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1aa1ebaba47302da3e120879d186355736" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>base_uint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="65" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ab6dd7d7921572078a4733e4acc22b2a9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_uint&lt; BITS &gt;::base_uint</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>base_uint</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="66" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a0f528438872245b8fc54ff60bbb6118a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool base_uint&lt; BITS &gt;::operator!</definition>
        <argsstring>() const </argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="68" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ad64a83e128fcf2d2ac072811a3e36300" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint base_uint&lt; BITS &gt;::operator~</definition>
        <argsstring>() const </argsstring>
        <name>operator~</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="76" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a29b620fba192a191054b35bf269ea221" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint base_uint&lt; BITS &gt;::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="84" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1aa701be5115bacf02c299b05598cf616d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_uint&lt; BITS &gt;::getdouble</definition>
        <argsstring>() const </argsstring>
        <name>getdouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="93" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="142" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a115a5ddb2f2637e09703a25cfc580483" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator=</definition>
        <argsstring>(uint64_t b)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="95" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="95" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ad5ec10977ebeab115fe857637990e267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator^=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator^=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="104" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a6cb549b322e5bbcca794366f5fd3fb15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator&amp;=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator&amp;=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="111" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ab116d89cbae68b32fbecf5d1de98bb2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator|=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator|=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="118" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a3d77324f5c5166e4dabadac360bea6e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator^=</definition>
        <argsstring>(uint64_t b)</argsstring>
        <name>operator^=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="125" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ac8edb6e097d9eede21f8fa44e9184913" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator|=</definition>
        <argsstring>(uint64_t b)</argsstring>
        <name>operator|=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="132" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1acb449d2fcb5af767fa6b01890e836a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator&lt;&lt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&lt;&lt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="139" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="28" bodyend="42"/>
        <references refid="classbase__uint_1a0edb1465d540fadd92b21659f27083a2" compoundref="uint256_8h" startline="35">base_uint&lt; BITS &gt;::pn</references>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a4e0344432bbcce79525fd2c182173b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator&gt;&gt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&gt;&gt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="140" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="45" bodyend="59"/>
        <references refid="classbase__uint_1a0edb1465d540fadd92b21659f27083a2" compoundref="uint256_8h" startline="35">base_uint&lt; BITS &gt;::pn</references>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a8fb3109e7c46536bb66ac41242176246" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator+=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="142" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="142" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a89d8332840076ec102839b8a10dda9b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator-=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="154" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a14f2b12970b3198d65abafb2615207ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator+=</definition>
        <argsstring>(uint64_t b64)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b64</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="160" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="160" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ab64f7a7a87b9af5ea345e4678b4cc1e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator-=</definition>
        <argsstring>(uint64_t b64)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b64</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="168" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1aa70b7d954258d2cd4bb77721e357fd40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator*=</definition>
        <argsstring>(uint32_t b32)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
          <declname>b32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="176" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="62" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a806b2ba843181e9dd4c824414fbcc13d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator*=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="177" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="74" bodyend="87"/>
        <references refid="classbase__uint_1a0edb1465d540fadd92b21659f27083a2" compoundref="uint256_8h" startline="35">base_uint&lt; BITS &gt;::pn</references>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ad6fa7e22ab995247c0bf298069732e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&lt; BITS &gt; &amp; base_uint&lt; BITS &gt;::operator/=</definition>
        <argsstring>(const base_uint &amp;b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="178" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="90" bodyend="113"/>
        <references refid="classbase__uint_1a4867652ab4163a10ac4e3d04f0352423" compoundref="uint256_8cpp" startline="204" endline="216">base_uint&lt; BITS &gt;::bits</references>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a56b54869886808961092d3f764fadd9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="180" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a2d5a123c856b2b31fae5f65891832486" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint base_uint&lt; BITS &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="189" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="189" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a2cc581d32afac619acd12601ddea4180" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
        <definition>base_uint&amp; base_uint&lt; BITS &gt;::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="197" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="197" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a78a8e46c434c0e61be86282fe9543587" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref></type>
        <definition>const base_uint base_uint&lt; BITS &gt;::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="206" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="206" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ac9777c80cfcf1355cf17258027ca35bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int base_uint&lt; BITS &gt;::CompareTo</definition>
        <argsstring>(const base_uint &amp;b) const </argsstring>
        <name>CompareTo</name>
        <param>
          <type>const <ref refid="classbase__uint" kindref="compound">base_uint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="214" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="116" bodyend="125"/>
        <references refid="classbase__uint_1a0edb1465d540fadd92b21659f27083a2" compoundref="uint256_8h" startline="35">base_uint&lt; BITS &gt;::pn</references>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a39817436d7ba143e8d52abc475097384" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool base_uint&lt; BITS &gt;::EqualTo</definition>
        <argsstring>(uint64_t b) const </argsstring>
        <name>EqualTo</name>
        <param>
          <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="215" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="128" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ac9929c28600796a9acf75881bb750576" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string base_uint&lt; BITS &gt;::GetHex</definition>
        <argsstring>() const </argsstring>
        <name>GetHex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="236" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="154" bodyend="160"/>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
        <referencedby refid="miner_8h_1aadd8a05aa6d8fae1c0f4daa5e971a12a" compoundref="miner_8cpp" startline="447" endline="485">CheckWork</referencedby>
        <referencedby refid="miner_8h_1a68be4bcfa03b86095641eac5ca996fed" compoundref="miner_8cpp" startline="487" endline="534">CheckStake</referencedby>
        <referencedby refid="blockbrowser_8h_1a39902774552d8b3f80129af47420a48b" compoundref="blockbrowser_8cpp" startline="53" endline="67">getBlockHash</referencedby>
        <referencedby refid="class_wallet_model_1a497418d4a8566b881bab45dec7ad8fd8" compoundref="walletmodel_8cpp" startline="213" endline="488">WalletModel::sendCoins</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a414df5de934bac4418f19c9293f63dad" compoundref="rpcblockchain_8cpp" startline="108" endline="160">blockToJSON</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a76d9bad30031c6da5454ca8fdc99f8ea" compoundref="rpcblockchain_8cpp" startline="162" endline="170">getbestblockhash</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a6aec96723852fde932c01159a66a9911" compoundref="rpcblockchain_8cpp" startline="214" endline="227">getblockhash</referencedby>
        <referencedby refid="rpcmining_8cpp_1a36ee2284a7252841b8a62a9531b6acbc" compoundref="rpcmining_8cpp" startline="150" endline="234">checkkernel</referencedby>
        <referencedby refid="rpcmining_8cpp_1a27347eecedd59156c914fcb5ce488f9a" compoundref="rpcmining_8cpp" startline="476" endline="653">getblocktemplate</referencedby>
        <referencedby refid="rpcwallet_8cpp_1aba644e892d0fe242879f44311747ec76" compoundref="rpcrawtransaction_8cpp" startline="53" endline="109">TxToJSON</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1ad5aad44f890060f42efb49acf349511e" compoundref="rpcrawtransaction_8cpp" startline="558" endline="602">sendrawtransaction</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a28e51f3edfce43e075603e9e315f40c4" compoundref="rpcwallet_8cpp" startline="52" endline="76">WalletTxToJSON</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a845eaefd9ec7752b1145c183205524d0" compoundref="rpcwallet_8cpp" startline="922" endline="989">sendfrom</referencedby>
        <referencedby refid="rpcwallet_8cpp_1adeb5f23f20fb4e589dab23cadf75c92d" compoundref="rpcwallet_8cpp" startline="992" endline="1086">sendmany</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a0cc958f67a8d6d0002cb4fee19eddb5c" compoundref="rpcwallet_8cpp" startline="1223" endline="1348">ListReceived</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a53cf4975a89f414ef3bd180f6b4773cd" compoundref="rpcwallet_8cpp" startline="1709" endline="1806">listsinceblock</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a845c15a1402787fcf2cc021111ea89f5" compoundref="rpcwallet_8cpp" startline="1808" endline="1906">gettransaction</referencedby>
        <referencedby refid="rpcwallet_8cpp_1ad901105908c7eea072067a49643a906e" compoundref="rpcwallet_8cpp" startline="2490" endline="2536">sendtostealthaddress</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1af0d8155078c47c07ea80ce65f317940a" compoundref="sandstorm_8cpp" startline="1651" endline="1704">CSandstormPool::MakeCollateralAmounts</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1ab7fac1067376f91b53aaf6862c15e914" compoundref="sandstorm_8cpp" startline="1707" endline="1798">CSandstormPool::CreateDenominated</referencedby>
        <referencedby refid="uint256__tests_8cpp_1ab3c19e11618ace950a0a982ed30a9322" compoundref="uint256__tests_8cpp" startline="19" endline="25">BOOST_AUTO_TEST_CASE</referencedby>
        <referencedby refid="class_c_wallet_1adf34c789fd6eab1eeed22ef16837f558" compoundref="wallet_8cpp" startline="644" endline="761">CWallet::AddToWallet</referencedby>
        <referencedby refid="class_c_wallet_1a5d0e2025dc7a87a0406be272b80509ee" compoundref="wallet_8cpp" startline="3470" endline="3697">CWallet::FindStealthTransactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ade1a897fac931f28f54998c92c797228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_uint&lt; BITS &gt;::SetHex</definition>
        <argsstring>(const char *psz)</argsstring>
        <name>SetHex</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="237" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="163" bodyend="189"/>
        <references refid="uint256_8h_1aa59e8a8c5a39cb5041f93bb95dd02119" compoundref="uint256_8h" startline="19" endline="22">HexDigit</references>
        <referencedby refid="class_c_active_stormnode_1af66060dcef7137a1db78ad72b396d741" compoundref="activestormnode_8cpp" startline="365" endline="399">CActiveStormnode::SelectCoinsStormnode</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="blockbrowser_8h_1a60cc8549d68eb368aa21e8d9ef466d50" compoundref="blockbrowser_8cpp" startline="157" endline="181">getTxTotalValue</referencedby>
        <referencedby refid="blockbrowser_8h_1a14b4bf546aec3c2c0b550239299240c0" compoundref="blockbrowser_8cpp" startline="188" endline="219">getOutputs</referencedby>
        <referencedby refid="blockbrowser_8h_1adff72192237ccb8a69e68bd66cf66cf7" compoundref="blockbrowser_8cpp" startline="221" endline="263">getInputs</referencedby>
        <referencedby refid="blockbrowser_8h_1a21c25275086d5e7da5b0e91a26080173" compoundref="blockbrowser_8cpp" startline="278" endline="321">getTxFees</referencedby>
        <referencedby refid="class_client_model_1a16758b18ded91ceba202d6023cad4b51" compoundref="clientmodel_8cpp" startline="141" endline="156">ClientModel::updateAlert</referencedby>
        <referencedby refid="class_transaction_table_model_1abb93b1812f27622f67aed0302bc90ee6" compoundref="transactiontablemodel_8cpp" startline="243" endline="249">TransactionTableModel::updateTransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1a12e1b8a05d99d1544e5343c2282cc55a" compoundref="rpcrawtransaction_8cpp" startline="111" endline="144">getrawtransaction</referencedby>
        <referencedby refid="rpcrawtransaction_8cpp_1aa0d151e35c0ad5ec82df451a833aeadb" compoundref="rpcrawtransaction_8cpp" startline="349" endline="555">signrawtransaction</referencedby>
        <referencedby refid="rpcserver_8cpp_1ae00da5fd5abdf11d125f98190e599194" compoundref="rpcserver_8cpp" startline="108" endline="118">ParseHashV</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a53cf4975a89f414ef3bd180f6b4773cd" compoundref="rpcwallet_8cpp" startline="1709" endline="1806">listsinceblock</referencedby>
        <referencedby refid="rpcwallet_8cpp_1a845c15a1402787fcf2cc021111ea89f5" compoundref="rpcwallet_8cpp" startline="1808" endline="1906">gettransaction</referencedby>
        <referencedby refid="uint256__tests_8cpp_1ab3c19e11618ace950a0a982ed30a9322" compoundref="uint256__tests_8cpp" startline="19" endline="25">BOOST_AUTO_TEST_CASE</referencedby>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1afe3600e6ae4e9f69e1c036581a2716c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_uint&lt; BITS &gt;::SetHex</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>SetHex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="238" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string base_uint&lt; BITS &gt;::ToString</definition>
        <argsstring>() const </argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="239" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="198" bodyend="201"/>
        <referencedby refid="class_c_block_1a3f990a713116bd15c1f221c88b012ccf" compoundref="chain_8cpp" startline="92" endline="189">CBlock::AcceptBlock</referencedby>
        <referencedby refid="class_c_block_1aea2c77ad84cd7909720f75a0c3f7ddc2" compoundref="chain_8cpp" startline="250" endline="295">CBlock::RebuildAddressIndex</referencedby>
        <referencedby refid="class_c_block_1a1ae149d97c7b7eadf48f5cea934b6217" compoundref="chain_8cpp" startline="299" endline="490">CBlock::ConnectBlock</referencedby>
        <referencedby refid="chain_8h_1ae282007adebd031cdbfecdd0ad1feeb8" compoundref="chain_8cpp" startline="492" endline="512">InvalidChainFound</referencedby>
        <referencedby refid="chain_8h_1a674b674771a7750436800c08fc75437b" compoundref="chain_8cpp" startline="514" endline="613">Reorganize</referencedby>
        <referencedby refid="class_c_block_1aa735790178f95defd59f984dd51bc0f2" compoundref="chain_8cpp" startline="678" endline="789">CBlock::CheckBlock</referencedby>
        <referencedby refid="class_c_block_index_1abed1fcbcd372db6b9efa6bb9da317469" compoundref="chain_8h" startline="316" endline="327">CBlockIndex::ToString</referencedby>
        <referencedby refid="class_c_disk_block_index_1a86ef9d71fb72868699145b73f3e3e583" compoundref="chain_8h" startline="409" endline="418">CDiskBlockIndex::ToString</referencedby>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="instantx_8h_1a3774b6dae3dfa0a6c85e3604e742150c" compoundref="instantx_8cpp" startline="221" endline="256">CreateNewLock</referencedby>
        <referencedby refid="instantx_8h_1a5d4434bfb70f64f95aa4de9286cbae94" compoundref="instantx_8cpp" startline="302" endline="394">ProcessConsensusVote</referencedby>
        <referencedby refid="instantx_8h_1aef32a1712071881d322fdb3740c07227" compoundref="instantx_8cpp" startline="396" endline="417">CheckForConflictingLocks</referencedby>
        <referencedby refid="kernel_8h_1a92f7a1863b9988c21166341c849e26db" compoundref="kernel_8cpp" startline="227" endline="283">CheckStakeKernelHash</referencedby>
        <referencedby refid="kernel_8h_1a01e09fbdb926d4581ea48c4cf2f337a1" compoundref="kernel_8cpp" startline="286" endline="320">CheckProofOfStake</referencedby>
        <referencedby refid="main_8cpp_1aabd8ff89de652a080953f7cc6eccc979" compoundref="main_8cpp" startline="501" endline="529">AddOrphanTx</referencedby>
        <referencedby refid="main_8h_1a8189e51a581977f4de34ed4e0159bf63" compoundref="main_8cpp" startline="865" endline="1023">AcceptToMemoryPool</referencedby>
        <referencedby refid="main_8h_1a4d2373d0ce79227c95358116aae667f3" compoundref="main_8cpp" startline="1230" endline="1375">AcceptableInputs</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
        <referencedby refid="main_8h_1aac88c75e65aa0dee60e4332dbcc16120" compoundref="main_8cpp" startline="2146" endline="2217">PrintBlockTree</referencedby>
        <referencedby refid="main_8h_1a711a5bdb30c9c9bbdc83011b1cbbe2f3" compoundref="main_8cpp" startline="3426" endline="3631">SendMessages</referencedby>
        <referencedby refid="class_c_transaction_po_s_1a20a028e06f505f03a0d30a7f186d9489" compoundref="main_8cpp" startline="3747" endline="3817">CTransactionPoS::FetchInputs</referencedby>
        <referencedby refid="class_c_transaction_po_s_1a19de7fad0cc156ebd4e5a3858db7619f" compoundref="main_8cpp" startline="3846" endline="3971">CTransactionPoS::ConnectInputs</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
        <referencedby refid="class_c_block_1afab527f890c5575db3b1a2b17f47bf5a" compoundref="main_8cpp" startline="4244" endline="4311">CBlock::AddToBlockIndex</referencedby>
        <referencedby refid="miner_8h_1a4113fa37961c33784bb63f1d176e4615" compoundref="miner_8cpp" startline="107" endline="381">CreateNewBlock</referencedby>
        <referencedby refid="class_c_block_1a85d1cca7cd03ad1893767ae8305bd3b5" compoundref="block_8cpp" startline="73" endline="93">CBlock::ToString</referencedby>
        <referencedby refid="class_c_out_point_1afcfc33fde94fce212e99099c78162612" compoundref="transaction_8h" startline="61" endline="64">COutPoint::ToString</referencedby>
        <referencedby refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" compoundref="transaction_8h" startline="66" endline="69">COutPoint::ToStringShort</referencedby>
        <referencedby refid="class_c_inv_1a87a826a842d549c2747ced0c1a90bc18" compoundref="protocol_8cpp" startline="158" endline="161">CInv::ToString</referencedby>
        <referencedby refid="blockbrowser_8h_1af027b60cf442a354ea6ac1ff2330066d" compoundref="blockbrowser_8cpp" startline="82" endline="93">getBlockMerkle</referencedby>
        <referencedby refid="blockbrowser_8h_1adff72192237ccb8a69e68bd66cf66cf7" compoundref="blockbrowser_8cpp" startline="221" endline="263">getInputs</referencedby>
        <referencedby refid="blockbrowser_8h_1a21c25275086d5e7da5b0e91a26080173" compoundref="blockbrowser_8cpp" startline="278" endline="321">getTxFees</referencedby>
        <referencedby refid="class_message_model_1a272e7ceeba4664046472e6f7c4d49d23" compoundref="messagemodel_8cpp" startline="331" endline="352">MessageModel::getAddressOrPubkey</referencedby>
        <referencedby refid="class_transaction_record_1a7664c0127a66cdc42d3d56d6a85a5f1e" compoundref="transactionrecord_8cpp" startline="262" endline="265">TransactionRecord::formatSubTxId</referencedby>
        <referencedby refid="class_transaction_table_priv_1a27eb6d3e1f7717dd2cad80c5ce48f404" compoundref="transactiontablemodel_8cpp" startline="87" endline="169">TransactionTablePriv::updateWallet</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a6ba5d2c76833bd2f10be0e95ded53037" compoundref="rpcblockchain_8cpp" startline="197" endline="212">getrawmempool</referencedby>
        <referencedby refid="rpcblockchain_8cpp_1a18e0cd566c85cd589c2d687fa06d77e7" compoundref="rpcblockchain_8cpp" startline="276" endline="293">getcheckpoint</referencedby>
        <referencedby refid="rpcdump_8cpp_1a831ddf746d4f2500ba6f6c07f63445cd" compoundref="rpcdump_8cpp" startline="345" endline="401">dumpwallet</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aae19bf2ba52f3b864bfaf70206bcb29a" compoundref="rpcstormnode-budget_8cpp" startline="22" endline="515">snbudget</referencedby>
        <referencedby refid="rpcstormnode-budget_8cpp_1aaff1bdc7f9f32708efc9094bb6ab0e0d" compoundref="rpcstormnode-budget_8cpp" startline="569" endline="761">snfinalbudget</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
        <referencedby refid="rpcstormnode_8cpp_1a9e44e21f26f399fc0b1bce17f862a8d9" compoundref="rpcstormnode_8cpp" startline="473" endline="572">stormnodelist</referencedby>
        <referencedby refid="class_c_sandstorm_pool_1a287096eef4d6e8dcd778e7fab1dd9c11" compoundref="sandstorm_8cpp" startline="559" endline="632">CSandstormPool::CheckFinalTransaction</referencedby>
        <referencedby refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" compoundref="sandstorm_8cpp" startline="2073" endline="2089">CSandStormSigner::VerifyMessage</referencedby>
        <referencedby refid="spork_8h_1a3f9c24c1f4c012152fb4422ca981610a" compoundref="spork_8cpp" startline="30" endline="78">ProcessSpork</referencedby>
        <referencedby refid="stormnode-budget_8h_1af987fefd1417be5dcd356634986dbf83" compoundref="stormnode-budget_8cpp" startline="35" endline="90">IsBudgetCollateralValid</referencedby>
        <referencedby refid="class_c_budget_manager_1af60a5c7536d47606f0efdd475e5d171a" compoundref="stormnode-budget_8cpp" startline="118" endline="198">CBudgetManager::SubmitFinalBudget</referencedby>
        <referencedby refid="class_c_budget_manager_1a6fcc03bb51d846ce2934d9f739080ba7" compoundref="stormnode-budget_8cpp" startline="394" endline="427">CBudgetManager::CheckAndRemove</referencedby>
        <referencedby refid="class_c_budget_manager_1aa7df3137c4b407fdbb474fcf602a67a5" compoundref="stormnode-budget_8cpp" startline="760" endline="788">CBudgetManager::GetRequiredPaymentsString</referencedby>
        <referencedby refid="class_c_budget_manager_1a643d564d0232ed6f9e6ca025b8377c13" compoundref="stormnode-budget_8cpp" startline="1231" endline="1256">CBudgetManager::UpdateProposal</referencedby>
        <referencedby refid="class_c_budget_manager_1a4ac3207b673d7163a7d03005e35d6f8b" compoundref="stormnode-budget_8cpp" startline="1258" endline="1283">CBudgetManager::UpdateFinalizedBudget</referencedby>
        <referencedby refid="class_c_budget_proposal_1ad153df04aa541d0c06eb068d79d0cf96" compoundref="stormnode-budget_8cpp" startline="1422" endline="1449">CBudgetProposal::AddOrUpdateVote</referencedby>
        <referencedby refid="class_c_budget_vote_1a112c52bed648dd66fe2898e002fc3f09" compoundref="stormnode-budget_8cpp" startline="1601" endline="1621">CBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_budget_vote_1ab01d2ab30c3761318a7da919bff26697" compoundref="stormnode-budget_8cpp" startline="1623" endline="1644">CBudgetVote::SignatureValid</referencedby>
        <referencedby refid="class_c_finalized_budget_1a63fadb286f5d0f9f735bc33deba56b02" compoundref="stormnode-budget_8cpp" startline="1670" endline="1696">CFinalizedBudget::AddOrUpdateVote</referencedby>
        <referencedby refid="class_c_finalized_budget_1a49cb2b919e0de352628d6157cfa1e1c8" compoundref="stormnode-budget_8cpp" startline="1799" endline="1814">CFinalizedBudget::GetProposals</referencedby>
        <referencedby refid="class_c_finalized_budget_1a9a6fbb2d494342fb6d1c48a98d7cc856" compoundref="stormnode-budget_8cpp" startline="1816" endline="1851">CFinalizedBudget::GetStatus</referencedby>
        <referencedby refid="class_c_finalized_budget_1a8d5710eaf0fe541dcdce1d5f2ebee51c" compoundref="stormnode-budget_8cpp" startline="1914" endline="1940">CFinalizedBudget::SubmitVote</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1ac417b917ae18df17838b49371435c64a" compoundref="stormnode-budget_8cpp" startline="2002" endline="2022">CFinalizedBudgetVote::Sign</referencedby>
        <referencedby refid="class_c_finalized_budget_vote_1aadcc860c6efe5122388a372641297014" compoundref="stormnode-budget_8cpp" startline="2024" endline="2046">CFinalizedBudgetVote::SignatureValid</referencedby>
        <referencedby refid="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" compoundref="stormnode_8cpp" startline="557" endline="576">CStormnodePing::Sign</referencedby>
        <referencedby refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" compoundref="stormnode_8cpp" startline="578" endline="664">CStormnodePing::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_tx_d_b_1abcb9df0821d996f811f6604b452a26a0" compoundref="txdb-leveldb_8cpp" startline="337" endline="581">CTxDB::LoadBlockIndex</referencedby>
        <referencedby refid="class_c_wallet_1adf34c789fd6eab1eeed22ef16837f558" compoundref="wallet_8cpp" startline="644" endline="761">CWallet::AddToWallet</referencedby>
        <referencedby refid="class_c_wallet_1a796c23450c8482e10e0c75ae5c1fa8ed" compoundref="wallet_8cpp" startline="1153" endline="1223">CWallet::ReacceptWalletTransactions</referencedby>
        <referencedby refid="class_c_wallet_tx_1aec8c50f3fcde27525485b6cd4a4e19b5" compoundref="wallet_8cpp" startline="1225" endline="1242">CWalletTx::RelayWalletTransaction</referencedby>
        <referencedby refid="class_c_wallet_1aa1e6f8f54b36ae7ec11f567a59a99aa3" compoundref="wallet_8cpp" startline="4596" endline="4642">CWallet::FixSpentCoins</referencedby>
        <referencedby refid="class_c_output_1a30a78d31f6667803c613efdef28cbe52" compoundref="wallet_8h" startline="1085" endline="1088">COutput::ToString</referencedby>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1aaa32054bf4e8fbb31d54a75f6065174d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* base_uint&lt; BITS &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="241" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="241" bodyend="244"/>
        <referencedby refid="class_i2_p_session_1a4daa60a1a5767f354ebc5af8cabc4691" compoundref="i2p_8cpp" startline="193" endline="207">I2PSession::GenerateB32AddressFromDestination</referencedby>
        <referencedby refid="class_c_key_1a3b161899b4fa79f5a7036d2ccf12ce3a" compoundref="key_8cpp" startline="182" endline="195">CKey::Sign</referencedby>
        <referencedby refid="class_c_key_1a3890764f7a2e5d9cdeffb3e102e4545d" compoundref="key_8cpp" startline="197" endline="209">CKey::VerifyPubKey</referencedby>
        <referencedby refid="class_c_key_1a59afeabf3f63d99dfdbd3722087853a1" compoundref="key_8cpp" startline="211" endline="224">CKey::SignCompact</referencedby>
        <referencedby refid="class_c_pub_key_1ab4047c7ce31b72591d8108a2563cd21b" compoundref="pubkey_8cpp" startline="167" endline="185">CPubKey::Verify</referencedby>
        <referencedby refid="class_c_pub_key_1a169505e735a02db385486b0affeb565c" compoundref="pubkey_8cpp" startline="187" endline="205">CPubKey::RecoverCompact</referencedby>
        <referencedby refid="stealth_8h_1ab09bf0ded4faa17a866c79087b0b20a8" compoundref="stealth_8cpp" startline="132" endline="160">GenerateRandomSecret</referencedby>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a76539ef6be800bc02e4038f457a4f74a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* base_uint&lt; BITS &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="246" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="246" bodyend="249"/>
        <referencedby refid="base58_8h_1ae2dc7ad63e243509e0871ec4a5890678" compoundref="base58_8cpp" startline="117" endline="133">DecodeBase58Check</referencedby>
        <referencedby refid="class_i2_p_session_1a4daa60a1a5767f354ebc5af8cabc4691" compoundref="i2p_8cpp" startline="193" endline="207">I2PSession::GenerateB32AddressFromDestination</referencedby>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ae2049504988d5024ccfe71fb52b2009a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* base_uint&lt; BITS &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="251" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a4e073e41505b8fb901881342a7ea397a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char* base_uint&lt; BITS &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="256" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1ae0e221686cd63384569a8db5cc06d4c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int base_uint&lt; BITS &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="261" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="261" bodyend="264"/>
        <referencedby refid="class_c_e_c_key_1abbefe8d295d0bbed97d2709a3a534375" compoundref="ecwrapper_8cpp" startline="224" endline="229">CECKey::Verify</referencedby>
        <referencedby refid="main_8h_1a7c8a7be3439bb5e1e40548a332a3cf29" compoundref="main_8cpp" startline="1885" endline="2022">ProcessBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a0cb831d93f1580c1355b9665c21629f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t base_uint&lt; BITS &gt;::Get64</definition>
        <argsstring>(int n=0) const </argsstring>
        <name>Get64</name>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="266" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="266" bodyend="269"/>
        <referencedby refid="chain_8h_1ae282007adebd031cdbfecdd0ad1feeb8" compoundref="chain_8cpp" startline="492" endline="512">InvalidChainFound</referencedby>
        <referencedby refid="class_c_block_1aa3e358ffbd3c15aa937fd8a4f8cdf0d7" compoundref="primitives_2block_8h" startline="163" endline="169">CBlock::GetStakeEntropyBit</referencedby>
        <referencedby refid="class_c_block_1a6e308b2d75d1cfc4a75eda36feb60ca1" compoundref="main_8cpp" startline="4125" endline="4242">CBlock::SetBestChain</referencedby>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a4867652ab4163a10ac4e3d04f0352423" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int base_uint&lt; BITS &gt;::bits</definition>
        <argsstring>() const </argsstring>
        <name>bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the position of the highest bit set plus one, or zero if the value is zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="274" column="1" bodyfile="/home/dev/ds-160209/src/uint256.cpp" bodystart="204" bodyend="216"/>
        <referencedby refid="classbase__uint_1ad6fa7e22ab995247c0bf298069732e1d" compoundref="uint256_8cpp" startline="90" endline="113">base_uint&lt; BITS &gt;::operator/=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1abf39b71afc016b333b8996def4c6bc40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>uint64_t base_uint&lt; BITS &gt;::GetLow64</definition>
        <argsstring>() const </argsstring>
        <name>GetLow64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="276" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="276" bodyend="280"/>
        <referencedby refid="struct_block_hasher_1a59f9fb4b764751996c5bc6ff199b4c3d" compoundref="main_8h" startline="73" endline="73">BlockHasher::operator()</referencedby>
        <referencedby refid="classuint256_1af30486eee47f077f91ed762d0db6ddca" compoundref="uint256_8cpp" startline="274" endline="295">uint256::GetCompact</referencedby>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a16f0848f568f519885b799f0eb388dcd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int base_uint&lt; BITS &gt;::GetSerializeSize</definition>
        <argsstring>(int nType, int nVersion) const </argsstring>
        <name>GetSerializeSize</name>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="282" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1a0c2c978306503bb188caabc873ed0b2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void base_uint&lt; BITS &gt;::Serialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="288" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classbase__uint_1adf1ad639d94997a9cda95e0c424ab51a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void base_uint&lt; BITS &gt;::Unserialize</definition>
        <argsstring>(Stream &amp;s, int nType, int nVersion)</argsstring>
        <name>Unserialize</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/uint256.h" line="294" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="294" bodyend="297"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Template base class for unsigned big integers. </para>    </detaileddescription>
    <location file="/home/dev/ds-160209/src/uint256.h" line="32" column="1" bodyfile="/home/dev/ds-160209/src/uint256.h" bodystart="31" bodyend="302"/>
    <listofallmembers>
      <member refid="classbase__uint_1aafd4418923a92b58a1c360e657fa7d83" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1a5d4e4c28c82c3a12b3689860081579c1" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1a217f9750f0ca9cdeefffb7bb1f1952d6" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1aa1ebaba47302da3e120879d186355736" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1ab6dd7d7921572078a4733e4acc22b2a9" prot="public" virt="non-virtual"><scope>base_uint</scope><name>base_uint</name></member>
      <member refid="classbase__uint_1aaa32054bf4e8fbb31d54a75f6065174d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>begin</name></member>
      <member refid="classbase__uint_1ae2049504988d5024ccfe71fb52b2009a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>begin</name></member>
      <member refid="classbase__uint_1a4867652ab4163a10ac4e3d04f0352423" prot="public" virt="non-virtual"><scope>base_uint</scope><name>bits</name></member>
      <member refid="classbase__uint_1ac9777c80cfcf1355cf17258027ca35bb" prot="public" virt="non-virtual"><scope>base_uint</scope><name>CompareTo</name></member>
      <member refid="classbase__uint_1a76539ef6be800bc02e4038f457a4f74a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>end</name></member>
      <member refid="classbase__uint_1a4e073e41505b8fb901881342a7ea397a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>end</name></member>
      <member refid="classbase__uint_1a39817436d7ba143e8d52abc475097384" prot="public" virt="non-virtual"><scope>base_uint</scope><name>EqualTo</name></member>
      <member refid="classbase__uint_1a0cb831d93f1580c1355b9665c21629f2" prot="public" virt="non-virtual"><scope>base_uint</scope><name>Get64</name></member>
      <member refid="classbase__uint_1aa701be5115bacf02c299b05598cf616d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>getdouble</name></member>
      <member refid="classbase__uint_1ac9929c28600796a9acf75881bb750576" prot="public" virt="non-virtual"><scope>base_uint</scope><name>GetHex</name></member>
      <member refid="classbase__uint_1abf39b71afc016b333b8996def4c6bc40" prot="public" virt="non-virtual"><scope>base_uint</scope><name>GetLow64</name></member>
      <member refid="classbase__uint_1a16f0848f568f519885b799f0eb388dcd" prot="public" virt="non-virtual"><scope>base_uint</scope><name>GetSerializeSize</name></member>
      <member refid="classbase__uint_1a0f528438872245b8fc54ff60bbb6118a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator!</name></member>
      <member refid="classbase__uint_1a3cc3bccf252004fbbd2b96dc769378e7" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator!=</name></member>
      <member refid="classbase__uint_1ab7b366cc0883f25fa57fb09d4bc33807" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator!=</name></member>
      <member refid="classbase__uint_1a7dd38f6935c35d4b534b669c3baf21a6" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&amp;</name></member>
      <member refid="classbase__uint_1a6cb549b322e5bbcca794366f5fd3fb15" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&amp;=</name></member>
      <member refid="classbase__uint_1a7cc93af608b4d2b8e45f8a18bb085cf0" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator*</name></member>
      <member refid="classbase__uint_1a3490f0aef12712d434cda33f913b586f" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator*</name></member>
      <member refid="classbase__uint_1aa70b7d954258d2cd4bb77721e357fd40" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator*=</name></member>
      <member refid="classbase__uint_1a806b2ba843181e9dd4c824414fbcc13d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator*=</name></member>
      <member refid="classbase__uint_1ab46abc7a4c02bbbe6ee4d44db58f36fd" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator+</name></member>
      <member refid="classbase__uint_1a56b54869886808961092d3f764fadd9f" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator++</name></member>
      <member refid="classbase__uint_1a2d5a123c856b2b31fae5f65891832486" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator++</name></member>
      <member refid="classbase__uint_1a8fb3109e7c46536bb66ac41242176246" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator+=</name></member>
      <member refid="classbase__uint_1a14f2b12970b3198d65abafb2615207ca" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator+=</name></member>
      <member refid="classbase__uint_1a29b620fba192a191054b35bf269ea221" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator-</name></member>
      <member refid="classbase__uint_1a42603f675219a79c1087da39677dd6d3" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator-</name></member>
      <member refid="classbase__uint_1a2cc581d32afac619acd12601ddea4180" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator--</name></member>
      <member refid="classbase__uint_1a78a8e46c434c0e61be86282fe9543587" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator--</name></member>
      <member refid="classbase__uint_1a89d8332840076ec102839b8a10dda9b4" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator-=</name></member>
      <member refid="classbase__uint_1ab64f7a7a87b9af5ea345e4678b4cc1e9" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator-=</name></member>
      <member refid="classbase__uint_1a3027097ea3718db496e486d5c64a6bbd" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator/</name></member>
      <member refid="classbase__uint_1ad6fa7e22ab995247c0bf298069732e1d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator/=</name></member>
      <member refid="classbase__uint_1a89272b5112f90ba683c0f066ba1426c1" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&lt;</name></member>
      <member refid="classbase__uint_1acee16d973ae59087cd962720773f53dd" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&lt;&lt;</name></member>
      <member refid="classbase__uint_1acb449d2fcb5af767fa6b01890e836a4e" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&lt;&lt;=</name></member>
      <member refid="classbase__uint_1ac7f1bdba7208bd852f7b00f7c49624f8" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&lt;=</name></member>
      <member refid="classbase__uint_1a0425a3c4d342b6fc9a68b1766cee9ede" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator=</name></member>
      <member refid="classbase__uint_1a115a5ddb2f2637e09703a25cfc580483" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator=</name></member>
      <member refid="classbase__uint_1aafca305decdfd2ded4688213ab4a55fa" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator==</name></member>
      <member refid="classbase__uint_1a977dbbe7e78bbdcc2aea2dc16292d424" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator==</name></member>
      <member refid="classbase__uint_1ac59719bd052d5dc2afcc35ae4a8843ab" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&gt;</name></member>
      <member refid="classbase__uint_1a9eb243df5a6dfa3d0cd326427d99bfa6" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&gt;=</name></member>
      <member refid="classbase__uint_1a9d619adcbf9ad5539f5e98f739edd15d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&gt;&gt;</name></member>
      <member refid="classbase__uint_1a4e0344432bbcce79525fd2c182173b3b" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator&gt;&gt;=</name></member>
      <member refid="classbase__uint_1aa9c66282ad78846e8310984aeb2df49d" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator^</name></member>
      <member refid="classbase__uint_1ad5ec10977ebeab115fe857637990e267" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator^=</name></member>
      <member refid="classbase__uint_1a3d77324f5c5166e4dabadac360bea6e7" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator^=</name></member>
      <member refid="classbase__uint_1af11d7776598f6633c139636314f065d6" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator|</name></member>
      <member refid="classbase__uint_1ab116d89cbae68b32fbecf5d1de98bb2e" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator|=</name></member>
      <member refid="classbase__uint_1ac8edb6e097d9eede21f8fa44e9184913" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator|=</name></member>
      <member refid="classbase__uint_1ad64a83e128fcf2d2ac072811a3e36300" prot="public" virt="non-virtual"><scope>base_uint</scope><name>operator~</name></member>
      <member refid="classbase__uint_1a0edb1465d540fadd92b21659f27083a2" prot="protected" virt="non-virtual"><scope>base_uint</scope><name>pn</name></member>
      <member refid="classbase__uint_1a0c2c978306503bb188caabc873ed0b2f" prot="public" virt="non-virtual"><scope>base_uint</scope><name>Serialize</name></member>
      <member refid="classbase__uint_1ade1a897fac931f28f54998c92c797228" prot="public" virt="non-virtual"><scope>base_uint</scope><name>SetHex</name></member>
      <member refid="classbase__uint_1afe3600e6ae4e9f69e1c036581a2716c8" prot="public" virt="non-virtual"><scope>base_uint</scope><name>SetHex</name></member>
      <member refid="classbase__uint_1ae0e221686cd63384569a8db5cc06d4c9" prot="public" virt="non-virtual"><scope>base_uint</scope><name>size</name></member>
      <member refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" prot="public" virt="non-virtual"><scope>base_uint</scope><name>ToString</name></member>
      <member refid="classbase__uint_1aa02da58f540b087723acd9a92ceca5f1" prot="public" virt="non-virtual"><scope>base_uint</scope><name>uint160</name></member>
      <member refid="classbase__uint_1a2748616a40a1e4fdd6db14b92e9619e2" prot="public" virt="non-virtual"><scope>base_uint</scope><name>uint256</name></member>
      <member refid="classbase__uint_1a0d7ebbc9f372d8d9d46f50083d0aaad7" prot="public" virt="non-virtual"><scope>base_uint</scope><name>uint512</name></member>
      <member refid="classbase__uint_1adf1ad639d94997a9cda95e0c424ab51a" prot="public" virt="non-virtual"><scope>base_uint</scope><name>Unserialize</name></member>
      <member refid="classbase__uint_1ac5863fc3d36ac3e887fbca5e08efe046adf579395d753e2d9607ecd61424f0853" prot="protected" virt="non-virtual"><scope>base_uint</scope><name>WIDTH</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
