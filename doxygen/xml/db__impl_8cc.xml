<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="db__impl_8cc" kind="file" language="C++">
    <compoundname>db_impl.cc</compoundname>
    <includes refid="db__impl_8h" local="yes">db/db_impl.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">set</includes>
    <includes local="no">string</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">vector</includes>
    <includes refid="builder_8h" local="yes">db/builder.h</includes>
    <includes refid="db__iter_8h" local="yes">db/db_iter.h</includes>
    <includes refid="dbformat_8h" local="yes">db/dbformat.h</includes>
    <includes refid="filename_8h" local="yes">db/filename.h</includes>
    <includes refid="log__reader_8h" local="yes">db/log_reader.h</includes>
    <includes refid="log__writer_8h" local="yes">db/log_writer.h</includes>
    <includes refid="memtable_8h" local="yes">db/memtable.h</includes>
    <includes refid="table__cache_8h" local="yes">db/table_cache.h</includes>
    <includes refid="version__set_8h" local="yes">db/version_set.h</includes>
    <includes refid="write__batch__internal_8h" local="yes">db/write_batch_internal.h</includes>
    <includes refid="leveldb_2include_2leveldb_2db_8h" local="yes">leveldb/db.h</includes>
    <includes refid="env_8h" local="yes">leveldb/env.h</includes>
    <includes refid="status_8h" local="yes">leveldb/status.h</includes>
    <includes refid="table_8h" local="yes">leveldb/table.h</includes>
    <includes refid="table__builder_8h" local="yes">leveldb/table_builder.h</includes>
    <includes refid="port_8h" local="yes">port/port.h</includes>
    <includes refid="leveldb_2table_2block_8h" local="yes">table/block.h</includes>
    <includes refid="merger_8h" local="yes">table/merger.h</includes>
    <includes refid="two__level__iterator_8h" local="yes">table/two_level_iterator.h</includes>
    <includes refid="coding_8h" local="yes">util/coding.h</includes>
    <includes refid="logging_8h" local="yes">util/logging.h</includes>
    <includes refid="mutexlock_8h" local="yes">util/mutexlock.h</includes>
    <incdepgraph>
      <node id="36326">
        <label>leveldb/table.h</label>
        <link refid="table_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36295" relation="include">
        </childnode>
      </node>
      <node id="36332">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="36292" relation="include">
        </childnode>
        <childnode refid="36300" relation="include">
        </childnode>
      </node>
      <node id="36312">
        <label>stdarg.h</label>
      </node>
      <node id="36320">
        <label>db/skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="36297" relation="include">
        </childnode>
        <childnode refid="36321" relation="include">
        </childnode>
        <childnode refid="36305" relation="include">
        </childnode>
        <childnode refid="36322" relation="include">
        </childnode>
        <childnode refid="36323" relation="include">
        </childnode>
      </node>
      <node id="36336">
        <label>util/mutexlock.h</label>
        <link refid="mutexlock_8h"/>
        <childnode refid="36305" relation="include">
        </childnode>
        <childnode refid="36313" relation="include">
        </childnode>
      </node>
      <node id="36285">
        <label>/home/dev/ds-160209/src/leveldb/db/db_impl.cc</label>
        <link refid="db_impl.cc"/>
        <childnode refid="36286" relation="include">
        </childnode>
        <childnode refid="36314" relation="include">
        </childnode>
        <childnode refid="36288" relation="include">
        </childnode>
        <childnode refid="36292" relation="include">
        </childnode>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36290" relation="include">
        </childnode>
        <childnode refid="36311" relation="include">
        </childnode>
        <childnode refid="36315" relation="include">
        </childnode>
        <childnode refid="36316" relation="include">
        </childnode>
        <childnode refid="36289" relation="include">
        </childnode>
        <childnode refid="36317" relation="include">
        </childnode>
        <childnode refid="36318" relation="include">
        </childnode>
        <childnode refid="36307" relation="include">
        </childnode>
        <childnode refid="36319" relation="include">
        </childnode>
        <childnode refid="36324" relation="include">
        </childnode>
        <childnode refid="36327" relation="include">
        </childnode>
        <childnode refid="36331" relation="include">
        </childnode>
        <childnode refid="36293" relation="include">
        </childnode>
        <childnode refid="36310" relation="include">
        </childnode>
        <childnode refid="36300" relation="include">
        </childnode>
        <childnode refid="36326" relation="include">
        </childnode>
        <childnode refid="36303" relation="include">
        </childnode>
        <childnode refid="36305" relation="include">
        </childnode>
        <childnode refid="36333" relation="include">
        </childnode>
        <childnode refid="36334" relation="include">
        </childnode>
        <childnode refid="36335" relation="include">
        </childnode>
        <childnode refid="36304" relation="include">
        </childnode>
        <childnode refid="36306" relation="include">
        </childnode>
        <childnode refid="36336" relation="include">
        </childnode>
      </node>
      <node id="36323">
        <label>util/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
      </node>
      <node id="36306">
        <label>util/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="36290" relation="include">
        </childnode>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36292" relation="include">
        </childnode>
        <childnode refid="36305" relation="include">
        </childnode>
      </node>
      <node id="36297">
        <label>assert.h</label>
      </node>
      <node id="36301">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="36298" relation="include">
        </childnode>
      </node>
      <node id="36329">
        <label>db/version_edit.h</label>
        <link refid="version__edit_8h"/>
        <childnode refid="36288" relation="include">
        </childnode>
        <childnode refid="36330" relation="include">
        </childnode>
        <childnode refid="36311" relation="include">
        </childnode>
        <childnode refid="36289" relation="include">
        </childnode>
      </node>
      <node id="36322">
        <label>util/arena.h</label>
        <link refid="arena_8h"/>
        <childnode refid="36311" relation="include">
        </childnode>
        <childnode refid="36297" relation="include">
        </childnode>
        <childnode refid="36298" relation="include">
        </childnode>
        <childnode refid="36294" relation="include">
        </childnode>
      </node>
      <node id="36321">
        <label>stdlib.h</label>
      </node>
      <node id="36289">
        <label>db/dbformat.h</label>
        <link refid="dbformat_8h"/>
        <childnode refid="36290" relation="include">
        </childnode>
        <childnode refid="36291" relation="include">
        </childnode>
        <childnode refid="36293" relation="include">
        </childnode>
        <childnode refid="36302" relation="include">
        </childnode>
        <childnode refid="36296" relation="include">
        </childnode>
        <childnode refid="36303" relation="include">
        </childnode>
        <childnode refid="36304" relation="include">
        </childnode>
        <childnode refid="36306" relation="include">
        </childnode>
      </node>
      <node id="36293">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36290" relation="include">
        </childnode>
        <childnode refid="36295" relation="include">
        </childnode>
        <childnode refid="36301" relation="include">
        </childnode>
      </node>
      <node id="36292">
        <label>string</label>
      </node>
      <node id="36328">
        <label>map</label>
      </node>
      <node id="36335">
        <label>table/two_level_iterator.h</label>
        <link refid="two__level__iterator_8h"/>
        <childnode refid="36295" relation="include">
        </childnode>
      </node>
      <node id="36298">
        <label>stddef.h</label>
      </node>
      <node id="36325">
        <label>leveldb/cache.h</label>
        <link refid="cache_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36296" relation="include">
        </childnode>
      </node>
      <node id="36318">
        <label>db/log_reader.h</label>
        <link refid="log__reader_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36308" relation="include">
        </childnode>
        <childnode refid="36296" relation="include">
        </childnode>
        <childnode refid="36300" relation="include">
        </childnode>
      </node>
      <node id="36300">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="36292" relation="include">
        </childnode>
        <childnode refid="36296" relation="include">
        </childnode>
      </node>
      <node id="36316">
        <label>db/db_iter.h</label>
        <link refid="db__iter_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36293" relation="include">
        </childnode>
        <childnode refid="36289" relation="include">
        </childnode>
      </node>
      <node id="36327">
        <label>db/version_set.h</label>
        <link refid="version__set_8h"/>
        <childnode refid="36328" relation="include">
        </childnode>
        <childnode refid="36288" relation="include">
        </childnode>
        <childnode refid="36311" relation="include">
        </childnode>
        <childnode refid="36289" relation="include">
        </childnode>
        <childnode refid="36329" relation="include">
        </childnode>
        <childnode refid="36305" relation="include">
        </childnode>
        <childnode refid="36313" relation="include">
        </childnode>
      </node>
      <node id="36304">
        <label>util/coding.h</label>
        <link refid="coding_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36299" relation="include">
        </childnode>
        <childnode refid="36292" relation="include">
        </childnode>
        <childnode refid="36296" relation="include">
        </childnode>
        <childnode refid="36305" relation="include">
        </childnode>
      </node>
      <node id="36317">
        <label>db/filename.h</label>
        <link refid="filename_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36292" relation="include">
        </childnode>
        <childnode refid="36296" relation="include">
        </childnode>
        <childnode refid="36300" relation="include">
        </childnode>
        <childnode refid="36305" relation="include">
        </childnode>
      </node>
      <node id="36299">
        <label>string.h</label>
      </node>
      <node id="36307">
        <label>db/log_writer.h</label>
        <link refid="log__writer_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36308" relation="include">
        </childnode>
        <childnode refid="36296" relation="include">
        </childnode>
        <childnode refid="36300" relation="include">
        </childnode>
      </node>
      <node id="36286">
        <label>db/db_impl.h</label>
        <link refid="db__impl_8h"/>
        <childnode refid="36287" relation="include">
        </childnode>
        <childnode refid="36288" relation="include">
        </childnode>
        <childnode refid="36289" relation="include">
        </childnode>
        <childnode refid="36307" relation="include">
        </childnode>
        <childnode refid="36309" relation="include">
        </childnode>
        <childnode refid="36293" relation="include">
        </childnode>
        <childnode refid="36310" relation="include">
        </childnode>
        <childnode refid="36305" relation="include">
        </childnode>
        <childnode refid="36313" relation="include">
        </childnode>
      </node>
      <node id="36311">
        <label>vector</label>
      </node>
      <node id="36330">
        <label>utility</label>
      </node>
      <node id="36308">
        <label>db/log_format.h</label>
        <link refid="log__format_8h"/>
      </node>
      <node id="36331">
        <label>db/write_batch_internal.h</label>
        <link refid="write__batch__internal_8h"/>
        <childnode refid="36332" relation="include">
        </childnode>
      </node>
      <node id="36333">
        <label>table/block.h</label>
        <link refid="leveldb_2table_2block_8h"/>
        <childnode refid="36298" relation="include">
        </childnode>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36295" relation="include">
        </childnode>
      </node>
      <node id="36305">
        <label>port/port.h</label>
        <link refid="port_8h"/>
        <childnode refid="36299" relation="include">
        </childnode>
      </node>
      <node id="36294">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="36319">
        <label>db/memtable.h</label>
        <link refid="memtable_8h"/>
        <childnode refid="36292" relation="include">
        </childnode>
        <childnode refid="36293" relation="include">
        </childnode>
        <childnode refid="36289" relation="include">
        </childnode>
        <childnode refid="36320" relation="include">
        </childnode>
        <childnode refid="36322" relation="include">
        </childnode>
      </node>
      <node id="36287">
        <label>deque</label>
      </node>
      <node id="36303">
        <label>leveldb/table_builder.h</label>
        <link refid="table__builder_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36301" relation="include">
        </childnode>
        <childnode refid="36300" relation="include">
        </childnode>
      </node>
      <node id="36309">
        <label>db/snapshot.h</label>
        <link refid="snapshot_8h"/>
        <childnode refid="36293" relation="include">
        </childnode>
      </node>
      <node id="36334">
        <label>table/merger.h</label>
        <link refid="merger_8h"/>
      </node>
      <node id="36296">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="36297" relation="include">
        </childnode>
        <childnode refid="36298" relation="include">
        </childnode>
        <childnode refid="36299" relation="include">
        </childnode>
        <childnode refid="36292" relation="include">
        </childnode>
      </node>
      <node id="36324">
        <label>db/table_cache.h</label>
        <link refid="table__cache_8h"/>
        <childnode refid="36292" relation="include">
        </childnode>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36289" relation="include">
        </childnode>
        <childnode refid="36325" relation="include">
        </childnode>
        <childnode refid="36326" relation="include">
        </childnode>
        <childnode refid="36305" relation="include">
        </childnode>
      </node>
      <node id="36310">
        <label>leveldb/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="36292" relation="include">
        </childnode>
        <childnode refid="36311" relation="include">
        </childnode>
        <childnode refid="36312" relation="include">
        </childnode>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36300" relation="include">
        </childnode>
      </node>
      <node id="36288">
        <label>set</label>
      </node>
      <node id="36314">
        <label>algorithm</label>
      </node>
      <node id="36313">
        <label>port/thread_annotations.h</label>
        <link refid="thread__annotations_8h"/>
      </node>
      <node id="36290">
        <label>stdio.h</label>
      </node>
      <node id="36302">
        <label>leveldb/filter_policy.h</label>
        <link refid="filter__policy_8h"/>
        <childnode refid="36292" relation="include">
        </childnode>
      </node>
      <node id="36291">
        <label>leveldb/comparator.h</label>
        <link refid="comparator_8h"/>
        <childnode refid="36292" relation="include">
        </childnode>
      </node>
      <node id="36295">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="36296" relation="include">
        </childnode>
        <childnode refid="36300" relation="include">
        </childnode>
      </node>
      <node id="36315">
        <label>db/builder.h</label>
        <link refid="builder_8h"/>
        <childnode refid="36300" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structleveldb_1_1_d_b_impl_1_1_writer" prot="public">leveldb::DBImpl::Writer</innerclass>
    <innerclass refid="structleveldb_1_1_d_b_impl_1_1_compaction_state" prot="public">leveldb::DBImpl::CompactionState</innerclass>
    <innerclass refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output" prot="public">leveldb::DBImpl::CompactionState::Output</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="db__impl_8cc_1a900dad9ea326bf70a183d88a8ab50a13" prot="public" static="no" mutable="no">
        <type>port::Mutex *</type>
        <definition>port::Mutex* mu</definition>
        <argsstring></argsstring>
        <name>mu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" line="1018" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1018" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db__impl_8cc_1afc25f30ab1a6d04798c360a2ce70b87d" prot="public" static="no" mutable="no">
        <type>Version *</type>
        <definition>Version* version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" line="1019" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1019" bodyend="-1"/>
        <referencedby refid="class_d_e_b_u_g_console_1ab42a3a7da3a7c14c1b59fef0e8f6b78c" compoundref="debugconsole_8cpp" startline="202" endline="236">DEBUGConsole::DEBUGConsole</referencedby>
        <referencedby refid="class_c_stealth_address_1aa3f4655dced125bf698c208b6e7ac4b8" compoundref="stealth_8cpp" startline="17" endline="64">CStealthAddress::SetEncoded</referencedby>
        <referencedby refid="stealth_8h_1a26c89afcb720e8b1a9c9dadaee26757b" compoundref="stealth_8cpp" startline="649" endline="682">IsStealthAddress</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db__impl_8cc_1a1a1fa02d49bbc4c0896ff1cb12618dc3" prot="public" static="no" mutable="no">
        <type>MemTable *</type>
        <definition>MemTable* mem</definition>
        <argsstring></argsstring>
        <name>mem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" line="1020" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1020" bodyend="-1"/>
        <referencedby refid="utilstrencodings_8h_1a49f6f1cd42cb886762be52c72466dc7e" compoundref="util_8cpp" startline="719" endline="743">EncodeBase64Secure</referencedby>
        <referencedby refid="utilstrencodings_8h_1a0071c0bf91d611895e43999e62666c96" compoundref="util_8cpp" startline="746" endline="772">DecodeBase64Secure</referencedby>
      </memberdef>
      <memberdef kind="variable" id="db__impl_8cc_1aaa0d6be8984fcd39f26c0d2dadacd870" prot="public" static="no" mutable="no">
        <type>MemTable *</type>
        <definition>MemTable* imm</definition>
        <argsstring></argsstring>
        <name>imm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" line="1021" column="1" bodyfile="/home/dev/ds-160209/src/leveldb/db/db_impl.cc" bodystart="1021" bodyend="-1"/>
        <referencedby refid="classleveldb_1_1_d_b_impl_1a089964ddcd1f5dc85e73499ae57be508" compoundref="db__impl_8cc" startline="1077" endline="1122">leveldb::DBImpl::Get</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db__impl_8h" kindref="compound">db/db_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="builder_8h" kindref="compound">db/builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db__iter_8h" kindref="compound">db/db_iter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dbformat_8h" kindref="compound">db/dbformat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filename_8h" kindref="compound">db/filename.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="log__reader_8h" kindref="compound">db/log_reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="log__writer_8h" kindref="compound">db/log_writer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtable_8h" kindref="compound">db/memtable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__cache_8h" kindref="compound">db/table_cache.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="version__set_8h" kindref="compound">db/version_set.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="write__batch__internal_8h" kindref="compound">db/write_batch_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="leveldb_2include_2leveldb_2db_8h" kindref="compound">leveldb/db.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="env_8h" kindref="compound">leveldb/env.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">leveldb/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table_8h" kindref="compound">leveldb/table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__builder_8h" kindref="compound">leveldb/table_builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="port_8h" kindref="compound">port/port.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="leveldb_2table_2block_8h" kindref="compound">table/block.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="merger_8h" kindref="compound">table/merger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="two__level__iterator_8h" kindref="compound">table/two_level_iterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coding_8h" kindref="compound">util/coding.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logging_8h" kindref="compound">util/logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mutexlock_8h" kindref="compound">util/mutexlock.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespaceleveldb_1a550686b2c442f4c3011d68dd12c38662" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a550686b2c442f4c3011d68dd12c38662" kindref="member">kNumNonTableCacheFiles</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Information<sp/>kept<sp/>for<sp/>every<sp/>waiting<sp/>writer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structleveldb_1_1_d_b_impl_1_1_writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structleveldb_1_1_d_b_impl_1_1_writer" kindref="compound">DBImpl::Writer</ref><sp/>{</highlight></codeline>
<codeline lineno="42" refid="structleveldb_1_1_d_b_impl_1_1_writer_1af3b0436a99d2679c0e0ac9f6e1fefa37" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1af3b0436a99d2679c0e0ac9f6e1fefa37" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="43" refid="structleveldb_1_1_d_b_impl_1_1_writer_1ada051134318411635892f0a7d17cb7c0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref>*<sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1ada051134318411635892f0a7d17cb7c0" kindref="member">batch</ref>;</highlight></codeline>
<codeline lineno="44" refid="structleveldb_1_1_d_b_impl_1_1_writer_1acb39717e1fa61127f262b474e18ec9f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1acb39717e1fa61127f262b474e18ec9f6" kindref="member">sync</ref>;</highlight></codeline>
<codeline lineno="45" refid="structleveldb_1_1_d_b_impl_1_1_writer_1afc6025afd873f82252cb563687bd3106" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1afc6025afd873f82252cb563687bd3106" kindref="member">done</ref>;</highlight></codeline>
<codeline lineno="46" refid="structleveldb_1_1_d_b_impl_1_1_writer_1aacb835eedc44855a7c223fca024c5ac4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1port_1_1_cond_var" kindref="compound">port::CondVar</ref><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1aacb835eedc44855a7c223fca024c5ac4" kindref="member">cv</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structleveldb_1_1_d_b_impl_1_1_writer_1a7dfb43a804e1ded7a2a85b3bc756ea93" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1a7dfb43a804e1ded7a2a85b3bc756ea93" kindref="member">Writer</ref>(<ref refid="classleveldb_1_1port_1_1_mutex" kindref="compound">port::Mutex</ref>*<sp/><ref refid="db__impl_8cc_1a900dad9ea326bf70a183d88a8ab50a13" kindref="member">mu</ref>)<sp/>:<sp/>cv(mu)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state" kindref="compound">DBImpl::CompactionState</ref><sp/>{</highlight></codeline>
<codeline lineno="52" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a6b92e9f2249d5977b4801bdf47afed28" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a6b92e9f2249d5977b4801bdf47afed28" kindref="member">compaction</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sequence<sp/>numbers<sp/>&lt;<sp/>smallest_snapshot<sp/>are<sp/>not<sp/>significant<sp/>since<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>never<sp/>have<sp/>to<sp/>service<sp/>a<sp/>snapshot<sp/>below<sp/>smallest_snapshot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore<sp/>if<sp/>we<sp/>have<sp/>seen<sp/>a<sp/>sequence<sp/>number<sp/>S<sp/>&lt;=<sp/>smallest_snapshot,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>drop<sp/>all<sp/>entries<sp/>for<sp/>the<sp/>same<sp/>key<sp/>with<sp/>sequence<sp/>numbers<sp/>&lt;<sp/>S.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a725f0984b8372c51691d72f66672dc89" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a725f0984b8372c51691d72f66672dc89" kindref="member">smallest_snapshot</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Files<sp/>produced<sp/>by<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output" kindref="compound">Output</ref><sp/>{</highlight></codeline>
<codeline lineno="62" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output_1aa4b759dca2a83bdb8d9edbf7e2d213e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output_1aa4b759dca2a83bdb8d9edbf7e2d213e2" kindref="member">number</ref>;</highlight></codeline>
<codeline lineno="63" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output_1a37906cee65a9d1873b7b7a4169f22402" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output_1a37906cee65a9d1873b7b7a4169f22402" kindref="member">file_size</ref>;</highlight></codeline>
<codeline lineno="64" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output_1a88ada857d0cf32ae8e76d7baf4e80c69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output_1a88ada857d0cf32ae8e76d7baf4e80c69" kindref="member">smallest</ref>,<sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output_1a6e257f231aba82d20cb7199a552b2a63" kindref="member">largest</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="66" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1acce338739aafdfa40083ae3d5aacf24a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Output&gt;<sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1acce338739aafdfa40083ae3d5aacf24a" kindref="member">outputs</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>kept<sp/>for<sp/>output<sp/>being<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a4c8e3de65efc30fdf33197d544a466f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>*<sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a4c8e3de65efc30fdf33197d544a466f9" kindref="member">outfile</ref>;</highlight></codeline>
<codeline lineno="70" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a5335b9d45bc03378219e3fbc366fce21" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_table_builder" kindref="compound">TableBuilder</ref>*<sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a5335b9d45bc03378219e3fbc366fce21" kindref="member">builder</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a21aa7304978dffc6841c4c11761f4b71" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a21aa7304978dffc6841c4c11761f4b71" kindref="member">total_bytes</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1ac371d4a1422f4c1c122cfd39e97a6b95" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1_1_output" kindref="compound">Output</ref>*<sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1ac371d4a1422f4c1c122cfd39e97a6b95" kindref="member">current_output</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;outputs[outputs.size()-1];<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a3f66a31afd7f73ef5021337d1ec626b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_compaction_state_1a3f66a31afd7f73ef5021337d1ec626b6" kindref="member">CompactionState</ref>(<ref refid="classleveldb_1_1_compaction" kindref="compound">Compaction</ref>*<sp/>c)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>compaction(c),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile(NULL),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder(NULL),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_bytes(0)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fix<sp/>user-supplied<sp/>options<sp/>to<sp/>be<sp/>reasonable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClipToRange(T*<sp/>ptr,<sp/>V<sp/>minvalue,<sp/>V<sp/>maxvalue)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;V&gt;(*ptr)<sp/>&gt;<sp/>maxvalue)<sp/>*ptr<sp/>=<sp/>maxvalue;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;V&gt;(*ptr)<sp/>&lt;<sp/>minvalue)<sp/>*ptr<sp/>=<sp/>minvalue;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90" refid="namespaceleveldb_1aa4783e598841dca4393a97d360d10f56" refkind="member"><highlight class="normal"><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/><ref refid="namespaceleveldb_1aa4783e598841dca4393a97d360d10f56" kindref="member">SanitizeOptions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dbname,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_key_comparator" kindref="compound">InternalKeyComparator</ref>*<sp/>icmp,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_internal_filter_policy" kindref="compound">InternalFilterPolicy</ref>*<sp/>ipolicy,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref><sp/>result<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>result.<ref refid="structleveldb_1_1_options_1a7522fbf79de73c4f73ef8d9392e8c80b" kindref="member">comparator</ref><sp/>=<sp/>icmp;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>result.<ref refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" kindref="member">filter_policy</ref><sp/>=<sp/>(src.<ref refid="structleveldb_1_1_options_1a24c88997a866d535e68de15b5c3cd02b" kindref="member">filter_policy</ref><sp/>!=<sp/>NULL)<sp/>?<sp/>ipolicy<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>ClipToRange(&amp;result.<ref refid="structleveldb_1_1_options_1a25c6ea125fc63342d8fc25b2f7817be4" kindref="member">max_open_files</ref>,<sp/><sp/><sp/><sp/>64<sp/>+<sp/>kNumNonTableCacheFiles,<sp/>50000);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>ClipToRange(&amp;result.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref>,<sp/>64&lt;&lt;10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1&lt;&lt;30);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>ClipToRange(&amp;result.<ref refid="structleveldb_1_1_options_1a715c7941b43db641e76e598aa9ab52a0" kindref="member">block_size</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1&lt;&lt;10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4&lt;&lt;20);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>a<sp/>log<sp/>file<sp/>in<sp/>the<sp/>same<sp/>directory<sp/>as<sp/>the<sp/>db</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>src.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref>-&gt;<ref refid="classleveldb_1_1_env_1ae6b7c8122df5a8020b2a3439ac39646e" kindref="member">CreateDir</ref>(dbname);<sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>it<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>src.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref>-&gt;<ref refid="classleveldb_1_1_env_1abd743b3d4751ada1ab307427827ed5b0" kindref="member">RenameFile</ref>(<ref refid="namespaceleveldb_1ac40453ca7f9c0bd723873ffe32dc12a2" kindref="member">InfoLogFileName</ref>(dbname),<sp/><ref refid="namespaceleveldb_1a2964797a29cbda9d37cce54109eefdc6" kindref="member">OldInfoLogFileName</ref>(dbname));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/>src.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref>-&gt;<ref refid="classleveldb_1_1_env_1a53a4c41d294fe619f13ec5b697ffc933" kindref="member">NewLogger</ref>(<ref refid="namespaceleveldb_1ac40453ca7f9c0bd723873ffe32dc12a2" kindref="member">InfoLogFileName</ref>(dbname),<sp/>&amp;result.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>place<sp/>suitable<sp/>for<sp/>logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="structleveldb_1_1_options_1a4e87749ebac1ba28dff6bb63eb2059e5" kindref="member">block_cache</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structleveldb_1_1_options_1a4e87749ebac1ba28dff6bb63eb2059e5" kindref="member">block_cache</ref><sp/>=<sp/><ref refid="namespaceleveldb_1a231e1b41322a8b342c91a15a78e425d4" kindref="member">NewLRUCache</ref>(8<sp/>&lt;&lt;<sp/>20);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classleveldb_1_1_d_b_impl_1a269b55605b27271d6ca5fee68af0d8f3" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_d_b_impl_1a269b55605b27271d6ca5fee68af0d8f3" kindref="member">DBImpl::DBImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>raw_options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dbname)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="repair_8cc_1a35fd5bd2e765194573cc90809e6aca7b" kindref="member">env_</ref>(raw_options.env),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_comparator_(raw_options.comparator),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_filter_policy_(raw_options.filter_policy),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a277741aecbdc3655b3bde5df34d80513" kindref="member">options_</ref>(<ref refid="namespaceleveldb_1aa4783e598841dca4393a97d360d10f56" kindref="member">SanitizeOptions</ref>(dbname,<sp/>&amp;internal_comparator_,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;internal_filter_policy_,<sp/>raw_options)),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a00e765ceb00e4ddd070299d67fd3a296" kindref="member">owns_info_log_</ref>(<ref refid="repair_8cc_1a277741aecbdc3655b3bde5df34d80513" kindref="member">options_</ref>.info_log<sp/>!=<sp/>raw_options.info_log),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1aca5d7cdba901420c7476a4821272b65a" kindref="member">owns_cache_</ref>(<ref refid="repair_8cc_1a277741aecbdc3655b3bde5df34d80513" kindref="member">options_</ref>.block_cache<sp/>!=<sp/>raw_options.block_cache),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="repair_8cc_1a2661128a4b7cbc28cec2dfc2fa13816f" kindref="member">dbname_</ref>(dbname),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>db_lock_(NULL),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shutting_down_(NULL),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bg_cv_(&amp;<ref refid="memenv_8cc_1ab1b7efa1bbe0578df2c74e7c31a79a92" kindref="member">mutex_</ref>),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="write__batch_8cc_1a2283818d68088365bff4c006b75d4cfb" kindref="member">mem_</ref>(new<sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>(internal_comparator_)),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imm_(NULL),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logfile_(NULL),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logfile_number_(0),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log_(NULL),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seed_(0),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_batch_(new<sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref>),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bg_compaction_scheduled_(false),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>manual_compaction_(NULL)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>mem_-&gt;<ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>has_imm_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(NULL);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>ten<sp/>files<sp/>or<sp/>so<sp/>for<sp/>other<sp/>uses<sp/>and<sp/>give<sp/>the<sp/>rest<sp/>to<sp/>TableCache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table_cache_size<sp/>=<sp/>options_.<ref refid="structleveldb_1_1_options_1a25c6ea125fc63342d8fc25b2f7817be4" kindref="member">max_open_files</ref><sp/>-<sp/><ref refid="namespaceleveldb_1a550686b2c442f4c3011d68dd12c38662" kindref="member">kNumNonTableCacheFiles</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>table_cache_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_table_cache" kindref="compound">TableCache</ref>(dbname_,<sp/>&amp;options_,<sp/>table_cache_size);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>versions_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_version_set" kindref="compound">VersionSet</ref>(dbname_,<sp/>&amp;options_,<sp/>table_cache_,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;internal_comparator_);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classleveldb_1_1_d_b_impl_1a07a233a94a2531aed9d3718c9b9ed40d" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_d_b_impl_1a07a233a94a2531aed9d3718c9b9ed40d" kindref="member">DBImpl::~DBImpl</ref>()<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>background<sp/>work<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>shutting_down_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>non-NULL<sp/>value<sp/>is<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bg_compaction_scheduled_)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>bg_cv_.<ref refid="classleveldb_1_1port_1_1_cond_var_1a9e9855595a3f3a3ccf47949696065597" kindref="member">Wait</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(db_lock_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a194a2ee3c21bc0b204ad0e5bc3b81d4b" kindref="member">UnlockFile</ref>(db_lock_);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>versions_;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem_<sp/>!=<sp/>NULL)<sp/>mem_-&gt;<ref refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm_<sp/>!=<sp/>NULL)<sp/>imm_-&gt;<ref refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmp_batch_;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>log_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>logfile_;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>table_cache_;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(owns_info_log_)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(owns_cache_)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>options_.<ref refid="structleveldb_1_1_options_1a4e87749ebac1ba28dff6bb63eb2059e5" kindref="member">block_cache</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>DBImpl::NewDB()<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref><sp/>new_db;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>new_db.<ref refid="classleveldb_1_1_version_edit_1ab562147cdd82b184e86e88bd375a718c" kindref="member">SetComparatorName</ref>(user_comparator()-&gt;Name());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>new_db.<ref refid="classleveldb_1_1_version_edit_1a47e5c58d34b0e27dc8990687e0c5477a" kindref="member">SetLogNumber</ref>(0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>new_db.<ref refid="classleveldb_1_1_version_edit_1a4c104515adf573be0ead29e6835f14fb" kindref="member">SetNextFile</ref>(2);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>new_db.<ref refid="classleveldb_1_1_version_edit_1abd6e841ed400672d33d26f4b187a66bf" kindref="member">SetLastSequence</ref>(0);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>manifest<sp/>=<sp/><ref refid="namespaceleveldb_1a1ea160b70b18dc85b537e16db3d6ddd0" kindref="member">DescriptorFileName</ref>(dbname_,<sp/>1);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>*<sp/>file;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de" kindref="member">NewWritableFile</ref>(manifest,<sp/>&amp;file);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>log::Writer<sp/>log(file);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>record;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>new_db.<ref refid="classleveldb_1_1_version_edit_1aa3161c67223f6c5e843be579a8456086" kindref="member">EncodeTo</ref>(&amp;record);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>log.AddRecord(record);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>file-&gt;<ref refid="classleveldb_1_1_writable_file_1a2efbf9c02a26028b5002df73b4393915" kindref="member">Close</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>&quot;CURRENT&quot;<sp/>file<sp/>that<sp/>points<sp/>to<sp/>the<sp/>new<sp/>manifest<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="namespaceleveldb_1a73133aa2e18928553d14913491b094e7" kindref="member">SetCurrentFile</ref>(env_,<sp/>dbname_,<sp/>1);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af" kindref="member">DeleteFile</ref>(manifest);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DBImpl::MaybeIgnoreError(Status*<sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;ok()<sp/>||<sp/>options_.<ref refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" kindref="member">paranoid_checks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>change<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ignoring<sp/>error<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>s-&gt;ToString().c_str());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>*s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DBImpl::DeleteObsoleteFiles()<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bg_error_.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>a<sp/>background<sp/>error,<sp/>we<sp/>don&apos;t<sp/>know<sp/>whether<sp/>a<sp/>new<sp/>version<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>may<sp/>not<sp/>have<sp/>been<sp/>committed,<sp/>so<sp/>we<sp/>cannot<sp/>safely<sp/>garbage<sp/>collect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>set<sp/>of<sp/>all<sp/>of<sp/>the<sp/>live<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>std::set&lt;uint64_t&gt;<sp/>live<sp/>=<sp/>pending_outputs_;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a3b3c810f0fea88db81b94e604b3dd78f" kindref="member">AddLiveFiles</ref>(&amp;live);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>filenames;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a53028e3112d7bb3bf6574ddaab18d6f6" kindref="member">GetChildren</ref>(dbname_,<sp/>&amp;filenames);<sp/></highlight><highlight class="comment">//<sp/>Ignoring<sp/>errors<sp/>on<sp/>purpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>number;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1" kindref="member">FileType</ref><sp/>type;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>filenames.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" kindref="member">ParseFileName</ref>(filenames[i],<sp/>&amp;number,<sp/>&amp;type))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keep<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a9aa7599d651d74892a611835cb90f1a8" kindref="member">kLogFile</ref>:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>=<sp/>((number<sp/>&gt;=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a0ff6a25abcf0b0c7d94bd425b6fb0ef2" kindref="member">LogNumber</ref>())<sp/>||</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(number<sp/>==<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a0c2a382650ba2b987d8059faacbd0c39" kindref="member">PrevLogNumber</ref>()));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1af941d0365407ca03ed62ad30696c78da" kindref="member">kDescriptorFile</ref>:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>my<sp/>manifest<sp/>file,<sp/>and<sp/>any<sp/>newer<sp/>incarnations&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(in<sp/>case<sp/>there<sp/>is<sp/>a<sp/>race<sp/>that<sp/>allows<sp/>other<sp/>incarnations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>=<sp/>(number<sp/>&gt;=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a1e0d9925a9d909345ede866b9c504750" kindref="member">ManifestFileNumber</ref>());</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" kindref="member">kTableFile</ref>:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>=<sp/>(live.find(number)<sp/>!=<sp/>live.end());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a485201937a3d025c7a5fe0e3517733d6" kindref="member">kTempFile</ref>:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>temp<sp/>files<sp/>that<sp/>are<sp/>currently<sp/>being<sp/>written<sp/>to<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>recorded<sp/>in<sp/>pending_outputs_,<sp/>which<sp/>is<sp/>inserted<sp/>into<sp/>&quot;live&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>=<sp/>(live.find(number)<sp/>!=<sp/>live.end());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a77227e6519db508a8baf96907bed69fb" kindref="member">kCurrentFile</ref>:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1abbb39081ce3d1fa7397c074443910235" kindref="member">kDBLockFile</ref>:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a0e4c1f07a2b307bc47531e94007c34b2" kindref="member">kInfoLogFile</ref>:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keep)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1aa5055e5d888b92fd695bbb24c22ca8be" kindref="member">kTableFile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_cache_-&gt;<ref refid="classleveldb_1_1_table_cache_1a57b81c58ff0533514b3a5d1652f044bc" kindref="member">Evict</ref>(number);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Delete<sp/>type=%d<sp/>#%lld\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(type),</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;unsigned<sp/>long<sp/>long&gt;(number));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af" kindref="member">DeleteFile</ref>(dbname_<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>filenames[i]);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">Status<sp/>DBImpl::Recover(VersionEdit*<sp/>edit)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>error<sp/>from<sp/>CreateDir<sp/>since<sp/>the<sp/>creation<sp/>of<sp/>the<sp/>DB<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>committed<sp/>only<sp/>when<sp/>the<sp/>descriptor<sp/>is<sp/>created,<sp/>and<sp/>this<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>already<sp/>exist<sp/>from<sp/>a<sp/>previous<sp/>failed<sp/>creation<sp/>attempt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1ae6b7c8122df5a8020b2a3439ac39646e" kindref="member">CreateDir</ref>(dbname_);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>assert(db_lock_<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>Status<sp/>s<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a9b7266f0444f832e428328ff19b7b54c" kindref="member">LockFile</ref>(<ref refid="namespaceleveldb_1a9f772d88ab2d47dec0d68e5eb85c579e" kindref="member">LockFileName</ref>(dbname_),<sp/>&amp;db_lock_);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.ok())<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!env_-&gt;<ref refid="classleveldb_1_1_env_1acbb85047fdf7bf441bd365cfb09f9ecb" kindref="member">FileExists</ref>(<ref refid="namespaceleveldb_1affcb2d434f2a772d7c764cd5d1797a9a" kindref="member">CurrentFileName</ref>(dbname_)))<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.<ref refid="structleveldb_1_1_options_1afe1b4e94164ff8f081b1c25bf1bcb62e" kindref="member">create_if_missing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>NewDB();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.ok())<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1aefef9f88d0a6ca6d34bd9dec1670309e" kindref="member">Status::InvalidArgument</ref>(</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbname_,<sp/></highlight><highlight class="stringliteral">&quot;does<sp/>not<sp/>exist<sp/>(create_if_missing<sp/>is<sp/>false)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.<ref refid="structleveldb_1_1_options_1aff3b99b1b30a2dba9642adc6c912d5b7" kindref="member">error_if_exists</ref>)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1aefef9f88d0a6ca6d34bd9dec1670309e" kindref="member">Status::InvalidArgument</ref>(</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbname_,<sp/></highlight><highlight class="stringliteral">&quot;exists<sp/>(error_if_exists<sp/>is<sp/>true)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a955ff8620ec56742cdc48da0e74ab40b" kindref="member">Recover</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref><sp/><ref refid="repair_8cc_1a52c1b794512261f530db50c720acb0c4" kindref="member">max_sequence</ref>(0);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recover<sp/>from<sp/>all<sp/>newer<sp/>log<sp/>files<sp/>than<sp/>the<sp/>ones<sp/>named<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>descriptor<sp/>(new<sp/>log<sp/>files<sp/>may<sp/>have<sp/>been<sp/>added<sp/>by<sp/>the<sp/>previous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>incarnation<sp/>without<sp/>registering<sp/>them<sp/>in<sp/>the<sp/>descriptor).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>PrevLogNumber()<sp/>is<sp/>no<sp/>longer<sp/>used,<sp/>but<sp/>we<sp/>pay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attention<sp/>to<sp/>it<sp/>in<sp/>case<sp/>we<sp/>are<sp/>recovering<sp/>a<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>produced<sp/>by<sp/>an<sp/>older<sp/>version<sp/>of<sp/>leveldb.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>min_log<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a0ff6a25abcf0b0c7d94bd425b6fb0ef2" kindref="member">LogNumber</ref>();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>prev_log<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a0c2a382650ba2b987d8059faacbd0c39" kindref="member">PrevLogNumber</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>filenames;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a53028e3112d7bb3bf6574ddaab18d6f6" kindref="member">GetChildren</ref>(dbname_,<sp/>&amp;filenames);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.ok())<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;uint64_t&gt;<sp/>expected;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a3b3c810f0fea88db81b94e604b3dd78f" kindref="member">AddLiveFiles</ref>(&amp;expected);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>number;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1" kindref="member">FileType</ref><sp/>type;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>logs;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>filenames.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" kindref="member">ParseFileName</ref>(filenames[i],<sp/>&amp;number,<sp/>&amp;type))<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected.erase(number);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1a9aa7599d651d74892a611835cb90f1a8" kindref="member">kLogFile</ref><sp/>&amp;&amp;<sp/>((number<sp/>&gt;=<sp/>min_log)<sp/>||<sp/>(number<sp/>==<sp/>prev_log)))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logs.push_back(number);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!expected.empty())<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[50];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>missing<sp/>files;<sp/>e.g.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(expected.size()));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(buf,<sp/><ref refid="namespaceleveldb_1ac9107e52d0ead114d749dc4b06dfd3ec" kindref="member">TableFileName</ref>(dbname_,<sp/>*(expected.begin())));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recover<sp/>in<sp/>the<sp/>order<sp/>in<sp/>which<sp/>the<sp/>logs<sp/>were<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(logs.begin(),<sp/>logs.end());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>logs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>RecoverLogFile(logs[i],<sp/>edit,<sp/>&amp;<ref refid="repair_8cc_1a52c1b794512261f530db50c720acb0c4" kindref="member">max_sequence</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>previous<sp/>incarnation<sp/>may<sp/>not<sp/>have<sp/>written<sp/>any<sp/>MANIFEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>records<sp/>after<sp/>allocating<sp/>this<sp/>log<sp/>number.<sp/><sp/>So<sp/>we<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>file<sp/>number<sp/>allocation<sp/>counter<sp/>in<sp/>VersionSet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a8a009a58938b12c7a69bda2b4da115a0" kindref="member">MarkFileNumberUsed</ref>(logs[i]);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok())<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(versions_-&gt;<ref refid="classleveldb_1_1_version_set_1acbbb32422426416b0d5e58d35b151526" kindref="member">LastSequence</ref>()<sp/>&lt;<sp/><ref refid="repair_8cc_1a52c1b794512261f530db50c720acb0c4" kindref="member">max_sequence</ref>)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a2234860e72a1ac7361d7bee107da6a07" kindref="member">SetLastSequence</ref>(<ref refid="repair_8cc_1a52c1b794512261f530db50c720acb0c4" kindref="member">max_sequence</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">Status<sp/>DBImpl::RecoverLogFile(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>log_number,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VersionEdit*<sp/>edit,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref>*<sp/><ref refid="repair_8cc_1a52c1b794512261f530db50c720acb0c4" kindref="member">max_sequence</ref>)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">LogReporter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>log::Reader::Reporter<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>Env*<sp/>env;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>Logger*<sp/>info_log;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fname;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>Status*<sp/>status;<sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>if<sp/>options_.paranoid_checks==false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Corruption(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Status&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(info_log,<sp/></highlight><highlight class="stringliteral">&quot;%s%s:<sp/>dropping<sp/>%d<sp/>bytes;<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;status<sp/>==<sp/>NULL<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;(ignoring<sp/>error)<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname,<sp/>static_cast&lt;int&gt;(bytes),<sp/>s.ToString().c_str());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;status<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>this-&gt;status-&gt;ok())<sp/>*this-&gt;status<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>log<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>std::string<sp/>fname<sp/>=<sp/><ref refid="namespaceleveldb_1ae5aadcd574cc5186e7821177d44f4c6c" kindref="member">LogFileName</ref>(dbname_,<sp/>log_number);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>SequentialFile*<sp/>file;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>Status<sp/>status<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1ad73810059f48c1d7b91125d357e7d351" kindref="member">NewSequentialFile</ref>(fname,<sp/>&amp;file);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>MaybeIgnoreError(&amp;status);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>log<sp/>reader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>LogReporter<sp/>reporter;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>reporter.env<sp/>=<sp/>env_;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>reporter.info_log<sp/>=<sp/>options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>reporter.fname<sp/>=<sp/>fname.c_str();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>reporter.status<sp/>=<sp/>(options_.<ref refid="structleveldb_1_1_options_1a4263dcc655493100eecc9daf6737a10b" kindref="member">paranoid_checks</ref><sp/>?<sp/>&amp;status<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>intentionally<sp/>make<sp/>log::Reader<sp/>do<sp/>checksumming<sp/>even<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>paranoid_checks==false<sp/>so<sp/>that<sp/>corruptions<sp/>cause<sp/>entire<sp/>commits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>skipped<sp/>instead<sp/>of<sp/>propagating<sp/>bad<sp/>information<sp/>(like<sp/>overly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>large<sp/>sequence<sp/>numbers).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>log::Reader<sp/>reader(file,<sp/>&amp;reporter,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="comment">/*checksum*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="comment">/*initial_offset*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Recovering<sp/>log<sp/>#%llu&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>log_number);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>the<sp/>records<sp/>and<sp/>add<sp/>to<sp/>a<sp/>memtable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>std::string<sp/>scratch;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>Slice<sp/>record;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>WriteBatch<sp/>batch;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>MemTable*<sp/><ref refid="db__impl_8cc_1a1a1fa02d49bbc4c0896ff1cb12618dc3" kindref="member">mem</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(reader.ReadRecord(&amp;record,<sp/>&amp;scratch)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status.ok())<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(record.size()<sp/>&lt;<sp/>12)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reporter.Corruption(</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>record.size(),<sp/><ref refid="classleveldb_1_1_status_1a755b1ee5b0029cf9ea1128f1cdff5855" kindref="member">Status::Corruption</ref>(</highlight><highlight class="stringliteral">&quot;log<sp/>record<sp/>too<sp/>small&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch_internal_1aa07e75250aed00d06f2e4df85ee926b9" kindref="member">WriteBatchInternal::SetContents</ref>(&amp;batch,<sp/>record);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MemTable(internal_comparator_);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;Ref();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classleveldb_1_1_write_batch_internal_1a102aae14259fd277e2576338ce3e5551" kindref="member">WriteBatchInternal::InsertInto</ref>(&amp;batch,<sp/>mem);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>MaybeIgnoreError(&amp;status);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref><sp/>last_seq<sp/>=</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch_internal_1af657c82bd9378b78c35a3a7429f945d4" kindref="member">WriteBatchInternal::Sequence</ref>(&amp;batch)<sp/>+</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch_internal_1a5270ca4567dbae1524005ad14e0698e3" kindref="member">WriteBatchInternal::Count</ref>(&amp;batch)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_seq<sp/>&gt;<sp/>*max_sequence)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*max_sequence<sp/>=<sp/>last_seq;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem-&gt;ApproximateMemoryUsage()<sp/>&gt;<sp/>options_.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>WriteLevel0Table(mem,<sp/>edit,<sp/>NULL);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reflect<sp/>errors<sp/>immediately<sp/>so<sp/>that<sp/>conditions<sp/>like<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file-systems<sp/>cause<sp/>the<sp/>DB::Open()<sp/>to<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;Unref();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.ok()<sp/>&amp;&amp;<sp/>mem<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>WriteLevel0Table(mem,<sp/>edit,<sp/>NULL);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reflect<sp/>errors<sp/>immediately<sp/>so<sp/>that<sp/>conditions<sp/>like<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file-systems<sp/>cause<sp/>the<sp/>DB::Open()<sp/>to<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>!=<sp/>NULL)<sp/>mem-&gt;Unref();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">Status<sp/>DBImpl::WriteLevel0Table(MemTable*<sp/>mem,<sp/>VersionEdit*<sp/>edit,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Version*<sp/><ref refid="testharness_8cc_1a70ff0f6c026c3dd1ef6aaf504e7fddc3" kindref="member">base</ref>)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>start_micros<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>FileMetaData<sp/><ref refid="repair_8cc_1a6b8f1f5fc8f36aa1678fff8fa5aecd0b" kindref="member">meta</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>meta.number<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ac4086c848479e74c1d9eb95e250e7167" kindref="member">NewFileNumber</ref>();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>pending_outputs_.insert(meta.number);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>Iterator*<sp/>iter<sp/>=<sp/>mem-&gt;NewIterator();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Level-0<sp/>table<sp/>#%llu:<sp/>started&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>meta.number);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>Status<sp/>s;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="namespaceleveldb_1a10e102da98819e1a1f9b254241482e65" kindref="member">BuildTable</ref>(dbname_,<sp/>env_,<sp/>options_,<sp/>table_cache_,<sp/>iter,<sp/>&amp;meta);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Level-0<sp/>table<sp/>#%llu:<sp/>%lld<sp/>bytes<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>meta.number,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>meta.file_size,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.ToString().c_str());</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>pending_outputs_.erase(meta.number);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>if<sp/>file_size<sp/>is<sp/>zero,<sp/>the<sp/>file<sp/>has<sp/>been<sp/>deleted<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>not<sp/>be<sp/>added<sp/>to<sp/>the<sp/>manifest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok()<sp/>&amp;&amp;<sp/>meta.file_size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice<sp/>min_user_key<sp/>=<sp/>meta.smallest.user_key();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice<sp/>max_user_key<sp/>=<sp/>meta.largest.user_key();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>base-&gt;PickLevelForMemTableOutput(min_user_key,<sp/>max_user_key);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>edit-&gt;AddFile(level,<sp/>meta.number,<sp/>meta.file_size,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meta.smallest,<sp/>meta.largest);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>CompactionStats<sp/><ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>stats.micros<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>()<sp/>-<sp/>start_micros;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>stats.bytes_written<sp/>=<sp/>meta.file_size;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>stats_[level].Add(stats);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DBImpl::CompactMemTable()<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>assert(imm_<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>memtable<sp/>as<sp/>a<sp/>new<sp/>Table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>VersionEdit<sp/>edit;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>Version*<sp/>base<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>base-&gt;<ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>Status<sp/>s<sp/>=<sp/>WriteLevel0Table(imm_,<sp/>&amp;edit,<sp/>base);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>base-&gt;Unref();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok()<sp/>&amp;&amp;<sp/>shutting_down_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>())<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_status_1ada6143081d41803808f77287153f96b7" kindref="member">Status::IOError</ref>(</highlight><highlight class="stringliteral">&quot;Deleting<sp/>DB<sp/>during<sp/>memtable<sp/>compaction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>immutable<sp/>memtable<sp/>with<sp/>the<sp/>generated<sp/>Table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok())<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>edit.SetPrevLogNumber(0);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>edit.SetLogNumber(logfile_number_);<sp/><sp/></highlight><highlight class="comment">//<sp/>Earlier<sp/>logs<sp/>no<sp/>longer<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" kindref="member">LogAndApply</ref>(&amp;edit,<sp/>&amp;mutex_);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok())<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Commit<sp/>to<sp/>the<sp/>new<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>imm_-&gt;<ref refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>imm_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>has_imm_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(NULL);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteObsoleteFiles();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>RecordBackgroundError(s);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="classleveldb_1_1_d_b_impl_1aa6df0739fc0b49380c284347e411b8ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_impl_1aa6df0739fc0b49380c284347e411b8ed" kindref="member">DBImpl::CompactRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_level_with_files<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>base<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>1;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;<ref refid="classleveldb_1_1_version_1a7945e88b8a4f2f7b6f3201cb3d791f1e" kindref="member">OverlapInLevel</ref>(level,<sp/>begin,<sp/>end))<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_level_with_files<sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" kindref="member">TEST_CompactMemTable</ref>();<sp/></highlight><highlight class="comment">//<sp/>TODO(sanjay):<sp/>Skip<sp/>if<sp/>memtable<sp/>does<sp/>not<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>max_level_with_files;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b_impl_1a63fcb49466b689a534ba77d32cf84f99" kindref="member">TEST_CompactRange</ref>(level,<sp/>begin,<sp/>end);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="classleveldb_1_1_d_b_impl_1a63fcb49466b689a534ba77d32cf84f99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_impl_1a63fcb49466b689a534ba77d32cf84f99" kindref="member">DBImpl::TEST_CompactRange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>begin,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>assert(level<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>assert(level<sp/>+<sp/>1<sp/>&lt;<sp/>config::kNumLevels);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>begin_storage,<sp/>end_storage;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>ManualCompaction<sp/>manual;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>manual.level<sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>manual.done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>manual.begin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>begin_storage<sp/>=<sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>(*begin,<sp/>kMaxSequenceNumber,<sp/>kValueTypeForSeek);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>manual.begin<sp/>=<sp/>&amp;begin_storage;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>manual.end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>end_storage<sp/>=<sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref>(*end,<sp/>0,<sp/>static_cast&lt;ValueType&gt;(0));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>manual.end<sp/>=<sp/>&amp;end_storage;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!manual.done<sp/>&amp;&amp;<sp/>!shutting_down_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>()<sp/>&amp;&amp;<sp/>bg_error_.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(manual_compaction_<sp/>==<sp/>NULL)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>manual_compaction_<sp/>=<sp/>&amp;manual;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MaybeScheduleCompaction();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Running<sp/>either<sp/>my<sp/>compaction<sp/>or<sp/>another<sp/>compaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bg_cv_.<ref refid="classleveldb_1_1port_1_1_cond_var_1a9e9855595a3f3a3ccf47949696065597" kindref="member">Wait</ref>();</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(manual_compaction_<sp/>==<sp/>&amp;manual)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cancel<sp/>my<sp/>manual<sp/>compaction<sp/>since<sp/>we<sp/>aborted<sp/>early<sp/>for<sp/>some<sp/>reason.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>manual_compaction_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_impl_1a8642703fd1398cd8e3f5f24ee0b9da23" kindref="member">DBImpl::TEST_CompactMemTable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>batch<sp/>means<sp/>just<sp/>wait<sp/>for<sp/>earlier<sp/>writes<sp/>to<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/><ref refid="classleveldb_1_1_d_b_impl_1ac0d0b472717099d6a02ad9dace4e8ef4" kindref="member">Write</ref>(<ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>(),<sp/>NULL);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>the<sp/>compaction<sp/>completes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(imm_<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>bg_error_.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bg_cv_.<ref refid="classleveldb_1_1port_1_1_cond_var_1a9e9855595a3f3a3ccf47949696065597" kindref="member">Wait</ref>();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bg_error_;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DBImpl::RecordBackgroundError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref>&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_error_.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>bg_error_<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>bg_cv_.<ref refid="classleveldb_1_1port_1_1_cond_var_1ad7725662f3c1bc542100c41081d1428a" kindref="member">SignalAll</ref>();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DBImpl::MaybeScheduleCompaction()<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_compaction_scheduled_)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>scheduled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutting_down_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>())<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DB<sp/>is<sp/>being<sp/>deleted;<sp/>no<sp/>more<sp/>background<sp/>compactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bg_error_.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>got<sp/>an<sp/>error;<sp/>no<sp/>more<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm_<sp/>==<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manual_compaction_<sp/>==<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!versions_-&gt;<ref refid="classleveldb_1_1_version_set_1aa2976498024282e1449dcba88c6df162" kindref="member">NeedsCompaction</ref>())<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>work<sp/>to<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>bg_compaction_scheduled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724" kindref="member">Schedule</ref>(&amp;DBImpl::BGWork,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DBImpl::BGWork(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>db)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="classleveldb_1_1_d_b_impl_1a269b55605b27271d6ca5fee68af0d8f3" kindref="member">DBImpl</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(db)-&gt;BackgroundCall();</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DBImpl::BackgroundCall()<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>MutexLock<sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>assert(bg_compaction_scheduled_);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutting_down_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>())<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>more<sp/>background<sp/>work<sp/>when<sp/>shutting<sp/>down.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bg_error_.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>more<sp/>background<sp/>work<sp/>after<sp/>a<sp/>background<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>BackgroundCompaction();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>bg_compaction_scheduled_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Previous<sp/>compaction<sp/>may<sp/>have<sp/>produced<sp/>too<sp/>many<sp/>files<sp/>in<sp/>a<sp/>level,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>reschedule<sp/>another<sp/>compaction<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>MaybeScheduleCompaction();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>bg_cv_.<ref refid="classleveldb_1_1port_1_1_cond_var_1ad7725662f3c1bc542100c41081d1428a" kindref="member">SignalAll</ref>();</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DBImpl::BackgroundCompaction()<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>CompactMemTable();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>Compaction*<sp/>c;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_manual<sp/>=<sp/>(manual_compaction_<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>InternalKey<sp/>manual_end;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_manual)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>ManualCompaction*<sp/>m<sp/>=<sp/>manual_compaction_;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a3a03f9a6c86e861be314cf8e01f33142" kindref="member">CompactRange</ref>(m-&gt;level,<sp/>m-&gt;begin,<sp/>m-&gt;end);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;done<sp/>=<sp/>(c<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>manual_end<sp/>=<sp/>c-&gt;<ref refid="classleveldb_1_1_compaction_1a989d147c33f2993d4503c56ea0ee3a78" kindref="member">input</ref>(0,<sp/>c-&gt;num_input_files(0)<sp/>-<sp/>1)-&gt;largest;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Manual<sp/>compaction<sp/>at<sp/>level-%d<sp/>from<sp/>%s<sp/>..<sp/>%s;<sp/>will<sp/>stop<sp/>at<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;level,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m-&gt;begin<sp/>?<sp/>m-&gt;begin-&gt;DebugString().c_str()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;(begin)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m-&gt;end<sp/>?<sp/>m-&gt;end-&gt;DebugString().c_str()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;(end)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m-&gt;done<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;(end)&quot;</highlight><highlight class="normal"><sp/>:<sp/>manual_end.DebugString().c_str()));</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a1cdc6a05e0a7df9f29b5bccd485a0219" kindref="member">PickCompaction</ref>();</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>Status<sp/>status;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_manual<sp/>&amp;&amp;<sp/>c-&gt;IsTrivialMove())<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>file<sp/>to<sp/>next<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(c-&gt;num_input_files(0)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>FileMetaData*<sp/>f<sp/>=<sp/>c-&gt;<ref refid="classleveldb_1_1_compaction_1a989d147c33f2993d4503c56ea0ee3a78" kindref="member">input</ref>(0,<sp/>0);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;edit()-&gt;DeleteFile(c-&gt;level(),<sp/>f-&gt;number);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;edit()-&gt;AddFile(c-&gt;level()<sp/>+<sp/>1,<sp/>f-&gt;number,<sp/>f-&gt;file_size,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;smallest,<sp/>f-&gt;largest);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" kindref="member">LogAndApply</ref>(c-&gt;edit(),<sp/>&amp;mutex_);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RecordBackgroundError(status);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>VersionSet::LevelSummaryStorage<sp/>tmp;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Moved<sp/>#%lld<sp/>to<sp/>level-%d<sp/>%lld<sp/>bytes<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;unsigned<sp/>long<sp/>long&gt;(f-&gt;number),</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;level()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f-&gt;file_size),</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status.ToString().c_str(),</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1abc156e2c0a7f2d0ef4a14b6f27a382a3" kindref="member">LevelSummary</ref>(&amp;tmp));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>CompactionState*<sp/>compact<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompactionState(c);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>DoCompactionWork(compact);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RecordBackgroundError(status);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>CleanupCompaction(compact);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;ReleaseInputs();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteObsoleteFiles();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.ok())<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutting_down_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>())<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>compaction<sp/>errors<sp/>found<sp/>during<sp/>shutting<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Compaction<sp/>error:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>status.ToString().c_str());</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_manual)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>ManualCompaction*<sp/>m<sp/>=<sp/>manual_compaction_;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m-&gt;done)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>compacted<sp/>part<sp/>of<sp/>the<sp/>requested<sp/>range.<sp/><sp/>Update<sp/>*m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>range<sp/>that<sp/>is<sp/>left<sp/>to<sp/>be<sp/>compacted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;tmp_storage<sp/>=<sp/>manual_end;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;begin<sp/>=<sp/>&amp;m-&gt;tmp_storage;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>manual_compaction_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DBImpl::CleanupCompaction(CompactionState*<sp/>compact)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compact-&gt;builder<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>happen<sp/>if<sp/>we<sp/>get<sp/>a<sp/>shutdown<sp/>call<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>compact-&gt;builder-&gt;Abandon();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>compact-&gt;builder;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(compact-&gt;outfile<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>compact-&gt;outfile;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>compact-&gt;outputs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CompactionState::Output&amp;<sp/>out<sp/>=<sp/>compact-&gt;outputs[i];</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>pending_outputs_.erase(out.number);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>compact;</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal">Status<sp/>DBImpl::OpenCompactionOutputFile(CompactionState*<sp/>compact)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>assert(compact<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>assert(compact-&gt;builder<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>file_number;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>file_number<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ac4086c848479e74c1d9eb95e250e7167" kindref="member">NewFileNumber</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>pending_outputs_.insert(file_number);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>CompactionState::Output<sp/>out;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>out.number<sp/>=<sp/>file_number;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>out.smallest.Clear();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>out.largest.Clear();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>compact-&gt;outputs.push_back(out);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>output<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>std::string<sp/>fname<sp/>=<sp/><ref refid="namespaceleveldb_1ac9107e52d0ead114d749dc4b06dfd3ec" kindref="member">TableFileName</ref>(dbname_,<sp/>file_number);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>Status<sp/>s<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de" kindref="member">NewWritableFile</ref>(fname,<sp/>&amp;compact-&gt;outfile);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok())<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>compact-&gt;builder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TableBuilder(options_,<sp/>compact-&gt;outfile);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal">Status<sp/>DBImpl::FinishCompactionOutputFile(CompactionState*<sp/>compact,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Iterator*<sp/>input)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>assert(compact<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>assert(compact-&gt;outfile<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>assert(compact-&gt;builder<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>output_number<sp/>=<sp/>compact-&gt;current_output()-&gt;number;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>assert(output_number<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>iterator<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>Status<sp/>s<sp/>=<sp/>input-&gt;status();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>current_entries<sp/>=<sp/>compact-&gt;builder-&gt;NumEntries();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok())<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>compact-&gt;builder-&gt;Finish();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>compact-&gt;builder-&gt;Abandon();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>current_bytes<sp/>=<sp/>compact-&gt;builder-&gt;FileSize();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>compact-&gt;current_output()-&gt;file_size<sp/>=<sp/>current_bytes;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>compact-&gt;total_bytes<sp/>+=<sp/>current_bytes;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>compact-&gt;builder;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>compact-&gt;builder<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finish<sp/>and<sp/>check<sp/>for<sp/>file<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok())<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>compact-&gt;outfile-&gt;Sync();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok())<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>compact-&gt;outfile-&gt;Close();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>compact-&gt;outfile;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>compact-&gt;outfile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok()<sp/>&amp;&amp;<sp/>current_entries<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>table<sp/>is<sp/>usable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator*<sp/>iter<sp/>=<sp/>table_cache_-&gt;<ref refid="classleveldb_1_1_table_cache_1afe8c83b1cbbf3bfc06c66a69611aa250" kindref="member">NewIterator</ref>(ReadOptions(),</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_number,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_bytes);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>iter-&gt;<ref refid="classleveldb_1_1_iterator_1ac84f34623a031b7eeb23409320f76376" kindref="member">status</ref>();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.ok())<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Generated<sp/>table<sp/>#%llu:<sp/>%lld<sp/>keys,<sp/>%lld<sp/>bytes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>output_number,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>current_entries,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>current_bytes);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal">Status<sp/>DBImpl::InstallCompactionResults(CompactionState*<sp/>compact)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/><sp/></highlight><highlight class="stringliteral">&quot;Compacted<sp/>%d@%d<sp/>+<sp/>%d@%d<sp/>files<sp/>=&gt;<sp/>%lld<sp/>bytes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;num_input_files(0),</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;level(),</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;num_input_files(1),</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;level()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(compact-&gt;total_bytes));</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>compaction<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>compact-&gt;compaction-&gt;AddInputDeletions(compact-&gt;compaction-&gt;edit());</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>compact-&gt;compaction-&gt;level();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>compact-&gt;outputs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CompactionState::Output&amp;<sp/>out<sp/>=<sp/>compact-&gt;outputs[i];</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;edit()-&gt;AddFile(</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.number,<sp/>out.file_size,<sp/>out.smallest,<sp/>out.largest);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" kindref="member">LogAndApply</ref>(compact-&gt;compaction-&gt;edit(),<sp/>&amp;mutex_);</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal">Status<sp/>DBImpl::DoCompactionWork(CompactionState*<sp/>compact)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>start_micros<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>imm_micros<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Micros<sp/>spent<sp/>doing<sp/>imm_<sp/>compactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/><sp/></highlight><highlight class="stringliteral">&quot;Compacting<sp/>%d@%d<sp/>+<sp/>%d@%d<sp/>files&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;num_input_files(0),</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;level(),</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;num_input_files(1),</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;level()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>assert(versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a29d2d4a5aa83c12a1451743ca2a570fa" kindref="member">NumLevelFiles</ref>(compact-&gt;compaction-&gt;level())<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>assert(compact-&gt;builder<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>assert(compact-&gt;outfile<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snapshots_.<ref refid="classleveldb_1_1_snapshot_list_1a27da501f33ea4aff4bb13c3443f98f70" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>compact-&gt;smallest_snapshot<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1acbbb32422426416b0d5e58d35b151526" kindref="member">LastSequence</ref>();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>compact-&gt;smallest_snapshot<sp/>=<sp/>snapshots_.<ref refid="classleveldb_1_1_snapshot_list_1ad5990de13c4afa6877f8f3c641d8e72d" kindref="member">oldest</ref>()-&gt;<ref refid="classleveldb_1_1_snapshot_impl_1aa31dca969679d05d17c4c0eb1443a96e" kindref="member">number_</ref>;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>mutex<sp/>while<sp/>we&apos;re<sp/>actually<sp/>doing<sp/>the<sp/>compaction<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>Iterator*<sp/>input<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a181194e96a88e69a60c1fda9cf3c4651" kindref="member">MakeInputIterator</ref>(compact-&gt;compaction);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>input-&gt;<ref refid="classleveldb_1_1_iterator_1a3594967cf26ddf1d37c7b886bb48627e" kindref="member">SeekToFirst</ref>();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>Status<sp/>status;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>ParsedInternalKey<sp/>ikey;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>std::string<sp/>current_user_key;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_current_user_key<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref><sp/>last_sequence_for_key<sp/>=<sp/>kMaxSequenceNumber;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>input-&gt;Valid()<sp/>&amp;&amp;<sp/>!shutting_down_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>();<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prioritize<sp/>immutable<sp/>compaction<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_imm_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a6f1579bd734aa549f237eeb4f486cfd3" kindref="member">NoBarrier_Load</ref>()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>imm_start<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>();</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CompactMemTable();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bg_cv_.<ref refid="classleveldb_1_1port_1_1_cond_var_1ad7725662f3c1bc542100c41081d1428a" kindref="member">SignalAll</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Wakeup<sp/>MakeRoomForWrite()<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imm_micros<sp/>+=<sp/>(env_-&gt;<ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>()<sp/>-<sp/>imm_start);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>Slice<sp/>key<sp/>=<sp/>input-&gt;key();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compact-&gt;compaction-&gt;ShouldStopBefore(key)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;builder<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FinishCompactionOutputFile(compact,<sp/>input);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>key/value,<sp/>add<sp/>to<sp/>state,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceleveldb_1a5a173b622e86c7a2f9beae3ac8818ac3" kindref="member">ParseInternalKey</ref>(key,<sp/>&amp;ikey))<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>hide<sp/>error<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_user_key.clear();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_current_user_key<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_sequence_for_key<sp/>=<sp/>kMaxSequenceNumber;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_current_user_key<sp/>||</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_comparator()-&gt;Compare(ikey.user_key,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Slice(current_user_key))<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>occurrence<sp/>of<sp/>this<sp/>user<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_user_key.assign(ikey.user_key.data(),<sp/>ikey.user_key.size());</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_current_user_key<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_sequence_for_key<sp/>=<sp/>kMaxSequenceNumber;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_sequence_for_key<sp/>&lt;=<sp/>compact-&gt;smallest_snapshot)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hidden<sp/>by<sp/>an<sp/>newer<sp/>entry<sp/>for<sp/>same<sp/>user<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ikey.type<sp/>==<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866aca5f2147a76c932346e15d86668d4ed3" kindref="member">kTypeDeletion</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ikey.sequence<sp/>&lt;=<sp/>compact-&gt;smallest_snapshot<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;IsBaseLevelForKey(ikey.user_key))<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>this<sp/>user<sp/>key:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(1)<sp/>there<sp/>is<sp/>no<sp/>data<sp/>in<sp/>higher<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(2)<sp/>data<sp/>in<sp/>lower<sp/>levels<sp/>will<sp/>have<sp/>larger<sp/>sequence<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(3)<sp/>data<sp/>in<sp/>layers<sp/>that<sp/>are<sp/>being<sp/>compacted<sp/>here<sp/>and<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>smaller<sp/>sequence<sp/>numbers<sp/>will<sp/>be<sp/>dropped<sp/>in<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>few<sp/>iterations<sp/>of<sp/>this<sp/>loop<sp/>(by<sp/>rule<sp/>(A)<sp/>above).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore<sp/>this<sp/>deletion<sp/>marker<sp/>is<sp/>obsolete<sp/>and<sp/>can<sp/>be<sp/>dropped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_sequence_for_key<sp/>=<sp/>ikey.sequence;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Compact:<sp/>%s,<sp/>seq<sp/>%d,<sp/>type:<sp/>%d<sp/>%d,<sp/>drop:<sp/>%d,<sp/>is_base:<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>smallest_snapshot:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ikey.user_key.ToString().c_str(),</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)ikey.sequence,<sp/>ikey.type,<sp/><ref refid="namespaceleveldb_1acc038cb0d608414730cafa459a4ba866a97725c1d8e3317d1bac1f3b14fbfa281" kindref="member">kTypeValue</ref>,<sp/>drop,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;IsBaseLevelForKey(ikey.user_key),</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)last_sequence_for_key,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)compact-&gt;smallest_snapshot);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!drop)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>output<sp/>file<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compact-&gt;builder<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>OpenCompactionOutputFile(compact);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compact-&gt;builder-&gt;NumEntries()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;current_output()-&gt;smallest.DecodeFrom(key);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;current_output()-&gt;largest.DecodeFrom(key);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;builder-&gt;Add(key,<sp/>input-&gt;value());</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>output<sp/>file<sp/>if<sp/>it<sp/>is<sp/>big<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compact-&gt;builder-&gt;FileSize()<sp/>&gt;=</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compact-&gt;compaction-&gt;MaxOutputFileSize())<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FinishCompactionOutputFile(compact,<sp/>input);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>input-&gt;Next();</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.ok()<sp/>&amp;&amp;<sp/>shutting_down_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a92aa118983e28711a150b3907af59a54" kindref="member">Acquire_Load</ref>())<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classleveldb_1_1_status_1ada6143081d41803808f77287153f96b7" kindref="member">Status::IOError</ref>(</highlight><highlight class="stringliteral">&quot;Deleting<sp/>DB<sp/>during<sp/>compaction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.ok()<sp/>&amp;&amp;<sp/>compact-&gt;builder<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FinishCompactionOutputFile(compact,<sp/>input);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.ok())<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>input-&gt;status();</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>input;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>input<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>CompactionStats<sp/><ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>stats.micros<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>()<sp/>-<sp/>start_micros<sp/>-<sp/>imm_micros;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which<sp/>=<sp/>0;<sp/>which<sp/>&lt;<sp/>2;<sp/>which++)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>compact-&gt;compaction-&gt;num_input_files(which);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats.bytes_read<sp/>+=<sp/>compact-&gt;compaction-&gt;input(which,<sp/>i)-&gt;file_size;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>compact-&gt;outputs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.bytes_written<sp/>+=<sp/>compact-&gt;outputs[i].file_size;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>stats_[compact-&gt;compaction-&gt;level()<sp/>+<sp/>1].Add(stats);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.ok())<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>InstallCompactionResults(compact);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>RecordBackgroundError(status);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>VersionSet::LevelSummaryStorage<sp/>tmp;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;compacted<sp/>to:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1abc156e2c0a7f2d0ef4a14b6f27a382a3" kindref="member">LevelSummary</ref>(&amp;tmp));</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IterState<sp/>{</highlight></codeline>
<codeline lineno="1018" refid="db__impl_8cc_1a900dad9ea326bf70a183d88a8ab50a13" refkind="member"><highlight class="normal"><sp/><sp/>port::Mutex*<sp/><ref refid="db__impl_8cc_1a900dad9ea326bf70a183d88a8ab50a13" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="1019" refid="db__impl_8cc_1afc25f30ab1a6d04798c360a2ce70b87d" refkind="member"><highlight class="normal"><sp/><sp/>Version*<sp/><ref refid="db__impl_8cc_1afc25f30ab1a6d04798c360a2ce70b87d" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="1020" refid="db__impl_8cc_1a1a1fa02d49bbc4c0896ff1cb12618dc3" refkind="member"><highlight class="normal"><sp/><sp/>MemTable*<sp/><ref refid="db__impl_8cc_1a1a1fa02d49bbc4c0896ff1cb12618dc3" kindref="member">mem</ref>;</highlight></codeline>
<codeline lineno="1021" refid="db__impl_8cc_1aaa0d6be8984fcd39f26c0d2dadacd870" refkind="member"><highlight class="normal"><sp/><sp/>MemTable*<sp/><ref refid="db__impl_8cc_1aaa0d6be8984fcd39f26c0d2dadacd870" kindref="member">imm</ref>;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CleanupIteratorState(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg2)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>IterState*<sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">IterState*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg1);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>state-&gt;mu-&gt;Lock();</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>state-&gt;mem-&gt;Unref();</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;imm<sp/>!=<sp/>NULL)<sp/>state-&gt;imm-&gt;Unref();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>state-&gt;version-&gt;Unref();</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>state-&gt;mu-&gt;Unlock();</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="db__test_8cc_1a42432b4356adce5579ccf597f6e83e54" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal">Iterator*<sp/>DBImpl::NewInternalIterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ReadOptions&amp;<sp/>options,</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref>*<sp/>latest_snapshot,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>*<sp/>seed)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>IterState*<sp/>cleanup<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IterState;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>*latest_snapshot<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1acbbb32422426416b0d5e58d35b151526" kindref="member">LastSequence</ref>();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Collect<sp/>together<sp/>all<sp/>needed<sp/>child<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>std::vector&lt;Iterator*&gt;<sp/>list;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>list.push_back(mem_-&gt;<ref refid="classleveldb_1_1_mem_table_1a396b8ba5e2ea0de25b666026f3b9235f" kindref="member">NewIterator</ref>());</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>mem_-&gt;<ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(imm_-&gt;<ref refid="classleveldb_1_1_mem_table_1a396b8ba5e2ea0de25b666026f3b9235f" kindref="member">NewIterator</ref>());</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>imm_-&gt;<ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>()-&gt;<ref refid="classleveldb_1_1_version_1a035a0fa5bfe7ab84a711b1138b0b9a3d" kindref="member">AddIterators</ref>(options,<sp/>&amp;list);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>Iterator*<sp/>internal_iter<sp/>=</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1ab8bdbd2babe772234f8dee1bc4f44eb5" kindref="member">NewMergingIterator</ref>(&amp;internal_comparator_,<sp/>&amp;list[0],<sp/>list.size());</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>()-&gt;<ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>cleanup-&gt;mu<sp/>=<sp/>&amp;mutex_;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>cleanup-&gt;mem<sp/>=<sp/>mem_;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>cleanup-&gt;imm<sp/>=<sp/>imm_;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>cleanup-&gt;version<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>();</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>internal_iter-&gt;RegisterCleanup(CleanupIteratorState,<sp/>cleanup,<sp/>NULL);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>*seed<sp/>=<sp/>++seed_;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal_iter;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066" refid="classleveldb_1_1_d_b_impl_1adba5bf4252bd94f7db50e62921b7ba53" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_d_b_impl_1adba5bf4252bd94f7db50e62921b7ba53" kindref="member">DBImpl::TEST_NewInternalIterator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref><sp/>ignored;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>ignored_seed;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NewInternalIterator(<ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>(),<sp/>&amp;ignored,<sp/>&amp;ignored_seed);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072" refid="classleveldb_1_1_d_b_impl_1af621636048b8d3cfaa21238fe26ef0ca" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="classleveldb_1_1_d_b_impl_1af621636048b8d3cfaa21238fe26ef0ca" kindref="member">DBImpl::TEST_MaxNextLevelOverlappingBytes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a32dc1a7e1eaeeeac89286be3483ad612" kindref="member">MaxNextLevelOverlappingBytes</ref>();</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077" refid="classleveldb_1_1_d_b_impl_1a089964ddcd1f5dc85e73499ae57be508" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_impl_1a089964ddcd1f5dc85e73499ae57be508" kindref="member">DBImpl::Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key,</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref><sp/>snapshot;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.<ref refid="structleveldb_1_1_read_options_1a1fa3fffc267dff89fce7c39d7c7b5b50" kindref="member">snapshot</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>snapshot<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_snapshot_impl" kindref="compound">SnapshotImpl</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(options.<ref refid="structleveldb_1_1_read_options_1a1fa3fffc267dff89fce7c39d7c7b5b50" kindref="member">snapshot</ref>)-&gt;number_;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>snapshot<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1acbbb32422426416b0d5e58d35b151526" kindref="member">LastSequence</ref>();</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>*<sp/>mem<sp/>=<sp/>mem_;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mem_table" kindref="compound">MemTable</ref>*<sp/><ref refid="db__impl_8cc_1aaa0d6be8984fcd39f26c0d2dadacd870" kindref="member">imm</ref><sp/>=<sp/>imm_;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>current<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>();</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>mem-&gt;<ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm<sp/>!=<sp/>NULL)<sp/>imm-&gt;<ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>current-&gt;<ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_stat_update<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_version_1_1_get_stats" kindref="compound">Version::GetStats</ref><sp/><ref refid="db__bench_8cc_1a5925d216740c89f43482df806fd14e8c" kindref="member">stats</ref>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unlock<sp/>while<sp/>reading<sp/>from<sp/>files<sp/>and<sp/>memtables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>look<sp/>in<sp/>the<sp/>memtable,<sp/>then<sp/>in<sp/>the<sp/>immutable<sp/>memtable<sp/>(if<sp/>any).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_lookup_key" kindref="compound">LookupKey</ref><sp/>lkey(key,<sp/>snapshot);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem-&gt;<ref refid="classleveldb_1_1_mem_table_1af94f80a5909a440d0675afa68f8765c5" kindref="member">Get</ref>(lkey,<sp/>value,<sp/>&amp;s))<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>imm-&gt;<ref refid="classleveldb_1_1_mem_table_1af94f80a5909a440d0675afa68f8765c5" kindref="member">Get</ref>(lkey,<sp/>value,<sp/>&amp;s))<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>current-&gt;<ref refid="classleveldb_1_1_version_1a42c439d4a2a767fe281c7a75d4255038" kindref="member">Get</ref>(options,<sp/>lkey,<sp/>value,<sp/>&amp;stats);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>have_stat_update<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(have_stat_update<sp/>&amp;&amp;<sp/>current-&gt;<ref refid="classleveldb_1_1_version_1a7e5b8451deb7c4b9006fd9d5ccfc2cef" kindref="member">UpdateStats</ref>(stats))<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>MaybeScheduleCompaction();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>mem-&gt;<ref refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm<sp/>!=<sp/>NULL)<sp/>imm-&gt;<ref refid="classleveldb_1_1_mem_table_1a5dcbf17d1477e6098a30dadd0745cfb2" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>current-&gt;<ref refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124" refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/><ref refid="classleveldb_1_1_d_b_impl_1ae955dc8f2a1c38588723a0882653cb58" kindref="member">DBImpl::NewIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_read_options" kindref="compound">ReadOptions</ref>&amp;<sp/>options)<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><ref refid="namespaceleveldb_1a5481ededd221c36d652c371249f869fa" kindref="member">SequenceNumber</ref><sp/>latest_snapshot;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>seed;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_iterator" kindref="compound">Iterator</ref>*<sp/>iter<sp/>=<sp/>NewInternalIterator(options,<sp/>&amp;latest_snapshot,<sp/>&amp;seed);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1a0d4b256207f27afbf4ad03976fe0fae8" kindref="member">NewDBIterator</ref>(</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>user_comparator(),<sp/>iter,</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(options.<ref refid="structleveldb_1_1_read_options_1a1fa3fffc267dff89fce7c39d7c7b5b50" kindref="member">snapshot</ref><sp/>!=<sp/>NULL</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>reinterpret_cast&lt;const<sp/>SnapshotImpl*&gt;(options.<ref refid="structleveldb_1_1_read_options_1a1fa3fffc267dff89fce7c39d7c7b5b50" kindref="member">snapshot</ref>)-&gt;number_</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>latest_snapshot),</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seed);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136" refid="classleveldb_1_1_d_b_impl_1a254ae98e3425046c28ed0aa6d78b37d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_impl_1a254ae98e3425046c28ed0aa6d78b37d8" kindref="member">DBImpl::RecordReadSample</ref>(<ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>()-&gt;<ref refid="classleveldb_1_1_version_1a8b9e51b3d0503fe5868f656356557ded" kindref="member">RecordReadSample</ref>(key))<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>MaybeScheduleCompaction();</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143" refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/><ref refid="classleveldb_1_1_d_b_impl_1a4bec3d8ffd65fec562b2dd1f6eaba137" kindref="member">DBImpl::GetSnapshot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snapshots_.<ref refid="classleveldb_1_1_snapshot_list_1adfd5d9c7cb888e711d83a48299141994" kindref="member">New</ref>(versions_-&gt;<ref refid="classleveldb_1_1_version_set_1acbbb32422426416b0d5e58d35b151526" kindref="member">LastSequence</ref>());</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148" refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_impl_1a6c0b6abfc9a30cc8e5412d4fc3e8c886" kindref="member">DBImpl::ReleaseSnapshot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_snapshot" kindref="compound">Snapshot</ref>*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>snapshots_.<ref refid="classleveldb_1_1_snapshot_list_1aa16863f35b8bb6dbc44f4528fab6790a" kindref="member">Delete</ref>(reinterpret_cast&lt;const<sp/>SnapshotImpl*&gt;(s));</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154" refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_impl_1ad0d56aeb4d84ff9632c9a7f3f1b7c4d5" kindref="member">DBImpl::Put</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>&amp;<sp/>o,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" kindref="member">DB::Put</ref>(o,<sp/>key,<sp/>val);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158" refid="classleveldb_1_1_d_b_impl_1af050f77e8c22bd6638fed5a46a59399d" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_impl_1af050f77e8c22bd6638fed5a46a59399d" kindref="member">DBImpl::Delete</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>&amp;<sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" kindref="member">DB::Delete</ref>(options,<sp/>key);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162" refid="classleveldb_1_1_d_b_impl_1ac0d0b472717099d6a02ad9dace4e8ef4" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_impl_1ac0d0b472717099d6a02ad9dace4e8ef4" kindref="member">DBImpl::Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>&amp;<sp/>options,<sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref>*<sp/>my_batch)<sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_writer" kindref="compound">Writer</ref><sp/>w(&amp;mutex_);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>w.<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1ada051134318411635892f0a7d17cb7c0" kindref="member">batch</ref><sp/>=<sp/>my_batch;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>w.<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1acb39717e1fa61127f262b474e18ec9f6" kindref="member">sync</ref><sp/>=<sp/>options.<ref refid="structleveldb_1_1_write_options_1a07cd165ae5ed59a763001286e14ba47e" kindref="member">sync</ref>;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>w.<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1afc6025afd873f82252cb563687bd3106" kindref="member">done</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>writers_.push_back(&amp;w);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!w.<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1afc6025afd873f82252cb563687bd3106" kindref="member">done</ref><sp/>&amp;&amp;<sp/>&amp;w<sp/>!=<sp/>writers_.front())<sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>w.<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1aacb835eedc44855a7c223fca024c5ac4" kindref="member">cv</ref>.<ref refid="classleveldb_1_1port_1_1_cond_var_1a9e9855595a3f3a3ccf47949696065597" kindref="member">Wait</ref>();</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w.<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1afc6025afd873f82252cb563687bd3106" kindref="member">done</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w.<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1af3b0436a99d2679c0e0ac9f6e1fefa37" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>temporarily<sp/>unlock<sp/>and<sp/>wait.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>status<sp/>=<sp/>MakeRoomForWrite(my_batch<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>last_sequence<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1acbbb32422426416b0d5e58d35b151526" kindref="member">LastSequence</ref>();</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_writer" kindref="compound">Writer</ref>*<sp/>last_writer<sp/>=<sp/>&amp;w;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>()<sp/>&amp;&amp;<sp/>my_batch<sp/>!=<sp/>NULL)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>batch<sp/>is<sp/>for<sp/>compactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref>*<sp/>updates<sp/>=<sp/>BuildBatchGroup(&amp;last_writer);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch_internal_1a0ca3483de37433fb0ce37b1e91f01bd1" kindref="member">WriteBatchInternal::SetSequence</ref>(updates,<sp/>last_sequence<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>last_sequence<sp/>+=<sp/><ref refid="classleveldb_1_1_write_batch_internal_1a5270ca4567dbae1524005ad14e0698e3" kindref="member">WriteBatchInternal::Count</ref>(updates);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>log<sp/>and<sp/>apply<sp/>to<sp/>memtable.<sp/><sp/>We<sp/>can<sp/>release<sp/>the<sp/>lock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>during<sp/>this<sp/>phase<sp/>since<sp/>&amp;w<sp/>is<sp/>currently<sp/>responsible<sp/>for<sp/>logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>protects<sp/>against<sp/>concurrent<sp/>loggers<sp/>and<sp/>concurrent<sp/>writes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>mem_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>log_-&gt;<ref refid="classleveldb_1_1log_1_1_writer_1acb4abda5a5348ac1771657ff01bf2fad" kindref="member">AddRecord</ref>(<ref refid="classleveldb_1_1_write_batch_internal_1a348947b16653c8a17590b13115b5274d" kindref="member">WriteBatchInternal::Contents</ref>(updates));</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sync_error<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>()<sp/>&amp;&amp;<sp/>options.<ref refid="structleveldb_1_1_write_options_1a07cd165ae5ed59a763001286e14ba47e" kindref="member">sync</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>logfile_-&gt;<ref refid="classleveldb_1_1_writable_file_1a2d2dcef02a2c9e71f3d39125bcd5a606" kindref="member">Sync</ref>();</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sync_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classleveldb_1_1_write_batch_internal_1a102aae14259fd277e2576338ce3e5551" kindref="member">WriteBatchInternal::InsertInto</ref>(updates,<sp/>mem_);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sync_error)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>state<sp/>of<sp/>the<sp/>log<sp/>file<sp/>is<sp/>indeterminate:<sp/>the<sp/>log<sp/>record<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>added<sp/>may<sp/>or<sp/>may<sp/>not<sp/>show<sp/>up<sp/>when<sp/>the<sp/>DB<sp/>is<sp/>re-opened.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>force<sp/>the<sp/>DB<sp/>into<sp/>a<sp/>mode<sp/>where<sp/>all<sp/>future<sp/>writes<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RecordBackgroundError(status);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updates<sp/>==<sp/>tmp_batch_)<sp/>tmp_batch_-&gt;<ref refid="classleveldb_1_1_write_batch_1afd5058344dc9be113919a5110129006f" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a2234860e72a1ac7361d7bee107da6a07" kindref="member">SetLastSequence</ref>(last_sequence);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structleveldb_1_1_d_b_impl_1_1_writer" kindref="compound">Writer</ref>*<sp/>ready<sp/>=<sp/>writers_.front();</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>writers_.pop_front();</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ready<sp/>!=<sp/>&amp;w)<sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ready-&gt;<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1af3b0436a99d2679c0e0ac9f6e1fefa37" kindref="member">status</ref><sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ready-&gt;<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1afc6025afd873f82252cb563687bd3106" kindref="member">done</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ready-&gt;<ref refid="structleveldb_1_1_d_b_impl_1_1_writer_1aacb835eedc44855a7c223fca024c5ac4" kindref="member">cv</ref>.<ref refid="classleveldb_1_1port_1_1_cond_var_1ac36a2038b058b24886741c99e4a7d7d4" kindref="member">Signal</ref>();</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ready<sp/>==<sp/>last_writer)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>new<sp/>head<sp/>of<sp/>write<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!writers_.empty())<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>writers_.front()-&gt;cv.Signal();</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>Writer<sp/>list<sp/>must<sp/>be<sp/>non-empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>First<sp/>writer<sp/>must<sp/>have<sp/>a<sp/>non-NULL<sp/>batch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref>*<sp/>DBImpl::BuildBatchGroup(Writer**<sp/>last_writer)<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>assert(!writers_.empty());</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>Writer*<sp/>first<sp/>=<sp/>writers_.front();</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref>*<sp/>result<sp/>=<sp/>first-&gt;batch;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/>assert(result<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/><ref refid="classleveldb_1_1_write_batch_internal_1adad424f13cc3e3ed4a2eacb88eaa39df" kindref="member">WriteBatchInternal::ByteSize</ref>(first-&gt;batch);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>the<sp/>group<sp/>to<sp/>grow<sp/>up<sp/>to<sp/>a<sp/>maximum<sp/>size,<sp/>but<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>original<sp/>write<sp/>is<sp/>small,<sp/>limit<sp/>the<sp/>growth<sp/>so<sp/>we<sp/>do<sp/>not<sp/>slow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>down<sp/>the<sp/>small<sp/>write<sp/>too<sp/>much.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_size<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;=<sp/>(128&lt;&lt;10))<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>max_size<sp/>=<sp/>size<sp/>+<sp/>(128&lt;&lt;10);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>*last_writer<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>std::deque&lt;Writer*&gt;::iterator<sp/>iter<sp/>=<sp/>writers_.begin();</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>++iter;<sp/><sp/></highlight><highlight class="comment">//<sp/>Advance<sp/>past<sp/>&quot;first&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter<sp/>!=<sp/>writers_.end();<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>Writer*<sp/>w<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w-&gt;sync<sp/>&amp;&amp;<sp/>!first-&gt;sync)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>include<sp/>a<sp/>sync<sp/>write<sp/>into<sp/>a<sp/>batch<sp/>handled<sp/>by<sp/>a<sp/>non-sync<sp/>write.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w-&gt;batch<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/><ref refid="classleveldb_1_1_write_batch_internal_1adad424f13cc3e3ed4a2eacb88eaa39df" kindref="member">WriteBatchInternal::ByteSize</ref>(w-&gt;batch);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>max_size)<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>make<sp/>batch<sp/>too<sp/>big</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>to<sp/>*result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>first-&gt;batch)<sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>temporary<sp/>batch<sp/>instead<sp/>of<sp/>disturbing<sp/>caller&apos;s<sp/>batch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tmp_batch_;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classleveldb_1_1_write_batch_internal_1a5270ca4567dbae1524005ad14e0698e3" kindref="member">WriteBatchInternal::Count</ref>(result)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch_internal_1ac83c9a45a815c16ad8602b99b752b4bc" kindref="member">WriteBatchInternal::Append</ref>(result,<sp/>first-&gt;batch);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_write_batch_internal_1ac83c9a45a815c16ad8602b99b752b4bc" kindref="member">WriteBatchInternal::Append</ref>(result,<sp/>w-&gt;batch);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>*last_writer<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>mutex_<sp/>is<sp/>held</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>this<sp/>thread<sp/>is<sp/>currently<sp/>at<sp/>the<sp/>front<sp/>of<sp/>the<sp/>writer<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal">Status<sp/>DBImpl::MakeRoomForWrite(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9793393529f59bbb4adaf152bbbab42c" kindref="member">AssertHeld</ref>();</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>assert(!writers_.empty());</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_delay<sp/>=<sp/>!force;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>Status<sp/>s;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bg_error_.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Yield<sp/>previous<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bg_error_;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow_delay<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a29d2d4a5aa83c12a1451743ca2a570fa" kindref="member">NumLevelFiles</ref>(0)<sp/>&gt;=<sp/>config::kL0_SlowdownWritesTrigger)<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>getting<sp/>close<sp/>to<sp/>hitting<sp/>a<sp/>hard<sp/>limit<sp/>on<sp/>the<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>L0<sp/>files.<sp/><sp/>Rather<sp/>than<sp/>delaying<sp/>a<sp/>single<sp/>write<sp/>by<sp/>several</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seconds<sp/>when<sp/>we<sp/>hit<sp/>the<sp/>hard<sp/>limit,<sp/>start<sp/>delaying<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>individual<sp/>write<sp/>by<sp/>1ms<sp/>to<sp/>reduce<sp/>latency<sp/>variance.<sp/><sp/>Also,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>delay<sp/>hands<sp/>over<sp/>some<sp/>CPU<sp/>to<sp/>the<sp/>compaction<sp/>thread<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>it<sp/>is<sp/>sharing<sp/>the<sp/>same<sp/>core<sp/>as<sp/>the<sp/>writer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312" kindref="member">SleepForMicroseconds</ref>(1000);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>allow_delay<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>delay<sp/>a<sp/>single<sp/>write<sp/>more<sp/>than<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!force<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mem_-&gt;<ref refid="classleveldb_1_1_mem_table_1a667a1ada274201f0bdd3615baf1bd882" kindref="member">ApproximateMemoryUsage</ref>()<sp/>&lt;=<sp/>options_.<ref refid="structleveldb_1_1_options_1a017f1f9558e6b3887434df29a16dac97" kindref="member">write_buffer_size</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>room<sp/>in<sp/>current<sp/>memtable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>filled<sp/>up<sp/>the<sp/>current<sp/>memtable,<sp/>but<sp/>the<sp/>previous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>is<sp/>still<sp/>being<sp/>compacted,<sp/>so<sp/>we<sp/>wait.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>memtable<sp/>full;<sp/>waiting...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bg_cv_.<ref refid="classleveldb_1_1port_1_1_cond_var_1a9e9855595a3f3a3ccf47949696065597" kindref="member">Wait</ref>();</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a29d2d4a5aa83c12a1451743ca2a570fa" kindref="member">NumLevelFiles</ref>(0)<sp/>&gt;=<sp/>config::kL0_StopWritesTrigger)<sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>too<sp/>many<sp/>level-0<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(options_.<ref refid="structleveldb_1_1_options_1af5545cba00b0e9763ad0279a74acc429" kindref="member">info_log</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>L0<sp/>files;<sp/>waiting...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bg_cv_.<ref refid="classleveldb_1_1port_1_1_cond_var_1a9e9855595a3f3a3ccf47949696065597" kindref="member">Wait</ref>();</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>switch<sp/>to<sp/>a<sp/>new<sp/>memtable<sp/>and<sp/>trigger<sp/>compaction<sp/>of<sp/>old</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a0c2a382650ba2b987d8059faacbd0c39" kindref="member">PrevLogNumber</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>new_log_number<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ac4086c848479e74c1d9eb95e250e7167" kindref="member">NewFileNumber</ref>();</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WritableFile*<sp/>lfile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>env_-&gt;<ref refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de" kindref="member">NewWritableFile</ref>(<ref refid="namespaceleveldb_1ae5aadcd574cc5186e7821177d44f4c6c" kindref="member">LogFileName</ref>(dbname_,<sp/>new_log_number),<sp/>&amp;lfile);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s.ok())<sp/>{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>chewing<sp/>through<sp/>file<sp/>number<sp/>space<sp/>in<sp/>a<sp/>tight<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a8131cebf5be3283e2ce1029e8be0d14e" kindref="member">ReuseFileNumber</ref>(new_log_number);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>log_;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>logfile_;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logfile_<sp/>=<sp/>lfile;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logfile_number_<sp/>=<sp/>new_log_number;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>log::Writer(lfile);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imm_<sp/>=<sp/>mem_;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_imm_.<ref refid="classleveldb_1_1port_1_1_atomic_pointer_1a8dfe51c125f71c09a363dae042be63a7" kindref="member">Release_Store</ref>(imm_);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MemTable(internal_comparator_);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem_-&gt;<ref refid="classleveldb_1_1_mem_table_1a332484cffd2ebc7d6a51f22eeeeeb71b" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>force<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>force<sp/>another<sp/>compaction<sp/>if<sp/>have<sp/>room</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MaybeScheduleCompaction();</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349" refid="classleveldb_1_1_d_b_impl_1ad1a2023ce171c8f8476664f5b1cbab4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_impl_1ad1a2023ce171c8f8476664f5b1cbab4d" kindref="member">DBImpl::GetProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>property,<sp/>std::string*<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>value-&gt;clear();</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>in<sp/>=<sp/>property;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref><sp/>prefix(</highlight><highlight class="stringliteral">&quot;leveldb.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!in.<ref refid="classleveldb_1_1_slice_1aac9a3ee9b05567c8c93793e7593a5f13" kindref="member">starts_with</ref>(prefix))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>in.<ref refid="classleveldb_1_1_slice_1a1be5b22958a115ebecb2b017aad2b3f6" kindref="member">remove_prefix</ref>(prefix.<ref refid="classleveldb_1_1_slice_1a947d3173f04f8a30553e89046daf91d5" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in.<ref refid="classleveldb_1_1_slice_1aac9a3ee9b05567c8c93793e7593a5f13" kindref="member">starts_with</ref>(</highlight><highlight class="stringliteral">&quot;num-files-at-level&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>in.<ref refid="classleveldb_1_1_slice_1a1be5b22958a115ebecb2b017aad2b3f6" kindref="member">remove_prefix</ref>(strlen(</highlight><highlight class="stringliteral">&quot;num-files-at-level&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>level;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="namespaceleveldb_1a1bda628b65e834063ccc5fcaec8328f8" kindref="member">ConsumeDecimalNumber</ref>(&amp;in,<sp/>&amp;level)<sp/>&amp;&amp;<sp/>in.<ref refid="classleveldb_1_1_slice_1a7d0b93d5801bff5656068647759dcb8f" kindref="member">empty</ref>();</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok<sp/>||<sp/>level<sp/>&gt;=<sp/>config::kNumLevels)<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[100];</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a29d2d4a5aa83c12a1451743ca2a570fa" kindref="member">NumLevelFiles</ref>(static_cast&lt;int&gt;(level)));</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;stats&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[200];</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compactions\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Level<sp/><sp/>Files<sp/>Size(MB)<sp/>Time(sec)<sp/>Read(MB)<sp/>Write(MB)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--------------------------------------------------\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>value-&gt;append(buf);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>config::kNumLevels;<sp/>level++)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>files<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a29d2d4a5aa83c12a1451743ca2a570fa" kindref="member">NumLevelFiles</ref>(level);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_[level].micros<sp/>&gt;<sp/>0<sp/>||<sp/>files<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%3d<sp/>%8d<sp/>%8.0f<sp/>%9.0f<sp/>%8.0f<sp/>%9.0f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>files,</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1adfe3e1061becd9e2756b2dd4447b52e0" kindref="member">NumLevelBytes</ref>(level)<sp/>/<sp/>1048576.0,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_[level].micros<sp/>/<sp/>1e6,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_[level].bytes_read<sp/>/<sp/>1048576.0,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_[level].bytes_written<sp/>/<sp/>1048576.0);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value-&gt;append(buf);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sstables&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>()-&gt;<ref refid="classleveldb_1_1_version_1a83d35444c8e7c617a3a70e4c9050ce08" kindref="member">DebugString</ref>();</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403" refid="classleveldb_1_1_d_b_impl_1af08e218d92064699942c195ce0f06010" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_impl_1af08e218d92064699942c195ce0f06010" kindref="member">DBImpl::GetApproximateSizes</ref>(</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_range" kindref="compound">Range</ref>*<sp/>range,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>*<sp/>sizes)<sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(opt):<sp/>better<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version" kindref="compound">Version</ref>*<sp/>v;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>()-&gt;<ref refid="classleveldb_1_1_version_1ad237b446c7f7d9e63c4b7c162d6f0064" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1a500747b987e66c51116287f26cfd028c" kindref="member">current</ref>();</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>user_key<sp/>into<sp/>a<sp/>corresponding<sp/>internal<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>k1(range[i].<ref refid="db__bench_8cc_1ab376b87f96a574a793c03c53e75afec8" kindref="member">start</ref>,<sp/>kMaxSequenceNumber,<sp/>kValueTypeForSeek);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_internal_key" kindref="compound">InternalKey</ref><sp/>k2(range[i].limit,<sp/>kMaxSequenceNumber,<sp/>kValueTypeForSeek);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>start<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ada7f3ed63b1c48adb6e5b38348b300e1" kindref="member">ApproximateOffsetOf</ref>(v,<sp/>k1);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>limit<sp/>=<sp/>versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ada7f3ed63b1c48adb6e5b38348b300e1" kindref="member">ApproximateOffsetOf</ref>(v,<sp/>k2);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes[i]<sp/>=<sp/>(limit<sp/>&gt;=<sp/>start<sp/>?<sp/>limit<sp/>-<sp/>start<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_mutex_lock" kindref="compound">MutexLock</ref><sp/>l(&amp;mutex_);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="classleveldb_1_1_version_1a3f623697f625d4740d5b273c0bf6223a" kindref="member">Unref</ref>();</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>implementations<sp/>of<sp/>convenience<sp/>methods<sp/>that<sp/>subclasses<sp/>of<sp/>DB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>call<sp/>if<sp/>they<sp/>wish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431" refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_1ac2e472812630ed74298df7b03b08c1ae" kindref="member">DB::Put</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>&amp;<sp/>opt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/><ref refid="version__set_8cc_1a38c8b88c432e666ad10b0c5573e1160a" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref><sp/>batch;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a30770379143a7ccb4ede18ddf0e45bf3" kindref="member">Put</ref>(key,<sp/>value);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" kindref="member">Write</ref>(opt,<sp/>&amp;batch);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437" refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_1aff7577239799cd059464701c548090b9" kindref="member">DB::Delete</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_write_options" kindref="compound">WriteOptions</ref>&amp;<sp/>opt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_write_batch" kindref="compound">WriteBatch</ref><sp/>batch;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>batch.<ref refid="classleveldb_1_1_write_batch_1a473da7f94483dab253cc36b7b231ce53" kindref="member">Delete</ref>(key);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_1ae0b6ded8c8e0b88ff70190bf7a0c086c" kindref="member">Write</ref>(opt,<sp/>&amp;batch);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443" refid="classleveldb_1_1_d_b_1a15f516eb9ec41812419a7160b4740a22" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_d_b_1a15f516eb9ec41812419a7160b4740a22" kindref="member">DB::~DB</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445" refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_d_b_1ac1da2b48e911287d86f3a3bfa0f851fe" kindref="member">DB::Open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dbname,</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_d_b" kindref="compound">DB</ref>**<sp/>dbptr)<sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>*dbptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_d_b_impl" kindref="compound">DBImpl</ref>*<sp/>impl<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_d_b_impl" kindref="compound">DBImpl</ref>(options,<sp/>dbname);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>impl-&gt;mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9a4da7195ce1802c077bc4d0035d4dd1" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_version_edit" kindref="compound">VersionEdit</ref><sp/>edit;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>s<sp/>=<sp/>impl-&gt;Recover(&amp;edit);<sp/></highlight><highlight class="comment">//<sp/>Handles<sp/>create_if_missing,<sp/>error_if_exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>new_log_number<sp/>=<sp/>impl-&gt;versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ac4086c848479e74c1d9eb95e250e7167" kindref="member">NewFileNumber</ref>();</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>*<sp/>lfile;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref>-&gt;<ref refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de" kindref="member">NewWritableFile</ref>(<ref refid="namespaceleveldb_1ae5aadcd574cc5186e7821177d44f4c6c" kindref="member">LogFileName</ref>(dbname,<sp/>new_log_number),</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;lfile);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edit.<ref refid="classleveldb_1_1_version_edit_1a47e5c58d34b0e27dc8990687e0c5477a" kindref="member">SetLogNumber</ref>(new_log_number);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>impl-&gt;logfile_<sp/>=<sp/>lfile;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>impl-&gt;logfile_number_<sp/>=<sp/>new_log_number;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>impl-&gt;log_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1log_1_1_writer" kindref="compound">log::Writer</ref>(lfile);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>impl-&gt;versions_-&gt;<ref refid="classleveldb_1_1_version_set_1ac1d014901be7095ace1aaec0cf391fb6" kindref="member">LogAndApply</ref>(&amp;edit,<sp/>&amp;impl-&gt;mutex_);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>impl-&gt;DeleteObsoleteFiles();</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>impl-&gt;MaybeScheduleCompaction();</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>impl-&gt;mutex_.<ref refid="classleveldb_1_1port_1_1_mutex_1a9d69a21c53dad7732b2006acf87f006b" kindref="member">Unlock</ref>();</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>*dbptr<sp/>=<sp/>impl;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>impl;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479" refid="classleveldb_1_1_snapshot_1aa09531c67fc12a374f2d872ed2489e6b" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_snapshot_1aa09531c67fc12a374f2d872ed2489e6b" kindref="member">Snapshot::~Snapshot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482" refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" refkind="member"><highlight class="normal"><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="namespaceleveldb_1a5b0819d4d4adc2147b5e91a5553fd7dc" kindref="member">DestroyDB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dbname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structleveldb_1_1_options" kindref="compound">Options</ref>&amp;<sp/>options)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>*<sp/>env<sp/>=<sp/>options.<ref refid="structleveldb_1_1_options_1aeb08bfe820e9c89f57446d6fbd2e6ea8" kindref="member">env</ref>;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>filenames;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>error<sp/>in<sp/>case<sp/>directory<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/>env-&gt;<ref refid="classleveldb_1_1_env_1a53028e3112d7bb3bf6574ddaab18d6f6" kindref="member">GetChildren</ref>(dbname,<sp/>&amp;filenames);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filenames.empty())<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status_1a8e3720d233281c874a53c17e081f51b3" kindref="member">Status::OK</ref>();</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref>*<sp/>lock;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>lockname<sp/>=<sp/><ref refid="namespaceleveldb_1a9f772d88ab2d47dec0d68e5eb85c579e" kindref="member">LockFileName</ref>(dbname);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>result<sp/>=<sp/>env-&gt;<ref refid="classleveldb_1_1_env_1a9b7266f0444f832e428328ff19b7b54c" kindref="member">LockFile</ref>(lockname,<sp/>&amp;lock);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>number;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1" kindref="member">FileType</ref><sp/>type;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>filenames.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceleveldb_1af18fdbbcb483d40c35b4aaa4f00d3f6c" kindref="member">ParseFileName</ref>(filenames[i],<sp/>&amp;number,<sp/>&amp;type)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>!=<sp/><ref refid="namespaceleveldb_1ab8e559ac5cadcb2b5dd531c60df944f1abbb39081ce3d1fa7397c074443910235" kindref="member">kDBLockFile</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>file<sp/>will<sp/>be<sp/>deleted<sp/>at<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/>del<sp/>=<sp/>env-&gt;<ref refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af" kindref="member">DeleteFile</ref>(dbname<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>filenames[i]);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>()<sp/>&amp;&amp;<sp/>!del.<ref refid="classleveldb_1_1_status_1ab31e89a858c766716e3dc952be857c65" kindref="member">ok</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>del;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>env-&gt;<ref refid="classleveldb_1_1_env_1a194a2ee3c21bc0b204ad0e5bc3b81d4b" kindref="member">UnlockFile</ref>(lock);<sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>error<sp/>since<sp/>state<sp/>is<sp/>already<sp/>gone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>env-&gt;<ref refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af" kindref="member">DeleteFile</ref>(lockname);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>env-&gt;<ref refid="classleveldb_1_1_env_1a4e1a1c4495541e426b146cba56c59627" kindref="member">DeleteDir</ref>(dbname);<sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>error<sp/>in<sp/>case<sp/>dir<sp/>contains<sp/>other<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/db/db_impl.cc"/>
  </compounddef>
</doxygen>
