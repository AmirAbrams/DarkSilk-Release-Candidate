<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_c_coins_view_mem_pool" kind="class" language="C++" prot="public">
    <compoundname>CCoinsViewMemPool</compoundname>
    <basecompoundref refid="class_c_coins_view_backed" prot="public" virt="non-virtual">CCoinsViewBacked</basecompoundref>
    <includes refid="coins_8h" local="no">coins.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_coins_view_mem_pool_1a7a3870fc65376cb311a0b3abb28fec10" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref> &amp;</type>
        <definition>CTxMemPool&amp; CCoinsViewMemPool::mempool</definition>
        <argsstring></argsstring>
        <name>mempool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="499" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_coins_view_mem_pool_1aab9a206c304acec322fddf646c7bafb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CCoinsViewMemPool::CCoinsViewMemPool</definition>
        <argsstring>(CCoinsView *baseIn, CTxMemPool &amp;mempoolIn)</argsstring>
        <name>CCoinsViewMemPool</name>
        <param>
          <type><ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref> *</type>
          <declname>baseIn</declname>
        </param>
        <param>
          <type><ref refid="class_c_tx_mem_pool" kindref="compound">CTxMemPool</ref> &amp;</type>
          <declname>mempoolIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="502" column="1" bodyfile="/home/dev/ds-160209/src/coins.cpp" bodystart="355" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_view_mem_pool_1a01564f29ff2673ddd0d27414e576f1bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CCoinsViewMemPool::GetCoins</definition>
        <argsstring>(const uint256 &amp;txid, CCoins &amp;coins) const </argsstring>
        <name>GetCoins</name>
        <reimplements refid="class_c_coins_view_backed_1a21b95a9910f94e9b7ebed62a6f329ea0">GetCoins</reimplements>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>txid</declname>
        </param>
        <param>
          <type><ref refid="class_c_coins" kindref="compound">CCoins</ref> &amp;</type>
          <declname>coins</declname>
        </param>
        <briefdescription>
<para>Retrieve the <ref refid="class_c_coins" kindref="compound">CCoins</ref> (unspent transaction outputs) for a given txid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="503" column="1" bodyfile="/home/dev/ds-160209/src/coins.cpp" bodystart="357" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="class_c_coins_view_mem_pool_1a965e6c8e378fe937620ba2c180d1ed74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CCoinsViewMemPool::HaveCoins</definition>
        <argsstring>(const uint256 &amp;txid) const </argsstring>
        <name>HaveCoins</name>
        <reimplements refid="class_c_coins_view_backed_1a6a769cf9cc55128dea8e1a2798056e71">HaveCoins</reimplements>
        <param>
          <type>const <ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>txid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Just check whether we have data for a given txid. This may (but cannot always) return true for fully spent transactions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/coins.h" line="504" column="1" bodyfile="/home/dev/ds-160209/src/coins.cpp" bodystart="369" bodyend="371"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_c_coins_view" kindref="compound">CCoinsView</ref> that brings transactions from a memorypool into view. It does not check for spendings by memory pool transactions. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="393">
        <label>CCoinsViewMemPool</label>
        <link refid="class_c_coins_view_mem_pool"/>
        <childnode refid="394" relation="public-inheritance">
        </childnode>
      </node>
      <node id="395">
        <label>CCoinsView</label>
        <link refid="class_c_coins_view"/>
      </node>
      <node id="394">
        <label>CCoinsViewBacked</label>
        <link refid="class_c_coins_view_backed"/>
        <childnode refid="395" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="396">
        <label>CCoinsViewMemPool</label>
        <link refid="class_c_coins_view_mem_pool"/>
        <childnode refid="397" relation="public-inheritance">
        </childnode>
        <childnode refid="399" relation="usage">
          <edgelabel>mempool</edgelabel>
        </childnode>
      </node>
      <node id="400">
        <label>CMinerPolicyEstimator</label>
        <link refid="class_c_miner_policy_estimator"/>
      </node>
      <node id="402">
        <label>boost::recursive_mutex</label>
      </node>
      <node id="398">
        <label>CCoinsView</label>
        <link refid="class_c_coins_view"/>
      </node>
      <node id="401">
        <label>AnnotatedMixin&lt; boost::recursive_mutex &gt;</label>
        <link refid="class_annotated_mixin"/>
        <childnode refid="402" relation="public-inheritance">
        </childnode>
      </node>
      <node id="397">
        <label>CCoinsViewBacked</label>
        <link refid="class_c_coins_view_backed"/>
        <childnode refid="398" relation="public-inheritance">
        </childnode>
        <childnode refid="398" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
      </node>
      <node id="399">
        <label>CTxMemPool</label>
        <link refid="class_c_tx_mem_pool"/>
        <childnode refid="400" relation="usage">
          <edgelabel>minerPolicyEstimator</edgelabel>
        </childnode>
        <childnode refid="401" relation="usage">
          <edgelabel>cs</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dev/ds-160209/src/coins.h" line="497" column="1" bodyfile="/home/dev/ds-160209/src/coins.h" bodystart="496" bodyend="505"/>
    <listofallmembers>
      <member refid="class_c_coins_view_backed_1a901472317114adc4c104efd61dcf6203" prot="protected" virt="non-virtual"><scope>CCoinsViewMemPool</scope><name>base</name></member>
      <member refid="class_c_coins_view_backed_1ace15da3934c9d7a9cb9c7a787f92f764" prot="public" virt="virtual"><scope>CCoinsViewMemPool</scope><name>BatchWrite</name></member>
      <member refid="class_c_coins_view_backed_1af86a3b07433e8d84678772411791125e" prot="public" virt="non-virtual"><scope>CCoinsViewMemPool</scope><name>CCoinsViewBacked</name></member>
      <member refid="class_c_coins_view_mem_pool_1aab9a206c304acec322fddf646c7bafb9" prot="public" virt="non-virtual"><scope>CCoinsViewMemPool</scope><name>CCoinsViewMemPool</name></member>
      <member refid="class_c_coins_view_backed_1a8465dc4764fd5b01591b824551cbbfab" prot="public" virt="virtual"><scope>CCoinsViewMemPool</scope><name>GetBestBlock</name></member>
      <member refid="class_c_coins_view_mem_pool_1a01564f29ff2673ddd0d27414e576f1bc" prot="public" virt="virtual"><scope>CCoinsViewMemPool</scope><name>GetCoins</name></member>
      <member refid="class_c_coins_view_backed_1a368f277ac68652a91ac171f46f02edca" prot="public" virt="virtual"><scope>CCoinsViewMemPool</scope><name>GetStats</name></member>
      <member refid="class_c_coins_view_mem_pool_1a965e6c8e378fe937620ba2c180d1ed74" prot="public" virt="virtual"><scope>CCoinsViewMemPool</scope><name>HaveCoins</name></member>
      <member refid="class_c_coins_view_mem_pool_1a7a3870fc65376cb311a0b3abb28fec10" prot="protected" virt="non-virtual"><scope>CCoinsViewMemPool</scope><name>mempool</name></member>
      <member refid="class_c_coins_view_backed_1a7eaddfbfd401a95c2fda2a8d8feaaf73" prot="public" virt="non-virtual"><scope>CCoinsViewMemPool</scope><name>SetBackend</name></member>
      <member refid="class_c_coins_view_1a7ffb4218bf991ddff47339e44c8710da" prot="public" virt="virtual"><scope>CCoinsViewMemPool</scope><name>~CCoinsView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
