<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="stormnode-payments_8cpp" kind="file" language="C++">
    <compoundname>stormnode-payments.cpp</compoundname>
    <includes refid="stormnode-payments_8h" local="yes">stormnode-payments.h</includes>
    <includes refid="stormnode-budget_8h" local="yes">stormnode-budget.h</includes>
    <includes refid="stormnode-sync_8h" local="yes">stormnode-sync.h</includes>
    <includes refid="stormnodeman_8h" local="yes">stormnodeman.h</includes>
    <includes refid="sandstorm_8h" local="yes">sandstorm.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="sync_8h" local="yes">sync.h</includes>
    <includes refid="spork_8h" local="yes">spork.h</includes>
    <includes refid="addrman_8h" local="yes">addrman.h</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <incdepgraph>
      <node id="53705">
        <label>list</label>
      </node>
      <node id="53659">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="53739">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53737" relation="include">
        </childnode>
      </node>
      <node id="53753">
        <label>netinet/in.h</label>
      </node>
      <node id="53691">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53656" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
      </node>
      <node id="53746">
        <label>arpa/inet.h</label>
      </node>
      <node id="53723">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="53675">
        <label>limits</label>
      </node>
      <node id="53767">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="53684">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53656" relation="include">
        </childnode>
      </node>
      <node id="53766">
        <label>stormnode-budget.h</label>
        <link refid="stormnode-budget_8h"/>
        <childnode refid="53688" relation="include">
        </childnode>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53742" relation="include">
        </childnode>
        <childnode refid="53653" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53764" relation="include">
        </childnode>
        <childnode refid="53763" relation="include">
        </childnode>
        <childnode refid="53765" relation="include">
        </childnode>
        <childnode refid="53767" relation="include">
        </childnode>
      </node>
      <node id="53690">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="53691" relation="include">
        </childnode>
        <childnode refid="53666" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53692" relation="include">
        </childnode>
        <childnode refid="53693" relation="include">
        </childnode>
        <childnode refid="53720" relation="include">
        </childnode>
        <childnode refid="53718" relation="include">
        </childnode>
      </node>
      <node id="53685">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="53686" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53662" relation="include">
        </childnode>
      </node>
      <node id="53693">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53694" relation="include">
        </childnode>
        <childnode refid="53695" relation="include">
        </childnode>
        <childnode refid="53664" relation="include">
        </childnode>
        <childnode refid="53696" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53717" relation="include">
        </childnode>
      </node>
      <node id="53716">
        <label>openssl/rand.h</label>
      </node>
      <node id="53773">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="53774" relation="include">
        </childnode>
        <childnode refid="53776" relation="include">
        </childnode>
        <childnode refid="53717" relation="include">
        </childnode>
        <childnode refid="53691" relation="include">
        </childnode>
        <childnode refid="53705" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53706" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53678">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="53667">
        <label>assert.h</label>
      </node>
      <node id="53752">
        <label>net/if.h</label>
      </node>
      <node id="53770">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53771" relation="include">
        </childnode>
        <childnode refid="53769" relation="include">
        </childnode>
      </node>
      <node id="53768">
        <label>stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="53652" relation="include">
        </childnode>
        <childnode refid="53688" relation="include">
        </childnode>
      </node>
      <node id="53689">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="53690" relation="include">
        </childnode>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53726" relation="include">
        </childnode>
        <childnode refid="53691" relation="include">
        </childnode>
        <childnode refid="53741" relation="include">
        </childnode>
      </node>
      <node id="53765">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="53738">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="53686" relation="include">
        </childnode>
      </node>
      <node id="53725">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="53764">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="53758" relation="include">
        </childnode>
        <childnode refid="53664" relation="include">
        </childnode>
        <childnode refid="53653" relation="include">
        </childnode>
        <childnode refid="53693" relation="include">
        </childnode>
        <childnode refid="53654" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53679">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="53680" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
      </node>
      <node id="53726">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="53727" relation="include">
        </childnode>
        <childnode refid="53689" relation="include">
        </childnode>
        <childnode refid="53667" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53694" relation="include">
        </childnode>
        <childnode refid="53740" relation="include">
        </childnode>
      </node>
      <node id="53661">
        <label>sys/mman.h</label>
      </node>
      <node id="53656">
        <label>stdlib.h</label>
      </node>
      <node id="53760">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="53761" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53758" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53694" relation="include">
        </childnode>
      </node>
      <node id="53694">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="53715">
        <label>openssl/crypto.h</label>
      </node>
      <node id="53652">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="53653" relation="include">
        </childnode>
        <childnode refid="53688" relation="include">
        </childnode>
        <childnode refid="53763" relation="include">
        </childnode>
        <childnode refid="53765" relation="include">
        </childnode>
      </node>
      <node id="53749">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="53750" relation="include">
        </childnode>
        <childnode refid="53661" relation="include">
        </childnode>
        <childnode refid="53751" relation="include">
        </childnode>
        <childnode refid="53699" relation="include">
        </childnode>
        <childnode refid="53752" relation="include">
        </childnode>
        <childnode refid="53753" relation="include">
        </childnode>
        <childnode refid="53746" relation="include">
        </childnode>
        <childnode refid="53754" relation="include">
        </childnode>
        <childnode refid="53662" relation="include">
        </childnode>
        <childnode refid="53755" relation="include">
        </childnode>
        <childnode refid="53663" relation="include">
        </childnode>
        <childnode refid="53756" relation="include">
        </childnode>
      </node>
      <node id="53711">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="53681">
        <label>openssl/sha.h</label>
      </node>
      <node id="53756">
        <label>errno.h</label>
      </node>
      <node id="53674">
        <label>cassert</label>
      </node>
      <node id="53669">
        <label>stdexcept</label>
      </node>
      <node id="53698">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="53699" relation="include">
        </childnode>
        <childnode refid="53700" relation="include">
        </childnode>
        <childnode refid="53701" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53702" relation="include">
        </childnode>
        <childnode refid="53691" relation="include">
        </childnode>
        <childnode refid="53660" relation="include">
        </childnode>
        <childnode refid="53705" relation="include">
        </childnode>
        <childnode refid="53706" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53707" relation="include">
        </childnode>
        <childnode refid="53708" relation="include">
        </childnode>
        <childnode refid="53709" relation="include">
        </childnode>
        <childnode refid="53710" relation="include">
        </childnode>
        <childnode refid="53711" relation="include">
        </childnode>
        <childnode refid="53712" relation="include">
        </childnode>
        <childnode refid="53713" relation="include">
        </childnode>
        <childnode refid="53714" relation="include">
        </childnode>
        <childnode refid="53715" relation="include">
        </childnode>
        <childnode refid="53716" relation="include">
        </childnode>
        <childnode refid="53697" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
      </node>
      <node id="53757">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="53758" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53748" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
      </node>
      <node id="53710">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="53734">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53718" relation="include">
        </childnode>
        <childnode refid="53735" relation="include">
        </childnode>
        <childnode refid="53738" relation="include">
        </childnode>
      </node>
      <node id="53658">
        <label>string</label>
      </node>
      <node id="53772">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="53773" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53656" relation="include">
        </childnode>
        <childnode refid="53761" relation="include">
        </childnode>
        <childnode refid="53690" relation="include">
        </childnode>
        <childnode refid="53777" relation="include">
        </childnode>
        <childnode refid="53688" relation="include">
        </childnode>
        <childnode refid="53653" relation="include">
        </childnode>
        <childnode refid="53776" relation="include">
        </childnode>
        <childnode refid="53693" relation="include">
        </childnode>
        <childnode refid="53778" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53717" relation="include">
        </childnode>
      </node>
      <node id="53762">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53656" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53742" relation="include">
        </childnode>
      </node>
      <node id="53660">
        <label>map</label>
      </node>
      <node id="53707">
        <label>boost/thread.hpp</label>
      </node>
      <node id="53759">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="53748" relation="include">
        </childnode>
        <childnode refid="53757" relation="include">
        </childnode>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53720" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53660" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53763">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53742" relation="include">
        </childnode>
        <childnode refid="53653" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53764" relation="include">
        </childnode>
        <childnode refid="53688" relation="include">
        </childnode>
        <childnode refid="53720" relation="include">
        </childnode>
      </node>
      <node id="53778">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="53691" relation="include">
        </childnode>
        <childnode refid="53779" relation="include">
        </childnode>
        <childnode refid="53745" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
      </node>
      <node id="53730">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53731" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53709" relation="include">
        </childnode>
        <childnode refid="53734" relation="include">
        </childnode>
        <childnode refid="53739" relation="include">
        </childnode>
      </node>
      <node id="53686">
        <label>stddef.h</label>
      </node>
      <node id="53695">
        <label>boost/variant.hpp</label>
      </node>
      <node id="53755">
        <label>netdb.h</label>
      </node>
      <node id="53750">
        <label>sys/fcntl.h</label>
      </node>
      <node id="53727">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="53728" relation="include">
        </childnode>
      </node>
      <node id="53737">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53736" relation="include">
        </childnode>
      </node>
      <node id="53741">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="53672">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53660" relation="include">
        </childnode>
        <childnode refid="53673" relation="include">
        </childnode>
        <childnode refid="53674" relation="include">
        </childnode>
        <childnode refid="53675" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53668" relation="include">
        </childnode>
        <childnode refid="53676" relation="include">
        </childnode>
        <childnode refid="53677" relation="include">
        </childnode>
        <childnode refid="53678" relation="include">
        </childnode>
        <childnode refid="53654" relation="include">
        </childnode>
        <childnode refid="53679" relation="include">
        </childnode>
      </node>
      <node id="53662">
        <label>limits.h</label>
      </node>
      <node id="53722">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="53747">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="53673" relation="include">
        </childnode>
        <childnode refid="53743" relation="include">
        </childnode>
      </node>
      <node id="53701">
        <label>sys/resource.h</label>
      </node>
      <node id="53651">
        <label>/home/dev/ds-160209/src/stormnode-payments.cpp</label>
        <link refid="stormnode-payments.cpp"/>
        <childnode refid="53652" relation="include">
        </childnode>
        <childnode refid="53766" relation="include">
        </childnode>
        <childnode refid="53768" relation="include">
        </childnode>
        <childnode refid="53769" relation="include">
        </childnode>
        <childnode refid="53770" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53780" relation="include">
        </childnode>
        <childnode refid="53759" relation="include">
        </childnode>
        <childnode refid="53765" relation="include">
        </childnode>
        <childnode refid="53708" relation="include">
        </childnode>
      </node>
      <node id="53712">
        <label>openssl/bio.h</label>
      </node>
      <node id="53777">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="53654" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53776" relation="include">
        </childnode>
      </node>
      <node id="53745">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="53748">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53749" relation="include">
        </childnode>
      </node>
      <node id="53776">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="53653" relation="include">
        </childnode>
        <childnode refid="53664" relation="include">
        </childnode>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53693" relation="include">
        </childnode>
        <childnode refid="53745" relation="include">
        </childnode>
        <childnode refid="53695" relation="include">
        </childnode>
      </node>
      <node id="53665">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="53666" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53681" relation="include">
        </childnode>
        <childnode refid="53682" relation="include">
        </childnode>
        <childnode refid="53683" relation="include">
        </childnode>
        <childnode refid="53684" relation="include">
        </childnode>
        <childnode refid="53685" relation="include">
        </childnode>
        <childnode refid="53687" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53754">
        <label>ifaddrs.h</label>
      </node>
      <node id="53717">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53656" relation="include">
        </childnode>
        <childnode refid="53718" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53719" relation="include">
        </childnode>
      </node>
      <node id="53699">
        <label>sys/types.h</label>
      </node>
      <node id="53733">
        <label>ios</label>
      </node>
      <node id="53657">
        <label>string.h</label>
      </node>
      <node id="53680">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="53676">
        <label>cstdio</label>
      </node>
      <node id="53724">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="53714">
        <label>openssl/buffer.h</label>
      </node>
      <node id="53677">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="53688">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="53689" relation="include">
        </childnode>
        <childnode refid="53742" relation="include">
        </childnode>
        <childnode refid="53693" relation="include">
        </childnode>
        <childnode refid="53731" relation="include">
        </childnode>
        <childnode refid="53729" relation="include">
        </childnode>
        <childnode refid="53760" relation="include">
        </childnode>
        <childnode refid="53705" relation="include">
        </childnode>
        <childnode refid="53740" relation="include">
        </childnode>
      </node>
      <node id="53709">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="53769">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53742" relation="include">
        </childnode>
        <childnode refid="53653" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53764" relation="include">
        </childnode>
        <childnode refid="53688" relation="include">
        </childnode>
        <childnode refid="53763" relation="include">
        </childnode>
      </node>
      <node id="53740">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="53664">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="53665" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53666" relation="include">
        </childnode>
        <childnode refid="53669" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53663">
        <label>unistd.h</label>
      </node>
      <node id="53775">
        <label>db_cxx.h</label>
      </node>
      <node id="53671">
        <label>vector</label>
      </node>
      <node id="53696">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53666" relation="include">
        </childnode>
        <childnode refid="53697" relation="include">
        </childnode>
        <childnode refid="53669" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
      </node>
      <node id="53742">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="53743" relation="include">
        </childnode>
        <childnode refid="53744" relation="include">
        </childnode>
        <childnode refid="53694" relation="include">
        </childnode>
        <childnode refid="53745" relation="include">
        </childnode>
        <childnode refid="53716" relation="include">
        </childnode>
        <childnode refid="53746" relation="include">
        </childnode>
        <childnode refid="53747" relation="include">
        </childnode>
        <childnode refid="53748" relation="include">
        </childnode>
        <childnode refid="53757" relation="include">
        </childnode>
        <childnode refid="53759" relation="include">
        </childnode>
        <childnode refid="53665" relation="include">
        </childnode>
        <childnode refid="53731" relation="include">
        </childnode>
      </node>
      <node id="53682">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="53708">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="53706">
        <label>utility</label>
      </node>
      <node id="53728">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="53690" relation="include">
        </childnode>
        <childnode refid="53729" relation="include">
        </childnode>
      </node>
      <node id="53704">
        <label>sstream</label>
      </node>
      <node id="53779">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="53653">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="53654" relation="include">
        </childnode>
        <childnode refid="53664" relation="include">
        </childnode>
        <childnode refid="53669" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53713">
        <label>openssl/evp.h</label>
      </node>
      <node id="53702">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="53674" relation="include">
        </childnode>
        <childnode refid="53703" relation="include">
        </childnode>
        <childnode refid="53704" relation="include">
        </childnode>
        <childnode refid="53669" relation="include">
        </childnode>
      </node>
      <node id="53670">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="53774">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53731" relation="include">
        </childnode>
        <childnode refid="53660" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53709" relation="include">
        </childnode>
        <childnode refid="53775" relation="include">
        </childnode>
      </node>
      <node id="53731">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="53654" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
        <childnode refid="53732" relation="include">
        </childnode>
        <childnode refid="53667" relation="include">
        </childnode>
        <childnode refid="53733" relation="include">
        </childnode>
        <childnode refid="53675" relation="include">
        </childnode>
        <childnode refid="53660" relation="include">
        </childnode>
        <childnode refid="53673" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53657" relation="include">
        </childnode>
        <childnode refid="53706" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53687">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53686" relation="include">
        </childnode>
        <childnode refid="53662" relation="include">
        </childnode>
      </node>
      <node id="53780">
        <label>spork.h</label>
        <link refid="spork_8h"/>
        <childnode refid="53696" relation="include">
        </childnode>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53742" relation="include">
        </childnode>
        <childnode refid="53653" relation="include">
        </childnode>
        <childnode refid="53698" relation="include">
        </childnode>
        <childnode refid="53693" relation="include">
        </childnode>
        <childnode refid="53764" relation="include">
        </childnode>
        <childnode refid="53688" relation="include">
        </childnode>
        <childnode refid="53757" relation="include">
        </childnode>
        <childnode refid="53770" relation="include">
        </childnode>
        <childnode refid="53765" relation="include">
        </childnode>
      </node>
      <node id="53700">
        <label>sys/time.h</label>
      </node>
      <node id="53703">
        <label>iostream</label>
      </node>
      <node id="53743">
        <label>deque</label>
      </node>
      <node id="53666">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="53667" relation="include">
        </childnode>
        <childnode refid="53668" relation="include">
        </childnode>
        <childnode refid="53669" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53751">
        <label>sys/socket.h</label>
      </node>
      <node id="53736">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="53667" relation="include">
        </childnode>
        <childnode refid="53686" relation="include">
        </childnode>
        <childnode refid="53657" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
      </node>
      <node id="53744">
        <label>boost/array.hpp</label>
      </node>
      <node id="53697">
        <label>openssl/bn.h</label>
      </node>
      <node id="53729">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="53730" relation="include">
        </childnode>
        <childnode refid="53688" relation="include">
        </childnode>
        <childnode refid="53660" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53706" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53720">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="53670" relation="include">
        </childnode>
      </node>
      <node id="53654">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="53655" relation="include">
        </childnode>
        <childnode refid="53657" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53659" relation="include">
        </childnode>
        <childnode refid="53660" relation="include">
        </childnode>
        <childnode refid="53661" relation="include">
        </childnode>
        <childnode refid="53662" relation="include">
        </childnode>
        <childnode refid="53663" relation="include">
        </childnode>
      </node>
      <node id="53758">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="53696" relation="include">
        </childnode>
        <childnode refid="53666" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
      </node>
      <node id="53673">
        <label>set</label>
      </node>
      <node id="53732">
        <label>algorithm</label>
      </node>
      <node id="53771">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="53721" relation="include">
        </childnode>
        <childnode refid="53653" relation="include">
        </childnode>
        <childnode refid="53772" relation="include">
        </childnode>
      </node>
      <node id="53683">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="53670" relation="include">
        </childnode>
        <childnode refid="53656" relation="include">
        </childnode>
      </node>
      <node id="53692">
        <label>util.h</label>
      </node>
      <node id="53718">
        <label>stdio.h</label>
      </node>
      <node id="53655">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="53656" relation="include">
        </childnode>
      </node>
      <node id="53668">
        <label>cstring</label>
      </node>
      <node id="53721">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="53722" relation="include">
        </childnode>
        <childnode refid="53723" relation="include">
        </childnode>
        <childnode refid="53724" relation="include">
        </childnode>
        <childnode refid="53659" relation="include">
        </childnode>
        <childnode refid="53725" relation="include">
        </childnode>
      </node>
      <node id="53719">
        <label>inttypes.h</label>
      </node>
      <node id="53735">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="53736" relation="include">
        </childnode>
        <childnode refid="53737" relation="include">
        </childnode>
      </node>
      <node id="53761">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="53690" relation="include">
        </childnode>
        <childnode refid="53687" relation="include">
        </childnode>
        <childnode refid="53762" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_stormnode_payments" kindref="compound">CStormnodePayments</ref></type>
        <definition>CStormnodePayments stormnodePayments</definition>
        <argsstring></argsstring>
        <name>stormnodePayments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object for who&apos;s going to get paid on which blocks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="18" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="18" bodyend="-1"/>
        <referencedby refid="init_8h_1a1a4c1bfbf6ba1db77e988b89b9cadfd3" compoundref="init_8cpp" startline="375" endline="1285">AppInit2</referencedby>
        <referencedby refid="sandstorm_8h_1ac661e702905cd5093cb237555ba5c1c0" compoundref="sandstorm_8cpp" startline="2196" endline="2239">ThreadCheckSandStormPool</referencedby>
        <referencedby refid="class_c_stormnode_sync_1a686a36163137e9079365e7fd0ede826c" compoundref="stormnode-sync_8cpp" startline="95" endline="106">CStormnodeSync::AddedStormnodeWinner</referencedby>
        <referencedby refid="class_c_stormnode_sync_1adaaeb592c3432c8a459560523c7be207" compoundref="stormnode-sync_8cpp" startline="225" endline="405">CStormnodeSync::Process</referencedby>
        <referencedby refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" compoundref="stormnode_8cpp" startline="246" endline="289">CStormnode::GetLastPaid</referencedby>
        <referencedby refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" compoundref="stormnode_8cpp" startline="351" endline="422">CStormnodeBroadcast::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" compoundref="stormnode_8cpp" startline="578" endline="664">CStormnodePing::CheckAndUpdate</referencedby>
        <referencedby refid="class_c_stormnode_man_1a6d8c3a832ea7d6f4780a59e2ae0441b8" compoundref="stormnodeman_8cpp" startline="255" endline="350">CStormnodeMan::CheckAndRemove</referencedby>
        <referencedby refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" compoundref="stormnodeman_8cpp" startline="364" endline="376">CStormnodeMan::CountEnabled</referencedby>
        <referencedby refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" compoundref="stormnodeman_8cpp" startline="442" endline="502">CStormnodeMan::GetNextStormnodeInQueueForPayment</referencedby>
        <referencedby refid="class_c_stormnode_man_1a24417dae3da8762e9be495f25b0a6d30" compoundref="stormnodeman_8cpp" startline="504" endline="534">CStormnodeMan::FindRandomNotInVec</referencedby>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stormnode-payments_8cpp_1ad7b9616c84ed22224772799b69d7cbeb" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_vecPayments</definition>
        <argsstring></argsstring>
        <name>cs_vecPayments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="20" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stormnode-payments_8cpp_1ab9dc21266fc508439f6ed0422da8b214" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_mapStormnodeBlocks</definition>
        <argsstring></argsstring>
        <name>cs_mapStormnodeBlocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="21" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stormnode-payments_8cpp_1a339b2de1a0d1e6bb993ac7abe7f742d2" prot="public" static="no" mutable="no">
        <type><ref refid="sync_8h_1a37a4692b2d517f2843655ca11af7668a" kindref="member">CCriticalSection</ref></type>
        <definition>CCriticalSection cs_mapStormnodePayeeVotes</definition>
        <argsstring></argsstring>
        <name>cs_mapStormnodePayeeVotes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="22" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stormnode-payments_8cpp_1ae992438141f991b3ca132d11da230d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DumpStormnodePayments</definition>
        <argsstring>()</argsstring>
        <name>DumpStormnodePayments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="156" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="156" bodyend="183"/>
        <references refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" compoundref="util_8h" startline="383" endline="387">GetTimeMillis</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" compoundref="stormnode-payments_8cpp" startline="66" endline="154">CStormnodePaymentDB::Read</references>
        <references refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a7f12ef3395c370257e8fa09d3ff5626e" compoundref="stormnode-payments_8h" startline="47">CStormnodePaymentDB::FileError</references>
        <references refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a2f12de8ca0f127551efaccbdeb5ca6fe" compoundref="stormnode-payments_8h" startline="46">CStormnodePaymentDB::Ok</references>
        <references refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a96d00baa28f120ca64ffa93880171c09" compoundref="stormnode-payments_8h" startline="52">CStormnodePaymentDB::IncorrectFormat</references>
        <references refid="class_c_stormnode_payment_d_b_1a6dc05426079d7bcf41f2587899e422fd" compoundref="stormnode-payments_8cpp" startline="34" endline="64">CStormnodePaymentDB::Write</references>
        <referencedby refid="init_8h_1ac5f038c2b480cf9ef5e19e3eba8dbaf9" compoundref="init_8cpp" startline="130" endline="194">Shutdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="stormnode-payments_8cpp_1a775fd7f6eef6c395268172c278b9100b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsBlockValueValid</definition>
        <argsstring>(const CBlock &amp;block, CAmount nExpectedValue)</argsstring>
        <name>IsBlockValueValid</name>
        <param>
          <type>const <ref refid="class_c_block" kindref="compound">CBlock</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>nExpectedValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="185" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="185" bodyend="228"/>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" compoundref="chain_8h" startline="233" endline="236">CBlockIndex::GetBlockHash</references>
        <references refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" compoundref="primitives_2block_8h" startline="40">CBlockHeader::hashPrevBlock</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1a0f196a2ca46b0cc4de3a488a4cbc2374" compoundref="stormnode-sync_8cpp" startline="23" endline="26">CStormnodeSync::IsSynced</references>
        <references refid="stormnode-budget_8cpp_1a25f51a3a63c2bdfca39a2c9a7f110ab1" compoundref="stormnode-budget_8cpp" startline="27" endline="33">GetBudgetPaymentCycleBlocks</references>
        <references refid="class_c_block_1a9b6508d662722775f3029b980b382b66" compoundref="primitives_2block_8h" startline="107">CBlock::vtx</references>
        <references refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" compoundref="spork_8cpp" startline="82" endline="102">IsSporkActive</references>
        <references refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" compoundref="stormnode-budget_8cpp" startline="18">budget</references>
        <references refid="class_c_budget_manager_1a1011c9399df614e09f77d87ebe4f7bca" compoundref="stormnode-budget_8cpp" startline="532" endline="555">CBudgetManager::IsBudgetPaymentBlock</references>
      </memberdef>
      <memberdef kind="function" id="stormnode-payments_8cpp_1af9e474d79a12729ed3e96b0d1c0351b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsBlockPayeeValid</definition>
        <argsstring>(const CTransaction &amp;txNew, int nBlockHeight)</argsstring>
        <name>IsBlockPayeeValid</name>
        <param>
          <type>const <ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txNew</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nBlockHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="230" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="230" bodyend="269"/>
        <references refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" compoundref="stormnode-sync_8cpp" startline="15">stormnodeSync</references>
        <references refid="class_c_stormnode_sync_1a0f196a2ca46b0cc4de3a488a4cbc2374" compoundref="stormnode-sync_8cpp" startline="23" endline="26">CStormnodeSync::IsSynced</references>
        <references refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" compoundref="spork_8cpp" startline="82" endline="102">IsSporkActive</references>
        <references refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" compoundref="stormnode-budget_8cpp" startline="18">budget</references>
        <references refid="class_c_budget_manager_1a1011c9399df614e09f77d87ebe4f7bca" compoundref="stormnode-budget_8cpp" startline="532" endline="555">CBudgetManager::IsBudgetPaymentBlock</references>
        <references refid="class_c_budget_manager_1a1ad65c9d6a743371c0033abf623a291f" compoundref="stormnode-budget_8cpp" startline="574" endline="621">CBudgetManager::IsTransactionValid</references>
        <references refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" compoundref="util_8h" startline="158">LogPrintf</references>
        <references refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" compoundref="transaction_8cpp" startline="12" endline="28">CTransaction::ToString</references>
        <references refid="class_c_stormnode_payments_1ae14691c97882f093b8c852f03d7f5884" compoundref="stormnode-payments_8cpp" startline="599" endline="608">CStormnodePayments::IsTransactionValid</references>
      </memberdef>
      <memberdef kind="function" id="stormnode-payments_8cpp_1a1c78c12ef9ef9becb2701ac56c3996ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FillBlockPayee</definition>
        <argsstring>(CTransaction &amp;txNew, CAmount nFees)</argsstring>
        <name>FillBlockPayee</name>
        <param>
          <type><ref refid="class_c_transaction" kindref="compound">CTransaction</ref> &amp;</type>
          <declname>txNew</declname>
        </param>
        <param>
          <type><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref></type>
          <declname>nFees</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="272" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="272" bodyend="282"/>
        <references refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" compoundref="main_8cpp" startline="76">pindexBest</references>
        <references refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" compoundref="spork_8cpp" startline="82" endline="102">IsSporkActive</references>
        <references refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" compoundref="stormnode-budget_8cpp" startline="18">budget</references>
        <references refid="class_c_budget_manager_1a1011c9399df614e09f77d87ebe4f7bca" compoundref="stormnode-budget_8cpp" startline="532" endline="555">CBudgetManager::IsBudgetPaymentBlock</references>
        <references refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" compoundref="chain_8h" startline="116">CBlockIndex::nHeight</references>
        <references refid="class_c_budget_manager_1a8109dee7a714a093d88d4a4457bc728a" compoundref="stormnode-budget_8cpp" startline="430" endline="491">CBudgetManager::FillBlockPayee</references>
        <references refid="class_c_stormnode_payments_1accaeb923fe36e73d4228fc043771c4ad" compoundref="stormnode-payments_8cpp" startline="294" endline="346">CStormnodePayments::FillBlockPayee</references>
        <referencedby refid="class_c_wallet_1a644df129468440aa36f49ca3716a3c19" compoundref="wallet_8cpp" startline="3733" endline="3956">CWallet::CreateCoinStake</referencedby>
      </memberdef>
      <memberdef kind="function" id="stormnode-payments_8cpp_1a7828ab0b9a1302db35b658f727b260e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GetRequiredPaymentsString</definition>
        <argsstring>(int nBlockHeight)</argsstring>
        <name>GetRequiredPaymentsString</name>
        <param>
          <type>int</type>
          <declname>nBlockHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="284" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="284" bodyend="291"/>
        <references refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" compoundref="spork_8cpp" startline="82" endline="102">IsSporkActive</references>
        <references refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" compoundref="stormnode-budget_8cpp" startline="18">budget</references>
        <references refid="class_c_budget_manager_1a1011c9399df614e09f77d87ebe4f7bca" compoundref="stormnode-budget_8cpp" startline="532" endline="555">CBudgetManager::IsBudgetPaymentBlock</references>
        <references refid="class_c_budget_manager_1aa7df3137c4b407fdbb474fcf602a67a5" compoundref="stormnode-budget_8cpp" startline="760" endline="788">CBudgetManager::GetRequiredPaymentsString</references>
        <references refid="class_c_stormnode_payments_1a67088f0606e6b20c9d918a72db4ca2ff" compoundref="stormnode-payments_8cpp" startline="588" endline="597">CStormnodePayments::GetRequiredPaymentsString</references>
        <referencedby refid="rpcstormnode_8cpp_1a1b562b4a6a627758a7c1080f23a82aa0" compoundref="rpcstormnode_8cpp" startline="81" endline="471">stormnode</referencedby>
      </memberdef>
      <memberdef kind="function" id="stormnode-payments_8cpp_1a0bca99aa555725c39171cc06fb3e94de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsReferenceNode</definition>
        <argsstring>(CTxIn &amp;vin)</argsstring>
        <name>IsReferenceNode</name>
        <param>
          <type><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref> &amp;</type>
          <declname>vin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode-payments.cpp" line="634" column="1" bodyfile="/home/dev/ds-160209/src/stormnode-payments.cpp" bodystart="634" bodyend="642"/>
        <references refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" compoundref="transaction_8h" startline="97">CTxIn::prevout</references>
        <references refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" compoundref="transaction_8h" startline="66" endline="69">COutPoint::ToStringShort</references>
        <referencedby refid="class_c_stormnode_payments_1a8781a05c217f2b7b34bb2c57e0a6c813" compoundref="stormnode-payments_8cpp" startline="490" endline="517">CStormnodePayments::AddWinningStormnode</referencedby>
        <referencedby refid="class_c_stormnode_payment_winner_1ae8e5cecfd1f95eed8fdd14f019360fa0" compoundref="stormnode-payments_8cpp" startline="644" endline="681">CStormnodePaymentWinner::IsValid</referencedby>
        <referencedby refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" compoundref="stormnode-payments_8cpp" startline="683" endline="762">CStormnodePayments::ProcessBlock</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016<sp/>The<sp/>Dash<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-payments_8h" kindref="compound">stormnode-payments.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-budget_8h" kindref="compound">stormnode-budget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-sync_8h" kindref="compound">stormnode-sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeman_8h" kindref="compound">stormnodeman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sandstorm_8h" kindref="compound">sandstorm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sync_8h" kindref="compound">sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spork_8h" kindref="compound">spork.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="addrman_8h" kindref="compound">addrman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="stormnode-payments_8h_1a1d528b1b067a2f669dfd90c513a97116" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_payments" kindref="compound">CStormnodePayments</ref><sp/><ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="stormnode-payments_8h_1ad7b9616c84ed22224772799b69d7cbeb" refkind="member"><highlight class="normal"><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="stormnode-payments_8cpp_1ad7b9616c84ed22224772799b69d7cbeb" kindref="member">cs_vecPayments</ref>;</highlight></codeline>
<codeline lineno="21" refid="stormnode-payments_8h_1ab9dc21266fc508439f6ed0422da8b214" refkind="member"><highlight class="normal"><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="stormnode-payments_8cpp_1ab9dc21266fc508439f6ed0422da8b214" kindref="member">cs_mapStormnodeBlocks</ref>;</highlight></codeline>
<codeline lineno="22" refid="stormnode-payments_8h_1a339b2de1a0d1e6bb993ac7abe7f742d2" refkind="member"><highlight class="normal"><ref refid="class_annotated_mixin" kindref="compound">CCriticalSection</ref><sp/><ref refid="stormnode-payments_8cpp_1a339b2de1a0d1e6bb993ac7abe7f742d2" kindref="member">cs_mapStormnodePayeeVotes</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CStormnodePaymentDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_c_stormnode_payment_d_b_1ade4ae1d8cfaa218535e5abc8174729dd" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_payment_d_b_1ade4ae1d8cfaa218535e5abc8174729dd" kindref="member">CStormnodePaymentDB::CStormnodePaymentDB</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>pathDB<sp/>=<sp/><ref refid="util_8cpp_1ab83866a054745d4b30a3948a1b44beba" kindref="member">GetDataDir</ref>()<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;snpayments.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>strMagicMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StormnodePayments&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_c_stormnode_payment_d_b_1a6dc05426079d7bcf41f2587899e422fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_d_b_1a6dc05426079d7bcf41f2587899e422fd" kindref="member">CStormnodePaymentDB::Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments" kindref="compound">CStormnodePayments</ref>&amp;<sp/>objToSave)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serialize,<sp/>checksum<sp/>data<sp/>up<sp/>to<sp/>that<sp/>point,<sp/>then<sp/>append<sp/>checksum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssObj(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ssObj<sp/>&lt;&lt;<sp/>strMagicMessage;<sp/></highlight><highlight class="comment">//<sp/>stormnode<sp/>cache<sp/>file<sp/>specific<sp/>magic<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>ssObj<sp/>&lt;&lt;<sp/><ref refid="serialize_8h_1a9393dd1b6a30ae7fe9cc42240241f741" kindref="member">FLATDATA</ref>(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().MessageStart());<sp/></highlight><highlight class="comment">//<sp/>network<sp/>specific<sp/>magic<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>ssObj<sp/>&lt;&lt;<sp/>objToSave;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(ssObj.<ref refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" kindref="member">begin</ref>(),<sp/>ssObj.<ref refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ssObj<sp/>&lt;&lt;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>output<sp/>file,<sp/>and<sp/>associate<sp/>with<sp/>CAutoFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>fopen(pathDB.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref><sp/>fileout(file,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileout.IsNull())</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Failed<sp/>to<sp/>open<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>pathDB.string());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>and<sp/>commit<sp/>header,<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileout<sp/>&lt;&lt;<sp/>ssObj;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Serialize<sp/>or<sp/>I/O<sp/>error<sp/>-<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>e.what());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>fileout.fclose();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Written<sp/>info<sp/>to<sp/>snpayments.dat<sp/><sp/>%dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23" kindref="member">CStormnodePaymentDB::ReadResult</ref><sp/><ref refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" kindref="member">CStormnodePaymentDB::Read</ref>(<ref refid="class_c_stormnode_payments" kindref="compound">CStormnodePayments</ref>&amp;<sp/>objToLoad,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fDryRun)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>input<sp/>file,<sp/>and<sp/>associate<sp/>with<sp/>CAutoFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>fopen(pathDB.string().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_auto_file" kindref="compound">CAutoFile</ref><sp/>filein(file,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filein.IsNull())</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Failed<sp/>to<sp/>open<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>pathDB.string());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a7f12ef3395c370257e8fa09d3ff5626e" kindref="member">FileError</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>file<sp/>size<sp/>to<sp/>size<sp/>memory<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fileSize<sp/>=<sp/>boost::filesystem::file_size(pathDB);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/>fileSize<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classuint256" kindref="compound">uint256</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>try<sp/>to<sp/>resize<sp/>to<sp/>a<sp/>negative<sp/>number<sp/>if<sp/>file<sp/>is<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSize<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>vchData;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>vchData.resize(dataSize);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashIn;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>data<sp/>and<sp/>checksum<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filein.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;vchData[0],<sp/>dataSize);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filein<sp/>&gt;&gt;<sp/>hashIn;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Deserialize<sp/>or<sp/>I/O<sp/>error<sp/>-<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>e.what());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23ac0cd503f26f245397d1a127b93096d4d" kindref="member">HashReadError</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>filein.fclose();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref><sp/>ssObj(vchData,<sp/><ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaa34949680c53028d35a449bf88b3c329d" kindref="member">SER_DISK</ref>,<sp/>CLIENT_VERSION);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verify<sp/>stored<sp/>checksum<sp/>matches<sp/>input<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashTmp<sp/>=<sp/><ref refid="hash_8h_1ab3f6c437460137530d86e09c2c102e99" kindref="member">Hash</ref>(ssObj.<ref refid="class_c_data_stream_1a5b9e70188c662f4e9496066472af213e" kindref="member">begin</ref>(),<sp/>ssObj.<ref refid="class_c_data_stream_1a1c22182691412ed9e0a30b719d388f31" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hashIn<sp/>!=<sp/>hashTmp)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Checksum<sp/>mismatch,<sp/>data<sp/>corrupted&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23ad2964ec8796042a9176c9b729816831e" kindref="member">IncorrectHash</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pchMsgTmp[4];</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMagicMessageTmp;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>de-serialize<sp/>file<sp/>header<sp/>(stormnode<sp/>cache<sp/>file<sp/>specific<sp/>magic<sp/>message)<sp/>and<sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssObj<sp/>&gt;&gt;<sp/>strMagicMessageTmp;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>verify<sp/>the<sp/>message<sp/>matches<sp/>predefined<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strMagicMessage<sp/>!=<sp/>strMagicMessageTmp)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Invalid<sp/>stormnode<sp/>payement<sp/>cache<sp/>magic<sp/>message&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23aa65ede767f1011cf5344c3f3017b6c29" kindref="member">IncorrectMagicMessage</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>de-serialize<sp/>file<sp/>header<sp/>(network<sp/>specific<sp/>magic<sp/>number)<sp/>and<sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssObj<sp/>&gt;&gt;<sp/><ref refid="serialize_8h_1a9393dd1b6a30ae7fe9cc42240241f741" kindref="member">FLATDATA</ref>(pchMsgTmp);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>verify<sp/>the<sp/>network<sp/>matches<sp/>ours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(pchMsgTmp,<sp/><ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().MessageStart(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pchMsgTmp)))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Invalid<sp/>network<sp/>magic<sp/>number&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a92265e270412a07493ca64394d575532" kindref="member">IncorrectMagicNumber</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>de-serialize<sp/>data<sp/>into<sp/>CStormnodePayments<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssObj<sp/>&gt;&gt;<sp/>objToLoad;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objToLoad.<ref refid="class_c_stormnode_payments_1a829e8562a7530332d0096038b455e79d" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>Deserialize<sp/>or<sp/>I/O<sp/>error<sp/>-<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>e.what());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a96d00baa28f120ca64ffa93880171c09" kindref="member">IncorrectFormat</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Loaded<sp/>info<sp/>from<sp/>snpayments.dat<sp/><sp/>%dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>objToLoad.<ref refid="class_c_stormnode_payments_1abfe9298441cc4e90710d1ba8bc24ec57" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fDryRun)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>payments<sp/>manager<sp/>-<sp/>cleaning....\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objToLoad.<ref refid="class_c_stormnode_payments_1a0113fb8a5dc2e0b0efd0b8180535f9d0" kindref="member">CleanPaymentList</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>payments<sp/>manager<sp/>-<sp/>result:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>objToLoad.<ref refid="class_c_stormnode_payments_1abfe9298441cc4e90710d1ba8bc24ec57" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a2f12de8ca0f127551efaccbdeb5ca6fe" kindref="member">Ok</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="stormnode-payments_8h_1ae992438141f991b3ca132d11da230d1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stormnode-payments_8cpp_1ae992438141f991b3ca132d11da230d1a" kindref="member">DumpStormnodePayments</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nStart<sp/>=<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_d_b" kindref="compound">CStormnodePaymentDB</ref><sp/>paymentdb;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payments" kindref="compound">CStormnodePayments</ref><sp/>tempPayments;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Verifying<sp/>snpayments.dat<sp/>format...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23" kindref="member">CStormnodePaymentDB::ReadResult</ref><sp/>readResult<sp/>=<sp/>paymentdb.<ref refid="class_c_stormnode_payment_d_b_1abc463c60002bbf00b542952bb3b5cff9" kindref="member">Read</ref>(tempPayments,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>was<sp/>an<sp/>error<sp/>and<sp/>it<sp/>was<sp/>not<sp/>an<sp/>error<sp/>on<sp/>file<sp/>opening<sp/>=&gt;<sp/>do<sp/>not<sp/>proceed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult<sp/>==<sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a7f12ef3395c370257e8fa09d3ff5626e" kindref="member">CStormnodePaymentDB::FileError</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Missing<sp/>budgets<sp/>file<sp/>-<sp/>snpayments.dat,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readResult<sp/>!=<sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a2f12de8ca0f127551efaccbdeb5ca6fe" kindref="member">CStormnodePaymentDB::Ok</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>snpayments.dat:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(readResult<sp/>==<sp/><ref refid="class_c_stormnode_payment_d_b_1a2f73dffc05c6751f0c323af60245ea23a96d00baa28f120ca64ffa93880171c09" kindref="member">CStormnodePaymentDB::IncorrectFormat</ref>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;magic<sp/>is<sp/>ok<sp/>but<sp/>data<sp/>has<sp/>invalid<sp/>format,<sp/>will<sp/>try<sp/>to<sp/>recreate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;file<sp/>format<sp/>is<sp/>unknown<sp/>or<sp/>invalid,<sp/>please<sp/>fix<sp/>it<sp/>manually\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Writting<sp/>info<sp/>to<sp/>snpayments.dat...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>paymentdb.<ref refid="class_c_stormnode_payment_d_b_1a6dc05426079d7bcf41f2587899e422fd" kindref="member">Write</ref>(stormnodePayments);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Budget<sp/>dump<sp/>finished<sp/><sp/>%dms\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="util_8h_1a139d0fe6387b9e230a9b8bb12d9b43b9" kindref="member">GetTimeMillis</ref>()<sp/>-<sp/>nStart);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="stormnode-payments_8h_1a775fd7f6eef6c395268172c278b9100b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="stormnode-payments_8cpp_1a775fd7f6eef6c395268172c278b9100b" kindref="member">IsBlockValueValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block" kindref="compound">CBlock</ref>&amp;<sp/><ref refid="structblock__" kindref="compound">block</ref>,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nExpectedValue){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pindexPrev<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pindexPrev-&gt;<ref refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" kindref="member">GetBlockHash</ref>()<sp/>==<sp/>block.<ref refid="class_c_block_header_1ad9b904df502d648309342e5e5b0949a6" kindref="member">hashPrevBlock</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHeight<sp/>=<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Put<sp/>back...<sp/>conversion<sp/>from<sp/>&apos;std::map&lt;uint256,<sp/>CBlockIndex*&gt;::iterator<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>{<sp/>//out<sp/>of<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>BlockMap::iterator<sp/>mi<sp/>=<sp/>mapBlockIndex.find(block.hashPrevBlock);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(mi<sp/>!=<sp/>mapBlockIndex.end()<sp/>&amp;&amp;<sp/>(*mi).second)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHeight<sp/>=<sp/>(*mi).second-&gt;nHeight+1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nHeight<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;IsBlockValueValid()<sp/>:<sp/>WARNING:<sp/>Couldn&apos;t<sp/>find<sp/>previous<sp/>block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1a0f196a2ca46b0cc4de3a488a4cbc2374" kindref="member">IsSynced</ref>())<sp/>{<sp/></highlight><highlight class="comment">//there<sp/>is<sp/>no<sp/>budget<sp/>data<sp/>to<sp/>use<sp/>to<sp/>check<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//super<sp/>blocks<sp/>will<sp/>always<sp/>be<sp/>on<sp/>these<sp/>blocks,<sp/>max<sp/>100<sp/>per<sp/>budgeting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nHeight<sp/>%<sp/><ref refid="stormnode-budget_8cpp_1a25f51a3a63c2bdfca39a2c9a7f110ab1" kindref="member">GetBudgetPaymentCycleBlocks</ref>()<sp/>&lt;<sp/>100){</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(block.<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0].GetValueOut()<sp/>&gt;<sp/>nExpectedValue)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>we&apos;re<sp/>synced<sp/>and<sp/>have<sp/>data<sp/>so<sp/>check<sp/>the<sp/>budget<sp/>schedule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//are<sp/>these<sp/>blocks<sp/>even<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" kindref="member">IsSporkActive</ref>(SPORK_13_ENABLE_SUPERBLOCKS)){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>block.<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0].GetValueOut()<sp/>&lt;=<sp/>nExpectedValue;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1a1011c9399df614e09f77d87ebe4f7bca" kindref="member">IsBudgetPaymentBlock</ref>(nHeight)){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>value<sp/>of<sp/>the<sp/>block<sp/>is<sp/>evaluated<sp/>in<sp/>CheckBlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(block.<ref refid="class_c_block_1a9b6508d662722775f3029b980b382b66" kindref="member">vtx</ref>[0].GetValueOut()<sp/>&gt;<sp/>nExpectedValue)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="stormnode-payments_8h_1af9e474d79a12729ed3e96b0d1c0351b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="stormnode-payments_8cpp_1af9e474d79a12729ed3e96b0d1c0351b4" kindref="member">IsBlockPayeeValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txNew,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1a0f196a2ca46b0cc4de3a488a4cbc2374" kindref="member">IsSynced</ref>())<sp/>{<sp/></highlight><highlight class="comment">//there<sp/>is<sp/>no<sp/>budget<sp/>data<sp/>to<sp/>use<sp/>to<sp/>check<sp/>anything<sp/>--<sp/>find<sp/>the<sp/>longest<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;snpayments&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Client<sp/>not<sp/>synced,<sp/>skipping<sp/>block<sp/>payee<sp/>checks\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>it&apos;s<sp/>a<sp/>budget<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" kindref="member">IsSporkActive</ref>(SPORK_13_ENABLE_SUPERBLOCKS)){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1a1011c9399df614e09f77d87ebe4f7bca" kindref="member">IsBudgetPaymentBlock</ref>(nBlockHeight)){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1a1ad65c9d6a743371c0033abf623a291f" kindref="member">IsTransactionValid</ref>(txNew,<sp/>nBlockHeight)){</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>budget<sp/>payment<sp/>detected<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>txNew.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" kindref="member">IsSporkActive</ref>(SPORK_9_STORMNODE_BUDGET_ENFORCEMENT)){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Budget<sp/>enforcement<sp/>is<sp/>disabled,<sp/>accepting<sp/>block\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>for<sp/>stormnode<sp/>payee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stormnodePayments.<ref refid="class_c_stormnode_payments_1ae14691c97882f093b8c852f03d7f5884" kindref="member">IsTransactionValid</ref>(txNew,<sp/>nBlockHeight))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>sn<sp/>payment<sp/>detected<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>txNew.<ref refid="class_c_transaction_1ae5fde44ffb46045dd48bd9cfff9492b6" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" kindref="member">IsSporkActive</ref>(SPORK_8_STORMNODE_PAYMENT_ENFORCEMENT)){</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>payment<sp/>enforcement<sp/>is<sp/>disabled,<sp/>accepting<sp/>block\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="stormnode-payments_8h_1a1c78c12ef9ef9becb2701ac56c3996ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stormnode-payments_8cpp_1a1c78c12ef9ef9becb2701ac56c3996ec" kindref="member">FillBlockPayee</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txNew,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFees)<sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Use<sp/>CMutableTransaction<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pindexPrev)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" kindref="member">IsSporkActive</ref>(SPORK_13_ENABLE_SUPERBLOCKS)<sp/>&amp;&amp;<sp/><ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1a1011c9399df614e09f77d87ebe4f7bca" kindref="member">IsBudgetPaymentBlock</ref>(pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1)){</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1a8109dee7a714a093d88d4a4457bc728a" kindref="member">FillBlockPayee</ref>(txNew,<sp/>nFees);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stormnodePayments.<ref refid="class_c_stormnode_payments_1accaeb923fe36e73d4228fc043771c4ad" kindref="member">FillBlockPayee</ref>(txNew,<sp/>nFees);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="stormnode-payments_8h_1a7828ab0b9a1302db35b658f727b260e1" refkind="member"><highlight class="normal">std::string<sp/><ref refid="stormnode-payments_8cpp_1a7828ab0b9a1302db35b658f727b260e1" kindref="member">GetRequiredPaymentsString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" kindref="member">IsSporkActive</ref>(SPORK_13_ENABLE_SUPERBLOCKS)<sp/>&amp;&amp;<sp/><ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1a1011c9399df614e09f77d87ebe4f7bca" kindref="member">IsBudgetPaymentBlock</ref>(nBlockHeight)){</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1aa7df3137c4b407fdbb474fcf602a67a5" kindref="member">GetRequiredPaymentsString</ref>(nBlockHeight);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stormnodePayments.<ref refid="class_c_stormnode_payments_1a67088f0606e6b20c9d918a72db4ca2ff" kindref="member">GetRequiredPaymentsString</ref>(nBlockHeight);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Use<sp/>CMutableTransaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="class_c_stormnode_payments_1accaeb923fe36e73d4228fc043771c4ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1accaeb923fe36e73d4228fc043771c4ad" kindref="member">CStormnodePayments::FillBlockPayee</ref>(<ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txNew,<sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>nFees)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pindexPrev)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasPayment<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>payee;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//spork</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!stormnodePayments.<ref refid="class_c_stormnode_payments_1a29c31e98d23f4a7f150bbccd4ef5a5cb" kindref="member">GetBlockPayee</ref>(pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1,<sp/>payee)){</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>stormnode<sp/>detected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>winningNode<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1aad6c3131e73e2b686f3847148b536448" kindref="member">GetCurrentStormNode</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(winningNode){</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payee<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(winningNode-&gt;<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CreateNewBlock:<sp/>Failed<sp/>to<sp/>detect<sp/>stormnode<sp/>to<sp/>pay\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasPayment<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasPayment){</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//txNew.vout.resize(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1].scriptPubKey<sp/>=<sp/>payee;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//txNew.vout[1].nValue<sp/>=<sp/>stormnodePayment;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//txNew.vout[0].nValue<sp/>-=<sp/>stormnodePayment;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stormnode<sp/>Payments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>blockValue<sp/>=<sp/><ref refid="main_8cpp_1afe042769eafbfbf4e82dffe357798748" kindref="member">GetBlockValue</ref>(pindexPrev-&gt;<ref refid="class_c_block_index_1a3324894e6af612d1bd76f89378435713" kindref="member">nBits</ref>,<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>,<sp/>nFees);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>stormnodePayment<sp/>=<sp/><ref refid="main_8cpp_1ab9c19a2d094fea9bd9f285f4b33961a4" kindref="member">GetStormnodePayment</ref>(pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1,<sp/>blockValue);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>==<sp/>4)<sp/></highlight><highlight class="comment">//<sp/>2<sp/>stake<sp/>outputs,<sp/>stake<sp/>was<sp/>split,<sp/>plus<sp/>a<sp/>stormnode<sp/>payment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1].nValue<sp/>=<sp/>stormnodePayment;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockValue<sp/>-=<sp/>stormnodePayment;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[2].nValue<sp/>=<sp/>(blockValue<sp/>/<sp/>2<sp/>/<sp/>CENT)<sp/>*<sp/>CENT;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[3].nValue<sp/>=<sp/>blockValue<sp/>-<sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1].nValue;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.size()<sp/>==<sp/>3)<sp/></highlight><highlight class="comment">//<sp/>only<sp/>1<sp/>stake<sp/>output,<sp/>was<sp/>not<sp/>split,<sp/>plus<sp/>a<sp/>stormnode<sp/>payment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[1].nValue<sp/>=<sp/>stormnodePayment;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockValue<sp/>-=<sp/>stormnodePayment;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>[2].nValue<sp/>=<sp/>blockValue;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address1;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(payee,<sp/>address1);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address2(address1);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>payment<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>address2.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="class_c_stormnode_payments_1a98392b86e945308c9c66f1cd4942a220" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1a98392b86e945308c9c66f1cd4942a220" kindref="member">CStormnodePayments::GetMinStormnodePaymentsProto</ref>()<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="spork_8cpp_1a3305663176e21e81c80dc951a7f8ea5e" kindref="member">IsSporkActive</ref>(SPORK_10_STORMNODE_PAY_UPDATED_NODES)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>MIN_STORMNODE_PAYMENT_PROTO_VERSION_2</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>MIN_STORMNODE_PAYMENT_PROTO_VERSION_1;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="class_c_stormnode_payments_1a8dc55316a297daad51a03d4cf7b37d06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1a8dc55316a297daad51a03d4cf7b37d06" kindref="member">CStormnodePayments::ProcessMessageStormnodePayments</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pfrom,<sp/>std::string&amp;<sp/>strCommand,<sp/><ref refid="class_c_data_stream" kindref="compound">CDataStream</ref>&amp;<sp/>vRecv)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1adfb3343f29476ca833084be0320a7d50" kindref="member">IsBlockchainSynced</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//disable<sp/>all<sp/>Sandstorm/Stormnode<sp/>related<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;snget&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Stormnode<sp/>Payments<sp/>Request<sp/>Sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1aa2216c761101b28e38757c5cffea3dc5" kindref="member">fLiteMode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//disable<sp/>all<sp/>Sandstorm/Stormnode<sp/>related<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCountNeeded;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>nCountNeeded;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().<ref refid="class_c_chain_params_1a90dc493ec0c0325c98c3ac06eb99862b" kindref="member">NetworkID</ref>()<sp/>==<sp/><ref refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" kindref="member">CChainParams::MAIN</ref>){</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pfrom-&gt;<ref refid="class_c_node_1ae94af0e82ca84242e420fc53debe6f25" kindref="member">HasFulfilledRequest</ref>(</highlight><highlight class="stringliteral">&quot;snget&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snget<sp/>-<sp/>peer<sp/>already<sp/>asked<sp/>me<sp/>for<sp/>the<sp/>list\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a387fdffa0ff52dde6b7d1c2991a9bdac" kindref="member">Misbehaving</ref>(pfrom-&gt;<ref refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" kindref="member">GetId</ref>(),<sp/>20);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfrom-&gt;<ref refid="class_c_node_1a5b378bdd447e2f1e63ced2ae5b36ed76" kindref="member">FulfilledRequest</ref>(</highlight><highlight class="stringliteral">&quot;snget&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stormnodePayments.<ref refid="class_c_stormnode_payments_1a813695c47afcbedba8858c36cb30bcfe" kindref="member">Sync</ref>(pfrom,<sp/>nCountNeeded);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snget<sp/>-<sp/>Sent<sp/>Stormnode<sp/>winners<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pfrom-&gt;<ref refid="class_c_node_1a3993ecb1de2a2135a3cf0904346a6f88" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strCommand<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;snw&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//Stormnode<sp/>Payments<sp/>Declare<sp/>Winner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>required<sp/>in<sp/>litemodef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_winner" kindref="compound">CStormnodePaymentWinner</ref><sp/>winner;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vRecv<sp/>&gt;&gt;<sp/>winner;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pfrom-&gt;<ref refid="class_c_node_1a99173eb3cef17e699ba21a5249ac33d2" kindref="member">nVersion</ref><sp/>&lt;<sp/>MIN_SNW_PEER_PROTO_VERSION)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stormnodePayments.<ref refid="class_c_stormnode_payments_1a2227618f68b1655073c17d4b2ffe1c56" kindref="member">mapStormnodePayeeVotes</ref>.count(winner.GetHash())){</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;snpayments&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;snw<sp/>-<sp/>Already<sp/>seen<sp/>-<sp/>%s<sp/>bestHeight<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>winner.GetHash().ToString().c_str(),<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1a686a36163137e9079365e7fd0ede826c" kindref="member">AddedStormnodeWinner</ref>(winner.GetHash());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFirstBlock<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>-<sp/>(<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>()*1.25);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(winner.nBlockHeight<sp/>&lt;<sp/>nFirstBlock<sp/>||<sp/>winner.nBlockHeight<sp/>&gt;<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+20){</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;snpayments&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;snw<sp/>-<sp/>winner<sp/>out<sp/>of<sp/>range<sp/>-<sp/>FirstBlock<sp/>%d<sp/>Height<sp/>%d<sp/>bestHeight<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nFirstBlock,<sp/>winner.nBlockHeight,<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strError<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!winner.IsValid(pfrom,<sp/>strError)){</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strError<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snw<sp/>-<sp/>invalid<sp/>message<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!stormnodePayments.<ref refid="class_c_stormnode_payments_1ae0765ade69bea1010c3f7482ea9d9beb" kindref="member">CanVote</ref>(winner.vinStormnode.prevout,<sp/>winner.nBlockHeight)){</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snw<sp/>-<sp/>stormnode<sp/>already<sp/>voted<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>winner.vinStormnode.prevout.ToStringShort());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!winner.SignatureValid()){</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snw<sp/>-<sp/>invalid<sp/>signature\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1a0f196a2ca46b0cc4de3a488a4cbc2374" kindref="member">IsSynced</ref>())<sp/><ref refid="main_8cpp_1a387fdffa0ff52dde6b7d1c2991a9bdac" kindref="member">Misbehaving</ref>(pfrom-&gt;<ref refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" kindref="member">GetId</ref>(),<sp/>20);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>could<sp/>just<sp/>be<sp/>a<sp/>non-synced<sp/>stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a918a4ccb668808449809a77adc036301" kindref="member">AskForSN</ref>(pfrom,<sp/>winner.vinStormnode);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address1;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(winner.payee,<sp/>address1);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address2(address1);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;snpayments&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;snw<sp/>-<sp/>winning<sp/>vote<sp/>-<sp/>Addr<sp/>%s<sp/>Height<sp/>%d<sp/>bestHeight<sp/>%d<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>address2.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str(),<sp/>winner.nBlockHeight,<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>,<sp/>winner.vinStormnode.prevout.ToStringShort());</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stormnodePayments.<ref refid="class_c_stormnode_payments_1a8781a05c217f2b7b34bb2c57e0a6c813" kindref="member">AddWinningStormnode</ref>(winner)){</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winner.Relay();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1a686a36163137e9079365e7fd0ede826c" kindref="member">AddedStormnodeWinner</ref>(winner.GetHash());</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="class_c_stormnode_payment_winner_1a2ee621a52030230a8e3307886f5f45be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_winner_1a2ee621a52030230a8e3307886f5f45be" kindref="member">CStormnodePaymentWinner::Sign</ref>(<ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>keyStormnode,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubKeyStormnode)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strStormNodeSignMessage;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/><sp/><ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" kindref="member">ToStringShort</ref>()<sp/>+</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::lexical_cast&lt;std::string&gt;(<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>)<sp/>+</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_winner_1abbba3ee9d4620fcec320826f03ffc7e4" kindref="member">payee</ref>.<ref refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" kindref="member">SignMessage</ref>(strMessage,<sp/>errorMessage,<sp/><ref refid="class_c_stormnode_payment_winner_1a2a689114ee80f528238760a5ae3bdcb9" kindref="member">vchSig</ref>,<sp/>keyStormnode))<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePing::Sign()<sp/>-<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage.c_str());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(pubKeyStormnode,<sp/><ref refid="class_c_stormnode_payment_winner_1a2a689114ee80f528238760a5ae3bdcb9" kindref="member">vchSig</ref>,<sp/>strMessage,<sp/>errorMessage))<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePing::Sign()<sp/>-<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage.c_str());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_c_stormnode_payments_1a29c31e98d23f4a7f150bbccd4ef5a5cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1a29c31e98d23f4a7f150bbccd4ef5a5cb" kindref="member">CStormnodePayments::GetBlockPayee</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight,<sp/><ref refid="class_c_script" kindref="compound">CScript</ref>&amp;<sp/>payee)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.count(nBlockHeight)){</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>[nBlockHeight].GetPayee(payee);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Is<sp/>this<sp/>stormnode<sp/>scheduled<sp/>to<sp/>get<sp/>paid<sp/>soon?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--<sp/>Only<sp/>look<sp/>ahead<sp/>up<sp/>to<sp/>8<sp/>blocks<sp/>to<sp/>allow<sp/>for<sp/>propagation<sp/>of<sp/>the<sp/>latest<sp/>2<sp/>winners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_c_stormnode_payments_1ac2a8e2a9bef3c4c68c1e464903a1988f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1ac2a8e2a9bef3c4c68c1e464903a1988f" kindref="member">CStormnodePayments::IsScheduled</ref>(<ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNotBlockHeight)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_mapStormnodeBlocks);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pindexPrev<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>snpayee;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>snpayee<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(sn.<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>payee;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>h<sp/>=<sp/>pindexPrev-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>;<sp/>h<sp/>&lt;=<sp/>pindexPrev-&gt;nHeight+8;<sp/>h++){</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(h<sp/>==<sp/>nNotBlockHeight)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.count(h)){</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>[h].GetPayee(payee)){</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(snpayee<sp/>==<sp/>payee)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="class_c_stormnode_payments_1a8781a05c217f2b7b34bb2c57e0a6c813" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1a8781a05c217f2b7b34bb2c57e0a6c813" kindref="member">CStormnodePayments::AddWinningStormnode</ref>(<ref refid="class_c_stormnode_payment_winner" kindref="compound">CStormnodePaymentWinner</ref>&amp;<sp/>winnerIn)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>blockHash<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode_8cpp_1a32f5cbabfc2bd53c2f2daedf122a83cb" kindref="member">GetBlockHash</ref>(blockHash,<sp/>winnerIn.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>-100))<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(cs_mapStormnodePayeeVotes,<sp/>cs_mapStormnodeBlocks);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_payments_1a2227618f68b1655073c17d4b2ffe1c56" kindref="member">mapStormnodePayeeVotes</ref>.count(winnerIn.<ref refid="class_c_stormnode_payment_winner_1a7ef2cef7bb1dfcd12d7fe7abb15c5802" kindref="member">GetHash</ref>())){</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payments_1a2227618f68b1655073c17d4b2ffe1c56" kindref="member">mapStormnodePayeeVotes</ref>[winnerIn.<ref refid="class_c_stormnode_payment_winner_1a7ef2cef7bb1dfcd12d7fe7abb15c5802" kindref="member">GetHash</ref>()]<sp/>=<sp/>winnerIn;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.count(winnerIn.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>)){</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_block_payees" kindref="compound">CStormnodeBlockPayees</ref><sp/>blockPayees(winnerIn.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>[winnerIn.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>]<sp/>=<sp/>blockPayees;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-payments_8cpp_1a0bca99aa555725c39171cc06fb3e94de" kindref="member">IsReferenceNode</ref>(winnerIn.<ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>))<sp/>n<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>[winnerIn.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>].AddPayee(winnerIn.<ref refid="class_c_stormnode_payment_winner_1abbba3ee9d4620fcec320826f03ffc7e4" kindref="member">payee</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="class_c_stormnode_block_payees_1a83867efab0e90f70384a3c3354ea23d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_block_payees_1a83867efab0e90f70384a3c3354ea23d6" kindref="member">CStormnodeBlockPayees::IsTransactionValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txNew)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_vecPayments);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaxSignatures<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strPayeesPossible<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amount_8h_1a4eaf3a5239714d8c45b851527f7cb564" kindref="member">CAmount</ref><sp/>stormnodePayment<sp/>=<sp/><ref refid="main_8cpp_1ab9c19a2d094fea9bd9f285f4b33961a4" kindref="member">GetStormnodePayment</ref>(<ref refid="class_c_stormnode_block_payees_1a416f3766bb7df6d02f83f0eb34aafe62" kindref="member">nBlockHeight</ref>,<sp/>txNew.<ref refid="class_c_transaction_1aef472df5cb11c53281d975ee9e7cf133" kindref="member">GetValueOut</ref>());</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//require<sp/>at<sp/>least<sp/>6<sp/>signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode_payee" kindref="compound">CStormnodePayee</ref>&amp;<sp/>payee,<sp/><ref refid="class_c_stormnode_block_payees_1ac60f49701f0c229b4ff6dfaad6d3af36" kindref="member">vecPayments</ref>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(payee.<ref refid="class_c_stormnode_payee_1a83144ad08e6cd31890029ab304d90f98" kindref="member">nVotes</ref><sp/>&gt;=<sp/>nMaxSignatures<sp/>&amp;&amp;<sp/>payee.<ref refid="class_c_stormnode_payee_1a83144ad08e6cd31890029ab304d90f98" kindref="member">nVotes</ref><sp/>&gt;=<sp/><ref refid="stormnode-payments_8h_1a562899bed0fbecb5a44802e779462049" kindref="member">SNPAYMENTS_SIGNATURES_REQUIRED</ref>)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMaxSignatures<sp/>=<sp/>payee.<ref refid="class_c_stormnode_payee_1a83144ad08e6cd31890029ab304d90f98" kindref="member">nVotes</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>don&apos;t<sp/>have<sp/>at<sp/>least<sp/>6<sp/>signatures<sp/>on<sp/>a<sp/>payee,<sp/>approve<sp/>whichever<sp/>is<sp/>the<sp/>longest<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nMaxSignatures<sp/>&lt;<sp/><ref refid="stormnode-payments_8h_1a562899bed0fbecb5a44802e779462049" kindref="member">SNPAYMENTS_SIGNATURES_REQUIRED</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode_payee" kindref="compound">CStormnodePayee</ref>&amp;<sp/>payee,<sp/><ref refid="class_c_stormnode_block_payees_1ac60f49701f0c229b4ff6dfaad6d3af36" kindref="member">vecPayments</ref>)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>out,<sp/>txNew.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>){</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(payee.<ref refid="class_c_stormnode_payee_1acab0a3c2609700241d04323f1727c870" kindref="member">scriptPubKey</ref><sp/>==<sp/>out.<ref refid="class_c_tx_out_1a25bf3f2f4befb22a6a0be45784fe57e2" kindref="member">scriptPubKey</ref><sp/>&amp;&amp;<sp/>stormnodePayment<sp/>==<sp/>out.<ref refid="class_c_tx_out_1ab278ecef3817a972cb6bc5360d13f197" kindref="member">nValue</ref>){</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(payee.<ref refid="class_c_stormnode_payee_1a83144ad08e6cd31890029ab304d90f98" kindref="member">nVotes</ref><sp/>&gt;=<sp/><ref refid="stormnode-payments_8h_1a562899bed0fbecb5a44802e779462049" kindref="member">SNPAYMENTS_SIGNATURES_REQUIRED</ref>){</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(found)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address1;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(payee.<ref refid="class_c_stormnode_payee_1acab0a3c2609700241d04323f1727c870" kindref="member">scriptPubKey</ref>,<sp/>address1);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address2(address1);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strPayeesPossible<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strPayeesPossible<sp/>+=<sp/>address2.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strPayeesPossible<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+<sp/>address2.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::IsTransactionValid<sp/>-<sp/>Missing<sp/>required<sp/>payment<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strPayeesPossible.c_str());</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="class_c_stormnode_block_payees_1a63ee6700a4754afd4ccfbd45a46056d3" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_stormnode_block_payees_1a63ee6700a4754afd4ccfbd45a46056d3" kindref="member">CStormnodeBlockPayees::GetRequiredPaymentsString</ref>()</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_vecPayments);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ret<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="class_c_stormnode_payee" kindref="compound">CStormnodePayee</ref>&amp;<sp/>payee,<sp/><ref refid="class_c_stormnode_block_payees_1ac60f49701f0c229b4ff6dfaad6d3af36" kindref="member">vecPayments</ref>)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address1;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(payee.<ref refid="class_c_stormnode_payee_1acab0a3c2609700241d04323f1727c870" kindref="member">scriptPubKey</ref>,<sp/>address1);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address2(address1);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>address2.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(payee.<ref refid="class_c_stormnode_payee_1a83144ad08e6cd31890029ab304d90f98" kindref="member">nVotes</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>address2.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(payee.<ref refid="class_c_stormnode_payee_1a83144ad08e6cd31890029ab304d90f98" kindref="member">nVotes</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="class_c_stormnode_payments_1a67088f0606e6b20c9d918a72db4ca2ff" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_stormnode_payments_1a67088f0606e6b20c9d918a72db4ca2ff" kindref="member">CStormnodePayments::GetRequiredPaymentsString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_mapStormnodeBlocks);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.count(nBlockHeight)){</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>[nBlockHeight].GetRequiredPaymentsString();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="class_c_stormnode_payments_1ae14691c97882f093b8c852f03d7f5884" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1ae14691c97882f093b8c852f03d7f5884" kindref="member">CStormnodePayments::IsTransactionValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref>&amp;<sp/>txNew,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_mapStormnodeBlocks);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.count(nBlockHeight)){</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>[nBlockHeight].IsTransactionValid(txNew);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610" refid="class_c_stormnode_payments_1a0113fb8a5dc2e0b0efd0b8180535f9d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1a0113fb8a5dc2e0b0efd0b8180535f9d0" kindref="member">CStormnodePayments::CleanPaymentList</ref>()</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a35644e2b75a93da0cb0f6c768f34efa8" kindref="member">LOCK2</ref>(cs_mapStormnodePayeeVotes,<sp/>cs_mapStormnodeBlocks);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//keep<sp/>up<sp/>to<sp/>five<sp/>cycles<sp/>for<sp/>historical<sp/>sake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLimit<sp/>=<sp/>std::max(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad15cbc672903cce82c757118b74c267c" kindref="member">size</ref>()*1.25),<sp/>1000);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CStormnodePaymentWinner&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="class_c_stormnode_payments_1a2227618f68b1655073c17d4b2ffe1c56" kindref="member">mapStormnodePayeeVotes</ref>.begin();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/><ref refid="class_c_stormnode_payments_1a2227618f68b1655073c17d4b2ffe1c56" kindref="member">mapStormnodePayeeVotes</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_winner" kindref="compound">CStormnodePaymentWinner</ref><sp/>winner<sp/>=<sp/>(*it).second;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>-<sp/>winner.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref><sp/>&gt;<sp/>nLimit){</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;snpayments&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodePayments::CleanPaymentList<sp/>-<sp/>Removing<sp/>old<sp/>Stormnode<sp/>payment<sp/>-<sp/>block<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>winner.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1aa691249c2bfd876d49d24b82b3df7048" kindref="member">mapSeenSyncSNW</ref>.erase((*it).first);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payments_1a2227618f68b1655073c17d4b2ffe1c56" kindref="member">mapStormnodePayeeVotes</ref>.erase(it++);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.erase(winner.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="stormnode-payments_8h_1a0bca99aa555725c39171cc06fb3e94de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="stormnode-payments_8cpp_1a0bca99aa555725c39171cc06fb3e94de" kindref="member">IsReferenceNode</ref>(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>vin)</highlight></codeline>
<codeline lineno="635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reference<sp/>node<sp/>-<sp/>hybrid<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" kindref="member">ToStringShort</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;099c01bea63abd1692f60806bb646fa1d288e2d049281225f17e499024084e28-0&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>mainnet<sp/>//TODO<sp/>(Amir):<sp/>Change<sp/>these.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" kindref="member">ToStringShort</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fbc16ae5229d6d99181802fd76a4feee5e7640164dcebc7f8feb04a7bea026f8-0&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>testnet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vin.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" kindref="member">ToStringShort</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;e466f5d8beb4c2d22a314310dc58e0ea89505c95409754d0d68fb874952608cc-1&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>regtest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="class_c_stormnode_payment_winner_1ae8e5cecfd1f95eed8fdd14f019360fa0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_winner_1ae8e5cecfd1f95eed8fdd14f019360fa0" kindref="member">CStormnodePaymentWinner::IsValid</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>pnode,<sp/>std::string&amp;<sp/>strError)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-payments_8cpp_1a0bca99aa555725c39171cc06fb3e94de" kindref="member">IsReferenceNode</ref>(<ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(<ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!psn)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strError<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>Stormnode<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" kindref="member">ToStringShort</ref>());</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CStormnodePaymentWinner::IsValid<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a918a4ccb668808449809a77adc036301" kindref="member">AskForSN</ref>(pnode,<sp/><ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn-&gt;<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;<sp/>MIN_SNW_PEER_PROTO_VERSION)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strError<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>protocol<sp/>too<sp/>old<sp/>%d<sp/>-<sp/>req<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>psn-&gt;<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>,<sp/>MIN_SNW_PEER_PROTO_VERSION);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CStormnodePaymentWinner::IsValid<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" kindref="member">GetStormnodeRank</ref>(<ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>,<sp/><ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>-100,<sp/>MIN_SNW_PEER_PROTO_VERSION);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/><ref refid="stormnode-payments_8h_1af87771f9ac5a9aaa0ca06f3b164cc1ba" kindref="member">SNPAYMENTS_SIGNATURES_TOTAL</ref>)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It&apos;s<sp/>common<sp/>to<sp/>have<sp/>stormnodes<sp/>mistakenly<sp/>think<sp/>they<sp/>are<sp/>in<sp/>the<sp/>top<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>print<sp/>all<sp/>of<sp/>these<sp/>messages,<sp/>or<sp/>punish<sp/>them<sp/>unless<sp/>they&apos;re<sp/>way<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/><ref refid="stormnode-payments_8h_1af87771f9ac5a9aaa0ca06f3b164cc1ba" kindref="member">SNPAYMENTS_SIGNATURES_TOTAL</ref>*2)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strError<sp/>=<sp/><ref refid="tinyformat_8h_1a56c674871a61baaad36ad52238c08857" kindref="member">strprintf</ref>(</highlight><highlight class="stringliteral">&quot;Stormnode<sp/>not<sp/>in<sp/>the<sp/>top<sp/>%d<sp/>(%d)&quot;</highlight><highlight class="normal">,<sp/><ref refid="stormnode-payments_8h_1af87771f9ac5a9aaa0ca06f3b164cc1ba" kindref="member">SNPAYMENTS_SIGNATURES_TOTAL</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePaymentWinner::IsValid<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strError);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1a0f196a2ca46b0cc4de3a488a4cbc2374" kindref="member">IsSynced</ref>())<sp/><ref refid="main_8cpp_1a387fdffa0ff52dde6b7d1c2991a9bdac" kindref="member">Misbehaving</ref>(pnode-&gt;<ref refid="class_c_node_1ac0f1a22fa938e84138536308e2001340" kindref="member">GetId</ref>(),<sp/>20);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683" refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1a348b88dd03ef4a6684ae22141de841c8" kindref="member">CStormnodePayments::ProcessBlock</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reference<sp/>node<sp/>-<sp/>hybrid<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode-payments_8cpp_1a0bca99aa555725c39171cc06fb3e94de" kindref="member">IsReferenceNode</ref>(<ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>)){</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad1fb56e4ee364e2b18bab57210f3f3cd" kindref="member">GetStormnodeRank</ref>(<ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>,<sp/>nBlockHeight-100,<sp/>MIN_SNW_PEER_PROTO_VERSION);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;snpayments&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodePayments::ProcessBlock<sp/>-<sp/>Unknown<sp/>Stormnode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/><ref refid="stormnode-payments_8h_1af87771f9ac5a9aaa0ca06f3b164cc1ba" kindref="member">SNPAYMENTS_SIGNATURES_TOTAL</ref>)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;snpayments&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodePayments::ProcessBlock<sp/>-<sp/>Stormnode<sp/>not<sp/>in<sp/>the<sp/>top<sp/>%d<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="stormnode-payments_8h_1af87771f9ac5a9aaa0ca06f3b164cc1ba" kindref="member">SNPAYMENTS_SIGNATURES_TOTAL</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBlockHeight<sp/>&lt;=<sp/>nLastBlockHeight)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_winner" kindref="compound">CStormnodePaymentWinner</ref><sp/>newWinner(<ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-budget_8cpp_1ad9842d355854ad5602728a96cf684706" kindref="member">budget</ref>.<ref refid="class_c_budget_manager_1a1011c9399df614e09f77d87ebe4f7bca" kindref="member">IsBudgetPaymentBlock</ref>(nBlockHeight)){</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>budget<sp/>payment<sp/>block<sp/>--<sp/>handled<sp/>by<sp/>the<sp/>budgeting<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::ProcessBlock()<sp/>Start<sp/>nHeight<sp/>%d<sp/>-<sp/>vin<sp/>%s.<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>nBlockHeight,<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pay<sp/>to<sp/>the<sp/>oldest<sp/>SN<sp/>that<sp/>still<sp/>had<sp/>no<sp/>payment<sp/>but<sp/>its<sp/>input<sp/>is<sp/>old<sp/>enough<sp/>and<sp/>it<sp/>was<sp/>active<sp/>long<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>*psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1aeaaefff98af62a3d79d72e23f5539a72" kindref="member">GetNextStormnodeInQueueForPayment</ref>(nBlockHeight,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>nCount);<sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>this<sp/>needs<sp/>stormnodeman<sp/>update.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::ProcessBlock()<sp/>Found<sp/>by<sp/>FindOldestNotInVec<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newWinner.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref><sp/>=<sp/>nBlockHeight;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>payee<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(psn-&gt;<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newWinner.<ref refid="class_c_stormnode_payment_winner_1ac1b332eb97519047fa170e53af4287e3" kindref="member">AddPayee</ref>(payee);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="keystore_8h_1a8f46ecba0ddeb036be6b58d6ed1909cd" kindref="member">CTxDestination</ref><sp/>address1;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="script_8cpp_1a951f7e601746ae076afdf3169ecca2fc" kindref="member">ExtractDestination</ref>(payee,<sp/>address1);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_dark_silk_address" kindref="compound">CDarkSilkAddress</ref><sp/>address2(address1);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::ProcessBlock()<sp/>Winner<sp/>payee<sp/>%s<sp/>nHeight<sp/>%d.<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>address2.<ref refid="class_c_base58_data_1a9a47b10dadff15b8d6a6d0e63ce3ae32" kindref="member">ToString</ref>().c_str(),<sp/>newWinner.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::ProcessBlock()<sp/>Failed<sp/>to<sp/>find<sp/>stormnode<sp/>to<sp/>pay\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>pubKeyStormnode;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_key" kindref="compound">CKey</ref><sp/>keyStormnode;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1ac9823b3f497f6e9f1e3d426f662af92b" kindref="member">SetKey</ref>(<ref refid="sandstorm_8h_1a87851f2f7e50eb7ee21387115e61f325" kindref="member">strStormNodePrivKey</ref>,<sp/>errorMessage,<sp/>keyStormnode,<sp/>pubKeyStormnode))</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::ProcessBlock()<sp/>-<sp/>Error<sp/>upon<sp/>calling<sp/>SetKey:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage.c_str());</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::ProcessBlock()<sp/>-<sp/>Signing<sp/>Winner\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newWinner.<ref refid="class_c_stormnode_payment_winner_1a2ee621a52030230a8e3307886f5f45be" kindref="member">Sign</ref>(keyStormnode,<sp/>pubKeyStormnode))</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePayments::ProcessBlock()<sp/>-<sp/>AddWinningStormnode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_payments_1a8781a05c217f2b7b34bb2c57e0a6c813" kindref="member">AddWinningStormnode</ref>(newWinner))</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newWinner.<ref refid="class_c_stormnode_payment_winner_1a39a19ceedef26c1b54d44853450a71eb" kindref="member">Relay</ref>();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLastBlockHeight<sp/>=<sp/>nBlockHeight;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="class_c_stormnode_payment_winner_1a39a19ceedef26c1b54d44853450a71eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_winner_1a39a19ceedef26c1b54d44853450a71eb" kindref="member">CStormnodePaymentWinner::Relay</ref>()</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref><sp/>inv(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8ad6098a517061632608c4e08e6f2b98a3" kindref="member">MSG_STORMNODE_WINNER</ref>,<sp/><ref refid="class_c_stormnode_payment_winner_1a7ef2cef7bb1dfcd12d7fe7abb15c5802" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a4f89efc38cf3b6bbb552ba9624bddfaf" kindref="member">RelayInv</ref>(inv);</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770" refid="class_c_stormnode_payment_winner_1a7c86a0fbc7e6fb5f6e07a0248ed04a43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payment_winner_1a7c86a0fbc7e6fb5f6e07a0248ed04a43" kindref="member">CStormnodePaymentWinner::SignatureValid</ref>()</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(<ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/><sp/><ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a2998c059602a32046dda180603fcfb65" kindref="member">ToStringShort</ref>()<sp/>+</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::lexical_cast&lt;std::string&gt;(<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref>)<sp/>+</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_winner_1abbba3ee9d4620fcec320826f03ffc7e4" kindref="member">payee</ref>.<ref refid="class_c_script_1a391abaa856cf8511bc840fef949839d9" kindref="member">ToString</ref>();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(psn-&gt;<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>,<sp/><ref refid="class_c_stormnode_payment_winner_1a2a689114ee80f528238760a5ae3bdcb9" kindref="member">vchSig</ref>,<sp/>strMessage,<sp/>errorMessage)){</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="stringliteral">&quot;CStormnodePaymentWinner::SignatureValid()<sp/>-<sp/>Got<sp/>bad<sp/>Stormnode<sp/>address<sp/>signature<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_payment_winner_1a6514e77cb8997131c47e39b3118606fa" kindref="member">vinStormnode</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>().c_str());</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="class_c_stormnode_payments_1a813695c47afcbedba8858c36cb30bcfe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1a813695c47afcbedba8858c36cb30bcfe" kindref="member">CStormnodePayments::Sync</ref>(<ref refid="class_c_node" kindref="compound">CNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCountNeeded)</highlight></codeline>
<codeline lineno="793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_mapStormnodePayeeVotes);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCount<sp/>=<sp/>(<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>()*1.25);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nCountNeeded<sp/>&gt;<sp/>nCount)<sp/>nCountNeeded<sp/>=<sp/>nCount;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nInvCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;uint256,<sp/>CStormnodePaymentWinner&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="class_c_stormnode_payments_1a2227618f68b1655073c17d4b2ffe1c56" kindref="member">mapStormnodePayeeVotes</ref>.begin();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/><ref refid="class_c_stormnode_payments_1a2227618f68b1655073c17d4b2ffe1c56" kindref="member">mapStormnodePayeeVotes</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_payment_winner" kindref="compound">CStormnodePaymentWinner</ref><sp/>winner<sp/>=<sp/>(*it).second;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(winner.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref><sp/>&gt;=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>-nCountNeeded<sp/>&amp;&amp;<sp/>winner.<ref refid="class_c_stormnode_payment_winner_1a22c766c132714906e267465def62cbcd" kindref="member">nBlockHeight</ref><sp/>&lt;=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>+<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="class_c_node_1a7cef2333aa8776127a7e7fcab659eb6a" kindref="member">PushInventory</ref>(<ref refid="class_c_inv" kindref="compound">CInv</ref>(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8ad6098a517061632608c4e08e6f2b98a3" kindref="member">MSG_STORMNODE_WINNER</ref>,<sp/>winner.<ref refid="class_c_stormnode_payment_winner_1a7ef2cef7bb1dfcd12d7fe7abb15c5802" kindref="member">GetHash</ref>()));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nInvCount++;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="class_c_node_1a204fda3d33404cb37698c085b1583ab2" kindref="member">PushMessage</ref>(</highlight><highlight class="stringliteral">&quot;ssc&quot;</highlight><highlight class="normal">,<sp/>STORMNODE_SYNC_SNW,<sp/>nInvCount);</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814" refid="class_c_stormnode_payments_1abfe9298441cc4e90710d1ba8bc24ec57" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_c_stormnode_payments_1abfe9298441cc4e90710d1ba8bc24ec57" kindref="member">CStormnodePayments::ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="815"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>info;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Votes:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)<ref refid="class_c_stormnode_payments_1a2227618f68b1655073c17d4b2ffe1c56" kindref="member">mapStormnodePayeeVotes</ref>.size()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Blocks:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)<ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.size();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info.str();</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="class_c_stormnode_payments_1a28bd6d48455d8825c94056725fb42c08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1a28bd6d48455d8825c94056725fb42c08" kindref="member">CStormnodePayments::GetOldestBlock</ref>()</highlight></codeline>
<codeline lineno="827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_mapStormnodeBlocks);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nOldestBlock<sp/>=<sp/>std::numeric_limits&lt;int&gt;::max();</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>CStormnodeBlockPayees&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.begin();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it).first<sp/>&lt;<sp/>nOldestBlock)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nOldestBlock<sp/>=<sp/>(*it).first;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nOldestBlock;</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="class_c_stormnode_payments_1a2d5b46ffba64492eaf4182bd3015d663" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_payments_1a2d5b46ffba64492eaf4182bd3015d663" kindref="member">CStormnodePayments::GetNewestBlock</ref>()</highlight></codeline>
<codeline lineno="846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs_mapStormnodeBlocks);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNewestBlock<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>CStormnodeBlockPayees&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.begin();</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/><ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it).first<sp/>&gt;<sp/>nNewestBlock)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNewestBlock<sp/>=<sp/>(*it).first;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nNewestBlock;</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/stormnode-payments.cpp"/>
  </compounddef>
</doxygen>
