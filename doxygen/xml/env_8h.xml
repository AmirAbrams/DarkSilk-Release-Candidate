<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="env_8h" kind="file" language="C++">
    <compoundname>env.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">stdarg.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes refid="status_8h" local="yes">leveldb/status.h</includes>
    <includedby refid="builder_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/builder.cc</includedby>
    <includedby refid="c_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/c.cc</includedby>
    <includedby refid="corruption__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/corruption_test.cc</includedby>
    <includedby refid="db__bench_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_bench.cc</includedby>
    <includedby refid="db__impl_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_impl.cc</includedby>
    <includedby refid="db__impl_8h" local="yes">/home/dev/ds-160209/src/leveldb/db/db_impl.h</includedby>
    <includedby refid="db__iter_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_iter.cc</includedby>
    <includedby refid="db__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/db_test.cc</includedby>
    <includedby refid="dumpfile_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/dumpfile.cc</includedby>
    <includedby refid="filename_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/filename.cc</includedby>
    <includedby refid="leveldb__main_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/leveldb_main.cc</includedby>
    <includedby refid="log__reader_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/log_reader.cc</includedby>
    <includedby refid="log__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/log_test.cc</includedby>
    <includedby refid="log__writer_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/log_writer.cc</includedby>
    <includedby refid="memtable_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/memtable.cc</includedby>
    <includedby refid="repair_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/repair.cc</includedby>
    <includedby refid="skiplist__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc</includedby>
    <includedby refid="table__cache_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/table_cache.cc</includedby>
    <includedby refid="version__set_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/version_set.cc</includedby>
    <includedby refid="write__batch__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc</includedby>
    <includedby refid="memenv_8cc" local="yes">/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv.cc</includedby>
    <includedby refid="memenv__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc</includedby>
    <includedby refid="dumpfile_8h" local="yes">/home/dev/ds-160209/src/leveldb/include/leveldb/dumpfile.h</includedby>
    <includedby refid="format_8cc" local="yes">/home/dev/ds-160209/src/leveldb/table/format.cc</includedby>
    <includedby refid="table_8cc" local="yes">/home/dev/ds-160209/src/leveldb/table/table.cc</includedby>
    <includedby refid="table__builder_8cc" local="yes">/home/dev/ds-160209/src/leveldb/table/table_builder.cc</includedby>
    <includedby refid="table__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/table/table_test.cc</includedby>
    <includedby refid="env_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/env.cc</includedby>
    <includedby refid="env__posix_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/env_posix.cc</includedby>
    <includedby refid="env__test_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/env_test.cc</includedby>
    <includedby refid="logging_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/logging.cc</includedby>
    <includedby refid="options_8cc" local="yes">/home/dev/ds-160209/src/leveldb/util/options.cc</includedby>
    <includedby refid="posix__logger_8h" local="yes">/home/dev/ds-160209/src/leveldb/util/posix_logger.h</includedby>
    <includedby refid="testharness_8h" local="yes">/home/dev/ds-160209/src/leveldb/util/testharness.h</includedby>
    <includedby refid="testutil_8h" local="yes">/home/dev/ds-160209/src/leveldb/util/testutil.h</includedby>
    <includedby refid="leveldbwrapper_8cpp" local="no">/home/dev/ds-160209/src/leveldbwrapper.cpp</includedby>
    <includedby refid="txdb-leveldb_8cpp" local="no">/home/dev/ds-160209/src/txdb-leveldb.cpp</includedby>
    <incdepgraph>
      <node id="37490">
        <label>stdarg.h</label>
      </node>
      <node id="37494">
        <label>assert.h</label>
      </node>
      <node id="37488">
        <label>string</label>
      </node>
      <node id="37495">
        <label>stddef.h</label>
      </node>
      <node id="37492">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="37488" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
      </node>
      <node id="37496">
        <label>string.h</label>
      </node>
      <node id="37489">
        <label>vector</label>
      </node>
      <node id="37491">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="37493">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="37494" relation="include">
        </childnode>
        <childnode refid="37495" relation="include">
        </childnode>
        <childnode refid="37496" relation="include">
        </childnode>
        <childnode refid="37488" relation="include">
        </childnode>
      </node>
      <node id="37487">
        <label>/home/dev/ds-160209/src/leveldb/include/leveldb/env.h</label>
        <link refid="env.h"/>
        <childnode refid="37488" relation="include">
        </childnode>
        <childnode refid="37489" relation="include">
        </childnode>
        <childnode refid="37490" relation="include">
        </childnode>
        <childnode refid="37491" relation="include">
        </childnode>
        <childnode refid="37492" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="37539">
        <label>/home/dev/ds-160209/src/leveldb/table/filter_block_test.cc</label>
        <link refid="filter__block__test_8cc"/>
      </node>
      <node id="37526">
        <label>/home/dev/ds-160209/src/leveldb/util/env.cc</label>
        <link refid="env_8cc"/>
      </node>
      <node id="37498">
        <label>/home/dev/ds-160209/src/leveldb/db/builder.cc</label>
        <link refid="builder_8cc"/>
      </node>
      <node id="37524">
        <label>/home/dev/ds-160209/src/leveldb/table/table_builder.cc</label>
        <link refid="table__builder_8cc"/>
      </node>
      <node id="37502">
        <label>/home/dev/ds-160209/src/leveldb/db/db_impl.cc</label>
        <link refid="db__impl_8cc"/>
      </node>
      <node id="37545">
        <label>/home/dev/ds-160209/src/leveldb/util/hash_test.cc</label>
        <link refid="hash__test_8cc"/>
      </node>
      <node id="37546">
        <label>/home/dev/ds-160209/src/leveldb/util/testharness.cc</label>
        <link refid="testharness_8cc"/>
      </node>
      <node id="37531">
        <label>/home/dev/ds-160209/src/leveldb/util/posix_logger.h</label>
        <link refid="posix__logger_8h"/>
        <childnode refid="37527" relation="include">
        </childnode>
      </node>
      <node id="37535">
        <label>/home/dev/ds-160209/src/leveldb/db/version_edit_test.cc</label>
        <link refid="version__edit__test_8cc"/>
      </node>
      <node id="37550">
        <label>/home/dev/ds-160209/src/leveldb/util/testutil.cc</label>
        <link refid="testutil_8cc"/>
      </node>
      <node id="37499">
        <label>/home/dev/ds-160209/src/leveldb/db/c.cc</label>
        <link refid="c_8cc"/>
      </node>
      <node id="37541">
        <label>/home/dev/ds-160209/src/leveldb/util/bloom_test.cc</label>
        <link refid="bloom__test_8cc"/>
      </node>
      <node id="37548">
        <label>/home/dev/ds-160209/src/leveldb/doc/bench/db_bench_sqlite3.cc</label>
        <link refid="db__bench__sqlite3_8cc"/>
      </node>
      <node id="37513">
        <label>/home/dev/ds-160209/src/leveldb/db/log_test.cc</label>
        <link refid="log__test_8cc"/>
      </node>
      <node id="37527">
        <label>/home/dev/ds-160209/src/leveldb/util/env_posix.cc</label>
        <link refid="env__posix_8cc"/>
      </node>
      <node id="37510">
        <label>/home/dev/ds-160209/src/leveldb/db/filename.cc</label>
        <link refid="filename_8cc"/>
      </node>
      <node id="37522">
        <label>/home/dev/ds-160209/src/leveldb/table/format.cc</label>
        <link refid="format_8cc"/>
      </node>
      <node id="37520">
        <label>/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv.cc</label>
        <link refid="memenv_8cc"/>
      </node>
      <node id="37528">
        <label>/home/dev/ds-160209/src/leveldb/util/env_test.cc</label>
        <link refid="env__test_8cc"/>
      </node>
      <node id="37530">
        <label>/home/dev/ds-160209/src/leveldb/util/options.cc</label>
        <link refid="options_8cc"/>
      </node>
      <node id="37538">
        <label>/home/dev/ds-160209/src/leveldb/issues/issue200_test.cc</label>
        <link refid="issue200__test_8cc"/>
      </node>
      <node id="37547">
        <label>/home/dev/ds-160209/src/leveldb/util/testutil.h</label>
        <link refid="testutil_8h"/>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37500" relation="include">
        </childnode>
        <childnode refid="37501" relation="include">
        </childnode>
        <childnode refid="37506" relation="include">
        </childnode>
        <childnode refid="37536" relation="include">
        </childnode>
        <childnode refid="37548" relation="include">
        </childnode>
        <childnode refid="37549" relation="include">
        </childnode>
        <childnode refid="37539" relation="include">
        </childnode>
        <childnode refid="37525" relation="include">
        </childnode>
        <childnode refid="37541" relation="include">
        </childnode>
        <childnode refid="37550" relation="include">
        </childnode>
      </node>
      <node id="37519">
        <label>/home/dev/ds-160209/src/leveldb/db/write_batch_test.cc</label>
        <link refid="write__batch__test_8cc"/>
      </node>
      <node id="37552">
        <label>/home/dev/ds-160209/src/txdb-leveldb.cpp</label>
        <link refid="txdb-leveldb_8cpp"/>
      </node>
      <node id="37518">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set.cc</label>
        <link refid="version__set_8cc"/>
      </node>
      <node id="37534">
        <label>/home/dev/ds-160209/src/leveldb/db/filename_test.cc</label>
        <link refid="filename__test_8cc"/>
      </node>
      <node id="37501">
        <label>/home/dev/ds-160209/src/leveldb/db/db_bench.cc</label>
        <link refid="db__bench_8cc"/>
      </node>
      <node id="37529">
        <label>/home/dev/ds-160209/src/leveldb/util/logging.cc</label>
        <link refid="logging_8cc"/>
      </node>
      <node id="37544">
        <label>/home/dev/ds-160209/src/leveldb/util/crc32c_test.cc</label>
        <link refid="crc32c__test_8cc"/>
      </node>
      <node id="37507">
        <label>/home/dev/ds-160209/src/leveldb/db/repair.cc</label>
        <link refid="repair_8cc"/>
      </node>
      <node id="37542">
        <label>/home/dev/ds-160209/src/leveldb/util/cache_test.cc</label>
        <link refid="cache__test_8cc"/>
      </node>
      <node id="37503">
        <label>/home/dev/ds-160209/src/leveldb/db/db_impl.h</label>
        <link refid="db__impl_8h"/>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37500" relation="include">
        </childnode>
        <childnode refid="37501" relation="include">
        </childnode>
        <childnode refid="37502" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37506" relation="include">
        </childnode>
        <childnode refid="37507" relation="include">
        </childnode>
        <childnode refid="37508" relation="include">
        </childnode>
      </node>
      <node id="37517">
        <label>/home/dev/ds-160209/src/leveldb/db/table_cache.cc</label>
        <link refid="table__cache_8cc"/>
      </node>
      <node id="37533">
        <label>/home/dev/ds-160209/src/leveldb/db/dbformat_test.cc</label>
        <link refid="dbformat__test_8cc"/>
      </node>
      <node id="37551">
        <label>/home/dev/ds-160209/src/leveldbwrapper.cpp</label>
        <link refid="leveldbwrapper_8cpp"/>
      </node>
      <node id="37505">
        <label>/home/dev/ds-160209/src/leveldb/db/db_iter.cc</label>
        <link refid="db__iter_8cc"/>
      </node>
      <node id="37504">
        <label>/home/dev/ds-160209/src/leveldb/db/autocompact_test.cc</label>
        <link refid="autocompact__test_8cc"/>
      </node>
      <node id="37516">
        <label>/home/dev/ds-160209/src/leveldb/db/skiplist_test.cc</label>
        <link refid="skiplist__test_8cc"/>
      </node>
      <node id="37508">
        <label>/home/dev/ds-160209/src/leveldb/helpers/memenv/memenv_test.cc</label>
        <link refid="memenv__test_8cc"/>
      </node>
      <node id="37549">
        <label>/home/dev/ds-160209/src/leveldb/doc/bench/db_bench_tree_db.cc</label>
        <link refid="db__bench__tree__db_8cc"/>
      </node>
      <node id="37521">
        <label>/home/dev/ds-160209/src/leveldb/include/leveldb/dumpfile.h</label>
        <link refid="dumpfile_8h"/>
        <childnode refid="37511" relation="include">
        </childnode>
      </node>
      <node id="37525">
        <label>/home/dev/ds-160209/src/leveldb/table/table_test.cc</label>
        <link refid="table__test_8cc"/>
      </node>
      <node id="37532">
        <label>/home/dev/ds-160209/src/leveldb/util/testharness.h</label>
        <link refid="testharness_8h"/>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37500" relation="include">
        </childnode>
        <childnode refid="37506" relation="include">
        </childnode>
        <childnode refid="37533" relation="include">
        </childnode>
        <childnode refid="37534" relation="include">
        </childnode>
        <childnode refid="37513" relation="include">
        </childnode>
        <childnode refid="37516" relation="include">
        </childnode>
        <childnode refid="37535" relation="include">
        </childnode>
        <childnode refid="37536" relation="include">
        </childnode>
        <childnode refid="37519" relation="include">
        </childnode>
        <childnode refid="37508" relation="include">
        </childnode>
        <childnode refid="37537" relation="include">
        </childnode>
        <childnode refid="37538" relation="include">
        </childnode>
        <childnode refid="37539" relation="include">
        </childnode>
        <childnode refid="37525" relation="include">
        </childnode>
        <childnode refid="37540" relation="include">
        </childnode>
        <childnode refid="37541" relation="include">
        </childnode>
        <childnode refid="37542" relation="include">
        </childnode>
        <childnode refid="37543" relation="include">
        </childnode>
        <childnode refid="37544" relation="include">
        </childnode>
        <childnode refid="37528" relation="include">
        </childnode>
        <childnode refid="37545" relation="include">
        </childnode>
        <childnode refid="37546" relation="include">
        </childnode>
      </node>
      <node id="37515">
        <label>/home/dev/ds-160209/src/leveldb/db/memtable.cc</label>
        <link refid="memtable_8cc"/>
      </node>
      <node id="37506">
        <label>/home/dev/ds-160209/src/leveldb/db/db_test.cc</label>
        <link refid="db__test_8cc"/>
      </node>
      <node id="37497">
        <label>/home/dev/ds-160209/src/leveldb/include/leveldb/env.h</label>
        <link refid="env.h"/>
        <childnode refid="37498" relation="include">
        </childnode>
        <childnode refid="37499" relation="include">
        </childnode>
        <childnode refid="37500" relation="include">
        </childnode>
        <childnode refid="37501" relation="include">
        </childnode>
        <childnode refid="37502" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37506" relation="include">
        </childnode>
        <childnode refid="37509" relation="include">
        </childnode>
        <childnode refid="37510" relation="include">
        </childnode>
        <childnode refid="37511" relation="include">
        </childnode>
        <childnode refid="37512" relation="include">
        </childnode>
        <childnode refid="37513" relation="include">
        </childnode>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37515" relation="include">
        </childnode>
        <childnode refid="37507" relation="include">
        </childnode>
        <childnode refid="37516" relation="include">
        </childnode>
        <childnode refid="37517" relation="include">
        </childnode>
        <childnode refid="37518" relation="include">
        </childnode>
        <childnode refid="37519" relation="include">
        </childnode>
        <childnode refid="37520" relation="include">
        </childnode>
        <childnode refid="37508" relation="include">
        </childnode>
        <childnode refid="37521" relation="include">
        </childnode>
        <childnode refid="37522" relation="include">
        </childnode>
        <childnode refid="37523" relation="include">
        </childnode>
        <childnode refid="37524" relation="include">
        </childnode>
        <childnode refid="37525" relation="include">
        </childnode>
        <childnode refid="37526" relation="include">
        </childnode>
        <childnode refid="37527" relation="include">
        </childnode>
        <childnode refid="37528" relation="include">
        </childnode>
        <childnode refid="37529" relation="include">
        </childnode>
        <childnode refid="37530" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
        <childnode refid="37532" relation="include">
        </childnode>
        <childnode refid="37547" relation="include">
        </childnode>
        <childnode refid="37551" relation="include">
        </childnode>
        <childnode refid="37552" relation="include">
        </childnode>
      </node>
      <node id="37511">
        <label>/home/dev/ds-160209/src/leveldb/db/leveldb_main.cc</label>
        <link refid="leveldb__main_8cc"/>
      </node>
      <node id="37543">
        <label>/home/dev/ds-160209/src/leveldb/util/coding_test.cc</label>
        <link refid="coding__test_8cc"/>
      </node>
      <node id="37512">
        <label>/home/dev/ds-160209/src/leveldb/db/log_reader.cc</label>
        <link refid="log__reader_8cc"/>
      </node>
      <node id="37500">
        <label>/home/dev/ds-160209/src/leveldb/db/corruption_test.cc</label>
        <link refid="corruption__test_8cc"/>
      </node>
      <node id="37536">
        <label>/home/dev/ds-160209/src/leveldb/db/version_set_test.cc</label>
        <link refid="version__set__test_8cc"/>
      </node>
      <node id="37509">
        <label>/home/dev/ds-160209/src/leveldb/db/dumpfile.cc</label>
        <link refid="dumpfile_8cc"/>
      </node>
      <node id="37514">
        <label>/home/dev/ds-160209/src/leveldb/db/log_writer.cc</label>
        <link refid="log__writer_8cc"/>
      </node>
      <node id="37523">
        <label>/home/dev/ds-160209/src/leveldb/table/table.cc</label>
        <link refid="table_8cc"/>
      </node>
      <node id="37537">
        <label>/home/dev/ds-160209/src/leveldb/issues/issue178_test.cc</label>
        <link refid="issue178__test_8cc"/>
      </node>
      <node id="37540">
        <label>/home/dev/ds-160209/src/leveldb/util/arena_test.cc</label>
        <link refid="arena__test_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classleveldb_1_1_env" prot="public">leveldb::Env</innerclass>
    <innerclass refid="classleveldb_1_1_sequential_file" prot="public">leveldb::SequentialFile</innerclass>
    <innerclass refid="classleveldb_1_1_random_access_file" prot="public">leveldb::RandomAccessFile</innerclass>
    <innerclass refid="classleveldb_1_1_writable_file" prot="public">leveldb::WritableFile</innerclass>
    <innerclass refid="classleveldb_1_1_logger" prot="public">leveldb::Logger</innerclass>
    <innerclass refid="classleveldb_1_1_file_lock" prot="public">leveldb::FileLock</innerclass>
    <innerclass refid="classleveldb_1_1_env_wrapper" prot="public">leveldb::EnvWrapper</innerclass>
    <innernamespace refid="namespaceleveldb">leveldb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2011-2016<sp/>The<sp/>LevelDB<sp/>Authors.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.<sp/>See<sp/>the<sp/>AUTHORS<sp/>file<sp/>for<sp/>names<sp/>of<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>Env<sp/>is<sp/>an<sp/>interface<sp/>used<sp/>by<sp/>the<sp/>leveldb<sp/>implementation<sp/>to<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operating<sp/>system<sp/>functionality<sp/>like<sp/>the<sp/>filesystem<sp/>etc.<sp/><sp/>Callers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>wish<sp/>to<sp/>provide<sp/>a<sp/>custom<sp/>Env<sp/>object<sp/>when<sp/>opening<sp/>a<sp/>database<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>fine<sp/>gain<sp/>control;<sp/>e.g.,<sp/>to<sp/>rate<sp/>limit<sp/>file<sp/>system<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>Env<sp/>implementations<sp/>are<sp/>safe<sp/>for<sp/>concurrent<sp/>access<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiple<sp/>threads<sp/>without<sp/>any<sp/>external<sp/>synchronization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STORAGE_LEVELDB_INCLUDE_ENV_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STORAGE_LEVELDB_INCLUDE_ENV_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8h" kindref="compound">leveldb/status.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceleveldb" kindref="compound">leveldb</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileLock;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Logger;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RandomAccessFile;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SequentialFile;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Slice;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WritableFile;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classleveldb_1_1_env" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33" refid="classleveldb_1_1_env_1a90f3648c740e3f5901f5843cd0dd07c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env_1a90f3648c740e3f5901f5843cd0dd07c4" kindref="member">Env</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_1a2b9321c6176f8824b3ba65f0a36453fe" kindref="member">~Env</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>default<sp/>environment<sp/>suitable<sp/>for<sp/>the<sp/>current<sp/>operating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>system.<sp/><sp/>Sophisticated<sp/>users<sp/>may<sp/>wish<sp/>to<sp/>provide<sp/>their<sp/>own<sp/>Env</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>instead<sp/>of<sp/>relying<sp/>on<sp/>this<sp/>default<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>of<sp/>Default()<sp/>belongs<sp/>to<sp/>leveldb<sp/>and<sp/>must<sp/>never<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>*<sp/><ref refid="classleveldb_1_1_env_1ae15b67e650ff6790059745fd1b3bf3e7" kindref="member">Default</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>brand<sp/>new<sp/>sequentially-readable<sp/>file<sp/>with<sp/>the<sp/>specified<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>success,<sp/>stores<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>new<sp/>file<sp/>in<sp/>*result<sp/>and<sp/>returns<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>failure<sp/>stores<sp/>NULL<sp/>in<sp/>*result<sp/>and<sp/>returns<sp/>non-OK.<sp/><sp/>If<sp/>the<sp/>file<sp/>does</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>exist,<sp/>returns<sp/>a<sp/>non-OK<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>returned<sp/>file<sp/>will<sp/>only<sp/>be<sp/>accessed<sp/>by<sp/>one<sp/>thread<sp/>at<sp/>a<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1ad73810059f48c1d7b91125d357e7d351" kindref="member">NewSequentialFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_sequential_file" kindref="compound">SequentialFile</ref>**<sp/>result)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>brand<sp/>new<sp/>random<sp/>access<sp/>read-only<sp/>file<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specified<sp/>name.<sp/><sp/>On<sp/>success,<sp/>stores<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>new<sp/>file<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*result<sp/>and<sp/>returns<sp/>OK.<sp/><sp/>On<sp/>failure<sp/>stores<sp/>NULL<sp/>in<sp/>*result<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>non-OK.<sp/><sp/>If<sp/>the<sp/>file<sp/>does<sp/>not<sp/>exist,<sp/>returns<sp/>a<sp/>non-OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>returned<sp/>file<sp/>may<sp/>be<sp/>concurrently<sp/>accessed<sp/>by<sp/>multiple<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1a1df3e0bb2d47ee914448df9bb9ca0734" kindref="member">NewRandomAccessFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref>**<sp/>result)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>object<sp/>that<sp/>writes<sp/>to<sp/>a<sp/>new<sp/>file<sp/>with<sp/>the<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>name.<sp/><sp/>Deletes<sp/>any<sp/>existing<sp/>file<sp/>with<sp/>the<sp/>same<sp/>name<sp/>and<sp/>creates<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>file.<sp/><sp/>On<sp/>success,<sp/>stores<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>new<sp/>file<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*result<sp/>and<sp/>returns<sp/>OK.<sp/><sp/>On<sp/>failure<sp/>stores<sp/>NULL<sp/>in<sp/>*result<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>non-OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>returned<sp/>file<sp/>will<sp/>only<sp/>be<sp/>accessed<sp/>by<sp/>one<sp/>thread<sp/>at<sp/>a<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de" kindref="member">NewWritableFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>**<sp/>result)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>the<sp/>named<sp/>file<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_1acbb85047fdf7bf441bd365cfb09f9ecb" kindref="member">FileExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>in<sp/>*result<sp/>the<sp/>names<sp/>of<sp/>the<sp/>children<sp/>of<sp/>the<sp/>specified<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>names<sp/>are<sp/>relative<sp/>to<sp/>&quot;dir&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Original<sp/>contents<sp/>of<sp/>*results<sp/>are<sp/>dropped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1a53028e3112d7bb3bf6574ddaab18d6f6" kindref="member">GetChildren</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;*<sp/>result)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>named<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af" kindref="member">DeleteFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>specified<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1ae6b7c8122df5a8020b2a3439ac39646e" kindref="member">CreateDir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dirname)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>specified<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1a4e1a1c4495541e426b146cba56c59627" kindref="member">DeleteDir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dirname)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>size<sp/>of<sp/>fname<sp/>in<sp/>*file_size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1aacb66541dcb3bd586e6cc5a87489690c" kindref="member">GetFileSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>*<sp/>file_size)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rename<sp/>file<sp/>src<sp/>to<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1abd743b3d4751ada1ab307427827ed5b0" kindref="member">RenameFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>src,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>target)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>the<sp/>specified<sp/>file.<sp/><sp/>Used<sp/>to<sp/>prevent<sp/>concurrent<sp/>access<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>db<sp/>by<sp/>multiple<sp/>processes.<sp/><sp/>On<sp/>failure,<sp/>stores<sp/>NULL<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*lock<sp/>and<sp/>returns<sp/>non-OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>success,<sp/>stores<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>object<sp/>that<sp/>represents<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>acquired<sp/>lock<sp/>in<sp/>*lock<sp/>and<sp/>returns<sp/>OK.<sp/><sp/>The<sp/>caller<sp/>should<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>UnlockFile(*lock)<sp/>to<sp/>release<sp/>the<sp/>lock.<sp/><sp/>If<sp/>the<sp/>process<sp/>exits,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>lock<sp/>will<sp/>be<sp/>automatically<sp/>released.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>somebody<sp/>else<sp/>already<sp/>holds<sp/>the<sp/>lock,<sp/>finishes<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>failure.<sp/><sp/>I.e.,<sp/>this<sp/>call<sp/>does<sp/>not<sp/>wait<sp/>for<sp/>existing<sp/>locks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>go<sp/>away.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>create<sp/>the<sp/>named<sp/>file<sp/>if<sp/>it<sp/>does<sp/>not<sp/>already<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1a9b7266f0444f832e428328ff19b7b54c" kindref="member">LockFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/><ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref>**<sp/>lock)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>the<sp/>lock<sp/>acquired<sp/>by<sp/>a<sp/>previous<sp/>successful<sp/>call<sp/>to<sp/>LockFile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>lock<sp/>was<sp/>returned<sp/>by<sp/>a<sp/>successful<sp/>LockFile()<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>lock<sp/>has<sp/>not<sp/>already<sp/>been<sp/>unlocked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1a194a2ee3c21bc0b204ad0e5bc3b81d4b" kindref="member">UnlockFile</ref>(<ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref>*<sp/>lock)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Arrange<sp/>to<sp/>run<sp/>&quot;(*function)(arg)&quot;<sp/>once<sp/>in<sp/>a<sp/>background<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;function&quot;<sp/>may<sp/>run<sp/>in<sp/>an<sp/>unspecified<sp/>thread.<sp/><sp/>Multiple<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>to<sp/>the<sp/>same<sp/>Env<sp/>may<sp/>run<sp/>concurrently<sp/>in<sp/>different<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>I.e.,<sp/>the<sp/>caller<sp/>may<sp/>not<sp/>assume<sp/>that<sp/>background<sp/>work<sp/>items<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>serialized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724" kindref="member">Schedule</ref>(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>a<sp/>new<sp/>thread,<sp/>invoking<sp/>&quot;function(arg)&quot;<sp/>within<sp/>the<sp/>new<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>&quot;function(arg)&quot;<sp/>returns,<sp/>the<sp/>thread<sp/>will<sp/>be<sp/>destroyed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_1a25eafd1622a2cf2a415ee8b2325bc808" kindref="member">StartThread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="env__posix_8cc_1a9ce2ec4812a92cb6ab39f6e81e9173a9" kindref="member">arg</ref>),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*path<sp/>is<sp/>set<sp/>to<sp/>a<sp/>temporary<sp/>directory<sp/>that<sp/>can<sp/>be<sp/>used<sp/>for<sp/>testing.<sp/>It<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>many<sp/>not<sp/>have<sp/>just<sp/>been<sp/>created.<sp/>The<sp/>directory<sp/>may<sp/>or<sp/>may<sp/>not<sp/>differ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>runs<sp/>of<sp/>the<sp/>same<sp/>process,<sp/>but<sp/>subsequent<sp/>calls<sp/>will<sp/>return<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1ab57a55be37d4d57bf3c0ff83ee689f95" kindref="member">GetTestDirectory</ref>(std::string*<sp/>path)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>and<sp/>return<sp/>a<sp/>log<sp/>file<sp/>for<sp/>storing<sp/>informational<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_1a53a4c41d294fe619f13ec5b697ffc933" kindref="member">NewLogger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/><ref refid="classleveldb_1_1_logger" kindref="compound">Logger</ref>**<sp/>result)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>micro-seconds<sp/>since<sp/>some<sp/>fixed<sp/>point<sp/>in<sp/>time.<sp/>Only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>useful<sp/>for<sp/>computing<sp/>deltas<sp/>of<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sleep/delay<sp/>the<sp/>thread<sp/>for<sp/>the<sp/>prescribed<sp/>number<sp/>of<sp/>micro-seconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312" kindref="member">SleepForMicroseconds</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>micros)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env_1a90f3648c740e3f5901f5843cd0dd07c4" kindref="member">Env</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>&amp;);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>&amp;);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>file<sp/>abstraction<sp/>for<sp/>reading<sp/>sequentially<sp/>through<sp/>a<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classleveldb_1_1_sequential_file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_sequential_file" kindref="compound">SequentialFile</ref><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157" refid="classleveldb_1_1_sequential_file_1a5df57658966ccab71b01f5134497fcf6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_sequential_file_1a5df57658966ccab71b01f5134497fcf6" kindref="member">SequentialFile</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_sequential_file_1a90e768998dedfb7e9b3fa176478a2462" kindref="member">~SequentialFile</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>up<sp/>to<sp/>&quot;n&quot;<sp/>bytes<sp/>from<sp/>the<sp/>file.<sp/><sp/>&quot;scratch[0..n-1]&quot;<sp/>may<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>written<sp/>by<sp/>this<sp/>routine.<sp/><sp/>Sets<sp/>&quot;*result&quot;<sp/>to<sp/>the<sp/>data<sp/>that<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>(including<sp/>if<sp/>fewer<sp/>than<sp/>&quot;n&quot;<sp/>bytes<sp/>were<sp/>successfully<sp/>read).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>set<sp/>&quot;*result&quot;<sp/>to<sp/>point<sp/>at<sp/>data<sp/>in<sp/>&quot;scratch[0..n-1]&quot;,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;scratch[0..n-1]&quot;<sp/>must<sp/>be<sp/>live<sp/>when<sp/>&quot;*result&quot;<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>an<sp/>error<sp/>was<sp/>encountered,<sp/>returns<sp/>a<sp/>non-OK<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>External<sp/>synchronization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_sequential_file_1a4136bef1546cdb9fbbd477a635460261" kindref="member">Read</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>result,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>scratch)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>&quot;n&quot;<sp/>bytes<sp/>from<sp/>the<sp/>file.<sp/>This<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>slower<sp/>that<sp/>reading<sp/>the<sp/>same<sp/>data,<sp/>but<sp/>may<sp/>be<sp/>faster.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>end<sp/>of<sp/>file<sp/>is<sp/>reached,<sp/>skipping<sp/>will<sp/>stop<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file,<sp/>and<sp/>Skip<sp/>will<sp/>return<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REQUIRES:<sp/>External<sp/>synchronization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_sequential_file_1a18c94279fc058cad4d03cdfe04b12179" kindref="member">Skip</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>n)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_sequential_file_1a5df57658966ccab71b01f5134497fcf6" kindref="member">SequentialFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_sequential_file" kindref="compound">SequentialFile</ref>&amp;);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_sequential_file" kindref="compound">SequentialFile</ref>&amp;);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>file<sp/>abstraction<sp/>for<sp/>randomly<sp/>reading<sp/>the<sp/>contents<sp/>of<sp/>a<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classleveldb_1_1_random_access_file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188" refid="classleveldb_1_1_random_access_file_1af5112c2ca05fe2fa79ef5ca868164ff7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_random_access_file_1af5112c2ca05fe2fa79ef5ca868164ff7" kindref="member">RandomAccessFile</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_random_access_file_1af8557f9315f6924af0bd3f0cb38474f4" kindref="member">~RandomAccessFile</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>up<sp/>to<sp/>&quot;n&quot;<sp/>bytes<sp/>from<sp/>the<sp/>file<sp/>starting<sp/>at<sp/>&quot;offset&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;scratch[0..n-1]&quot;<sp/>may<sp/>be<sp/>written<sp/>by<sp/>this<sp/>routine.<sp/><sp/>Sets<sp/>&quot;*result&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>data<sp/>that<sp/>was<sp/>read<sp/>(including<sp/>if<sp/>fewer<sp/>than<sp/>&quot;n&quot;<sp/>bytes<sp/>were</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>successfully<sp/>read).<sp/><sp/>May<sp/>set<sp/>&quot;*result&quot;<sp/>to<sp/>point<sp/>at<sp/>data<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;scratch[0..n-1]&quot;,<sp/>so<sp/>&quot;scratch[0..n-1]&quot;<sp/>must<sp/>be<sp/>live<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;*result&quot;<sp/>is<sp/>used.<sp/><sp/>If<sp/>an<sp/>error<sp/>was<sp/>encountered,<sp/>returns<sp/>a<sp/>non-OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Safe<sp/>for<sp/>concurrent<sp/>use<sp/>by<sp/>multiple<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_random_access_file_1a1a09fadcec904d9791a968acabca98d0" kindref="member">Read</ref>(<ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/>offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>*<sp/>result,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>scratch)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_random_access_file_1af5112c2ca05fe2fa79ef5ca868164ff7" kindref="member">RandomAccessFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref>&amp;);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref>&amp;);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>file<sp/>abstraction<sp/>for<sp/>sequential<sp/>writing.<sp/><sp/>The<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>provide<sp/>buffering<sp/>since<sp/>callers<sp/>may<sp/>append<sp/>small<sp/>fragments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>a<sp/>time<sp/>to<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classleveldb_1_1_writable_file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214" refid="classleveldb_1_1_writable_file_1a48e7bcecb75e0339f0dafedb41c058ee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_writable_file_1a48e7bcecb75e0339f0dafedb41c058ee" kindref="member">WritableFile</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_writable_file_1a6a2f4698544f04288fbee6ef354dd71d" kindref="member">~WritableFile</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_writable_file_1a53b41841d9577d28f65d4d90e1660de8" kindref="member">Append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_slice" kindref="compound">Slice</ref>&amp;<sp/>data)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_writable_file_1a2efbf9c02a26028b5002df73b4393915" kindref="member">Close</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_writable_file_1ab95759ad32f6a05b0ee4266969fa265e" kindref="member">Flush</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_writable_file_1a2d2dcef02a2c9e71f3d39125bcd5a606" kindref="member">Sync</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_writable_file_1a48e7bcecb75e0339f0dafedb41c058ee" kindref="member">WritableFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>&amp;);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>&amp;);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>interface<sp/>for<sp/>writing<sp/>log<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classleveldb_1_1_logger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_logger" kindref="compound">Logger</ref><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="231" refid="classleveldb_1_1_logger_1a2aef5b4ed88cf236f12bd5b05aec21f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_logger_1a2aef5b4ed88cf236f12bd5b05aec21f8" kindref="member">Logger</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_logger_1abfb863947b6bdfb6900dda7e3d9a0fde" kindref="member">~Logger</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>an<sp/>entry<sp/>to<sp/>the<sp/>log<sp/>file<sp/>with<sp/>the<sp/>specified<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_logger_1a408e238a0028a45e9cc7aec6ad2277c5" kindref="member">Logv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>,<sp/>va_list<sp/>ap)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_logger_1a2aef5b4ed88cf236f12bd5b05aec21f8" kindref="member">Logger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_logger" kindref="compound">Logger</ref>&amp;);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_logger" kindref="compound">Logger</ref>&amp;);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Identifies<sp/>a<sp/>locked<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classleveldb_1_1_file_lock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="247" refid="classleveldb_1_1_file_lock_1a8521062a58d4069cebb6b54d599bdfdf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_file_lock_1a8521062a58d4069cebb6b54d599bdfdf" kindref="member">FileLock</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_file_lock_1a18abaf2e46c1123be139ee5087f0936e" kindref="member">~FileLock</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>copying<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_file_lock_1a8521062a58d4069cebb6b54d599bdfdf" kindref="member">FileLock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref>&amp;);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref>&amp;);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Log<sp/>the<sp/>specified<sp/>data<sp/>to<sp/>*info_log<sp/>if<sp/>info_log<sp/>is<sp/>non-NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceleveldb_1aeba9623ceee38be99bed2bc1ae082954" kindref="member">Log</ref>(Logger*<sp/>info_log,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetinyformat_1_1detail_1aa4b0590b3e34562c2d252a2086cec7ba" kindref="member">format</ref>,<sp/>...)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>__attribute__((__format__<sp/>(__printf__,<sp/>2,<sp/>3)))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>utility<sp/>routine:<sp/>write<sp/>&quot;data&quot;<sp/>to<sp/>the<sp/>named<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Status<sp/><ref refid="namespaceleveldb_1ae01563eb18a8527096b54d60251351cb" kindref="member">WriteStringToFile</ref>(Env*<sp/>env,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slice&amp;<sp/>data,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>utility<sp/>routine:<sp/>read<sp/>contents<sp/>of<sp/>named<sp/>file<sp/>into<sp/>*data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Status<sp/><ref refid="namespaceleveldb_1aa47a20ae782e9ad537692c3202cd652d" kindref="member">ReadFileToString</ref>(Env*<sp/>env,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/>data);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>implementation<sp/>of<sp/>Env<sp/>that<sp/>forwards<sp/>all<sp/>calls<sp/>to<sp/>another<sp/>Env.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>May<sp/>be<sp/>useful<sp/>to<sp/>clients<sp/>who<sp/>wish<sp/>to<sp/>override<sp/>just<sp/>part<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>functionality<sp/>of<sp/>another<sp/>Env.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classleveldb_1_1_env_wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classleveldb_1_1_env_wrapper" kindref="compound">EnvWrapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>an<sp/>EnvWrapper<sp/>that<sp/>delegates<sp/>all<sp/>calls<sp/>to<sp/>*t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classleveldb_1_1_env_wrapper_1a724d3740db2663034c8974c0378e49cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_wrapper_1a724d3740db2663034c8974c0378e49cb" kindref="member">EnvWrapper</ref>(<ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>*<sp/>t)<sp/>:<sp/>target_(t)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_wrapper_1a4bdf170510b585276e41671ae1910837" kindref="member">~EnvWrapper</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>target<sp/>to<sp/>which<sp/>this<sp/>Env<sp/>forwards<sp/>all<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classleveldb_1_1_env_wrapper_1a7b147ba21760b3545e757abcdc6dd9c5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>*<sp/><ref refid="classleveldb_1_1_env_wrapper_1a7b147ba21760b3545e757abcdc6dd9c5" kindref="member">target</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_;<sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>text<sp/>is<sp/>boilerplate<sp/>that<sp/>forwards<sp/>all<sp/>methods<sp/>to<sp/>target()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classleveldb_1_1_env_wrapper_1acd23f5803f7841cfcee9a29ffc1c5b04" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1acd23f5803f7841cfcee9a29ffc1c5b04" kindref="member">NewSequentialFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>f,<sp/><ref refid="classleveldb_1_1_sequential_file" kindref="compound">SequentialFile</ref>**<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1ad73810059f48c1d7b91125d357e7d351" kindref="member">NewSequentialFile</ref>(f,<sp/>r);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286" refid="classleveldb_1_1_env_wrapper_1ab8c78959e0d52f3c1beeeffc11ca0a34" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1ab8c78959e0d52f3c1beeeffc11ca0a34" kindref="member">NewRandomAccessFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>f,<sp/><ref refid="classleveldb_1_1_random_access_file" kindref="compound">RandomAccessFile</ref>**<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a1df3e0bb2d47ee914448df9bb9ca0734" kindref="member">NewRandomAccessFile</ref>(f,<sp/>r);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289" refid="classleveldb_1_1_env_wrapper_1a2d2b29a658e80c326ddaeb9c4d74c483" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1a2d2b29a658e80c326ddaeb9c4d74c483" kindref="member">NewWritableFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>f,<sp/><ref refid="classleveldb_1_1_writable_file" kindref="compound">WritableFile</ref>**<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a4566194f3e82fede425fdb5bb355f7de" kindref="member">NewWritableFile</ref>(f,<sp/>r);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292" refid="classleveldb_1_1_env_wrapper_1ac72ceac6f4e2a6140e2835b2fa15f4df" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_wrapper_1ac72ceac6f4e2a6140e2835b2fa15f4df" kindref="member">FileExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>f)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1acbb85047fdf7bf441bd365cfb09f9ecb" kindref="member">FileExists</ref>(f);<sp/>}</highlight></codeline>
<codeline lineno="293" refid="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1abb7c1fd7d91c80b6efcf9967154a18f3" kindref="member">GetChildren</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/>std::vector&lt;std::string&gt;*<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a53028e3112d7bb3bf6574ddaab18d6f6" kindref="member">GetChildren</ref>(dir,<sp/>r);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296" refid="classleveldb_1_1_env_wrapper_1af99d37829c3806a0e05979f5a7eb35af" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1af99d37829c3806a0e05979f5a7eb35af" kindref="member">DeleteFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>f)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1ac956b984466d5f09309664177687f9af" kindref="member">DeleteFile</ref>(f);<sp/>}</highlight></codeline>
<codeline lineno="297" refid="classleveldb_1_1_env_wrapper_1af8c26728d198a44627e08bb557ab4730" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1af8c26728d198a44627e08bb557ab4730" kindref="member">CreateDir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>d)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1ae6b7c8122df5a8020b2a3439ac39646e" kindref="member">CreateDir</ref>(d);<sp/>}</highlight></codeline>
<codeline lineno="298" refid="classleveldb_1_1_env_wrapper_1adedc51823cd8e4bdd55e4f10068f5d22" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1adedc51823cd8e4bdd55e4f10068f5d22" kindref="member">DeleteDir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>d)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a4e1a1c4495541e426b146cba56c59627" kindref="member">DeleteDir</ref>(d);<sp/>}</highlight></codeline>
<codeline lineno="299" refid="classleveldb_1_1_env_wrapper_1af6caee1ccef32332c9f26f97944f2afe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1af6caee1ccef32332c9f26f97944f2afe" kindref="member">GetFileSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>f,<sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref>*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1aacb66541dcb3bd586e6cc5a87489690c" kindref="member">GetFileSize</ref>(f,<sp/>s);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302" refid="classleveldb_1_1_env_wrapper_1afbd271f58ef0f0db8f2973f0c947fdec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1afbd271f58ef0f0db8f2973f0c947fdec" kindref="member">RenameFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1abd743b3d4751ada1ab307427827ed5b0" kindref="member">RenameFile</ref>(s,<sp/>t);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305" refid="classleveldb_1_1_env_wrapper_1a5cfd04849bbfc67ad60259dcbb2e0ec0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1a5cfd04849bbfc67ad60259dcbb2e0ec0" kindref="member">LockFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>f,<sp/><ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref>**<sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a9b7266f0444f832e428328ff19b7b54c" kindref="member">LockFile</ref>(f,<sp/>l);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308" refid="classleveldb_1_1_env_wrapper_1ab1779dda39167eaa38e660bcc69988c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1ab1779dda39167eaa38e660bcc69988c4" kindref="member">UnlockFile</ref>(<ref refid="classleveldb_1_1_file_lock" kindref="compound">FileLock</ref>*<sp/>l)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a194a2ee3c21bc0b204ad0e5bc3b81d4b" kindref="member">UnlockFile</ref>(l);<sp/>}</highlight></codeline>
<codeline lineno="309" refid="classleveldb_1_1_env_wrapper_1a58677bfd9b3b32a50184b51852b11755" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_wrapper_1a58677bfd9b3b32a50184b51852b11755" kindref="member">Schedule</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*f)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a6b5fc50322d8404f5b13fad0e03d8724" kindref="member">Schedule</ref>(f,<sp/>a);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312" refid="classleveldb_1_1_env_wrapper_1a8c910a8ab40a7f4a6eb7bc41bc39f78b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_wrapper_1a8c910a8ab40a7f4a6eb7bc41bc39f78b" kindref="member">StartThread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*f)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a25eafd1622a2cf2a415ee8b2325bc808" kindref="member">StartThread</ref>(f,<sp/>a);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315" refid="classleveldb_1_1_env_wrapper_1a62fdf74a9991e4226091bfdc58e97f16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1a62fdf74a9991e4226091bfdc58e97f16" kindref="member">GetTestDirectory</ref>(std::string*<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1ab57a55be37d4d57bf3c0ff83ee689f95" kindref="member">GetTestDirectory</ref>(path);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318" refid="classleveldb_1_1_env_wrapper_1af065b31ff6876780896be1c8f197e556" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_status" kindref="compound">Status</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1af065b31ff6876780896be1c8f197e556" kindref="member">NewLogger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/><ref refid="classleveldb_1_1_logger" kindref="compound">Logger</ref>**<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a53a4c41d294fe619f13ec5b697ffc933" kindref="member">NewLogger</ref>(fname,<sp/>result);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321" refid="classleveldb_1_1_env_wrapper_1ad3a36da82ba4ca10a34b45f3b9edfeaf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="stdint_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="classleveldb_1_1_env_wrapper_1ad3a36da82ba4ca10a34b45f3b9edfeaf" kindref="member">NowMicros</ref>()<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a988062bcd558ac02c62522ac2c8aa39f" kindref="member">NowMicros</ref>();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324" refid="classleveldb_1_1_env_wrapper_1a6e05455e32edd8cd4657fc22f4e422e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classleveldb_1_1_env_wrapper_1a6e05455e32edd8cd4657fc22f4e422e9" kindref="member">SleepForMicroseconds</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>micros)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>target_-&gt;<ref refid="classleveldb_1_1_env_1a43ad838cfb08db3d9e2197800cd33312" kindref="member">SleepForMicroseconds</ref>(micros);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="classleveldb_1_1_env" kindref="compound">Env</ref>*<sp/>target_;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>leveldb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>STORAGE_LEVELDB_INCLUDE_ENV_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/leveldb/include/leveldb/env.h"/>
  </compounddef>
</doxygen>
