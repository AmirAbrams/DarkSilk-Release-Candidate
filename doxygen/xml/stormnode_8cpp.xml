<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="stormnode_8cpp" kind="file" language="C++">
    <compoundname>stormnode.cpp</compoundname>
    <includes refid="sandstorm_8h" local="yes">sandstorm.h</includes>
    <includes refid="stormnode_8h" local="yes">stormnode.h</includes>
    <includes refid="stormnode-payments_8h" local="yes">stormnode-payments.h</includes>
    <includes refid="stormnode-sync_8h" local="yes">stormnode-sync.h</includes>
    <includes refid="stormnodeman_8h" local="yes">stormnodeman.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="sync_8h" local="yes">sync.h</includes>
    <includes refid="addrman_8h" local="yes">addrman.h</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes refid="init_8h" local="yes">init.h</includes>
    <incdepgraph>
      <node id="24782">
        <label>list</label>
      </node>
      <node id="24722">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="24831">
        <label>leveldb/write_batch.h</label>
        <link refid="write__batch_8h"/>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24829" relation="include">
        </childnode>
      </node>
      <node id="24811">
        <label>netinet/in.h</label>
      </node>
      <node id="24781">
        <label>amount.h</label>
        <link refid="amount_8h"/>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24728" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
      </node>
      <node id="24804">
        <label>arpa/inet.h</label>
      </node>
      <node id="24720">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="24746">
        <label>limits</label>
      </node>
      <node id="24843">
        <label>init.h</label>
        <link refid="init_8h"/>
      </node>
      <node id="24755">
        <label>crypto/sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24728" relation="include">
        </childnode>
      </node>
      <node id="24797">
        <label>primitives/transaction.h</label>
        <link refid="transaction_8h"/>
        <childnode refid="24781" relation="include">
        </childnode>
        <childnode refid="24737" relation="include">
        </childnode>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24798" relation="include">
        </childnode>
        <childnode refid="24769" relation="include">
        </childnode>
        <childnode refid="24799" relation="include">
        </childnode>
        <childnode refid="24793" relation="include">
        </childnode>
      </node>
      <node id="24756">
        <label>crypto/argon2/blake2/blake2.h</label>
        <link refid="blake2_8h"/>
        <childnode refid="24757" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24733" relation="include">
        </childnode>
      </node>
      <node id="24769">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24770" relation="include">
        </childnode>
        <childnode refid="24771" relation="include">
        </childnode>
        <childnode refid="24735" relation="include">
        </childnode>
        <childnode refid="24772" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24792" relation="include">
        </childnode>
      </node>
      <node id="24791">
        <label>openssl/rand.h</label>
      </node>
      <node id="24760">
        <label>walletdb.h</label>
        <link refid="walletdb_8h"/>
        <childnode refid="24761" relation="include">
        </childnode>
        <childnode refid="24768" relation="include">
        </childnode>
        <childnode refid="24792" relation="include">
        </childnode>
        <childnode refid="24781" relation="include">
        </childnode>
        <childnode refid="24782" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24765" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24749">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="24738">
        <label>assert.h</label>
      </node>
      <node id="24810">
        <label>net/if.h</label>
      </node>
      <node id="24717">
        <label>sandstorm.h</label>
        <link refid="sandstorm_8h"/>
        <childnode refid="24718" relation="include">
        </childnode>
        <childnode refid="24724" relation="include">
        </childnode>
        <childnode refid="24837" relation="include">
        </childnode>
      </node>
      <node id="24842">
        <label>stormnode-sync.h</label>
        <link refid="stormnode-sync_8h"/>
        <childnode refid="24840" relation="include">
        </childnode>
        <childnode refid="24819" relation="include">
        </childnode>
      </node>
      <node id="24820">
        <label>txmempool.h</label>
        <link refid="txmempool_8h"/>
        <childnode refid="24797" relation="include">
        </childnode>
        <childnode refid="24718" relation="include">
        </childnode>
        <childnode refid="24821" relation="include">
        </childnode>
        <childnode refid="24781" relation="include">
        </childnode>
        <childnode refid="24833" relation="include">
        </childnode>
      </node>
      <node id="24841">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="24830">
        <label>leveldb/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="24757" relation="include">
        </childnode>
      </node>
      <node id="24723">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="24838">
        <label>base58.h</label>
        <link refid="base58_8h"/>
        <childnode refid="24816" relation="include">
        </childnode>
        <childnode refid="24735" relation="include">
        </childnode>
        <childnode refid="24725" relation="include">
        </childnode>
        <childnode refid="24769" relation="include">
        </childnode>
        <childnode refid="24726" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24750">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="24751" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
      </node>
      <node id="24821">
        <label>coins.h</label>
        <link refid="coins_8h"/>
        <childnode refid="24822" relation="include">
        </childnode>
        <childnode refid="24820" relation="include">
        </childnode>
        <childnode refid="24738" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24770" relation="include">
        </childnode>
        <childnode refid="24832" relation="include">
        </childnode>
      </node>
      <node id="24732">
        <label>sys/mman.h</label>
      </node>
      <node id="24728">
        <label>stdlib.h</label>
      </node>
      <node id="24834">
        <label>chain.h</label>
        <link refid="chain_8h"/>
        <childnode refid="24796" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24816" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
        <childnode refid="24770" relation="include">
        </childnode>
      </node>
      <node id="24770">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="24790">
        <label>openssl/crypto.h</label>
      </node>
      <node id="24840">
        <label>stormnode-payments.h</label>
        <link refid="stormnode-payments_8h"/>
        <childnode refid="24725" relation="include">
        </childnode>
        <childnode refid="24819" relation="include">
        </childnode>
        <childnode refid="24839" relation="include">
        </childnode>
        <childnode refid="24841" relation="include">
        </childnode>
      </node>
      <node id="24807">
        <label>compat.h</label>
        <link refid="compat_8h"/>
        <childnode refid="24808" relation="include">
        </childnode>
        <childnode refid="24732" relation="include">
        </childnode>
        <childnode refid="24809" relation="include">
        </childnode>
        <childnode refid="24775" relation="include">
        </childnode>
        <childnode refid="24810" relation="include">
        </childnode>
        <childnode refid="24811" relation="include">
        </childnode>
        <childnode refid="24804" relation="include">
        </childnode>
        <childnode refid="24812" relation="include">
        </childnode>
        <childnode refid="24733" relation="include">
        </childnode>
        <childnode refid="24813" relation="include">
        </childnode>
        <childnode refid="24734" relation="include">
        </childnode>
        <childnode refid="24814" relation="include">
        </childnode>
      </node>
      <node id="24786">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="24752">
        <label>openssl/sha.h</label>
      </node>
      <node id="24814">
        <label>errno.h</label>
      </node>
      <node id="24745">
        <label>cassert</label>
      </node>
      <node id="24740">
        <label>stdexcept</label>
      </node>
      <node id="24774">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="24775" relation="include">
        </childnode>
        <childnode refid="24776" relation="include">
        </childnode>
        <childnode refid="24777" relation="include">
        </childnode>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24778" relation="include">
        </childnode>
        <childnode refid="24781" relation="include">
        </childnode>
        <childnode refid="24731" relation="include">
        </childnode>
        <childnode refid="24782" relation="include">
        </childnode>
        <childnode refid="24765" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24783" relation="include">
        </childnode>
        <childnode refid="24784" relation="include">
        </childnode>
        <childnode refid="24766" relation="include">
        </childnode>
        <childnode refid="24785" relation="include">
        </childnode>
        <childnode refid="24786" relation="include">
        </childnode>
        <childnode refid="24787" relation="include">
        </childnode>
        <childnode refid="24788" relation="include">
        </childnode>
        <childnode refid="24789" relation="include">
        </childnode>
        <childnode refid="24790" relation="include">
        </childnode>
        <childnode refid="24791" relation="include">
        </childnode>
        <childnode refid="24773" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
      </node>
      <node id="24815">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="24816" relation="include">
        </childnode>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24806" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
      </node>
      <node id="24785">
        <label>boost/date_time/gregorian/gregorian_types.hpp</label>
      </node>
      <node id="24826">
        <label>leveldb/db.h</label>
        <link refid="leveldb_2include_2leveldb_2db_8h"/>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24793" relation="include">
        </childnode>
        <childnode refid="24827" relation="include">
        </childnode>
        <childnode refid="24830" relation="include">
        </childnode>
      </node>
      <node id="24730">
        <label>string</label>
      </node>
      <node id="24759">
        <label>wallet.h</label>
        <link refid="wallet_8h"/>
        <childnode refid="24760" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
        <childnode refid="24728" relation="include">
        </childnode>
        <childnode refid="24796" relation="include">
        </childnode>
        <childnode refid="24797" relation="include">
        </childnode>
        <childnode refid="24818" relation="include">
        </childnode>
        <childnode refid="24819" relation="include">
        </childnode>
        <childnode refid="24725" relation="include">
        </childnode>
        <childnode refid="24768" relation="include">
        </childnode>
        <childnode refid="24769" relation="include">
        </childnode>
        <childnode refid="24835" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24792" relation="include">
        </childnode>
      </node>
      <node id="24800">
        <label>scrypt.h</label>
        <link refid="scrypt_8h"/>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24728" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24801" relation="include">
        </childnode>
      </node>
      <node id="24731">
        <label>map</label>
      </node>
      <node id="24783">
        <label>boost/thread.hpp</label>
      </node>
      <node id="24817">
        <label>addrman.h</label>
        <link refid="addrman_8h"/>
        <childnode refid="24806" relation="include">
        </childnode>
        <childnode refid="24815" relation="include">
        </childnode>
        <childnode refid="24718" relation="include">
        </childnode>
        <childnode refid="24799" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24731" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24839">
        <label>stormnode.h</label>
        <link refid="stormnode_8h"/>
        <childnode refid="24718" relation="include">
        </childnode>
        <childnode refid="24801" relation="include">
        </childnode>
        <childnode refid="24725" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24838" relation="include">
        </childnode>
        <childnode refid="24819" relation="include">
        </childnode>
        <childnode refid="24799" relation="include">
        </childnode>
      </node>
      <node id="24835">
        <label>ui_interface.h</label>
        <link refid="ui__interface_8h"/>
        <childnode refid="24781" relation="include">
        </childnode>
        <childnode refid="24836" relation="include">
        </childnode>
        <childnode refid="24795" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
      </node>
      <node id="24825">
        <label>leveldbwrapper.h</label>
        <link refid="leveldbwrapper_8h"/>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24762" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24766" relation="include">
        </childnode>
        <childnode refid="24826" relation="include">
        </childnode>
        <childnode refid="24831" relation="include">
        </childnode>
      </node>
      <node id="24757">
        <label>stddef.h</label>
      </node>
      <node id="24771">
        <label>boost/variant.hpp</label>
      </node>
      <node id="24813">
        <label>netdb.h</label>
      </node>
      <node id="24808">
        <label>sys/fcntl.h</label>
      </node>
      <node id="24822">
        <label>undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="24823" relation="include">
        </childnode>
      </node>
      <node id="24829">
        <label>leveldb/status.h</label>
        <link refid="status_8h"/>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24828" relation="include">
        </childnode>
      </node>
      <node id="24833">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="24743">
        <label>serialize.h</label>
        <link refid="serialize_8h"/>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
        <childnode refid="24731" relation="include">
        </childnode>
        <childnode refid="24744" relation="include">
        </childnode>
        <childnode refid="24745" relation="include">
        </childnode>
        <childnode refid="24746" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24739" relation="include">
        </childnode>
        <childnode refid="24747" relation="include">
        </childnode>
        <childnode refid="24748" relation="include">
        </childnode>
        <childnode refid="24749" relation="include">
        </childnode>
        <childnode refid="24726" relation="include">
        </childnode>
        <childnode refid="24750" relation="include">
        </childnode>
      </node>
      <node id="24733">
        <label>limits.h</label>
      </node>
      <node id="24719">
        <label>threadsafety.h</label>
        <link refid="threadsafety_8h"/>
      </node>
      <node id="24805">
        <label>mruset.h</label>
        <link refid="mruset_8h"/>
        <childnode refid="24744" relation="include">
        </childnode>
        <childnode refid="24802" relation="include">
        </childnode>
      </node>
      <node id="24777">
        <label>sys/resource.h</label>
      </node>
      <node id="24787">
        <label>openssl/bio.h</label>
      </node>
      <node id="24818">
        <label>crypter.h</label>
        <link refid="crypter_8h"/>
        <childnode refid="24726" relation="include">
        </childnode>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24768" relation="include">
        </childnode>
      </node>
      <node id="24795">
        <label>boost/signals2/signal.hpp</label>
      </node>
      <node id="24806">
        <label>netbase.h</label>
        <link refid="netbase_8h"/>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24807" relation="include">
        </childnode>
      </node>
      <node id="24768">
        <label>keystore.h</label>
        <link refid="keystore_8h"/>
        <childnode refid="24725" relation="include">
        </childnode>
        <childnode refid="24735" relation="include">
        </childnode>
        <childnode refid="24718" relation="include">
        </childnode>
        <childnode refid="24769" relation="include">
        </childnode>
        <childnode refid="24795" relation="include">
        </childnode>
        <childnode refid="24771" relation="include">
        </childnode>
      </node>
      <node id="24736">
        <label>hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="24737" relation="include">
        </childnode>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24752" relation="include">
        </childnode>
        <childnode refid="24753" relation="include">
        </childnode>
        <childnode refid="24754" relation="include">
        </childnode>
        <childnode refid="24755" relation="include">
        </childnode>
        <childnode refid="24756" relation="include">
        </childnode>
        <childnode refid="24758" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24812">
        <label>ifaddrs.h</label>
      </node>
      <node id="24792">
        <label>stealth.h</label>
        <link refid="stealth_8h"/>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24728" relation="include">
        </childnode>
        <childnode refid="24793" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
        <childnode refid="24794" relation="include">
        </childnode>
      </node>
      <node id="24775">
        <label>sys/types.h</label>
      </node>
      <node id="24764">
        <label>ios</label>
      </node>
      <node id="24729">
        <label>string.h</label>
      </node>
      <node id="24751">
        <label>clientversion.h</label>
        <link refid="clientversion_8h"/>
      </node>
      <node id="24747">
        <label>cstdio</label>
      </node>
      <node id="24721">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="24789">
        <label>openssl/buffer.h</label>
      </node>
      <node id="24748">
        <label>boost/type_traits/is_fundamental.hpp</label>
      </node>
      <node id="24819">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="24820" relation="include">
        </childnode>
        <childnode refid="24801" relation="include">
        </childnode>
        <childnode refid="24769" relation="include">
        </childnode>
        <childnode refid="24762" relation="include">
        </childnode>
        <childnode refid="24824" relation="include">
        </childnode>
        <childnode refid="24834" relation="include">
        </childnode>
        <childnode refid="24782" relation="include">
        </childnode>
        <childnode refid="24832" relation="include">
        </childnode>
      </node>
      <node id="24766">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="24837">
        <label>stormnodeman.h</label>
        <link refid="stormnodeman_8h"/>
        <childnode refid="24718" relation="include">
        </childnode>
        <childnode refid="24801" relation="include">
        </childnode>
        <childnode refid="24725" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24838" relation="include">
        </childnode>
        <childnode refid="24819" relation="include">
        </childnode>
        <childnode refid="24839" relation="include">
        </childnode>
      </node>
      <node id="24832">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="24735">
        <label>pubkey.h</label>
        <link refid="pubkey_8h"/>
        <childnode refid="24736" relation="include">
        </childnode>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24737" relation="include">
        </childnode>
        <childnode refid="24740" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24734">
        <label>unistd.h</label>
      </node>
      <node id="24767">
        <label>db_cxx.h</label>
      </node>
      <node id="24742">
        <label>vector</label>
      </node>
      <node id="24772">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24737" relation="include">
        </childnode>
        <childnode refid="24773" relation="include">
        </childnode>
        <childnode refid="24740" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
      </node>
      <node id="24801">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="24802" relation="include">
        </childnode>
        <childnode refid="24803" relation="include">
        </childnode>
        <childnode refid="24770" relation="include">
        </childnode>
        <childnode refid="24795" relation="include">
        </childnode>
        <childnode refid="24791" relation="include">
        </childnode>
        <childnode refid="24804" relation="include">
        </childnode>
        <childnode refid="24805" relation="include">
        </childnode>
        <childnode refid="24806" relation="include">
        </childnode>
        <childnode refid="24815" relation="include">
        </childnode>
        <childnode refid="24817" relation="include">
        </childnode>
        <childnode refid="24736" relation="include">
        </childnode>
        <childnode refid="24762" relation="include">
        </childnode>
      </node>
      <node id="24753">
        <label>openssl/ripemd.h</label>
      </node>
      <node id="24784">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="24765">
        <label>utility</label>
      </node>
      <node id="24823">
        <label>compressor.h</label>
        <link refid="compressor_8h"/>
        <childnode refid="24797" relation="include">
        </childnode>
        <childnode refid="24824" relation="include">
        </childnode>
      </node>
      <node id="24780">
        <label>sstream</label>
      </node>
      <node id="24836">
        <label>boost/signals2/last_value.hpp</label>
      </node>
      <node id="24725">
        <label>key.h</label>
        <link refid="key_8h"/>
        <childnode refid="24726" relation="include">
        </childnode>
        <childnode refid="24735" relation="include">
        </childnode>
        <childnode refid="24740" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24788">
        <label>openssl/evp.h</label>
      </node>
      <node id="24778">
        <label>tinyformat.h</label>
        <link refid="tinyformat_8h"/>
        <childnode refid="24745" relation="include">
        </childnode>
        <childnode refid="24779" relation="include">
        </childnode>
        <childnode refid="24780" relation="include">
        </childnode>
        <childnode refid="24740" relation="include">
        </childnode>
      </node>
      <node id="24741">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="24761">
        <label>db.h</label>
        <link refid="db_8h"/>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24718" relation="include">
        </childnode>
        <childnode refid="24762" relation="include">
        </childnode>
        <childnode refid="24731" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
        <childnode refid="24766" relation="include">
        </childnode>
        <childnode refid="24767" relation="include">
        </childnode>
      </node>
      <node id="24762">
        <label>streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="24726" relation="include">
        </childnode>
        <childnode refid="24743" relation="include">
        </childnode>
        <childnode refid="24763" relation="include">
        </childnode>
        <childnode refid="24738" relation="include">
        </childnode>
        <childnode refid="24764" relation="include">
        </childnode>
        <childnode refid="24746" relation="include">
        </childnode>
        <childnode refid="24731" relation="include">
        </childnode>
        <childnode refid="24744" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24729" relation="include">
        </childnode>
        <childnode refid="24765" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24758">
        <label>crypto/argon2/argon2.h</label>
        <link refid="argon2_8h"/>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24757" relation="include">
        </childnode>
        <childnode refid="24733" relation="include">
        </childnode>
      </node>
      <node id="24776">
        <label>sys/time.h</label>
      </node>
      <node id="24779">
        <label>iostream</label>
      </node>
      <node id="24802">
        <label>deque</label>
      </node>
      <node id="24737">
        <label>uint256.h</label>
        <link refid="uint256_8h"/>
        <childnode refid="24738" relation="include">
        </childnode>
        <childnode refid="24739" relation="include">
        </childnode>
        <childnode refid="24740" relation="include">
        </childnode>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24809">
        <label>sys/socket.h</label>
      </node>
      <node id="24828">
        <label>leveldb/slice.h</label>
        <link refid="slice_8h"/>
        <childnode refid="24738" relation="include">
        </childnode>
        <childnode refid="24757" relation="include">
        </childnode>
        <childnode refid="24729" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
      </node>
      <node id="24803">
        <label>boost/array.hpp</label>
      </node>
      <node id="24773">
        <label>openssl/bn.h</label>
      </node>
      <node id="24824">
        <label>txdb.h</label>
        <link refid="txdb_8h"/>
        <childnode refid="24825" relation="include">
        </childnode>
        <childnode refid="24819" relation="include">
        </childnode>
        <childnode refid="24731" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24765" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24799">
        <label>timedata.h</label>
        <link refid="timedata_8h"/>
        <childnode refid="24741" relation="include">
        </childnode>
      </node>
      <node id="24726">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="24727" relation="include">
        </childnode>
        <childnode refid="24729" relation="include">
        </childnode>
        <childnode refid="24730" relation="include">
        </childnode>
        <childnode refid="24722" relation="include">
        </childnode>
        <childnode refid="24731" relation="include">
        </childnode>
        <childnode refid="24732" relation="include">
        </childnode>
        <childnode refid="24733" relation="include">
        </childnode>
        <childnode refid="24734" relation="include">
        </childnode>
      </node>
      <node id="24816">
        <label>chainparams.h</label>
        <link refid="chainparams_8h"/>
        <childnode refid="24772" relation="include">
        </childnode>
        <childnode refid="24737" relation="include">
        </childnode>
        <childnode refid="24742" relation="include">
        </childnode>
      </node>
      <node id="24744">
        <label>set</label>
      </node>
      <node id="24763">
        <label>algorithm</label>
      </node>
      <node id="24724">
        <label>activestormnode.h</label>
        <link refid="activestormnode_8h"/>
        <childnode refid="24718" relation="include">
        </childnode>
        <childnode refid="24725" relation="include">
        </childnode>
        <childnode refid="24759" relation="include">
        </childnode>
      </node>
      <node id="24754">
        <label>crypto/ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="24741" relation="include">
        </childnode>
        <childnode refid="24728" relation="include">
        </childnode>
      </node>
      <node id="24798">
        <label>util.h</label>
      </node>
      <node id="24793">
        <label>stdio.h</label>
      </node>
      <node id="24727">
        <label>cleanse.h</label>
        <link refid="cleanse_8h"/>
        <childnode refid="24728" relation="include">
        </childnode>
      </node>
      <node id="24739">
        <label>cstring</label>
      </node>
      <node id="24718">
        <label>sync.h</label>
        <link refid="sync_8h"/>
        <childnode refid="24719" relation="include">
        </childnode>
        <childnode refid="24720" relation="include">
        </childnode>
        <childnode refid="24721" relation="include">
        </childnode>
        <childnode refid="24722" relation="include">
        </childnode>
        <childnode refid="24723" relation="include">
        </childnode>
      </node>
      <node id="24794">
        <label>inttypes.h</label>
      </node>
      <node id="24716">
        <label>/home/dev/ds-160209/src/stormnode.cpp</label>
        <link refid="stormnode.cpp"/>
        <childnode refid="24717" relation="include">
        </childnode>
        <childnode refid="24839" relation="include">
        </childnode>
        <childnode refid="24840" relation="include">
        </childnode>
        <childnode refid="24842" relation="include">
        </childnode>
        <childnode refid="24837" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
        <childnode refid="24718" relation="include">
        </childnode>
        <childnode refid="24817" relation="include">
        </childnode>
        <childnode refid="24841" relation="include">
        </childnode>
        <childnode refid="24843" relation="include">
        </childnode>
      </node>
      <node id="24827">
        <label>leveldb/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="24828" relation="include">
        </childnode>
        <childnode refid="24829" relation="include">
        </childnode>
      </node>
      <node id="24796">
        <label>primitives/block.h</label>
        <link refid="primitives_2block_8h"/>
        <childnode refid="24797" relation="include">
        </childnode>
        <childnode refid="24758" relation="include">
        </childnode>
        <childnode refid="24800" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stormnode_8cpp_1a4cfa000bc8d0b6865a1bb94d87d4cca8" prot="public" static="no" mutable="no">
        <type>map&lt; <ref refid="classuint256" kindref="compound">uint256</ref>, int &gt;</type>
        <definition>map&lt;uint256, int&gt; mapSeenStormnodeScanningErrors</definition>
        <argsstring></argsstring>
        <name>mapSeenStormnodeScanningErrors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.cpp" line="17" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stormnode_8cpp_1a86a7855b1078ccef1edb51f1fac59dc2" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref>, <ref refid="classuint256" kindref="compound">uint256</ref> &gt;</type>
        <definition>std::map&lt;int64_t, uint256&gt; mapCacheBlockHashes</definition>
        <argsstring></argsstring>
        <name>mapCacheBlockHashes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.cpp" line="19" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stormnode_8cpp_1a32f5cbabfc2bd53c2f2daedf122a83cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetBlockHash</definition>
        <argsstring>(uint256 &amp;hash, int nBlockHeight)</argsstring>
        <name>GetBlockHash</name>
        <param>
          <type><ref refid="classuint256" kindref="compound">uint256</ref> &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nBlockHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dev/ds-160209/src/stormnode.cpp" line="22" column="1" bodyfile="/home/dev/ds-160209/src/stormnode.cpp" bodystart="22" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2016<sp/>The<sp/>Dash<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT/X11<sp/>software<sp/>license,<sp/>see<sp/>the<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>COPYING<sp/>or<sp/>http://www.opensource.org/licenses/mit-license.php.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sandstorm_8h" kindref="compound">sandstorm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode_8h" kindref="compound">stormnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-payments_8h" kindref="compound">stormnode-payments.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnode-sync_8h" kindref="compound">stormnode-sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stormnodeman_8h" kindref="compound">stormnodeman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sync_8h" kindref="compound">sync.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="addrman_8h" kindref="compound">addrman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init_8h" kindref="compound">init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>scanning<sp/>errors<sp/>I&apos;ve<sp/>seen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="stormnode_8cpp_1a4cfa000bc8d0b6865a1bb94d87d4cca8" refkind="member"><highlight class="normal">map&lt;uint256,<sp/>int&gt;<sp/><ref refid="stormnode_8cpp_1a4cfa000bc8d0b6865a1bb94d87d4cca8" kindref="member">mapSeenStormnodeScanningErrors</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cache<sp/>block<sp/>hashes<sp/>as<sp/>we<sp/>calculate<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="stormnode_8h_1ae6efb5c8ef516528f5cb6b94c34d5d3a" refkind="member"><highlight class="normal">std::map&lt;int64_t,<sp/>uint256&gt;<sp/><ref refid="stormnode_8cpp_1a86a7855b1078ccef1edb51f1fac59dc2" kindref="member">mapCacheBlockHashes</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//Get<sp/>the<sp/>last<sp/>hash<sp/>that<sp/>matches<sp/>the<sp/>modulus<sp/>given.<sp/>Processed<sp/>in<sp/>reverse<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="stormnode_8h_1a32f5cbabfc2bd53c2f2daedf122a83cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="stormnode_8cpp_1a32f5cbabfc2bd53c2f2daedf122a83cb" kindref="member">GetBlockHash</ref>(<ref refid="classuint256" kindref="compound">uint256</ref>&amp;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlockHeight)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBlockHeight<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlockHeight<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode_8cpp_1a86a7855b1078ccef1edb51f1fac59dc2" kindref="member">mapCacheBlockHashes</ref>.count(nBlockHeight)){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>=<sp/><ref refid="stormnode_8cpp_1a86a7855b1078ccef1edb51f1fac59dc2" kindref="member">mapCacheBlockHashes</ref>[nBlockHeight];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref><sp/>*BlockLastSolved<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref><sp/>*BlockReading<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BlockLastSolved<sp/>==<sp/>NULL<sp/>||<sp/>BlockLastSolved-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>==<sp/>0<sp/>||<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1<sp/>&lt;<sp/>nBlockHeight)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlocksAgo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBlockHeight<sp/>&gt;<sp/>0)<sp/>nBlocksAgo<sp/>=<sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>+1)-nBlockHeight;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(nBlocksAgo<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>BlockReading<sp/>&amp;&amp;<sp/>BlockReading-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>&gt;<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;=<sp/>nBlocksAgo){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>BlockReading-&gt;<ref refid="class_c_block_index_1ab843ef9b8b0a0193ec3a5c24738e484f" kindref="member">GetBlockHash</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode_8cpp_1a86a7855b1078ccef1edb51f1fac59dc2" kindref="member">mapCacheBlockHashes</ref>[nBlockHeight]<sp/>=<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BlockReading-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref><sp/>==<sp/>NULL)<sp/>{<sp/>assert(BlockReading);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockReading<sp/>=<sp/>BlockReading-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" kindref="member">CStormnode::CStormnode</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref><sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref><sp/>=<sp/><ref refid="class_c_service" kindref="compound">CService</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref><sp/>=<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>=<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref><sp/>=<sp/>std::vector&lt;unsigned<sp/>char&gt;();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" kindref="member">STORMNODE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>=<sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" kindref="member">cacheInputAge</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" kindref="member">cacheInputAgeBlock</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" kindref="member">unitTest</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" kindref="member">allowFreeTx</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>=<sp/>PROTOCOL_VERSION;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" kindref="member">nScanningErrorCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" kindref="member">nLastScanningErrorBlockHeight</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTimeChecked<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_c_stormnode_1ac5d7c79ce5e3187bf1703bdf968e4c2e" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" kindref="member">CStormnode::CStormnode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" kindref="member">cacheInputAge</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" kindref="member">cacheInputAge</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" kindref="member">cacheInputAgeBlock</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" kindref="member">cacheInputAgeBlock</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" kindref="member">unitTest</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" kindref="member">unitTest</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" kindref="member">allowFreeTx</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" kindref="member">allowFreeTx</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" kindref="member">nScanningErrorCount</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" kindref="member">nScanningErrorCount</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" kindref="member">nLastScanningErrorBlockHeight</ref><sp/>=<sp/>other.<ref refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" kindref="member">nLastScanningErrorBlockHeight</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTimeChecked<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_c_stormnode_1a81bcdb5b9c2b0219667edc3bfd62c1af" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_1a7601ef94f912fc9d00406c2349accd9e" kindref="member">CStormnode::CStormnode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref>&amp;<sp/>snb)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sync_8h_1a911fe23f057c2fe5aad629162d6c99d0" kindref="member">LOCK</ref>(cs);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" kindref="member">STORMNODE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" kindref="member">cacheInputAge</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" kindref="member">cacheInputAgeBlock</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" kindref="member">unitTest</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" kindref="member">allowFreeTx</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" kindref="member">nScanningErrorCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" kindref="member">nLastScanningErrorBlockHeight</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTimeChecked<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>a<sp/>new<sp/>stormnode<sp/>broadcast<sp/>is<sp/>sent,<sp/>update<sp/>our<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" kindref="member">CStormnode::UpdateFromNewBroadcast</ref>(<ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref>&amp;<sp/>snb)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(snb.<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>&gt;<sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastTimeChecked<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDoS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(snb.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>==<sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref>()<sp/>||<sp/>(snb.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>!=<sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref>()<sp/>&amp;&amp;<sp/>snb.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>.<ref refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" kindref="member">CheckAndUpdate</ref>(nDoS,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a9d4e8bbd492630f16b61eec58b722a86" kindref="member">mapSeenStormnodePing</ref>.insert(make_pair(<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>.<ref refid="class_c_stormnode_ping_1a3e2dbb87bd2fd09f87d6306606a48acb" kindref="member">GetHash</ref>(),<sp/><ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deterministically<sp/>calculate<sp/>a<sp/>given<sp/>&quot;score&quot;<sp/>for<sp/>a<sp/>Stormnode<sp/>depending<sp/>on<sp/>how<sp/>close<sp/>it&apos;s<sp/>hash<sp/>is<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>proof<sp/>of<sp/>work<sp/>for<sp/>that<sp/>block.<sp/>The<sp/>further<sp/>away<sp/>they<sp/>are<sp/>the<sp/>better,<sp/>the<sp/>furthest<sp/>will<sp/>win<sp/>the<sp/>election</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>get<sp/>paid<sp/>this<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" refkind="member"><highlight class="normal"><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="class_c_stormnode_1a6e1fab43d9494177da3f8599c4645516" kindref="member">CStormnode::CalculateScore</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mod,<sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nBlockHeight)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>aux<sp/>=<sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref><sp/>+<sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1a9fbc648ca0d11421ad66e897185a9b58" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="stormnode_8cpp_1a32f5cbabfc2bd53c2f2daedf122a83cb" kindref="member">GetBlockHash</ref>(hash,<sp/>nBlockHeight))<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CalculateScore<sp/>ERROR<sp/>-<sp/>nHeight<sp/>%d<sp/>-<sp/>Returned<sp/>0\n&quot;</highlight><highlight class="normal">,<sp/>nBlockHeight);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash2<sp/>=<sp/>ss.<ref refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref><sp/>ss2(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>ss2<sp/>&lt;&lt;<sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>ss2<sp/>&lt;&lt;<sp/>aux;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hash3<sp/>=<sp/>ss2.<ref refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>r<sp/>=<sp/>(hash3<sp/>&gt;<sp/>hash2<sp/>?<sp/>hash3<sp/>-<sp/>hash2<sp/>:<sp/>hash2<sp/>-<sp/>hash3);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">CStormnode::Check</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceCheck)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="init_8cpp_1a6f201ca9fe6b594f1985c12b4482ea5a" kindref="member">ShutdownRequested</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!forceCheck<sp/>&amp;&amp;<sp/>(<ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>()<sp/>-<sp/>lastTimeChecked<sp/>&lt;<sp/>STORMNODE_CHECK_SECONDS))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTimeChecked<sp/>=<sp/><ref refid="util_8cpp_1a46fac5fba8ba905b5f9acb364f5d8c6f" kindref="member">GetTime</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//once<sp/>spent,<sp/>stop<sp/>doing<sp/>the<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>==<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0abe760cfa737f943c06d449afc2b03f1d" kindref="member">STORMNODE_VIN_SPENT</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>.<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>-<sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>&lt;<sp/>STORMNODE_MIN_SNP_SECONDS){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4d96c08f8f4c62ae9e43b0d82db5e2f1" kindref="member">STORMNODE_PRE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_c_stormnode_1a5f19595c1ccbb539f2d369871671ab70" kindref="member">IsPingedWithin</ref>(STORMNODE_REMOVAL_SECONDS)){</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a89fa3f4b7441a2d2add5334396a88b06" kindref="member">STORMNODE_REMOVE</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_c_stormnode_1a5f19595c1ccbb539f2d369871671ab70" kindref="member">IsPingedWithin</ref>(STORMNODE_EXPIRATION_SECONDS)){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0ab3e35c4e3e07236ee4bdd2fc0cc11f99" kindref="member">STORMNODE_EXPIRED</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" kindref="member">unitTest</ref>){</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>put<sp/>this<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*CValidationState<sp/>state;</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CTransaction<sp/>tx<sp/>=<sp/>CTransaction();<sp/>//TODO<sp/>(Amir):<sp/>Use<sp/>CMutableTransaction<sp/>here?</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CTxOut<sp/>vout<sp/>=<sp/>CTxOut(9999.99*COIN,<sp/>sandStormSigner.collateralPubKey);</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx.vin.push_back(vin);</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx.vout.push_back(vout);</highlight></codeline>
<codeline lineno="211"><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRY_LOCK(cs_main,<sp/>lockMain);</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!lockMain)<sp/>return;</highlight></codeline>
<codeline lineno="215"><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//if(!AcceptableInputs(mempool,<sp/>state,<sp/>CTransaction(tx),<sp/>false,<sp/>NULL)){</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!AcceptableInputs(mempool,<sp/>tx,<sp/>false,<sp/>NULL)){</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activeState<sp/>=<sp/>STORMNODE_VIN_SPENT;</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" kindref="member">STORMNODE_ENABLED</ref>;<sp/></highlight><highlight class="comment">//<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="class_c_stormnode_1abce24148c6618317ab287e8e284c12d6" kindref="member">CStormnode::SecondsSincePayment</ref>()<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>pubkeyScript;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>pubkeyScript<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>sec<sp/>=<sp/>(<ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>()<sp/>-<sp/><ref refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" kindref="member">GetLastPaid</ref>());</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>month<sp/>=<sp/>60*60*24*30;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sec<sp/>&lt;<sp/>month)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sec;<sp/></highlight><highlight class="comment">//if<sp/>it&apos;s<sp/>less<sp/>than<sp/>30<sp/>days,<sp/>give<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/><sp/>ss.<ref refid="class_c_hash_writer_1ae94a937211502eabf19477630090093a" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>ramifications<sp/>of<sp/>using<sp/>a<sp/>PoS<sp/>hash<sp/>and<sp/>GetCompact<sp/>here???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>some<sp/>deterministic<sp/>value<sp/>for<sp/>unknown/unpaid<sp/>but<sp/>force<sp/>it<sp/>to<sp/>be<sp/>more<sp/>than<sp/>30<sp/>days<sp/>old</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>month<sp/>+<sp/>hash.<ref refid="classuint256_1af30486eee47f077f91ed762d0db6ddca" kindref="member">GetCompact</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="class_c_stormnode_1a1502f0b0559e139a3100aa5646f95bd7" kindref="member">CStormnode::GetLastPaid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref>*<sp/>pindexPrev<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pindexPrev<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>snpayee;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>snpayee<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_hash_writer" kindref="compound">CHashWriter</ref><sp/>ss(<ref refid="serialize_8h_1a6b7b47dd702d9e331586d485013fd1eaaca6c7596d50ce42f28b5b97f39ba178a" kindref="member">SER_GETHASH</ref>,<sp/>PROTOCOL_VERSION);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/><sp/>ss.GetHash();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>a<sp/>deterministic<sp/>offset<sp/>to<sp/>break<sp/>a<sp/>tie<sp/>--<sp/>2.5<sp/>minutes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Ramifications<sp/>of<sp/>using<sp/>a<sp/>GetCompact<sp/>PoS<sp/>hash?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/>nOffset<sp/>=<sp/>hash.<ref refid="classuint256_1af30486eee47f077f91ed762d0db6ddca" kindref="member">GetCompact</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>%<sp/>150;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_block_index" kindref="compound">CBlockIndex</ref><sp/>*BlockReading<sp/>=<sp/><ref refid="chain_8h_1a6454ad864029344132a0a0b59b1456ee" kindref="member">pindexBest</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSnCount<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a02b9b11565e19f2c9dafbe132341fabd" kindref="member">CountEnabled</ref>()*1.25;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>BlockReading<sp/>&amp;&amp;<sp/>BlockReading-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref><sp/>&gt;<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;=<sp/>nSnCount){</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>.count(BlockReading-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>)){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Search<sp/>for<sp/>this<sp/>payee,<sp/>with<sp/>at<sp/>least<sp/>2<sp/>votes.<sp/>This<sp/>will<sp/>aid<sp/>in<sp/>consensus<sp/>allowing<sp/>the<sp/>network</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>converge<sp/>on<sp/>the<sp/>same<sp/>payees<sp/>quickly,<sp/>then<sp/>keep<sp/>the<sp/>same<sp/>schedule.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1aad1a7055ea55caa06b4eb291e8b3a348" kindref="member">mapStormnodeBlocks</ref>[BlockReading-&gt;<ref refid="class_c_block_index_1aebfc8d6b95852546760e742553d7bfd5" kindref="member">nHeight</ref>].HasPayeeWithVotes(snpayee,<sp/>2)){</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BlockReading-&gt;<ref refid="class_c_block_index_1a4b687a226e9e166b0f91c1b616b543a6" kindref="member">nTime</ref><sp/>+<sp/>nOffset;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BlockReading-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref><sp/>==<sp/>NULL)<sp/>{<sp/>assert(BlockReading);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockReading<sp/>=<sp/>BlockReading-&gt;<ref refid="class_c_block_index_1a1ef11137155df1dd5c81491630cece39" kindref="member">pprev</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" kindref="member">CStormnodeBroadcast::CStormnodeBroadcast</ref>()</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref><sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref><sp/>=<sp/><ref refid="class_c_service" kindref="compound">CService</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref><sp/>=<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>=<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref><sp/>=<sp/>std::vector&lt;unsigned<sp/>char&gt;();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" kindref="member">STORMNODE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>=<sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" kindref="member">cacheInputAge</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" kindref="member">cacheInputAgeBlock</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" kindref="member">unitTest</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" kindref="member">allowFreeTx</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>=<sp/>PROTOCOL_VERSION;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" kindref="member">nScanningErrorCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" kindref="member">nLastScanningErrorBlockHeight</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_c_stormnode_broadcast_1a75374331e61dee9175968332d9cedc5c" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" kindref="member">CStormnodeBroadcast::CStormnodeBroadcast</ref>(<ref refid="class_c_service" kindref="compound">CService</ref><sp/>newAddr,<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref><sp/>newVin,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>newPubkey,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref><sp/>newPubkey2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocolVersionIn)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref><sp/>=<sp/>newVin;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref><sp/>=<sp/>newAddr;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref><sp/>=<sp/>newPubkey;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>=<sp/>newPubkey2;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref><sp/>=<sp/>std::vector&lt;unsigned<sp/>char&gt;();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0a4af8128443469b549a0c4d6cf59a3a79" kindref="member">STORMNODE_ENABLED</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>=<sp/><ref refid="class_c_stormnode_ping" kindref="compound">CStormnodePing</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" kindref="member">cacheInputAge</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" kindref="member">cacheInputAgeBlock</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" kindref="member">unitTest</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" kindref="member">allowFreeTx</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>=<sp/>protocolVersionIn;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" kindref="member">nScanningErrorCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" kindref="member">nLastScanningErrorBlockHeight</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_c_stormnode_broadcast_1a5f7014f4d8bd8b5a966921b55f50ef90" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_broadcast_1a47810d94d4efad26911a2a3c0745660f" kindref="member">CStormnodeBroadcast::CStormnodeBroadcast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>&amp;<sp/>sn)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a288aca8c8cbd786c2188ae5bc39c642a" kindref="member">activeState</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a506923ff67bd06fefba3a897828ce892" kindref="member">lastPing</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" kindref="member">cacheInputAge</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a60687ff2b6a277680c6d39eeee997532" kindref="member">cacheInputAge</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" kindref="member">cacheInputAgeBlock</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a80c11846fa792eb8466a37881b0c4954" kindref="member">cacheInputAgeBlock</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" kindref="member">unitTest</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a7e879cd7e4f39560cc846c5127a58afa" kindref="member">unitTest</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" kindref="member">allowFreeTx</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a1d256b346d4bee1e4d7a68db4c5e659f" kindref="member">allowFreeTx</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1ac74bbfb73c657430dba45308a6f7a013" kindref="member">nLastSsq</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" kindref="member">nScanningErrorCount</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a2f9e003508853f529c9ef70babe35fc0" kindref="member">nScanningErrorCount</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" kindref="member">nLastScanningErrorBlockHeight</ref><sp/>=<sp/>sn.<ref refid="class_c_stormnode_1a632651553ac07fe57ceea55049eb430f" kindref="member">nLastScanningErrorBlockHeight</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_broadcast_1a1492e5bc8fc2587de913ec8ffc9d18a8" kindref="member">CStormnodeBroadcast::CheckAndUpdate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nDos)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>signature<sp/>isn&apos;t<sp/>in<sp/>the<sp/>future<sp/>(past<sp/>is<sp/>OK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>&gt;<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>()<sp/>+<sp/>60<sp/>*<sp/>60)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>Signature<sp/>rejected,<sp/>too<sp/>far<sp/>into<sp/>the<sp/>future<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDos<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>vchPubKey(<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" kindref="member">begin</ref>(),<sp/><ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>vchPubKey2(<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>.<ref refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" kindref="member">begin</ref>(),<sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>.<ref refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>()<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>)<sp/>+<sp/>vchPubKey<sp/>+<sp/>vchPubKey2<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>&lt;<sp/><ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1a98392b86e945308c9c66f1cd4942a220" kindref="member">GetMinStormnodePaymentsProto</ref>())<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>ignoring<sp/>outdated<sp/>Stormnode<sp/>%s<sp/>protocol<sp/>version<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>(),<sp/><ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>pubkeyScript;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>pubkeyScript<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pubkeyScript.size()<sp/>!=<sp/>25)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>pubkey<sp/>the<sp/>wrong<sp/>size\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDos<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_script" kindref="compound">CScript</ref><sp/>pubkeyScript2;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>pubkeyScript2<sp/>=<sp/><ref refid="script_8cpp_1ae40f28d3b46c21033f6ee1f1200d0321" kindref="member">GetScriptForDestination</ref>(<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>.<ref refid="class_c_pub_key_1a9c1908fef34fd9e1c4b5e0ffd5d3834e" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pubkeyScript2.size()<sp/>!=<sp/>25)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>pubkey2<sp/>the<sp/>wrong<sp/>size\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDos<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aba540fd902366210a6ad6cd9a18fe763" kindref="member">scriptSig</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>Ignore<sp/>Not<sp/>Empty<sp/>ScriptSig<sp/>%s\n&quot;</highlight><highlight class="normal">,<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>,<sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref>,<sp/>strMessage,<sp/>errorMessage)){</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>Got<sp/>bad<sp/>Stormnode<sp/>address<sp/>signature\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDos<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="chainparams_8cpp_1ace5c5b706d71a324a417dd2db394fd4a" kindref="member">Params</ref>().NetworkID()<sp/>==<sp/><ref refid="class_c_chain_params_1a5c4bb1d7c0205399ff06ee58fab7f176ab64dab5901e9dc8c7bf79daf9f7a2e1f" kindref="member">CChainParams::MAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>()<sp/>!=<sp/>31000)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a49df6ecaf59be814632c4d7755f26637" kindref="member">GetPort</ref>()<sp/>==<sp/>31000)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//search<sp/>existing<sp/>Stormnode<sp/>list,<sp/>this<sp/>is<sp/>where<sp/>we<sp/>update<sp/>existing<sp/>Stormnodes<sp/>with<sp/>new<sp/>snb<sp/>broadcasts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>such<sp/>stormnode<sp/>or<sp/>it&apos;s<sp/>not<sp/>enabled<sp/>yet/already,<sp/>nothing<sp/>to<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>==<sp/>NULL<sp/>||<sp/>(psn<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>!psn-&gt;<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>()))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sn.pubkey<sp/>=<sp/>pubkey,<sp/>IsVinAssociatedWithPubkey<sp/>is<sp/>validated<sp/>once<sp/>below,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>after<sp/>that<sp/>they<sp/>just<sp/>need<sp/>to<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn-&gt;<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref><sp/>==<sp/><ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref><sp/>&amp;&amp;<sp/>!psn-&gt;<ref refid="class_c_stormnode_1a01713cf27e8c36c1677a5e3bad2674b5" kindref="member">IsBroadcastedWithin</ref>(STORMNODE_MIN_SNB_SECONDS))<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//take<sp/>the<sp/>newest<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>Got<sp/>updated<sp/>entry<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn-&gt;<ref refid="class_c_stormnode_1a17bb6549af310bf95190260959a54c73" kindref="member">UpdateFromNewBroadcast</ref>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">))){</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;<ref refid="class_c_stormnode_1af2e9fab8911feaeb300b56702d933a67" kindref="member">Check</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn-&gt;<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>())<sp/><ref refid="class_c_stormnode_broadcast_1a6022d4cda8f1676aef30a3eaa2c512e5" kindref="member">Relay</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1ad9e9ad7392c3fa1ec0af4b178b3c62c0" kindref="member">AddedStormnodeList</ref>(<ref refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_broadcast_1ac182349ba784e20ce826eda23a239e3c" kindref="member">CStormnodeBroadcast::CheckInputsAndAdd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nDoS)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>a<sp/>stormnode<sp/>with<sp/>the<sp/>same<sp/>vin<sp/>(i.e.<sp/>already<sp/>activated)<sp/>and<sp/>this<sp/>snb<sp/>is<sp/>ours<sp/>(matches<sp/>our<sp/>Stormnode<sp/>privkey)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>nothing<sp/>to<sp/>do<sp/>here<sp/>for<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="util_8cpp_1a9a7204234b904bf6a0374facf8477796" kindref="member">fStormNode</ref><sp/>&amp;&amp;<sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref><sp/>==<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1aef2103b9e7fdc173e56dbb8f903e1f38" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref><sp/>&amp;&amp;<sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>==<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" kindref="member">pubKeyStormnode</ref>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>existing<sp/>Stormnode<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>do<sp/>here<sp/>if<sp/>we<sp/>already<sp/>know<sp/>about<sp/>this<sp/>stormnode<sp/>and<sp/>it&apos;s<sp/>(pre)enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn-&gt;<ref refid="class_c_stormnode_1a065cd7423a76fab999a3afdcc356ca91" kindref="member">IsEnabled</ref>()<sp/>||<sp/>psn-&gt;<ref refid="class_c_stormnode_1adb7b900b9608f2360b9cf97f7b836679" kindref="member">IsPreEnabled</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>not<sp/>enabled,<sp/>remove<sp/>old<sp/>SN<sp/>first<sp/>and<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1ad1732f409f53dc6186c6bb40894f1ed5" kindref="member">Remove</ref>(psn-&gt;<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_validation_state" kindref="compound">CValidationState</ref><sp/><ref refid="class_c_stormnode_1a8c9a83b0ce70988102d71ecfabe99aa0" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx;<sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Use<sp/>CMutableTransaction<sp/>here?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref><sp/>vout<sp/>=<sp/><ref refid="class_c_tx_out" kindref="compound">CTxOut</ref>(9999.99*COIN,<sp/><ref refid="sandstorm_8cpp_1addaca1e09682bd47278ce6208b48fd75" kindref="member">sandStormPool</ref>.<ref refid="class_c_sandstorm_pool_1afc6af6d3ef8fbe2c6238d3564145a015" kindref="member">collateralPubKey</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>tx.<ref refid="class_c_transaction_1a53fa787e4ea57374b4fa2a28e9a957b2" kindref="member">vin</ref>.push_back(<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>tx.<ref refid="class_c_transaction_1ae42c0032a464c3054c508017c7d040ef" kindref="member">vout</ref>.push_back(vout);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sync_8h_1aca08e7299069c2d60b8aa726fc550612" kindref="member">TRY_LOCK</ref>(<ref refid="main_8cpp_1a1ed8285f0fe3c6799c53265ce72552c8" kindref="member">cs_main</ref>,<sp/>lockMain);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lockMain)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>snb<sp/>fault,<sp/>let<sp/>it<sp/>to<sp/>be<sp/>checked<sp/>again<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.erase(<ref refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1ab5874fbd02e921572983d1530cc7d69e" kindref="member">mapSeenSyncSNB</ref>.erase(<ref refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Use<sp/>state<sp/>in<sp/>AcceptableInputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="main_8cpp_1af0be4f98088716bf40c79db7734b1d01" kindref="member">AcceptableInputs</ref>(<ref refid="main_8cpp_1a52890038ef379d29a1a8f3bd20dbe088" kindref="member">mempool</ref>,<sp/>state,<sp/>tx,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>nDos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.<ref refid="class_c_validation_state_1aba47277dbc39192208515fd8cc685879" kindref="member">IsInvalid</ref>(nDoS);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>Accepted<sp/>Stormnode<sp/>entry\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8cpp_1ae137d76bbcaf8d65fab905889b504e26" kindref="member">GetInputAge</ref>(<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>)<sp/>&lt;<sp/>STORMNODE_MIN_CONFIRMATIONS){</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>Input<sp/>must<sp/>have<sp/>at<sp/>least<sp/>%d<sp/>confirmations\n&quot;</highlight><highlight class="normal">,<sp/>STORMNODE_MIN_CONFIRMATIONS);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maybe<sp/>we<sp/>miss<sp/>few<sp/>blocks,<sp/>let<sp/>this<sp/>snb<sp/>to<sp/>be<sp/>checked<sp/>again<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.erase(<ref refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnode-sync_8cpp_1a4233fda53cfb60fd6ba208d981ac3fe7" kindref="member">stormnodeSync</ref>.<ref refid="class_c_stormnode_sync_1ab5874fbd02e921572983d1530cc7d69e" kindref="member">mapSeenSyncSNB</ref>.erase(<ref refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verify<sp/>that<sp/>sig<sp/>time<sp/>is<sp/>legit<sp/>in<sp/>past</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>at<sp/>least<sp/>not<sp/>earlier<sp/>than<sp/>block<sp/>when<sp/>10000<sp/>DRKSLK<sp/>tx<sp/>got<sp/>STORMNODE_MIN_CONFIRMATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/>hashBlock<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_transaction" kindref="compound">CTransaction</ref><sp/>tx2;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a7d2a4633e4e0e8e4cb9c881d45a496b5" kindref="member">GetTransaction</ref>(<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aed9312051a25380cbd7f123408ab7c20" kindref="member">prevout</ref>.<ref refid="class_c_out_point_1af131c7194a660558b0ff158f4efa7a28" kindref="member">hash</ref>,<sp/>tx2,<sp/>hashBlock);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Put<sp/>these<sp/>line<sp/>back...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*BlockMap::iterator<sp/>mi<sp/>=<sp/>mapBlockIndex.find(hashBlock);</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(mi<sp/>!=<sp/>mapBlockIndex.end()<sp/>&amp;&amp;<sp/>(*mi).second)</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CBlockIndex*<sp/>pSNIndex<sp/>=<sp/>(*mi).second;<sp/>//<sp/>block<sp/>for<sp/>10000<sp/>DRKSLK<sp/>tx<sp/>-&gt;<sp/>1<sp/>confirmation</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CBlockIndex*<sp/>pConfIndex<sp/>=<sp/>chainActive[pSNIndex-&gt;nHeight<sp/>+<sp/>STORMNODE_MIN_CONFIRMATIONS<sp/>-<sp/>1];<sp/>//<sp/>block<sp/>where<sp/>tx<sp/>got<sp/>STORMNODE_MIN_CONFIRMATIONS</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(pConfIndex-&gt;GetBlockTime()<sp/>&gt;<sp/>sigTime)</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;snb<sp/>-<sp/>Bad<sp/>sigTime<sp/>%d<sp/>for<sp/>Stormnode<sp/>%20s<sp/>%105s<sp/>(%i<sp/>conf<sp/>block<sp/>is<sp/>at<sp/>%d)\n&quot;,</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigTime,<sp/>addr.ToString(),<sp/>vin.ToString(),<sp/>STORMNODE_MIN_CONFIRMATIONS,<sp/>pConfIndex-&gt;GetBlockTime());</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;snb<sp/>-<sp/>Got<sp/>NEW<sp/>Stormnode<sp/>entry<sp/>-<sp/>%s<sp/>-<sp/>%s<sp/>-<sp/>%s<sp/>-<sp/>%lli<sp/>\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" kindref="member">GetHash</ref>().ToString(),<sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>(),<sp/><ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>(),<sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref><sp/>sn(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1aa4a3ed2fe6508a7922e7b7bd1cbf89c3" kindref="member">Add</ref>(sn);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>matches<sp/>our<sp/>Stormnode<sp/>privkey,<sp/>then<sp/>we&apos;ve<sp/>been<sp/>remotely<sp/>activated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref><sp/>==<sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1ab6f5257c65356ed738eb9c0187f42f33" kindref="member">pubKeyStormnode</ref><sp/>&amp;&amp;<sp/><ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref><sp/>==<sp/>PROTOCOL_VERSION){</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sandstorm_8cpp_1ac75d1761e37a1f1cbf71007bcbadf5b0" kindref="member">activeStormnode</ref>.<ref refid="class_c_active_stormnode_1af3925fdbe649c730b215b466680c0139" kindref="member">EnableHotColdStormNode</ref>(<ref refid="class_c_stormnode_1a62f5b0f436ca313afd612b07d687127f" kindref="member">vin</ref>,<sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLocal<sp/>=<sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_net_addr_1a81b190a7e0b05b93bf3097ba43e5cec1" kindref="member">IsRFC1918</ref>()<sp/>||<sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_net_addr_1a6cfa18f323424408cf7ace36c9a7c2e2" kindref="member">IsLocal</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isLocal)<sp/><ref refid="class_c_stormnode_broadcast_1a6022d4cda8f1676aef30a3eaa2c512e5" kindref="member">Relay</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="class_c_stormnode_broadcast_1a6022d4cda8f1676aef30a3eaa2c512e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_broadcast_1a6022d4cda8f1676aef30a3eaa2c512e5" kindref="member">CStormnodeBroadcast::Relay</ref>()</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref><sp/>inv(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8ab71287146f20951917e47c06023ae400" kindref="member">MSG_STORMNODE_ANNOUNCE</ref>,<sp/><ref refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a4f89efc38cf3b6bbb552ba9624bddfaf" kindref="member">RelayInv</ref>(inv);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_broadcast_1a882ba76a946d67b53211c561b52fcb0b" kindref="member">CStormnodeBroadcast::Sign</ref>(<ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>keyCollateralAddress)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>vchPubKey(<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" kindref="member">begin</ref>(),<sp/><ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>.<ref refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>vchPubKey2(<ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>.<ref refid="class_c_pub_key_1add9987e0d25aff11181f5ad70413994b" kindref="member">begin</ref>(),<sp/><ref refid="class_c_stormnode_1a43efb713c0d8e8f01b9ea593e025856b" kindref="member">pubkey2</ref>.<ref refid="class_c_pub_key_1aa559d2a4f2cbdec84c02a4adc18fa657" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref><sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/><ref refid="class_c_stormnode_1a31e0681a92d1f4d0da756b680c695d66" kindref="member">addr</ref>.<ref refid="class_c_service_1a336f9848fe9364e260c76499be0351a5" kindref="member">ToString</ref>()<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(<ref refid="class_c_stormnode_1ae77544488795272ca9615ed1e23d3b77" kindref="member">sigTime</ref>)<sp/>+<sp/>vchPubKey<sp/>+<sp/>vchPubKey2<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(<ref refid="class_c_stormnode_1aa2baa2da552179c9812730d4d9709502" kindref="member">protocolVersion</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" kindref="member">SignMessage</ref>(strMessage,<sp/>errorMessage,<sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref>,<sp/>keyCollateralAddress))<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodeBroadcast::Sign()<sp/>-<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(<ref refid="class_c_stormnode_1af241ab789726de5ba5d2caba082c3d01" kindref="member">pubkey</ref>,<sp/><ref refid="class_c_stormnode_1a7484d9ff7d908f3610f6946aba19a7b3" kindref="member">sig</ref>,<sp/>strMessage,<sp/>errorMessage))<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodeBroadcast::Sign()<sp/>-<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="class_c_stormnode_ping_1a68d6a920cf9edf6abdd95daf7001c309" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_ping_1a68d6a920cf9edf6abdd95daf7001c309" kindref="member">CStormnodePing::CStormnodePing</ref>()</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref><sp/>=<sp/><ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping_1a8a77ddaf2c49e48d306c05022e4e6b28" kindref="member">blockHash</ref><sp/>=<sp/><ref refid="classuint256" kindref="compound">uint256</ref>(0);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping_1af0e27eadd1e12a8c75540c012d835ce1" kindref="member">vchSig</ref><sp/>=<sp/>std::vector&lt;unsigned<sp/>char&gt;();</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_c_stormnode_ping_1a6c1ab32c3bb00188b9328e3b923198df" refkind="member"><highlight class="normal"><ref refid="class_c_stormnode_ping_1a68d6a920cf9edf6abdd95daf7001c309" kindref="member">CStormnodePing::CStormnodePing</ref>(<ref refid="class_c_tx_in" kindref="compound">CTxIn</ref>&amp;<sp/>newVin)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref><sp/>=<sp/>newVin;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Needs<sp/>chainActive<sp/>to<sp/>work.<sp/>put<sp/>this<sp/>back...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//blockHash<sp/>=<sp/>chainActive[pindexBest-&gt;nHeight<sp/>-<sp/>12]-&gt;GetBlockHash();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping_1af0e27eadd1e12a8c75540c012d835ce1" kindref="member">vchSig</ref><sp/>=<sp/>std::vector&lt;unsigned<sp/>char&gt;();</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_ping_1a7552ace33ea9f797431ada062ab0e2e8" kindref="member">CStormnodePing::Sign</ref>(<ref refid="class_c_key" kindref="compound">CKey</ref>&amp;<sp/>keyStormnode,<sp/><ref refid="class_c_pub_key" kindref="compound">CPubKey</ref>&amp;<sp/>pubKeyStormnode)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strStormNodeSignMessage;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>()<sp/>+<sp/><ref refid="class_c_stormnode_ping_1a8a77ddaf2c49e48d306c05022e4e6b28" kindref="member">blockHash</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>()<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a5c9a3f21a823f17e2831247573931698" kindref="member">SignMessage</ref>(strMessage,<sp/>errorMessage,<sp/><ref refid="class_c_stormnode_ping_1af0e27eadd1e12a8c75540c012d835ce1" kindref="member">vchSig</ref>,<sp/>keyStormnode))<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePing::Sign()<sp/>-<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(pubKeyStormnode,<sp/><ref refid="class_c_stormnode_ping_1af0e27eadd1e12a8c75540c012d835ce1" kindref="member">vchSig</ref>,<sp/>strMessage,<sp/>errorMessage))<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePing::Sign()<sp/>-<sp/>Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>errorMessage);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_ping_1af77ba52e9ff7531d09b61fefa372efa4" kindref="member">CStormnodePing::CheckAndUpdate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nDos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fRequireEnabled)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>&gt;<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>()<sp/>+<sp/>60<sp/>*<sp/>60)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>Signature<sp/>rejected,<sp/>too<sp/>far<sp/>into<sp/>the<sp/>future<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDos<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref><sp/>&lt;=<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>()<sp/>-<sp/>60<sp/>*<sp/>60)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>Signature<sp/>rejected,<sp/>too<sp/>far<sp/>into<sp/>the<sp/>past<sp/>%s<sp/>-<sp/>%d<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>(),<sp/><ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref>,<sp/><ref refid="timedata_8cpp_1a09f81b9c7650f898cf3cf305b87547e6" kindref="member">GetAdjustedTime</ref>());</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDos<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>New<sp/>Ping<sp/>-<sp/>%s<sp/>-<sp/>%s<sp/>-<sp/>%lli\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_ping_1a3e2dbb87bd2fd09f87d6306606a48acb" kindref="member">GetHash</ref>().ToString(),<sp/><ref refid="class_c_stormnode_ping_1a8a77ddaf2c49e48d306c05022e4e6b28" kindref="member">blockHash</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>(),<sp/><ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>we<sp/>have<sp/>this<sp/>Stormnode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode" kindref="compound">CStormnode</ref>*<sp/>psn<sp/>=<sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a346025e5a78a04ddfa80252ea1433c72" kindref="member">Find</ref>(<ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psn<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>psn-&gt;protocolVersion<sp/>&gt;=<sp/><ref refid="stormnode-payments_8cpp_1a1d528b1b067a2f669dfd90c513a97116" kindref="member">stormnodePayments</ref>.<ref refid="class_c_stormnode_payments_1a98392b86e945308c9c66f1cd4942a220" kindref="member">GetMinStormnodePaymentsProto</ref>())</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fRequireEnabled<sp/>&amp;&amp;<sp/>!psn-&gt;IsEnabled()<sp/>&amp;&amp;<sp/>!psn-&gt;IsPreEnabled())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LogPrintf(&quot;snping<sp/>-<sp/>Found<sp/>corresponding<sp/>sn<sp/>for<sp/>vin:<sp/>%s\n&quot;,<sp/>vin.ToString());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>only<sp/>if<sp/>there<sp/>is<sp/>no<sp/>known<sp/>ping<sp/>for<sp/>this<sp/>stormnode<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>ping<sp/>was<sp/>more<sp/>then<sp/>STORMNODE_MIN_SNP_SECONDS-60<sp/>ago<sp/>comparing<sp/>to<sp/>this<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!psn-&gt;IsPingedWithin(STORMNODE_MIN_SNP_SECONDS<sp/>-<sp/>60,<sp/><ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref>))</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strMessage<sp/>=<sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>()<sp/>+<sp/><ref refid="class_c_stormnode_ping_1a8a77ddaf2c49e48d306c05022e4e6b28" kindref="member">blockHash</ref>.<ref refid="classbase__uint_1ac3080a72402cadf28dbc9f9b69cc60be" kindref="member">ToString</ref>()<sp/>+<sp/>boost::lexical_cast&lt;std::string&gt;(<ref refid="class_c_stormnode_ping_1a9444c0ea28227eac0f3b3a0266ce0e9e" kindref="member">sigTime</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>errorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="sandstorm_8cpp_1af6ac9f9a52a47b030c3d4a38d13af2b1" kindref="member">sandStormSigner</ref>.<ref refid="class_c_sand_storm_signer_1a8d2fb7c16fcfb1be633101dd5436d3ae" kindref="member">VerifyMessage</ref>(psn-&gt;pubkey2,<sp/><ref refid="class_c_stormnode_ping_1af0e27eadd1e12a8c75540c012d835ce1" kindref="member">vchSig</ref>,<sp/>strMessage,<sp/>errorMessage))</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>Got<sp/>bad<sp/>Stormnode<sp/>address<sp/>signature<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDos<sp/>=<sp/>33;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(Amir):<sp/>Put<sp/>these<sp/>lines<sp/>back...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockMap::iterator<sp/>mi<sp/>=<sp/>mapBlockIndex.find(blockHash);</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(mi<sp/>!=<sp/>mapBlockIndex.end()<sp/>&amp;&amp;<sp/>(*mi).second)</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((*mi).second-&gt;nHeight<sp/>&lt;<sp/>nBestHeight<sp/>-<sp/>24)</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>Stormnode<sp/>%s<sp/>block<sp/>hash<sp/>%s<sp/>is<sp/>too<sp/>old\n&quot;,<sp/>vin.ToString(),<sp/>blockHash.ToString());</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Do<sp/>nothing<sp/>here<sp/>(no<sp/>Stormnode<sp/>update,<sp/>no<sp/>snping<sp/>relay)</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Let<sp/>this<sp/>node<sp/>to<sp/>be<sp/>visible<sp/>but<sp/>fail<sp/>to<sp/>accept<sp/>snping</highlight></codeline>
<codeline lineno="625"><highlight class="comment"></highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fDebug)<sp/>LogPrintf(&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>Stormnode<sp/>%s<sp/>block<sp/>hash<sp/>%s<sp/>is<sp/>unknown\n&quot;,<sp/>vin.ToString(),<sp/>blockHash.ToString());</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>maybe<sp/>we<sp/>stuck<sp/>so<sp/>we<sp/>shouldn&apos;t<sp/>ban<sp/>this<sp/>node,<sp/>just<sp/>fail<sp/>to<sp/>accept<sp/>it</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>TODO:<sp/>or<sp/>should<sp/>we<sp/>also<sp/>request<sp/>this<sp/>block?</highlight></codeline>
<codeline lineno="632"><highlight class="comment"></highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrintf(&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>Not<sp/>Implemented<sp/>Yet!&quot;);</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//}</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1afc02c0a4258fedfb316be612bb659ba8" kindref="member">LogPrintf</ref>(</highlight><highlight class="stringliteral">&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>Not<sp/>Implemented<sp/>Yet!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;lastPing<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//snodeman.mapSeenStormnodeBroadcast.lastPing<sp/>is<sp/>probably<sp/>outdated,<sp/>so<sp/>we&apos;ll<sp/>update<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_broadcast" kindref="compound">CStormnodeBroadcast</ref><sp/>snb(*psn);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint256" kindref="compound">uint256</ref><sp/><ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref><sp/>=<sp/>snb.<ref refid="class_c_stormnode_broadcast_1aec7747051b1004f1532817aba1da1a4c" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>.count(hash))<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stormnodeman_8cpp_1a1e28814877e5fb4ed8113e3621ca13ff" kindref="member">snodeman</ref>.<ref refid="class_c_stormnode_man_1a320b85dcbbc8f01a412c96b23bca5424" kindref="member">mapSeenStormnodeBroadcast</ref>[<ref refid="cache_8cc_1a11ecb029164e055f28f4123ce3748862" kindref="member">hash</ref>].lastPing<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psn-&gt;Check(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!psn-&gt;IsEnabled())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodePing::CheckAndUpdate<sp/>-Stormnode<sp/>ping<sp/>accepted,<sp/>vin:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_stormnode_ping_1a1f9010915780b43dffae9965531a951a" kindref="member">Relay</ref>();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>Stormnode<sp/>ping<sp/>arrived<sp/>too<sp/>early,<sp/>vin:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nDos<sp/>=<sp/>1;<sp/>//disable,<sp/>this<sp/>is<sp/>happening<sp/>frequently<sp/>and<sp/>causing<sp/>banned<sp/>peers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>LogPrint(</highlight><highlight class="stringliteral">&quot;stormnode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CStormnodePing::CheckAndUpdate<sp/>-<sp/>Couldn&apos;t<sp/>find<sp/>compatible<sp/>Stormnode<sp/>entry,<sp/>vin:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_c_stormnode_ping_1a83adfd5f2331b88deb60e44df9c878d9" kindref="member">vin</ref>.<ref refid="class_c_tx_in_1aeac9b3abd4b2d81e9ec4401d1383778d" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="class_c_stormnode_ping_1a1f9010915780b43dffae9965531a951a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_stormnode_ping_1a1f9010915780b43dffae9965531a951a" kindref="member">CStormnodePing::Relay</ref>()</highlight></codeline>
<codeline lineno="667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_inv" kindref="compound">CInv</ref><sp/>inv(<ref refid="protocol_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a7db86e0cc80a2f0ab7ddcaeccd68bdd4" kindref="member">MSG_STORMNODE_PING</ref>,<sp/><ref refid="class_c_stormnode_ping_1a3e2dbb87bd2fd09f87d6306606a48acb" kindref="member">GetHash</ref>());</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net_8cpp_1a4f89efc38cf3b6bbb552ba9624bddfaf" kindref="member">RelayInv</ref>(inv);</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/dev/ds-160209/src/stormnode.cpp"/>
  </compounddef>
</doxygen>
